

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 17 00:26:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=4,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=4,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=4,class=CODE,delta=1
   182                           	psect	text161,global,reloc=4,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=4,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=4,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	text177,global,reloc=4,class=CODE,delta=1
   199                           	psect	text178,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3756	offset	0
   242 ;;_main$3752	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_inp_index	offset	11
   247 ;;_k	offset	12
   248 ;;_j	offset	13
   249 ;;_i	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_data	offset=-1 (param)
   257 ;;_cmd	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_data	offset=-1 (param)
   260 ;;__this	offset=-2 (param)
   261 ;;_soc	offset	0
   262 ;;_slot	offset	2
   263 ;;_cvoltage	offset=-4 (param)
   264 ;;_h	offset=-1 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_i	offset=-1 (param)
   267 ;;_fsm	offset=-1 (param)
   268 ;;_channel	offset=-1 (param)
   269 ;;_mode	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_cmd	offset=-1 (param)
   272 ;;_i	offset	0
   273 ;;_h	offset=-1 (param)
   274 ;;_flipper	offset=-1 (param)
   275 ;;_f	offset	0
   276 ;;_ap	offset	6
   277 ;;_s	offset=-3 (param)
   278 ;;_fmt	offset=-5 (param)
   279 ;;_line	offset=-1 (param)
   280 ;;_vterm	offset=-2 (param)
   281 ;;_numMilliseconds	offset=-2 (param)
   282 ;;_vterm	offset=-1 (param)
   283 ;;_row	offset	0
   284 ;;_r	offset=-1 (param)
   285 ;;_c	offset=-2 (param)
   286 ;;_strPtr	offset=-4 (param)
   287 ;;_strPtr	offset=-1 (param)
   288 ;;_delay	offset=-4 (param)
   289 ;;_strPtr	offset=-1 (param)
   290 ;;_strPtr	offset=-2 (param)
   291 ;;__this	offset=-2 (param)
   292 ;;_clearBuffer	offset=-3 (param)
   293 ;;_s	offset	0
   294 ;;_k	offset	2
   295 ;;_dest	offset=-2 (param)
   296 ;;_c	offset=-4 (param)
   297 ;;_n	offset=-6 (param)
   298 ;;_ap	offset	0
   299 ;;_fmt	offset=-3 (param)
   300 ;;_cfmt	offset	0
   301 ;;_fp	offset=-2 (param)
   302 ;;_fmt	offset=-4 (param)
   303 ;;_ap	offset=-6 (param)
   304 ;;_vfpfcnvrt$5571	offset	0
   305 ;;_vfpfcnvrt$5582	offset	2
   306 ;;_vfpfcnvrt$5570	offset	4
   307 ;;_llu	offset	6
   308 ;;_ll	offset	14
   309 ;;_f	offset	22
   310 ;;_ct	offset	26
   311 ;;_cp	offset	29
   312 ;;_c	offset	31
   313 ;;_fp	offset=-2 (param)
   314 ;;_fmt	offset=-4 (param)
   315 ;;_ap	offset=-6 (param)
   316 ;;_xtoa$5556	offset	0
   317 ;;_xtoa$5555	offset	2
   318 ;;_n	offset	4
   319 ;;_c	offset	12
   320 ;;_i	offset	14
   321 ;;_w	offset	16
   322 ;;_p	offset	18
   323 ;;_fp	offset=-2 (param)
   324 ;;_d	offset=-10 (param)
   325 ;;_x	offset=-11 (param)
   326 ;;_toupper$6362	offset	0
   327 ;;_c	offset=-2 (param)
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_n	offset	0
   331 ;;_i	offset	8
   332 ;;_w	offset	10
   333 ;;_p	offset	12
   334 ;;_fp	offset=-2 (param)
   335 ;;_d	offset=-10 (param)
   336 ;;_counter	offset	0
   337 ;;_dividend	offset=-8 (param)
   338 ;;_divisor	offset=-16 (param)
   339 ;;_quotient	offset	0
   340 ;;_counter	offset	8
   341 ;;_dividend	offset=-8 (param)
   342 ;;_divisor	offset=-16 (param)
   343 ;;_r	offset	0
   344 ;;_l	offset	2
   345 ;;__l	offset=-2 (param)
   346 ;;__r	offset=-4 (param)
   347 ;;_n	offset=-6 (param)
   348 ;;_nuls	offset	0
   349 ;;_l	offset	7
   350 ;;_p	offset	9
   351 ;;_cp	offset	11
   352 ;;_w	offset	13
   353 ;;_i	offset	15
   354 ;;_fp	offset=-2 (param)
   355 ;;_s	offset=-4 (param)
   356 ;;_efgtoa$5528	offset	0
   357 ;;_efgtoa$5527	offset	2
   358 ;;_efgtoa$5526	offset	4
   359 ;;_efgtoa$5522	offset	6
   360 ;;_efgtoa$5518	offset	8
   361 ;;_efgtoa$5517	offset	10
   362 ;;_u	offset	12
   363 ;;_g	offset	16
   364 ;;_l	offset	20
   365 ;;_h	offset	24
   366 ;;_ou	offset	28
   367 ;;_n	offset	32
   368 ;;_e	offset	34
   369 ;;_i	offset	36
   370 ;;_w	offset	38
   371 ;;_p	offset	40
   372 ;;_sign	offset	42
   373 ;;_d	offset	44
   374 ;;_ne	offset	46
   375 ;;_m	offset	48
   376 ;;_pp	offset	50
   377 ;;_t	offset	52
   378 ;;_mode	offset	54
   379 ;;_nmode	offset	55
   380 ;;_fp	offset=-2 (param)
   381 ;;_f	offset=-6 (param)
   382 ;;_c	offset=-7 (param)
   383 ;;_tolower$6347	offset	0
   384 ;;_c	offset=-2 (param)
   385 ;;_c	offset=-2 (param)
   386 ;;_d	offset	0
   387 ;;_s	offset	2
   388 ;;_dest	offset=-2 (param)
   389 ;;_src	offset=-4 (param)
   390 ;;_u	offset	0
   391 ;;_m	offset	4
   392 ;;_e	offset	8
   393 ;;_x	offset=-4 (param)
   394 ;;_u	offset	0
   395 ;;_e	offset	4
   396 ;;_x	offset=-4 (param)
   397 ;;_exp1	offset	0
   398 ;;_sign1	offset	1
   399 ;;_f1	offset=-4 (param)
   400 ;;_f1	offset=-4 (param)
   401 ;;_ff1	offset=-4 (param)
   402 ;;_ff2	offset=-8 (param)
   403 ;;_sign	offset	0
   404 ;;_counter	offset	1
   405 ;;_dividend	offset=-2 (param)
   406 ;;_divisor	offset=-4 (param)
   407 ;;_quotient	offset	0
   408 ;;_sign	offset	2
   409 ;;_counter	offset	3
   410 ;;_dividend	offset=-2 (param)
   411 ;;_divisor	offset=-4 (param)
   412 ;;_dtoa$5494	offset	0
   413 ;;_n	offset	2
   414 ;;_i	offset	10
   415 ;;_s	offset	12
   416 ;;_w	offset	14
   417 ;;_p	offset	16
   418 ;;_fp	offset=-2 (param)
   419 ;;_d	offset=-10 (param)
   420 ;;_a	offset=-2 (param)
   421 ;;_sign	offset	0
   422 ;;_counter	offset	1
   423 ;;_dividend	offset=-8 (param)
   424 ;;_divisor	offset=-16 (param)
   425 ;;_quotient	offset	0
   426 ;;_sign	offset	8
   427 ;;_counter	offset	9
   428 ;;_dividend	offset=-8 (param)
   429 ;;_divisor	offset=-16 (param)
   430 ;;_w	offset	0
   431 ;;_fp	offset=-2 (param)
   432 ;;_c	offset=-3 (param)
   433 ;;_w	offset	0
   434 ;;_i	offset	2
   435 ;;_fp	offset=-2 (param)
   436 ;;_buf	offset=-4 (param)
   437 ;;_p	offset=-6 (param)
   438 ;;_a	offset	0
   439 ;;_s	offset=-2 (param)
   440 ;;_i	offset	0
   441 ;;_c	offset	2
   442 ;;_s	offset=-2 (param)
   443 ;;_fp	offset=-4 (param)
   444 ;;_c	offset=-2 (param)
   445 ;;_fp	offset=-4 (param)
   446 ;;_c	offset=-1 (param)
   447 ;;__this	offset=-2 (param)
   448 ;;_c	offset=-3 (param)
   449 ;;_atoi$6078	offset	0
   450 ;;_atoi$6076	offset	2
   451 ;;_atoi$6077	offset	4
   452 ;;_n	offset	5
   453 ;;_neg	offset	7
   454 ;;_s	offset=-2 (param)
   455 ;;_isspace$6127	offset	0
   456 ;;_c	offset=-2 (param)
   457 ;;_c	offset=-2 (param)
   458 ;;_vterm	offset=-1 (param)
   459 ;;_new_response_info	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_level	offset=-2 (param)
   462 ;;_dutyValue	offset=-2 (param)
   463 ;;_timer	offset=-1 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_count	offset=-3 (param)
   466 ;;_h	offset=-1 (param)
   467 ;;_u	offset	0
   468 ;;_x	offset=-4 (param)
   469 ;;_chan	offset=-1 (param)
   470 ;;_to_what	offset=-2 (param)
   471 ;;_u	offset	0
   472 ;;_s	offset=-2 (param)
   473 ;;_index	offset=-1 (param)
   474 ;;_arg	offset	0
   475 ;;_exp	offset	4
   476 ;;_sign	offset=-1 (param)
   477 ;;_val	offset=-5 (param)
   478 ;;_grs	offset	0
   479 ;;_rem	offset	4
   480 ;;_new_exp	offset	8
   481 ;;_aexp	offset	10
   482 ;;_bexp	offset	11
   483 ;;_sign	offset	12
   484 ;;_b	offset=-4 (param)
   485 ;;_a	offset=-8 (param)
   486 ;;_ff1	offset=-4 (param)
   487 ;;_ff2	offset=-8 (param)
   488 ;;_lp_speed	offset	0
   489 ;;_new	offset=-4 (param)
   490 ;;_bn	offset=-5 (param)
   491 ;;_slow	offset=-6 (param)
   492 ;;_b	offset=-4 (param)
   493 ;;_a	offset=-8 (param)
   494 ;;_grs	offset	0
   495 ;;_bexp	offset	1
   496 ;;_aexp	offset	2
   497 ;;_signs	offset	3
   498 ;;_b	offset=-4 (param)
   499 ;;_a	offset=-8 (param)
   500 ;;_prod	offset	0
   501 ;;_grs	offset	4
   502 ;;_temp	offset	8
   503 ;;_bexp	offset	10
   504 ;;_aexp	offset	11
   505 ;;_sign	offset	12
   506 ;;_b	offset=-4 (param)
   507 ;;_a	offset=-8 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_state	offset	0
   515 ;;_InterruptHandler	offset=-3 (param)
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_i	offset	0
   520 ;;_sw_value	offset	1
   521 ;;_timerVal	offset=-2 (param)
   522 ;;_light	offset	0
   523 ;;_mode	offset=-1 (param)
   524 ;;_chan	offset=-1 (param)
   525 ;;_to_what	offset=-2 (param)
   526 ;;_u	offset	0
   527 ;;_s	offset=-2 (param)
   528 ;;_index	offset=-1 (param)
   529 ;;_arg	offset	0
   530 ;;_exp	offset	4
   531 ;;_sign	offset=-1 (param)
   532 ;;_val	offset=-5 (param)
   533 ;;_b	offset=-4 (param)
   534 ;;_a	offset=-8 (param)
   535 ;;_grs	offset	0
   536 ;;_bexp	offset	1
   537 ;;_aexp	offset	2
   538 ;;_signs	offset	3
   539 ;;_b	offset=-4 (param)
   540 ;;_a	offset=-8 (param)
   541 ;;_prod	offset	0
   542 ;;_grs	offset	4
   543 ;;_temp	offset	8
   544 ;;_bexp	offset	10
   545 ;;_aexp	offset	11
   546 ;;_sign	offset	12
   547 ;;_b	offset=-4 (param)
   548 ;;_a	offset=-8 (param)
   549 ;;_grs	offset	0
   550 ;;_rem	offset	4
   551 ;;_new_exp	offset	8
   552 ;;_aexp	offset	10
   553 ;;_bexp	offset	11
   554 ;;_sign	offset	12
   555 ;;_b	offset=-4 (param)
   556 ;;_a	offset=-8 (param)
   557 ;;_ff1	offset=-4 (param)
   558 ;;_ff2	offset=-8 (param)
   559 ;;_timerVal	offset=-2 (param)
   560 ;;_adj	offset	0
   561 ;;_log_ptr	offset	4
   562 ;;_f	offset	0
   563 ;;_ap	offset	6
   564 ;;_s	offset=-3 (param)
   565 ;;_fmt	offset=-5 (param)
   566 ;;_cfmt	offset	0
   567 ;;_fp	offset=-2 (param)
   568 ;;_fmt	offset=-4 (param)
   569 ;;_ap	offset=-6 (param)
   570 ;;_vfpfcnvrt$5571	offset	0
   571 ;;_vfpfcnvrt$5582	offset	2
   572 ;;_vfpfcnvrt$5570	offset	4
   573 ;;_llu	offset	6
   574 ;;_ll	offset	14
   575 ;;_f	offset	22
   576 ;;_ct	offset	26
   577 ;;_cp	offset	29
   578 ;;_c	offset	31
   579 ;;_fp	offset=-2 (param)
   580 ;;_fmt	offset=-4 (param)
   581 ;;_ap	offset=-6 (param)
   582 ;;_xtoa$5556	offset	0
   583 ;;_xtoa$5555	offset	2
   584 ;;_n	offset	4
   585 ;;_c	offset	12
   586 ;;_i	offset	14
   587 ;;_w	offset	16
   588 ;;_p	offset	18
   589 ;;_fp	offset=-2 (param)
   590 ;;_d	offset=-10 (param)
   591 ;;_x	offset=-11 (param)
   592 ;;_toupper$6362	offset	0
   593 ;;_c	offset=-2 (param)
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_n	offset	0
   597 ;;_i	offset	8
   598 ;;_w	offset	10
   599 ;;_p	offset	12
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_counter	offset	0
   603 ;;_dividend	offset=-8 (param)
   604 ;;_divisor	offset=-16 (param)
   605 ;;_quotient	offset	0
   606 ;;_counter	offset	8
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_r	offset	0
   610 ;;_l	offset	2
   611 ;;__l	offset=-2 (param)
   612 ;;__r	offset=-4 (param)
   613 ;;_n	offset=-6 (param)
   614 ;;_nuls	offset	0
   615 ;;_l	offset	7
   616 ;;_p	offset	9
   617 ;;_cp	offset	11
   618 ;;_w	offset	13
   619 ;;_i	offset	15
   620 ;;_fp	offset=-2 (param)
   621 ;;_s	offset=-4 (param)
   622 ;;_efgtoa$5528	offset	0
   623 ;;_efgtoa$5527	offset	2
   624 ;;_efgtoa$5526	offset	4
   625 ;;_efgtoa$5522	offset	6
   626 ;;_efgtoa$5518	offset	8
   627 ;;_efgtoa$5517	offset	10
   628 ;;_u	offset	12
   629 ;;_g	offset	16
   630 ;;_l	offset	20
   631 ;;_h	offset	24
   632 ;;_ou	offset	28
   633 ;;_n	offset	32
   634 ;;_e	offset	34
   635 ;;_i	offset	36
   636 ;;_w	offset	38
   637 ;;_p	offset	40
   638 ;;_sign	offset	42
   639 ;;_d	offset	44
   640 ;;_ne	offset	46
   641 ;;_m	offset	48
   642 ;;_pp	offset	50
   643 ;;_t	offset	52
   644 ;;_mode	offset	54
   645 ;;_nmode	offset	55
   646 ;;_fp	offset=-2 (param)
   647 ;;_f	offset=-6 (param)
   648 ;;_c	offset=-7 (param)
   649 ;;_tolower$6347	offset	0
   650 ;;_c	offset=-2 (param)
   651 ;;_c	offset=-2 (param)
   652 ;;_d	offset	0
   653 ;;_s	offset	2
   654 ;;_dest	offset=-2 (param)
   655 ;;_src	offset=-4 (param)
   656 ;;_u	offset	0
   657 ;;_m	offset	4
   658 ;;_e	offset	8
   659 ;;_x	offset=-4 (param)
   660 ;;_u	offset	0
   661 ;;_e	offset	4
   662 ;;_x	offset=-4 (param)
   663 ;;_exp1	offset	0
   664 ;;_sign1	offset	1
   665 ;;_f1	offset=-4 (param)
   666 ;;_f1	offset=-4 (param)
   667 ;;_ff1	offset=-4 (param)
   668 ;;_ff2	offset=-8 (param)
   669 ;;_sign	offset	0
   670 ;;_counter	offset	1
   671 ;;_dividend	offset=-2 (param)
   672 ;;_divisor	offset=-4 (param)
   673 ;;_quotient	offset	0
   674 ;;_sign	offset	2
   675 ;;_counter	offset	3
   676 ;;_dividend	offset=-2 (param)
   677 ;;_divisor	offset=-4 (param)
   678 ;;_dtoa$5494	offset	0
   679 ;;_n	offset	2
   680 ;;_i	offset	10
   681 ;;_s	offset	12
   682 ;;_w	offset	14
   683 ;;_p	offset	16
   684 ;;_fp	offset=-2 (param)
   685 ;;_d	offset=-10 (param)
   686 ;;_a	offset=-2 (param)
   687 ;;_sign	offset	0
   688 ;;_counter	offset	1
   689 ;;_dividend	offset=-8 (param)
   690 ;;_divisor	offset=-16 (param)
   691 ;;_quotient	offset	0
   692 ;;_sign	offset	8
   693 ;;_counter	offset	9
   694 ;;_dividend	offset=-8 (param)
   695 ;;_divisor	offset=-16 (param)
   696 ;;_w	offset	0
   697 ;;_fp	offset=-2 (param)
   698 ;;_c	offset=-3 (param)
   699 ;;_w	offset	0
   700 ;;_i	offset	2
   701 ;;_fp	offset=-2 (param)
   702 ;;_buf	offset=-4 (param)
   703 ;;_p	offset=-6 (param)
   704 ;;_a	offset	0
   705 ;;_s	offset=-2 (param)
   706 ;;_i	offset	0
   707 ;;_c	offset	2
   708 ;;_s	offset=-2 (param)
   709 ;;_fp	offset=-4 (param)
   710 ;;_c	offset=-2 (param)
   711 ;;_fp	offset=-4 (param)
   712 ;;_c	offset=-1 (param)
   713 ;;__this	offset=-2 (param)
   714 ;;_c	offset=-3 (param)
   715 ;;_atoi$6078	offset	0
   716 ;;_atoi$6076	offset	2
   717 ;;_atoi$6077	offset	4
   718 ;;_n	offset	5
   719 ;;_neg	offset	7
   720 ;;_s	offset=-2 (param)
   721 ;;_isspace$6127	offset	0
   722 ;;_c	offset=-2 (param)
   723 ;;_c	offset=-2 (param)
   724 ;;_dsize	offset=-2 (param)
   725 ;;_u	offset	0
   726 ;;_x	offset=-4 (param)
   727 ;;_f1p	offset=-2 (param)
   728 ;;_f2	offset=-6 (param)
   729 ;;_timer	offset=-1 (param)
   730 ;;_count	offset=-3 (param)
   731 ;;_channel	offset=-1 (param)
   732 ;;_i	offset	0
   733                           
   734                           	psect	idataBIGRAM
   735  016B28                     __pidataBIGRAM:
   736                           	opt callstack 0
   737                           
   738                           ;initializer for _port_data
   739  016B28  FF                 	db	255
   740  016B29  00                 	db	0
   741  016B2A  FF                 	db	255
   742  016B2B  00                 	db	0
   743  016B2C  FF                 	db	255
   744  016B2D  00                 	db	0
   745  016B2E  FF                 	db	255
   746  016B2F  00                 	db	0
   747  016B30  FF                 	db	255
   748  016B31  00                 	db	0
   749  016B32  FF                 	db	255
   750  016B33  00                 	db	0
   751  016B34  FF                 	db	255
   752  016B35  00                 	db	0
   753  016B36  FF                 	db	255
   754  016B37  00                 	db	0
   755  016B38  00                 	db	0
   756  016B39  00                 	db	0
   757  016B3A  00                 	db	0
   758  016B3B  00                 	db	0
   759  016B3C  00                 	db	0
   760  016B3D  00                 	db	0
   761  016B3E  00                 	db	0
   762  016B3F  00                 	db	0
   763  016B40  00                 	db	0
   764  016B41  00                 	db	0
   765  016B42  00                 	db	0
   766  016B43  00                 	db	0
   767  016B44  00                 	db	0
   768  016B45  00                 	db	0
   769  016B46  00                 	db	0
   770  016B47  00                 	db	0
   771  016B48  00                 	db	0
   772  016B49  00                 	db	0
   773  016B4A  00                 	db	0
   774  016B4B  00                 	db	0
   775  016B4C  00                 	db	0
   776  016B4D  00                 	db	0
   777  016B4E  00                 	db	0
   778  016B4F  00                 	db	0
   779  016B50  00                 	db	0
   780  016B51  00                 	db	0
   781  016B52  00                 	db	0
   782  016B53  00                 	db	0
   783  016B54  00                 	db	0
   784  016B55  00                 	db	0
   785  016B56  00                 	db	0
   786  016B57  00                 	db	0
   787  016B58  00                 	db	0
   788  016B59  00                 	db	0
   789  016B5A  00                 	db	0
   790  016B5B  00                 	db	0
   791  016B5C  00                 	db	0
   792  016B5D  00                 	db	0
   793  016B5E  00                 	db	0
   794  016B5F  00                 	db	0
   795  016B60  00                 	db	0
   796  016B61  00                 	db	0
   797  016B62  00                 	db	0
   798  016B63  00                 	db	0
   799  016B64  00                 	db	0
   800  016B65  00                 	db	0
   801  016B66  00                 	db	0
   802  016B67  00                 	db	0
   803  016B68  00                 	db	0
   804  016B69  00                 	db	0
   805  016B6A  00                 	db	0
   806  016B6B  00                 	db	0
   807  016B6C  00                 	db	0
   808  016B6D  00                 	db	0
   809  016B6E  00                 	db	0
   810  016B6F  00                 	db	0
   811  016B70  00                 	db	0
   812  016B71  00                 	db	0
   813  016B72  00                 	db	0
   814  016B73  00                 	db	0
   815  016B74  00                 	db	0
   816  016B75  00                 	db	0
   817  016B76  00                 	db	0
   818  016B77  00                 	db	0
   819  016B78  00                 	db	0
   820  016B79  00                 	db	0
   821  016B7A  00                 	db	0
   822  016B7B  00                 	db	0
   823  016B7C  00                 	db	0
   824  016B7D  00                 	db	0
   825  016B7E  00                 	db	0
   826  016B7F  00                 	db	0
   827  016B80  00                 	db	0
   828  016B81  00                 	db	0
   829  016B82  00                 	db	0
   830  016B83  00                 	db	0
   831  016B84  00                 	db	0
   832  016B85  00                 	db	0
   833  016B86  00                 	db	0
   834  016B87  00                 	db	0
   835  016B88  00                 	db	0
   836  016B89  00                 	db	0
   837  016B8A  00                 	db	0
   838  016B8B  00                 	db	0
   839  016B8C  00                 	db	0
   840  016B8D  00                 	db	0
   841  016B8E  00                 	db	0
   842  016B8F  00                 	db	0
   843  016B90  00                 	db	0
   844  016B91  00                 	db	0
   845  016B92  00                 	db	0
   846  016B93  00                 	db	0
   847  016B94  00                 	db	0
   848  016B95  00                 	db	0
   849  016B96  00                 	db	0
   850  016B97  00                 	db	0
   851  016B98  00                 	db	0
   852  016B99  00                 	db	0
   853  016B9A  00                 	db	0
   854  016B9B  00                 	db	0
   855  016B9C  00                 	db	0
   856  016B9D  00                 	db	0
   857  016B9E  00                 	db	0
   858  016B9F  00                 	db	0
   859  016BA0  00                 	db	0
   860  016BA1  00                 	db	0
   861  016BA2  00                 	db	0
   862  016BA3  00                 	db	0
   863  016BA4  00                 	db	0
   864  016BA5  00                 	db	0
   865  016BA6  00                 	db	0
   866  016BA7  00                 	db	0
   867  016BA8  00                 	db	0
   868  016BA9  00                 	db	0
   869  016BAA  00                 	db	0
   870  016BAB  00                 	db	0
   871  016BAC  00                 	db	0
   872  016BAD  00                 	db	0
   873  016BAE  00                 	db	0
   874  016BAF  00                 	db	0
   875  016BB0  00                 	db	0
   876  016BB1  00                 	db	0
   877  016BB2  00                 	db	0
   878  016BB3  00                 	db	0
   879  016BB4  00                 	db	0
   880  016BB5  00                 	db	0
   881  016BB6  00                 	db	0
   882  016BB7  00                 	db	0
   883  016BB8  00                 	db	0
   884  016BB9  00                 	db	0
   885  016BBA  00                 	db	0
   886  016BBB  00                 	db	0
   887  016BBC  00                 	db	0
   888  016BBD  00                 	db	0
   889  016BBE  00                 	db	0
   890  016BBF  00                 	db	0
   891  016BC0  00                 	db	0
   892  016BC1  00                 	db	0
   893  016BC2  00                 	db	0
   894  016BC3  00                 	db	0
   895  016BC4  00                 	db	0
   896  016BC5  00                 	db	0
   897  016BC6  00                 	db	0
   898  016BC7  00                 	db	0
   899  016BC8  00                 	db	0
   900  016BC9  00                 	db	0
   901  016BCA  00                 	db	0
   902  016BCB  00                 	db	0
   903  016BCC  00                 	db	0
   904  016BCD  00                 	db	0
   905  016BCE  00                 	db	0
   906  016BCF  00                 	db	0
   907  016BD0  00                 	db	0
   908  016BD1  00                 	db	0
   909  016BD2  00                 	db	0
   910  016BD3  00                 	db	0
   911  016BD4  00                 	db	0
   912  016BD5  00                 	db	0
   913  016BD6  00                 	db	0
   914  016BD7  00                 	db	0
   915  016BD8  00                 	db	0
   916  016BD9  00                 	db	0
   917  016BDA  00                 	db	0
   918  016BDB  00                 	db	0
   919  016BDC  00                 	db	0
   920  016BDD  00                 	db	0
   921  016BDE  00                 	db	0
   922  016BDF  00                 	db	0
   923  016BE0  00                 	db	0
   924  016BE1  00                 	db	0
   925  016BE2  00                 	db	0
   926  016BE3  00                 	db	0
   927  016BE4  00                 	db	0
   928  016BE5  00                 	db	0
   929  016BE6  00                 	db	0
   930  016BE7  00                 	db	0
   931  016BE8  00                 	db	0
   932  016BE9  00                 	db	0
   933  016BEA  00                 	db	0
   934  016BEB  00                 	db	0
   935  016BEC  00                 	db	0
   936  016BED  00                 	db	0
   937  016BEE  00                 	db	0
   938  016BEF  00                 	db	0
   939  016BF0  00                 	db	0
   940  016BF1  00                 	db	0
   941  016BF2  00                 	db	0
   942  016BF3  00                 	db	0
   943  016BF4  00                 	db	0
   944  016BF5  00                 	db	0
   945  016BF6  00                 	db	0
   946  016BF7  00                 	db	0
   947  016BF8  00                 	db	0
   948  016BF9  00                 	db	0
   949  016BFA  00                 	db	0
   950  016BFB  00                 	db	0
   951  016BFC  00                 	db	0
   952  016BFD  00                 	db	0
   953  016BFE  00                 	db	0
   954  016BFF  00                 	db	0
   955  016C00  00                 	db	0
   956  016C01  00                 	db	0
   957  016C02  00                 	db	0
   958  016C03  00                 	db	0
   959  016C04  00                 	db	0
   960  016C05  00                 	db	0
   961  016C06  00                 	db	0
   962  016C07  00                 	db	0
   963  016C08  00                 	db	0
   964  016C09  00                 	db	0
   965  016C0A  00                 	db	0
   966  016C0B  00                 	db	0
   967  016C0C  00                 	db	0
   968  016C0D  00                 	db	0
   969  016C0E  00                 	db	0
   970  016C0F  00                 	db	0
   971  016C10  00                 	db	0
   972  016C11  00                 	db	0
   973  016C12  00                 	db	0
   974  016C13  00                 	db	0
   975  016C14  00                 	db	0
   976  016C15  00                 	db	0
   977  016C16  00                 	db	0
   978  016C17  00                 	db	0
   979  016C18  00                 	db	0
   980  016C19  00                 	db	0
   981  016C1A  00                 	db	0
   982  016C1B  00                 	db	0
   983  016C1C  00                 	db	0
   984  016C1D  00                 	db	0
   985  016C1E  00                 	db	0
   986  016C1F  00                 	db	0
   987  016C20  00                 	db	0
   988  016C21  00                 	db	0
   989  016C22  00                 	db	0
   990  016C23  00                 	db	0
   991  016C24  00                 	db	0
   992  016C25  00                 	db	0
   993  016C26  00                 	db	0
   994  016C27  00                 	db	0
   995  016C28  00                 	db	0
   996  016C29  00                 	db	0
   997  016C2A  00                 	db	0
   998  016C2B  00                 	db	0
   999  016C2C  00                 	db	0
  1000  016C2D  00                 	db	0
  1001  016C2E  00                 	db	0
  1002  016C2F  00                 	db	0
  1003  016C30  00                 	db	0
  1004  016C31  00                 	db	0
  1005  016C32  00                 	db	0
  1006  016C33  00                 	db	0
  1007  016C34  00                 	db	0
  1008  016C35  00                 	db	0
  1009  016C36  00                 	db	0
  1010  016C37  00                 	db	0
  1011  016C38  00                 	db	0
  1012  016C39  00                 	db	0
  1013  016C3A  00                 	db	0
  1014  016C3B  00                 	db	0
  1015  016C3C  00                 	db	0
  1016  016C3D  00                 	db	0
  1017  016C3E  00                 	db	0
  1018  016C3F  00                 	db	0
  1019  016C40  00                 	db	0
  1020  016C41  00                 	db	0
  1021  016C42  00                 	db	0
  1022  016C43  00                 	db	0
  1023  016C44  00                 	db	0
  1024  016C45  00                 	db	0
  1025  016C46  00                 	db	0
  1026  016C47  00                 	db	0
  1027  016C48  00                 	db	0
  1028  016C49  00                 	db	0
  1029  016C4A  00                 	db	0
  1030  016C4B  00                 	db	0
  1031  016C4C  00                 	db	0
  1032  016C4D  00                 	db	0
  1033  016C4E  00                 	db	0
  1034  016C4F  00                 	db	0
  1035  016C50  00                 	db	0
  1036  016C51  00                 	db	0
  1037  016C52  00                 	db	0
  1038  016C53  00                 	db	0
  1039  016C54  00                 	db	0
  1040  016C55  00                 	db	0
  1041  016C56  00                 	db	0
  1042  016C57  00                 	db	0
  1043  016C58  00                 	db	0
  1044  016C59  00                 	db	0
  1045  016C5A  00                 	db	0
  1046  016C5B  00                 	db	0
  1047  016C5C  00                 	db	0
  1048  016C5D  00                 	db	0
  1049  016C5E  00                 	db	0
  1050  016C5F  00                 	db	0
  1051  016C60  00                 	db	0
  1052  016C61  00                 	db	0
  1053  016C62  00                 	db	0
  1054  016C63  00                 	db	0
  1055  016C64  00                 	db	0
  1056  016C65  00                 	db	0
  1057  016C66  00                 	db	0
  1058  016C67  00                 	db	0
  1059  016C68  00                 	db	0
  1060  016C69  00                 	db	0
  1061  016C6A  00                 	db	0
  1062  016C6B  00                 	db	0
  1063  016C6C  00                 	db	0
  1064  016C6D  00                 	db	0
  1065  016C6E  00                 	db	0
  1066  016C6F  00                 	db	0
  1067  016C70  00                 	db	0
  1068  016C71  00                 	db	0
  1069  016C72  00                 	db	0
  1070  016C73  00                 	db	0
  1071  016C74  00                 	db	0
  1072  016C75  00                 	db	0
  1073  016C76  00                 	db	0
  1074  016C77  00                 	db	0
  1075  016C78  00                 	db	0
  1076  016C79  00                 	db	0
  1077  016C7A  00                 	db	0
  1078  016C7B  00                 	db	0
  1079  016C7C  00                 	db	0
  1080  016C7D  00                 	db	0
  1081  016C7E  00                 	db	0
  1082  016C7F  00                 	db	0
  1083  016C80  00                 	db	0
  1084  016C81  00                 	db	0
  1085  016C82  00                 	db	0
  1086  016C83  00                 	db	0
  1087  016C84  00                 	db	0
  1088  016C85  00                 	db	0
  1089  016C86  00                 	db	0
  1090  016C87  00                 	db	0
  1091  016C88  00                 	db	0
  1092  016C89  00                 	db	0
  1093  016C8A  00                 	db	0
  1094  016C8B  00                 	db	0
  1095  016C8C  00                 	db	0
  1096  016C8D  00                 	db	0
  1097  016C8E  00                 	db	0
  1098  016C8F  00                 	db	0
  1099  016C90  00                 	db	0
  1100  016C91  00                 	db	0
  1101  016C92  00                 	db	0
  1102  016C93  00                 	db	0
  1103  016C94  00                 	db	0
  1104  016C95  00                 	db	0
  1105  016C96  00                 	db	0
  1106  016C97  00                 	db	0
  1107  016C98  00                 	db	0
  1108  016C99  00                 	db	0
  1109  016C9A  00                 	db	0
  1110  016C9B  00                 	db	0
  1111  016C9C  00                 	db	0
  1112  016C9D  00                 	db	0
  1113  016C9E  00                 	db	0
  1114  016C9F  00                 	db	0
  1115  016CA0  00                 	db	0
  1116  016CA1  00                 	db	0
  1117  016CA2  00                 	db	0
  1118  016CA3  00                 	db	0
  1119  016CA4  00                 	db	0
  1120  016CA5  00                 	db	0
  1121  016CA6  00                 	db	0
  1122  016CA7  00                 	db	0
  1123  016CA8  00                 	db	0
  1124  016CA9  00                 	db	0
  1125  016CAA  00                 	db	0
  1126  016CAB  00                 	db	0
  1127  016CAC  00                 	db	0
  1128  016CAD  00                 	db	0
  1129  016CAE  00                 	db	0
  1130  016CAF  00                 	db	0
  1131  016CB0  00                 	db	0
  1132  016CB1  00                 	db	0
  1133  016CB2  00                 	db	0
  1134  016CB3  00                 	db	0
  1135  016CB4  00                 	db	0
  1136  016CB5  00                 	db	0
  1137  016CB6  00                 	db	0
  1138  016CB7  00                 	db	0
  1139  016CB8  00                 	db	0
  1140  016CB9  00                 	db	0
  1141  016CBA  00                 	db	0
  1142  016CBB  00                 	db	0
  1143  016CBC  00                 	db	0
  1144  016CBD  00                 	db	0
  1145  016CBE  00                 	db	0
  1146  016CBF  00                 	db	0
  1147  016CC0  00                 	db	0
  1148  016CC1  00                 	db	0
  1149  016CC2  00                 	db	0
  1150  016CC3  00                 	db	0
  1151  016CC4  00                 	db	0
  1152  016CC5  00                 	db	0
  1153  016CC6  00                 	db	0
  1154  016CC7  00                 	db	0
  1155  016CC8  00                 	db	0
  1156  016CC9  00                 	db	0
  1157  016CCA  00                 	db	0
  1158  016CCB  00                 	db	0
  1159  016CCC  00                 	db	0
  1160  016CCD  00                 	db	0
  1161  016CCE  00                 	db	0
  1162  016CCF  00                 	db	0
  1163  016CD0  00                 	db	0
  1164  016CD1  00                 	db	0
  1165  016CD2  00                 	db	0
  1166  016CD3  00                 	db	0
  1167  016CD4  00                 	db	0
  1168  016CD5  00                 	db	0
  1169  016CD6  00                 	db	0
  1170  016CD7  00                 	db	0
  1171  016CD8  00                 	db	0
  1172  016CD9  00                 	db	0
  1173  016CDA  00                 	db	0
  1174  016CDB  00                 	db	0
  1175  016CDC  00                 	db	0
  1176  016CDD  00                 	db	0
  1177  016CDE  00                 	db	0
  1178  016CDF  00                 	db	0
  1179  016CE0  00                 	db	0
  1180  016CE1  00                 	db	0
  1181  016CE2  00                 	db	0
  1182  016CE3  00                 	db	0
  1183  016CE4  00                 	db	0
  1184  016CE5  00                 	db	0
  1185  016CE6  00                 	db	0
  1186  016CE7  00                 	db	0
  1187  016CE8  00                 	db	0
  1188  016CE9  00                 	db	0
  1189  016CEA  00                 	db	0
  1190  016CEB  00                 	db	0
  1191  016CEC  00                 	db	0
  1192  016CED  00                 	db	0
  1193  016CEE  00                 	db	0
  1194  016CEF  00                 	db	0
  1195  016CF0  00                 	db	0
  1196  016CF1  00                 	db	0
  1197  016CF2  00                 	db	0
  1198  016CF3  00                 	db	0
  1199  016CF4  00                 	db	0
  1200  016CF5  00                 	db	0
  1201  016CF6  00                 	db	0
  1202  016CF7  00                 	db	0
  1203  016CF8  00                 	db	0
  1204  016CF9  00                 	db	0
  1205  016CFA  00                 	db	0
  1206  016CFB  00                 	db	0
  1207  016CFC  00                 	db	0
  1208  016CFD  00                 	db	0
  1209  016CFE  00                 	db	0
  1210  016CFF  00                 	db	0
  1211  016D00  00                 	db	0
  1212  016D01  00                 	db	0
  1213  016D02  00                 	db	0
  1214  016D03  00                 	db	0
  1215  016D04  00                 	db	0
  1216  016D05  00                 	db	0
  1217  016D06  00                 	db	0
  1218  016D07  00                 	db	0
  1219  016D08  00                 	db	0
  1220  016D09  00                 	db	0
  1221  016D0A  00                 	db	0
  1222  016D0B  00                 	db	0
  1223  016D0C  00                 	db	0
  1224  016D0D  00                 	db	0
  1225  016D0E  00                 	db	0
  1226  016D0F  00                 	db	0
  1227  016D10  00                 	db	0
  1228  016D11  00                 	db	0
  1229  016D12  00                 	db	0
  1230  016D13  00                 	db	0
  1231  016D14  00                 	db	0
  1232  016D15  00                 	db	0
  1233  016D16  00                 	db	0
  1234  016D17  00                 	db	0
  1235  016D18  00                 	db	0
  1236  016D19  00                 	db	0
  1237  016D1A  00                 	db	0
  1238  016D1B  00                 	db	0
  1239  016D1C  00                 	db	0
  1240  016D1D  00                 	db	0
  1241  016D1E  00                 	db	0
  1242  016D1F  00                 	db	0
  1243  016D20  00                 	db	0
  1244  016D21  00                 	db	0
  1245  016D22  00                 	db	0
  1246  016D23  00                 	db	0
  1247  016D24  00                 	db	0
  1248  016D25  00                 	db	0
  1249  016D26  00                 	db	0
  1250  016D27  00                 	db	0
  1251                           
  1252                           ;initializer for _C
  1253  016D28  0000               	dw	0
  1254  016D2A  0000               	dw	0
  1255  016D2C  0000               	dw	0
  1256  016D2E  0000               	dw	0
  1257  016D30  0000               	dw	0
  1258  016D32  0000               	dw	0
  1259  016D34  0000               	dw	0
  1260  016D36  0000               	dw	0
  1261  016D38  0000               	dw	0
  1262  016D3A  0000               	dw	0
  1263  016D3C  0000               	dw	0
  1264  016D3E  0000               	dw	0
  1265  016D40  0000               	dw	0
  1266  016D42  0000               	dw	0
  1267  016D44  0000               	dw	0
  1268  016D46  0000               	dw	0
  1269  016D48  0000               	dw	0
  1270  016D4A  0000               	dw	0
  1271  016D4C  0000               	dw	0
  1272  016D4E  0000               	dw	0
  1273  016D50  0000               	dw	0
  1274  016D52  0000               	dw	0
  1275  016D54  0000               	dw	0
  1276  016D56  0000               	dw	0
  1277  016D58  0000               	dw	0
  1278  016D5A  0000               	dw	0
  1279  016D5C  0000               	dw	0
  1280  016D5E  0000               	dw	0
  1281  016D60  0000               	dw	0
  1282  016D62  0000               	dw	0
  1283  016D64  0000               	dw	0
  1284  016D66  0000               	dw	0
  1285  016D68  0000               	dw	0
  1286  016D6A  0000               	dw	0
  1287  016D6C  0000               	dw	0
  1288  016D6E  0000               	dw	0
  1289  016D70  0000               	dw	0
  1290  016D72  0000               	dw	0
  1291  016D74  0000               	dw	0
  1292  016D76  0000               	dw	0
  1293  016D78  0000               	dw	0
  1294  016D7A  0000               	dw	0
  1295  016D7C  0000               	dw	0
  1296  016D7E  0000               	dw	0
  1297  016D80  0000               	dw	0
  1298  016D82  0000               	dw	0
  1299  016D84  0000               	dw	0
  1300  016D86  0000               	dw	0
  1301  016D88  0000               	dw	0
  1302  016D8A  0000               	dw	0
  1303  016D8C  0000               	dw	0
  1304  016D8E  0000               	dw	0
  1305  016D90  0000               	dw	0
  1306  016D92  0000               	dw	0
  1307  016D94  0000               	dw	0
  1308  016D96  0000               	dw	0
  1309  016D98  0000               	dw	0
  1310  016D9A  0000               	dw	0
  1311  016D9C  0000               	dw	0
  1312  016D9E  0000               	dw	0
  1313  016DA0  0000               	dw	0
  1314  016DA2  0000               	dw	0
  1315  016DA4  0000               	dw	0
  1316  016DA6  0000               	dw	0
  1317  016DA8  0000               	dw	0
  1318  016DAA  0000               	dw	0
  1319  016DAC  0000               	dw	0
  1320  016DAE  0000               	dw	0
  1321  016DB0  0000               	dw	0
  1322  016DB2  0000               	dw	0
  1323  016DB4  0000               	dw	0
  1324  016DB6  42FA               	dw	17146
  1325  016DB8  0000               	dw	0
  1326  016DBA  0000               	dw	0
  1327  016DBC  0000               	dw	0
  1328  016DBE  0000               	dw	0
  1329  016DC0  0000               	dw	0
  1330  016DC2  0000               	dw	0
  1331  016DC4  0000               	dw	0
  1332  016DC6  0000               	dw	0
  1333  016DC8  0000               	dw	0
  1334  016DCA  0000               	dw	0
  1335  016DCC  0000               	dw	0
  1336  016DCE  0000               	dw	0
  1337  016DD0  0000               	dw	0
  1338  016DD2  0000               	dw	0
  1339  016DD4  0000               	dw	0
  1340  016DD6  0000               	dw	0
  1341  016DD8  0000               	dw	0
  1342  016DDA  0000               	dw	0
  1343  016DDC  0000               	dw	0
  1344  016DDE  0000               	dw	0
  1345  016DE0  00                 	db	0
  1346  016DE1  01                 	db	1
  1347  016DE2  0000               	dw	0
  1348  016DE4  3F80               	dw	16256
  1349  016DE6  0000               	dw	0
  1350  016DE8  3F80               	dw	16256
  1351  016DEA  00                 	db	0
  1352  016DEB  00                 	db	0
  1353  016DEC  00                 	db	0
  1354  016DED  00                 	db	0
  1355  016DEE  00                 	db	0
  1356  016DEF  00                 	db	0
  1357  016DF0  00                 	db	0
  1358  016DF1  00                 	db	0
  1359  016DF2  00                 	db	0
  1360  016DF3  00                 	db	0
  1361  016DF4  00                 	db	0
  1362  016DF5  00                 	db	0
  1363  016DF6  00                 	db	0
  1364  016DF7  00                 	db	0
  1365  016DF8  00                 	db	0
  1366  016DF9  00                 	db	0
  1367  016DFA  00                 	db	0
  1368  016DFB  00                 	db	0
  1369  016DFC  00                 	db	0
  1370  016DFD  00                 	db	0
  1371  016DFE  00                 	db	0
  1372  016DFF  00                 	db	0
  1373  016E00  00                 	db	0
  1374  016E01  00                 	db	0
  1375  016E02  00                 	db	0
  1376  016E03  00                 	db	0
  1377  016E04  00                 	db	0
  1378  016E05  00                 	db	0
  1379  016E06  00                 	db	0
  1380  016E07  00                 	db	0
  1381  016E08  00                 	db	0
  1382  016E09  00                 	db	0
  1383  016E0A  00                 	db	0
  1384  016E0B  00                 	db	0
  1385  016E0C  00                 	db	0
  1386  016E0D  00                 	db	0
  1387  016E0E  00                 	db	0
  1388  016E0F  00                 	db	0
  1389  016E10  00                 	db	0
  1390  016E11  00                 	db	0
  1391  016E12  00                 	db	0
  1392  016E13  00                 	db	0
  1393  016E14  00                 	db	0
  1394  016E15  00                 	db	0
  1395  016E16  00                 	db	0
  1396  016E17  00                 	db	0
  1397  016E18  00                 	db	0
  1398  016E19  00                 	db	0
  1399  016E1A  00                 	db	0
  1400  016E1B  00                 	db	0
  1401  016E1C  00                 	db	0
  1402  016E1D  00                 	db	0
  1403  016E1E  00                 	db	0
  1404  016E1F  00                 	db	0
  1405  016E20  00                 	db	0
  1406  016E21  00                 	db	0
  1407  016E22  00                 	db	0
  1408  016E23  00                 	db	0
  1409  016E24  00                 	db	0
  1410  016E25  00                 	db	0
  1411  016E26  00                 	db	0
  1412  016E27  00                 	db	0
  1413  016E28  00                 	db	0
  1414  016E29  00                 	db	0
  1415  016E2A  00                 	db	0
  1416  016E2B  00                 	db	0
  1417  016E2C  00                 	db	0
  1418  016E2D  00                 	db	0
  1419  016E2E  00                 	db	0
  1420  016E2F  00                 	db	0
  1421  016E30  00                 	db	0
  1422  016E31  00                 	db	0
  1423  016E32  00                 	db	0
  1424  016E33  00                 	db	0
  1425  016E34  00                 	db	0
  1426  016E35  00                 	db	0
  1427  016E36  0000               	dw	0
  1428  016E38  0000               	dw	0
  1429  016E3A  0000               	dw	0
  1430  016E3C  0000               	dw	0
  1431  016E3E  0000               	dw	0
  1432  016E40  0000               	dw	0
  1433  016E42  0000               	dw	0
  1434  016E44  0000               	dw	0
  1435  016E46  0000               	dw	0
  1436  016E48  0000               	dw	0
  1437  016E4A  01                 	db	1
  1438  016E4B  00                 	db	0
  1439  016E4C  00                 	db	0
  1440  016E4D  00                 	db	0
  1441  016E4E  00                 	db	0
  1442  016E4F  00                 	db	0
  1443  016E50  00                 	db	0
  1444  016E51  00                 	db	0
  1445  016E52  00                 	db	0
  1446                           
  1447                           	psect	idataBANK0
  1448  01C086                     __pidataBANK0:
  1449                           	opt callstack 0
  1450                           
  1451                           ;initializer for stoa@F1166
  1452  01C086  28                 	db	40
  1453  01C087  6E                 	db	110
  1454  01C088  75                 	db	117
  1455  01C089  6C                 	db	108
  1456  01C08A  6C                 	db	108
  1457  01C08B  29                 	db	41
  1458  01C08C  00                 	db	0
  1459                           
  1460                           ;initializer for _H
  1461  01C08D  00                 	db	0
  1462  01C08E  00                 	db	0
  1463  01C08F  01                 	db	1
  1464  01C090  00                 	db	0
  1465  01C091  01                 	db	1
  1466  01C092  00                 	db	0
  1467  01C093  00                 	db	0
  1468                           
  1469                           	psect	idataBANK1
  1470  019E0C                     __pidataBANK1:
  1471                           	opt callstack 0
  1472                           
  1473                           ;initializer for _R
  1474  019E0C  0000               	dw	0
  1475  019E0E  0000               	dw	0
  1476  019E10  0000               	dw	0
  1477  019E12  0000               	dw	0
  1478  019E14  0000               	dw	0
  1479  019E16  0000               	dw	0
  1480  019E18  0000               	dw	0
  1481  019E1A  0000               	dw	0
  1482  019E1C  0000               	dw	0
  1483  019E1E  0000               	dw	0
  1484  019E20  0000               	dw	0
  1485  019E22  0000               	dw	0
  1486  019E24  0000               	dw	0
  1487  019E26  0000               	dw	0
  1488  019E28  0000               	dw	0
  1489  019E2A  0000               	dw	0
  1490  019E2C  0F67               	dw	3943
  1491  019E2E  0F8F               	dw	3983
  1492  019E30  0000               	dw	0
  1493  019E32  0000               	dw	0
  1494  019E34  0000               	dw	0
  1495  019E36  0000               	dw	0
  1496  019E38  00                 	db	0
  1497  019E39  0000               	dw	0
  1498  019E3B  00                 	db	0
  1499                           
  1500                           ;initializer for _V
  1501  019E3C  00                 	db	0
  1502  019E3D  00                 	db	0
  1503  019E3E  00                 	db	0
  1504  019E3F  00                 	db	0
  1505  019E40  00                 	db	0
  1506  019E41  00                 	db	0
  1507  019E42  00                 	db	0
  1508  019E43  00                 	db	0
  1509  019E44  00                 	db	0
  1510  019E45  00                 	db	0
  1511  019E46  00                 	db	0
  1512  019E47  00                 	db	0
  1513  019E48  00                 	db	0
  1514  019E49  00                 	db	0
  1515  019E4A  00                 	db	0
  1516  019E4B  00                 	db	0
  1517  019E4C  00                 	db	0
  1518  019E4D  00                 	db	0
  1519  019E4E  00                 	db	0
  1520  019E4F  00                 	db	0
  1521  019E50  00                 	db	0
  1522  019E51  00                 	db	0
  1523  019E52  00                 	db	0
  1524  019E53  00                 	db	0
  1525  019E54  00                 	db	0
  1526  019E55  00                 	db	0
  1527  019E56  00                 	db	0
  1528  019E57  00                 	db	0
  1529  019E58  00                 	db	0
  1530  019E59  00                 	db	0
  1531  019E5A  00                 	db	0
  1532  019E5B  00                 	db	0
  1533  019E5C  00                 	db	0
  1534  019E5D  00                 	db	0
  1535  019E5E  00                 	db	0
  1536  019E5F  00                 	db	0
  1537  019E60  00                 	db	0
  1538  019E61  00                 	db	0
  1539  019E62  00                 	db	0
  1540  019E63  00                 	db	0
  1541  019E64  00                 	db	0
  1542  019E65  00                 	db	0
  1543  019E66  00                 	db	0
  1544  019E67  00                 	db	0
  1545  019E68  00                 	db	0
  1546  019E69  00                 	db	0
  1547  019E6A  00                 	db	0
  1548  019E6B  00                 	db	0
  1549  019E6C  00                 	db	0
  1550  019E6D  00                 	db	0
  1551  019E6E  00                 	db	0
  1552  019E6F  00                 	db	0
  1553  019E70  00                 	db	0
  1554  019E71  00                 	db	0
  1555  019E72  00                 	db	0
  1556  019E73  00                 	db	0
  1557  019E74  00                 	db	0
  1558  019E75  00                 	db	0
  1559  019E76  00                 	db	0
  1560  019E77  00                 	db	0
  1561  019E78  00                 	db	0
  1562  019E79  00                 	db	0
  1563  019E7A  00                 	db	0
  1564  019E7B  00                 	db	0
  1565  019E7C  00                 	db	0
  1566  019E7D  00                 	db	0
  1567  019E7E  00                 	db	0
  1568  019E7F  00                 	db	0
  1569  019E80  00                 	db	0
  1570  019E81  00                 	db	0
  1571  019E82  00                 	db	0
  1572  019E83  00                 	db	0
  1573  019E84  00                 	db	0
  1574  019E85  00                 	db	0
  1575  019E86  00                 	db	0
  1576  019E87  00                 	db	0
  1577  019E88  00                 	db	0
  1578  019E89  00                 	db	0
  1579  019E8A  00                 	db	0
  1580  019E8B  00                 	db	0
  1581  019E8C  00                 	db	0
  1582  019E8D  00                 	db	0
  1583  019E8E  00                 	db	0
  1584  019E8F  00                 	db	0
  1585  019E90  00                 	db	0
  1586  019E91  00                 	db	0
  1587  019E92  00                 	db	0
  1588  019E93  00                 	db	0
  1589  019E94  00                 	db	0
  1590  019E95  00                 	db	0
  1591  019E96  00                 	db	0
  1592  019E97  00                 	db	0
  1593  019E98  00                 	db	0
  1594  019E99  00                 	db	0
  1595  019E9A  00                 	db	0
  1596  019E9B  00                 	db	0
  1597  019E9C  00                 	db	0
  1598  019E9D  00                 	db	0
  1599  019E9E  00                 	db	0
  1600  019E9F  00                 	db	0
  1601  019EA0  00                 	db	0
  1602  019EA1  00                 	db	0
  1603  019EA2  00                 	db	0
  1604  019EA3  00                 	db	0
  1605  019EA4  00                 	db	0
  1606  019EA5  00                 	db	0
  1607  019EA6  00                 	db	0
  1608  019EA7  00                 	db	0
  1609  019EA8  00                 	db	0
  1610  019EA9  00                 	db	0
  1611  019EAA  00                 	db	0
  1612  019EAB  00                 	db	0
  1613  019EAC  00                 	db	0
  1614  019EAD  00                 	db	0
  1615  019EAE  00                 	db	0
  1616  019EAF  00                 	db	0
  1617  019EB0  00                 	db	0
  1618  019EB1  00                 	db	0
  1619  019EB2  00                 	db	0
  1620  019EB3  00                 	db	0
  1621  019EB4  00                 	db	0
  1622  019EB5  00                 	db	0
  1623  019EB6  00                 	db	0
  1624  019EB7  00                 	db	0
  1625  019EB8  00                 	db	0
  1626  019EB9  00                 	db	0
  1627  019EBA  00                 	db	0
  1628  019EBB  00                 	db	0
  1629  019EBC  00                 	db	0
  1630  019EBD  0000               	dw	0
  1631  019EBF  0000               	dw	0
  1632  019EC1  0000               	dw	0
  1633  019EC3  0000               	dw	0
  1634  019EC5  00                 	db	0
  1635  019EC6  00                 	db	0
  1636  019EC7  00                 	db	0
  1637  019EC8  00                 	db	0
  1638  019EC9  00                 	db	0
  1639  019ECA  00                 	db	0
  1640  019ECB  0000               	dw	0
  1641  019ECD  0000               	dw	0
  1642  019ECF  0000               	dw	0
  1643  019ED1  0000               	dw	0
  1644  019ED3  0000               	dw	0
  1645  019ED5  0000               	dw	0
  1646  019ED7  00                 	db	0
  1647  019ED8  00                 	db	0
  1648  019ED9  00                 	db	0
  1649  019EDA  00                 	db	0
  1650  019EDB  00                 	db	0
  1651  019EDC  00                 	db	0
  1652  019EDD  00                 	db	0
  1653  019EDE  00                 	db	0
  1654  019EDF  00                 	db	0
  1655  019EE0  00                 	db	0
  1656  019EE1  00                 	db	0
  1657  019EE2  0000               	dw	0
  1658  019EE4  0000               	dw	0
  1659  019EE6  2D                 	db	45
  1660  019EE7  00                 	db	0
  1661  019EE8  00                 	db	0
  1662  019EE9  00                 	db	0
  1663  019EEA  00                 	db	0
  1664  019EEB  0000               	dw	0
  1665  019EED  0000               	dw	0
  1666  019EEF  0000               	dw	0
  1667  019EF1  0000               	dw	0
  1668  019EF3  0000               	dw	0
  1669  019EF5  0000               	dw	0
  1670  019EF7  0000               	dw	0
  1671  019EF9  0000               	dw	0
  1672                           
  1673                           	psect	mediumconst
  1674  00F9EA                     __pmediumconst:
  1675                           	opt callstack 0
  1676  00F9EA  00                 	db	0
  1677  00F9EB                     _BVSOC_TABLE:
  1678                           	opt callstack 0
  1679  00F9EB  59D8               	dw	23000
  1680  00F9ED  0000               	dw	0
  1681  00F9EF  0005               	dw	5
  1682  00F9F1  0000               	dw	0
  1683  00F9F3  5B68               	dw	23400
  1684  00F9F5  0000               	dw	0
  1685  00F9F7  000A               	dw	10
  1686  00F9F9  0000               	dw	0
  1687  00F9FB  5C30               	dw	23600
  1688  00F9FD  0000               	dw	0
  1689  00F9FF  0014               	dw	20
  1690  00FA01  0000               	dw	0
  1691  00FA03  5E38               	dw	24120
  1692  00FA05  0000               	dw	0
  1693  00FA07  0019               	dw	25
  1694  00FA09  0000               	dw	0
  1695  00FA0B  5E88               	dw	24200
  1696  00FA0D  0000               	dw	0
  1697  00FA0F  001E               	dw	30
  1698  00FA11  0000               	dw	0
  1699  00FA13  5F78               	dw	24440
  1700  00FA15  0000               	dw	0
  1701  00FA17  0028               	dw	40
  1702  00FA19  0000               	dw	0
  1703  00FA1B  5FDC               	dw	24540
  1704  00FA1D  0000               	dw	0
  1705  00FA1F  002D               	dw	45
  1706  00FA21  0000               	dw	0
  1707  00FA23  6018               	dw	24600
  1708  00FA25  0000               	dw	0
  1709  00FA27  0032               	dw	50
  1710  00FA29  0000               	dw	0
  1711  00FA2B  6046               	dw	24646
  1712  00FA2D  0000               	dw	0
  1713  00FA2F  0035               	dw	53
  1714  00FA31  0000               	dw	0
  1715  00FA33  607C               	dw	24700
  1716  00FA35  0000               	dw	0
  1717  00FA37  0037               	dw	55
  1718  00FA39  0000               	dw	0
  1719  00FA3B  60AE               	dw	24750
  1720  00FA3D  0000               	dw	0
  1721  00FA3F  0039               	dw	57
  1722  00FA41  0000               	dw	0
  1723  00FA43  60E0               	dw	24800
  1724  00FA45  0000               	dw	0
  1725  00FA47  003C               	dw	60
  1726  00FA49  0000               	dw	0
  1727  00FA4B  6112               	dw	24850
  1728  00FA4D  0000               	dw	0
  1729  00FA4F  003F               	dw	63
  1730  00FA51  0000               	dw	0
  1731  00FA53  615D               	dw	24925
  1732  00FA55  0000               	dw	0
  1733  00FA57  0043               	dw	67
  1734  00FA59  0000               	dw	0
  1735  00FA5B  61A8               	dw	25000
  1736  00FA5D  0000               	dw	0
  1737  00FA5F  0046               	dw	70
  1738  00FA61  0000               	dw	0
  1739  00FA63  61BC               	dw	25020
  1740  00FA65  0000               	dw	0
  1741  00FA67  0048               	dw	72
  1742  00FA69  0000               	dw	0
  1743  00FA6B  61D0               	dw	25040
  1744  00FA6D  0000               	dw	0
  1745  00FA6F  004B               	dw	75
  1746  00FA71  0000               	dw	0
  1747  00FA73  61DA               	dw	25050
  1748  00FA75  0000               	dw	0
  1749  00FA77  0050               	dw	80
  1750  00FA79  0000               	dw	0
  1751  00FA7B  61E4               	dw	25060
  1752  00FA7D  0000               	dw	0
  1753  00FA7F  0055               	dw	85
  1754  00FA81  0000               	dw	0
  1755  00FA83  61F8               	dw	25080
  1756  00FA85  0000               	dw	0
  1757  00FA87  005A               	dw	90
  1758  00FA89  0000               	dw	0
  1759  00FA8B  6208               	dw	25096
  1760  00FA8D  0000               	dw	0
  1761  00FA8F  005C               	dw	92
  1762  00FA91  0000               	dw	0
  1763  00FA93  6222               	dw	25122
  1764  00FA95  0000               	dw	0
  1765  00FA97  005D               	dw	93
  1766  00FA99  0000               	dw	0
  1767  00FA9B  6234               	dw	25140
  1768  00FA9D  0000               	dw	0
  1769  00FA9F  005F               	dw	95
  1770  00FAA1  0000               	dw	0
  1771  00FAA3  6248               	dw	25160
  1772  00FAA5  0000               	dw	0
  1773  00FAA7  0061               	dw	97
  1774  00FAA9  0000               	dw	0
  1775  00FAAB  625C               	dw	25180
  1776  00FAAD  0000               	dw	0
  1777  00FAAF  0064               	dw	100
  1778  00FAB1  0000               	dw	0
  1779  00FAB3  6784               	dw	26500
  1780  00FAB5  0000               	dw	0
  1781  00FAB7  0062               	dw	98
  1782  00FAB9  0000               	dw	0
  1783  00FABB                     __end_of_BVSOC_TABLE:
  1784                           	opt callstack 0
  1785  00FABB                     _T:
  1786                           	opt callstack 0
  1787  00FABB  63                 	db	99
  1788  00FABC  6F                 	db	111
  1789  00FABD  6D                 	db	109
  1790  00FABE  6D                 	db	109
  1791  00FABF  61                 	db	97
  1792  00FAC0  6E                 	db	110
  1793  00FAC1  64                 	db	100
  1794  00FAC2  73                 	db	115
  1795  00FAC3  20                 	db	32
  1796  00FAC4  31                 	db	49
  1797  00FAC5  00                 	db	0
  1798  00FAC6  00                 	db	0
  1799  00FAC7  00                 	db	0
  1800  00FAC8  00                 	db	0
  1801  00FAC9  00                 	db	0
  1802  00FACA  00                 	db	0
  1803  00FACB  00                 	db	0
  1804  00FACC  00                 	db	0
  1805  00FACD  64                 	db	100
  1806  00FACE  69                 	db	105
  1807  00FACF  73                 	db	115
  1808  00FAD0  70                 	db	112
  1809  00FAD1  6C                 	db	108
  1810  00FAD2  61                 	db	97
  1811  00FAD3  79                 	db	121
  1812  00FAD4  73                 	db	115
  1813  00FAD5  20                 	db	32
  1814  00FAD6  31                 	db	49
  1815  00FAD7  00                 	db	0
  1816  00FAD8  00                 	db	0
  1817  00FAD9  00                 	db	0
  1818  00FADA  00                 	db	0
  1819  00FADB  00                 	db	0
  1820  00FADC  00                 	db	0
  1821  00FADD  00                 	db	0
  1822  00FADE  00                 	db	0
  1823  00FADF  63                 	db	99
  1824  00FAE0  6F                 	db	111
  1825  00FAE1  6D                 	db	109
  1826  00FAE2  6D                 	db	109
  1827  00FAE3  61                 	db	97
  1828  00FAE4  6E                 	db	110
  1829  00FAE5  64                 	db	100
  1830  00FAE6  73                 	db	115
  1831  00FAE7  20                 	db	32
  1832  00FAE8  32                 	db	50
  1833  00FAE9  00                 	db	0
  1834  00FAEA  00                 	db	0
  1835  00FAEB  00                 	db	0
  1836  00FAEC  00                 	db	0
  1837  00FAED  00                 	db	0
  1838  00FAEE  00                 	db	0
  1839  00FAEF  00                 	db	0
  1840  00FAF0  00                 	db	0
  1841  00FAF1  64                 	db	100
  1842  00FAF2  69                 	db	105
  1843  00FAF3  73                 	db	115
  1844  00FAF4  70                 	db	112
  1845  00FAF5  6C                 	db	108
  1846  00FAF6  61                 	db	97
  1847  00FAF7  79                 	db	121
  1848  00FAF8  73                 	db	115
  1849  00FAF9  20                 	db	32
  1850  00FAFA  32                 	db	50
  1851  00FAFB  00                 	db	0
  1852  00FAFC  00                 	db	0
  1853  00FAFD  00                 	db	0
  1854  00FAFE  00                 	db	0
  1855  00FAFF  00                 	db	0
  1856  00FB00  00                 	db	0
  1857  00FB01  00                 	db	0
  1858  00FB02  00                 	db	0
  1859  00FB03  63                 	db	99
  1860  00FB04  6F                 	db	111
  1861  00FB05  6D                 	db	109
  1862  00FB06  6D                 	db	109
  1863  00FB07  61                 	db	97
  1864  00FB08  6E                 	db	110
  1865  00FB09  64                 	db	100
  1866  00FB0A  73                 	db	115
  1867  00FB0B  20                 	db	32
  1868  00FB0C  33                 	db	51
  1869  00FB0D  00                 	db	0
  1870  00FB0E  00                 	db	0
  1871  00FB0F  00                 	db	0
  1872  00FB10  00                 	db	0
  1873  00FB11  00                 	db	0
  1874  00FB12  00                 	db	0
  1875  00FB13  00                 	db	0
  1876  00FB14  00                 	db	0
  1877  00FB15  64                 	db	100
  1878  00FB16  69                 	db	105
  1879  00FB17  73                 	db	115
  1880  00FB18  70                 	db	112
  1881  00FB19  6C                 	db	108
  1882  00FB1A  61                 	db	97
  1883  00FB1B  79                 	db	121
  1884  00FB1C  73                 	db	115
  1885  00FB1D  20                 	db	32
  1886  00FB1E  33                 	db	51
  1887  00FB1F  00                 	db	0
  1888  00FB20  00                 	db	0
  1889  00FB21  00                 	db	0
  1890  00FB22  00                 	db	0
  1891  00FB23  00                 	db	0
  1892  00FB24  00                 	db	0
  1893  00FB25  00                 	db	0
  1894  00FB26  00                 	db	0
  1895  00FB27  63                 	db	99
  1896  00FB28  6F                 	db	111
  1897  00FB29  6D                 	db	109
  1898  00FB2A  6D                 	db	109
  1899  00FB2B  61                 	db	97
  1900  00FB2C  6E                 	db	110
  1901  00FB2D  64                 	db	100
  1902  00FB2E  73                 	db	115
  1903  00FB2F  20                 	db	32
  1904  00FB30  34                 	db	52
  1905  00FB31  00                 	db	0
  1906  00FB32  00                 	db	0
  1907  00FB33  00                 	db	0
  1908  00FB34  00                 	db	0
  1909  00FB35  00                 	db	0
  1910  00FB36  00                 	db	0
  1911  00FB37  00                 	db	0
  1912  00FB38  00                 	db	0
  1913  00FB39  64                 	db	100
  1914  00FB3A  69                 	db	105
  1915  00FB3B  73                 	db	115
  1916  00FB3C  70                 	db	112
  1917  00FB3D  6C                 	db	108
  1918  00FB3E  61                 	db	97
  1919  00FB3F  79                 	db	121
  1920  00FB40  73                 	db	115
  1921  00FB41  20                 	db	32
  1922  00FB42  34                 	db	52
  1923  00FB43  00                 	db	0
  1924  00FB44  00                 	db	0
  1925  00FB45  00                 	db	0
  1926  00FB46  00                 	db	0
  1927  00FB47  00                 	db	0
  1928  00FB48  00                 	db	0
  1929  00FB49  00                 	db	0
  1930  00FB4A  00                 	db	0
  1931  00FB4B                     __end_of_T:
  1932                           	opt callstack 0
  1933  00FB4B                     _spin:
  1934                           	opt callstack 0
  1935  00FB4B  7C                 	db	124
  1936  00FB4C  7C                 	db	124
  1937  00FB4D  2F                 	db	47
  1938  00FB4E  2F                 	db	47
  1939  00FB4F  2D                 	db	45
  1940  00FB50  2D                 	db	45
  1941  00FB51  00                 	db	0
  1942  00FB52  00                 	db	0
  1943  00FB53  00                 	db	0
  1944  00FB54  00                 	db	0
  1945  00FB55  00                 	db	0
  1946  00FB56  00                 	db	0
  1947  00FB57  00                 	db	0
  1948  00FB58  00                 	db	0
  1949  00FB59  00                 	db	0
  1950  00FB5A  00                 	db	0
  1951  00FB5B  00                 	db	0
  1952  00FB5C  00                 	db	0
  1953  00FB5D  00                 	db	0
  1954  00FB5E  00                 	db	0
  1955  00FB5F  7C                 	db	124
  1956  00FB60  7C                 	db	124
  1957  00FB61  2F                 	db	47
  1958  00FB62  2F                 	db	47
  1959  00FB63  2D                 	db	45
  1960  00FB64  2D                 	db	45
  1961  00FB65  5C                 	db	92
  1962  00FB66  5C                 	db	92
  1963  00FB67  00                 	db	0
  1964  00FB68  00                 	db	0
  1965  00FB69  00                 	db	0
  1966  00FB6A  00                 	db	0
  1967  00FB6B  00                 	db	0
  1968  00FB6C  00                 	db	0
  1969  00FB6D  00                 	db	0
  1970  00FB6E  00                 	db	0
  1971  00FB6F  00                 	db	0
  1972  00FB70  00                 	db	0
  1973  00FB71  00                 	db	0
  1974  00FB72  00                 	db	0
  1975  00FB73  4F                 	db	79
  1976  00FB74  4F                 	db	79
  1977  00FB75  4F                 	db	79
  1978  00FB76  4F                 	db	79
  1979  00FB77  4F                 	db	79
  1980  00FB78  4F                 	db	79
  1981  00FB79  2D                 	db	45
  1982  00FB7A  2D                 	db	45
  1983  00FB7B  5F                 	db	95
  1984  00FB7C  5F                 	db	95
  1985  00FB7D  2D                 	db	45
  1986  00FB7E  00                 	db	0
  1987  00FB7F  00                 	db	0
  1988  00FB80  00                 	db	0
  1989  00FB81  00                 	db	0
  1990  00FB82  00                 	db	0
  1991  00FB83  00                 	db	0
  1992  00FB84  00                 	db	0
  1993  00FB85  00                 	db	0
  1994  00FB86  00                 	db	0
  1995  00FB87  76                 	db	118
  1996  00FB88  76                 	db	118
  1997  00FB89  3C                 	db	60
  1998  00FB8A  3C                 	db	60
  1999  00FB8B  5E                 	db	94
  2000  00FB8C  5E                 	db	94
  2001  00FB8D  3E                 	db	62
  2002  00FB8E  3E                 	db	62
  2003  00FB8F  00                 	db	0
  2004  00FB90  00                 	db	0
  2005  00FB91  00                 	db	0
  2006  00FB92  00                 	db	0
  2007  00FB93  00                 	db	0
  2008  00FB94  00                 	db	0
  2009  00FB95  00                 	db	0
  2010  00FB96  00                 	db	0
  2011  00FB97  00                 	db	0
  2012  00FB98  00                 	db	0
  2013  00FB99  00                 	db	0
  2014  00FB9A  00                 	db	0
  2015  00FB9B  2E                 	db	46
  2016  00FB9C  2E                 	db	46
  2017  00FB9D  2A                 	db	42
  2018  00FB9E  2A                 	db	42
  2019  00FB9F  78                 	db	120
  2020  00FBA0  23                 	db	35
  2021  00FBA1  78                 	db	120
  2022  00FBA2  23                 	db	35
  2023  00FBA3  58                 	db	88
  2024  00FBA4  58                 	db	88
  2025  00FBA5  7C                 	db	124
  2026  00FBA6  7C                 	db	124
  2027  00FBA7  2D                 	db	45
  2028  00FBA8  2D                 	db	45
  2029  00FBA9  00                 	db	0
  2030  00FBAA  00                 	db	0
  2031  00FBAB  00                 	db	0
  2032  00FBAC  00                 	db	0
  2033  00FBAD  00                 	db	0
  2034  00FBAE  00                 	db	0
  2035  00FBAF  2E                 	db	46
  2036  00FBB0  2E                 	db	46
  2037  00FBB1  6F                 	db	111
  2038  00FBB2  6F                 	db	111
  2039  00FBB3  4F                 	db	79
  2040  00FBB4  4F                 	db	79
  2041  00FBB5  6F                 	db	111
  2042  00FBB6  6F                 	db	111
  2043  00FBB7  00                 	db	0
  2044  00FBB8  00                 	db	0
  2045  00FBB9  00                 	db	0
  2046  00FBBA  00                 	db	0
  2047  00FBBB  00                 	db	0
  2048  00FBBC  00                 	db	0
  2049  00FBBD  00                 	db	0
  2050  00FBBE  00                 	db	0
  2051  00FBBF  00                 	db	0
  2052  00FBC0  00                 	db	0
  2053  00FBC1  00                 	db	0
  2054  00FBC2  00                 	db	0
  2055  00FBC3                     __end_of_spin:
  2056                           	opt callstack 0
  2057  00FBC3  0000               	dw	0
  2058  00FBC5  3F80               	dw	16256
  2059  00FBC7  0000               	dw	0
  2060  00FBC9  3FC0               	dw	16320
  2061  00FBCB                     __end_of_bp:
  2062                           	opt callstack 0
  2063  00FBCB  AA00               	dw	43520
  2064  00FBCD  3FB8               	dw	16312
  2065  00FBCF                     __end_of_ivln2_h:
  2066                           	opt callstack 0
  2067  00FBCF  23C6               	dw	9158
  2068  00FBD1  B8F6               	dw	47350
  2069  00FBD3                     __end_of_cp_l:
  2070                           	opt callstack 0
  2071  00FBD3  4000               	dw	16384
  2072  00FBD5  3F76               	dw	16246
  2073  00FBD7                     __end_of_cp_h:
  2074                           	opt callstack 0
  2075  0000                     _IVTADL	set	14493
  2076  0000                     _IVTADH	set	14494
  2077  0000                     _IVTADU	set	14495
  2078  0000                     _PIR6bits	set	14758
  2079  0000                     _PIR4bits	set	14756
  2080  0000                     _PIE8bits	set	14744
  2081  0000                     _PIR8bits	set	14760
  2082  0000                     _SCANPR	set	14839
  2083  0000                     _DMA2PR	set	14836
  2084  0000                     _DMA1PR	set	14835
  2085  0000                     _MAINPR	set	14834
  2086  0000                     _ISRPR	set	14833
  2087  0000                     _PIE2bits	set	14738
  2088  0000                     _PIR2bits	set	14754
  2089  0000                     _PIE9bits	set	14745
  2090  0000                     _PIR9bits	set	14761
  2091  0000                     _PIE6bits	set	14742
  2092  0000                     _PIE3bits	set	14739
  2093  0000                     _PMD7	set	14791
  2094  0000                     _PMD6	set	14790
  2095  0000                     _PMD5	set	14789
  2096  0000                     _PMD4	set	14788
  2097  0000                     _PMD3	set	14787
  2098  0000                     _PMD2	set	14786
  2099  0000                     _PMD1	set	14785
  2100  0000                     _PMD0	set	14784
  2101  0000                     _OSCTUNE	set	14814
  2102  0000                     _OSCFRQ	set	14815
  2103  0000                     _OSCEN	set	14813
  2104  0000                     _OSCCON3	set	14811
  2105  0000                     _OSCCON1	set	14809
  2106  0000                     _IPR8bits	set	14728
  2107  0000                     _IPR9bits	set	14729
  2108  0000                     _IPR5bits	set	14725
  2109  0000                     _IPR1bits	set	14721
  2110  0000                     _IPR3bits	set	14723
  2111  0000                     _IPR6bits	set	14726
  2112  0000                     _IPR2bits	set	14722
  2113  0000                     _PIE5bits	set	14741
  2114  0000                     _PIE1bits	set	14737
  2115  0000                     _PIR5bits	set	14757
  2116  0000                     _PIR1bits	set	14753
  2117  0000                     _PLLR	set	118496
  2118  0000                     _SPI1SDIPPS	set	15071
  2119  0000                     _U1RXPPS	set	15077
  2120  0000                     _RC6PPS	set	14870
  2121  0000                     _RC5PPS	set	14869
  2122  0000                     _INT1PPS	set	15041
  2123  0000                     _RD1PPS	set	14873
  2124  0000                     _INT0PPS	set	15040
  2125  0000                     _RC3PPS	set	14867
  2126  0000                     _RB6PPS	set	14862
  2127  0000                     _SPI1SCKPPS	set	15070
  2128  0000                     _U2RXPPS	set	15080
  2129  0000                     _SLRCONF	set	14995
  2130  0000                     _SLRCONE	set	14979
  2131  0000                     _SLRCOND	set	14963
  2132  0000                     _SLRCONC	set	14947
  2133  0000                     _SLRCONB	set	14931
  2134  0000                     _SLRCONA	set	14915
  2135  0000                     _ODCOND	set	14962
  2136  0000                     _ODCONC	set	14946
  2137  0000                     _ODCONB	set	14930
  2138  0000                     _ODCONA	set	14914
  2139  0000                     _ODCONF	set	14994
  2140  0000                     _ODCONE	set	14978
  2141  0000                     _WPUC	set	14945
  2142  0000                     _WPUA	set	14913
  2143  0000                     _WPUB	set	14929
  2144  0000                     _WPUE	set	14977
  2145  0000                     _WPUF	set	14993
  2146  0000                     _WPUD	set	14961
  2147  0000                     _ANSELA	set	14912
  2148  0000                     _ANSELF	set	14992
  2149  0000                     _ANSELE	set	14976
  2150  0000                     _ANSELB	set	14928
  2151  0000                     _ANSELC	set	14944
  2152  0000                     _ANSELD	set	14960
  2153  0000                     _DMA2SSA	set	15321
  2154  0000                     _DMA1SSA	set	15353
  2155  0000                     _DMA2DSZ	set	15310
  2156  0000                     _DMA2SSZ	set	15319
  2157  0000                     _DMA2DSA	set	15312
  2158  0000                     _DMA1DSZ	set	15342
  2159  0000                     _DMA1SSZ	set	15351
  2160  0000                     _DMA1DSA	set	15344
  2161  0000                     _DMA2CON0bits	set	15324
  2162  0000                     _DMA2CON1bits	set	15325
  2163  0000                     _DMA1CON0bits	set	15356
  2164  0000                     _DMA1CON1bits	set	15357
  2165  0000                     _DMA2CON0	set	15324
  2166  0000                     _DMA2AIRQ	set	15326
  2167  0000                     _DMA2SIRQ	set	15327
  2168  0000                     _DMA2CON1	set	15325
  2169  0000                     _DMA1CON0	set	15356
  2170  0000                     _DMA1AIRQ	set	15358
  2171  0000                     _DMA1SIRQ	set	15359
  2172  0000                     _DMA1CON1	set	15357
  2173  0000                     _CLKRCON	set	15589
  2174  0000                     _CLKRCLK	set	15590
  2175  0000                     _SPI1INTFbits	set	15642
  2176  0000                     _SPI1CON0bits	set	15636
  2177  0000                     _SPI1RXB	set	15632
  2178  0000                     _SPI1TXB	set	15633
  2179  0000                     _SPI1TCNTL	set	15634
  2180  0000                     _SPI1CON0	set	15636
  2181  0000                     _SPI1CLK	set	15644
  2182  0000                     _SPI1BAUD	set	15641
  2183  0000                     _SPI1CON2	set	15638
  2184  0000                     _SPI1CON1	set	15637
  2185  0000                     _U2RXB	set	15824
  2186  0000                     _U2TXB	set	15826
  2187  0000                     _U2ERRIE	set	15842
  2188  0000                     _U2ERRIR	set	15841
  2189  0000                     _U2UIR	set	15840
  2190  0000                     _U2FIFO	set	15839
  2191  0000                     _U2BRGH	set	15838
  2192  0000                     _U2BRGL	set	15837
  2193  0000                     _U2CON2	set	15836
  2194  0000                     _U2CON1	set	15835
  2195  0000                     _U2CON0	set	15834
  2196  0000                     _U2P3L	set	15832
  2197  0000                     _U2P2L	set	15830
  2198  0000                     _U2P1L	set	15828
  2199  0000                     _U1RXB	set	15848
  2200  0000                     _U1ERRIE	set	15866
  2201  0000                     _U1ERRIR	set	15865
  2202  0000                     _U1UIR	set	15864
  2203  0000                     _U1FIFO	set	15863
  2204  0000                     _U1BRGH	set	15862
  2205  0000                     _U1BRGL	set	15861
  2206  0000                     _U1CON2	set	15860
  2207  0000                     _U1CON1	set	15859
  2208  0000                     _U1CON0	set	15858
  2209  0000                     _U1P3H	set	15857
  2210  0000                     _U1P3L	set	15856
  2211  0000                     _U1P2H	set	15855
  2212  0000                     _U1P2L	set	15854
  2213  0000                     _U1P1H	set	15853
  2214  0000                     _U1P1L	set	15852
  2215  0000                     _FVRCON	set	16065
  2216  0000                     _ADFLTRL	set	16102
  2217  0000                     _ADFLTRH	set	16103
  2218  0000                     _ADCON0bits	set	16120
  2219  0000                     _ADCON0	set	16120
  2220  0000                     _ADCLK	set	16127
  2221  0000                     _ADACT	set	16126
  2222  0000                     _ADREF	set	16125
  2223  0000                     _ADSTAT	set	16124
  2224  0000                     _ADCON3	set	16123
  2225  0000                     _ADCON2	set	16122
  2226  0000                     _ADCON1	set	16121
  2227  0000                     _ADPREH	set	16119
  2228  0000                     _ADPREL	set	16118
  2229  0000                     _ADCAP	set	16117
  2230  0000                     _ADACQH	set	16116
  2231  0000                     _ADACQL	set	16115
  2232  0000                     _ADPCH	set	16113
  2233  0000                     _ADRPT	set	16108
  2234  0000                     _ADACCU	set	16106
  2235  0000                     _ADSTPTH	set	16101
  2236  0000                     _ADSTPTL	set	16100
  2237  0000                     _ADUTHH	set	16097
  2238  0000                     _ADUTHL	set	16096
  2239  0000                     _ADLTHH	set	16095
  2240  0000                     _ADLTHL	set	16094
  2241  0000                     _CCPTMRS1bits	set	16223
  2242  0000                     _PORTFbits	set	16335
  2243  0000                     _LATFbits	set	16319
  2244  0000                     _LATCbits	set	16316
  2245  0000                     _LATDbits	set	16317
  2246  0000                     _PORTBbits	set	16331
  2247  0000                     _T3CONbits	set	16294
  2248  0000                     _T3CON	set	16294
  2249  0000                     _TMR3L	set	16292
  2250  0000                     _TMR3H	set	16293
  2251  0000                     _T3CLK	set	16297
  2252  0000                     _T3GATE	set	16296
  2253  0000                     _T3GCON	set	16295
  2254  0000                     _T2CON	set	16300
  2255  0000                     _T2TMR	set	16298
  2256  0000                     _T2PR	set	16299
  2257  0000                     _T2RST	set	16303
  2258  0000                     _T2HLT	set	16301
  2259  0000                     _T2CLKCON	set	16302
  2260  0000                     _PWM8DCL	set	16224
  2261  0000                     _PWM8DCH	set	16225
  2262  0000                     _PWM8CON	set	16226
  2263  0000                     _LATEbits	set	16318
  2264  0000                     _T5CONbits	set	16282
  2265  0000                     _T5CON	set	16282
  2266  0000                     _TMR5L	set	16280
  2267  0000                     _TMR5H	set	16281
  2268  0000                     _T5CLK	set	16285
  2269  0000                     _T5GATE	set	16284
  2270  0000                     _T5GCON	set	16283
  2271  0000                     _T6CON	set	16276
  2272  0000                     _T6TMR	set	16274
  2273  0000                     _T6PR	set	16275
  2274  0000                     _T6RST	set	16279
  2275  0000                     _T6HLT	set	16277
  2276  0000                     _T6CLKCON	set	16278
  2277  0000                     _TRISD	set	16325
  2278  0000                     _TRISC	set	16324
  2279  0000                     _TRISB	set	16323
  2280  0000                     _TRISA	set	16322
  2281  0000                     _TRISF	set	16327
  2282  0000                     _TRISE	set	16326
  2283  0000                     _LATC	set	16316
  2284  0000                     _LATB	set	16315
  2285  0000                     _LATF	set	16319
  2286  0000                     _LATA	set	16314
  2287  0000                     _LATD	set	16317
  2288  0000                     _LATE	set	16318
  2289  0000                     _IVTLOCKbits	set	16340
  2290  0000                     _IVTLOCK	set	16340
  2291  0000                     _INTCON0bits	set	16338
  2292  0000                     _GIE	set	130711
  2293  00FBD7                     STR_64:
  2294                           
  2295                           ; BSR set to: 57
  2296  00FBD7  20                 	db	32
  2297  00FBD8  25                 	db	37
  2298  00FBD9  63                 	db	99	;'c'
  2299  00FBDA  20                 	db	32
  2300  00FBDB  2C                 	db	44
  2301  00FBDC  25                 	db	37
  2302  00FBDD  6C                 	db	108	;'l'
  2303  00FBDE  75                 	db	117	;'u'
  2304  00FBDF  2C                 	db	44
  2305  00FBE0  25                 	db	37
  2306  00FBE1  34                 	db	52	;'4'
  2307  00FBE2  2E                 	db	46
  2308  00FBE3  34                 	db	52	;'4'
  2309  00FBE4  66                 	db	102	;'f'
  2310  00FBE5  2C                 	db	44
  2311  00FBE6  25                 	db	37
  2312  00FBE7  34                 	db	52	;'4'
  2313  00FBE8  2E                 	db	46
  2314  00FBE9  34                 	db	52	;'4'
  2315  00FBEA  66                 	db	102	;'f'
  2316  00FBEB  2C                 	db	44
  2317  00FBEC  25                 	db	37
  2318  00FBED  34                 	db	52	;'4'
  2319  00FBEE  2E                 	db	46
  2320  00FBEF  34                 	db	52	;'4'
  2321  00FBF0  66                 	db	102	;'f'
  2322  00FBF1  2C                 	db	44
  2323  00FBF2  25                 	db	37
  2324  00FBF3  34                 	db	52	;'4'
  2325  00FBF4  2E                 	db	46
  2326  00FBF5  34                 	db	52	;'4'
  2327  00FBF6  66                 	db	102	;'f'
  2328  00FBF7  2C                 	db	44
  2329  00FBF8  25                 	db	37
  2330  00FBF9  34                 	db	52	;'4'
  2331  00FBFA  2E                 	db	46
  2332  00FBFB  33                 	db	51	;'3'
  2333  00FBFC  66                 	db	102	;'f'
  2334  00FBFD  2C                 	db	44
  2335  00FBFE  25                 	db	37
  2336  00FBFF  34                 	db	52	;'4'
  2337  00FC00  2E                 	db	46
  2338  00FC01  33                 	db	51	;'3'
  2339  00FC02  66                 	db	102	;'f'
  2340  00FC03  2C                 	db	44
  2341  00FC04  25                 	db	37
  2342  00FC05  34                 	db	52	;'4'
  2343  00FC06  2E                 	db	46
  2344  00FC07  33                 	db	51	;'3'
  2345  00FC08  66                 	db	102	;'f'
  2346  00FC09  2C                 	db	44
  2347  00FC0A  25                 	db	37
  2348  00FC0B  34                 	db	52	;'4'
  2349  00FC0C  2E                 	db	46
  2350  00FC0D  33                 	db	51	;'3'
  2351  00FC0E  66                 	db	102	;'f'
  2352  00FC0F  2C                 	db	44
  2353  00FC10  25                 	db	37
  2354  00FC11  34                 	db	52	;'4'
  2355  00FC12  2E                 	db	46
  2356  00FC13  33                 	db	51	;'3'
  2357  00FC14  66                 	db	102	;'f'
  2358  00FC15  2C                 	db	44
  2359  00FC16  25                 	db	37
  2360  00FC17  34                 	db	52	;'4'
  2361  00FC18  2E                 	db	46
  2362  00FC19  33                 	db	51	;'3'
  2363  00FC1A  66                 	db	102	;'f'
  2364  00FC1B  2C                 	db	44
  2365  00FC1C  25                 	db	37
  2366  00FC1D  64                 	db	100	;'d'
  2367  00FC1E  2C                 	db	44
  2368  00FC1F  25                 	db	37
  2369  00FC20  64                 	db	100	;'d'
  2370  00FC21  2C                 	db	44
  2371  00FC22  25                 	db	37
  2372  00FC23  32                 	db	50	;'2'
  2373  00FC24  2E                 	db	46
  2374  00FC25  36                 	db	54	;'6'
  2375  00FC26  66                 	db	102	;'f'
  2376  00FC27  2C                 	db	44
  2377  00FC28  25                 	db	37
  2378  00FC29  34                 	db	52	;'4'
  2379  00FC2A  2E                 	db	46
  2380  00FC2B  33                 	db	51	;'3'
  2381  00FC2C  66                 	db	102	;'f'
  2382  00FC2D  2C                 	db	44
  2383  00FC2E  25                 	db	37
  2384  00FC2F  64                 	db	100	;'d'
  2385  00FC30  2C                 	db	44
  2386  00FC31  25                 	db	37
  2387  00FC32  64                 	db	100	;'d'
  2388  00FC33  2C                 	db	44
  2389  00FC34  25                 	db	37
  2390  00FC35  6C                 	db	108	;'l'
  2391  00FC36  75                 	db	117	;'u'
  2392  00FC37  2C                 	db	44
  2393  00FC38  25                 	db	37
  2394  00FC39  6C                 	db	108	;'l'
  2395  00FC3A  75                 	db	117	;'u'
  2396  00FC3B  2C                 	db	44
  2397  00FC3C  25                 	db	37
  2398  00FC3D  34                 	db	52	;'4'
  2399  00FC3E  2E                 	db	46
  2400  00FC3F  33                 	db	51	;'3'
  2401  00FC40  66                 	db	102	;'f'
  2402  00FC41  2C                 	db	44
  2403  00FC42  25                 	db	37
  2404  00FC43  34                 	db	52	;'4'
  2405  00FC44  2E                 	db	46
  2406  00FC45  33                 	db	51	;'3'
  2407  00FC46  66                 	db	102	;'f'
  2408  00FC47  2C                 	db	44
  2409  00FC48  25                 	db	37
  2410  00FC49  34                 	db	52	;'4'
  2411  00FC4A  2E                 	db	46
  2412  00FC4B  33                 	db	51	;'3'
  2413  00FC4C  66                 	db	102	;'f'
  2414  00FC4D  0D                 	db	13
  2415  00FC4E  0A                 	db	10
  2416  00FC4F  00                 	db	0
  2417  00FC50                     STR_17:
  2418                           
  2419                           ; BSR set to: 57
  2420  00FC50  52                 	db	82	;'R'
  2421  00FC51  31                 	db	49	;'1'
  2422  00FC52  20                 	db	32
  2423  00FC53  25                 	db	37
  2424  00FC54  32                 	db	50	;'2'
  2425  00FC55  2E                 	db	46
  2426  00FC56  33                 	db	51	;'3'
  2427  00FC57  66                 	db	102	;'f'
  2428  00FC58  20                 	db	32
  2429  00FC59  25                 	db	37
  2430  00FC5A  33                 	db	51	;'3'
  2431  00FC5B  2E                 	db	46
  2432  00FC5C  34                 	db	52	;'4'
  2433  00FC5D  66                 	db	102	;'f'
  2434  00FC5E  20                 	db	32
  2435  00FC5F  20                 	db	32
  2436  00FC60  20                 	db	32
  2437  00FC61  20                 	db	32
  2438  00FC62  20                 	db	32
  2439  00FC63  20                 	db	32
  2440  00FC64  20                 	db	32
  2441  00FC65  20                 	db	32
  2442  00FC66  20                 	db	32
  2443  00FC67  20                 	db	32
  2444  00FC68  20                 	db	32
  2445  00FC69  00                 	db	0
  2446  00FC6A                     STR_18:
  2447                           
  2448                           ; BSR set to: 57
  2449  00FC6A  52                 	db	82	;'R'
  2450  00FC6B  32                 	db	50	;'2'
  2451  00FC6C  20                 	db	32
  2452  00FC6D  25                 	db	37
  2453  00FC6E  32                 	db	50	;'2'
  2454  00FC6F  2E                 	db	46
  2455  00FC70  33                 	db	51	;'3'
  2456  00FC71  66                 	db	102	;'f'
  2457  00FC72  20                 	db	32
  2458  00FC73  25                 	db	37
  2459  00FC74  33                 	db	51	;'3'
  2460  00FC75  2E                 	db	46
  2461  00FC76  34                 	db	52	;'4'
  2462  00FC77  66                 	db	102	;'f'
  2463  00FC78  20                 	db	32
  2464  00FC79  20                 	db	32
  2465  00FC7A  20                 	db	32
  2466  00FC7B  20                 	db	32
  2467  00FC7C  20                 	db	32
  2468  00FC7D  20                 	db	32
  2469  00FC7E  20                 	db	32
  2470  00FC7F  20                 	db	32
  2471  00FC80  20                 	db	32
  2472  00FC81  20                 	db	32
  2473  00FC82  20                 	db	32
  2474  00FC83  00                 	db	0
  2475  00FC84                     STR_9:
  2476                           
  2477                           ; BSR set to: 57
  2478  00FC84  53                 	db	83	;'S'
  2479  00FC85  20                 	db	32
  2480  00FC86  53                 	db	83	;'S'
  2481  00FC87  25                 	db	37
  2482  00FC88  63                 	db	99	;'c'
  2483  00FC89  43                 	db	67	;'C'
  2484  00FC8A  20                 	db	32
  2485  00FC8B  25                 	db	37
  2486  00FC8C  64                 	db	100	;'d'
  2487  00FC8D  20                 	db	32
  2488  00FC8E  25                 	db	37
  2489  00FC8F  32                 	db	50	;'2'
  2490  00FC90  2E                 	db	46
  2491  00FC91  34                 	db	52	;'4'
  2492  00FC92  66                 	db	102	;'f'
  2493  00FC93  20                 	db	32
  2494  00FC94  20                 	db	32
  2495  00FC95  20                 	db	32
  2496  00FC96  20                 	db	32
  2497  00FC97  20                 	db	32
  2498  00FC98  20                 	db	32
  2499  00FC99  20                 	db	32
  2500  00FC9A  20                 	db	32
  2501  00FC9B  20                 	db	32
  2502  00FC9C  20                 	db	32
  2503  00FC9D  00                 	db	0
  2504  00FC9E                     
  2505                           ; BSR set to: 57
  2506  00FC9E  20                 	db	32
  2507  00FC9F  4D                 	db	77	;'M'
  2508  00FCA0  65                 	db	101	;'e'
  2509  00FCA1  73                 	db	115	;'s'
  2510  00FCA2  67                 	db	103	;'g'
  2511  00FCA3  20                 	db	32
  2512  00FCA4  25                 	db	37
  2513  00FCA5  64                 	db	100	;'d'
  2514  00FCA6  20                 	db	32
  2515  00FCA7  53                 	db	83	;'S'
  2516  00FCA8  74                 	db	116	;'t'
  2517  00FCA9  61                 	db	97	;'a'
  2518  00FCAA  63                 	db	99	;'c'
  2519  00FCAB  6B                 	db	107	;'k'
  2520  00FCAC  20                 	db	32
  2521  00FCAD  25                 	db	37
  2522  00FCAE  64                 	db	100	;'d'
  2523  00FCAF  20                 	db	32
  2524  00FCB0  20                 	db	32
  2525  00FCB1  20                 	db	32
  2526  00FCB2  20                 	db	32
  2527  00FCB3  20                 	db	32
  2528  00FCB4  20                 	db	32
  2529  00FCB5  00                 	db	0
  2530  00FCB6                     STR_37:
  2531                           
  2532                           ; BSR set to: 57
  2533  00FCB6  45                 	db	69	;'E'
  2534  00FCB7  53                 	db	83	;'S'
  2535  00FCB8  52                 	db	82	;'R'
  2536  00FCB9  20                 	db	32
  2537  00FCBA  20                 	db	32
  2538  00FCBB  25                 	db	37
  2539  00FCBC  32                 	db	50	;'2'
  2540  00FCBD  2E                 	db	46
  2541  00FCBE  36                 	db	54	;'6'
  2542  00FCBF  66                 	db	102	;'f'
  2543  00FCC0  20                 	db	32
  2544  00FCC1  20                 	db	32
  2545  00FCC2  20                 	db	32
  2546  00FCC3  20                 	db	32
  2547  00FCC4  20                 	db	32
  2548  00FCC5  20                 	db	32
  2549  00FCC6  20                 	db	32
  2550  00FCC7  20                 	db	32
  2551  00FCC8  20                 	db	32
  2552  00FCC9  20                 	db	32
  2553  00FCCA  20                 	db	32
  2554  00FCCB  20                 	db	32
  2555  00FCCC  00                 	db	0
  2556  00FCCD                     STR_36:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FCCD  53                 	db	83	;'S'
  2560  00FCCE  25                 	db	37
  2561  00FCCF  63                 	db	99	;'c'
  2562  00FCD0  43                 	db	67	;'C'
  2563  00FCD1  20                 	db	32
  2564  00FCD2  25                 	db	37
  2565  00FCD3  64                 	db	100	;'d'
  2566  00FCD4  20                 	db	32
  2567  00FCD5  52                 	db	82	;'R'
  2568  00FCD6  55                 	db	85	;'U'
  2569  00FCD7  4E                 	db	78	;'N'
  2570  00FCD8  20                 	db	32
  2571  00FCD9  25                 	db	37
  2572  00FCDA  64                 	db	100	;'d'
  2573  00FCDB  20                 	db	32
  2574  00FCDC  20                 	db	32
  2575  00FCDD  20                 	db	32
  2576  00FCDE  20                 	db	32
  2577  00FCDF  20                 	db	32
  2578  00FCE0  20                 	db	32
  2579  00FCE1  20                 	db	32
  2580  00FCE2  20                 	db	32
  2581  00FCE3  00                 	db	0
  2582  00FCE4                     STR_34:
  2583                           
  2584                           ; BSR set to: 57
  2585  00FCE4  42                 	db	66	;'B'
  2586  00FCE5  41                 	db	65	;'A'
  2587  00FCE6  54                 	db	84	;'T'
  2588  00FCE7  54                 	db	84	;'T'
  2589  00FCE8  20                 	db	32
  2590  00FCE9  50                 	db	80	;'P'
  2591  00FCEA  57                 	db	87	;'W'
  2592  00FCEB  52                 	db	82	;'R'
  2593  00FCEC  20                 	db	32
  2594  00FCED  25                 	db	37
  2595  00FCEE  33                 	db	51	;'3'
  2596  00FCEF  2E                 	db	46
  2597  00FCF0  32                 	db	50	;'2'
  2598  00FCF1  66                 	db	102	;'f'
  2599  00FCF2  20                 	db	32
  2600  00FCF3  20                 	db	32
  2601  00FCF4  20                 	db	32
  2602  00FCF5  20                 	db	32
  2603  00FCF6  20                 	db	32
  2604  00FCF7  20                 	db	32
  2605  00FCF8  20                 	db	32
  2606  00FCF9  20                 	db	32
  2607  00FCFA  00                 	db	0
  2608  00FCFB                     STR_38:
  2609                           
  2610                           ; BSR set to: 57
  2611  00FCFB  52                 	db	82	;'R'
  2612  00FCFC  31                 	db	49	;'1'
  2613  00FCFD  20                 	db	32
  2614  00FCFE  25                 	db	37
  2615  00FCFF  32                 	db	50	;'2'
  2616  00FD00  2E                 	db	46
  2617  00FD01  33                 	db	51	;'3'
  2618  00FD02  66                 	db	102	;'f'
  2619  00FD03  20                 	db	32
  2620  00FD04  25                 	db	37
  2621  00FD05  33                 	db	51	;'3'
  2622  00FD06  2E                 	db	46
  2623  00FD07  34                 	db	52	;'4'
  2624  00FD08  66                 	db	102	;'f'
  2625  00FD09  20                 	db	32
  2626  00FD0A  20                 	db	32
  2627  00FD0B  20                 	db	32
  2628  00FD0C  20                 	db	32
  2629  00FD0D  20                 	db	32
  2630  00FD0E  20                 	db	32
  2631  00FD0F  20                 	db	32
  2632  00FD10  20                 	db	32
  2633  00FD11  00                 	db	0
  2634  00FD12                     STR_39:
  2635                           
  2636                           ; BSR set to: 57
  2637  00FD12  52                 	db	82	;'R'
  2638  00FD13  32                 	db	50	;'2'
  2639  00FD14  20                 	db	32
  2640  00FD15  25                 	db	37
  2641  00FD16  32                 	db	50	;'2'
  2642  00FD17  2E                 	db	46
  2643  00FD18  33                 	db	51	;'3'
  2644  00FD19  66                 	db	102	;'f'
  2645  00FD1A  20                 	db	32
  2646  00FD1B  25                 	db	37
  2647  00FD1C  33                 	db	51	;'3'
  2648  00FD1D  2E                 	db	46
  2649  00FD1E  34                 	db	52	;'4'
  2650  00FD1F  66                 	db	102	;'f'
  2651  00FD20  20                 	db	32
  2652  00FD21  20                 	db	32
  2653  00FD22  20                 	db	32
  2654  00FD23  20                 	db	32
  2655  00FD24  20                 	db	32
  2656  00FD25  20                 	db	32
  2657  00FD26  20                 	db	32
  2658  00FD27  20                 	db	32
  2659  00FD28  00                 	db	0
  2660  00FD29                     STR_35:
  2661                           
  2662                           ; BSR set to: 57
  2663  00FD29  42                 	db	66	;'B'
  2664  00FD2A  41                 	db	65	;'A'
  2665  00FD2B  48                 	db	72	;'H'
  2666  00FD2C  20                 	db	32
  2667  00FD2D  25                 	db	37
  2668  00FD2E  33                 	db	51	;'3'
  2669  00FD2F  2E                 	db	46
  2670  00FD30  32                 	db	50	;'2'
  2671  00FD31  66                 	db	102	;'f'
  2672  00FD32  20                 	db	32
  2673  00FD33  50                 	db	80	;'P'
  2674  00FD34  25                 	db	37
  2675  00FD35  33                 	db	51	;'3'
  2676  00FD36  2E                 	db	46
  2677  00FD37  32                 	db	50	;'2'
  2678  00FD38  66                 	db	102	;'f'
  2679  00FD39  20                 	db	32
  2680  00FD3A  20                 	db	32
  2681  00FD3B  20                 	db	32
  2682  00FD3C  20                 	db	32
  2683  00FD3D  20                 	db	32
  2684  00FD3E  20                 	db	32
  2685  00FD3F  00                 	db	0
  2686  00FD40                     STR_16:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FD40  45                 	db	69	;'E'
  2690  00FD41  53                 	db	83	;'S'
  2691  00FD42  52                 	db	82	;'R'
  2692  00FD43  20                 	db	32
  2693  00FD44  20                 	db	32
  2694  00FD45  25                 	db	37
  2695  00FD46  32                 	db	50	;'2'
  2696  00FD47  2E                 	db	46
  2697  00FD48  36                 	db	54	;'6'
  2698  00FD49  66                 	db	102	;'f'
  2699  00FD4A  20                 	db	32
  2700  00FD4B  20                 	db	32
  2701  00FD4C  20                 	db	32
  2702  00FD4D  20                 	db	32
  2703  00FD4E  20                 	db	32
  2704  00FD4F  20                 	db	32
  2705  00FD50  20                 	db	32
  2706  00FD51  20                 	db	32
  2707  00FD52  20                 	db	32
  2708  00FD53  20                 	db	32
  2709  00FD54  20                 	db	32
  2710  00FD55  00                 	db	0
  2711  00FD56                     STR_10:
  2712                           
  2713                           ; BSR set to: 57
  2714  00FD56  53                 	db	83	;'S'
  2715  00FD57  74                 	db	116	;'t'
  2716  00FD58  61                 	db	97	;'a'
  2717  00FD59  74                 	db	116	;'t'
  2718  00FD5A  69                 	db	105	;'i'
  2719  00FD5B  63                 	db	99	;'c'
  2720  00FD5C  20                 	db	32
  2721  00FD5D  53                 	db	83	;'S'
  2722  00FD5E  4F                 	db	79	;'O'
  2723  00FD5F  43                 	db	67	;'C'
  2724  00FD60  20                 	db	32
  2725  00FD61  25                 	db	37
  2726  00FD62  64                 	db	100	;'d'
  2727  00FD63  20                 	db	32
  2728  00FD64  20                 	db	32
  2729  00FD65  20                 	db	32
  2730  00FD66  20                 	db	32
  2731  00FD67  20                 	db	32
  2732  00FD68  20                 	db	32
  2733  00FD69  20                 	db	32
  2734  00FD6A  20                 	db	32
  2735  00FD6B  00                 	db	0
  2736  00FD6C                     STR_31:
  2737                           
  2738                           ; BSR set to: 57
  2739  00FD6C  42                 	db	66	;'B'
  2740  00FD6D  41                 	db	65	;'A'
  2741  00FD6E  54                 	db	84	;'T'
  2742  00FD6F  20                 	db	32
  2743  00FD70  49                 	db	73	;'I'
  2744  00FD71  57                 	db	87	;'W'
  2745  00FD72  48                 	db	72	;'H'
  2746  00FD73  20                 	db	32
  2747  00FD74  25                 	db	37
  2748  00FD75  34                 	db	52	;'4'
  2749  00FD76  2E                 	db	46
  2750  00FD77  31                 	db	49	;'1'
  2751  00FD78  66                 	db	102	;'f'
  2752  00FD79  20                 	db	32
  2753  00FD7A  20                 	db	32
  2754  00FD7B  20                 	db	32
  2755  00FD7C  20                 	db	32
  2756  00FD7D  20                 	db	32
  2757  00FD7E  20                 	db	32
  2758  00FD7F  20                 	db	32
  2759  00FD80  20                 	db	32
  2760  00FD81  00                 	db	0
  2761  00FD82                     STR_32:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FD82  42                 	db	66	;'B'
  2765  00FD83  41                 	db	65	;'A'
  2766  00FD84  54                 	db	84	;'T'
  2767  00FD85  20                 	db	32
  2768  00FD86  4F                 	db	79	;'O'
  2769  00FD87  57                 	db	87	;'W'
  2770  00FD88  48                 	db	72	;'H'
  2771  00FD89  20                 	db	32
  2772  00FD8A  25                 	db	37
  2773  00FD8B  34                 	db	52	;'4'
  2774  00FD8C  2E                 	db	46
  2775  00FD8D  31                 	db	49	;'1'
  2776  00FD8E  66                 	db	102	;'f'
  2777  00FD8F  20                 	db	32
  2778  00FD90  20                 	db	32
  2779  00FD91  20                 	db	32
  2780  00FD92  20                 	db	32
  2781  00FD93  20                 	db	32
  2782  00FD94  20                 	db	32
  2783  00FD95  20                 	db	32
  2784  00FD96  20                 	db	32
  2785  00FD97  00                 	db	0
  2786  00FD98                     STR_33:
  2787                           
  2788                           ; BSR set to: 57
  2789  00FD98  42                 	db	66	;'B'
  2790  00FD99  41                 	db	65	;'A'
  2791  00FD9A  54                 	db	84	;'T'
  2792  00FD9B  20                 	db	32
  2793  00FD9C  54                 	db	84	;'T'
  2794  00FD9D  57                 	db	87	;'W'
  2795  00FD9E  48                 	db	72	;'H'
  2796  00FD9F  20                 	db	32
  2797  00FDA0  25                 	db	37
  2798  00FDA1  34                 	db	52	;'4'
  2799  00FDA2  2E                 	db	46
  2800  00FDA3  31                 	db	49	;'1'
  2801  00FDA4  66                 	db	102	;'f'
  2802  00FDA5  20                 	db	32
  2803  00FDA6  20                 	db	32
  2804  00FDA7  20                 	db	32
  2805  00FDA8  20                 	db	32
  2806  00FDA9  20                 	db	32
  2807  00FDAA  20                 	db	32
  2808  00FDAB  20                 	db	32
  2809  00FDAC  20                 	db	32
  2810  00FDAD  00                 	db	0
  2811  00FDAE                     STR_27:
  2812                           
  2813                           ; BSR set to: 57
  2814  00FDAE  49                 	db	73	;'I'
  2815  00FDAF  4E                 	db	78	;'N'
  2816  00FDB0  56                 	db	86	;'V'
  2817  00FDB1  20                 	db	32
  2818  00FDB2  20                 	db	32
  2819  00FDB3  57                 	db	87	;'W'
  2820  00FDB4  48                 	db	72	;'H'
  2821  00FDB5  20                 	db	32
  2822  00FDB6  25                 	db	37
  2823  00FDB7  33                 	db	51	;'3'
  2824  00FDB8  2E                 	db	46
  2825  00FDB9  32                 	db	50	;'2'
  2826  00FDBA  66                 	db	102	;'f'
  2827  00FDBB  20                 	db	32
  2828  00FDBC  20                 	db	32
  2829  00FDBD  20                 	db	32
  2830  00FDBE  20                 	db	32
  2831  00FDBF  20                 	db	32
  2832  00FDC0  20                 	db	32
  2833  00FDC1  20                 	db	32
  2834  00FDC2  20                 	db	32
  2835  00FDC3  00                 	db	0
  2836  00FDC4                     STR_26:
  2837                           
  2838                           ; BSR set to: 57
  2839  00FDC4  4C                 	db	76	;'L'
  2840  00FDC5  4F                 	db	79	;'O'
  2841  00FDC6  41                 	db	65	;'A'
  2842  00FDC7  44                 	db	68	;'D'
  2843  00FDC8  20                 	db	32
  2844  00FDC9  57                 	db	87	;'W'
  2845  00FDCA  48                 	db	72	;'H'
  2846  00FDCB  20                 	db	32
  2847  00FDCC  25                 	db	37
  2848  00FDCD  33                 	db	51	;'3'
  2849  00FDCE  2E                 	db	46
  2850  00FDCF  32                 	db	50	;'2'
  2851  00FDD0  66                 	db	102	;'f'
  2852  00FDD1  20                 	db	32
  2853  00FDD2  20                 	db	32
  2854  00FDD3  20                 	db	32
  2855  00FDD4  20                 	db	32
  2856  00FDD5  20                 	db	32
  2857  00FDD6  20                 	db	32
  2858  00FDD7  20                 	db	32
  2859  00FDD8  20                 	db	32
  2860  00FDD9  00                 	db	0
  2861  00FDDA                     STR_25:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FDDA  50                 	db	80	;'P'
  2865  00FDDB  56                 	db	86	;'V'
  2866  00FDDC  20                 	db	32
  2867  00FDDD  25                 	db	37
  2868  00FDDE  63                 	db	99	;'c'
  2869  00FDDF  20                 	db	32
  2870  00FDE0  57                 	db	87	;'W'
  2871  00FDE1  48                 	db	72	;'H'
  2872  00FDE2  20                 	db	32
  2873  00FDE3  25                 	db	37
  2874  00FDE4  33                 	db	51	;'3'
  2875  00FDE5  2E                 	db	46
  2876  00FDE6  32                 	db	50	;'2'
  2877  00FDE7  66                 	db	102	;'f'
  2878  00FDE8  20                 	db	32
  2879  00FDE9  20                 	db	32
  2880  00FDEA  20                 	db	32
  2881  00FDEB  20                 	db	32
  2882  00FDEC  20                 	db	32
  2883  00FDED  20                 	db	32
  2884  00FDEE  20                 	db	32
  2885  00FDEF  00                 	db	0
  2886  00FDF0                     STR_24:
  2887                           
  2888                           ; BSR set to: 57
  2889  00FDF0  49                 	db	73	;'I'
  2890  00FDF1  4E                 	db	78	;'N'
  2891  00FDF2  56                 	db	86	;'V'
  2892  00FDF3  20                 	db	32
  2893  00FDF4  20                 	db	32
  2894  00FDF5  50                 	db	80	;'P'
  2895  00FDF6  57                 	db	87	;'W'
  2896  00FDF7  52                 	db	82	;'R'
  2897  00FDF8  20                 	db	32
  2898  00FDF9  25                 	db	37
  2899  00FDFA  33                 	db	51	;'3'
  2900  00FDFB  2E                 	db	46
  2901  00FDFC  32                 	db	50	;'2'
  2902  00FDFD  66                 	db	102	;'f'
  2903  00FDFE  20                 	db	32
  2904  00FDFF  20                 	db	32
  2905  00FE00  20                 	db	32
  2906  00FE01  20                 	db	32
  2907  00FE02  20                 	db	32
  2908  00FE03  20                 	db	32
  2909  00FE04  20                 	db	32
  2910  00FE05  00                 	db	0
  2911  00FE06                     STR_23:
  2912                           
  2913                           ; BSR set to: 57
  2914  00FE06  4C                 	db	76	;'L'
  2915  00FE07  4F                 	db	79	;'O'
  2916  00FE08  41                 	db	65	;'A'
  2917  00FE09  44                 	db	68	;'D'
  2918  00FE0A  20                 	db	32
  2919  00FE0B  50                 	db	80	;'P'
  2920  00FE0C  57                 	db	87	;'W'
  2921  00FE0D  52                 	db	82	;'R'
  2922  00FE0E  20                 	db	32
  2923  00FE0F  25                 	db	37
  2924  00FE10  33                 	db	51	;'3'
  2925  00FE11  2E                 	db	46
  2926  00FE12  32                 	db	50	;'2'
  2927  00FE13  66                 	db	102	;'f'
  2928  00FE14  20                 	db	32
  2929  00FE15  20                 	db	32
  2930  00FE16  20                 	db	32
  2931  00FE17  20                 	db	32
  2932  00FE18  20                 	db	32
  2933  00FE19  20                 	db	32
  2934  00FE1A  20                 	db	32
  2935  00FE1B  00                 	db	0
  2936  00FE1C                     STR_22:
  2937                           
  2938                           ; BSR set to: 57
  2939  00FE1C  50                 	db	80	;'P'
  2940  00FE1D  56                 	db	86	;'V'
  2941  00FE1E  20                 	db	32
  2942  00FE1F  25                 	db	37
  2943  00FE20  63                 	db	99	;'c'
  2944  00FE21  20                 	db	32
  2945  00FE22  50                 	db	80	;'P'
  2946  00FE23  57                 	db	87	;'W'
  2947  00FE24  52                 	db	82	;'R'
  2948  00FE25  20                 	db	32
  2949  00FE26  25                 	db	37
  2950  00FE27  33                 	db	51	;'3'
  2951  00FE28  2E                 	db	46
  2952  00FE29  32                 	db	50	;'2'
  2953  00FE2A  66                 	db	102	;'f'
  2954  00FE2B  20                 	db	32
  2955  00FE2C  20                 	db	32
  2956  00FE2D  20                 	db	32
  2957  00FE2E  20                 	db	32
  2958  00FE2F  20                 	db	32
  2959  00FE30  20                 	db	32
  2960  00FE31  00                 	db	0
  2961  00FE32                     STR_11:
  2962                           
  2963                           ; BSR set to: 57
  2964  00FE32  42                 	db	66	;'B'
  2965  00FE33  61                 	db	97	;'a'
  2966  00FE34  74                 	db	116	;'t'
  2967  00FE35  74                 	db	116	;'t'
  2968  00FE36  65                 	db	101	;'e'
  2969  00FE37  72                 	db	114	;'r'
  2970  00FE38  79                 	db	121	;'y'
  2971  00FE39  20                 	db	32
  2972  00FE3A  41                 	db	65	;'A'
  2973  00FE3B  68                 	db	104	;'h'
  2974  00FE3C  20                 	db	32
  2975  00FE3D  25                 	db	37
  2976  00FE3E  33                 	db	51	;'3'
  2977  00FE3F  2E                 	db	46
  2978  00FE40  32                 	db	50	;'2'
  2979  00FE41  66                 	db	102	;'f'
  2980  00FE42  20                 	db	32
  2981  00FE43  20                 	db	32
  2982  00FE44  20                 	db	32
  2983  00FE45  20                 	db	32
  2984  00FE46  20                 	db	32
  2985  00FE47  00                 	db	0
  2986  00FE48                     STR_29:
  2987                           
  2988                           ; BSR set to: 57
  2989  00FE48  42                 	db	66	;'B'
  2990  00FE49  56                 	db	86	;'V'
  2991  00FE4A  20                 	db	32
  2992  00FE4B  25                 	db	37
  2993  00FE4C  32                 	db	50	;'2'
  2994  00FE4D  2E                 	db	46
  2995  00FE4E  32                 	db	50	;'2'
  2996  00FE4F  66                 	db	102	;'f'
  2997  00FE50  20                 	db	32
  2998  00FE51  42                 	db	66	;'B'
  2999  00FE52  41                 	db	65	;'A'
  3000  00FE53  20                 	db	32
  3001  00FE54  25                 	db	37
  3002  00FE55  32                 	db	50	;'2'
  3003  00FE56  2E                 	db	46
  3004  00FE57  32                 	db	50	;'2'
  3005  00FE58  66                 	db	102	;'f'
  3006  00FE59  20                 	db	32
  3007  00FE5A  20                 	db	32
  3008  00FE5B  20                 	db	32
  3009  00FE5C  20                 	db	32
  3010  00FE5D  00                 	db	0
  3011  00FE5E                     STR_30:
  3012                           
  3013                           ; BSR set to: 57
  3014  00FE5E  43                 	db	67	;'C'
  3015  00FE5F  56                 	db	86	;'V'
  3016  00FE60  20                 	db	32
  3017  00FE61  25                 	db	37
  3018  00FE62  32                 	db	50	;'2'
  3019  00FE63  2E                 	db	46
  3020  00FE64  32                 	db	50	;'2'
  3021  00FE65  66                 	db	102	;'f'
  3022  00FE66  20                 	db	32
  3023  00FE67  4C                 	db	76	;'L'
  3024  00FE68  41                 	db	65	;'A'
  3025  00FE69  20                 	db	32
  3026  00FE6A  25                 	db	37
  3027  00FE6B  32                 	db	50	;'2'
  3028  00FE6C  2E                 	db	46
  3029  00FE6D  32                 	db	50	;'2'
  3030  00FE6E  66                 	db	102	;'f'
  3031  00FE6F  20                 	db	32
  3032  00FE70  20                 	db	32
  3033  00FE71  20                 	db	32
  3034  00FE72  20                 	db	32
  3035  00FE73  00                 	db	0
  3036  00FE74                     STR_28:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FE74  50                 	db	80	;'P'
  3040  00FE75  56                 	db	86	;'V'
  3041  00FE76  20                 	db	32
  3042  00FE77  25                 	db	37
  3043  00FE78  32                 	db	50	;'2'
  3044  00FE79  2E                 	db	46
  3045  00FE7A  32                 	db	50	;'2'
  3046  00FE7B  66                 	db	102	;'f'
  3047  00FE7C  20                 	db	32
  3048  00FE7D  50                 	db	80	;'P'
  3049  00FE7E  41                 	db	65	;'A'
  3050  00FE7F  20                 	db	32
  3051  00FE80  25                 	db	37
  3052  00FE81  32                 	db	50	;'2'
  3053  00FE82  2E                 	db	46
  3054  00FE83  32                 	db	50	;'2'
  3055  00FE84  66                 	db	102	;'f'
  3056  00FE85  20                 	db	32
  3057  00FE86  20                 	db	32
  3058  00FE87  20                 	db	32
  3059  00FE88  20                 	db	32
  3060  00FE89  00                 	db	0
  3061  00FE8A                     STR_40:
  3062                           
  3063                           ; BSR set to: 57
  3064  00FE8A  25                 	db	37
  3065  00FE8B  64                 	db	100	;'d'
  3066  00FE8C  20                 	db	32
  3067  00FE8D  25                 	db	37
  3068  00FE8E  32                 	db	50	;'2'
  3069  00FE8F  2E                 	db	46
  3070  00FE90  34                 	db	52	;'4'
  3071  00FE91  66                 	db	102	;'f'
  3072  00FE92  2C                 	db	44
  3073  00FE93  20                 	db	32
  3074  00FE94  25                 	db	37
  3075  00FE95  64                 	db	100	;'d'
  3076  00FE96  20                 	db	32
  3077  00FE97  20                 	db	32
  3078  00FE98  54                 	db	84	;'T'
  3079  00FE99  52                 	db	82	;'R'
  3080  00FE9A  49                 	db	73	;'I'
  3081  00FE9B  4D                 	db	77	;'M'
  3082  00FE9C  20                 	db	32
  3083  00FE9D  20                 	db	32
  3084  00FE9E  20                 	db	32
  3085  00FE9F  00                 	db	0
  3086  00FEA0                     STR_5:
  3087                           
  3088                           ; BSR set to: 57
  3089  00FEA0  20                 	db	32
  3090  00FEA1  20                 	db	32
  3091  00FEA2  20                 	db	32
  3092  00FEA3  20                 	db	32
  3093  00FEA4  20                 	db	32
  3094  00FEA5  20                 	db	32
  3095  00FEA6  20                 	db	32
  3096  00FEA7  20                 	db	32
  3097  00FEA8  20                 	db	32
  3098  00FEA9  20                 	db	32
  3099  00FEAA  20                 	db	32
  3100  00FEAB  20                 	db	32
  3101  00FEAC  20                 	db	32
  3102  00FEAD  20                 	db	32
  3103  00FEAE  20                 	db	32
  3104  00FEAF  20                 	db	32
  3105  00FEB0  20                 	db	32
  3106  00FEB1  20                 	db	32
  3107  00FEB2  20                 	db	32
  3108  00FEB3  20                 	db	32
  3109  00FEB4  00                 	db	0
  3110  00FEB5                     STR_8:
  3111                           
  3112                           ; BSR set to: 57
  3113  00FEB5  42                 	db	66	;'B'
  3114  00FEB6  56                 	db	86	;'V'
  3115  00FEB7  20                 	db	32
  3116  00FEB8  25                 	db	37
  3117  00FEB9  32                 	db	50	;'2'
  3118  00FEBA  2E                 	db	46
  3119  00FEBB  34                 	db	52	;'4'
  3120  00FEBC  66                 	db	102	;'f'
  3121  00FEBD  20                 	db	32
  3122  00FEBE  20                 	db	32
  3123  00FEBF  20                 	db	32
  3124  00FEC0  20                 	db	32
  3125  00FEC1  20                 	db	32
  3126  00FEC2  20                 	db	32
  3127  00FEC3  20                 	db	32
  3128  00FEC4  20                 	db	32
  3129  00FEC5  20                 	db	32
  3130  00FEC6  20                 	db	32
  3131  00FEC7  20                 	db	32
  3132  00FEC8  20                 	db	32
  3133  00FEC9  00                 	db	0
  3134  00FECA                     STR_4:
  3135                           
  3136                           ; BSR set to: 57
  3137  00FECA  20                 	db	32
  3138  00FECB  4E                 	db	78	;'N'
  3139  00FECC  53                 	db	83	;'S'
  3140  00FECD  41                 	db	65	;'A'
  3141  00FECE  53                 	db	83	;'S'
  3142  00FECF  50                 	db	80	;'P'
  3143  00FED0  4F                 	db	79	;'O'
  3144  00FED1  4F                 	db	79	;'O'
  3145  00FED2  4B                 	db	75	;'K'
  3146  00FED3  20                 	db	32
  3147  00FED4  20                 	db	32
  3148  00FED5  20                 	db	32
  3149  00FED6  20                 	db	32
  3150  00FED7  20                 	db	32
  3151  00FED8  20                 	db	32
  3152  00FED9  20                 	db	32
  3153  00FEDA  20                 	db	32
  3154  00FEDB  20                 	db	32
  3155  00FEDC  20                 	db	32
  3156  00FEDD  20                 	db	32
  3157  00FEDE  00                 	db	0
  3158  00FEDF                     STR_12:
  3159                           
  3160                           ; BSR set to: 57
  3161  00FEDF  42                 	db	66	;'B'
  3162  00FEE0  61                 	db	97	;'a'
  3163  00FEE1  74                 	db	116	;'t'
  3164  00FEE2  74                 	db	116	;'t'
  3165  00FEE3  65                 	db	101	;'e'
  3166  00FEE4  72                 	db	114	;'r'
  3167  00FEE5  79                 	db	121	;'y'
  3168  00FEE6  20                 	db	32
  3169  00FEE7  45                 	db	69	;'E'
  3170  00FEE8  53                 	db	83	;'S'
  3171  00FEE9  52                 	db	82	;'R'
  3172  00FEEA  20                 	db	32
  3173  00FEEB  20                 	db	32
  3174  00FEEC  20                 	db	32
  3175  00FEED  20                 	db	32
  3176  00FEEE  20                 	db	32
  3177  00FEEF  20                 	db	32
  3178  00FEF0  20                 	db	32
  3179  00FEF1  20                 	db	32
  3180  00FEF2  20                 	db	32
  3181  00FEF3  00                 	db	0
  3182  00FEF4                     STR_13:
  3183                           
  3184                           ; BSR set to: 57
  3185  00FEF4  43                 	db	67	;'C'
  3186  00FEF5  61                 	db	97	;'a'
  3187  00FEF6  6C                 	db	108	;'l'
  3188  00FEF7  63                 	db	99	;'c'
  3189  00FEF8  75                 	db	117	;'u'
  3190  00FEF9  6C                 	db	108	;'l'
  3191  00FEFA  61                 	db	97	;'a'
  3192  00FEFB  74                 	db	116	;'t'
  3193  00FEFC  69                 	db	105	;'i'
  3194  00FEFD  6F                 	db	111	;'o'
  3195  00FEFE  6E                 	db	110	;'n'
  3196  00FEFF  20                 	db	32
  3197  00FF00  20                 	db	32
  3198  00FF01  20                 	db	32
  3199  00FF02  20                 	db	32
  3200  00FF03  20                 	db	32
  3201  00FF04  20                 	db	32
  3202  00FF05  20                 	db	32
  3203  00FF06  20                 	db	32
  3204  00FF07  20                 	db	32
  3205  00FF08  00                 	db	0
  3206  00FF09                     STR_2:
  3207                           
  3208                           ; BSR set to: 57
  3209  00FF09  20                 	db	32
  3210  00FF0A  56                 	db	86	;'V'
  3211  00FF0B  65                 	db	101	;'e'
  3212  00FF0C  72                 	db	114	;'r'
  3213  00FF0D  73                 	db	115	;'s'
  3214  00FF0E  69                 	db	105	;'i'
  3215  00FF0F  6F                 	db	111	;'o'
  3216  00FF10  6E                 	db	110	;'n'
  3217  00FF11  20                 	db	32
  3218  00FF12  25                 	db	37
  3219  00FF13  73                 	db	115	;'s'
  3220  00FF14  20                 	db	32
  3221  00FF15  20                 	db	32
  3222  00FF16  20                 	db	32
  3223  00FF17  20                 	db	32
  3224  00FF18  20                 	db	32
  3225  00FF19  20                 	db	32
  3226  00FF1A  20                 	db	32
  3227  00FF1B  20                 	db	32
  3228  00FF1C  20                 	db	32
  3229  00FF1D  00                 	db	0
  3230  00FF1E                     STR_1:
  3231                           
  3232                           ; BSR set to: 57
  3233  00FF1E  20                 	db	32
  3234  00FF1F  4D                 	db	77	;'M'
  3235  00FF20  42                 	db	66	;'B'
  3236  00FF21  4D                 	db	77	;'M'
  3237  00FF22  43                 	db	67	;'C'
  3238  00FF23  20                 	db	32
  3239  00FF24  53                 	db	83	;'S'
  3240  00FF25  4F                 	db	79	;'O'
  3241  00FF26  4C                 	db	76	;'L'
  3242  00FF27  41                 	db	65	;'A'
  3243  00FF28  52                 	db	82	;'R'
  3244  00FF29  4D                 	db	77	;'M'
  3245  00FF2A  4F                 	db	79	;'O'
  3246  00FF2B  4E                 	db	78	;'N'
  3247  00FF2C  20                 	db	32
  3248  00FF2D  20                 	db	32
  3249  00FF2E  20                 	db	32
  3250  00FF2F  20                 	db	32
  3251  00FF30  20                 	db	32
  3252  00FF31  20                 	db	32
  3253  00FF32  00                 	db	0
  3254  00FF33                     STR_15:
  3255                           
  3256                           ; BSR set to: 57
  3257  00FF33  43                 	db	67	;'C'
  3258  00FF34  68                 	db	104	;'h'
  3259  00FF35  65                 	db	101	;'e'
  3260  00FF36  63                 	db	99	;'c'
  3261  00FF37  6B                 	db	107	;'k'
  3262  00FF38  69                 	db	105	;'i'
  3263  00FF39  6E                 	db	110	;'n'
  3264  00FF3A  67                 	db	103	;'g'
  3265  00FF3B  20                 	db	32
  3266  00FF3C  25                 	db	37
  3267  00FF3D  63                 	db	99	;'c'
  3268  00FF3E  20                 	db	32
  3269  00FF3F  25                 	db	37
  3270  00FF40  63                 	db	99	;'c'
  3271  00FF41  20                 	db	32
  3272  00FF42  20                 	db	32
  3273  00FF43  20                 	db	32
  3274  00FF44  20                 	db	32
  3275  00FF45  20                 	db	32
  3276  00FF46  20                 	db	32
  3277  00FF47  00                 	db	0
  3278  00FF48                     STR_14:
  3279                           
  3280                           ; BSR set to: 57
  3281  00FF48  43                 	db	67	;'C'
  3282  00FF49  68                 	db	104	;'h'
  3283  00FF4A  65                 	db	101	;'e'
  3284  00FF4B  63                 	db	99	;'c'
  3285  00FF4C  6B                 	db	107	;'k'
  3286  00FF4D  20                 	db	32
  3287  00FF4E  33                 	db	51	;'3'
  3288  00FF4F  30                 	db	48	;'0'
  3289  00FF50  20                 	db	32
  3290  00FF51  73                 	db	115	;'s'
  3291  00FF52  65                 	db	101	;'e'
  3292  00FF53  63                 	db	99	;'c'
  3293  00FF54  6F                 	db	111	;'o'
  3294  00FF55  6E                 	db	110	;'n'
  3295  00FF56  64                 	db	100	;'d'
  3296  00FF57  73                 	db	115	;'s'
  3297  00FF58  20                 	db	32
  3298  00FF59  20                 	db	32
  3299  00FF5A  20                 	db	32
  3300  00FF5B  20                 	db	32
  3301  00FF5C  00                 	db	0
  3302  00FF5D                     STR_47:
  3303                           
  3304                           ; BSR set to: 57
  3305  00FF5D  48                 	db	72	;'H'
  3306  00FF5E  45                 	db	69	;'E'
  3307  00FF5F  4C                 	db	76	;'L'
  3308  00FF60  50                 	db	80	;'P'
  3309  00FF61  20                 	db	32
  3310  00FF62  25                 	db	37
  3311  00FF63  73                 	db	115	;'s'
  3312  00FF64  20                 	db	32
  3313  00FF65  20                 	db	32
  3314  00FF66  20                 	db	32
  3315  00FF67  20                 	db	32
  3316  00FF68  20                 	db	32
  3317  00FF69  20                 	db	32
  3318  00FF6A  20                 	db	32
  3319  00FF6B  20                 	db	32
  3320  00FF6C  20                 	db	32
  3321  00FF6D  20                 	db	32
  3322  00FF6E  20                 	db	32
  3323  00FF6F  00                 	db	0
  3324  00FF70                     
  3325                           ; BSR set to: 57
  3326  00FF70  44                 	db	68	;'D'
  3327  00FF71  49                 	db	73	;'I'
  3328  00FF72  53                 	db	83	;'S'
  3329  00FF73  50                 	db	80	;'P'
  3330  00FF74  4C                 	db	76	;'L'
  3331  00FF75  41                 	db	65	;'A'
  3332  00FF76  59                 	db	89	;'Y'
  3333  00FF77  20                 	db	32
  3334  00FF78  25                 	db	37
  3335  00FF79  73                 	db	115	;'s'
  3336  00FF7A  20                 	db	32
  3337  00FF7B  20                 	db	32
  3338  00FF7C  20                 	db	32
  3339  00FF7D  20                 	db	32
  3340  00FF7E  20                 	db	32
  3341  00FF7F  20                 	db	32
  3342  00FF80  20                 	db	32
  3343  00FF81  20                 	db	32
  3344  00FF82  00                 	db	0
  3345  00FF83                     
  3346                           ; BSR set to: 57
  3347  00FF83  25                 	db	37
  3348  00FF84  64                 	db	100	;'d'
  3349  00FF85  20                 	db	32
  3350  00FF86  25                 	db	37
  3351  00FF87  32                 	db	50	;'2'
  3352  00FF88  2E                 	db	46
  3353  00FF89  34                 	db	52	;'4'
  3354  00FF8A  66                 	db	102	;'f'
  3355  00FF8B  2C                 	db	44
  3356  00FF8C  20                 	db	32
  3357  00FF8D  25                 	db	37
  3358  00FF8E  64                 	db	100	;'d'
  3359  00FF8F  20                 	db	32
  3360  00FF90  20                 	db	32
  3361  00FF91  20                 	db	32
  3362  00FF92  23                 	db	35
  3363  00FF93  00                 	db	0
  3364  00FF94                     STR_19:
  3365                           
  3366                           ; BSR set to: 57
  3367  00FF94  25                 	db	37
  3368  00FF95  64                 	db	100	;'d'
  3369  00FF96  20                 	db	32
  3370  00FF97  25                 	db	37
  3371  00FF98  32                 	db	50	;'2'
  3372  00FF99  2E                 	db	46
  3373  00FF9A  34                 	db	52	;'4'
  3374  00FF9B  66                 	db	102	;'f'
  3375  00FF9C  20                 	db	32
  3376  00FF9D  20                 	db	32
  3377  00FF9E  20                 	db	32
  3378  00FF9F  25                 	db	37
  3379  00FFA0  64                 	db	100	;'d'
  3380  00FFA1  20                 	db	32
  3381  00FFA2  20                 	db	32
  3382  00FFA3  00                 	db	0
  3383  00FFA4                     STR_51:
  3384                           
  3385                           ; BSR set to: 57
  3386  00FFA4  76                 	db	118	;'v'
  3387  00FFA5  74                 	db	116	;'t'
  3388  00FFA6  65                 	db	101	;'e'
  3389  00FFA7  72                 	db	114	;'r'
  3390  00FFA8  6D                 	db	109	;'m'
  3391  00FFA9  20                 	db	32
  3392  00FFAA  25                 	db	37
  3393  00FFAB  78                 	db	120	;'x'
  3394  00FFAC  3A                 	db	58	;':'
  3395  00FFAD  25                 	db	37
  3396  00FFAE  78                 	db	120	;'x'
  3397  00FFAF  20                 	db	32
  3398  00FFB0  20                 	db	32
  3399  00FFB1  20                 	db	32
  3400  00FFB2  00                 	db	0
  3401  00FFB3                     STR_45:
  3402                           
  3403                           ; BSR set to: 57
  3404  00FFB3  4A                 	db	74	;'J'
  3405  00FFB4  61                 	db	97	;'a'
  3406  00FFB5  6E                 	db	110	;'n'
  3407  00FFB6  20                 	db	32
  3408  00FFB7  31                 	db	49	;'1'
  3409  00FFB8  36                 	db	54	;'6'
  3410  00FFB9  20                 	db	32
  3411  00FFBA  32                 	db	50	;'2'
  3412  00FFBB  30                 	db	48	;'0'
  3413  00FFBC  32                 	db	50	;'2'
  3414  00FFBD  30                 	db	48	;'0'
  3415  00FFBE  00                 	db	0
  3416  00FFBF                     STR_49:
  3417                           
  3418                           ; BSR set to: 57
  3419  00FFBF  25                 	db	37
  3420  00FFC0  73                 	db	115	;'s'
  3421  00FFC1  20                 	db	32
  3422  00FFC2  20                 	db	32
  3423  00FFC3  20                 	db	32
  3424  00FFC4  20                 	db	32
  3425  00FFC5  20                 	db	32
  3426  00FFC6  20                 	db	32
  3427  00FFC7  20                 	db	32
  3428  00FFC8  00                 	db	0
  3429  00FFC9                     STR_46:
  3430                           
  3431                           ; BSR set to: 57
  3432  00FFC9  31                 	db	49	;'1'
  3433  00FFCA  36                 	db	54	;'6'
  3434  00FFCB  3A                 	db	58	;':'
  3435  00FFCC  31                 	db	49	;'1'
  3436  00FFCD  35                 	db	53	;'5'
  3437  00FFCE  3A                 	db	58	;':'
  3438  00FFCF  32                 	db	50	;'2'
  3439  00FFD0  37                 	db	55	;'7'
  3440  00FFD1  00                 	db	0
  3441  00FFD2                     STR_3:
  3442                           
  3443                           ; BSR set to: 57
  3444  00FFD2  31                 	db	49	;'1'
  3445  00FFD3  2E                 	db	46
  3446  00FFD4  31                 	db	49	;'1'
  3447  00FFD5  30                 	db	48	;'0'
  3448  00FFD6  00                 	db	0
  3449  00FFD7                     STR_65:
  3450                           
  3451                           ; BSR set to: 57
  3452  00FFD7  49                 	db	73	;'I'
  3453  00FFD8  4E                 	db	78	;'N'
  3454  00FFD9  46                 	db	70	;'F'
  3455  00FFDA  00                 	db	0
  3456  00FFDB                     STR_69:
  3457                           
  3458                           ; BSR set to: 57
  3459  00FFDB  4E                 	db	78	;'N'
  3460  00FFDC  41                 	db	65	;'A'
  3461  00FFDD  4E                 	db	78	;'N'
  3462  00FFDE  00                 	db	0
  3463  00FFDF                     STR_66:
  3464                           
  3465                           ; BSR set to: 57
  3466  00FFDF  69                 	db	105	;'i'
  3467  00FFE0  6E                 	db	110	;'n'
  3468  00FFE1  66                 	db	102	;'f'
  3469  00FFE2  00                 	db	0
  3470  00FFE3                     STR_70:
  3471                           
  3472                           ; BSR set to: 57
  3473  00FFE3  6E                 	db	110	;'n'
  3474  00FFE4  61                 	db	97	;'a'
  3475  00FFE5  6E                 	db	110	;'n'
  3476  00FFE6  00                 	db	0
  3477  00FFE7                     STR_96:
  3478                           
  3479                           ; BSR set to: 57
  3480  00FFE7  6C                 	db	108	;'l'
  3481  00FFE8  58                 	db	88	;'X'
  3482  00FFE9  00                 	db	0
  3483  00FFEA                     STR_73:
  3484                           
  3485                           ; BSR set to: 57
  3486  00FFEA  6C                 	db	108	;'l'
  3487  00FFEB  64                 	db	100	;'d'
  3488  00FFEC  00                 	db	0
  3489  00FFED                     STR_82:
  3490                           
  3491                           ; BSR set to: 57
  3492  00FFED  6C                 	db	108	;'l'
  3493  00FFEE  66                 	db	102	;'f'
  3494  00FFEF  00                 	db	0
  3495  00FFF0                     STR_77:
  3496                           
  3497                           ; BSR set to: 57
  3498  00FFF0  6C                 	db	108	;'l'
  3499  00FFF1  69                 	db	105	;'i'
  3500  00FFF2  00                 	db	0
  3501  00FFF3                     STR_87:
  3502                           
  3503                           ; BSR set to: 57
  3504  00FFF3  6C                 	db	108	;'l'
  3505  00FFF4  75                 	db	117	;'u'
  3506  00FFF5  00                 	db	0
  3507  00FFF6                     STR_92:
  3508                           
  3509                           ; BSR set to: 57
  3510  00FFF6  6C                 	db	108	;'l'
  3511  00FFF7  78                 	db	120	;'x'
  3512  00FFF8  00                 	db	0
  3513  00FFF9                     STR_44:
  3514                           
  3515                           ; BSR set to: 57
  3516  00FFF9  25                 	db	37
  3517  00FFFA  63                 	db	99	;'c'
  3518  00FFFB  00                 	db	0
  3519  00FFFC                     STR_43:
  3520                           
  3521                           ; BSR set to: 57
  3522  00FFFC  25                 	db	37
  3523  00FFFD  73                 	db	115	;'s'
  3524  00FFFE  00                 	db	0
  3525  0000                     
  3526                           ; #config settings
  3527  00FFFF  00                 	db	0	; dummy byte at the end
  3528  0000                     
  3529                           	psect	cinit
  3530  01A1AE                     __pcinit:
  3531                           	opt callstack 0
  3532  01A1AE                     start_initialization:
  3533                           	opt callstack 0
  3534  01A1AE                     __initialization:
  3535                           	opt callstack 0
  3536                           
  3537                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3538                           ; load TBLPTR registers with __pidataBIGRAM
  3539  01A1AE  0E28               	movlw	low __pidataBIGRAM
  3540  01A1B0  6EF6               	movwf	tblptrl,c
  3541  01A1B2  0E6B               	movlw	high __pidataBIGRAM
  3542  01A1B4  6EF7               	movwf	tblptrh,c
  3543  01A1B6  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3544  01A1B8  6EF8               	movwf	tblptru,c
  3545  01A1BA  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3546  01A1BE  EE20 F32B          	lfsr	2,811
  3547  01A1C2                     copy_data0:
  3548  01A1C2  0009               	tblrd		*+
  3549  01A1C4  006F FFD7 FFEE     	movff	tablat,postinc0
  3550  01A1CA  50DD               	movf	postdec2,w,c
  3551  01A1CC  50D9               	movf	fsr2l,w,c
  3552  01A1CE  E1F9               	bnz	copy_data0
  3553  01A1D0  50DA               	movf	fsr2h,w,c
  3554  01A1D2  E1F7               	bnz	copy_data0
  3555                           
  3556                           ; Initialize objects allocated to BANK1 (239 bytes)
  3557                           ; load TBLPTR registers with __pidataBANK1
  3558  01A1D4  0E0C               	movlw	low __pidataBANK1
  3559  01A1D6  6EF6               	movwf	tblptrl,c
  3560  01A1D8  0E9E               	movlw	high __pidataBANK1
  3561  01A1DA  6EF7               	movwf	tblptrh,c
  3562  01A1DC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3563  01A1DE  6EF8               	movwf	tblptru,c
  3564  01A1E0  EE00  F100         	lfsr	0,__pdataBANK1
  3565  01A1E4  EE20 F0EF          	lfsr	2,239
  3566  01A1E8                     copy_data1:
  3567  01A1E8  0009               	tblrd		*+
  3568  01A1EA  006F FFD7 FFEE     	movff	tablat,postinc0
  3569  01A1F0  50DD               	movf	postdec2,w,c
  3570  01A1F2  50D9               	movf	fsr2l,w,c
  3571  01A1F4  E1F9               	bnz	copy_data1
  3572                           
  3573                           ; Initialize objects allocated to BANK0 (14 bytes)
  3574                           ; load TBLPTR registers with __pidataBANK0
  3575  01A1F6  0E86               	movlw	low __pidataBANK0
  3576  01A1F8  6EF6               	movwf	tblptrl,c
  3577  01A1FA  0EC0               	movlw	high __pidataBANK0
  3578  01A1FC  6EF7               	movwf	tblptrh,c
  3579  01A1FE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3580  01A200  6EF8               	movwf	tblptru,c
  3581  01A202  EE00  F0F0         	lfsr	0,__pdataBANK0
  3582  01A206  EE20 F00E          	lfsr	2,14
  3583  01A20A                     copy_data2:
  3584  01A20A  0009               	tblrd		*+
  3585  01A20C  006F FFD7 FFEE     	movff	tablat,postinc0
  3586  01A212  50DD               	movf	postdec2,w,c
  3587  01A214  50D9               	movf	fsr2l,w,c
  3588  01A216  E1F9               	bnz	copy_data2
  3589                           
  3590                           ; Clear objects allocated to BIGRAM (482 bytes)
  3591  01A218  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3592  01A21C  EE20 F1E2          	lfsr	2,482
  3593  01A220                     clear_0:
  3594  01A220  6AEE               	clrf	postinc0,c
  3595  01A222  50DD               	movf	postdec2,w,c
  3596  01A224  50D9               	movf	fsr2l,w,c
  3597  01A226  E1FC               	bnz	clear_0
  3598  01A228  50DA               	movf	fsr2h,w,c
  3599  01A22A  E1FA               	bnz	clear_0
  3600                           
  3601                           ; Clear objects allocated to BANK4 (255 bytes)
  3602  01A22C  EE01  F000         	lfsr	0,__pbssBANK4
  3603  01A230  EE20 F0FF          	lfsr	2,255
  3604  01A234                     clear_1:
  3605  01A234  6AEE               	clrf	postinc0,c
  3606  01A236  50DD               	movf	postdec2,w,c
  3607  01A238  50D9               	movf	fsr2l,w,c
  3608  01A23A  E1FC               	bnz	clear_1
  3609  01A23C  50DA               	movf	fsr2h,w,c
  3610  01A23E  E1FA               	bnz	clear_1
  3611                           
  3612                           ; Clear objects allocated to BANK3 (198 bytes)
  3613  01A240  EE00  F300         	lfsr	0,__pbssBANK3
  3614  01A244  0EC6               	movlw	198
  3615  01A246                     clear_2:
  3616  01A246  6AEE               	clrf	postinc0,c
  3617  01A248  06E8               	decf	wreg,f,c
  3618  01A24A  E1FD               	bnz	clear_2
  3619                           
  3620                           ; Clear objects allocated to BANK2 (231 bytes)
  3621  01A24C  EE00  F200         	lfsr	0,__pbssBANK2
  3622  01A250  0EE7               	movlw	231
  3623  01A252                     clear_3:
  3624  01A252  6AEE               	clrf	postinc0,c
  3625  01A254  06E8               	decf	wreg,f,c
  3626  01A256  E1FD               	bnz	clear_3
  3627                           
  3628                           ; Clear objects allocated to BANK0 (119 bytes)
  3629  01A258  EE00  F060         	lfsr	0,__pbssBANK0
  3630  01A25C  0E77               	movlw	119
  3631  01A25E                     clear_4:
  3632  01A25E  6AEE               	clrf	postinc0,c
  3633  01A260  06E8               	decf	wreg,f,c
  3634  01A262  E1FD               	bnz	clear_4
  3635                           
  3636                           ; Clear objects allocated to COMRAM (14 bytes)
  3637  01A264  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3638  01A268  0E0E               	movlw	14
  3639  01A26A                     clear_5:
  3640  01A26A  6AEE               	clrf	postinc0,c
  3641  01A26C  06E8               	decf	wreg,f,c
  3642  01A26E  E1FD               	bnz	clear_5
  3643                           
  3644                           ;
  3645                           ; Setup IVTBASE
  3646                           ;
  3647  01A270  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3648  01A272  6ED5               	movwf	213,c
  3649  01A274  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3650  01A276  6ED6               	movwf	214,c
  3651  01A278  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3652  01A27A  6ED7               	movwf	215,c
  3653  01A27C                     end_of_initialization:
  3654                           	opt callstack 0
  3655  01A27C                     __end_of__initialization:
  3656                           	opt callstack 0
  3657  01A27C  0100               	movlb	0
  3658  01A27E  EF22  F089         	goto	_main	;jump to C main() function
  3659                           
  3660                           	psect	bssCOMRAM
  3661  00003A                     __pbssCOMRAM:
  3662                           	opt callstack 0
  3663  00003A                     _width:
  3664                           	opt callstack 0
  3665  00003A                     	ds	2
  3666  00003C                     _prec:
  3667                           	opt callstack 0
  3668  00003C                     	ds	2
  3669  00003E                     _flags:
  3670                           	opt callstack 0
  3671  00003E                     	ds	2
  3672  000040                     esr_check@esr_state:
  3673                           	opt callstack 0
  3674  000040                     	ds	1
  3675  000041                     calc_bsoc@log_update_wait:
  3676                           	opt callstack 0
  3677  000041                     	ds	1
  3678  000042                     check_day_time@day_delay:
  3679                           	opt callstack 0
  3680  000042                     	ds	1
  3681  000043                     _uart2RxHead:
  3682                           	opt callstack 0
  3683  000043                     	ds	1
  3684  000044                     _uart2TxBufferRemaining:
  3685                           	opt callstack 0
  3686  000044                     	ds	1
  3687  000045                     _uart2TxTail:
  3688                           	opt callstack 0
  3689  000045                     	ds	1
  3690  000046                     _uart1RxTail:
  3691                           	opt callstack 0
  3692  000046                     	ds	1
  3693  000047                     _uart1RxHead:
  3694                           	opt callstack 0
  3695  000047                     	ds	1
  3696                           
  3697                           	psect	bssBANK0
  3698  000060                     __pbssBANK0:
  3699                           	opt callstack 0
  3700  000060                     _spi_link:
  3701                           	opt callstack 0
  3702  000060                     	ds	12
  3703  00006C                     _uart1RxBuffer:
  3704                           	opt callstack 0
  3705  00006C                     	ds	8
  3706  000074                     spinners@s:
  3707                           	opt callstack 0
  3708  000074                     	ds	6
  3709  00007A                     floorf@F524:
  3710                           	opt callstack 0
  3711  00007A                     	ds	4
  3712  00007E                     fabsf@F463:
  3713                           	opt callstack 0
  3714  00007E                     	ds	4
  3715  000082                     ___fpclassifyf@F463:
  3716                           	opt callstack 0
  3717  000082                     	ds	4
  3718  000086                     calc_ror_data@bcror:
  3719                           	opt callstack 0
  3720  000086                     	ds	4
  3721  00008A                     calc_ror_data@bvror:
  3722                           	opt callstack 0
  3723  00008A                     	ds	4
  3724  00008E                     calc_model_data@bcror:
  3725                           	opt callstack 0
  3726  00008E                     	ds	4
  3727  000092                     calc_model_data@bvror:
  3728                           	opt callstack 0
  3729  000092                     	ds	4
  3730  000096                     _utctime:
  3731                           	opt callstack 0
  3732  000096                     	ds	4
  3733  00009A                     wdtdelay@dcount:
  3734                           	opt callstack 0
  3735  00009A                     	ds	4
  3736  00009E                     _P:
  3737                           	opt callstack 0
  3738  00009E                     	ds	4
  3739  0000A2                     _TMR3_InterruptHandler:
  3740                           	opt callstack 0
  3741  0000A2                     	ds	3
  3742  0000A5                     _TMR5_InterruptHandler:
  3743                           	opt callstack 0
  3744  0000A5                     	ds	3
  3745  0000A8                     _TMR6_InterruptHandler:
  3746                           	opt callstack 0
  3747  0000A8                     	ds	3
  3748  0000AB                     _ADCC_ADTI_InterruptHandler:
  3749                           	opt callstack 0
  3750  0000AB                     	ds	3
  3751  0000AE                     _ADCC_ADI_InterruptHandler:
  3752                           	opt callstack 0
  3753  0000AE                     	ds	3
  3754  0000B1                     _UART1_RxInterruptHandler:
  3755                           	opt callstack 0
  3756  0000B1                     	ds	3
  3757  0000B4                     _UART2_TxInterruptHandler:
  3758                           	opt callstack 0
  3759  0000B4                     	ds	3
  3760  0000B7                     _UART2_RxInterruptHandler:
  3761                           	opt callstack 0
  3762  0000B7                     	ds	3
  3763  0000BA                     _INT1_InterruptHandler:
  3764                           	opt callstack 0
  3765  0000BA                     	ds	3
  3766  0000BD                     _INT0_InterruptHandler:
  3767                           	opt callstack 0
  3768  0000BD                     	ds	3
  3769  0000C0                     _nout:
  3770                           	opt callstack 0
  3771  0000C0                     	ds	2
  3772  0000C2                     TMR3_ISR@CountCallBack:
  3773                           	opt callstack 0
  3774  0000C2                     	ds	2
  3775  0000C4                     _timer3ReloadVal:
  3776                           	opt callstack 0
  3777  0000C4                     	ds	2
  3778  0000C6                     TMR5_ISR@CountCallBack:
  3779                           	opt callstack 0
  3780  0000C6                     	ds	2
  3781  0000C8                     _timer5ReloadVal:
  3782                           	opt callstack 0
  3783  0000C8                     	ds	2
  3784  0000CA                     _mode_sw:
  3785                           	opt callstack 0
  3786  0000CA                     	ds	1
  3787  0000CB                     _uart2RxCount:
  3788                           	opt callstack 0
  3789  0000CB                     	ds	1
  3790  0000CC                     _uart2RxTail:
  3791                           	opt callstack 0
  3792  0000CC                     	ds	1
  3793  0000CD                     _uart2TxHead:
  3794                           	opt callstack 0
  3795  0000CD                     	ds	1
  3796  0000CE                     _uart1RxCount:
  3797                           	opt callstack 0
  3798  0000CE                     	ds	1
  3799  0000CF                     _seed:
  3800                           	opt callstack 0
  3801  0000CF                     	ds	8
  3802                           
  3803                           	psect	dataBANK0
  3804  0000F0                     __pdataBANK0:
  3805                           	opt callstack 0
  3806  0000F0                     stoa@F1166:
  3807                           	opt callstack 0
  3808  0000F0                     	ds	7
  3809  0000F7                     _H:
  3810                           	opt callstack 0
  3811  0000F7                     	ds	7
  3812                           
  3813                           	psect	dataBANK1
  3814  000100                     __pdataBANK1:
  3815                           	opt callstack 0
  3816  000100                     _R:
  3817                           	opt callstack 0
  3818  000100                     	ds	48
  3819  000130                     _V:
  3820                           	opt callstack 0
  3821  000130                     	ds	191
  3822                           
  3823                           	psect	bssBANK2
  3824  000200                     __pbssBANK2:
  3825                           	opt callstack 0
  3826  000200                     lp_filter@smooth:
  3827                           	opt callstack 0
  3828  000200                     	ds	84
  3829  000254                     _S:
  3830                           	opt callstack 0
  3831  000254                     	ds	41
  3832  00027D                     _tickCount:
  3833                           	opt callstack 0
  3834  00027D                     	ds	26
  3835  000297                     _dbuf:
  3836                           	opt callstack 0
  3837  000297                     	ds	80
  3838                           
  3839                           	psect	bssBANK3
  3840  000300                     __pbssBANK3:
  3841                           	opt callstack 0
  3842  000300                     _uart2TxBuffer:
  3843                           	opt callstack 0
  3844  000300                     	ds	64
  3845  000340                     _ring_buf2:
  3846                           	opt callstack 0
  3847  000340                     	ds	67
  3848  000383                     _ring_buf1:
  3849                           	opt callstack 0
  3850  000383                     	ds	67
  3851                           
  3852                           	psect	bssBANK4
  3853  000400                     __pbssBANK4:
  3854                           	opt callstack 0
  3855  000400                     _uart2RxBuffer:
  3856                           	opt callstack 0
  3857  000400                     	ds	255
  3858                           
  3859                           	psect	bssBIGRAM
  3860  00082A                     __pbssBIGRAM:
  3861                           	opt callstack 0
  3862  00082A                     _D:
  3863                           	opt callstack 0
  3864  00082A                     	ds	482
  3865                           
  3866                           	psect	dataBIGRAM
  3867  0004FF                     __pdataBIGRAM:
  3868                           	opt callstack 0
  3869  0004FF                     _port_data:
  3870                           	opt callstack 0
  3871  0004FF                     	ds	512
  3872  0006FF                     _C:
  3873                           	opt callstack 0
  3874  0006FF                     	ds	299
  3875                           
  3876                           	psect	cstackBANK0
  3877  0000D7                     __pcstackBANK0:
  3878                           	opt callstack 0
  3879  0000D7                     ??_TMR3_ISR:
  3880                           
  3881                           ; 1 bytes @ 0x0
  3882  0000D7                     	ds	25
  3883                           
  3884                           	psect	cstackCOMRAM
  3885  000021                     __pcstackCOMRAM:
  3886                           	opt callstack 0
  3887  000021                     ??_ADCC_ThresholdISR:
  3888  000021                     
  3889                           ; 1 bytes @ 0x0
  3890  000021                     	ds	5
  3891  000026                     ??_TMR6_ISR:
  3892                           
  3893                           ; 1 bytes @ 0x5
  3894  000026                     	ds	1
  3895  000027                     ??_INT1_ISR:
  3896  000027                     
  3897                           ; 1 bytes @ 0x6
  3898  000027                     	ds	4
  3899  00002B                     ??_TMR5_ISR:
  3900                           
  3901                           ; 1 bytes @ 0xA
  3902  00002B                     	ds	15
  3903                           
  3904 ;;
  3905 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3906 ;;
  3907 ;; *************** function _main *****************
  3908 ;; Defined at:
  3909 ;;		line 187 in file "main.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  esr_temp        4  [STACK] float 
  3914 ;;  i_esr           2  [STACK] unsigned short 
  3915 ;;  shape           1  [STACK] unsigned char 
  3916 ;;  inp_index       1  [STACK] unsigned char 
  3917 ;;  k               1  [STACK] unsigned char 
  3918 ;;  j               1  [STACK] unsigned char 
  3919 ;;  i               1  [STACK] unsigned char 
  3920 ;;  mode            1  [STACK] enum E17013
  3921 ;;  i_ror           1  [STACK] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1  [STACK] void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels required when called:   29
  3937 ;; This function calls:
  3938 ;;		_SYSTEM_Initialize
  3939 ;;		_StartTimer
  3940 ;;		_TimerDone
  3941 ;;		_WaitMs
  3942 ;;		___fladd
  3943 ;;		___flge
  3944 ;;		___fltol
  3945 ;;		_calc_model_data
  3946 ;;		_calc_ror_data
  3947 ;;		_check_adc_scan
  3948 ;;		_check_enter_button
  3949 ;;		_check_help
  3950 ;;		_clear_adc_scan
  3951 ;;		_clear_hid_pflags
  3952 ;;		_conv_raw_result
  3953 ;;		_convert_adc_data
  3954 ;;		_eaDogM_WriteCommand
  3955 ;;		_esr_check
  3956 ;;		_fabsf
  3957 ;;		_get_raw_result
  3958 ;;		_get_switch
  3959 ;;		_get_vterm_ptr
  3960 ;;		_hid_display
  3961 ;;		_init_bsoc
  3962 ;;		_init_display
  3963 ;;		_init_port_dma
  3964 ;;		_lp_filter
  3965 ;;		_mode_lamp_dim
  3966 ;;		_set_display_info
  3967 ;;		_set_load_relay_one
  3968 ;;		_set_load_relay_two
  3969 ;;		_set_vterm
  3970 ;;		_spinners
  3971 ;;		_sprintf
  3972 ;;		_srand
  3973 ;;		_start_adc_scan
  3974 ;;		_start_switch_handler
  3975 ;;		_static_soc
  3976 ;;		_update_lcd
  3977 ;; This function is called by:
  3978 ;;		Startup code after reset
  3979 ;; This function uses a reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text0
  3983  011244                     __ptext0:
  3984                           	opt callstack 0
  3985  011244                     _main:
  3986                           	opt callstack 0
  3987                           
  3988                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3989  011244  0E11               	movlw	17
  3990  011246  26E1               	addwf	fsr1l,f,c
  3991  011248  0E00               	movlw	0
  3992  01124A  22E2               	addwfc	fsr1h,f,c
  3993                           
  3994                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3995                           ;stkvar	_inp_index @ sp[(-17)+11]
  3996                           
  3997                           ;incstack = 0
  3998  01124C  0EFA               	movlw	-6
  3999  01124E  6AE3               	clrf	plusw1,c
  4000                           
  4001                           ;stkvar	_i @ sp[(-17)+14]
  4002  011250  0EFD               	movlw	-3
  4003  011252  6AE3               	clrf	plusw1,c
  4004                           
  4005                           ;stkvar	_j @ sp[(-17)+13]
  4006  011254  0EFC               	movlw	-4
  4007  011256  6AE3               	clrf	plusw1,c
  4008  011258  2AE3               	incf	plusw1,f,c
  4009                           
  4010                           ;stkvar	_k @ sp[(-17)+12]
  4011  01125A  0EFB               	movlw	-5
  4012  01125C  6AE3               	clrf	plusw1,c
  4013  01125E  82E3               	bsf	plusw1,1,c
  4014                           
  4015                           ;main.c: 193:  SYSTEM_Initialize();
  4016  011260  ECE7  F0D9         	call	_SYSTEM_Initialize	;wreg free
  4017                           
  4018                           ; BSR set to: 60
  4019                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  4020  011264  8ED2               	bsf	210,7,c	;volatile
  4021                           
  4022                           ; BSR set to: 60
  4023                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  4024  011266  8CD2               	bsf	210,6,c	;volatile
  4025                           
  4026                           ; BSR set to: 60
  4027                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  4028  011268  0101               	movlb	1	; () banked
  4029  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  4030                           
  4031                           ; BSR set to: 1
  4032                           ;main.c: 206:  WaitMs(300);
  4033  01126C  0E2C               	movlw	44
  4034  01126E  6EE6               	movwf	postinc1,c
  4035  011270  0E01               	movlw	1
  4036  011272  6EE6               	movwf	postinc1,c
  4037  011274  EC5A  F0DC         	call	_WaitMs	;wreg free
  4038                           
  4039                           ;main.c: 207:  if (PORTBbits.RB0) {
  4040  011278  A0CB               	btfss	203,0,c	;volatile
  4041  01127A  D004               	goto	l13042
  4042                           
  4043                           ;main.c: 208:   mode = UI_STATE_HOST;
  4044                           ;stkvar	_mode @ sp[(-17)+15]
  4045  01127C  0EFE               	movlw	-2
  4046  01127E  6AE3               	clrf	plusw1,c
  4047  011280  2AE3               	incf	plusw1,f,c
  4048                           
  4049                           ;main.c: 209:  } else {
  4050  011282  D004               	goto	l13044
  4051  011284                     l13042:
  4052                           
  4053                           ;main.c: 210:   mode = UI_STATE_LOG;
  4054                           ;stkvar	_mode @ sp[(-17)+15]
  4055  011284  0EFE               	movlw	-2
  4056  011286  6AE3               	clrf	plusw1,c
  4057  011288  80E3               	bsf	plusw1,0,c
  4058  01128A  82E3               	bsf	plusw1,1,c	;indir
  4059  01128C                     l13044:
  4060                           
  4061                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  4062                           ;stkvar	_mode @ sp[(-17)+15]
  4063  01128C  0EFE               	movlw	-2
  4064  01128E  04E3               	decf	plusw1,w,c
  4065  011290  A4D8               	btfss	status,2,c
  4066  011292  D007               	goto	l1324
  4067                           
  4068                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  4069  011294  80BD               	bsf	189,0,c	;volatile
  4070                           
  4071                           ;main.c: 215:   V.mode_pwm = 70;
  4072  011296  0E00               	movlw	0
  4073  011298  0101               	movlb	1	; () banked
  4074  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  4075  01129C  0E46               	movlw	70
  4076  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  4077                           
  4078                           ;main.c: 216:  } else {
  4079  0112A0  D004               	goto	l13048
  4080  0112A2                     l1324:
  4081  0112A2  90BD               	bcf	189,0,c	;volatile
  4082                           
  4083                           ;main.c: 218:   V.mode_pwm = 0;
  4084  0112A4  0101               	movlb	1	; () banked
  4085  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  4086  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  4087  0112AA                     l13048:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4091  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  4092  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  4093  0112B6  ECD7  F0DF         	call	_mode_lamp_dim	;wreg free
  4094  0112BA  D326               	goto	l13168
  4095  0112BC                     l13050:
  4096                           
  4097                           ; BSR set to: 1
  4098                           ;main.c: 228:    init_port_dma();
  4099  0112BC  ECA9  F0DC         	call	_init_port_dma	;wreg free
  4100                           
  4101                           ; BSR set to: 59
  4102                           ;main.c: 230:    init_display();
  4103  0112C0  EC7E  F0CF         	call	_init_display	;wreg free
  4104                           
  4105                           ; BSR set to: 61
  4106                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4107  0112C4  0E0C               	movlw	12
  4108  0112C6  6EE6               	movwf	postinc1,c
  4109  0112C8  EC4A  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;main.c: 235:    set_load_relay_one(1);
  4113  0112CC  0E01               	movlw	1
  4114  0112CE  6EE6               	movwf	postinc1,c
  4115  0112D0  EC2B  F0E0         	call	_set_load_relay_one	;wreg free
  4116                           
  4117                           ;main.c: 236:    set_load_relay_two(1);
  4118  0112D4  0E01               	movlw	1
  4119  0112D6  6EE6               	movwf	postinc1,c
  4120  0112D8  EC23  F0E0         	call	_set_load_relay_two	;wreg free
  4121                           
  4122                           ;main.c: 238:    V.ui_state = mode;
  4123                           ;stkvar	_mode @ sp[(-17)+15]
  4124  0112DC  0EFE               	movlw	-2
  4125  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4126                           
  4127                           ;main.c: 239:    srand(1957);
  4128  0112E4  0EA5               	movlw	165
  4129  0112E6  6EE6               	movwf	postinc1,c
  4130  0112E8  0E07               	movlw	7
  4131  0112EA  6EE6               	movwf	postinc1,c
  4132  0112EC  EC75  F0DC         	call	_srand	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;main.c: 240:    set_vterm(0);
  4136  0112F0  0E00               	movlw	0
  4137  0112F2  6EE6               	movwf	postinc1,c
  4138  0112F4  EC82  F0DF         	call	_set_vterm	;wreg free
  4139                           
  4140                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4141  0112F8  0E1E               	movlw	low STR_1
  4142  0112FA  6EE6               	movwf	postinc1,c
  4143  0112FC  0EFF               	movlw	high STR_1
  4144  0112FE  6EE6               	movwf	postinc1,c
  4145  011300  0E00               	movlw	0
  4146  011302  6EE6               	movwf	postinc1,c
  4147  011304  0E00               	movlw	0
  4148  011306  6EE6               	movwf	postinc1,c
  4149  011308  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4150  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4151  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4152  011318  0E04               	movlw	4
  4153  01131A  6EE6               	movwf	postinc1,c
  4154  01131C  EC00  F0CE         	call	_sprintf	;wreg free
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.10");
  4158  011320  0ED2               	movlw	low STR_3
  4159  011322  6EE6               	movwf	postinc1,c
  4160  011324  0EFF               	movlw	high STR_3
  4161  011326  6EE6               	movwf	postinc1,c
  4162  011328  0E09               	movlw	low STR_2
  4163  01132A  6EE6               	movwf	postinc1,c
  4164  01132C  0EFF               	movlw	high STR_2
  4165  01132E  6EE6               	movwf	postinc1,c
  4166  011330  0E00               	movlw	0
  4167  011332  6EE6               	movwf	postinc1,c
  4168  011334  0E01               	movlw	1
  4169  011336  6EE6               	movwf	postinc1,c
  4170  011338  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4171  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4172  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4173  011348  0E06               	movlw	6
  4174  01134A  6EE6               	movwf	postinc1,c
  4175  01134C  EC00  F0CE         	call	_sprintf	;wreg free
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4179  011350  0ECA               	movlw	low STR_4
  4180  011352  6EE6               	movwf	postinc1,c
  4181  011354  0EFE               	movlw	high STR_4
  4182  011356  6EE6               	movwf	postinc1,c
  4183  011358  0E00               	movlw	0
  4184  01135A  6EE6               	movwf	postinc1,c
  4185  01135C  0E02               	movlw	2
  4186  01135E  6EE6               	movwf	postinc1,c
  4187  011360  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4188  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4189  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4190  011370  0E04               	movlw	4
  4191  011372  6EE6               	movwf	postinc1,c
  4192  011374  EC00  F0CE         	call	_sprintf	;wreg free
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4196  011378  0EA0               	movlw	low STR_5
  4197  01137A  6EE6               	movwf	postinc1,c
  4198  01137C  0EFE               	movlw	high STR_5
  4199  01137E  6EE6               	movwf	postinc1,c
  4200  011380  0E02               	movlw	2
  4201  011382  6EE6               	movwf	postinc1,c
  4202  011384  0E00               	movlw	0
  4203  011386  6EE6               	movwf	postinc1,c
  4204  011388  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4205  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4206  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4207  011398  0E04               	movlw	4
  4208  01139A  6EE6               	movwf	postinc1,c
  4209  01139C  EC00  F0CE         	call	_sprintf	;wreg free
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4213  0113A0  0EA0               	movlw	low STR_5
  4214  0113A2  6EE6               	movwf	postinc1,c
  4215  0113A4  0EFE               	movlw	high STR_5
  4216  0113A6  6EE6               	movwf	postinc1,c
  4217  0113A8  0E02               	movlw	2
  4218  0113AA  6EE6               	movwf	postinc1,c
  4219  0113AC  0E01               	movlw	1
  4220  0113AE  6EE6               	movwf	postinc1,c
  4221  0113B0  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4222  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4223  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4224  0113C0  0E04               	movlw	4
  4225  0113C2  6EE6               	movwf	postinc1,c
  4226  0113C4  EC00  F0CE         	call	_sprintf	;wreg free
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4230  0113C8  0EA0               	movlw	low STR_5
  4231  0113CA  6EE6               	movwf	postinc1,c
  4232  0113CC  0EFE               	movlw	high STR_5
  4233  0113CE  6EE6               	movwf	postinc1,c
  4234  0113D0  0E02               	movlw	2
  4235  0113D2  6EE6               	movwf	postinc1,c
  4236  0113D4  0E02               	movlw	2
  4237  0113D6  6EE6               	movwf	postinc1,c
  4238  0113D8  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4239  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4240  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4241  0113E8  0E04               	movlw	4
  4242  0113EA  6EE6               	movwf	postinc1,c
  4243  0113EC  EC00  F0CE         	call	_sprintf	;wreg free
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 247:    update_lcd(0);
  4247  0113F0  0E00               	movlw	0
  4248  0113F2  6EE6               	movwf	postinc1,c
  4249  0113F4  EC78  F0CD         	call	_update_lcd	;wreg free
  4250                           
  4251                           ;main.c: 248:    WaitMs(1000);
  4252  0113F8  0EE8               	movlw	232
  4253  0113FA  6EE6               	movwf	postinc1,c
  4254  0113FC  0E03               	movlw	3
  4255  0113FE  6EE6               	movwf	postinc1,c
  4256  011400  EC5A  F0DC         	call	_WaitMs	;wreg free
  4257                           
  4258                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4259  011404  0EFA               	movlw	250
  4260  011406  6EE6               	movwf	postinc1,c
  4261  011408  0E00               	movlw	0
  4262  01140A  6EE6               	movwf	postinc1,c
  4263  01140C  0E0A               	movlw	10
  4264  01140E  6EE6               	movwf	postinc1,c
  4265  011410  EC65  F0DB         	call	_StartTimer	;wreg free
  4266                           
  4267                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4268  011414  0EC8               	movlw	200
  4269  011416  6EE6               	movwf	postinc1,c
  4270  011418  0E00               	movlw	0
  4271  01141A  6EE6               	movwf	postinc1,c
  4272  01141C  0E01               	movlw	1
  4273  01141E  6EE6               	movwf	postinc1,c
  4274  011420  EC65  F0DB         	call	_StartTimer	;wreg free
  4275                           
  4276                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4277  011424  0EB8               	movlw	184
  4278  011426  6EE6               	movwf	postinc1,c
  4279  011428  0E0B               	movlw	11
  4280  01142A  6EE6               	movwf	postinc1,c
  4281  01142C  0E07               	movlw	7
  4282  01142E  6EE6               	movwf	postinc1,c
  4283  011430  EC65  F0DB         	call	_StartTimer	;wreg free
  4284                           
  4285                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4286  011434  0EDC               	movlw	220
  4287  011436  6EE6               	movwf	postinc1,c
  4288  011438  0E05               	movlw	5
  4289  01143A  6EE6               	movwf	postinc1,c
  4290  01143C  0E0B               	movlw	11
  4291  01143E  6EE6               	movwf	postinc1,c
  4292  011440  EC65  F0DB         	call	_StartTimer	;wreg free
  4293                           
  4294                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4295  011444  0EB8               	movlw	184
  4296  011446  6EE6               	movwf	postinc1,c
  4297  011448  0E0B               	movlw	11
  4298  01144A  6EE6               	movwf	postinc1,c
  4299  01144C  0E09               	movlw	9
  4300  01144E  6EE6               	movwf	postinc1,c
  4301  011450  EC65  F0DB         	call	_StartTimer	;wreg free
  4302                           
  4303                           ;main.c: 255:    start_adc_scan();
  4304  011454  ECFE  F0D7         	call	_start_adc_scan	;wreg free
  4305                           
  4306                           ;main.c: 256:    start_switch_handler();
  4307  011458  EC44  F0DF         	call	_start_switch_handler	;wreg free
  4308                           
  4309                           ; BSR set to: 57
  4310                           ;main.c: 257:    WaitMs(1000);
  4311  01145C  0EE8               	movlw	232
  4312  01145E  6EE6               	movwf	postinc1,c
  4313  011460  0E03               	movlw	3
  4314  011462  6EE6               	movwf	postinc1,c
  4315  011464  EC5A  F0DC         	call	_WaitMs	;wreg free
  4316                           
  4317                           ;main.c: 262:    i_ror = 1;
  4318                           ;stkvar	_i_ror @ sp[(-17)+16]
  4319  011468  0EFF               	movlw	-1
  4320  01146A  6AE3               	clrf	plusw1,c
  4321  01146C  2AE3               	incf	plusw1,f,c
  4322  01146E                     l13100:
  4323                           
  4324                           ;main.c: 264:     calc_ror_data();
  4325  01146E  ECB8  F0C5         	call	_calc_ror_data	;wreg free
  4326                           
  4327                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4328  011472  0E00               	movlw	0
  4329  011474  6EE6               	movwf	postinc1,c
  4330  011476  0E04               	movlw	4
  4331  011478  6EE6               	movwf	postinc1,c
  4332  01147A  EC71  F0A9         	call	_conv_raw_result	;wreg free
  4333  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4334  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4335  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4336  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4337  011496  0EB5               	movlw	low STR_8
  4338  011498  6EE6               	movwf	postinc1,c
  4339  01149A  0EFE               	movlw	high STR_8
  4340  01149C  6EE6               	movwf	postinc1,c
  4341  01149E  0E00               	movlw	0
  4342  0114A0  6EE6               	movwf	postinc1,c
  4343  0114A2  0E01               	movlw	1
  4344  0114A4  6EE6               	movwf	postinc1,c
  4345  0114A6  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4346  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4347  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4348  0114B6  0E08               	movlw	8
  4349  0114B8  6EE6               	movwf	postinc1,c
  4350  0114BA  EC00  F0CE         	call	_sprintf	;wreg free
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4354  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4355  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4358  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4359                           
  4360                           ;stkvar	_i_ror @ sp[(-21)+16]
  4361  0114DA  0EFB               	movlw	-5
  4362  0114DC  50E3               	movf	plusw1,w,c
  4363  0114DE  6EE6               	movwf	postinc1,c
  4364  0114E0  0E00               	movlw	0
  4365  0114E2  6EE6               	movwf	postinc1,c
  4366  0114E4  0E00               	movlw	0
  4367  0114E6  6EE6               	movwf	postinc1,c
  4368  0114E8  0E05               	movlw	5
  4369  0114EA  6EE6               	movwf	postinc1,c
  4370  0114EC  ECF3  F0CF         	call	_spinners	;wreg free
  4371  0114F0  5001               	movf	btemp^0,w,c
  4372  0114F2  6EE6               	movwf	postinc1,c
  4373  0114F4  0E00               	movlw	0
  4374  0114F6  6EE6               	movwf	postinc1,c
  4375  0114F8  0E84               	movlw	low STR_9
  4376  0114FA  6EE6               	movwf	postinc1,c
  4377  0114FC  0EFC               	movlw	high STR_9
  4378  0114FE  6EE6               	movwf	postinc1,c
  4379  011500  0E00               	movlw	0
  4380  011502  6EE6               	movwf	postinc1,c
  4381  011504  0E02               	movlw	2
  4382  011506  6EE6               	movwf	postinc1,c
  4383  011508  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4384  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4385  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4386  011518  0E0C               	movlw	12
  4387  01151A  6EE6               	movwf	postinc1,c
  4388  01151C  EC00  F0CE         	call	_sprintf	;wreg free
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;main.c: 267:     update_lcd(0);
  4392  011520  0E00               	movlw	0
  4393  011522  6EE6               	movwf	postinc1,c
  4394  011524  EC78  F0CD         	call	_update_lcd	;wreg free
  4395                           
  4396                           ;main.c: 268:     clear_adc_scan();
  4397  011528  EC9F  F0E0         	call	_clear_adc_scan	;wreg free
  4398                           
  4399                           ; BSR set to: 1
  4400                           ;main.c: 269:     start_adc_scan();
  4401  01152C  ECFE  F0D7         	call	_start_adc_scan	;wreg free
  4402                           
  4403                           ;main.c: 270:     WaitMs(2000);
  4404  011530  0ED0               	movlw	208
  4405  011532  6EE6               	movwf	postinc1,c
  4406  011534  0E07               	movlw	7
  4407  011536  6EE6               	movwf	postinc1,c
  4408  011538  EC5A  F0DC         	call	_WaitMs	;wreg free
  4409                           
  4410                           ;main.c: 273:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4411                           ;stkvar	_i_ror @ sp[(-17)+16]
  4412  01153C  0EFF               	movlw	-1
  4413  01153E  006F FF8C  F00C    	movff	plusw1,btemp+11
  4414  011544  2A0C               	incf	(btemp+11)^0,f,c
  4415  011546  0060  F033  FFE3   	movff	btemp+11,plusw1
  4416  01154C  060C               	decf	(btemp+11)^0,f,c
  4417  01154E  0E1E               	movlw	30
  4418  011550  600C               	cpfslt	(btemp+11)^0,c
  4419  011552  D01A               	goto	u12560
  4420  011554  EE21  F36B         	lfsr	2,_C+108	;volatile
  4421  011558  006F FF7B FFE6     	movff	postinc2,postinc1
  4422  01155E  006F FF7B FFE6     	movff	postinc2,postinc1
  4423  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4424  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4425  011570  0E42               	movlw	66
  4426  011572  6EE6               	movwf	postinc1,c
  4427  011574  0E60               	movlw	96
  4428  011576  6EE6               	movwf	postinc1,c
  4429  011578  0E65               	movlw	101
  4430  01157A  6EE6               	movwf	postinc1,c
  4431  01157C  0E3C               	movlw	60
  4432  01157E  6EE6               	movwf	postinc1,c
  4433  011580  ECF4  F0C7         	call	___flge	;wreg free
  4434  011584  A001               	btfss	btemp& (0+255),0,c
  4435  011586  D773               	goto	l13100
  4436  011588                     u12560:
  4437                           
  4438                           ;main.c: 275:    static_soc();
  4439  011588  ECC2  F0D8         	call	_static_soc	;wreg free
  4440                           
  4441                           ;main.c: 276:    init_bsoc();
  4442  01158C  ECE1  F0BD         	call	_init_bsoc	;wreg free
  4443                           
  4444                           ;main.c: 277:    set_load_relay_one(0);
  4445  011590  0E00               	movlw	0
  4446  011592  6EE6               	movwf	postinc1,c
  4447  011594  EC2B  F0E0         	call	_set_load_relay_one	;wreg free
  4448                           
  4449                           ;main.c: 278:    set_load_relay_two(0);
  4450  011598  0E00               	movlw	0
  4451  01159A  6EE6               	movwf	postinc1,c
  4452  01159C  EC23  F0E0         	call	_set_load_relay_two	;wreg free
  4453                           
  4454                           ;main.c: 279:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4455  0115A0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4456  0115A4  006F FF78  F00B    	movff	postinc2,btemp+10
  4457  0115AA  006F FF74  F00C    	movff	postdec2,btemp+11
  4458  0115B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4459  0115B6  0060  F033  FFE6   	movff	btemp+11,postinc1
  4460  0115BC  0E56               	movlw	low STR_10
  4461  0115BE  6EE6               	movwf	postinc1,c
  4462  0115C0  0EFD               	movlw	high STR_10
  4463  0115C2  6EE6               	movwf	postinc1,c
  4464  0115C4  0E00               	movlw	0
  4465  0115C6  6EE6               	movwf	postinc1,c
  4466  0115C8  0E00               	movlw	0
  4467  0115CA  6EE6               	movwf	postinc1,c
  4468  0115CC  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4469  0115D0  0060  F007  FFE6   	movff	btemp,postinc1
  4470  0115D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4471  0115DC  0E06               	movlw	6
  4472  0115DE  6EE6               	movwf	postinc1,c
  4473  0115E0  EC00  F0CE         	call	_sprintf	;wreg free
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 280:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4477  0115E4  EE21  F38F         	lfsr	2,_C+144	;volatile
  4478  0115E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4479  0115EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4480  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4481  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4482  011600  0E32               	movlw	low STR_11
  4483  011602  6EE6               	movwf	postinc1,c
  4484  011604  0EFE               	movlw	high STR_11
  4485  011606  6EE6               	movwf	postinc1,c
  4486  011608  0E00               	movlw	0
  4487  01160A  6EE6               	movwf	postinc1,c
  4488  01160C  0E01               	movlw	1
  4489  01160E  6EE6               	movwf	postinc1,c
  4490  011610  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4491  011614  0060  F007  FFE6   	movff	btemp,postinc1
  4492  01161A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4493  011620  0E08               	movlw	8
  4494  011622  6EE6               	movwf	postinc1,c
  4495  011624  EC00  F0CE         	call	_sprintf	;wreg free
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;main.c: 281:    update_lcd(0);
  4499  011628  0E00               	movlw	0
  4500  01162A  6EE6               	movwf	postinc1,c
  4501  01162C  EC78  F0CD         	call	_update_lcd	;wreg free
  4502                           
  4503                           ;main.c: 282:    WaitMs(2000);
  4504  011630  0ED0               	movlw	208
  4505  011632  6EE6               	movwf	postinc1,c
  4506  011634  0E07               	movlw	7
  4507  011636  6EE6               	movwf	postinc1,c
  4508  011638  EC5A  F0DC         	call	_WaitMs	;wreg free
  4509                           
  4510                           ;main.c: 283:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4511  01163C  0EDF               	movlw	low STR_12
  4512  01163E  6EE6               	movwf	postinc1,c
  4513  011640  0EFE               	movlw	high STR_12
  4514  011642  6EE6               	movwf	postinc1,c
  4515  011644  0E00               	movlw	0
  4516  011646  6EE6               	movwf	postinc1,c
  4517  011648  0E00               	movlw	0
  4518  01164A  6EE6               	movwf	postinc1,c
  4519  01164C  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4520  011650  0060  F007  FFE6   	movff	btemp,postinc1
  4521  011656  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4522  01165C  0E04               	movlw	4
  4523  01165E  6EE6               	movwf	postinc1,c
  4524  011660  EC00  F0CE         	call	_sprintf	;wreg free
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;main.c: 284:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4528  011664  0EF4               	movlw	low STR_13
  4529  011666  6EE6               	movwf	postinc1,c
  4530  011668  0EFE               	movlw	high STR_13
  4531  01166A  6EE6               	movwf	postinc1,c
  4532  01166C  0E00               	movlw	0
  4533  01166E  6EE6               	movwf	postinc1,c
  4534  011670  0E01               	movlw	1
  4535  011672  6EE6               	movwf	postinc1,c
  4536  011674  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4537  011678  0060  F007  FFE6   	movff	btemp,postinc1
  4538  01167E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4539  011684  0E04               	movlw	4
  4540  011686  6EE6               	movwf	postinc1,c
  4541  011688  EC00  F0CE         	call	_sprintf	;wreg free
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;main.c: 285:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4545  01168C  0E48               	movlw	low STR_14
  4546  01168E  6EE6               	movwf	postinc1,c
  4547  011690  0EFF               	movlw	high STR_14
  4548  011692  6EE6               	movwf	postinc1,c
  4549  011694  0E00               	movlw	0
  4550  011696  6EE6               	movwf	postinc1,c
  4551  011698  0E02               	movlw	2
  4552  01169A  6EE6               	movwf	postinc1,c
  4553  01169C  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4554  0116A0  0060  F007  FFE6   	movff	btemp,postinc1
  4555  0116A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4556  0116AC  0E04               	movlw	4
  4557  0116AE  6EE6               	movwf	postinc1,c
  4558  0116B0  EC00  F0CE         	call	_sprintf	;wreg free
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;main.c: 286:    update_lcd(0);
  4562  0116B4  0E00               	movlw	0
  4563  0116B6  6EE6               	movwf	postinc1,c
  4564  0116B8  EC78  F0CD         	call	_update_lcd	;wreg free
  4565                           
  4566                           ;main.c: 287:    uint16_t i_esr = 1;
  4567  0116BC  0E01               	movlw	1
  4568  0116BE  6E0B               	movwf	(btemp+10)^0,c
  4569  0116C0  0E00               	movlw	0
  4570  0116C2  6E0C               	movwf	(btemp+11)^0,c
  4571                           
  4572                           ;stkvar	_i_esr @ sp[(-17)+8]
  4573  0116C4  0EF7               	movlw	-9
  4574  0116C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4575  0116CC  0EF8               	movlw	-8
  4576  0116CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  4577                           
  4578                           ;main.c: 289:    float esr_temp;;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4579  0116D4  D06D               	goto	l13158
  4580  0116D6                     l13146:
  4581                           
  4582                           ;main.c: 291:     WaitMs(110);
  4583  0116D6  0E6E               	movlw	110
  4584  0116D8  6EE6               	movwf	postinc1,c
  4585  0116DA  0E00               	movlw	0
  4586  0116DC  6EE6               	movwf	postinc1,c
  4587  0116DE  EC5A  F0DC         	call	_WaitMs	;wreg free
  4588                           
  4589                           ;main.c: 292:     shape = (uint8_t) fabsf(esr_temp);
  4590                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4591  0116E2  0EF3               	movlw	-13
  4592  0116E4  006F FF8F FFE6     	movff	plusw1,postinc1
  4593  0116EA  006F FF8F FFE6     	movff	plusw1,postinc1
  4594  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4595  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4596  0116FC  ECC6  F0D2         	call	_fabsf	;wreg free
  4597  011700  0060  F007  FFE6   	movff	btemp,postinc1
  4598  011706  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4599  01170C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4600  011712  0060  F013  FFE6   	movff	btemp+3,postinc1
  4601  011718  EC3B  F0C7         	call	___fltol	;wreg free
  4602  01171C  0060  F004  F00C   	movff	btemp,btemp+11
  4603                           
  4604                           ;stkvar	_shape @ sp[(-17)+10]
  4605  011722  0EF9               	movlw	-7
  4606  011724  0060  F033  FFE3   	movff	btemp+11,plusw1
  4607                           
  4608                           ;main.c: 293:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4609  01172A  0E00               	movlw	0
  4610  01172C  6EE6               	movwf	postinc1,c
  4611                           
  4612                           ;stkvar	_shape @ sp[(-18)+10]
  4613  01172E  0EF8               	movlw	-8
  4614  011730  50E3               	movf	plusw1,w,c
  4615  011732  6EE6               	movwf	postinc1,c
  4616  011734  ECF3  F0CF         	call	_spinners	;wreg free
  4617  011738  5001               	movf	btemp^0,w,c
  4618  01173A  6EE6               	movwf	postinc1,c
  4619  01173C  0E00               	movlw	0
  4620  01173E  6EE6               	movwf	postinc1,c
  4621  011740  0E00               	movlw	0
  4622  011742  6EE6               	movwf	postinc1,c
  4623  011744  0E00               	movlw	0
  4624  011746  6EE6               	movwf	postinc1,c
  4625  011748  ECF3  F0CF         	call	_spinners	;wreg free
  4626  01174C  5001               	movf	btemp^0,w,c
  4627  01174E  6EE6               	movwf	postinc1,c
  4628  011750  0E00               	movlw	0
  4629  011752  6EE6               	movwf	postinc1,c
  4630  011754  0E33               	movlw	low STR_15
  4631  011756  6EE6               	movwf	postinc1,c
  4632  011758  0EFF               	movlw	high STR_15
  4633  01175A  6EE6               	movwf	postinc1,c
  4634  01175C  0E00               	movlw	0
  4635  01175E  6EE6               	movwf	postinc1,c
  4636  011760  0E02               	movlw	2
  4637  011762  6EE6               	movwf	postinc1,c
  4638  011764  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4639  011768  0060  F007  FFE6   	movff	btemp,postinc1
  4640  01176E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4641  011774  0E08               	movlw	8
  4642  011776  6EE6               	movwf	postinc1,c
  4643  011778  EC00  F0CE         	call	_sprintf	;wreg free
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 294:     update_lcd(0);
  4647  01177C  0E00               	movlw	0
  4648  01177E  6EE6               	movwf	postinc1,c
  4649  011780  EC78  F0CD         	call	_update_lcd	;wreg free
  4650                           
  4651                           ;main.c: 296:     if (i_esr++ > 512)
  4652                           ;stkvar	_i_esr @ sp[(-17)+8]
  4653  011784  50E1               	movf	fsr1l,w,c
  4654  011786  0FF7               	addlw	-9
  4655  011788  6ED9               	movwf	fsr2l,c
  4656  01178A  50E2               	movf	fsr1h,w,c
  4657  01178C  6EDA               	movwf	fsr2h,c
  4658  01178E  0EFF               	movlw	255
  4659  011790  22DA               	addwfc	fsr2h,f,c
  4660  011792  006F FF7C  F00B    	movff	indf2,btemp+10
  4661  011798  0E01               	movlw	1
  4662  01179A  26DE               	addwf	postinc2,f,c
  4663  01179C  006F FF7C  F00C    	movff	indf2,btemp+11
  4664  0117A2  0E00               	movlw	0
  4665  0117A4  22DD               	addwfc	postdec2,f,c
  4666  0117A6  040B               	decf	(btemp+10)^0,w,c
  4667  0117A8  0E02               	movlw	2
  4668  0117AA  580C               	subwfb	(btemp+11)^0,w,c
  4669  0117AC  B0D8               	btfsc	status,0,c
  4670  0117AE  D017               	goto	u12580
  4671  0117B0                     l13158:
  4672                           
  4673                           ;main.c: 290:    while ((esr_temp = esr_check(0)) < 0.0) {
  4674  0117B0  0E00               	movlw	0
  4675  0117B2  6EE6               	movwf	postinc1,c
  4676  0117B4  ECA0  F0B8         	call	_esr_check	;wreg free
  4677                           
  4678                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4679  0117B8  0EF3               	movlw	-13
  4680  0117BA  0060  F007  FFE3   	movff	btemp,plusw1
  4681  0117C0  0EF4               	movlw	-12
  4682  0117C2  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4683  0117C8  0EF5               	movlw	-11
  4684  0117CA  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4685  0117D0  0EF6               	movlw	-10
  4686  0117D2  0060  F013  FFE3   	movff	btemp+3,plusw1
  4687  0117D8  0EF6               	movlw	-10
  4688  0117DA  BEE3               	btfsc	plusw1,7,c
  4689  0117DC  D77C               	goto	l13146
  4690  0117DE                     u12580:
  4691                           
  4692                           ;main.c: 299:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4693  0117DE  EE21  F387         	lfsr	2,_C+136	;volatile
  4694  0117E2  006F FF7B FFE6     	movff	postinc2,postinc1
  4695  0117E8  006F FF7B FFE6     	movff	postinc2,postinc1
  4696  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4697  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4698  0117FA  0E40               	movlw	low STR_16
  4699  0117FC  6EE6               	movwf	postinc1,c
  4700  0117FE  0EFD               	movlw	high STR_16
  4701  011800  6EE6               	movwf	postinc1,c
  4702  011802  0E00               	movlw	0
  4703  011804  6EE6               	movwf	postinc1,c
  4704  011806  0E00               	movlw	0
  4705  011808  6EE6               	movwf	postinc1,c
  4706  01180A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4707  01180E  0060  F007  FFE6   	movff	btemp,postinc1
  4708  011814  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4709  01181A  0E08               	movlw	8
  4710  01181C  6EE6               	movwf	postinc1,c
  4711  01181E  EC00  F0CE         	call	_sprintf	;wreg free
  4712                           
  4713                           ;main.c: 300:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4714  011822  EE22  F00D         	lfsr	2,_C+270	;volatile
  4715  011826  006F FF7B FFE6     	movff	postinc2,postinc1
  4716  01182C  006F FF7B FFE6     	movff	postinc2,postinc1
  4717  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4718  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4719  01183E  EE22  F019         	lfsr	2,_C+282	;volatile
  4720  011842  006F FF7B FFE6     	movff	postinc2,postinc1
  4721  011848  006F FF7B FFE6     	movff	postinc2,postinc1
  4722  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4723  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4724  01185A  0E50               	movlw	low STR_17
  4725  01185C  6EE6               	movwf	postinc1,c
  4726  01185E  0EFC               	movlw	high STR_17
  4727  011860  6EE6               	movwf	postinc1,c
  4728  011862  0E00               	movlw	0
  4729  011864  6EE6               	movwf	postinc1,c
  4730  011866  0E01               	movlw	1
  4731  011868  6EE6               	movwf	postinc1,c
  4732  01186A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4733  01186E  0060  F007  FFE6   	movff	btemp,postinc1
  4734  011874  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4735  01187A  0E0C               	movlw	12
  4736  01187C  6EE6               	movwf	postinc1,c
  4737  01187E  EC00  F0CE         	call	_sprintf	;wreg free
  4738                           
  4739                           ;main.c: 301:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4740  011882  EE22  F011         	lfsr	2,_C+274	;volatile
  4741  011886  006F FF7B FFE6     	movff	postinc2,postinc1
  4742  01188C  006F FF7B FFE6     	movff	postinc2,postinc1
  4743  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4744  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4745  01189E  EE22  F01D         	lfsr	2,_C+286	;volatile
  4746  0118A2  006F FF7B FFE6     	movff	postinc2,postinc1
  4747  0118A8  006F FF7B FFE6     	movff	postinc2,postinc1
  4748  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4749  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4750  0118BA  0E6A               	movlw	low STR_18
  4751  0118BC  6EE6               	movwf	postinc1,c
  4752  0118BE  0EFC               	movlw	high STR_18
  4753  0118C0  6EE6               	movwf	postinc1,c
  4754  0118C2  0E00               	movlw	0
  4755  0118C4  6EE6               	movwf	postinc1,c
  4756  0118C6  0E02               	movlw	2
  4757  0118C8  6EE6               	movwf	postinc1,c
  4758  0118CA  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4759  0118CE  0060  F007  FFE6   	movff	btemp,postinc1
  4760  0118D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4761  0118DA  0E0C               	movlw	12
  4762  0118DC  6EE6               	movwf	postinc1,c
  4763  0118DE  EC00  F0CE         	call	_sprintf	;wreg free
  4764                           
  4765                           ;main.c: 302:    update_lcd(0);
  4766  0118E2  0E00               	movlw	0
  4767  0118E4  6EE6               	movwf	postinc1,c
  4768  0118E6  EC78  F0CD         	call	_update_lcd	;wreg free
  4769                           
  4770                           ;main.c: 303:    WaitMs(5000);
  4771  0118EA  0E88               	movlw	136
  4772  0118EC  6EE6               	movwf	postinc1,c
  4773  0118EE  0E13               	movlw	19
  4774  0118F0  6EE6               	movwf	postinc1,c
  4775  0118F2  EC5A  F0DC         	call	_WaitMs	;wreg free
  4776                           
  4777                           ;main.c: 304:    V.system_stable = 1;
  4778  0118F6  0E01               	movlw	1
  4779  0118F8  0101               	movlb	1	; () banked
  4780  0118FA  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4781                           
  4782                           ;main.c: 305:    break;
  4783  0118FC  D01C               	goto	l13170
  4784  0118FE                     l1340:
  4785                           
  4786                           ; BSR set to: 1
  4787                           ;main.c: 311:    P.SYSTEM_STABLE = 1;
  4788  0118FE  0100               	movlb	0	; () banked
  4789  011900  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4790                           
  4791                           ;main.c: 312:    break;
  4792  011902  D019               	goto	l13170
  4793  011904                     l1342:
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;main.c: 315:    V.ui_state = UI_STATE_INIT;
  4797  011904  6B30               	clrf	_V& (0+255),b	;volatile
  4798                           
  4799                           ;main.c: 316:    break;
  4800  011906  D017               	goto	l13170
  4801  011908                     l13168:
  4802  011908  0101               	movlb	1	; () banked
  4803  01190A  5130               	movf	_V& (0+255),w,b	;volatile
  4804  01190C  6E0B               	movwf	(btemp+10)^0,c
  4805  01190E  6A0C               	clrf	(btemp+11)^0,c
  4806                           
  4807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4808                           ; Switch size 1, requested type "simple"
  4809                           ; Number of cases is 1, Range of values is 0 to 0
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814  011910  500C               	movf	(btemp+11)^0,w,c
  4815  011912  0A00               	xorlw	0	; case 0
  4816  011914  A4D8               	btfss	status,2,c
  4817  011916  D7F6               	goto	l1342
  4818                           
  4819                           ; BSR set to: 1
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 5, Range of values is 0 to 5
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte           16     9 (average)
  4825                           ;	Chosen strategy is simple_byte
  4826  011918  500B               	movf	(btemp+10)^0,w,c
  4827  01191A  0A00               	xorlw	0	; case 0
  4828  01191C  B4D8               	btfsc	status,2,c
  4829  01191E  D4CE               	goto	l13050
  4830  011920  0A01               	xorlw	1	; case 1
  4831  011922  B4D8               	btfsc	status,2,c
  4832  011924  D008               	goto	l13170
  4833  011926  0A02               	xorlw	2	; case 3
  4834  011928  B4D8               	btfsc	status,2,c
  4835  01192A  D005               	goto	l13170
  4836  01192C  0A07               	xorlw	7	; case 4
  4837  01192E  B4D8               	btfsc	status,2,c
  4838  011930  D7E6               	goto	l1340
  4839  011932  0A01               	xorlw	1	; case 5
  4840  011934  D7E7               	goto	l1342
  4841  011936                     l13170:
  4842                           
  4843                           ;main.c: 319:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4844  011936  0E01               	movlw	1
  4845  011938  6EE6               	movwf	postinc1,c
  4846  01193A  EC8B  F0DD         	call	_TimerDone	;wreg free
  4847  01193E  5001               	movf	btemp^0,w,c
  4848  011940  B4D8               	btfsc	status,2,c
  4849  011942  D013               	goto	l13182
  4850  011944  EC8F  F0E0         	call	_check_adc_scan	;wreg free
  4851  011948  5001               	movf	btemp^0,w,c
  4852  01194A  B4D8               	btfsc	status,2,c
  4853  01194C  D00E               	goto	l13182
  4854                           
  4855                           ;main.c: 323:    convert_adc_data();
  4856  01194E  EC6A  F0D2         	call	_convert_adc_data	;wreg free
  4857                           
  4858                           ;main.c: 327:    clear_adc_scan();
  4859  011952  EC9F  F0E0         	call	_clear_adc_scan	;wreg free
  4860                           
  4861                           ; BSR set to: 1
  4862                           ;main.c: 328:    start_adc_scan();
  4863  011956  ECFE  F0D7         	call	_start_adc_scan	;wreg free
  4864                           
  4865                           ;main.c: 329:    StartTimer(TMR_ADC, 200);
  4866  01195A  0EC8               	movlw	200
  4867  01195C  6EE6               	movwf	postinc1,c
  4868  01195E  0E00               	movlw	0
  4869  011960  6EE6               	movwf	postinc1,c
  4870  011962  0E01               	movlw	1
  4871  011964  6EE6               	movwf	postinc1,c
  4872  011966  EC65  F0DB         	call	_StartTimer	;wreg free
  4873  01196A                     l13182:
  4874                           
  4875                           ;main.c: 336:   if (TimerDone(TMR_DISPLAY)) {
  4876                           
  4877                           ;main.c: 332:   if (V.ticks) {
  4878  01196A  0E0A               	movlw	10
  4879  01196C  6EE6               	movwf	postinc1,c
  4880  01196E  EC8B  F0DD         	call	_TimerDone	;wreg free
  4881  011972  5001               	movf	btemp^0,w,c
  4882  011974  B4D8               	btfsc	status,2,c
  4883  011976  EF45  F091         	goto	l13258
  4884                           
  4885                           ;main.c: 337:    if (TimerDone(TMR_HELPDIS)) {
  4886  01197A  0E09               	movlw	9
  4887  01197C  6EE6               	movwf	postinc1,c
  4888  01197E  EC8B  F0DD         	call	_TimerDone	;wreg free
  4889  011982  5001               	movf	btemp^0,w,c
  4890  011984  B4D8               	btfsc	status,2,c
  4891  011986  D004               	goto	l13190
  4892                           
  4893                           ;main.c: 338:     set_display_info(DIS_STR);
  4894  011988  0E00               	movlw	0
  4895  01198A  6EE6               	movwf	postinc1,c
  4896  01198C  EC91  F0DF         	call	_set_display_info	;wreg free
  4897  011990                     l13190:
  4898                           
  4899                           ;main.c: 340:    calc_model_data();
  4900  011990  EC3B  F0AE         	call	_calc_model_data	;wreg free
  4901                           
  4902                           ; BSR set to: 57
  4903                           ;main.c: 347:     hid_display(&H);
  4904                           
  4905                           ;main.c: 342:    if (0) {
  4906  011994  0EF7               	movlw	_H& (0+255)
  4907  011996  6EE6               	movwf	postinc1,c
  4908  011998  EC85  F0CE         	call	_hid_display	;wreg free
  4909                           
  4910                           ;main.c: 348:     switch (H.hid_display) {
  4911  01199C  EFF4  F090         	goto	l13238
  4912  0119A0                     l1350:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 350:      V.calib = 0;
  4916  0119A0  0101               	movlb	1	; () banked
  4917  0119A2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4918                           
  4919                           ; BSR set to: 1
  4920                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  4921  0119A4  EE22  F021         	lfsr	2,_C+290	;volatile
  4922  0119A8  50DF               	movf	indf2,w,c
  4923  0119AA  A4D8               	btfss	status,2,c
  4924  0119AC  D002               	goto	l13200
  4925                           
  4926                           ; BSR set to: 1
  4927  0119AE  0E20               	movlw	32
  4928  0119B0  D001               	goto	L1
  4929  0119B2                     l13200:
  4930                           
  4931                           ; BSR set to: 1
  4932  0119B2  0E44               	movlw	68
  4933  0119B4                     L1:
  4934  0119B4  6E0B               	movwf	(btemp+10)^0,c
  4935  0119B6  0E00               	movlw	0
  4936  0119B8  6E0C               	movwf	(btemp+11)^0,c
  4937                           
  4938                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4939  0119BA  0EF1               	movlw	-15
  4940  0119BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4941  0119C2  0EF2               	movlw	-14
  4942  0119C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  4943                           
  4944                           ; BSR set to: 1
  4945  0119CA  EE21  F37B         	lfsr	2,_C+124	;volatile
  4946  0119CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4947  0119D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4948  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4949  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4950                           
  4951                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4952  0119E6  0EED               	movlw	-19
  4953  0119E8  006F FF8F FFE6     	movff	plusw1,postinc1
  4954  0119EE  006F FF8F FFE6     	movff	plusw1,postinc1
  4955  0119F4  0E1C               	movlw	low STR_22
  4956  0119F6  6EE6               	movwf	postinc1,c
  4957  0119F8  0EFE               	movlw	high STR_22
  4958  0119FA  6EE6               	movwf	postinc1,c
  4959  0119FC  0E00               	movlw	0
  4960  0119FE  6EE6               	movwf	postinc1,c
  4961  011A00  0E00               	movlw	0
  4962  011A02  6EE6               	movwf	postinc1,c
  4963  011A04  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4964  011A08  0060  F007  FFE6   	movff	btemp,postinc1
  4965  011A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4966  011A14  0E0A               	movlw	10
  4967  011A16  6EE6               	movwf	postinc1,c
  4968  011A18  EC00  F0CE         	call	_sprintf	;wreg free
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  4972  011A1C  EE21  F373         	lfsr	2,_C+116	;volatile
  4973  011A20  006F FF7B FFE6     	movff	postinc2,postinc1
  4974  011A26  006F FF7B FFE6     	movff	postinc2,postinc1
  4975  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4976  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4977  011A38  0E06               	movlw	low STR_23
  4978  011A3A  6EE6               	movwf	postinc1,c
  4979  011A3C  0EFE               	movlw	high STR_23
  4980  011A3E  6EE6               	movwf	postinc1,c
  4981  011A40  0E00               	movlw	0
  4982  011A42  6EE6               	movwf	postinc1,c
  4983  011A44  0E01               	movlw	1
  4984  011A46  6EE6               	movwf	postinc1,c
  4985  011A48  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  4986  011A4C  0060  F007  FFE6   	movff	btemp,postinc1
  4987  011A52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4988  011A58  0E08               	movlw	8
  4989  011A5A  6EE6               	movwf	postinc1,c
  4990  011A5C  EC00  F0CE         	call	_sprintf	;wreg free
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  4994  011A60  EE21  F377         	lfsr	2,_C+120	;volatile
  4995  011A64  006F FF7B FFE6     	movff	postinc2,postinc1
  4996  011A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  4997  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4998  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4999  011A7C  0EF0               	movlw	low STR_24
  5000  011A7E  6EE6               	movwf	postinc1,c
  5001  011A80  0EFD               	movlw	high STR_24
  5002  011A82  6EE6               	movwf	postinc1,c
  5003  011A84  0E00               	movlw	0
  5004  011A86  6EE6               	movwf	postinc1,c
  5005  011A88  0E02               	movlw	2
  5006  011A8A  6EE6               	movwf	postinc1,c
  5007  011A8C  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5008  011A90  0060  F007  FFE6   	movff	btemp,postinc1
  5009  011A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5010  011A9C  0E08               	movlw	8
  5011  011A9E  6EE6               	movwf	postinc1,c
  5012  011AA0  EC00  F0CE         	call	_sprintf	;wreg free
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5016  011AA4  EE22  F021         	lfsr	2,_C+290	;volatile
  5017  011AA8  50DF               	movf	indf2,w,c
  5018  011AAA  A4D8               	btfss	status,2,c
  5019  011AAC  D002               	goto	l13212
  5020                           
  5021                           ; BSR set to: 0
  5022  011AAE  0E20               	movlw	32
  5023  011AB0  D001               	goto	L2
  5024  011AB2                     l13212:
  5025                           
  5026                           ; BSR set to: 0
  5027  011AB2  0E44               	movlw	68
  5028  011AB4                     L2:
  5029  011AB4  6E0B               	movwf	(btemp+10)^0,c
  5030  011AB6  0E00               	movlw	0
  5031  011AB8  6E0C               	movwf	(btemp+11)^0,c
  5032                           
  5033                           ;stkvar	_main$3756 @ sp[(-17)+0]
  5034  011ABA  0EEF               	movlw	-17
  5035  011ABC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5036  011AC2  0EF0               	movlw	-16
  5037  011AC4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5038                           
  5039                           ; BSR set to: 0
  5040  011ACA  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5041  011ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  5042  011AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5043  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  5044  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5045                           
  5046                           ;stkvar	_main$3756 @ sp[(-21)+0]
  5047  011AE6  0EEB               	movlw	-21
  5048  011AE8  006F FF8F FFE6     	movff	plusw1,postinc1
  5049  011AEE  006F FF8F FFE6     	movff	plusw1,postinc1
  5050  011AF4  0EDA               	movlw	low STR_25
  5051  011AF6  6EE6               	movwf	postinc1,c
  5052  011AF8  0EFD               	movlw	high STR_25
  5053  011AFA  6EE6               	movwf	postinc1,c
  5054  011AFC  0E01               	movlw	1
  5055  011AFE  6EE6               	movwf	postinc1,c
  5056  011B00  0E00               	movlw	0
  5057  011B02  6EE6               	movwf	postinc1,c
  5058  011B04  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5059  011B08  0060  F007  FFE6   	movff	btemp,postinc1
  5060  011B0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5061  011B14  0E0A               	movlw	10
  5062  011B16  6EE6               	movwf	postinc1,c
  5063  011B18  EC00  F0CE         	call	_sprintf	;wreg free
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5067  011B1C  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5068  011B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5069  011B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5070  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5071  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5072  011B38  0EC4               	movlw	low STR_26
  5073  011B3A  6EE6               	movwf	postinc1,c
  5074  011B3C  0EFD               	movlw	high STR_26
  5075  011B3E  6EE6               	movwf	postinc1,c
  5076  011B40  0E01               	movlw	1
  5077  011B42  6EE6               	movwf	postinc1,c
  5078  011B44  0E01               	movlw	1
  5079  011B46  6EE6               	movwf	postinc1,c
  5080  011B48  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5081  011B4C  0060  F007  FFE6   	movff	btemp,postinc1
  5082  011B52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5083  011B58  0E08               	movlw	8
  5084  011B5A  6EE6               	movwf	postinc1,c
  5085  011B5C  EC00  F0CE         	call	_sprintf	;wreg free
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5089  011B60  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5090  011B64  006F FF7B FFE6     	movff	postinc2,postinc1
  5091  011B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  5092  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5093  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5094  011B7C  0EAE               	movlw	low STR_27
  5095  011B7E  6EE6               	movwf	postinc1,c
  5096  011B80  0EFD               	movlw	high STR_27
  5097  011B82  6EE6               	movwf	postinc1,c
  5098  011B84  0E01               	movlw	1
  5099  011B86  6EE6               	movwf	postinc1,c
  5100  011B88  0E02               	movlw	2
  5101  011B8A  6EE6               	movwf	postinc1,c
  5102  011B8C  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5103  011B90  0060  F007  FFE6   	movff	btemp,postinc1
  5104  011B96  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5105  011B9C  0E08               	movlw	8
  5106  011B9E  6EE6               	movwf	postinc1,c
  5107  011BA0  EC00  F0CE         	call	_sprintf	;wreg free
  5108                           
  5109                           ;main.c: 358:      break;
  5110  011BA4  D337               	goto	l13240
  5111  011BA6                     l1360:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;main.c: 360:      V.calib = 0;
  5115  011BA6  0101               	movlb	1	; () banked
  5116  011BA8  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5120  011BAA  EE21  F303         	lfsr	2,_C+4	;volatile
  5121  011BAE  006F FF7B FFE6     	movff	postinc2,postinc1
  5122  011BB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5123  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5124  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5125  011BC6  EE21  F313         	lfsr	2,_C+20	;volatile
  5126  011BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5127  011BD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5128  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5129  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5130  011BE2  0E74               	movlw	low STR_28
  5131  011BE4  6EE6               	movwf	postinc1,c
  5132  011BE6  0EFE               	movlw	high STR_28
  5133  011BE8  6EE6               	movwf	postinc1,c
  5134  011BEA  0E00               	movlw	0
  5135  011BEC  6EE6               	movwf	postinc1,c
  5136  011BEE  0E00               	movlw	0
  5137  011BF0  6EE6               	movwf	postinc1,c
  5138  011BF2  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5139  011BF6  0060  F007  FFE6   	movff	btemp,postinc1
  5140  011BFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5141  011C02  0E0C               	movlw	12
  5142  011C04  6EE6               	movwf	postinc1,c
  5143  011C06  EC00  F0CE         	call	_sprintf	;wreg free
  5144                           
  5145                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5146  011C0A  EE21  F2FF         	lfsr	2,_C
  5147  011C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5148  011C14  006F FF7B FFE6     	movff	postinc2,postinc1
  5149  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5150  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5151  011C26  EE21  F30F         	lfsr	2,_C+16	;volatile
  5152  011C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011C30  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011C42  0E48               	movlw	low STR_29
  5157  011C44  6EE6               	movwf	postinc1,c
  5158  011C46  0EFE               	movlw	high STR_29
  5159  011C48  6EE6               	movwf	postinc1,c
  5160  011C4A  0E00               	movlw	0
  5161  011C4C  6EE6               	movwf	postinc1,c
  5162  011C4E  0E01               	movlw	1
  5163  011C50  6EE6               	movwf	postinc1,c
  5164  011C52  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5165  011C56  0060  F007  FFE6   	movff	btemp,postinc1
  5166  011C5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5167  011C62  0E0C               	movlw	12
  5168  011C64  6EE6               	movwf	postinc1,c
  5169  011C66  EC00  F0CE         	call	_sprintf	;wreg free
  5170                           
  5171                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5172  011C6A  EE21  F33F         	lfsr	2,_C+64	;volatile
  5173  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011C86  EE21  F307         	lfsr	2,_C+8	;volatile
  5178  011C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011C90  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011CA2  0E5E               	movlw	low STR_30
  5183  011CA4  6EE6               	movwf	postinc1,c
  5184  011CA6  0EFE               	movlw	high STR_30
  5185  011CA8  6EE6               	movwf	postinc1,c
  5186  011CAA  0E00               	movlw	0
  5187  011CAC  6EE6               	movwf	postinc1,c
  5188  011CAE  0E02               	movlw	2
  5189  011CB0  6EE6               	movwf	postinc1,c
  5190  011CB2  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5191  011CB6  0060  F007  FFE6   	movff	btemp,postinc1
  5192  011CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5193  011CC2  0E0C               	movlw	12
  5194  011CC4  6EE6               	movwf	postinc1,c
  5195  011CC6  EC00  F0CE         	call	_sprintf	;wreg free
  5196                           
  5197                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5198  011CCA  EE21  F39F         	lfsr	2,_C+160	;volatile
  5199  011CCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  011CD4  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5202  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5203  011CE6  0E6C               	movlw	low STR_31
  5204  011CE8  6EE6               	movwf	postinc1,c
  5205  011CEA  0EFD               	movlw	high STR_31
  5206  011CEC  6EE6               	movwf	postinc1,c
  5207  011CEE  0E01               	movlw	1
  5208  011CF0  6EE6               	movwf	postinc1,c
  5209  011CF2  0E00               	movlw	0
  5210  011CF4  6EE6               	movwf	postinc1,c
  5211  011CF6  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5212  011CFA  0060  F007  FFE6   	movff	btemp,postinc1
  5213  011D00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5214  011D06  0E08               	movlw	8
  5215  011D08  6EE6               	movwf	postinc1,c
  5216  011D0A  EC00  F0CE         	call	_sprintf	;wreg free
  5217                           
  5218                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5219  011D0E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5220  011D12  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  011D18  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5223  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5224  011D2A  0E82               	movlw	low STR_32
  5225  011D2C  6EE6               	movwf	postinc1,c
  5226  011D2E  0EFD               	movlw	high STR_32
  5227  011D30  6EE6               	movwf	postinc1,c
  5228  011D32  0E01               	movlw	1
  5229  011D34  6EE6               	movwf	postinc1,c
  5230  011D36  0E01               	movlw	1
  5231  011D38  6EE6               	movwf	postinc1,c
  5232  011D3A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5233  011D3E  0060  F007  FFE6   	movff	btemp,postinc1
  5234  011D44  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5235  011D4A  0E08               	movlw	8
  5236  011D4C  6EE6               	movwf	postinc1,c
  5237  011D4E  EC00  F0CE         	call	_sprintf	;wreg free
  5238                           
  5239                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5240  011D52  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5241  011D56  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011D5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5245  011D6E  EE21  F39F         	lfsr	2,_C+160	;volatile
  5246  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  5247  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  5248  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5249  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5250  011D8A  ECD6  F0A2         	call	___fladd	;wreg free
  5251  011D8E  0060  F007  FFE6   	movff	btemp,postinc1
  5252  011D94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5253  011D9A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5254  011DA0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5255  011DA6  0E98               	movlw	low STR_33
  5256  011DA8  6EE6               	movwf	postinc1,c
  5257  011DAA  0EFD               	movlw	high STR_33
  5258  011DAC  6EE6               	movwf	postinc1,c
  5259  011DAE  0E01               	movlw	1
  5260  011DB0  6EE6               	movwf	postinc1,c
  5261  011DB2  0E02               	movlw	2
  5262  011DB4  6EE6               	movwf	postinc1,c
  5263  011DB6  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5264  011DBA  0060  F007  FFE6   	movff	btemp,postinc1
  5265  011DC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5266  011DC6  0E08               	movlw	8
  5267  011DC8  6EE6               	movwf	postinc1,c
  5268  011DCA  EC00  F0CE         	call	_sprintf	;wreg free
  5269                           
  5270                           ;main.c: 368:      break;
  5271  011DCE  D222               	goto	l13240
  5272  011DD0                     l1361:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 370:      V.calib = 0;
  5276  011DD0  0101               	movlb	1	; () banked
  5277  011DD2  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5278                           
  5279                           ; BSR set to: 1
  5280                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5281  011DD4  EE21  F37F         	lfsr	2,_C+128	;volatile
  5282  011DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  5283  011DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  5284  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5285  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5286  011DF0  0EE4               	movlw	low STR_34
  5287  011DF2  6EE6               	movwf	postinc1,c
  5288  011DF4  0EFC               	movlw	high STR_34
  5289  011DF6  6EE6               	movwf	postinc1,c
  5290  011DF8  0E00               	movlw	0
  5291  011DFA  6EE6               	movwf	postinc1,c
  5292  011DFC  0E00               	movlw	0
  5293  011DFE  6EE6               	movwf	postinc1,c
  5294  011E00  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5295  011E04  0060  F007  FFE6   	movff	btemp,postinc1
  5296  011E0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5297  011E10  0E08               	movlw	8
  5298  011E12  6EE6               	movwf	postinc1,c
  5299  011E14  EC00  F0CE         	call	_sprintf	;wreg free
  5300                           
  5301                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5302  011E18  EE21  F393         	lfsr	2,_C+148	;volatile
  5303  011E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5304  011E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5305  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5306  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5307  011E34  EE21  F38F         	lfsr	2,_C+144	;volatile
  5308  011E38  006F FF7B FFE6     	movff	postinc2,postinc1
  5309  011E3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5310  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5311  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5312  011E50  0E29               	movlw	low STR_35
  5313  011E52  6EE6               	movwf	postinc1,c
  5314  011E54  0EFD               	movlw	high STR_35
  5315  011E56  6EE6               	movwf	postinc1,c
  5316  011E58  0E00               	movlw	0
  5317  011E5A  6EE6               	movwf	postinc1,c
  5318  011E5C  0E01               	movlw	1
  5319  011E5E  6EE6               	movwf	postinc1,c
  5320  011E60  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5321  011E64  0060  F007  FFE6   	movff	btemp,postinc1
  5322  011E6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5323  011E70  0E0C               	movlw	12
  5324  011E72  6EE6               	movwf	postinc1,c
  5325  011E74  EC00  F0CE         	call	_sprintf	;wreg free
  5326                           
  5327                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d        ", spinners(5, 0)
      +                          , C.soc, C.runtime);
  5328  011E78  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5329  011E7C  006F FF78  F00B    	movff	postinc2,btemp+10
  5330  011E82  006F FF74  F00C    	movff	postdec2,btemp+11
  5331  011E88  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5332  011E8E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5333  011E94  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5334  011E98  006F FF78  F00B    	movff	postinc2,btemp+10
  5335  011E9E  006F FF74  F00C    	movff	postdec2,btemp+11
  5336  011EA4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5337  011EAA  0060  F033  FFE6   	movff	btemp+11,postinc1
  5338  011EB0  0E00               	movlw	0
  5339  011EB2  6EE6               	movwf	postinc1,c
  5340  011EB4  0E05               	movlw	5
  5341  011EB6  6EE6               	movwf	postinc1,c
  5342  011EB8  ECF3  F0CF         	call	_spinners	;wreg free
  5343  011EBC  5001               	movf	btemp^0,w,c
  5344  011EBE  6EE6               	movwf	postinc1,c
  5345  011EC0  0E00               	movlw	0
  5346  011EC2  6EE6               	movwf	postinc1,c
  5347  011EC4  0ECD               	movlw	low STR_36
  5348  011EC6  6EE6               	movwf	postinc1,c
  5349  011EC8  0EFC               	movlw	high STR_36
  5350  011ECA  6EE6               	movwf	postinc1,c
  5351  011ECC  0E00               	movlw	0
  5352  011ECE  6EE6               	movwf	postinc1,c
  5353  011ED0  0E02               	movlw	2
  5354  011ED2  6EE6               	movwf	postinc1,c
  5355  011ED4  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5356  011ED8  0060  F007  FFE6   	movff	btemp,postinc1
  5357  011EDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5358  011EE4  0E0A               	movlw	10
  5359  011EE6  6EE6               	movwf	postinc1,c
  5360  011EE8  EC00  F0CE         	call	_sprintf	;wreg free
  5361                           
  5362                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5363  011EEC  EE21  F387         	lfsr	2,_C+136	;volatile
  5364  011EF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5365  011EF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5366  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5367  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5368  011F08  0EB6               	movlw	low STR_37
  5369  011F0A  6EE6               	movwf	postinc1,c
  5370  011F0C  0EFC               	movlw	high STR_37
  5371  011F0E  6EE6               	movwf	postinc1,c
  5372  011F10  0E01               	movlw	1
  5373  011F12  6EE6               	movwf	postinc1,c
  5374  011F14  0E00               	movlw	0
  5375  011F16  6EE6               	movwf	postinc1,c
  5376  011F18  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5377  011F1C  0060  F007  FFE6   	movff	btemp,postinc1
  5378  011F22  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5379  011F28  0E08               	movlw	8
  5380  011F2A  6EE6               	movwf	postinc1,c
  5381  011F2C  EC00  F0CE         	call	_sprintf	;wreg free
  5382                           
  5383                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5384  011F30  EE22  F00D         	lfsr	2,_C+270	;volatile
  5385  011F34  006F FF7B FFE6     	movff	postinc2,postinc1
  5386  011F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5387  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5388  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5389  011F4C  EE22  F019         	lfsr	2,_C+282	;volatile
  5390  011F50  006F FF7B FFE6     	movff	postinc2,postinc1
  5391  011F56  006F FF7B FFE6     	movff	postinc2,postinc1
  5392  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5393  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5394  011F68  0EFB               	movlw	low STR_38
  5395  011F6A  6EE6               	movwf	postinc1,c
  5396  011F6C  0EFC               	movlw	high STR_38
  5397  011F6E  6EE6               	movwf	postinc1,c
  5398  011F70  0E01               	movlw	1
  5399  011F72  6EE6               	movwf	postinc1,c
  5400  011F74  0E01               	movlw	1
  5401  011F76  6EE6               	movwf	postinc1,c
  5402  011F78  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5403  011F7C  0060  F007  FFE6   	movff	btemp,postinc1
  5404  011F82  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5405  011F88  0E0C               	movlw	12
  5406  011F8A  6EE6               	movwf	postinc1,c
  5407  011F8C  EC00  F0CE         	call	_sprintf	;wreg free
  5408                           
  5409                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5410  011F90  EE22  F011         	lfsr	2,_C+274	;volatile
  5411  011F94  006F FF7B FFE6     	movff	postinc2,postinc1
  5412  011F9A  006F FF7B FFE6     	movff	postinc2,postinc1
  5413  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5414  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5415  011FAC  EE22  F01D         	lfsr	2,_C+286	;volatile
  5416  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5417  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5418  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5419  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5420  011FC8  0E12               	movlw	low STR_39
  5421  011FCA  6EE6               	movwf	postinc1,c
  5422  011FCC  0EFD               	movlw	high STR_39
  5423  011FCE  6EE6               	movwf	postinc1,c
  5424  011FD0  0E01               	movlw	1
  5425  011FD2  6EE6               	movwf	postinc1,c
  5426  011FD4  0E02               	movlw	2
  5427  011FD6  6EE6               	movwf	postinc1,c
  5428  011FD8  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5429  011FDC  0060  F007  FFE6   	movff	btemp,postinc1
  5430  011FE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5431  011FE8  0E0C               	movlw	12
  5432  011FEA  6EE6               	movwf	postinc1,c
  5433  011FEC  EC00  F0CE         	call	_sprintf	;wreg free
  5434                           
  5435                           ;main.c: 378:      break;
  5436  011FF0  D111               	goto	l13240
  5437  011FF2                     l13224:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;main.c: 380:      if (!V.calib) {
  5441  011FF2  0101               	movlb	1	; () banked
  5442  011FF4  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5443  011FF6  A4D8               	btfss	status,2,c
  5444  011FF8  D02D               	goto	l13228
  5445                           
  5446                           ; BSR set to: 1
  5447                           ;main.c: 381:       lp_filter(0.0, i, -1);
  5448  011FFA  0EFF               	movlw	255
  5449  011FFC  6EE6               	movwf	postinc1,c
  5450                           
  5451                           ;stkvar	_i @ sp[(-18)+14]
  5452  011FFE  0EFC               	movlw	-4
  5453  012000  50E3               	movf	plusw1,w,c
  5454  012002  6EE6               	movwf	postinc1,c
  5455  012004  0E00               	movlw	0
  5456  012006  6EE6               	movwf	postinc1,c
  5457  012008  0E00               	movlw	0
  5458  01200A  6EE6               	movwf	postinc1,c
  5459  01200C  0E00               	movlw	0
  5460  01200E  6EE6               	movwf	postinc1,c
  5461  012010  0E00               	movlw	0
  5462  012012  6EE6               	movwf	postinc1,c
  5463  012014  EC3F  F0C3         	call	_lp_filter	;wreg free
  5464                           
  5465                           ;main.c: 382:       lp_filter(0.0, j, -1);
  5466  012018  0EFF               	movlw	255
  5467  01201A  6EE6               	movwf	postinc1,c
  5468                           
  5469                           ;stkvar	_j @ sp[(-18)+13]
  5470  01201C  0EFB               	movlw	-5
  5471  01201E  50E3               	movf	plusw1,w,c
  5472  012020  6EE6               	movwf	postinc1,c
  5473  012022  0E00               	movlw	0
  5474  012024  6EE6               	movwf	postinc1,c
  5475  012026  0E00               	movlw	0
  5476  012028  6EE6               	movwf	postinc1,c
  5477  01202A  0E00               	movlw	0
  5478  01202C  6EE6               	movwf	postinc1,c
  5479  01202E  0E00               	movlw	0
  5480  012030  6EE6               	movwf	postinc1,c
  5481  012032  EC3F  F0C3         	call	_lp_filter	;wreg free
  5482                           
  5483                           ;main.c: 383:       lp_filter(0.0, k, -1);
  5484  012036  0EFF               	movlw	255
  5485  012038  6EE6               	movwf	postinc1,c
  5486                           
  5487                           ;stkvar	_k @ sp[(-18)+12]
  5488  01203A  0EFA               	movlw	-6
  5489  01203C  50E3               	movf	plusw1,w,c
  5490  01203E  6EE6               	movwf	postinc1,c
  5491  012040  0E00               	movlw	0
  5492  012042  6EE6               	movwf	postinc1,c
  5493  012044  0E00               	movlw	0
  5494  012046  6EE6               	movwf	postinc1,c
  5495  012048  0E00               	movlw	0
  5496  01204A  6EE6               	movwf	postinc1,c
  5497  01204C  0E00               	movlw	0
  5498  01204E  6EE6               	movwf	postinc1,c
  5499  012050  EC3F  F0C3         	call	_lp_filter	;wreg free
  5500  012054                     l13228:
  5501                           
  5502                           ;main.c: 385:      V.calib = 1;
  5503  012054  0E01               	movlw	1
  5504  012056  0101               	movlb	1	; () banked
  5505  012058  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5506                           
  5507                           ; BSR set to: 1
  5508                           ;main.c: 386:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index + 1);
  5509                           ;stkvar	_inp_index @ sp[(-17)+11]
  5510  01205A  0EFA               	movlw	-6
  5511  01205C  50E3               	movf	plusw1,w,c
  5512  01205E  6E0B               	movwf	(btemp+10)^0,c
  5513  012060  6A0C               	clrf	(btemp+11)^0,c
  5514  012062  0E01               	movlw	1
  5515  012064  260B               	addwf	(btemp+10)^0,f,c
  5516  012066  0E00               	movlw	0
  5517  012068  220C               	addwfc	(btemp+11)^0,f,c
  5518  01206A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5519  012070  0060  F033  FFE6   	movff	btemp+11,postinc1
  5520                           
  5521                           ;stkvar	_i @ sp[(-19)+14]
  5522  012076  0EFB               	movlw	-5
  5523  012078  50E3               	movf	plusw1,w,c
  5524  01207A  0D04               	mullw	4
  5525  01207C  0EFF               	movlw	low _C
  5526  01207E  24F3               	addwf	243,w,c
  5527  012080  6ED9               	movwf	fsr2l,c
  5528  012082  0E06               	movlw	high _C
  5529  012084  20F4               	addwfc	prodh,w,c
  5530  012086  6EDA               	movwf	fsr2h,c
  5531  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5532  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5533  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5534  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5535                           
  5536                           ;stkvar	_i @ sp[(-23)+14]
  5537  0120A0  0EF7               	movlw	-9
  5538  0120A2  50E3               	movf	plusw1,w,c
  5539  0120A4  6EE6               	movwf	postinc1,c
  5540  0120A6  EC22  F0DF         	call	_get_raw_result	;wreg free
  5541  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5542  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5543  0120B6  0E8A               	movlw	low STR_40
  5544  0120B8  6EE6               	movwf	postinc1,c
  5545  0120BA  0EFE               	movlw	high STR_40
  5546  0120BC  6EE6               	movwf	postinc1,c
  5547  0120BE  0E00               	movlw	0
  5548  0120C0  6EE6               	movwf	postinc1,c
  5549  0120C2  0E00               	movlw	0
  5550  0120C4  6EE6               	movwf	postinc1,c
  5551  0120C6  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5552  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5553  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5554  0120D6  0E0C               	movlw	12
  5555  0120D8  6EE6               	movwf	postinc1,c
  5556  0120DA  EC00  F0CE         	call	_sprintf	;wreg free
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;main.c: 387:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 2);
  5560                           ;stkvar	_inp_index @ sp[(-17)+11]
  5561  0120DE  0EFA               	movlw	-6
  5562  0120E0  50E3               	movf	plusw1,w,c
  5563  0120E2  6E0B               	movwf	(btemp+10)^0,c
  5564  0120E4  6A0C               	clrf	(btemp+11)^0,c
  5565  0120E6  0E02               	movlw	2
  5566  0120E8  260B               	addwf	(btemp+10)^0,f,c
  5567  0120EA  0E00               	movlw	0
  5568  0120EC  220C               	addwfc	(btemp+11)^0,f,c
  5569  0120EE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5570  0120F4  0060  F033  FFE6   	movff	btemp+11,postinc1
  5571                           
  5572                           ;stkvar	_j @ sp[(-19)+13]
  5573  0120FA  0EFA               	movlw	-6
  5574  0120FC  50E3               	movf	plusw1,w,c
  5575  0120FE  0D04               	mullw	4
  5576  012100  0EFF               	movlw	low _C
  5577  012102  24F3               	addwf	243,w,c
  5578  012104  6ED9               	movwf	fsr2l,c
  5579  012106  0E06               	movlw	high _C
  5580  012108  20F4               	addwfc	prodh,w,c
  5581  01210A  6EDA               	movwf	fsr2h,c
  5582  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5583  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5584  012118  006F FF7B FFE6     	movff	postinc2,postinc1
  5585  01211E  006F FF7B FFE6     	movff	postinc2,postinc1
  5586                           
  5587                           ;stkvar	_j @ sp[(-23)+13]
  5588  012124  0EF6               	movlw	-10
  5589  012126  50E3               	movf	plusw1,w,c
  5590  012128  6EE6               	movwf	postinc1,c
  5591  01212A  EC22  F0DF         	call	_get_raw_result	;wreg free
  5592  01212E  0060  F007  FFE6   	movff	btemp,postinc1
  5593  012134  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5594  01213A  0E8A               	movlw	low STR_40
  5595  01213C  6EE6               	movwf	postinc1,c
  5596  01213E  0EFE               	movlw	high STR_40
  5597  012140  6EE6               	movwf	postinc1,c
  5598  012142  0E00               	movlw	0
  5599  012144  6EE6               	movwf	postinc1,c
  5600  012146  0E01               	movlw	1
  5601  012148  6EE6               	movwf	postinc1,c
  5602  01214A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5603  01214E  0060  F007  FFE6   	movff	btemp,postinc1
  5604  012154  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5605  01215A  0E0C               	movlw	12
  5606  01215C  6EE6               	movwf	postinc1,c
  5607  01215E  EC00  F0CE         	call	_sprintf	;wreg free
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;main.c: 388:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 3);
  5611                           ;stkvar	_inp_index @ sp[(-17)+11]
  5612  012162  0EFA               	movlw	-6
  5613  012164  50E3               	movf	plusw1,w,c
  5614  012166  6E0B               	movwf	(btemp+10)^0,c
  5615  012168  6A0C               	clrf	(btemp+11)^0,c
  5616  01216A  0E03               	movlw	3
  5617  01216C  260B               	addwf	(btemp+10)^0,f,c
  5618  01216E  0E00               	movlw	0
  5619  012170  220C               	addwfc	(btemp+11)^0,f,c
  5620  012172  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5621  012178  0060  F033  FFE6   	movff	btemp+11,postinc1
  5622                           
  5623                           ;stkvar	_k @ sp[(-19)+12]
  5624  01217E  0EF9               	movlw	-7
  5625  012180  50E3               	movf	plusw1,w,c
  5626  012182  0D04               	mullw	4
  5627  012184  0EFF               	movlw	low _C
  5628  012186  24F3               	addwf	243,w,c
  5629  012188  6ED9               	movwf	fsr2l,c
  5630  01218A  0E06               	movlw	high _C
  5631  01218C  20F4               	addwfc	prodh,w,c
  5632  01218E  6EDA               	movwf	fsr2h,c
  5633  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  01219C  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  0121A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5637                           
  5638                           ;stkvar	_k @ sp[(-23)+12]
  5639  0121A8  0EF5               	movlw	-11
  5640  0121AA  50E3               	movf	plusw1,w,c
  5641  0121AC  6EE6               	movwf	postinc1,c
  5642  0121AE  EC22  F0DF         	call	_get_raw_result	;wreg free
  5643  0121B2  0060  F007  FFE6   	movff	btemp,postinc1
  5644  0121B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5645  0121BE  0E8A               	movlw	low STR_40
  5646  0121C0  6EE6               	movwf	postinc1,c
  5647  0121C2  0EFE               	movlw	high STR_40
  5648  0121C4  6EE6               	movwf	postinc1,c
  5649  0121C6  0E00               	movlw	0
  5650  0121C8  6EE6               	movwf	postinc1,c
  5651  0121CA  0E02               	movlw	2
  5652  0121CC  6EE6               	movwf	postinc1,c
  5653  0121CE  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  5654  0121D2  0060  F007  FFE6   	movff	btemp,postinc1
  5655  0121D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5656  0121DE  0E0C               	movlw	12
  5657  0121E0  6EE6               	movwf	postinc1,c
  5658  0121E2  EC00  F0CE         	call	_sprintf	;wreg free
  5659                           
  5660                           ;main.c: 389:      break;
  5661  0121E6  D016               	goto	l13240
  5662  0121E8                     l13238:
  5663  0121E8  0100               	movlb	0	; () banked
  5664  0121EA  51F7               	movf	_H& (0+255),w,b
  5665  0121EC  6E0B               	movwf	(btemp+10)^0,c
  5666  0121EE  6A0C               	clrf	(btemp+11)^0,c
  5667                           
  5668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5669                           ; Switch size 1, requested type "simple"
  5670                           ; Number of cases is 1, Range of values is 0 to 0
  5671                           ; switch strategies available:
  5672                           ; Name         Instructions Cycles
  5673                           ; simple_byte            4     3 (average)
  5674                           ;	Chosen strategy is simple_byte
  5675  0121F0  500C               	movf	(btemp+11)^0,w,c
  5676  0121F2  0A00               	xorlw	0	; case 0
  5677  0121F4  A4D8               	btfss	status,2,c
  5678  0121F6  D00E               	goto	l13240
  5679                           
  5680                           ; BSR set to: 0
  5681                           ; Switch size 1, requested type "simple"
  5682                           ; Number of cases is 4, Range of values is 0 to 3
  5683                           ; switch strategies available:
  5684                           ; Name         Instructions Cycles
  5685                           ; simple_byte           13     7 (average)
  5686                           ;	Chosen strategy is simple_byte
  5687  0121F8  500B               	movf	(btemp+10)^0,w,c
  5688  0121FA  0A00               	xorlw	0	; case 0
  5689  0121FC  B4D8               	btfsc	status,2,c
  5690  0121FE  D4D3               	goto	l1360
  5691  012200  0A01               	xorlw	1	; case 1
  5692  012202  B4D8               	btfsc	status,2,c
  5693  012204  EFD0  F08C         	goto	l1350
  5694  012208  0A03               	xorlw	3	; case 2
  5695  01220A  B4D8               	btfsc	status,2,c
  5696  01220C  D5E1               	goto	l1361
  5697  01220E  0A01               	xorlw	1	; case 3
  5698  012210  B4D8               	btfsc	status,2,c
  5699  012212  D6EF               	goto	l13224
  5700  012214                     l13240:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;main.c: 393:     clear_hid_pflags(&H);
  5704  012214  0EF7               	movlw	_H& (0+255)
  5705  012216  6EE6               	movwf	postinc1,c
  5706  012218  ECB6  F0DE         	call	_clear_hid_pflags	;wreg free
  5707                           
  5708                           ;main.c: 395:    StartTimer(TMR_DISPLAY, 250);
  5709  01221C  0EFA               	movlw	250
  5710  01221E  6EE6               	movwf	postinc1,c
  5711  012220  0E00               	movlw	0
  5712  012222  6EE6               	movwf	postinc1,c
  5713  012224  0E0A               	movlw	10
  5714  012226  6EE6               	movwf	postinc1,c
  5715  012228  EC65  F0DB         	call	_StartTimer	;wreg free
  5716                           
  5717                           ;main.c: 396:    V.enter = check_enter_button(&H);
  5718  01222C  0EF7               	movlw	_H& (0+255)
  5719  01222E  6EE6               	movwf	postinc1,c
  5720  012230  EC85  F0DB         	call	_check_enter_button	;wreg free
  5721  012234  5001               	movf	btemp^0,w,c
  5722  012236  0101               	movlb	1	; () banked
  5723  012238  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;main.c: 397:    if (V.enter && (H.hid_display != HID_AUX)) {
  5727  01223A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5728  01223C  B4D8               	btfsc	status,2,c
  5729  01223E  D013               	goto	l13254
  5730                           
  5731                           ; BSR set to: 1
  5732  012240  0E03               	movlw	3
  5733  012242  0100               	movlb	0	; () banked
  5734  012244  19F7               	xorwf	_H& (0+255),w,b
  5735  012246  B4D8               	btfsc	status,2,c
  5736  012248  D00E               	goto	l13254
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;main.c: 398:     V.enter = 0;
  5740  01224A  0101               	movlb	1	; () banked
  5741  01224C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;main.c: 399:     V.screen = ~V.screen;
  5745  01224E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5746  012250  D002               	goto	u12680
  5747  012252  0E01               	movlw	1
  5748  012254  D001               	goto	u12686
  5749  012256                     u12680:
  5750  012256  0E00               	movlw	0
  5751  012258                     u12686:
  5752  012258  0AFF               	xorlw	255
  5753  01225A  6E0C               	movwf	(btemp+11)^0,c
  5754  01225C  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5755  01225E  180C               	xorwf	(btemp+11)^0,w,c
  5756  012260  0BFE               	andlw	-2
  5757  012262  180C               	xorwf	(btemp+11)^0,w,c
  5758  012264  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5759  012266                     l13254:
  5760                           
  5761                           ;main.c: 401:    set_vterm(V.screen);
  5762  012266  0101               	movlb	1	; () banked
  5763  012268  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5764  01226A  D002               	goto	u12690
  5765  01226C  0E01               	movlw	1
  5766  01226E  D001               	goto	u12696
  5767  012270                     u12690:
  5768  012270  0E00               	movlw	0
  5769  012272                     u12696:
  5770  012272  6EE6               	movwf	postinc1,c
  5771  012274  EC82  F0DF         	call	_set_vterm	;wreg free
  5772                           
  5773                           ;main.c: 402:    update_lcd(V.screen);
  5774  012278  0101               	movlb	1	; () banked
  5775  01227A  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5776  01227C  D002               	goto	u12700
  5777  01227E  0E01               	movlw	1
  5778  012280  D001               	goto	u12706
  5779  012282                     u12700:
  5780  012282  0E00               	movlw	0
  5781  012284                     u12706:
  5782  012284  6EE6               	movwf	postinc1,c
  5783  012286  EC78  F0CD         	call	_update_lcd	;wreg free
  5784  01228A                     l13258:
  5785                           
  5786                           ;main.c: 408:   check_help(V.flipper);
  5787  01228A  0101               	movlb	1	; () banked
  5788  01228C  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5789  01228E  6EE6               	movwf	postinc1,c
  5790  012290  EC34  F0C1         	call	_check_help	;wreg free
  5791                           
  5792                           ;main.c: 410:   if (V.enter) {
  5793  012294  0101               	movlb	1	; () banked
  5794  012296  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5795  012298  B4D8               	btfsc	status,2,c
  5796  01229A  D062               	goto	l1366
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 411:    V.enter = 0;
  5800  01229C  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5801                           
  5802                           ;main.c: 412:    V.calib = 0;
  5803  01229E  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;main.c: 413:    inp_index += 3;
  5807                           ;stkvar	_inp_index @ sp[(-17)+11]
  5808  0122A0  0EFA               	movlw	-6
  5809  0122A2  006F FF8C  F001    	movff	plusw1,btemp
  5810  0122A8  0E03               	movlw	3
  5811  0122AA  2601               	addwf	btemp^0,f,c
  5812  0122AC  0EFA               	movlw	-6
  5813  0122AE  0060  F007  FFE3   	movff	btemp,plusw1
  5814                           
  5815                           ;main.c: 414:    if (inp_index > 9)
  5816                           ;stkvar	_inp_index @ sp[(-17)+11]
  5817  0122B4  0EFA               	movlw	-6
  5818  0122B6  006F FF8C  F001    	movff	plusw1,btemp
  5819  0122BC  0E09               	movlw	9
  5820  0122BE  6401               	cpfsgt	btemp^0,c
  5821  0122C0  D03A               	goto	l13286
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;main.c: 415:     inp_index = 0;
  5825                           ;stkvar	_inp_index @ sp[(-17)+11]
  5826  0122C2  0EFA               	movlw	-6
  5827  0122C4  6AE3               	clrf	plusw1,c
  5828  0122C6  D037               	goto	l13286
  5829  0122C8                     l13268:
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;main.c: 418:     i = C_BATT;
  5833                           ;stkvar	_i @ sp[(-17)+14]
  5834  0122C8  0EFD               	movlw	-3
  5835  0122CA  6AE3               	clrf	plusw1,c
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;main.c: 419:     j = C_PV;
  5839                           ;stkvar	_j @ sp[(-17)+13]
  5840  0122CC  0EFC               	movlw	-4
  5841  0122CE  6AE3               	clrf	plusw1,c
  5842  0122D0  2AE3               	incf	plusw1,f,c
  5843                           
  5844                           ; BSR set to: 1
  5845                           ;main.c: 420:     k = V_CC;
  5846                           ;stkvar	_k @ sp[(-17)+12]
  5847  0122D2  0EFB               	movlw	-5
  5848  0122D4  6AE3               	clrf	plusw1,c
  5849  0122D6  82E3               	bsf	plusw1,1,c
  5850                           
  5851                           ;main.c: 421:     break;
  5852  0122D8  D043               	goto	l1366
  5853  0122DA                     l13274:
  5854                           
  5855                           ; BSR set to: 1
  5856                           ;main.c: 423:     i = V_BAT;
  5857                           ;stkvar	_i @ sp[(-17)+14]
  5858  0122DA  0EFD               	movlw	-3
  5859  0122DC  6AE3               	clrf	plusw1,c
  5860  0122DE  84E3               	bsf	plusw1,2,c
  5861                           
  5862                           ;main.c: 424:     j = V_PV;
  5863                           ;stkvar	_j @ sp[(-17)+13]
  5864  0122E0  0EFC               	movlw	-4
  5865  0122E2  6AE3               	clrf	plusw1,c
  5866  0122E4  80E3               	bsf	plusw1,0,c
  5867  0122E6  84E3               	bsf	plusw1,2,c	;indir
  5868                           
  5869                           ;main.c: 425:     k = V_CBUS;
  5870                           ;stkvar	_k @ sp[(-17)+12]
  5871  0122E8  0EFB               	movlw	-5
  5872  0122EA  6AE3               	clrf	plusw1,c
  5873  0122EC  82E3               	bsf	plusw1,1,c
  5874  0122EE  84E3               	bsf	plusw1,2,c	;indir
  5875                           
  5876                           ;main.c: 426:     break;
  5877  0122F0  D037               	goto	l1366
  5878  0122F2                     l13276:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 428:     i = V_BBAT;
  5882                           ;stkvar	_i @ sp[(-17)+14]
  5883  0122F2  0EFD               	movlw	-3
  5884  0122F4  6AE3               	clrf	plusw1,c
  5885  0122F6  82E3               	bsf	plusw1,1,c
  5886  0122F8  86E3               	bsf	plusw1,3,c	;indir
  5887                           
  5888                           ; BSR set to: 1
  5889                           ;main.c: 429:     j = V_TEMP;
  5890  0122FA  0E0B               	movlw	11
  5891  0122FC  6E0C               	movwf	(btemp+11)^0,c
  5892                           
  5893                           ;stkvar	_j @ sp[(-17)+13]
  5894  0122FE  0EFC               	movlw	-4
  5895  012300  0060  F033  FFE3   	movff	btemp+11,plusw1
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;main.c: 430:     k = V_INVERTER;
  5899                           ;stkvar	_k @ sp[(-17)+12]
  5900  012306  0EFB               	movlw	-5
  5901  012308  6AE3               	clrf	plusw1,c
  5902  01230A  84E3               	bsf	plusw1,2,c
  5903  01230C  86E3               	bsf	plusw1,3,c	;indir
  5904                           
  5905                           ;main.c: 431:     break;
  5906  01230E  D028               	goto	l1366
  5907  012310                     l13282:
  5908                           
  5909                           ; BSR set to: 1
  5910                           ;main.c: 433:     i = V_LIGHT_SENSOR;
  5911  012310  0E0D               	movlw	13
  5912  012312  6E0C               	movwf	(btemp+11)^0,c
  5913                           
  5914                           ;stkvar	_i @ sp[(-17)+14]
  5915  012314  0EFD               	movlw	-3
  5916  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5917                           
  5918                           ;main.c: 434:     j = V_LIGHT_SENSOR;
  5919  01231C  0E0D               	movlw	13
  5920  01231E  6E0C               	movwf	(btemp+11)^0,c
  5921                           
  5922                           ;stkvar	_j @ sp[(-17)+13]
  5923  012320  0EFC               	movlw	-4
  5924  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5925                           
  5926                           ;main.c: 435:     k = V_LIGHT_SENSOR;
  5927  012328  0E0D               	movlw	13
  5928  01232A  6E0C               	movwf	(btemp+11)^0,c
  5929                           
  5930                           ;stkvar	_k @ sp[(-17)+12]
  5931  01232C  0EFB               	movlw	-5
  5932  01232E  0060  F033  FFE3   	movff	btemp+11,plusw1
  5933                           
  5934                           ;main.c: 436:     break;
  5935  012334  D015               	goto	l1366
  5936  012336                     l13286:
  5937                           
  5938                           ; BSR set to: 1
  5939                           ;stkvar	_inp_index @ sp[(-17)+11]
  5940  012336  0EFA               	movlw	-6
  5941  012338  50E3               	movf	plusw1,w,c
  5942  01233A  6E0B               	movwf	(btemp+10)^0,c
  5943  01233C  6A0C               	clrf	(btemp+11)^0,c
  5944                           
  5945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5946                           ; Switch size 1, requested type "simple"
  5947                           ; Number of cases is 1, Range of values is 0 to 0
  5948                           ; switch strategies available:
  5949                           ; Name         Instructions Cycles
  5950                           ; simple_byte            4     3 (average)
  5951                           ;	Chosen strategy is simple_byte
  5952  01233E  500C               	movf	(btemp+11)^0,w,c
  5953  012340  0A00               	xorlw	0	; case 0
  5954  012342  A4D8               	btfss	status,2,c
  5955  012344  D00D               	goto	l1366
  5956                           
  5957                           ; BSR set to: 1
  5958                           ; Switch size 1, requested type "simple"
  5959                           ; Number of cases is 4, Range of values is 0 to 9
  5960                           ; switch strategies available:
  5961                           ; Name         Instructions Cycles
  5962                           ; simple_byte           13     7 (average)
  5963                           ;	Chosen strategy is simple_byte
  5964  012346  500B               	movf	(btemp+10)^0,w,c
  5965  012348  0A00               	xorlw	0	; case 0
  5966  01234A  B4D8               	btfsc	status,2,c
  5967  01234C  D7BD               	goto	l13268
  5968  01234E  0A03               	xorlw	3	; case 3
  5969  012350  B4D8               	btfsc	status,2,c
  5970  012352  D7C3               	goto	l13274
  5971  012354  0A05               	xorlw	5	; case 6
  5972  012356  B4D8               	btfsc	status,2,c
  5973  012358  D7CC               	goto	l13276
  5974  01235A  0A0F               	xorlw	15	; case 9
  5975  01235C  B4D8               	btfsc	status,2,c
  5976  01235E  D7D8               	goto	l13282
  5977  012360                     l1366:
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;main.c: 445:   if (V.set_sequ) {
  5981  012360  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5982  012362  EF84  F08C         	goto	l13168
  5983                           
  5984                           ; BSR set to: 1
  5985                           ;main.c: 446:    if (TimerDone(TMR_INFO)) {
  5986  012366  0E07               	movlw	7
  5987  012368  6EE6               	movwf	postinc1,c
  5988  01236A  EC8B  F0DD         	call	_TimerDone	;wreg free
  5989  01236E  5001               	movf	btemp^0,w,c
  5990  012370  B4D8               	btfsc	status,2,c
  5991  012372  D00C               	goto	l13296
  5992                           
  5993                           ;main.c: 447:     V.set_sequ = 0;
  5994  012374  0101               	movlb	1	; () banked
  5995  012376  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;main.c: 448:     set_vterm(0);
  5999  012378  0E00               	movlw	0
  6000  01237A  6EE6               	movwf	postinc1,c
  6001  01237C  EC82  F0DF         	call	_set_vterm	;wreg free
  6002                           
  6003                           ;main.c: 449:     update_lcd(0);
  6004  012380  0E00               	movlw	0
  6005  012382  6EE6               	movwf	postinc1,c
  6006  012384  EC78  F0CD         	call	_update_lcd	;wreg free
  6007                           
  6008                           ;main.c: 450:    } else {
  6009  012388  EF84  F08C         	goto	l13168
  6010  01238C                     l13296:
  6011                           
  6012                           ;main.c: 451:     set_vterm(2);
  6013  01238C  0E02               	movlw	2
  6014  01238E  6EE6               	movwf	postinc1,c
  6015  012390  EC82  F0DF         	call	_set_vterm	;wreg free
  6016                           
  6017                           ;main.c: 452:     update_lcd(2);
  6018  012394  0E02               	movlw	2
  6019  012396  6EE6               	movwf	postinc1,c
  6020  012398  EC78  F0CD         	call	_update_lcd	;wreg free
  6021  01239C  EF84  F08C         	goto	l13168
  6022  0123A0                     __end_of_main:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function _static_soc *****************
  6026 ;; Defined at:
  6027 ;;		line 117 in file "mbmc.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1  [STACK] void 
  6034 ;; Registers used:
  6035 ;;		wreg, fsr2l, fsr2h
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/1
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:   15
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text1
  6056  01B184                     __ptext1:
  6057                           	opt callstack 0
  6058  01B184                     _static_soc:
  6059                           	opt callstack 15
  6060                           
  6061                           ;mbmc.c: 119:  C.runtime = 120;
  6062                           
  6063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6064                           ;incstack = 0
  6065  01B184  0E78               	movlw	120
  6066  01B186  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6067  01B18C  0E00               	movlw	0
  6068  01B18E  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6069                           
  6070                           ;mbmc.c: 120:  C.soc = 100;
  6071  01B194  0E64               	movlw	100
  6072  01B196  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6073  01B19C  0E00               	movlw	0
  6074  01B19E  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6075                           
  6076                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6077  01B1A4  EE21  F38B         	lfsr	2,_C+140	;volatile
  6078  01B1A8  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6079  01B1AE  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6080  01B1B4  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6081  01B1BA  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6082                           
  6083                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6084  01B1C0  EE21  F38F         	lfsr	2,_C+144	;volatile
  6085  01B1C4  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6086  01B1CA  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6087  01B1D0  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6088  01B1D6  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6089                           
  6090                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6091  01B1DC  0012               	return		;funcret
  6092  01B1DE                     __end_of_static_soc:
  6093                           	opt callstack 0
  6094                           
  6095 ;; *************** function _start_switch_handler *****************
  6096 ;; Defined at:
  6097 ;;		line 122 in file "dio.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1  [STACK] void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 3F/39
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:   16
  6118 ;; This function calls:
  6119 ;;		_INT1_SetInterruptHandler
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text2
  6126  01BE88                     __ptext2:
  6127                           	opt callstack 0
  6128  01BE88                     _start_switch_handler:
  6129                           	opt callstack 14
  6130                           
  6131                           ;dio.c: 124:  (PIE5bits.INT1IE = 0);
  6132                           
  6133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6134                           ;incstack = 0
  6135  01BE88  0139               	movlb	57	; () banked
  6136  01BE8A  9195               	bcf	149,0,b	;volatile
  6137                           
  6138                           ; BSR set to: 57
  6139                           ;dio.c: 125:  INT1_SetInterruptHandler(switch_handler);
  6140  01BE8C  0E3C               	movlw	low _switch_handler
  6141  01BE8E  6EE6               	movwf	postinc1,c
  6142  01BE90  0E95               	movlw	high _switch_handler
  6143  01BE92  6EE6               	movwf	postinc1,c
  6144  01BE94  0E01               	movlw	low (_switch_handler shr (0+16))
  6145  01BE96  6EE6               	movwf	postinc1,c
  6146  01BE98  EC17  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
  6147                           
  6148                           ;dio.c: 126:  S.button[SNULL].sw = SW_INVALID;
  6149  01BE9C  0E02               	movlw	2
  6150  01BE9E  0102               	movlb	2	; () banked
  6151  01BEA0  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6152                           
  6153                           ; BSR set to: 2
  6154                           ;dio.c: 127:  (PIE5bits.INT1IE = 1);
  6155  01BEA2  0139               	movlb	57	; () banked
  6156  01BEA4  8195               	bsf	149,0,b	;volatile
  6157                           
  6158                           ; BSR set to: 57
  6159                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6160  01BEA6  0012               	return		;funcret
  6161  01BEA8                     __end_of_start_switch_handler:
  6162                           	opt callstack 0
  6163                           
  6164 ;; *************** function _srand *****************
  6165 ;; Defined at:
  6166 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  s               2  [STACK] unsigned int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1  [STACK] void 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 3F/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:   15
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_main
  6191 ;; This function uses a reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text3
  6195  01B8EA                     __ptext3:
  6196                           	opt callstack 0
  6197  01B8EA                     _srand:
  6198                           	opt callstack 15
  6199                           
  6200                           ;stkvar	_s @ sp[(0)+-2]
  6201                           
  6202                           ; BSR set to: 57
  6203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6204                           ;incstack = 0
  6205  01B8EA  0EFE               	movlw	-2
  6206  01B8EC  50E3               	movf	plusw1,w,c
  6207  01B8EE  0FFF               	addlw	255
  6208  01B8F0  6E0B               	movwf	(btemp+10)^0,c
  6209  01B8F2  0EFF               	movlw	-1
  6210  01B8F4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6211  01B8FA  0EFF               	movlw	255
  6212  01B8FC  220C               	addwfc	(btemp+11)^0,f,c
  6213  01B8FE  0060  F02C  F0CF   	movff	btemp+10,_seed
  6214  01B904  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6215  01B90A  0100               	movlb	0	; () banked
  6216  01B90C  6BD1               	clrf	(_seed+2)& (0+255),b
  6217  01B90E  6BD2               	clrf	(_seed+3)& (0+255),b
  6218  01B910  6BD3               	clrf	(_seed+4)& (0+255),b
  6219  01B912  6BD4               	clrf	(_seed+5)& (0+255),b
  6220  01B914  6BD5               	clrf	(_seed+6)& (0+255),b
  6221  01B916  6BD6               	clrf	(_seed+7)& (0+255),b
  6222                           
  6223                           ; BSR set to: 0
  6224                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6225  01B918  52E5               	movf	postdec1,f,c
  6226  01B91A  52E5               	movf	postdec1,f,c
  6227  01B91C  0012               	return		;funcret
  6228  01B91E                     __end_of_srand:
  6229                           	opt callstack 0
  6230                           
  6231 ;; *************** function _spinners *****************
  6232 ;; Defined at:
  6233 ;;		line 146 in file "mbmc.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  shape           1  [STACK] unsigned char 
  6236 ;;  reset           1  [STACK] const unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  c               1  [STACK] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1  [STACK] unsigned char 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:   16
  6255 ;; This function calls:
  6256 ;;		_strlen
  6257 ;; This function is called by:
  6258 ;;		_main
  6259 ;; This function uses a reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text4
  6263  019FE6                     __ptext4:
  6264                           	opt callstack 0
  6265  019FE6                     _spinners:
  6266                           	opt callstack 0
  6267                           
  6268                           ; BSR set to: 0
  6269                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6270  019FE6  52E6               	movf	postinc1,f,c
  6271                           
  6272                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6273                           ;stkvar	_shape @ sp[(-1)+-1]
  6274                           
  6275                           ;incstack = 0
  6276  019FE8  0EFE               	movlw	-2
  6277  019FEA  006F FF8C  F001    	movff	plusw1,btemp
  6278  019FF0  0E05               	movlw	5
  6279  019FF2  6401               	cpfsgt	btemp^0,c
  6280  019FF4  D002               	goto	l1879
  6281                           
  6282                           ;mbmc.c: 152:   shape = 0;
  6283                           ;stkvar	_shape @ sp[(-1)+-1]
  6284  019FF6  0EFE               	movlw	-2
  6285  019FF8  6AE3               	clrf	plusw1,c
  6286  019FFA                     l1879:
  6287                           
  6288                           ;mbmc.c: 153:  if (reset)
  6289                           ;stkvar	_reset @ sp[(-1)+-2]
  6290  019FFA  0EFD               	movlw	-3
  6291  019FFC  50E3               	movf	plusw1,w,c
  6292  019FFE  B4D8               	btfsc	status,2,c
  6293  01A000  D00A               	goto	l10890
  6294                           
  6295                           ;mbmc.c: 154:   s[shape] = 0;
  6296                           ;stkvar	_shape @ sp[(-1)+-1]
  6297  01A002  0EFE               	movlw	-2
  6298  01A004  006F FF8C  F00C    	movff	plusw1,btemp+11
  6299  01A00A  500C               	movf	(btemp+11)^0,w,c
  6300  01A00C  0F74               	addlw	low spinners@s
  6301  01A00E  6ED9               	movwf	fsr2l,c
  6302  01A010  6ADA               	clrf	fsr2h,c
  6303  01A012  0E00               	movlw	0
  6304  01A014  6EDF               	movwf	indf2,c
  6305  01A016                     l10890:
  6306                           
  6307                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6308                           ;stkvar	_shape @ sp[(-1)+-1]
  6309  01A016  0EFE               	movlw	-2
  6310  01A018  50E3               	movf	plusw1,w,c
  6311  01A01A  0D14               	mullw	20
  6312  01A01C  0E4B               	movlw	low _spin
  6313  01A01E  6E0B               	movwf	(btemp+10)^0,c
  6314  01A020  0EFB               	movlw	high _spin
  6315  01A022  6E0C               	movwf	(btemp+11)^0,c
  6316  01A024  50F3               	movf	243,w,c
  6317  01A026  260B               	addwf	(btemp+10)^0,f,c
  6318  01A028  50F4               	movf	244,w,c
  6319  01A02A  220C               	addwfc	(btemp+11)^0,f,c
  6320                           
  6321                           ;stkvar	_shape @ sp[(-1)+-1]
  6322  01A02C  0EFE               	movlw	-2
  6323  01A02E  006F FF8C  F00A    	movff	plusw1,btemp+9
  6324  01A034  500A               	movf	(btemp+9)^0,w,c
  6325  01A036  0F74               	addlw	low spinners@s
  6326  01A038  6ED9               	movwf	fsr2l,c
  6327  01A03A  6ADA               	clrf	fsr2h,c
  6328  01A03C  50DF               	movf	indf2,w,c
  6329  01A03E  260B               	addwf	(btemp+10)^0,f,c
  6330  01A040  0E00               	movlw	0
  6331  01A042  220C               	addwfc	(btemp+11)^0,f,c
  6332  01A044  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6333  01A04A  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6334  01A050                     	if	0	;tblptru may be non-zero
  6335  01A050                     	endif
  6336  01A050                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6337  01A050  0E00               	movlw	low (__mediumconst shr (0+16))
  6338  01A052  6EF8               	movwf	tblptru,c
  6339  01A054                     	endif
  6340                           
  6341                           ;stkvar	_c @ sp[(-1)+0]
  6342  01A054  0008               	tblrd		*
  6343  01A056  0EFF               	movlw	-1
  6344  01A058  006F FFD7 FFE3     	movff	tablat,plusw1
  6345                           
  6346                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6347                           ;stkvar	_shape @ sp[(-1)+-1]
  6348  01A05E  0EFE               	movlw	-2
  6349  01A060  50E3               	movf	plusw1,w,c
  6350  01A062  0D14               	mullw	20
  6351  01A064  0E4B               	movlw	low _spin
  6352  01A066  6E0B               	movwf	(btemp+10)^0,c
  6353  01A068  0EFB               	movlw	high _spin
  6354  01A06A  6E0C               	movwf	(btemp+11)^0,c
  6355  01A06C  50F3               	movf	243,w,c
  6356  01A06E  260B               	addwf	(btemp+10)^0,f,c
  6357  01A070  50F4               	movf	244,w,c
  6358  01A072  220C               	addwfc	(btemp+11)^0,f,c
  6359  01A074  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6360  01A07A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6361  01A080  EC6F  F0D4         	call	_strlen	;wreg free
  6362                           
  6363                           ;stkvar	_shape @ sp[(-1)+-1]
  6364  01A084  0EFE               	movlw	-2
  6365  01A086  006F FF8C  F00C    	movff	plusw1,btemp+11
  6366  01A08C  500C               	movf	(btemp+11)^0,w,c
  6367  01A08E  0F74               	addlw	low spinners@s
  6368  01A090  6ED9               	movwf	fsr2l,c
  6369  01A092  6ADA               	clrf	fsr2h,c
  6370  01A094  2ADF               	incf	indf2,f,c
  6371  01A096  50DF               	movf	indf2,w,c
  6372  01A098  6E0B               	movwf	(btemp+10)^0,c
  6373  01A09A  6A0C               	clrf	(btemp+11)^0,c
  6374  01A09C  5001               	movf	btemp^0,w,c
  6375  01A09E  5C0B               	subwf	(btemp+10)^0,w,c
  6376  01A0A0  5002               	movf	(btemp+1)^0,w,c
  6377  01A0A2  580C               	subwfb	(btemp+11)^0,w,c
  6378  01A0A4  A0D8               	btfss	status,0,c
  6379  01A0A6  D00A               	goto	l10896
  6380                           
  6381                           ;mbmc.c: 157:   s[shape] = 0;
  6382                           ;stkvar	_shape @ sp[(-1)+-1]
  6383  01A0A8  0EFE               	movlw	-2
  6384  01A0AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  6385  01A0B0  500C               	movf	(btemp+11)^0,w,c
  6386  01A0B2  0F74               	addlw	low spinners@s
  6387  01A0B4  6ED9               	movwf	fsr2l,c
  6388  01A0B6  6ADA               	clrf	fsr2h,c
  6389  01A0B8  0E00               	movlw	0
  6390  01A0BA  6EDF               	movwf	indf2,c
  6391  01A0BC                     l10896:
  6392                           
  6393                           ;mbmc.c: 158:  return c;
  6394                           ;stkvar	_c @ sp[(-1)+0]
  6395  01A0BC  0EFF               	movlw	-1
  6396  01A0BE  006F FF8C  F001    	movff	plusw1,btemp
  6397                           
  6398                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6399  01A0C4  52E5               	movf	postdec1,f,c
  6400  01A0C6  52E5               	movf	postdec1,f,c
  6401  01A0C8  52E5               	movf	postdec1,f,c
  6402  01A0CA  0012               	return		;funcret
  6403  01A0CC                     __end_of_spinners:
  6404                           	opt callstack 0
  6405                           
  6406 ;; *************** function _init_port_dma *****************
  6407 ;; Defined at:
  6408 ;;		line 104 in file "eadog.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1  [STACK] void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/1
  6419 ;;		On exit  : 3F/3B
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   15
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text5
  6437  01B952                     __ptext5:
  6438                           	opt callstack 0
  6439  01B952                     _init_port_dma:
  6440                           	opt callstack 15
  6441                           
  6442                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  6443                           
  6444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6445                           ;incstack = 0
  6446  01B952  0E3F               	movlw	-193
  6447  01B954  013B               	movlb	59	; () banked
  6448  01B956  17DD               	andwf	221,f,b	;volatile
  6449                           
  6450                           ; BSR set to: 59
  6451                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  6452  01B958  9BDD               	bcf	221,5,b	;volatile
  6453                           
  6454                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  6455  01B95A  51DD               	movf	221,w,b	;volatile
  6456  01B95C  0BF9               	andlw	-7
  6457  01B95E  0902               	iorlw	2
  6458  01B960  6FDD               	movwf	221,b	;volatile
  6459                           
  6460                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  6461  01B962  0EE7               	movlw	-25
  6462  01B964  17DD               	andwf	221,f,b	;volatile
  6463                           
  6464                           ; BSR set to: 59
  6465                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  6466  01B966  81DD               	bsf	221,0,b	;volatile
  6467                           
  6468                           ; BSR set to: 59
  6469                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  6470  01B968  9DDC               	bcf	220,6,b	;volatile
  6471                           
  6472                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  6473  01B96A  0E3D               	movlw	61
  6474  01B96C  6FD1               	movwf	209,b	;volatile
  6475  01B96E  0EEA               	movlw	234
  6476  01B970  6FD0               	movwf	208,b	;volatile
  6477                           
  6478                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  6479  01B972  0EFF               	movlw	low _port_data
  6480  01B974  6FD9               	movwf	217,b	;volatile
  6481  01B976  0E04               	movlw	high _port_data
  6482  01B978  6FDA               	movwf	218,b	;volatile
  6483  01B97A  0E00               	movlw	low (_port_data shr (0+16))
  6484  01B97C  6FDB               	movwf	219,b	;volatile
  6485                           
  6486                           ; BSR set to: 59
  6487                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  6488  01B97E  9BDC               	bcf	220,5,b	;volatile
  6489                           
  6490                           ; BSR set to: 59
  6491                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6492  01B980  0012               	return		;funcret
  6493  01B982                     __end_of_init_port_dma:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _init_display *****************
  6497 ;; Defined at:
  6498 ;;		line 38 in file "eadog.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1  [STACK] void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6507 ;; Tracked objects:
  6508 ;;		On entry : 3F/3B
  6509 ;;		On exit  : 3F/3D
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:   17
  6519 ;; This function calls:
  6520 ;;		_ringBufS_init
  6521 ;;		_send_lcd_cmd
  6522 ;;		_send_lcd_cmd_long
  6523 ;;		_send_lcd_data
  6524 ;;		_wdtdelay
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text6
  6531  019EFC                     __ptext6:
  6532                           	opt callstack 0
  6533  019EFC                     _init_display:
  6534                           	opt callstack 13
  6535                           
  6536                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6537                           
  6538                           ; BSR set to: 59
  6539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6540                           ;incstack = 0
  6541  019EFC  0E83               	movlw	low _ring_buf1
  6542  019EFE  0100               	movlb	0	; () banked
  6543  019F00  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6544  019F02  0E03               	movlw	high _ring_buf1
  6545  019F04  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6546                           
  6547                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6548  019F06  0E40               	movlw	low _ring_buf2
  6549  019F08  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6550  019F0A  0E03               	movlw	high _ring_buf2
  6551  019F0C  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6555  019F0E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6556  019F14  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6557  019F1A  EC77  F0DD         	call	_ringBufS_init	;wreg free
  6558                           
  6559                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6560  019F1E  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6561  019F24  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6562  019F2A  EC77  F0DD         	call	_ringBufS_init	;wreg free
  6563                           
  6564                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6565  019F2E  84BE               	bsf	190,2,c	;volatile
  6566                           
  6567                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  6568  019F30  013D               	movlb	61	; () banked
  6569  019F32  9F14               	bcf	20,7,b	;volatile
  6570                           
  6571                           ; BSR set to: 61
  6572                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  6573  019F34  0E20               	movlw	32
  6574  019F36  6F15               	movwf	21,b	;volatile
  6575                           
  6576                           ; BSR set to: 61
  6577                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  6578  019F38  0E03               	movlw	3
  6579  019F3A  6F16               	movwf	22,b	;volatile
  6580                           
  6581                           ; BSR set to: 61
  6582                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  6583  019F3C  0E04               	movlw	4
  6584  019F3E  6F19               	movwf	25,b	;volatile
  6585                           
  6586                           ; BSR set to: 61
  6587                           ;eadog.c: 55:  SPI1CLK = 0x02;
  6588  019F40  0E02               	movlw	2
  6589  019F42  6F1C               	movwf	28,b	;volatile
  6590                           
  6591                           ; BSR set to: 61
  6592                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  6593  019F44  0E83               	movlw	131
  6594  019F46  6F14               	movwf	20,b	;volatile
  6595                           
  6596                           ; BSR set to: 61
  6597                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  6598  019F48  8F14               	bsf	20,7,b	;volatile
  6599                           
  6600                           ; BSR set to: 61
  6601                           ;eadog.c: 60:  wdtdelay(350000);
  6602  019F4A  0E30               	movlw	48
  6603  019F4C  6EE6               	movwf	postinc1,c
  6604  019F4E  0E57               	movlw	87
  6605  019F50  6EE6               	movwf	postinc1,c
  6606  019F52  0E05               	movlw	5
  6607  019F54  6EE6               	movwf	postinc1,c
  6608  019F56  0E00               	movlw	0
  6609  019F58  6EE6               	movwf	postinc1,c
  6610  019F5A  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  6614  019F5E  0E46               	movlw	70
  6615  019F60  6EE6               	movwf	postinc1,c
  6616  019F62  EC25  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  6620  019F66  0E41               	movlw	65
  6621  019F68  6EE6               	movwf	postinc1,c
  6622  019F6A  EC45  F0DB         	call	_send_lcd_cmd	;wreg free
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;eadog.c: 63:  wdtdelay(80);
  6626  019F6E  0E50               	movlw	80
  6627  019F70  6EE6               	movwf	postinc1,c
  6628  019F72  0E00               	movlw	0
  6629  019F74  6EE6               	movwf	postinc1,c
  6630  019F76  0E00               	movlw	0
  6631  019F78  6EE6               	movwf	postinc1,c
  6632  019F7A  0E00               	movlw	0
  6633  019F7C  6EE6               	movwf	postinc1,c
  6634  019F7E  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  6638  019F82  0E53               	movlw	83
  6639  019F84  6EE6               	movwf	postinc1,c
  6640  019F86  EC45  F0DB         	call	_send_lcd_cmd	;wreg free
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;eadog.c: 65:  send_lcd_data(2);
  6644  019F8A  0E02               	movlw	2
  6645  019F8C  6EE6               	movwf	postinc1,c
  6646  019F8E  ECA4  F0DE         	call	_send_lcd_data	;wreg free
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;eadog.c: 66:  wdtdelay(80);
  6650  019F92  0E50               	movlw	80
  6651  019F94  6EE6               	movwf	postinc1,c
  6652  019F96  0E00               	movlw	0
  6653  019F98  6EE6               	movwf	postinc1,c
  6654  019F9A  0E00               	movlw	0
  6655  019F9C  6EE6               	movwf	postinc1,c
  6656  019F9E  0E00               	movlw	0
  6657  019FA0  6EE6               	movwf	postinc1,c
  6658  019FA2  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  6662  019FA6  0E51               	movlw	81
  6663  019FA8  6EE6               	movwf	postinc1,c
  6664  019FAA  EC25  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  6668  019FAE  013D               	movlb	61	; () banked
  6669  019FB0  9F14               	bcf	20,7,b	;volatile
  6670                           
  6671                           ; BSR set to: 61
  6672                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  6673  019FB2  0E02               	movlw	2
  6674  019FB4  6F16               	movwf	22,b	;volatile
  6675                           
  6676                           ; BSR set to: 61
  6677                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  6678  019FB6  8F14               	bsf	20,7,b	;volatile
  6679                           
  6680                           ; BSR set to: 61
  6681                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  6682  019FB8  931A               	bcf	26,1,b	;volatile
  6683                           
  6684                           ; BSR set to: 61
  6685                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  6686  019FBA  0E3F               	movlw	-193
  6687  019FBC  013B               	movlb	59	; () banked
  6688  019FBE  17FD               	andwf	253,f,b	;volatile
  6689                           
  6690                           ; BSR set to: 59
  6691                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  6692  019FC0  9BFD               	bcf	253,5,b	;volatile
  6693                           
  6694                           ; BSR set to: 59
  6695                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  6696  019FC2  51FD               	movf	253,w,b	;volatile
  6697  019FC4  0BF9               	andlw	-7
  6698  019FC6  0902               	iorlw	2
  6699  019FC8  6FFD               	movwf	253,b	;volatile
  6700                           
  6701                           ; BSR set to: 59
  6702                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  6703  019FCA  0EE7               	movlw	-25
  6704  019FCC  17FD               	andwf	253,f,b	;volatile
  6705                           
  6706                           ; BSR set to: 59
  6707                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  6708  019FCE  81FD               	bsf	253,0,b	;volatile
  6709                           
  6710                           ; BSR set to: 59
  6711                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  6712  019FD0  0E83               	movlw	low _ring_buf1
  6713  019FD2  6FF9               	movwf	249,b	;volatile
  6714  019FD4  0E03               	movlw	high _ring_buf1
  6715  019FD6  6FFA               	movwf	250,b	;volatile
  6716  019FD8  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6717  019FDA  6FFB               	movwf	251,b	;volatile
  6718                           
  6719                           ; BSR set to: 59
  6720                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  6721  019FDC  9BFC               	bcf	252,5,b	;volatile
  6722                           
  6723                           ; BSR set to: 59
  6724                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  6725  019FDE  013D               	movlb	61	; () banked
  6726  019FE0  831A               	bsf	26,1,b	;volatile
  6727                           
  6728                           ; BSR set to: 61
  6729                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  6730  019FE2  94BE               	bcf	190,2,c	;volatile
  6731                           
  6732                           ; BSR set to: 61
  6733                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6734  019FE4  0012               	return		;funcret
  6735  019FE6                     __end_of_init_display:
  6736                           	opt callstack 0
  6737                           
  6738 ;; *************** function _send_lcd_data *****************
  6739 ;; Defined at:
  6740 ;;		line 123 in file "eadog.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            1  [STACK] const unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1  [STACK] void 
  6747 ;; Registers used:
  6748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6749 ;; Tracked objects:
  6750 ;;		On entry : 3F/0
  6751 ;;		On exit  : 3F/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:   16
  6761 ;; This function calls:
  6762 ;;		_SPI1_Exchange8bit
  6763 ;;		_wdtdelay
  6764 ;; This function is called by:
  6765 ;;		_init_display
  6766 ;; This function uses a reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text7
  6770  01BD48                     __ptext7:
  6771                           	opt callstack 0
  6772  01BD48                     _send_lcd_data:
  6773                           	opt callstack 13
  6774                           
  6775                           ; BSR set to: 61
  6776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6777                           ;incstack = 0
  6778                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  6779  01BD48  94BC               	bcf	188,2,c	;volatile
  6780                           
  6781                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  6782                           ;stkvar	_data @ sp[(0)+-1]
  6783  01BD4A  0EFF               	movlw	-1
  6784  01BD4C  50E3               	movf	plusw1,w,c
  6785  01BD4E  6EE6               	movwf	postinc1,c
  6786  01BD50  EC64  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6787                           
  6788                           ; BSR set to: 57
  6789                           ;eadog.c: 127:  wdtdelay(8);
  6790  01BD54  0E08               	movlw	8
  6791  01BD56  6EE6               	movwf	postinc1,c
  6792  01BD58  0E00               	movlw	0
  6793  01BD5A  6EE6               	movwf	postinc1,c
  6794  01BD5C  0E00               	movlw	0
  6795  01BD5E  6EE6               	movwf	postinc1,c
  6796  01BD60  0E00               	movlw	0
  6797  01BD62  6EE6               	movwf	postinc1,c
  6798  01BD64  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6799                           
  6800                           ; BSR set to: 0
  6801                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  6802  01BD68  52E5               	movf	postdec1,f,c
  6803  01BD6A  0012               	return		;funcret
  6804  01BD6C                     __end_of_send_lcd_data:
  6805                           	opt callstack 0
  6806                           
  6807 ;; *************** function _send_lcd_cmd_long *****************
  6808 ;; Defined at:
  6809 ;;		line 139 in file "eadog.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  cmd             1  [STACK] const unsigned char 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  1  [STACK] void 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6818 ;; Tracked objects:
  6819 ;;		On entry : 3F/0
  6820 ;;		On exit  : 3F/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   16
  6830 ;; This function calls:
  6831 ;;		_SPI1_Exchange8bit
  6832 ;;		_wdtdelay
  6833 ;; This function is called by:
  6834 ;;		_init_display
  6835 ;; This function uses a reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text8
  6839  01B64A                     __ptext8:
  6840                           	opt callstack 0
  6841  01B64A                     _send_lcd_cmd_long:
  6842                           	opt callstack 13
  6843                           
  6844                           ; BSR set to: 0
  6845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6846                           ;incstack = 0
  6847                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  6848  01B64A  94BC               	bcf	188,2,c	;volatile
  6849                           
  6850                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  6851  01B64C  0EFE               	movlw	254
  6852  01B64E  6EE6               	movwf	postinc1,c
  6853  01B650  EC64  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6854                           
  6855                           ; BSR set to: 57
  6856                           ;eadog.c: 143:  wdtdelay(8);
  6857  01B654  0E08               	movlw	8
  6858  01B656  6EE6               	movwf	postinc1,c
  6859  01B658  0E00               	movlw	0
  6860  01B65A  6EE6               	movwf	postinc1,c
  6861  01B65C  0E00               	movlw	0
  6862  01B65E  6EE6               	movwf	postinc1,c
  6863  01B660  0E00               	movlw	0
  6864  01B662  6EE6               	movwf	postinc1,c
  6865  01B664  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  6869                           ;stkvar	_cmd @ sp[(0)+-1]
  6870  01B668  0EFF               	movlw	-1
  6871  01B66A  50E3               	movf	plusw1,w,c
  6872  01B66C  6EE6               	movwf	postinc1,c
  6873  01B66E  EC64  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6874                           
  6875                           ;eadog.c: 145:  wdtdelay(800);
  6876  01B672  0E20               	movlw	32
  6877  01B674  6EE6               	movwf	postinc1,c
  6878  01B676  0E03               	movlw	3
  6879  01B678  6EE6               	movwf	postinc1,c
  6880  01B67A  0E00               	movlw	0
  6881  01B67C  6EE6               	movwf	postinc1,c
  6882  01B67E  0E00               	movlw	0
  6883  01B680  6EE6               	movwf	postinc1,c
  6884  01B682  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6885                           
  6886                           ; BSR set to: 0
  6887                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6888  01B686  52E5               	movf	postdec1,f,c
  6889  01B688  0012               	return		;funcret
  6890  01B68A                     __end_of_send_lcd_cmd_long:
  6891                           	opt callstack 0
  6892                           
  6893 ;; *************** function _send_lcd_cmd *****************
  6894 ;; Defined at:
  6895 ;;		line 130 in file "eadog.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  cmd             1  [STACK] const unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1  [STACK] void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6904 ;; Tracked objects:
  6905 ;;		On entry : 3F/0
  6906 ;;		On exit  : 3F/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:   16
  6916 ;; This function calls:
  6917 ;;		_SPI1_Exchange8bit
  6918 ;;		_wdtdelay
  6919 ;; This function is called by:
  6920 ;;		_init_display
  6921 ;; This function uses a reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text9
  6925  01B68A                     __ptext9:
  6926                           	opt callstack 0
  6927  01B68A                     _send_lcd_cmd:
  6928                           	opt callstack 13
  6929                           
  6930                           ; BSR set to: 0
  6931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6932                           ;incstack = 0
  6933                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  6934  01B68A  94BC               	bcf	188,2,c	;volatile
  6935                           
  6936                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  6937  01B68C  0EFE               	movlw	254
  6938  01B68E  6EE6               	movwf	postinc1,c
  6939  01B690  EC64  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6940                           
  6941                           ; BSR set to: 57
  6942                           ;eadog.c: 134:  wdtdelay(8);
  6943  01B694  0E08               	movlw	8
  6944  01B696  6EE6               	movwf	postinc1,c
  6945  01B698  0E00               	movlw	0
  6946  01B69A  6EE6               	movwf	postinc1,c
  6947  01B69C  0E00               	movlw	0
  6948  01B69E  6EE6               	movwf	postinc1,c
  6949  01B6A0  0E00               	movlw	0
  6950  01B6A2  6EE6               	movwf	postinc1,c
  6951  01B6A4  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  6955                           ;stkvar	_cmd @ sp[(0)+-1]
  6956  01B6A8  0EFF               	movlw	-1
  6957  01B6AA  50E3               	movf	plusw1,w,c
  6958  01B6AC  6EE6               	movwf	postinc1,c
  6959  01B6AE  EC64  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6960                           
  6961                           ;eadog.c: 136:  wdtdelay(8);
  6962  01B6B2  0E08               	movlw	8
  6963  01B6B4  6EE6               	movwf	postinc1,c
  6964  01B6B6  0E00               	movlw	0
  6965  01B6B8  6EE6               	movwf	postinc1,c
  6966  01B6BA  0E00               	movlw	0
  6967  01B6BC  6EE6               	movwf	postinc1,c
  6968  01B6BE  0E00               	movlw	0
  6969  01B6C0  6EE6               	movwf	postinc1,c
  6970  01B6C2  ECEF  F0D8         	call	_wdtdelay	;wreg free
  6971                           
  6972                           ; BSR set to: 0
  6973                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6974  01B6C6  52E5               	movf	postdec1,f,c
  6975  01B6C8  0012               	return		;funcret
  6976  01B6CA                     __end_of_send_lcd_cmd:
  6977                           	opt callstack 0
  6978                           
  6979 ;; *************** function _SPI1_Exchange8bit *****************
  6980 ;; Defined at:
  6981 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  data            1  [STACK] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1  [STACK] unsigned char 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 3F/39
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6999 ;;Total ram usage:        0 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:   15
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_send_lcd_data
  7006 ;;		_send_lcd_cmd
  7007 ;;		_send_lcd_cmd_long
  7008 ;; This function uses a reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text10
  7012  01BEC8                     __ptext10:
  7013                           	opt callstack 0
  7014  01BEC8                     _SPI1_Exchange8bit:
  7015                           	opt callstack 13
  7016                           
  7017                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  7018                           
  7019                           ; BSR set to: 0
  7020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7021                           ;incstack = 0
  7022  01BEC8  0E01               	movlw	1
  7023  01BECA  013D               	movlb	61	; () banked
  7024  01BECC  6F12               	movwf	18,b	;volatile
  7025                           
  7026                           ; BSR set to: 61
  7027                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  7028                           ;stkvar	_data @ sp[(0)+-1]
  7029  01BECE  0EFF               	movlw	-1
  7030  01BED0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  7031  01BED6                     l807:
  7032                           
  7033                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7034  01BED6  0139               	movlb	57	; () banked
  7035  01BED8  A9A2               	btfss	162,4,b	;volatile
  7036  01BEDA  D7FD               	goto	l807
  7037                           
  7038                           ; BSR set to: 57
  7039                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7040  01BEDC  006F F440  F001    	movff	15632,btemp	;volatile
  7041                           
  7042                           ; BSR set to: 57
  7043                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7044  01BEE2  52E5               	movf	postdec1,f,c
  7045  01BEE4  0012               	return		;funcret
  7046  01BEE6                     __end_of_SPI1_Exchange8bit:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _ringBufS_init *****************
  7050 ;; Defined at:
  7051 ;;		line 22 in file "ringbufs.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  _this           2  [STACK] PTR volatile struct ring
  7054 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1  [STACK] void 
  7059 ;; Registers used:
  7060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:   16
  7073 ;; This function calls:
  7074 ;;		_memset
  7075 ;; This function is called by:
  7076 ;;		_init_display
  7077 ;; This function uses a reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text11
  7081  01BAEE                     __ptext11:
  7082                           	opt callstack 0
  7083  01BAEE                     _ringBufS_init:
  7084                           	opt callstack 13
  7085                           
  7086                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7087                           
  7088                           ; BSR set to: 57
  7089                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7090                           ;incstack = 0
  7091  01BAEE  0E43               	movlw	67
  7092  01BAF0  6EE6               	movwf	postinc1,c
  7093  01BAF2  0E00               	movlw	0
  7094  01BAF4  6EE6               	movwf	postinc1,c
  7095  01BAF6  0E00               	movlw	0
  7096  01BAF8  6EE6               	movwf	postinc1,c
  7097  01BAFA  0E00               	movlw	0
  7098  01BAFC  6EE6               	movwf	postinc1,c
  7099                           
  7100                           ;stkvar	__this @ sp[(-4)+-2]
  7101  01BAFE  0EFA               	movlw	-6
  7102  01BB00  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  01BB06  006F FF8F FFE6     	movff	plusw1,postinc1
  7104  01BB0C  EC2A  F0B7         	call	_memset	;wreg free
  7105                           
  7106                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7107  01BB10  52E5               	movf	postdec1,f,c
  7108  01BB12  52E5               	movf	postdec1,f,c
  7109  01BB14  0012               	return		;funcret
  7110  01BB16                     __end_of_ringBufS_init:
  7111                           	opt callstack 0
  7112                           
  7113 ;; *************** function _init_bsoc *****************
  7114 ;; Defined at:
  7115 ;;		line 109 in file "bsoc.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1  [STACK] void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/1
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;Total ram usage:        0 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   18
  7136 ;; This function calls:
  7137 ;;		_TMR3_SetInterruptHandler
  7138 ;;		_Volts_to_SOC
  7139 ;;		___fldiv
  7140 ;;		___flmul
  7141 ;;		___fltol
  7142 ;;		___xxtofl
  7143 ;;		_conv_raw_result
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text12
  7150  017BC2                     __ptext12:
  7151                           	opt callstack 0
  7152  017BC2                     _init_bsoc:
  7153                           	opt callstack 12
  7154                           
  7155                           ;bsoc.c: 114:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7156                           
  7157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7158                           ;incstack = 0
  7159  017BC2  0E00               	movlw	0
  7160  017BC4  6EE6               	movwf	postinc1,c
  7161  017BC6  0E00               	movlw	0
  7162  017BC8  6EE6               	movwf	postinc1,c
  7163  017BCA  0E7A               	movlw	122
  7164  017BCC  6EE6               	movwf	postinc1,c
  7165  017BCE  0E44               	movlw	68
  7166  017BD0  6EE6               	movwf	postinc1,c
  7167  017BD2  0E00               	movlw	0
  7168  017BD4  6EE6               	movwf	postinc1,c
  7169  017BD6  0E04               	movlw	4
  7170  017BD8  6EE6               	movwf	postinc1,c
  7171  017BDA  EC71  F0A9         	call	_conv_raw_result	;wreg free
  7172  017BDE  0060  F007  FFE6   	movff	btemp,postinc1
  7173  017BE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7174  017BEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7175  017BF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7176  017BF6  EC3B  F0C7         	call	___fltol	;wreg free
  7177  017BFA  0060  F007  FFE6   	movff	btemp,postinc1
  7178  017C00  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7179  017C06  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7180  017C0C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7181  017C12  0E00               	movlw	0
  7182  017C14  6EE6               	movwf	postinc1,c
  7183  017C16  EC3D  F0C2         	call	___xxtofl	;wreg free
  7184  017C1A  0060  F007  FFE6   	movff	btemp,postinc1
  7185  017C20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7186  017C26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7187  017C2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7188  017C32  ECC1  F09E         	call	___flmul	;wreg free
  7189  017C36  0060  F007  FFE6   	movff	btemp,postinc1
  7190  017C3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7191  017C42  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7192  017C48  0060  F013  FFE6   	movff	btemp+3,postinc1
  7193  017C4E  EC3B  F0C7         	call	___fltol	;wreg free
  7194  017C52  0060  F007  FFE6   	movff	btemp,postinc1
  7195  017C58  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7196  017C5E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7197  017C64  0060  F013  FFE6   	movff	btemp+3,postinc1
  7198  017C6A  EC0D  F0D2         	call	_Volts_to_SOC	;wreg free
  7199  017C6E  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7200  017C74  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7201                           
  7202                           ;bsoc.c: 115:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7203  017C7A  EE21  F38B         	lfsr	2,_C+140	;volatile
  7204  017C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  7205  017C84  006F FF7B FFE6     	movff	postinc2,postinc1
  7206  017C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  7207  017C90  006F FF7B FFE6     	movff	postinc2,postinc1
  7208  017C96  0E00               	movlw	0
  7209  017C98  6EE6               	movwf	postinc1,c
  7210  017C9A  0E00               	movlw	0
  7211  017C9C  6EE6               	movwf	postinc1,c
  7212  017C9E  0EC8               	movlw	200
  7213  017CA0  6EE6               	movwf	postinc1,c
  7214  017CA2  0E42               	movlw	66
  7215  017CA4  6EE6               	movwf	postinc1,c
  7216  017CA6  0E00               	movlw	0
  7217  017CA8  6EE6               	movwf	postinc1,c
  7218  017CAA  0E00               	movlw	0
  7219  017CAC  6EE6               	movwf	postinc1,c
  7220  017CAE  0E7A               	movlw	122
  7221  017CB0  6EE6               	movwf	postinc1,c
  7222  017CB2  0E44               	movlw	68
  7223  017CB4  6EE6               	movwf	postinc1,c
  7224  017CB6  0E00               	movlw	0
  7225  017CB8  6EE6               	movwf	postinc1,c
  7226  017CBA  0E04               	movlw	4
  7227  017CBC  6EE6               	movwf	postinc1,c
  7228  017CBE  EC71  F0A9         	call	_conv_raw_result	;wreg free
  7229  017CC2  0060  F007  FFE6   	movff	btemp,postinc1
  7230  017CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7231  017CCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7232  017CD4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7233  017CDA  EC3B  F0C7         	call	___fltol	;wreg free
  7234  017CDE  0060  F007  FFE6   	movff	btemp,postinc1
  7235  017CE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7236  017CEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7237  017CF0  0060  F013  FFE6   	movff	btemp+3,postinc1
  7238  017CF6  0E00               	movlw	0
  7239  017CF8  6EE6               	movwf	postinc1,c
  7240  017CFA  EC3D  F0C2         	call	___xxtofl	;wreg free
  7241  017CFE  0060  F007  FFE6   	movff	btemp,postinc1
  7242  017D04  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7243  017D0A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7244  017D10  0060  F013  FFE6   	movff	btemp+3,postinc1
  7245  017D16  ECC1  F09E         	call	___flmul	;wreg free
  7246  017D1A  0060  F007  FFE6   	movff	btemp,postinc1
  7247  017D20  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7248  017D26  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7249  017D2C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7250  017D32  EC3B  F0C7         	call	___fltol	;wreg free
  7251  017D36  0060  F007  FFE6   	movff	btemp,postinc1
  7252  017D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7253  017D42  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7254  017D48  0060  F013  FFE6   	movff	btemp+3,postinc1
  7255  017D4E  EC0D  F0D2         	call	_Volts_to_SOC	;wreg free
  7256  017D52  0060  F004  F00B   	movff	btemp,btemp+10
  7257  017D58  0060  F008  F00C   	movff	btemp+1,btemp+11
  7258  017D5E  500B               	movf	(btemp+10)^0,w,c
  7259  017D60  6E05               	movwf	(btemp+4)^0,c
  7260  017D62  500C               	movf	(btemp+11)^0,w,c
  7261  017D64  6E06               	movwf	(btemp+5)^0,c
  7262  017D66  6A07               	clrf	(btemp+6)^0,c
  7263  017D68  6A08               	clrf	(btemp+7)^0,c
  7264  017D6A  0060  F017  FFE6   	movff	btemp+4,postinc1
  7265  017D70  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7266  017D76  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7267  017D7C  0060  F023  FFE6   	movff	btemp+7,postinc1
  7268  017D82  0E00               	movlw	0
  7269  017D84  6EE6               	movwf	postinc1,c
  7270  017D86  EC3D  F0C2         	call	___xxtofl	;wreg free
  7271  017D8A  0060  F007  FFE6   	movff	btemp,postinc1
  7272  017D90  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7273  017D96  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7274  017D9C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7275  017DA2  ECB4  F0A6         	call	___fldiv	;wreg free
  7276  017DA6  0060  F007  FFE6   	movff	btemp,postinc1
  7277  017DAC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7278  017DB2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7279  017DB8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7280  017DBE  ECC1  F09E         	call	___flmul	;wreg free
  7281  017DC2  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7282  017DC8  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7283  017DCE  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7284  017DD4  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7285                           
  7286                           ;bsoc.c: 116:  C.dynamic_ah_adj = C.dynamic_ah;
  7287  017DDA  EE21  F38F         	lfsr	2,_C+144	;volatile
  7288  017DDE  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7289  017DE4  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7290  017DEA  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7291  017DF0  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7292                           
  7293                           ;bsoc.c: 117:  TMR3_SetInterruptHandler(calc_bsoc);
  7294  017DF6  0E4C               	movlw	low _calc_bsoc
  7295  017DF8  6EE6               	movwf	postinc1,c
  7296  017DFA  0E33               	movlw	high _calc_bsoc
  7297  017DFC  6EE6               	movwf	postinc1,c
  7298  017DFE  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7299  017E00  6EE6               	movwf	postinc1,c
  7300  017E02  EC03  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
  7301                           
  7302                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7303  017E06  0012               	return		;funcret
  7304  017E08                     __end_of_init_bsoc:
  7305                           	opt callstack 0
  7306                           
  7307 ;; *************** function _Volts_to_SOC *****************
  7308 ;; Defined at:
  7309 ;;		line 174 in file "bsoc.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  cvoltage        4  [STACK] const unsigned long 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;  soc             2  [STACK] unsigned short 
  7314 ;;  slot            1  [STACK] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  2  [STACK] unsigned short 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/1
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:   15
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_init_bsoc
  7335 ;; This function uses a reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text13
  7339  01A41A                     __ptext13:
  7340                           	opt callstack 0
  7341  01A41A                     _Volts_to_SOC:
  7342                           	opt callstack 0
  7343                           
  7344                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7345  01A41A  52E6               	movf	postinc1,f,c
  7346  01A41C  52E6               	movf	postinc1,f,c
  7347  01A41E  52E6               	movf	postinc1,f,c
  7348                           
  7349                           ;bsoc.c: 174: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 175: {;bsoc.c: 176:
      +                            uint8_t slot;;bsoc.c: 177:  uint16_t soc = 0;
  7350                           ;stkvar	_soc @ sp[(-3)+0]
  7351                           
  7352                           ;incstack = 0
  7353  01A420  0EFD               	movlw	-3
  7354  01A422  6AE3               	clrf	plusw1,c
  7355  01A424  0EFE               	movlw	-2
  7356  01A426  6AE3               	clrf	plusw1,c
  7357                           
  7358                           ;bsoc.c: 182:  for (slot = 0; slot < 26; slot++) {
  7359                           ;stkvar	_slot @ sp[(-3)+2]
  7360  01A428  0EFF               	movlw	-1
  7361  01A42A  6AE3               	clrf	plusw1,c
  7362  01A42C                     l10662:
  7363                           
  7364                           ;bsoc.c: 183:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7365                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  7366                           ;stkvar	_slot @ sp[(-3)+2]
  7367  01A42C  0EFF               	movlw	-1
  7368  01A42E  50E3               	movf	plusw1,w,c
  7369  01A430  0D08               	mullw	8
  7370  01A432  0EEB               	movlw	low _BVSOC_TABLE
  7371  01A434  24F3               	addwf	243,w,c
  7372  01A436  6EF6               	movwf	tblptrl,c
  7373  01A438  0EF9               	movlw	high _BVSOC_TABLE
  7374  01A43A  20F4               	addwfc	244,w,c
  7375  01A43C  6EF7               	movwf	tblptrh,c
  7376  01A43E                     	if	1	;There are 3 active tblptr bytes
  7377  01A43E  6AF8               	clrf	tblptru,c
  7378  01A440  0E00               	movlw	low (__mediumconst shr (0+16))
  7379  01A442  22F8               	addwfc	tblptru,f,c
  7380  01A444                     	endif
  7381  01A444  0EF9               	movlw	-7
  7382  01A446  50E3               	movf	plusw1,w,c
  7383  01A448  0009               	tblrd		*+
  7384  01A44A  5CF5               	subwf	tablat,w,c
  7385  01A44C  0EFA               	movlw	-6
  7386  01A44E  50E3               	movf	plusw1,w,c
  7387  01A450  0009               	tblrd		*+
  7388  01A452  58F5               	subwfb	tablat,w,c
  7389  01A454  0EFB               	movlw	-5
  7390  01A456  50E3               	movf	plusw1,w,c
  7391  01A458  0009               	tblrd		*+
  7392  01A45A  58F5               	subwfb	tablat,w,c
  7393  01A45C  0EFC               	movlw	-4
  7394  01A45E  50E3               	movf	plusw1,w,c
  7395  01A460  0009               	tblrd		*+
  7396  01A462  58F5               	subwfb	tablat,w,c
  7397  01A464  B0D8               	btfsc	status,0,c
  7398  01A466  D020               	goto	l10666
  7399                           
  7400                           ;bsoc.c: 184:    soc = BVSOC_TABLE[slot][1];
  7401                           ;stkvar	_slot @ sp[(-3)+2]
  7402  01A468  0EFF               	movlw	-1
  7403  01A46A  50E3               	movf	plusw1,w,c
  7404  01A46C  0D08               	mullw	8
  7405  01A46E  0E04               	movlw	4
  7406  01A470  26F3               	addwf	243,f,c
  7407  01A472  0E00               	movlw	0
  7408  01A474  22F4               	addwfc	244,f,c
  7409  01A476  0EEB               	movlw	low _BVSOC_TABLE
  7410  01A478  24F3               	addwf	243,w,c
  7411  01A47A  6EF6               	movwf	tblptrl,c
  7412  01A47C  0EF9               	movlw	high _BVSOC_TABLE
  7413  01A47E  20F4               	addwfc	244,w,c
  7414  01A480  6EF7               	movwf	tblptrh,c
  7415  01A482                     	if	1	;There are 3 active tblptr bytes
  7416  01A482  6AF8               	clrf	tblptru,c
  7417  01A484  0E00               	movlw	low (__mediumconst shr (0+16))
  7418  01A486  22F8               	addwfc	tblptru,f,c
  7419  01A488                     	endif
  7420  01A488  0009               	tblrd		*+
  7421  01A48A  006F FFD4  F00B    	movff	tablat,btemp+10
  7422  01A490  0009               	tblrd		*+
  7423  01A492  006F FFD4  F00C    	movff	tablat,btemp+11
  7424                           
  7425                           ;stkvar	_soc @ sp[(-3)+0]
  7426  01A498  0EFD               	movlw	-3
  7427  01A49A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7428  01A4A0  0EFE               	movlw	-2
  7429  01A4A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  7430  01A4A8                     l10666:
  7431                           
  7432                           ;bsoc.c: 186:  }
  7433                           ;stkvar	_slot @ sp[(-3)+2]
  7434  01A4A8  0EFF               	movlw	-1
  7435  01A4AA  2AE3               	incf	plusw1,f,c
  7436                           
  7437                           ;stkvar	_slot @ sp[(-3)+2]
  7438  01A4AC  0EFF               	movlw	-1
  7439  01A4AE  006F FF8C  F001    	movff	plusw1,btemp
  7440  01A4B4  0E19               	movlw	25
  7441  01A4B6  6401               	cpfsgt	btemp^0,c
  7442  01A4B8  D7B9               	goto	l10662
  7443                           
  7444                           ;bsoc.c: 187:  return soc;
  7445                           ;stkvar	_soc @ sp[(-3)+0]
  7446  01A4BA  0EFD               	movlw	-3
  7447  01A4BC  006F FF8C  F001    	movff	plusw1,btemp
  7448  01A4C2  0EFE               	movlw	-2
  7449  01A4C4  006F FF8C  F002    	movff	plusw1,btemp+1
  7450                           
  7451                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7452  01A4CA  0EF9               	movlw	249
  7453  01A4CC  26E1               	addwf	fsr1l,f,c
  7454  01A4CE  0EFF               	movlw	255
  7455  01A4D0  22E2               	addwfc	fsr1h,f,c
  7456  01A4D2  0012               	return		;funcret
  7457  01A4D4                     __end_of_Volts_to_SOC:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function _hid_display *****************
  7461 ;; Defined at:
  7462 ;;		line 17 in file "hid.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  h               1  [STACK] PTR struct H_data
  7465 ;;		 -> H(7), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1  [STACK] PTR struct H_data
  7470 ;; Registers used:
  7471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7472 ;; Tracked objects:
  7473 ;;		On entry : 3F/39
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:   17
  7484 ;; This function calls:
  7485 ;;		_hid_input
  7486 ;; This function is called by:
  7487 ;;		_main
  7488 ;; This function uses a reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text14
  7492  019D0A                     __ptext14:
  7493                           	opt callstack 0
  7494  019D0A                     _hid_display:
  7495                           	opt callstack 13
  7496                           
  7497                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7498                           ;stkvar	_h @ sp[(0)+-1]
  7499                           
  7500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7501                           ;incstack = 0
  7502  019D0A  0EFF               	movlw	-1
  7503  019D0C  50E3               	movf	plusw1,w,c
  7504  019D0E  6EE6               	movwf	postinc1,c
  7505  019D10  EC9E  F0D5         	call	_hid_input	;wreg free
  7506                           
  7507                           ;hid.c: 21:  switch (h->h_state) {
  7508  019D14  D066               	goto	l11074
  7509  019D16                     l11052:
  7510                           
  7511                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7512                           ;stkvar	_h @ sp[(0)+-1]
  7513  019D16  0EFF               	movlw	-1
  7514  019D18  50E3               	movf	plusw1,w,c
  7515  019D1A  6ED9               	movwf	fsr2l,c
  7516  019D1C  6ADA               	clrf	fsr2h,c
  7517  019D1E  0E01               	movlw	1
  7518  019D20  26D9               	addwf	fsr2l,f,c
  7519  019D22  0E01               	movlw	1
  7520  019D24  6EDF               	movwf	indf2,c
  7521                           
  7522                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7523                           ;stkvar	_h @ sp[(0)+-1]
  7524  019D26  0EFF               	movlw	-1
  7525  019D28  50E3               	movf	plusw1,w,c
  7526  019D2A  6ED9               	movwf	fsr2l,c
  7527  019D2C  6ADA               	clrf	fsr2h,c
  7528  019D2E  0E00               	movlw	0
  7529  019D30  6EDF               	movwf	indf2,c
  7530                           
  7531                           ;hid.c: 25:   h->wait_enter = 1;
  7532                           ;stkvar	_h @ sp[(0)+-1]
  7533  019D32  0EFF               	movlw	-1
  7534  019D34  50E3               	movf	plusw1,w,c
  7535  019D36  6ED9               	movwf	fsr2l,c
  7536  019D38  6ADA               	clrf	fsr2h,c
  7537  019D3A  0E04               	movlw	4
  7538  019D3C  26D9               	addwf	fsr2l,f,c
  7539  019D3E  0E01               	movlw	1
  7540  019D40  6EDF               	movwf	indf2,c
  7541                           
  7542                           ;hid.c: 26:   h->wait_select = 1;
  7543                           ;stkvar	_h @ sp[(0)+-1]
  7544  019D42  0EFF               	movlw	-1
  7545  019D44  50E3               	movf	plusw1,w,c
  7546  019D46  6ED9               	movwf	fsr2l,c
  7547  019D48  6ADA               	clrf	fsr2h,c
  7548  019D4A  0E02               	movlw	2
  7549  019D4C  26D9               	addwf	fsr2l,f,c
  7550  019D4E  0E01               	movlw	1
  7551  019D50  6EDF               	movwf	indf2,c
  7552                           
  7553                           ;hid.c: 27:   h->select_p = SW_OFF;
  7554                           ;stkvar	_h @ sp[(0)+-1]
  7555  019D52  0EFF               	movlw	-1
  7556  019D54  50E3               	movf	plusw1,w,c
  7557  019D56  6ED9               	movwf	fsr2l,c
  7558  019D58  6ADA               	clrf	fsr2h,c
  7559  019D5A  0E03               	movlw	3
  7560  019D5C  26D9               	addwf	fsr2l,f,c
  7561  019D5E  0E00               	movlw	0
  7562  019D60  6EDF               	movwf	indf2,c
  7563                           
  7564                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7565                           ;stkvar	_h @ sp[(0)+-1]
  7566  019D62  0EFF               	movlw	-1
  7567  019D64  50E3               	movf	plusw1,w,c
  7568  019D66  6ED9               	movwf	fsr2l,c
  7569  019D68  6ADA               	clrf	fsr2h,c
  7570  019D6A  0E05               	movlw	5
  7571  019D6C  26D9               	addwf	fsr2l,f,c
  7572  019D6E  0E00               	movlw	0
  7573  019D70  D036               	goto	L3
  7574  019D72                     l11064:
  7575                           
  7576                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7577                           ;stkvar	_h @ sp[(0)+-1]
  7578  019D72  0EFF               	movlw	-1
  7579  019D74  50E3               	movf	plusw1,w,c
  7580  019D76  6ED9               	movwf	fsr2l,c
  7581  019D78  6ADA               	clrf	fsr2h,c
  7582  019D7A  0E02               	movlw	2
  7583  019D7C  26D9               	addwf	fsr2l,f,c
  7584  019D7E  50DF               	movf	indf2,w,c
  7585  019D80  A4D8               	btfss	status,2,c
  7586  019D82  D042               	goto	l1967
  7587                           
  7588                           ;stkvar	_h @ sp[(0)+-1]
  7589  019D84  0EFF               	movlw	-1
  7590  019D86  50E3               	movf	plusw1,w,c
  7591  019D88  6ED9               	movwf	fsr2l,c
  7592  019D8A  6ADA               	clrf	fsr2h,c
  7593  019D8C  0E03               	movlw	3
  7594  019D8E  26D9               	addwf	fsr2l,f,c
  7595  019D90  50DF               	movf	indf2,w,c
  7596  019D92  A4D8               	btfss	status,2,c
  7597  019D94  D039               	goto	l1967
  7598                           
  7599                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7600                           ;stkvar	_h @ sp[(0)+-1]
  7601  019D96  0EFF               	movlw	-1
  7602  019D98  50E3               	movf	plusw1,w,c
  7603  019D9A  6ED9               	movwf	fsr2l,c
  7604  019D9C  6ADA               	clrf	fsr2h,c
  7605  019D9E  0E06               	movlw	6
  7606  019DA0  26D9               	addwf	fsr2l,f,c
  7607                           
  7608                           ;stkvar	_h @ sp[(0)+-1]
  7609  019DA2  0EFF               	movlw	-1
  7610  019DA4  50E3               	movf	plusw1,w,c
  7611  019DA6  6EE9               	movwf	fsr0l,c
  7612  019DA8  6AEA               	clrf	fsr0h,c
  7613  019DAA  0E06               	movlw	6
  7614  019DAC  26E9               	addwf	fsr0l,f,c
  7615  019DAE  2AEF               	incf	indf0,f,c
  7616  019DB0  50EF               	movf	indf0,w,c
  7617  019DB2  0B03               	andlw	3
  7618  019DB4  6EDF               	movwf	indf2,c
  7619                           
  7620                           ;hid.c: 34:    h->hid_display = h->sequence;
  7621                           ;stkvar	_h @ sp[(0)+-1]
  7622  019DB6  0EFF               	movlw	-1
  7623  019DB8  50E3               	movf	plusw1,w,c
  7624  019DBA  6ED9               	movwf	fsr2l,c
  7625  019DBC  6ADA               	clrf	fsr2h,c
  7626  019DBE  0E06               	movlw	6
  7627  019DC0  26D9               	addwf	fsr2l,f,c
  7628                           
  7629                           ;stkvar	_h @ sp[(0)+-1]
  7630  019DC2  0EFF               	movlw	-1
  7631  019DC4  50E3               	movf	plusw1,w,c
  7632  019DC6  6EE9               	movwf	fsr0l,c
  7633  019DC8  6AEA               	clrf	fsr0h,c
  7634  019DCA  006F FF7F FFEF     	movff	indf2,indf0
  7635                           
  7636                           ;hid.c: 35:    h->wait_select = 1;
  7637                           ;stkvar	_h @ sp[(0)+-1]
  7638  019DD0  0EFF               	movlw	-1
  7639  019DD2  50E3               	movf	plusw1,w,c
  7640  019DD4  6ED9               	movwf	fsr2l,c
  7641  019DD6  6ADA               	clrf	fsr2h,c
  7642  019DD8  0E02               	movlw	2
  7643  019DDA  26D9               	addwf	fsr2l,f,c
  7644  019DDC  0E01               	movlw	1
  7645  019DDE                     L3:
  7646  019DDE  6EDF               	movwf	indf2,c
  7647  019DE0  D013               	goto	l1967
  7648  019DE2                     l11074:
  7649                           
  7650                           ;stkvar	_h @ sp[(0)+-1]
  7651  019DE2  0EFF               	movlw	-1
  7652  019DE4  50E3               	movf	plusw1,w,c
  7653  019DE6  6ED9               	movwf	fsr2l,c
  7654  019DE8  6ADA               	clrf	fsr2h,c
  7655  019DEA  0E01               	movlw	1
  7656  019DEC  26D9               	addwf	fsr2l,f,c
  7657  019DEE  50DF               	movf	indf2,w,c
  7658  019DF0  6E0B               	movwf	(btemp+10)^0,c
  7659  019DF2  6A0C               	clrf	(btemp+11)^0,c
  7660                           
  7661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7662                           ; Switch size 1, requested type "simple"
  7663                           ; Number of cases is 1, Range of values is 0 to 0
  7664                           ; switch strategies available:
  7665                           ; Name         Instructions Cycles
  7666                           ; simple_byte            4     3 (average)
  7667                           ;	Chosen strategy is simple_byte
  7668  019DF4  500C               	movf	(btemp+11)^0,w,c
  7669  019DF6  0A00               	xorlw	0	; case 0
  7670  019DF8  A4D8               	btfss	status,2,c
  7671  019DFA  D7BB               	goto	l11064
  7672                           
  7673                           ; Switch size 1, requested type "simple"
  7674                           ; Number of cases is 2, Range of values is 0 to 1
  7675                           ; switch strategies available:
  7676                           ; Name         Instructions Cycles
  7677                           ; simple_byte            7     4 (average)
  7678                           ;	Chosen strategy is simple_byte
  7679  019DFC  500B               	movf	(btemp+10)^0,w,c
  7680  019DFE  0A00               	xorlw	0	; case 0
  7681  019E00  B4D8               	btfsc	status,2,c
  7682  019E02  D789               	goto	l11052
  7683  019E04  0A01               	xorlw	1	; case 1
  7684  019E06  D7B5               	goto	l11064
  7685  019E08                     l1967:
  7686                           
  7687                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7688  019E08  52E5               	movf	postdec1,f,c
  7689  019E0A  0012               	return		;funcret
  7690  019E0C                     __end_of_hid_display:
  7691                           	opt callstack 0
  7692                           
  7693 ;; *************** function _hid_input *****************
  7694 ;; Defined at:
  7695 ;;		line 3 in file "hid.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  h               1  [STACK] PTR struct H_data
  7698 ;;		 -> H(7), 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  1  [STACK] PTR struct H_data
  7703 ;; Registers used:
  7704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/39
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7714 ;;Total ram usage:        0 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:   16
  7717 ;; This function calls:
  7718 ;;		_get_switch
  7719 ;; This function is called by:
  7720 ;;		_hid_display
  7721 ;; This function uses a reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text15
  7725  01AB3C                     __ptext15:
  7726                           	opt callstack 0
  7727  01AB3C                     _hid_input:
  7728                           	opt callstack 13
  7729                           
  7730                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7731                           
  7732                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7733                           ;incstack = 0
  7734  01AB3C  0E02               	movlw	2
  7735  01AB3E  6EE6               	movwf	postinc1,c
  7736  01AB40  EC20  F0DD         	call	_get_switch	;wreg free
  7737  01AB44  5001               	movf	btemp^0,w,c
  7738  01AB46  B4D8               	btfsc	status,2,c
  7739  01AB48  D01C               	goto	l10572
  7740                           
  7741                           ;hid.c: 6:   h->wait_select = 0;
  7742                           ;stkvar	_h @ sp[(0)+-1]
  7743  01AB4A  0EFF               	movlw	-1
  7744  01AB4C  50E3               	movf	plusw1,w,c
  7745  01AB4E  6ED9               	movwf	fsr2l,c
  7746  01AB50  6ADA               	clrf	fsr2h,c
  7747  01AB52  0E02               	movlw	2
  7748  01AB54  26D9               	addwf	fsr2l,f,c
  7749  01AB56  0E00               	movlw	0
  7750  01AB58  6EDF               	movwf	indf2,c
  7751                           
  7752                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7753  01AB5A  0E02               	movlw	2
  7754  01AB5C  6EE6               	movwf	postinc1,c
  7755  01AB5E  EC20  F0DD         	call	_get_switch	;wreg free
  7756  01AB62  5001               	movf	btemp^0,w,c
  7757  01AB64  B4D8               	btfsc	status,2,c
  7758  01AB66  D003               	goto	u9710
  7759  01AB68  6A0C               	clrf	(btemp+11)^0,c
  7760  01AB6A  2A0C               	incf	(btemp+11)^0,f,c
  7761  01AB6C  D001               	goto	u9728
  7762  01AB6E                     u9710:
  7763  01AB6E  6A0C               	clrf	(btemp+11)^0,c
  7764  01AB70                     u9728:
  7765                           
  7766                           ;stkvar	_h @ sp[(0)+-1]
  7767  01AB70  0EFF               	movlw	-1
  7768  01AB72  50E3               	movf	plusw1,w,c
  7769  01AB74  6ED9               	movwf	fsr2l,c
  7770  01AB76  6ADA               	clrf	fsr2h,c
  7771  01AB78  0E03               	movlw	3
  7772  01AB7A  26D9               	addwf	fsr2l,f,c
  7773  01AB7C  0060  F033  FFDF   	movff	btemp+11,indf2
  7774  01AB82                     l10572:
  7775                           
  7776                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7777  01AB82  0E03               	movlw	3
  7778  01AB84  6EE6               	movwf	postinc1,c
  7779  01AB86  EC20  F0DD         	call	_get_switch	;wreg free
  7780  01AB8A  5001               	movf	btemp^0,w,c
  7781  01AB8C  B4D8               	btfsc	status,2,c
  7782  01AB8E  D01C               	goto	l1958
  7783                           
  7784                           ;hid.c: 11:   h->wait_enter = 0;
  7785                           ;stkvar	_h @ sp[(0)+-1]
  7786  01AB90  0EFF               	movlw	-1
  7787  01AB92  50E3               	movf	plusw1,w,c
  7788  01AB94  6ED9               	movwf	fsr2l,c
  7789  01AB96  6ADA               	clrf	fsr2h,c
  7790  01AB98  0E04               	movlw	4
  7791  01AB9A  26D9               	addwf	fsr2l,f,c
  7792  01AB9C  0E00               	movlw	0
  7793  01AB9E  6EDF               	movwf	indf2,c
  7794                           
  7795                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7796  01ABA0  0E03               	movlw	3
  7797  01ABA2  6EE6               	movwf	postinc1,c
  7798  01ABA4  EC20  F0DD         	call	_get_switch	;wreg free
  7799  01ABA8  5001               	movf	btemp^0,w,c
  7800  01ABAA  B4D8               	btfsc	status,2,c
  7801  01ABAC  D003               	goto	u9740
  7802  01ABAE  6A0C               	clrf	(btemp+11)^0,c
  7803  01ABB0  2A0C               	incf	(btemp+11)^0,f,c
  7804  01ABB2  D001               	goto	u9758
  7805  01ABB4                     u9740:
  7806  01ABB4  6A0C               	clrf	(btemp+11)^0,c
  7807  01ABB6                     u9758:
  7808                           
  7809                           ;stkvar	_h @ sp[(0)+-1]
  7810  01ABB6  0EFF               	movlw	-1
  7811  01ABB8  50E3               	movf	plusw1,w,c
  7812  01ABBA  6ED9               	movwf	fsr2l,c
  7813  01ABBC  6ADA               	clrf	fsr2h,c
  7814  01ABBE  0E05               	movlw	5
  7815  01ABC0  26D9               	addwf	fsr2l,f,c
  7816  01ABC2  0060  F033  FFDF   	movff	btemp+11,indf2
  7817  01ABC8                     l1958:
  7818                           
  7819                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7820  01ABC8  52E5               	movf	postdec1,f,c
  7821  01ABCA  0012               	return		;funcret
  7822  01ABCC                     __end_of_hid_input:
  7823                           	opt callstack 0
  7824                           
  7825 ;; *************** function _get_switch *****************
  7826 ;; Defined at:
  7827 ;;		line 18 in file "dio.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  i               1  [STACK] const unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1  [STACK] enum E17021
  7834 ;; Registers used:
  7835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/39
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:   15
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;;		_hid_input
  7853 ;; This function uses a reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text16
  7857  01BA40                     __ptext16:
  7858                           	opt callstack 0
  7859  01BA40                     _get_switch:
  7860                           	opt callstack 13
  7861                           
  7862                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7863                           ;stkvar	_i @ sp[(0)+-1]
  7864                           
  7865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7866                           ;incstack = 0
  7867  01BA40  0EFF               	movlw	-1
  7868  01BA42  006F FF8C  F001    	movff	plusw1,btemp
  7869  01BA48  0E03               	movlw	3
  7870  01BA4A  6401               	cpfsgt	btemp^0,c
  7871  01BA4C  D002               	goto	l9924
  7872                           
  7873                           ;dio.c: 21:   return SW_OFF;
  7874  01BA4E  0E00               	movlw	0
  7875  01BA50  D00A               	goto	L4
  7876  01BA52                     l9924:
  7877                           
  7878                           ;dio.c: 23:  return S.button[i].sw;
  7879                           ;stkvar	_i @ sp[(0)+-1]
  7880  01BA52  0EFF               	movlw	-1
  7881  01BA54  50E3               	movf	plusw1,w,c
  7882  01BA56  0D05               	mullw	5
  7883  01BA58  0E54               	movlw	low _S
  7884  01BA5A  24F3               	addwf	243,w,c
  7885  01BA5C  6ED9               	movwf	fsr2l,c
  7886  01BA5E  0E02               	movlw	high _S
  7887  01BA60  20F4               	addwfc	prodh,w,c
  7888  01BA62  6EDA               	movwf	fsr2h,c
  7889  01BA64  50DF               	movf	indf2,w,c
  7890  01BA66                     L4:
  7891  01BA66  6E01               	movwf	btemp^0,c
  7892                           
  7893                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7894  01BA68  52E5               	movf	postdec1,f,c
  7895  01BA6A  0012               	return		;funcret
  7896  01BA6C                     __end_of_get_switch:
  7897                           	opt callstack 0
  7898                           
  7899 ;; *************** function _esr_check *****************
  7900 ;; Defined at:
  7901 ;;		line 196 in file "bsoc.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  fsm             1  [STACK] const unsigned char 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  4  [STACK] float 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:   18
  7922 ;; This function calls:
  7923 ;;		_StartTimer
  7924 ;;		_TimerDone
  7925 ;;		___fldiv
  7926 ;;		___flsub
  7927 ;;		_conv_raw_result
  7928 ;;		_fabsf
  7929 ;;		_set_load_relay_one
  7930 ;;		_set_load_relay_two
  7931 ;;		_update_adc_result
  7932 ;; This function is called by:
  7933 ;;		_main
  7934 ;; This function uses a reentrant model
  7935 ;;
  7936                           
  7937                           	psect	text17
  7938  017140                     __ptext17:
  7939                           	opt callstack 0
  7940  017140                     _esr_check:
  7941                           	opt callstack 12
  7942                           
  7943                           ;bsoc.c: 196: float esr_check(const uint8_t fsm);bsoc.c: 197: {;bsoc.c: 198:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 200:  if (fsm) {
  7944                           ;stkvar	_fsm @ sp[(0)+-1]
  7945                           
  7946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7947                           ;incstack = 0
  7948  017140  0EFF               	movlw	-1
  7949  017142  50E3               	movf	plusw1,w,c
  7950  017144  B4D8               	btfsc	status,2,c
  7951  017146  D146               	goto	l10986
  7952                           
  7953                           ;bsoc.c: 201:   esr_state = 0;
  7954  017148  6A40               	clrf	esr_check@esr_state^0,c
  7955                           
  7956                           ;bsoc.c: 202:   return -10.0;
  7957  01714A  0E00               	movlw	0
  7958  01714C  6E01               	movwf	btemp^0,c
  7959  01714E  0E00               	movlw	0
  7960  017150  6E02               	movwf	(btemp+1)^0,c
  7961  017152  0E20               	movlw	32
  7962  017154  6E03               	movwf	(btemp+2)^0,c
  7963  017156  0EC1               	movlw	193
  7964  017158  D158               	goto	L5
  7965  01715A                     l10918:
  7966                           
  7967                           ;bsoc.c: 207:   StartTimer(TMR_ESR, 10000);
  7968  01715A  0E10               	movlw	16
  7969  01715C  6EE6               	movwf	postinc1,c
  7970  01715E  0E27               	movlw	39
  7971  017160  6EE6               	movwf	postinc1,c
  7972  017162  0E0C               	movlw	12
  7973  017164  6EE6               	movwf	postinc1,c
  7974  017166  EC65  F0DB         	call	_StartTimer	;wreg free
  7975  01716A                     l10920:
  7976                           
  7977                           ;bsoc.c: 208:   esr_state++;
  7978  01716A  2A40               	incf	esr_check@esr_state^0,f,c
  7979                           
  7980                           ;bsoc.c: 209:   break;
  7981  01716C  D147               	goto	l10988
  7982  01716E                     l10922:
  7983                           
  7984                           ;bsoc.c: 214:   set_load_relay_one(0);
  7985  01716E  0E00               	movlw	0
  7986  017170  6EE6               	movwf	postinc1,c
  7987  017172  EC2B  F0E0         	call	_set_load_relay_one	;wreg free
  7988                           
  7989                           ;bsoc.c: 215:   set_load_relay_two(0);
  7990  017176  0E00               	movlw	0
  7991  017178  6EE6               	movwf	postinc1,c
  7992  01717A  EC23  F0E0         	call	_set_load_relay_two	;wreg free
  7993                           
  7994                           ;bsoc.c: 216:   if (TimerDone(TMR_ESR)) {
  7995  01717E  0E0C               	movlw	12
  7996  017180  6EE6               	movwf	postinc1,c
  7997  017182  EC8B  F0DD         	call	_TimerDone	;wreg free
  7998  017186  5001               	movf	btemp^0,w,c
  7999  017188  B4D8               	btfsc	status,2,c
  8000  01718A  D009               	goto	l10928
  8001                           
  8002                           ;bsoc.c: 217:    StartTimer(TMR_ESR, 10000);
  8003  01718C  0E10               	movlw	16
  8004  01718E  6EE6               	movwf	postinc1,c
  8005  017190  0E27               	movlw	39
  8006  017192  6EE6               	movwf	postinc1,c
  8007  017194  0E0C               	movlw	12
  8008  017196  6EE6               	movwf	postinc1,c
  8009  017198  EC65  F0DB         	call	_StartTimer	;wreg free
  8010                           
  8011                           ;bsoc.c: 218:   } else {
  8012  01719C  D006               	goto	l10932
  8013  01719E                     l10928:
  8014                           
  8015                           ;bsoc.c: 219:    return -2.0;
  8016  01719E  0E00               	movlw	0
  8017  0171A0  6E01               	movwf	btemp^0,c
  8018  0171A2  0E00               	movlw	0
  8019  0171A4  6E02               	movwf	(btemp+1)^0,c
  8020  0171A6  0E00               	movlw	0
  8021  0171A8  D066               	goto	L7
  8022  0171AA                     l10932:
  8023                           
  8024                           ;bsoc.c: 224:   update_adc_result();
  8025  0171AA  EC05  F0DC         	call	_update_adc_result	;wreg free
  8026                           
  8027                           ;bsoc.c: 225:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8028  0171AE  0E00               	movlw	0
  8029  0171B0  6EE6               	movwf	postinc1,c
  8030  0171B2  0E04               	movlw	4
  8031  0171B4  6EE6               	movwf	postinc1,c
  8032  0171B6  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8033  0171BA  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8034  0171C0  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8035  0171C6  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8036  0171CC  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8037  0171D2  D7CB               	goto	l10920
  8038  0171D4                     l10938:
  8039                           
  8040                           ;bsoc.c: 229:   set_load_relay_one(1);
  8041  0171D4  0E01               	movlw	1
  8042  0171D6  6EE6               	movwf	postinc1,c
  8043  0171D8  EC2B  F0E0         	call	_set_load_relay_one	;wreg free
  8044                           
  8045                           ;bsoc.c: 230:   if (TimerDone(TMR_ESR)) {
  8046  0171DC  0E0C               	movlw	12
  8047  0171DE  6EE6               	movwf	postinc1,c
  8048  0171E0  EC8B  F0DD         	call	_TimerDone	;wreg free
  8049  0171E4  5001               	movf	btemp^0,w,c
  8050  0171E6  B4D8               	btfsc	status,2,c
  8051  0171E8  D009               	goto	l10944
  8052                           
  8053                           ;bsoc.c: 231:    StartTimer(TMR_ESR, 10000);
  8054  0171EA  0E10               	movlw	16
  8055  0171EC  6EE6               	movwf	postinc1,c
  8056  0171EE  0E27               	movlw	39
  8057  0171F0  6EE6               	movwf	postinc1,c
  8058  0171F2  0E0C               	movlw	12
  8059  0171F4  6EE6               	movwf	postinc1,c
  8060  0171F6  EC65  F0DB         	call	_StartTimer	;wreg free
  8061                           
  8062                           ;bsoc.c: 232:   } else {
  8063  0171FA  D006               	goto	l10948
  8064  0171FC                     l10944:
  8065                           
  8066                           ;bsoc.c: 233:    return -3.0;
  8067  0171FC  0E00               	movlw	0
  8068  0171FE  6E01               	movwf	btemp^0,c
  8069  017200  0E00               	movlw	0
  8070  017202  6E02               	movwf	(btemp+1)^0,c
  8071  017204  0E40               	movlw	64
  8072  017206  D037               	goto	L7
  8073  017208                     l10948:
  8074                           
  8075                           ;bsoc.c: 236:   update_adc_result();
  8076  017208  EC05  F0DC         	call	_update_adc_result	;wreg free
  8077                           
  8078                           ;bsoc.c: 237:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8079  01720C  0E00               	movlw	0
  8080  01720E  6EE6               	movwf	postinc1,c
  8081  017210  0E04               	movlw	4
  8082  017212  6EE6               	movwf	postinc1,c
  8083  017214  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8084  017218  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8085  01721E  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8086  017224  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8087  01722A  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8088                           
  8089                           ;bsoc.c: 238:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8090  017230  0E00               	movlw	0
  8091  017232  6EE6               	movwf	postinc1,c
  8092  017234  0E00               	movlw	0
  8093  017236  6EE6               	movwf	postinc1,c
  8094  017238  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8095  01723C  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8096  017242  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8097  017248  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8098  01724E  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8099  017254  D78A               	goto	l10920
  8100  017256                     l10956:
  8101                           
  8102                           ;bsoc.c: 242:   set_load_relay_two(1);
  8103  017256  0E01               	movlw	1
  8104  017258  6EE6               	movwf	postinc1,c
  8105  01725A  EC23  F0E0         	call	_set_load_relay_two	;wreg free
  8106                           
  8107                           ;bsoc.c: 243:   if (!TimerDone(TMR_ESR))
  8108  01725E  0E0C               	movlw	12
  8109  017260  6EE6               	movwf	postinc1,c
  8110  017262  EC8B  F0DD         	call	_TimerDone	;wreg free
  8111  017266  5001               	movf	btemp^0,w,c
  8112  017268  A4D8               	btfss	status,2,c
  8113  01726A  D008               	goto	l10964
  8114                           
  8115                           ;bsoc.c: 244:    return -4.0;
  8116  01726C  0E00               	movlw	0
  8117  01726E  6E01               	movwf	btemp^0,c
  8118  017270  0E00               	movlw	0
  8119  017272  6E02               	movwf	(btemp+1)^0,c
  8120  017274  0E80               	movlw	128
  8121  017276                     L7:
  8122  017276  6E03               	movwf	(btemp+2)^0,c
  8123  017278  0EC0               	movlw	192
  8124  01727A  D0C7               	goto	L5
  8125  01727C                     l10964:
  8126                           
  8127                           ;bsoc.c: 246:   update_adc_result();
  8128  01727C  EC05  F0DC         	call	_update_adc_result	;wreg free
  8129                           
  8130                           ;bsoc.c: 247:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8131  017280  0E00               	movlw	0
  8132  017282  6EE6               	movwf	postinc1,c
  8133  017284  0E04               	movlw	4
  8134  017286  6EE6               	movwf	postinc1,c
  8135  017288  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8136  01728C  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8137  017292  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8138  017298  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8139  01729E  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8140                           
  8141                           ;bsoc.c: 248:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8142  0172A4  0E00               	movlw	0
  8143  0172A6  6EE6               	movwf	postinc1,c
  8144  0172A8  0E00               	movlw	0
  8145  0172AA  6EE6               	movwf	postinc1,c
  8146  0172AC  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8147  0172B0  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8148  0172B6  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8149  0172BC  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8150  0172C2  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8151                           
  8152                           ;bsoc.c: 250:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8153  0172C8  EE22  F011         	lfsr	2,_C+274	;volatile
  8154  0172CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8155  0172D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8156  0172D8  006F FF7B FFE6     	movff	postinc2,postinc1
  8157  0172DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8158  0172E4  EE22  F00D         	lfsr	2,_C+270	;volatile
  8159  0172E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8160  0172EE  006F FF7B FFE6     	movff	postinc2,postinc1
  8161  0172F4  006F FF7B FFE6     	movff	postinc2,postinc1
  8162  0172FA  006F FF7B FFE6     	movff	postinc2,postinc1
  8163  017300  ECBF  F0DA         	call	___flsub	;wreg free
  8164  017304  0060  F007  FFE6   	movff	btemp,postinc1
  8165  01730A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8166  017310  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8167  017316  0060  F013  FFE6   	movff	btemp+3,postinc1
  8168  01731C  EE22  F01D         	lfsr	2,_C+286	;volatile
  8169  017320  006F FF7B FFE6     	movff	postinc2,postinc1
  8170  017326  006F FF7B FFE6     	movff	postinc2,postinc1
  8171  01732C  006F FF7B FFE6     	movff	postinc2,postinc1
  8172  017332  006F FF7B FFE6     	movff	postinc2,postinc1
  8173  017338  EE22  F019         	lfsr	2,_C+282	;volatile
  8174  01733C  006F FF7B FFE6     	movff	postinc2,postinc1
  8175  017342  006F FF7B FFE6     	movff	postinc2,postinc1
  8176  017348  006F FF7B FFE6     	movff	postinc2,postinc1
  8177  01734E  006F FF7B FFE6     	movff	postinc2,postinc1
  8178  017354  ECBF  F0DA         	call	___flsub	;wreg free
  8179  017358  0060  F007  FFE6   	movff	btemp,postinc1
  8180  01735E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8181  017364  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8182  01736A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8183  017370  ECB4  F0A6         	call	___fldiv	;wreg free
  8184  017374  0060  F007  FFE6   	movff	btemp,postinc1
  8185  01737A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8186  017380  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8187  017386  0060  F013  FFE6   	movff	btemp+3,postinc1
  8188  01738C  ECC6  F0D2         	call	_fabsf	;wreg free
  8189  017390  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8190  017396  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8191  01739C  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8192  0173A2  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8193                           
  8194                           ;bsoc.c: 251:   set_load_relay_one(0);
  8195  0173A8  0E00               	movlw	0
  8196  0173AA  6EE6               	movwf	postinc1,c
  8197  0173AC  EC2B  F0E0         	call	_set_load_relay_one	;wreg free
  8198                           
  8199                           ;bsoc.c: 252:   set_load_relay_two(0);
  8200  0173B0  0E00               	movlw	0
  8201  0173B2  6EE6               	movwf	postinc1,c
  8202  0173B4  EC23  F0E0         	call	_set_load_relay_two	;wreg free
  8203                           
  8204                           ;bsoc.c: 253:   esr_state = 0;
  8205  0173B8  6A40               	clrf	esr_check@esr_state^0,c
  8206                           
  8207                           ;bsoc.c: 254:   return C.esr;
  8208  0173BA  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8209  0173C0  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8210  0173C6  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8211  0173CC  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8212  0173D2  D01C               	goto	l2079
  8213  0173D4                     l10986:
  8214  0173D4  5040               	movf	esr_check@esr_state^0,w,c
  8215  0173D6  6E0B               	movwf	(btemp+10)^0,c
  8216  0173D8  6A0C               	clrf	(btemp+11)^0,c
  8217                           
  8218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8219                           ; Switch size 1, requested type "simple"
  8220                           ; Number of cases is 1, Range of values is 0 to 0
  8221                           ; switch strategies available:
  8222                           ; Name         Instructions Cycles
  8223                           ; simple_byte            4     3 (average)
  8224                           ;	Chosen strategy is simple_byte
  8225  0173DA  500C               	movf	(btemp+11)^0,w,c
  8226  0173DC  0A00               	xorlw	0	; case 0
  8227  0173DE  A4D8               	btfss	status,2,c
  8228  0173E0  D00D               	goto	l10988
  8229                           
  8230                           ; Switch size 1, requested type "simple"
  8231                           ; Number of cases is 4, Range of values is 0 to 3
  8232                           ; switch strategies available:
  8233                           ; Name         Instructions Cycles
  8234                           ; simple_byte           13     7 (average)
  8235                           ;	Chosen strategy is simple_byte
  8236  0173E2  500B               	movf	(btemp+10)^0,w,c
  8237  0173E4  0A00               	xorlw	0	; case 0
  8238  0173E6  B4D8               	btfsc	status,2,c
  8239  0173E8  D6B8               	goto	l10918
  8240  0173EA  0A01               	xorlw	1	; case 1
  8241  0173EC  B4D8               	btfsc	status,2,c
  8242  0173EE  D6BF               	goto	l10922
  8243  0173F0  0A03               	xorlw	3	; case 2
  8244  0173F2  B4D8               	btfsc	status,2,c
  8245  0173F4  D6EF               	goto	l10938
  8246  0173F6  0A01               	xorlw	1	; case 3
  8247  0173F8  B4D8               	btfsc	status,2,c
  8248  0173FA  D72D               	goto	l10956
  8249  0173FC                     l10988:
  8250                           
  8251                           ;bsoc.c: 259:  return -1.0;
  8252  0173FC  0E00               	movlw	0
  8253  0173FE  6E01               	movwf	btemp^0,c
  8254  017400  0E00               	movlw	0
  8255  017402  6E02               	movwf	(btemp+1)^0,c
  8256  017404  0E80               	movlw	128
  8257  017406  6E03               	movwf	(btemp+2)^0,c
  8258  017408  0EBF               	movlw	191
  8259  01740A                     L5:
  8260  01740A  6E04               	movwf	(btemp+3)^0,c
  8261  01740C                     l2079:
  8262                           
  8263                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8264  01740C  52E5               	movf	postdec1,f,c
  8265  01740E  0012               	return		;funcret
  8266  017410                     __end_of_esr_check:
  8267                           	opt callstack 0
  8268                           
  8269 ;; *************** function _update_adc_result *****************
  8270 ;; Defined at:
  8271 ;;		line 74 in file "daq.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;		None
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1  [STACK] _Bool 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8289 ;;Total ram usage:        0 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:   17
  8292 ;; This function calls:
  8293 ;;		_StartTimer
  8294 ;;		_TimerDone
  8295 ;;		_check_adc_scan
  8296 ;;		_clear_adc_scan
  8297 ;;		_start_adc_scan
  8298 ;; This function is called by:
  8299 ;;		_esr_check
  8300 ;; This function uses a reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text18
  8304  01B80A                     __ptext18:
  8305                           	opt callstack 0
  8306  01B80A                     _update_adc_result:
  8307                           	opt callstack 12
  8308                           
  8309                           ;daq.c: 76:  if (R.done) {
  8310                           
  8311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8312                           ;incstack = 0
  8313  01B80A  0101               	movlb	1	; () banked
  8314  01B80C  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8315  01B80E  B4D8               	btfsc	status,2,c
  8316  01B810  0012               	return	
  8317                           
  8318                           ; BSR set to: 1
  8319                           ;daq.c: 77:   clear_adc_scan();
  8320  01B812  EC9F  F0E0         	call	_clear_adc_scan	;wreg free
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;daq.c: 78:   start_adc_scan();
  8324  01B816  ECFE  F0D7         	call	_start_adc_scan	;wreg free
  8325                           
  8326                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8327  01B81A  0EC8               	movlw	200
  8328  01B81C  6EE6               	movwf	postinc1,c
  8329  01B81E  0E00               	movlw	0
  8330  01B820  6EE6               	movwf	postinc1,c
  8331  01B822  0E01               	movlw	1
  8332  01B824  6EE6               	movwf	postinc1,c
  8333  01B826  EC65  F0DB         	call	_StartTimer	;wreg free
  8334  01B82A                     l10504:
  8335  01B82A  0E01               	movlw	1
  8336  01B82C  6EE6               	movwf	postinc1,c
  8337  01B82E  EC8B  F0DD         	call	_TimerDone	;wreg free
  8338  01B832  5001               	movf	btemp^0,w,c
  8339  01B834  A4D8               	btfss	status,2,c
  8340  01B836  0012               	return	
  8341  01B838  EC8F  F0E0         	call	_check_adc_scan	;wreg free
  8342  01B83C  5001               	movf	btemp^0,w,c
  8343  01B83E  A4D8               	btfss	status,2,c
  8344  01B840  0012               	return	
  8345  01B842  D7F3               	goto	l10504
  8346  01B844                     __end_of_update_adc_result:
  8347                           	opt callstack 0
  8348                           
  8349 ;; *************** function _start_adc_scan *****************
  8350 ;; Defined at:
  8351 ;;		line 35 in file "daq.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;		None
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1  [STACK] _Bool 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8369 ;;Total ram usage:        0 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:   16
  8372 ;; This function calls:
  8373 ;;		_ADCC_DischargeSampleCapacitor
  8374 ;;		_ADCC_SetADIInterruptHandler
  8375 ;;		_ADCC_SetADTIInterruptHandler
  8376 ;;		_ADCC_StartConversion
  8377 ;; This function is called by:
  8378 ;;		_main
  8379 ;;		_update_adc_result
  8380 ;; This function uses a reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text19
  8384  01AFFC                     __ptext19:
  8385                           	opt callstack 0
  8386  01AFFC                     _start_adc_scan:
  8387                           	opt callstack 14
  8388                           
  8389                           ;daq.c: 37:  if (R.done)
  8390                           
  8391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8392                           ;incstack = 0
  8393  01AFFC  0101               	movlb	1	; () banked
  8394  01AFFE  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8395  01B000  A4D8               	btfss	status,2,c
  8396  01B002  0012               	return	
  8397                           
  8398                           ; BSR set to: 1
  8399                           ;daq.c: 40:  R.scan_index = 0;
  8400  01B004  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8404  01B006  013A               	movlb	58	; () banked
  8405  01B008  5140               	movf	64,w,b	;volatile
  8406  01B00A  006E F940  F001    	movff	14928,btemp	;volatile
  8407  01B010  6A02               	clrf	(btemp+1)^0,c
  8408  01B012  0060  F004  F002   	movff	btemp,btemp+1
  8409  01B018  6A01               	clrf	btemp^0,c
  8410  01B01A  2601               	addwf	btemp^0,f,c
  8411  01B01C  0E00               	movlw	0
  8412  01B01E  2202               	addwfc	(btemp+1)^0,f,c
  8413  01B020  0E77               	movlw	119
  8414  01B022  1401               	andwf	btemp^0,w,c
  8415  01B024  0101               	movlb	1	; () banked
  8416  01B026  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8417  01B028  0E3C               	movlw	60
  8418  01B02A  1402               	andwf	(btemp+1)^0,w,c
  8419  01B02C  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8420                           
  8421                           ; BSR set to: 1
  8422                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8423  01B02E  0E66               	movlw	low _adc_int_handler
  8424  01B030  6EE6               	movwf	postinc1,c
  8425  01B032  0EC1               	movlw	high _adc_int_handler
  8426  01B034  6EE6               	movwf	postinc1,c
  8427  01B036  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8428  01B038  6EE6               	movwf	postinc1,c
  8429  01B03A  EC53  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8430                           
  8431                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8432  01B03E  0E5C               	movlw	low _adc_int_t_handler
  8433  01B040  6EE6               	movwf	postinc1,c
  8434  01B042  0EAD               	movlw	high _adc_int_t_handler
  8435  01B044  6EE6               	movwf	postinc1,c
  8436  01B046  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8437  01B048  6EE6               	movwf	postinc1,c
  8438  01B04A  EC3F  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8439                           
  8440                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8441  01B04E  EC8B  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8442                           
  8443                           ; BSR set to: 62
  8444                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8445  01B052  0101               	movlb	1	; () banked
  8446  01B054  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8447  01B056  0B0F               	andlw	15
  8448  01B058  6EE6               	movwf	postinc1,c
  8449  01B05A  EC1A  F0E0         	call	_ADCC_StartConversion	;wreg free
  8450                           
  8451                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8452  01B05E  0012               	return		;funcret
  8453  01B060                     __end_of_start_adc_scan:
  8454                           	opt callstack 0
  8455                           
  8456 ;; *************** function _ADCC_StartConversion *****************
  8457 ;; Defined at:
  8458 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  channel         1  [STACK] enum E16136
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1  [STACK] void 
  8465 ;; Registers used:
  8466 ;;		fsr1l, fsr1h
  8467 ;; Tracked objects:
  8468 ;;		On entry : 3F/1
  8469 ;;		On exit  : 3F/3E
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:   15
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_start_adc_scan
  8483 ;;		_adc_int_t_handler
  8484 ;; This function uses a reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text20
  8488  01C034                     __ptext20:
  8489                           	opt callstack 0
  8490  01C034                     _ADCC_StartConversion:
  8491                           	opt callstack 0
  8492                           
  8493                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8494                           ;stkvar	_channel @ sp[(0)+-1]
  8495                           
  8496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8497                           ;incstack = 0
  8498 ;; hardware stack exceeded
  8499  01C034  0EFF               	movlw	-1
  8500  01C036  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8501                           
  8502                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8503  01C03C  013E               	movlb	62	; () banked
  8504  01C03E  8FF8               	bsf	248,7,b	;volatile
  8505                           
  8506                           ; BSR set to: 62
  8507                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8508  01C040  81F8               	bsf	248,0,b	;volatile
  8509                           
  8510                           ; BSR set to: 62
  8511                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8512  01C042  52E5               	movf	postdec1,f,c
  8513  01C044  0012               	return		;funcret
  8514  01C046                     __end_of_ADCC_StartConversion:
  8515                           	opt callstack 0
  8516                           
  8517 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8518 ;; Defined at:
  8519 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1  [STACK] void 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/1
  8530 ;;		On exit  : 3F/3E
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;Total ram usage:        0 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:   15
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_start_adc_scan
  8544 ;;		_adc_int_t_handler
  8545 ;; This function uses a reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text21
  8549  01C116                     __ptext21:
  8550                           	opt callstack 0
  8551  01C116                     _ADCC_DischargeSampleCapacitor:
  8552                           	opt callstack 0
  8553                           
  8554                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8555                           
  8556                           ; BSR set to: 62
  8557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8558                           ;incstack = 0
  8559 ;; hardware stack exceeded
  8560  01C116  0E3B               	movlw	59
  8561  01C118  013E               	movlb	62	; () banked
  8562  01C11A  6FF1               	movwf	241,b	;volatile
  8563                           
  8564                           ; BSR set to: 62
  8565                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8566  01C11C  0012               	return		;funcret
  8567  01C11E                     __end_of_ADCC_DischargeSampleCapacitor:
  8568                           	opt callstack 0
  8569                           
  8570 ;; *************** function _clear_adc_scan *****************
  8571 ;; Defined at:
  8572 ;;		line 66 in file "daq.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1  [STACK] void 
  8579 ;; Registers used:
  8580 ;;		None
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 3F/1
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8590 ;;Total ram usage:        0 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:   15
  8593 ;; This function calls:
  8594 ;;		Nothing
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;;		_update_adc_result
  8598 ;; This function uses a reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text22
  8602  01C13E                     __ptext22:
  8603                           	opt callstack 0
  8604  01C13E                     _clear_adc_scan:
  8605                           	opt callstack 13
  8606                           
  8607                           ;daq.c: 68:  R.done = 0;
  8608                           
  8609                           ; BSR set to: 62
  8610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8611                           ;incstack = 0
  8612  01C13E  0101               	movlb	1	; () banked
  8613  01C140  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8614                           
  8615                           ; BSR set to: 1
  8616                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8617  01C142  0012               	return		;funcret
  8618  01C144                     __end_of_clear_adc_scan:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function _check_adc_scan *****************
  8622 ;; Defined at:
  8623 ;;		line 58 in file "daq.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1  [STACK] _Bool 
  8630 ;; Registers used:
  8631 ;;		btemp
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/1
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;Total ram usage:        0 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:   15
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_main
  8648 ;;		_update_adc_result
  8649 ;; This function uses a reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text23
  8653  01C11E                     __ptext23:
  8654                           	opt callstack 0
  8655  01C11E                     _check_adc_scan:
  8656                           	opt callstack 13
  8657                           
  8658                           ;daq.c: 60:  return R.done;
  8659                           
  8660                           ; BSR set to: 1
  8661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8662                           ;incstack = 0
  8663  01C11E  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8664                           
  8665                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8666  01C124  0012               	return		;funcret
  8667  01C126                     __end_of_check_adc_scan:
  8668                           	opt callstack 0
  8669                           
  8670 ;; *************** function _set_load_relay_two *****************
  8671 ;; Defined at:
  8672 ;;		line 130 in file "mbmc.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  mode            1  [STACK] const _Bool 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1  [STACK] void 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr1l, fsr1h
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:   15
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_main
  8697 ;;		_esr_check
  8698 ;; This function uses a reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text24
  8702  01C046                     __ptext24:
  8703                           	opt callstack 0
  8704  01C046                     _set_load_relay_two:
  8705                           	opt callstack 15
  8706                           
  8707                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  8708                           ;stkvar	_mode @ sp[(0)+-1]
  8709                           
  8710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8711                           ;incstack = 0
  8712  01C046  0EFF               	movlw	-1
  8713  01C048  B0E3               	btfsc	plusw1,0,c
  8714  01C04A  D002               	bra	u9495
  8715  01C04C  9ABD               	bcf	189,5,c	;volatile
  8716  01C04E  D001               	bra	u9496
  8717  01C050                     u9495:
  8718  01C050  8ABD               	bsf	189,5,c	;volatile
  8719  01C052                     u9496:
  8720                           
  8721                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8722  01C052  52E5               	movf	postdec1,f,c
  8723  01C054  0012               	return		;funcret
  8724  01C056                     __end_of_set_load_relay_two:
  8725                           	opt callstack 0
  8726                           
  8727 ;; *************** function _set_load_relay_one *****************
  8728 ;; Defined at:
  8729 ;;		line 125 in file "mbmc.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  mode            1  [STACK] const _Bool 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1  [STACK] void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr1l, fsr1h
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:   15
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_main
  8754 ;;		_esr_check
  8755 ;; This function uses a reentrant model
  8756 ;;
  8757                           
  8758                           	psect	text25
  8759  01C056                     __ptext25:
  8760                           	opt callstack 0
  8761  01C056                     _set_load_relay_one:
  8762                           	opt callstack 15
  8763                           
  8764                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  8765                           ;stkvar	_mode @ sp[(0)+-1]
  8766                           
  8767                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8768                           ;incstack = 0
  8769  01C056  0EFF               	movlw	-1
  8770  01C058  B0E3               	btfsc	plusw1,0,c
  8771  01C05A  D002               	bra	u9485
  8772  01C05C  98BD               	bcf	189,4,c	;volatile
  8773  01C05E  D001               	bra	u9486
  8774  01C060                     u9485:
  8775  01C060  88BD               	bsf	189,4,c	;volatile
  8776  01C062                     u9486:
  8777                           
  8778                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8779  01C062  52E5               	movf	postdec1,f,c
  8780  01C064  0012               	return		;funcret
  8781  01C066                     __end_of_set_load_relay_one:
  8782                           	opt callstack 0
  8783                           
  8784 ;; *************** function _eaDogM_WriteCommand *****************
  8785 ;; Defined at:
  8786 ;;		line 385 in file "eadog.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  cmd             1  [STACK] const unsigned char 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1  [STACK] void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8795 ;; Tracked objects:
  8796 ;;		On entry : 3F/3D
  8797 ;;		On exit  : 3F/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:   26
  8807 ;; This function calls:
  8808 ;;		_send_lcd_cmd_dma
  8809 ;; This function is called by:
  8810 ;;		_main
  8811 ;; This function uses a reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text26
  8815  01C094                     __ptext26:
  8816                           	opt callstack 0
  8817  01C094                     _eaDogM_WriteCommand:
  8818                           	opt callstack 4
  8819                           
  8820                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  8821                           ;stkvar	_cmd @ sp[(0)+-1]
  8822                           
  8823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8824                           ;incstack = 0
  8825  01C094  0EFF               	movlw	-1
  8826  01C096  50E3               	movf	plusw1,w,c
  8827  01C098  6EE6               	movwf	postinc1,c
  8828  01C09A  EC73  F0DF         	call	_send_lcd_cmd_dma	;wreg free
  8829                           
  8830                           ; BSR set to: 0
  8831                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8832  01C09E  52E5               	movf	postdec1,f,c
  8833  01C0A0  0012               	return		;funcret
  8834  01C0A2                     __end_of_eaDogM_WriteCommand:
  8835                           	opt callstack 0
  8836                           
  8837 ;; *************** function _convert_adc_data *****************
  8838 ;; Defined at:
  8839 ;;		line 51 in file "mbmc.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  i               1  [STACK] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1  [STACK] void 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/1
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   18
  8860 ;; This function calls:
  8861 ;;		_conv_raw_result
  8862 ;;		_lp_filter
  8863 ;; This function is called by:
  8864 ;;		_main
  8865 ;; This function uses a reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text27
  8869  01A4D4                     __ptext27:
  8870                           	opt callstack 0
  8871  01A4D4                     _convert_adc_data:
  8872                           	opt callstack 0
  8873                           
  8874                           ; BSR set to: 0
  8875                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8876  01A4D4  52E6               	movf	postinc1,f,c
  8877                           
  8878                           ;mbmc.c: 53:  uint8_t i = 0;
  8879                           ;stkvar	_i @ sp[(-1)+0]
  8880                           
  8881                           ;incstack = 0
  8882  01A4D6  0EFF               	movlw	-1
  8883  01A4D8  6AE3               	clrf	plusw1,c
  8884  01A4DA                     l10998:
  8885                           
  8886                           ;mbmc.c: 56:   if (V.calib) {
  8887  01A4DA  0101               	movlb	1	; () banked
  8888  01A4DC  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8889  01A4DE  B4D8               	btfsc	status,2,c
  8890  01A4E0  D01B               	goto	l11002
  8891                           
  8892                           ; BSR set to: 1
  8893                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8894  01A4E2  0E01               	movlw	1
  8895  01A4E4  6EE6               	movwf	postinc1,c
  8896                           
  8897                           ;stkvar	_i @ sp[(-2)+0]
  8898  01A4E6  0EFE               	movlw	-2
  8899  01A4E8  50E3               	movf	plusw1,w,c
  8900  01A4EA  6EE6               	movwf	postinc1,c
  8901  01A4EC  0E01               	movlw	1
  8902  01A4EE  6EE6               	movwf	postinc1,c
  8903                           
  8904                           ;stkvar	_i @ sp[(-4)+0]
  8905  01A4F0  0EFC               	movlw	-4
  8906  01A4F2  50E3               	movf	plusw1,w,c
  8907  01A4F4  6EE6               	movwf	postinc1,c
  8908  01A4F6  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8909  01A4FA  0060  F007  FFE6   	movff	btemp,postinc1
  8910  01A500  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8911  01A506  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8912  01A50C  0060  F013  FFE6   	movff	btemp+3,postinc1
  8913  01A512  EC3F  F0C3         	call	_lp_filter	;wreg free
  8914  01A516  D01A               	goto	L8
  8915  01A518                     l11002:
  8916                           
  8917                           ; BSR set to: 1
  8918                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8919  01A518  0E00               	movlw	0
  8920  01A51A  6EE6               	movwf	postinc1,c
  8921                           
  8922                           ;stkvar	_i @ sp[(-2)+0]
  8923  01A51C  0EFE               	movlw	-2
  8924  01A51E  50E3               	movf	plusw1,w,c
  8925  01A520  6EE6               	movwf	postinc1,c
  8926  01A522  0E00               	movlw	0
  8927  01A524  6EE6               	movwf	postinc1,c
  8928                           
  8929                           ;stkvar	_i @ sp[(-4)+0]
  8930  01A526  0EFC               	movlw	-4
  8931  01A528  50E3               	movf	plusw1,w,c
  8932  01A52A  6EE6               	movwf	postinc1,c
  8933  01A52C  EC71  F0A9         	call	_conv_raw_result	;wreg free
  8934  01A530  0060  F007  FFE6   	movff	btemp,postinc1
  8935  01A536  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8936  01A53C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8937  01A542  0060  F013  FFE6   	movff	btemp+3,postinc1
  8938  01A548  EC3F  F0C3         	call	_lp_filter	;wreg free
  8939  01A54C                     L8:
  8940                           
  8941                           ;stkvar	_i @ sp[(-1)+0]
  8942  01A54C  0EFF               	movlw	-1
  8943  01A54E  50E3               	movf	plusw1,w,c
  8944  01A550  0D04               	mullw	4
  8945  01A552  0EFF               	movlw	low _C
  8946  01A554  24F3               	addwf	243,w,c
  8947  01A556  6ED9               	movwf	fsr2l,c
  8948  01A558  0E06               	movlw	high _C
  8949  01A55A  20F4               	addwfc	prodh,w,c
  8950  01A55C  6EDA               	movwf	fsr2h,c
  8951  01A55E  0060  F007  FFDE   	movff	btemp,postinc2
  8952  01A564  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8953  01A56A  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8954  01A570  0060  F013  FFDE   	movff	btemp+3,postinc2
  8955                           
  8956                           ;mbmc.c: 61:  } while (++i < 16);
  8957                           ;stkvar	_i @ sp[(-1)+0]
  8958  01A576  0EFF               	movlw	-1
  8959  01A578  2AE3               	incf	plusw1,f,c
  8960  01A57A  0EFF               	movlw	-1
  8961  01A57C  006F FF8C  F001    	movff	plusw1,btemp
  8962  01A582  0E0F               	movlw	15
  8963  01A584  6401               	cpfsgt	btemp^0,c
  8964  01A586  D7A9               	goto	l10998
  8965                           
  8966                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8967  01A588  52E5               	movf	postdec1,f,c
  8968  01A58A  0012               	return		;funcret
  8969  01A58C                     __end_of_convert_adc_data:
  8970                           	opt callstack 0
  8971                           
  8972 ;; *************** function _clear_hid_pflags *****************
  8973 ;; Defined at:
  8974 ;;		line 51 in file "hid.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  h               1  [STACK] PTR struct H_data
  8977 ;;		 -> H(7), 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1  [STACK] void 
  8982 ;; Registers used:
  8983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 3F/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8993 ;;Total ram usage:        0 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:   15
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_main
  9000 ;; This function uses a reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text28
  9004  01BD6C                     __ptext28:
  9005                           	opt callstack 0
  9006  01BD6C                     _clear_hid_pflags:
  9007                           	opt callstack 15
  9008                           
  9009                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9010                           ;stkvar	_h @ sp[(0)+-1]
  9011                           
  9012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9013                           ;incstack = 0
  9014  01BD6C  0EFF               	movlw	-1
  9015  01BD6E  50E3               	movf	plusw1,w,c
  9016  01BD70  6ED9               	movwf	fsr2l,c
  9017  01BD72  6ADA               	clrf	fsr2h,c
  9018  01BD74  0E03               	movlw	3
  9019  01BD76  26D9               	addwf	fsr2l,f,c
  9020  01BD78  0E00               	movlw	0
  9021  01BD7A  6EDF               	movwf	indf2,c
  9022                           
  9023                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9024                           ;stkvar	_h @ sp[(0)+-1]
  9025  01BD7C  0EFF               	movlw	-1
  9026  01BD7E  50E3               	movf	plusw1,w,c
  9027  01BD80  6ED9               	movwf	fsr2l,c
  9028  01BD82  6ADA               	clrf	fsr2h,c
  9029  01BD84  0E05               	movlw	5
  9030  01BD86  26D9               	addwf	fsr2l,f,c
  9031  01BD88  0E00               	movlw	0
  9032  01BD8A  6EDF               	movwf	indf2,c
  9033                           
  9034                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9035  01BD8C  52E5               	movf	postdec1,f,c
  9036  01BD8E  0012               	return		;funcret
  9037  01BD90                     __end_of_clear_hid_pflags:
  9038                           	opt callstack 0
  9039                           
  9040 ;; *************** function _check_help *****************
  9041 ;; Defined at:
  9042 ;;		line 40 in file "mconfig.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  flipper         1  [STACK] const _Bool 
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  estatus         1    0        _Bool 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  1  [STACK] _Bool 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9051 ;; Tracked objects:
  9052 ;;		On entry : 3F/1
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;Total ram usage:        0 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:   28
  9063 ;; This function calls:
  9064 ;;		_StartTimer
  9065 ;;		_TimerDone
  9066 ;;		_display_help
  9067 ;;		_display_info
  9068 ;;		_get_vterm_ptr
  9069 ;;		_help_button
  9070 ;;		_mode_lamp_bright
  9071 ;;		_mode_lamp_dim
  9072 ;;		_set_display_info
  9073 ;;		_set_temp_display_help
  9074 ;;		_set_vterm
  9075 ;;		_sprintf
  9076 ;;		_update_lcd
  9077 ;;		_vterm_dump
  9078 ;; This function is called by:
  9079 ;;		_main
  9080 ;; This function uses a reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text29
  9084  018268                     __ptext29:
  9085                           	opt callstack 0
  9086  018268                     _check_help:
  9087                           	opt callstack 2
  9088                           
  9089                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9090                           
  9091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9092                           ;incstack = 0
  9093  018268  EC22  F0DC         	call	_help_button	;wreg free
  9094  01826C  5001               	movf	btemp^0,w,c
  9095  01826E  B4D8               	btfsc	status,2,c
  9096  018270  D0D0               	goto	l12994
  9097  018272  EC93  F0E0         	call	_display_info	;wreg free
  9098  018276  0401               	decf	btemp^0,w,c
  9099  018278  B4D8               	btfsc	status,2,c
  9100  01827A  D0CB               	goto	l12994
  9101                           
  9102                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9103  01827C  0EDC               	movlw	220
  9104  01827E  6EE6               	movwf	postinc1,c
  9105  018280  0E05               	movlw	5
  9106  018282  6EE6               	movwf	postinc1,c
  9107  018284  0E0B               	movlw	11
  9108  018286  6EE6               	movwf	postinc1,c
  9109  018288  EC65  F0DB         	call	_StartTimer	;wreg free
  9110                           
  9111                           ;mconfig.c: 48:   if (V.debug)
  9112  01828C  0101               	movlb	1	; () banked
  9113  01828E  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9114                           
  9115                           ; BSR set to: 1
  9116                           ;mconfig.c: 49:    vterm_dump();
  9117  018290  EC39  F0CB         	call	_vterm_dump	;wreg free
  9118                           
  9119                           ;mconfig.c: 51:   set_vterm(1);
  9120  018294  0E01               	movlw	1
  9121  018296  6EE6               	movwf	postinc1,c
  9122  018298  EC82  F0DF         	call	_set_vterm	;wreg free
  9123                           
  9124                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9125  01829C  EC93  F0E0         	call	_display_info	;wreg free
  9126  0182A0  5001               	movf	btemp^0,w,c
  9127  0182A2  6EE6               	movwf	postinc1,c
  9128  0182A4  EC33  F0E0         	call	_set_temp_display_help	;wreg free
  9129                           
  9130                           ; BSR set to: 1
  9131                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9132  0182A8  0E01               	movlw	1
  9133  0182AA  6EE6               	movwf	postinc1,c
  9134  0182AC  EC91  F0DF         	call	_set_display_info	;wreg free
  9135                           
  9136                           ;mconfig.c: 54:   if (flipper) {
  9137                           ;stkvar	_flipper @ sp[(0)+-1]
  9138  0182B0  0EFF               	movlw	-1
  9139  0182B2  50E3               	movf	plusw1,w,c
  9140  0182B4  B4D8               	btfsc	status,2,c
  9141  0182B6  D019               	goto	l12980
  9142                           
  9143                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9144  0182B8  0EB3               	movlw	low STR_45
  9145  0182BA  6EE6               	movwf	postinc1,c
  9146  0182BC  0EFF               	movlw	high STR_45
  9147  0182BE  6EE6               	movwf	postinc1,c
  9148  0182C0  0E5D               	movlw	low STR_47
  9149  0182C2  6EE6               	movwf	postinc1,c
  9150  0182C4  0EFF               	movlw	high STR_47
  9151  0182C6  6EE6               	movwf	postinc1,c
  9152  0182C8  0E01               	movlw	1
  9153  0182CA  6EE6               	movwf	postinc1,c
  9154  0182CC  0E00               	movlw	0
  9155  0182CE  6EE6               	movwf	postinc1,c
  9156  0182D0  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9157  0182D4  0060  F007  FFE6   	movff	btemp,postinc1
  9158  0182DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9159  0182E0  0E06               	movlw	6
  9160  0182E2  6EE6               	movwf	postinc1,c
  9161  0182E4  EC00  F0CE         	call	_sprintf	;wreg free
  9162                           
  9163                           ;mconfig.c: 56:   } else {
  9164  0182E8  D018               	goto	l1671
  9165  0182EA                     l12980:
  9166                           
  9167                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9168  0182EA  0EC9               	movlw	low STR_46
  9169  0182EC  6EE6               	movwf	postinc1,c
  9170  0182EE  0EFF               	movlw	high STR_46
  9171  0182F0  6EE6               	movwf	postinc1,c
  9172  0182F2  0E5D               	movlw	low STR_47
  9173  0182F4  6EE6               	movwf	postinc1,c
  9174  0182F6  0EFF               	movlw	high STR_47
  9175  0182F8  6EE6               	movwf	postinc1,c
  9176  0182FA  0E01               	movlw	1
  9177  0182FC  6EE6               	movwf	postinc1,c
  9178  0182FE  0E00               	movlw	0
  9179  018300  6EE6               	movwf	postinc1,c
  9180  018302  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9181  018306  0060  F007  FFE6   	movff	btemp,postinc1
  9182  01830C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9183  018312  0E06               	movlw	6
  9184  018314  6EE6               	movwf	postinc1,c
  9185  018316  EC00  F0CE         	call	_sprintf	;wreg free
  9186  01831A                     l1671:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9190  01831A  0101               	movlb	1	; () banked
  9191  01831C  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9192  01831E  32E8               	rrcf	wreg,f,c
  9193  018320  32E8               	rrcf	wreg,f,c
  9194  018322  0B03               	andlw	3
  9195  018324  0D24               	mullw	36
  9196  018326  0E12               	movlw	18
  9197  018328  26F3               	addwf	243,f,c
  9198  01832A  0E00               	movlw	0
  9199  01832C  22F4               	addwfc	244,f,c
  9200  01832E  0EBB               	movlw	low _T
  9201  018330  6E0B               	movwf	(btemp+10)^0,c
  9202  018332  0EFA               	movlw	high _T
  9203  018334  6E0C               	movwf	(btemp+11)^0,c
  9204  018336  50F3               	movf	243,w,c
  9205  018338  260B               	addwf	(btemp+10)^0,f,c
  9206  01833A  50F4               	movf	244,w,c
  9207  01833C  220C               	addwfc	(btemp+11)^0,f,c
  9208  01833E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9209  018344  0060  F033  FFE6   	movff	btemp+11,postinc1
  9210  01834A  0EBF               	movlw	low STR_49
  9211  01834C  6EE6               	movwf	postinc1,c
  9212  01834E  0EFF               	movlw	high STR_49
  9213  018350  6EE6               	movwf	postinc1,c
  9214  018352  0E01               	movlw	1
  9215  018354  6EE6               	movwf	postinc1,c
  9216  018356  0E01               	movlw	1
  9217  018358  6EE6               	movwf	postinc1,c
  9218  01835A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9219  01835E  0060  F007  FFE6   	movff	btemp,postinc1
  9220  018364  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9221  01836A  0E06               	movlw	6
  9222  01836C  6EE6               	movwf	postinc1,c
  9223  01836E  EC00  F0CE         	call	_sprintf	;wreg free
  9224                           
  9225                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9226  018372  0101               	movlb	1	; () banked
  9227  018374  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9228  018376  32E8               	rrcf	wreg,f,c
  9229  018378  32E8               	rrcf	wreg,f,c
  9230  01837A  0B03               	andlw	3
  9231  01837C  0D24               	mullw	36
  9232  01837E  0EBB               	movlw	low _T
  9233  018380  6E0B               	movwf	(btemp+10)^0,c
  9234  018382  0EFA               	movlw	high _T
  9235  018384  6E0C               	movwf	(btemp+11)^0,c
  9236  018386  50F3               	movf	243,w,c
  9237  018388  260B               	addwf	(btemp+10)^0,f,c
  9238  01838A  50F4               	movf	244,w,c
  9239  01838C  220C               	addwfc	(btemp+11)^0,f,c
  9240  01838E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9241  018394  0060  F033  FFE6   	movff	btemp+11,postinc1
  9242  01839A  0EBF               	movlw	low STR_49
  9243  01839C  6EE6               	movwf	postinc1,c
  9244  01839E  0EFF               	movlw	high STR_49
  9245  0183A0  6EE6               	movwf	postinc1,c
  9246  0183A2  0E01               	movlw	1
  9247  0183A4  6EE6               	movwf	postinc1,c
  9248  0183A6  0E02               	movlw	2
  9249  0183A8  6EE6               	movwf	postinc1,c
  9250  0183AA  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9251  0183AE  0060  F007  FFE6   	movff	btemp,postinc1
  9252  0183B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9253  0183BA  0E06               	movlw	6
  9254  0183BC  6EE6               	movwf	postinc1,c
  9255  0183BE  EC00  F0CE         	call	_sprintf	;wreg free
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;mconfig.c: 61:   V.help_id++;
  9259  0183C2  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9260  0183C6  38DF               	swapf	223,w,c
  9261  0183C8  6E0C               	movwf	(btemp+11)^0,c
  9262  0183CA  320C               	rrcf	(btemp+11)^0,f,c
  9263  0183CC  300C               	rrcf	(btemp+11)^0,w,c
  9264  0183CE  0B03               	andlw	3
  9265  0183D0  6E0C               	movwf	(btemp+11)^0,c
  9266  0183D2  2A0C               	incf	(btemp+11)^0,f,c
  9267  0183D4  3A0C               	swapf	(btemp+11)^0,f,c
  9268  0183D6  360C               	rlcf	(btemp+11)^0,f,c
  9269  0183D8  360C               	rlcf	(btemp+11)^0,f,c
  9270  0183DA  50DF               	movf	223,w,c
  9271  0183DC  180C               	xorwf	(btemp+11)^0,w,c
  9272  0183DE  0B3F               	andlw	-193
  9273  0183E0  180C               	xorwf	(btemp+11)^0,w,c
  9274  0183E2  6EDF               	movwf	223,c
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9278  0183E4  0EB8               	movlw	184
  9279  0183E6  6EE6               	movwf	postinc1,c
  9280  0183E8  0E0B               	movlw	11
  9281  0183EA  6EE6               	movwf	postinc1,c
  9282  0183EC  0E09               	movlw	9
  9283  0183EE  6EE6               	movwf	postinc1,c
  9284  0183F0  EC65  F0DB         	call	_StartTimer	;wreg free
  9285                           
  9286                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9287  0183F4  0EB8               	movlw	184
  9288  0183F6  6EE6               	movwf	postinc1,c
  9289  0183F8  0E0B               	movlw	11
  9290  0183FA  6EE6               	movwf	postinc1,c
  9291  0183FC  0E07               	movlw	7
  9292  0183FE  6EE6               	movwf	postinc1,c
  9293  018400  EC65  F0DB         	call	_StartTimer	;wreg free
  9294                           
  9295                           ;mconfig.c: 64:   mode_lamp_bright();
  9296  018404  EC51  F0E0         	call	_mode_lamp_bright	;wreg free
  9297                           
  9298                           ;mconfig.c: 65:   update_lcd(1);
  9299  018408  0E01               	movlw	1
  9300  01840A  6EE6               	movwf	postinc1,c
  9301  01840C  EC78  F0CD         	call	_update_lcd	;wreg free
  9302                           
  9303                           ;mconfig.c: 67:  } else {
  9304  018410  D032               	goto	l1672
  9305  018412                     l12994:
  9306                           
  9307                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9308  018412  0E09               	movlw	9
  9309  018414  6EE6               	movwf	postinc1,c
  9310  018416  EC8B  F0DD         	call	_TimerDone	;wreg free
  9311  01841A  5001               	movf	btemp^0,w,c
  9312  01841C  B4D8               	btfsc	status,2,c
  9313  01841E  D02B               	goto	l1672
  9314                           
  9315                           ;mconfig.c: 69:    set_vterm(0);
  9316  018420  0E00               	movlw	0
  9317  018422  6EE6               	movwf	postinc1,c
  9318  018424  EC82  F0DF         	call	_set_vterm	;wreg free
  9319                           
  9320                           ;mconfig.c: 70:    V.help = 0;
  9321  018428  0101               	movlb	1	; () banked
  9322  01842A  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;mconfig.c: 71:    set_display_info(display_help());
  9326  01842C  EC97  F0E0         	call	_display_help	;wreg free
  9327  018430  5001               	movf	btemp^0,w,c
  9328  018432  6EE6               	movwf	postinc1,c
  9329  018434  EC91  F0DF         	call	_set_display_info	;wreg free
  9330                           
  9331                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9332  018438  0060  F717  FFE6   	movff	_V+149,postinc1
  9333  01843E  0060  F71B  FFE6   	movff	_V+150,postinc1
  9334  018444  ECD7  F0DF         	call	_mode_lamp_dim	;wreg free
  9335                           
  9336                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9337  018448  0E0B               	movlw	11
  9338  01844A  6EE6               	movwf	postinc1,c
  9339  01844C  EC8B  F0DD         	call	_TimerDone	;wreg free
  9340  018450  5001               	movf	btemp^0,w,c
  9341  018452  B4D8               	btfsc	status,2,c
  9342  018454  D010               	goto	l1672
  9343                           
  9344                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9345  018456  0101               	movlb	1	; () banked
  9346  018458  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9347  01845A  A4D8               	btfss	status,2,c
  9348  01845C  D002               	goto	u12500
  9349  01845E  0E01               	movlw	1
  9350  018460  D001               	goto	u12510
  9351  018462                     u12500:
  9352  018462  0E00               	movlw	0
  9353  018464                     u12510:
  9354  018464  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9355                           
  9356                           ; BSR set to: 1
  9357                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9358  018466  0EDC               	movlw	220
  9359  018468  6EE6               	movwf	postinc1,c
  9360  01846A  0E05               	movlw	5
  9361  01846C  6EE6               	movwf	postinc1,c
  9362  01846E  0E0B               	movlw	11
  9363  018470  6EE6               	movwf	postinc1,c
  9364  018472  EC65  F0DB         	call	_StartTimer	;wreg free
  9365  018476                     l1672:
  9366                           
  9367                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9368  018476  52E5               	movf	postdec1,f,c
  9369  018478  0012               	return		;funcret
  9370  01847A                     __end_of_check_help:
  9371                           	opt callstack 0
  9372                           
  9373 ;; *************** function _vterm_dump *****************
  9374 ;; Defined at:
  9375 ;;		line 121 in file "mconfig.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;		None
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1  [STACK] void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9384 ;; Tracked objects:
  9385 ;;		On entry : 3F/1
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9393 ;;Total ram usage:        0 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:   27
  9396 ;; This function calls:
  9397 ;;		_WaitMs
  9398 ;;		_eaDogM_WriteStringAtPos
  9399 ;;		_get_vterm_ptr
  9400 ;;		_sprintf
  9401 ;;		_wait_lcd_done
  9402 ;; This function is called by:
  9403 ;;		_check_help
  9404 ;; This function uses a reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text30
  9408  019672                     __ptext30:
  9409                           	opt callstack 0
  9410  019672                     _vterm_dump:
  9411                           	opt callstack 2
  9412                           
  9413                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9414                           
  9415                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9416                           ;incstack = 0
  9417  019672  0E01               	movlw	1
  9418  019674  6EE6               	movwf	postinc1,c
  9419  019676  0E00               	movlw	0
  9420  019678  6EE6               	movwf	postinc1,c
  9421  01967A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9422  01967E  0060  F007  FFE6   	movff	btemp,postinc1
  9423  019684  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9424  01968A  0E00               	movlw	0
  9425  01968C  6EE6               	movwf	postinc1,c
  9426  01968E  0E00               	movlw	0
  9427  019690  6EE6               	movwf	postinc1,c
  9428  019692  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9429  019696  0060  F007  FFE6   	movff	btemp,postinc1
  9430  01969C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9431  0196A2  0EA4               	movlw	low STR_51
  9432  0196A4  6EE6               	movwf	postinc1,c
  9433  0196A6  0EFF               	movlw	high STR_51
  9434  0196A8  6EE6               	movwf	postinc1,c
  9435  0196AA  0E31               	movlw	low (_V+1)
  9436  0196AC  6EE6               	movwf	postinc1,c
  9437  0196AE  0E01               	movlw	high (_V+1)
  9438  0196B0  6EE6               	movwf	postinc1,c
  9439  0196B2  0E08               	movlw	8
  9440  0196B4  6EE6               	movwf	postinc1,c
  9441  0196B6  EC00  F0CE         	call	_sprintf	;wreg free
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;mconfig.c: 124:  wait_lcd_done();
  9445  0196BA  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9449  0196BE  0E31               	movlw	low (_V+1)
  9450  0196C0  6EE6               	movwf	postinc1,c
  9451  0196C2  0E01               	movlw	high (_V+1)
  9452  0196C4  6EE6               	movwf	postinc1,c
  9453  0196C6  0E00               	movlw	0
  9454  0196C8  6EE6               	movwf	postinc1,c
  9455  0196CA  0E00               	movlw	0
  9456  0196CC  6EE6               	movwf	postinc1,c
  9457  0196CE  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9458                           
  9459                           ; BSR set to: 59
  9460                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9461  0196D2  0E01               	movlw	1
  9462  0196D4  6EE6               	movwf	postinc1,c
  9463  0196D6  0E01               	movlw	1
  9464  0196D8  6EE6               	movwf	postinc1,c
  9465  0196DA  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9466  0196DE  0060  F007  FFE6   	movff	btemp,postinc1
  9467  0196E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9468  0196EA  0E00               	movlw	0
  9469  0196EC  6EE6               	movwf	postinc1,c
  9470  0196EE  0E01               	movlw	1
  9471  0196F0  6EE6               	movwf	postinc1,c
  9472  0196F2  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9473  0196F6  0060  F007  FFE6   	movff	btemp,postinc1
  9474  0196FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9475  019702  0EA4               	movlw	low STR_51
  9476  019704  6EE6               	movwf	postinc1,c
  9477  019706  0EFF               	movlw	high STR_51
  9478  019708  6EE6               	movwf	postinc1,c
  9479  01970A  0E31               	movlw	low (_V+1)
  9480  01970C  6EE6               	movwf	postinc1,c
  9481  01970E  0E01               	movlw	high (_V+1)
  9482  019710  6EE6               	movwf	postinc1,c
  9483  019712  0E08               	movlw	8
  9484  019714  6EE6               	movwf	postinc1,c
  9485  019716  EC00  F0CE         	call	_sprintf	;wreg free
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;mconfig.c: 127:  wait_lcd_done();
  9489  01971A  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
  9490                           
  9491                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9492  01971E  0E31               	movlw	low (_V+1)
  9493  019720  6EE6               	movwf	postinc1,c
  9494  019722  0E01               	movlw	high (_V+1)
  9495  019724  6EE6               	movwf	postinc1,c
  9496  019726  0E00               	movlw	0
  9497  019728  6EE6               	movwf	postinc1,c
  9498  01972A  0E01               	movlw	1
  9499  01972C  6EE6               	movwf	postinc1,c
  9500  01972E  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9501                           
  9502                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9503  019732  0E01               	movlw	1
  9504  019734  6EE6               	movwf	postinc1,c
  9505  019736  0E02               	movlw	2
  9506  019738  6EE6               	movwf	postinc1,c
  9507  01973A  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9508  01973E  0060  F007  FFE6   	movff	btemp,postinc1
  9509  019744  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9510  01974A  0E00               	movlw	0
  9511  01974C  6EE6               	movwf	postinc1,c
  9512  01974E  0E02               	movlw	2
  9513  019750  6EE6               	movwf	postinc1,c
  9514  019752  EC09  F0DD         	call	_get_vterm_ptr	;wreg free
  9515  019756  0060  F007  FFE6   	movff	btemp,postinc1
  9516  01975C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9517  019762  0EA4               	movlw	low STR_51
  9518  019764  6EE6               	movwf	postinc1,c
  9519  019766  0EFF               	movlw	high STR_51
  9520  019768  6EE6               	movwf	postinc1,c
  9521  01976A  0E31               	movlw	low (_V+1)
  9522  01976C  6EE6               	movwf	postinc1,c
  9523  01976E  0E01               	movlw	high (_V+1)
  9524  019770  6EE6               	movwf	postinc1,c
  9525  019772  0E08               	movlw	8
  9526  019774  6EE6               	movwf	postinc1,c
  9527  019776  EC00  F0CE         	call	_sprintf	;wreg free
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;mconfig.c: 130:  wait_lcd_done();
  9531  01977A  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9535  01977E  0E31               	movlw	low (_V+1)
  9536  019780  6EE6               	movwf	postinc1,c
  9537  019782  0E01               	movlw	high (_V+1)
  9538  019784  6EE6               	movwf	postinc1,c
  9539  019786  0E00               	movlw	0
  9540  019788  6EE6               	movwf	postinc1,c
  9541  01978A  0E02               	movlw	2
  9542  01978C  6EE6               	movwf	postinc1,c
  9543  01978E  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9544                           
  9545                           ; BSR set to: 59
  9546                           ;mconfig.c: 132:  WaitMs(3000);
  9547  019792  0EB8               	movlw	184
  9548  019794  6EE6               	movwf	postinc1,c
  9549  019796  0E0B               	movlw	11
  9550  019798  6EE6               	movwf	postinc1,c
  9551  01979A  EC5A  F0DC         	call	_WaitMs	;wreg free
  9552                           
  9553                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9554  01979E  0012               	return		;funcret
  9555  0197A0                     __end_of_vterm_dump:
  9556                           	opt callstack 0
  9557                           
  9558 ;; *************** function _sprintf *****************
  9559 ;; Defined at:
  9560 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  s               2  [STACK] PTR unsigned char 
  9563 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9564 ;;  fmt             2  [STACK] PTR const unsigned char 
  9565 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
  9566 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
  9567 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
  9568 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
  9569 ;;		 -> STR_47(19), STR_42(22), STR_41(22), STR_40(22), 
  9570 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
  9571 ;;		 -> STR_35(23), STR_34(23), STR_33(22), STR_32(22), 
  9572 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
  9573 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(22), 
  9574 ;;		 -> STR_23(22), STR_22(22), STR_21(17), STR_20(16), 
  9575 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9576 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
  9577 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
  9578 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
  9579 ;;		 -> STR_2(21), STR_1(21), 
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;  f               6  [STACK] struct _IO_FILE
  9582 ;;  ap              2  [STACK] PTR void [1]
  9583 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9584 ;;  ret             2    0        int 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  2  [STACK] int 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 3F/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9598 ;;Total ram usage:        0 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:   23
  9601 ;; This function calls:
  9602 ;;		_vfprintf
  9603 ;; This function is called by:
  9604 ;;		_main
  9605 ;;		_check_help
  9606 ;;		_vterm_dump
  9607 ;;		_calc_bsoc
  9608 ;; This function uses a reentrant model
  9609 ;;
  9610                           
  9611                           	psect	text31
  9612  019C00                     __ptext31:
  9613                           	opt callstack 0
  9614  019C00                     _sprintf:
  9615                           	opt callstack 0
  9616                           
  9617                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9618  019C00  0E08               	movlw	8
  9619  019C02  26E1               	addwf	fsr1l,f,c
  9620  019C04  0E00               	movlw	0
  9621  019C06  22E2               	addwfc	fsr1h,f,c
  9622                           
  9623                           ;incstack = 0
  9624 ;; hardware stack exceeded
  9625  019C08  0EFE               	movlw	254
  9626  019C0A  6E0B               	movwf	(btemp+10)^0,c
  9627  019C0C  0EFF               	movlw	255
  9628  019C0E  6E0C               	movwf	(btemp+11)^0,c
  9629                           
  9630                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9631  019C10  0EF5               	movlw	245
  9632  019C12  24E1               	addwf	fsr1l,w,c
  9633  019C14  6E09               	movwf	(btemp+8)^0,c
  9634  019C16  0EFF               	movlw	255
  9635  019C18  20E2               	addwfc	fsr1h,w,c
  9636  019C1A  6E0A               	movwf	(btemp+9)^0,c
  9637  019C1C  500B               	movf	(btemp+10)^0,w,c
  9638  019C1E  2609               	addwf	(btemp+8)^0,f,c
  9639  019C20  500C               	movf	(btemp+11)^0,w,c
  9640  019C22  220A               	addwfc	(btemp+9)^0,f,c
  9641                           
  9642                           ;stkvar	_ap @ sp[(-8)+6]
  9643  019C24  0EFF               	movlw	-1
  9644  019C26  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9645  019C2C  0EFE               	movlw	-2
  9646  019C2E  0060  F027  FFE3   	movff	btemp+8,plusw1
  9647                           
  9648                           ;stkvar	_s @ sp[(-8)+-3]
  9649  019C34  0EF5               	movlw	-11
  9650  019C36  006F FF8C  F00B    	movff	plusw1,btemp+10
  9651  019C3C  0EF6               	movlw	-10
  9652  019C3E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9653                           
  9654                           ;stkvar	_f @ sp[(-8)+0]
  9655  019C44  0EF9               	movlw	-7
  9656  019C46  0060  F033  FFE3   	movff	btemp+11,plusw1
  9657  019C4C  0EF8               	movlw	-8
  9658  019C4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9659                           
  9660                           ;stkvar	_f @ sp[(-8)+0]
  9661  019C54  0EFA               	movlw	250
  9662  019C56  24E1               	addwf	fsr1l,w,c
  9663  019C58  6ED9               	movwf	fsr2l,c
  9664  019C5A  0EFF               	movlw	255
  9665  019C5C  20E2               	addwfc	fsr1h,w,c
  9666  019C5E  6EDA               	movwf	fsr2h,c
  9667  019C60  0E00               	movlw	0
  9668  019C62  6EDE               	movwf	postinc2,c
  9669  019C64  0E00               	movlw	0
  9670  019C66  6EDD               	movwf	postdec2,c
  9671                           
  9672                           ;stkvar	_f @ sp[(-8)+0]
  9673  019C68  0EFC               	movlw	252
  9674  019C6A  24E1               	addwf	fsr1l,w,c
  9675  019C6C  6ED9               	movwf	fsr2l,c
  9676  019C6E  0EFF               	movlw	255
  9677  019C70  20E2               	addwfc	fsr1h,w,c
  9678  019C72  6EDA               	movwf	fsr2h,c
  9679  019C74  0E00               	movlw	0
  9680  019C76  6EDE               	movwf	postinc2,c
  9681  019C78  0E00               	movlw	0
  9682  019C7A  6EDD               	movwf	postdec2,c
  9683                           
  9684                           ;stkvar	_ap @ sp[(-8)+6]
  9685  019C7C  0EFE               	movlw	254
  9686  019C7E  24E1               	addwf	fsr1l,w,c
  9687  019C80  6E01               	movwf	btemp^0,c
  9688  019C82  0EFF               	movlw	255
  9689  019C84  20E2               	addwfc	fsr1h,w,c
  9690  019C86  6E02               	movwf	(btemp+1)^0,c
  9691  019C88  0060  F007  FFE6   	movff	btemp,postinc1
  9692  019C8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9693                           
  9694                           ;stkvar	_fmt @ sp[(-10)+-5]
  9695  019C94  0EF1               	movlw	-15
  9696  019C96  006F FF8F FFE6     	movff	plusw1,postinc1
  9697  019C9C  006F FF8F FFE6     	movff	plusw1,postinc1
  9698                           
  9699                           ;stkvar	_f @ sp[(-12)+0]
  9700  019CA2  0EF4               	movlw	244
  9701  019CA4  24E1               	addwf	fsr1l,w,c
  9702  019CA6  6E01               	movwf	btemp^0,c
  9703  019CA8  0EFF               	movlw	255
  9704  019CAA  20E2               	addwfc	fsr1h,w,c
  9705  019CAC  6E02               	movwf	(btemp+1)^0,c
  9706  019CAE  0060  F007  FFE6   	movff	btemp,postinc1
  9707  019CB4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9708  019CBA  EC1D  F0D3         	call	_vfprintf	;wreg free
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;stkvar	_f @ sp[(-8)+0]
  9712  019CBE  0EFA               	movlw	250
  9713  019CC0  24E1               	addwf	fsr1l,w,c
  9714  019CC2  6ED9               	movwf	fsr2l,c
  9715  019CC4  0EFF               	movlw	255
  9716  019CC6  20E2               	addwfc	fsr1h,w,c
  9717  019CC8  6EDA               	movwf	fsr2h,c
  9718  019CCA  006F FF78  F00B    	movff	postinc2,btemp+10
  9719  019CD0  006F FF74  F00C    	movff	postdec2,btemp+11
  9720                           
  9721                           ;stkvar	_s @ sp[(-8)+-3]
  9722  019CD6  0EF5               	movlw	-11
  9723  019CD8  006F FF8C  F009    	movff	plusw1,btemp+8
  9724  019CDE  0EF6               	movlw	-10
  9725  019CE0  006F FF8C  F00A    	movff	plusw1,btemp+9
  9726  019CE6  500B               	movf	(btemp+10)^0,w,c
  9727  019CE8  2409               	addwf	(btemp+8)^0,w,c
  9728  019CEA  6ED9               	movwf	fsr2l,c
  9729  019CEC  500C               	movf	(btemp+11)^0,w,c
  9730  019CEE  200A               	addwfc	(btemp+9)^0,w,c
  9731  019CF0  6EDA               	movwf	fsr2h,c
  9732  019CF2  0E00               	movlw	0
  9733  019CF4  6EDF               	movwf	indf2,c
  9734                           
  9735                           ; BSR set to: 0
  9736                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9737  019CF6  0EF8               	movlw	248
  9738  019CF8  26E1               	addwf	fsr1l,f,c
  9739  019CFA  0EFF               	movlw	255
  9740  019CFC  22E2               	addwfc	fsr1h,f,c
  9741  019CFE  52E5               	movf	postdec1,f,c
  9742  019D00  50E7               	movf	indf1,w,c
  9743  019D02  5EE1               	subwf	fsr1l,f,c
  9744  019D04  0E00               	movlw	0
  9745  019D06  5AE2               	subwfb	fsr1h,f,c
  9746  019D08  0012               	return		;funcret
  9747  019D0A                     __end_of_sprintf:
  9748                           	opt callstack 0
  9749                           
  9750 ;; *************** function _get_vterm_ptr *****************
  9751 ;; Defined at:
  9752 ;;		line 116 in file "mconfig.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  line            1  [STACK] const unsigned char 
  9755 ;;  vterm           1  [STACK] const unsigned char 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  2  [STACK] PTR unsigned char 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9771 ;;Total ram usage:        0 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:   15
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_main
  9778 ;;		_check_help
  9779 ;;		_vterm_dump
  9780 ;; This function uses a reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text32
  9784  01BA12                     __ptext32:
  9785                           	opt callstack 0
  9786  01BA12                     _get_vterm_ptr:
  9787                           	opt callstack 15
  9788                           
  9789                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9790                           ;stkvar	_vterm @ sp[(0)+-2]
  9791                           
  9792                           ; BSR set to: 0
  9793                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9794                           ;incstack = 0
  9795  01BA12  0EFE               	movlw	-2
  9796  01BA14  50E3               	movf	plusw1,w,c
  9797  01BA16  0B03               	andlw	3
  9798  01BA18  0D78               	mullw	120
  9799  01BA1A  0E2A               	movlw	low _D
  9800  01BA1C  6E01               	movwf	btemp^0,c
  9801  01BA1E  0E08               	movlw	high _D
  9802  01BA20  6E02               	movwf	(btemp+1)^0,c
  9803  01BA22  50F3               	movf	243,w,c
  9804  01BA24  2601               	addwf	btemp^0,f,c
  9805  01BA26  50F4               	movf	244,w,c
  9806  01BA28  2202               	addwfc	(btemp+1)^0,f,c
  9807                           
  9808                           ;stkvar	_line @ sp[(0)+-1]
  9809  01BA2A  0EFF               	movlw	-1
  9810  01BA2C  50E3               	movf	plusw1,w,c
  9811  01BA2E  0B03               	andlw	3
  9812  01BA30  0D28               	mullw	40
  9813  01BA32  50F3               	movf	243,w,c
  9814  01BA34  2601               	addwf	btemp^0,f,c
  9815  01BA36  50F4               	movf	244,w,c
  9816  01BA38  2202               	addwfc	(btemp+1)^0,f,c
  9817                           
  9818                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9819  01BA3A  52E5               	movf	postdec1,f,c
  9820  01BA3C  52E5               	movf	postdec1,f,c
  9821  01BA3E  0012               	return		;funcret
  9822  01BA40                     __end_of_get_vterm_ptr:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _WaitMs *****************
  9826 ;; Defined at:
  9827 ;;		line 32 in file "timers.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  numMilliseco    2  [STACK] const unsigned short 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1  [STACK] void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/1
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:   16
  9848 ;; This function calls:
  9849 ;;		_StartTimer
  9850 ;;		_TimerDone
  9851 ;; This function is called by:
  9852 ;;		_main
  9853 ;;		_vterm_dump
  9854 ;; This function uses a reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text33
  9858  01B8B4                     __ptext33:
  9859                           	opt callstack 0
  9860  01B8B4                     _WaitMs:
  9861                           	opt callstack 12
  9862                           
  9863                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9864                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9865                           
  9866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9867                           ;incstack = 0
  9868  01B8B4  0EFE               	movlw	-2
  9869  01B8B6  006F FF8F FFE6     	movff	plusw1,postinc1
  9870  01B8BC  006F FF8F FFE6     	movff	plusw1,postinc1
  9871  01B8C2  0E00               	movlw	0
  9872  01B8C4  6EE6               	movwf	postinc1,c
  9873  01B8C6  EC65  F0DB         	call	_StartTimer	;wreg free
  9874                           
  9875                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9876  01B8CA  D005               	goto	l9866
  9877  01B8CC                     l1603:
  9878                           
  9879                           ;timers.c: 36:   __nop();
  9880  01B8CC  F000               	nop	
  9881                           
  9882                           ;timers.c: 37:   __nop();
  9883  01B8CE  F000               	nop	
  9884                           
  9885                           ;timers.c: 38:   __nop();
  9886  01B8D0  F000               	nop	
  9887                           
  9888                           ;timers.c: 39:   __nop();
  9889  01B8D2  F000               	nop	
  9890  01B8D4  0004               	clrwdt		;# 
  9891  01B8D6                     l9866:
  9892                           
  9893                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9894  01B8D6  0E00               	movlw	0
  9895  01B8D8  6EE6               	movwf	postinc1,c
  9896  01B8DA  EC8B  F0DD         	call	_TimerDone	;wreg free
  9897  01B8DE  5001               	movf	btemp^0,w,c
  9898  01B8E0  B4D8               	btfsc	status,2,c
  9899  01B8E2  D7F4               	goto	l1603
  9900                           
  9901                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9902  01B8E4  52E5               	movf	postdec1,f,c
  9903  01B8E6  52E5               	movf	postdec1,f,c
  9904  01B8E8  0012               	return		;funcret
  9905  01B8EA                     __end_of_WaitMs:
  9906                           	opt callstack 0
  9907                           
  9908 ;; *************** function _update_lcd *****************
  9909 ;; Defined at:
  9910 ;;		line 85 in file "mconfig.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  vterm           1  [STACK] unsigned char 
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1  [STACK] unsigned char 
  9917 ;; Registers used:
  9918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9928 ;;Total ram usage:        0 bytes
  9929 ;; Hardware stack levels used:    1
  9930 ;; Hardware stack levels required when called:   27
  9931 ;; This function calls:
  9932 ;;		_eaDogM_WriteStringAtPos
  9933 ;;		_wait_lcd_done
  9934 ;; This function is called by:
  9935 ;;		_main
  9936 ;;		_check_help
  9937 ;; This function uses a reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text34
  9941  019AF0                     __ptext34:
  9942                           	opt callstack 0
  9943  019AF0                     _update_lcd:
  9944                           	opt callstack 3
  9945                           
  9946                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9947                           ;stkvar	_vterm @ sp[(0)+-1]
  9948                           
  9949                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9950                           ;incstack = 0
  9951  019AF0  0EFF               	movlw	-1
  9952  019AF2  006F FF8C  F001    	movff	plusw1,btemp
  9953  019AF8  0E03               	movlw	3
  9954  019AFA  1601               	andwf	btemp^0,f,c
  9955  019AFC  0EFF               	movlw	-1
  9956  019AFE  0060  F007  FFE3   	movff	btemp,plusw1
  9957                           
  9958                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9959  019B04  EE22  F20A         	lfsr	2,_D+480
  9960  019B08  A0DF               	btfss	indf2,0,c
  9961  019B0A  D004               	goto	l12774
  9962                           
  9963                           ;stkvar	_vterm @ sp[(0)+-1]
  9964  019B0C  0EFF               	movlw	-1
  9965  019B0E  50E3               	movf	plusw1,w,c
  9966  019B10  B4D8               	btfsc	status,2,c
  9967  019B12  D074               	goto	l1679
  9968  019B14                     l12774:
  9969                           
  9970                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
  9971                           ;stkvar	_vterm @ sp[(0)+-1]
  9972  019B14  0EFF               	movlw	-1
  9973  019B16  50E3               	movf	plusw1,w,c
  9974  019B18  0D78               	mullw	120
  9975  019B1A  0E3E               	movlw	low (_D+20)
  9976  019B1C  24F3               	addwf	243,w,c
  9977  019B1E  6ED9               	movwf	fsr2l,c
  9978  019B20  0E08               	movlw	high (_D+20)
  9979  019B22  20F4               	addwfc	prodh,w,c
  9980  019B24  6EDA               	movwf	fsr2h,c
  9981  019B26  0E00               	movlw	0
  9982  019B28  6EDF               	movwf	indf2,c
  9983                           
  9984                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
  9985                           ;stkvar	_vterm @ sp[(0)+-1]
  9986  019B2A  0EFF               	movlw	-1
  9987  019B2C  50E3               	movf	plusw1,w,c
  9988  019B2E  0D78               	mullw	120
  9989  019B30  0E66               	movlw	low (_D+60)
  9990  019B32  24F3               	addwf	243,w,c
  9991  019B34  6ED9               	movwf	fsr2l,c
  9992  019B36  0E08               	movlw	high (_D+60)
  9993  019B38  20F4               	addwfc	prodh,w,c
  9994  019B3A  6EDA               	movwf	fsr2h,c
  9995  019B3C  0E00               	movlw	0
  9996  019B3E  6EDF               	movwf	indf2,c
  9997                           
  9998                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
  9999                           ;stkvar	_vterm @ sp[(0)+-1]
 10000  019B40  0EFF               	movlw	-1
 10001  019B42  50E3               	movf	plusw1,w,c
 10002  019B44  0D78               	mullw	120
 10003  019B46  0E8E               	movlw	low (_D+100)
 10004  019B48  24F3               	addwf	243,w,c
 10005  019B4A  6ED9               	movwf	fsr2l,c
 10006  019B4C  0E08               	movlw	high (_D+100)
 10007  019B4E  20F4               	addwfc	prodh,w,c
 10008  019B50  6EDA               	movwf	fsr2h,c
 10009  019B52  0E00               	movlw	0
 10010  019B54  6EDF               	movwf	indf2,c
 10011                           
 10012                           ;mconfig.c: 95:  wait_lcd_done();
 10013  019B56  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10017                           ;stkvar	_vterm @ sp[(0)+-1]
 10018  019B5A  0EFF               	movlw	-1
 10019  019B5C  50E3               	movf	plusw1,w,c
 10020  019B5E  0D78               	mullw	120
 10021  019B60  0E2A               	movlw	low _D
 10022  019B62  6E0B               	movwf	(btemp+10)^0,c
 10023  019B64  0E08               	movlw	high _D
 10024  019B66  6E0C               	movwf	(btemp+11)^0,c
 10025  019B68  50F3               	movf	243,w,c
 10026  019B6A  260B               	addwf	(btemp+10)^0,f,c
 10027  019B6C  50F4               	movf	244,w,c
 10028  019B6E  220C               	addwfc	(btemp+11)^0,f,c
 10029  019B70  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10030  019B76  0060  F033  FFE6   	movff	btemp+11,postinc1
 10031  019B7C  0E00               	movlw	0
 10032  019B7E  6EE6               	movwf	postinc1,c
 10033  019B80  0E00               	movlw	0
 10034  019B82  6EE6               	movwf	postinc1,c
 10035  019B84  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10036                           
 10037                           ; BSR set to: 59
 10038                           ;mconfig.c: 97:  wait_lcd_done();
 10039  019B88  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10043                           ;stkvar	_vterm @ sp[(0)+-1]
 10044  019B8C  0EFF               	movlw	-1
 10045  019B8E  50E3               	movf	plusw1,w,c
 10046  019B90  0D78               	mullw	120
 10047  019B92  0E2A               	movlw	low _D
 10048  019B94  6E0B               	movwf	(btemp+10)^0,c
 10049  019B96  0E08               	movlw	high _D
 10050  019B98  6E0C               	movwf	(btemp+11)^0,c
 10051  019B9A  0E28               	movlw	40
 10052  019B9C  260B               	addwf	(btemp+10)^0,f,c
 10053  019B9E  0E00               	movlw	0
 10054  019BA0  220C               	addwfc	(btemp+11)^0,f,c
 10055  019BA2  50F3               	movf	243,w,c
 10056  019BA4  260B               	addwf	(btemp+10)^0,f,c
 10057  019BA6  50F4               	movf	244,w,c
 10058  019BA8  220C               	addwfc	(btemp+11)^0,f,c
 10059  019BAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10060  019BB0  0060  F033  FFE6   	movff	btemp+11,postinc1
 10061  019BB6  0E00               	movlw	0
 10062  019BB8  6EE6               	movwf	postinc1,c
 10063  019BBA  0E01               	movlw	1
 10064  019BBC  6EE6               	movwf	postinc1,c
 10065  019BBE  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10066                           
 10067                           ; BSR set to: 59
 10068                           ;mconfig.c: 99:  wait_lcd_done();
 10069  019BC2  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10073                           ;stkvar	_vterm @ sp[(0)+-1]
 10074  019BC6  0EFF               	movlw	-1
 10075  019BC8  50E3               	movf	plusw1,w,c
 10076  019BCA  0D78               	mullw	120
 10077  019BCC  0E2A               	movlw	low _D
 10078  019BCE  6E0B               	movwf	(btemp+10)^0,c
 10079  019BD0  0E08               	movlw	high _D
 10080  019BD2  6E0C               	movwf	(btemp+11)^0,c
 10081  019BD4  0E50               	movlw	80
 10082  019BD6  260B               	addwf	(btemp+10)^0,f,c
 10083  019BD8  0E00               	movlw	0
 10084  019BDA  220C               	addwfc	(btemp+11)^0,f,c
 10085  019BDC  50F3               	movf	243,w,c
 10086  019BDE  260B               	addwf	(btemp+10)^0,f,c
 10087  019BE0  50F4               	movf	244,w,c
 10088  019BE2  220C               	addwfc	(btemp+11)^0,f,c
 10089  019BE4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10090  019BEA  0060  F033  FFE6   	movff	btemp+11,postinc1
 10091  019BF0  0E00               	movlw	0
 10092  019BF2  6EE6               	movwf	postinc1,c
 10093  019BF4  0E02               	movlw	2
 10094  019BF6  6EE6               	movwf	postinc1,c
 10095  019BF8  ECC8  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10096  019BFC                     l1679:
 10097                           
 10098                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10099  019BFC  52E5               	movf	postdec1,f,c
 10100  019BFE  0012               	return		;funcret
 10101  019C00                     __end_of_update_lcd:
 10102                           	opt callstack 0
 10103                           
 10104 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10105 ;; Defined at:
 10106 ;;		line 195 in file "eadog.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  r               1  [STACK] const unsigned char 
 10109 ;;  c               1  [STACK] const unsigned char 
 10110 ;;  strPtr          2  [STACK] PTR unsigned char 
 10111 ;;		 -> D.lcd(480), D(482), V(191), 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  row             1  [STACK] unsigned char 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  1  [STACK] void 
 10116 ;; Registers used:
 10117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10118 ;; Tracked objects:
 10119 ;;		On entry : 3F/0
 10120 ;;		On exit  : 3F/3B
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:   26
 10130 ;; This function calls:
 10131 ;;		_eaDogM_WriteString
 10132 ;;		_send_lcd_cmd_dma
 10133 ;;		_send_lcd_data_dma
 10134 ;;		_wait_lcd_done
 10135 ;;		_wdtdelay
 10136 ;; This function is called by:
 10137 ;;		_update_lcd
 10138 ;;		_vterm_dump
 10139 ;; This function uses a reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text35
 10143  01A790                     __ptext35:
 10144                           	opt callstack 0
 10145  01A790                     _eaDogM_WriteStringAtPos:
 10146                           	opt callstack 0
 10147                           
 10148                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10149  01A790  52E6               	movf	postinc1,f,c
 10150                           
 10151                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 10152                           
 10153                           ;incstack = 0
 10154  01A792  D014               	goto	l12750
 10155  01A794                     l12738:
 10156                           
 10157                           ;eadog.c: 201:   row = 0x40;
 10158                           ;stkvar	_row @ sp[(-1)+0]
 10159  01A794  0EFF               	movlw	-1
 10160  01A796  6AE3               	clrf	plusw1,c
 10161  01A798  8CE3               	bsf	plusw1,6,c
 10162                           
 10163                           ;eadog.c: 202:   break;
 10164  01A79A  D026               	goto	l12752
 10165  01A79C                     l12740:
 10166                           
 10167                           ;eadog.c: 204:   row = 0x14;
 10168                           ;stkvar	_row @ sp[(-1)+0]
 10169  01A79C  0EFF               	movlw	-1
 10170  01A79E  6AE3               	clrf	plusw1,c
 10171  01A7A0  84E3               	bsf	plusw1,2,c
 10172  01A7A2  88E3               	bsf	plusw1,4,c	;indir
 10173                           
 10174                           ;eadog.c: 205:   break;
 10175  01A7A4  D021               	goto	l12752
 10176  01A7A6                     l12742:
 10177                           
 10178                           ;eadog.c: 207:   row = 0x54;
 10179  01A7A6  0E54               	movlw	84
 10180  01A7A8  6E0C               	movwf	(btemp+11)^0,c
 10181                           
 10182                           ;stkvar	_row @ sp[(-1)+0]
 10183  01A7AA  0EFF               	movlw	-1
 10184  01A7AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 10185                           
 10186                           ;eadog.c: 208:   break;
 10187  01A7B2  D01A               	goto	l12752
 10188  01A7B4                     l12744:
 10189                           
 10190                           ;eadog.c: 210:   row = 0x1;
 10191                           ;stkvar	_row @ sp[(-1)+0]
 10192  01A7B4  0EFF               	movlw	-1
 10193  01A7B6  6AE3               	clrf	plusw1,c
 10194  01A7B8  2AE3               	incf	plusw1,f,c
 10195                           
 10196                           ;eadog.c: 211:   break;
 10197  01A7BA  D016               	goto	l12752
 10198  01A7BC                     l12750:
 10199                           
 10200                           ;stkvar	_r @ sp[(-1)+-1]
 10201  01A7BC  0EFE               	movlw	-2
 10202  01A7BE  50E3               	movf	plusw1,w,c
 10203  01A7C0  6E0B               	movwf	(btemp+10)^0,c
 10204  01A7C2  6A0C               	clrf	(btemp+11)^0,c
 10205                           
 10206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10207                           ; Switch size 1, requested type "simple"
 10208                           ; Number of cases is 1, Range of values is 0 to 0
 10209                           ; switch strategies available:
 10210                           ; Name         Instructions Cycles
 10211                           ; simple_byte            4     3 (average)
 10212                           ;	Chosen strategy is simple_byte
 10213  01A7C4  500C               	movf	(btemp+11)^0,w,c
 10214  01A7C6  0A00               	xorlw	0	; case 0
 10215  01A7C8  A4D8               	btfss	status,2,c
 10216  01A7CA  D7E4               	goto	l12738
 10217                           
 10218                           ; Switch size 1, requested type "simple"
 10219                           ; Number of cases is 4, Range of values is 0 to 3
 10220                           ; switch strategies available:
 10221                           ; Name         Instructions Cycles
 10222                           ; simple_byte           13     7 (average)
 10223                           ;	Chosen strategy is simple_byte
 10224  01A7CC  500B               	movf	(btemp+10)^0,w,c
 10225  01A7CE  0A00               	xorlw	0	; case 0
 10226  01A7D0  B4D8               	btfsc	status,2,c
 10227  01A7D2  D7E0               	goto	l12738
 10228  01A7D4  0A01               	xorlw	1	; case 1
 10229  01A7D6  B4D8               	btfsc	status,2,c
 10230  01A7D8  D7E1               	goto	l12740
 10231  01A7DA  0A03               	xorlw	3	; case 2
 10232  01A7DC  B4D8               	btfsc	status,2,c
 10233  01A7DE  D7E3               	goto	l12742
 10234  01A7E0  0A01               	xorlw	1	; case 3
 10235  01A7E2  B4D8               	btfsc	status,2,c
 10236  01A7E4  D7E7               	goto	l12744
 10237  01A7E6  D7D6               	goto	l12738
 10238  01A7E8                     l12752:
 10239                           
 10240                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 10241  01A7E8  0E45               	movlw	69
 10242  01A7EA  6EE6               	movwf	postinc1,c
 10243  01A7EC  EC73  F0DF         	call	_send_lcd_cmd_dma	;wreg free
 10244                           
 10245                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 10246                           ;stkvar	_c @ sp[(-1)+-2]
 10247  01A7F0  0EFD               	movlw	-3
 10248  01A7F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10249                           
 10250                           ;stkvar	_row @ sp[(-1)+0]
 10251  01A7F8  0EFF               	movlw	-1
 10252  01A7FA  50E3               	movf	plusw1,w,c
 10253  01A7FC  240C               	addwf	(btemp+11)^0,w,c
 10254  01A7FE  6EE6               	movwf	postinc1,c
 10255  01A800  ECC2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10256                           
 10257                           ; BSR set to: 59
 10258                           ;eadog.c: 218:  wait_lcd_done();
 10259  01A804  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;eadog.c: 219:  wdtdelay(8);
 10263  01A808  0E08               	movlw	8
 10264  01A80A  6EE6               	movwf	postinc1,c
 10265  01A80C  0E00               	movlw	0
 10266  01A80E  6EE6               	movwf	postinc1,c
 10267  01A810  0E00               	movlw	0
 10268  01A812  6EE6               	movwf	postinc1,c
 10269  01A814  0E00               	movlw	0
 10270  01A816  6EE6               	movwf	postinc1,c
 10271  01A818  ECEF  F0D8         	call	_wdtdelay	;wreg free
 10272                           
 10273                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 10274                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10275  01A81C  0EFB               	movlw	-5
 10276  01A81E  006F FF8F FFE6     	movff	plusw1,postinc1
 10277  01A824  006F FF8F FFE6     	movff	plusw1,postinc1
 10278  01A82A  EC1C  F0D4         	call	_eaDogM_WriteString	;wreg free
 10279                           
 10280                           ; BSR set to: 59
 10281                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10282  01A82E  0EFB               	movlw	251
 10283  01A830  26E1               	addwf	fsr1l,f,c
 10284  01A832  0EFF               	movlw	255
 10285  01A834  22E2               	addwfc	fsr1h,f,c
 10286  01A836  0012               	return		;funcret
 10287  01A838                     __end_of_eaDogM_WriteStringAtPos:
 10288                           	opt callstack 0
 10289                           
 10290 ;; *************** function _send_lcd_cmd_dma *****************
 10291 ;; Defined at:
 10292 ;;		line 171 in file "eadog.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  strPtr          1  [STACK] const unsigned char 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1  [STACK] void 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/3D
 10303 ;;		On exit  : 3F/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:   25
 10313 ;; This function calls:
 10314 ;;		_send_lcd_data_dma
 10315 ;;		_wait_lcd_done
 10316 ;; This function is called by:
 10317 ;;		_eaDogM_WriteStringAtPos
 10318 ;;		_eaDogM_WriteCommand
 10319 ;; This function uses a reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text36
 10323  01BEE6                     __ptext36:
 10324                           	opt callstack 0
 10325  01BEE6                     _send_lcd_cmd_dma:
 10326                           	opt callstack 3
 10327                           
 10328                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 10329                           
 10330                           ; BSR set to: 59
 10331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10332                           ;incstack = 0
 10333  01BEE6  0EFE               	movlw	254
 10334  01BEE8  6EE6               	movwf	postinc1,c
 10335  01BEEA  ECC2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10336                           
 10337                           ; BSR set to: 59
 10338                           ;eadog.c: 174:  wait_lcd_done();
 10339  01BEEE  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 10343                           ;stkvar	_strPtr @ sp[(0)+-1]
 10344  01BEF2  0EFF               	movlw	-1
 10345  01BEF4  50E3               	movf	plusw1,w,c
 10346  01BEF6  6EE6               	movwf	postinc1,c
 10347  01BEF8  ECC2  F0D9         	call	_send_lcd_data_dma	;wreg free
 10348                           
 10349                           ;eadog.c: 176:  wait_lcd_done();
 10350  01BEFC  ECAF  F0DF         	call	_wait_lcd_done	;wreg free
 10351                           
 10352                           ; BSR set to: 0
 10353                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10354  01BF00  52E5               	movf	postdec1,f,c
 10355  01BF02  0012               	return		;funcret
 10356  01BF04                     __end_of_send_lcd_cmd_dma:
 10357                           	opt callstack 0
 10358                           
 10359 ;; *************** function _wait_lcd_done *****************
 10360 ;; Defined at:
 10361 ;;		line 444 in file "eadog.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1  [STACK] void 
 10368 ;; Registers used:
 10369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 3F/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:   16
 10382 ;; This function calls:
 10383 ;;		_wdtdelay
 10384 ;; This function is called by:
 10385 ;;		_send_lcd_cmd_dma
 10386 ;;		_eaDogM_WriteStringAtPos
 10387 ;;		_update_lcd
 10388 ;;		_vterm_dump
 10389 ;; This function uses a reentrant model
 10390 ;;
 10391                           
 10392                           	psect	text37
 10393  01BF5E                     __ptext37:
 10394                           	opt callstack 0
 10395  01BF5E                     _wait_lcd_done:
 10396                           	opt callstack 13
 10397                           
 10398                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 10399                           
 10400                           ; BSR set to: 0
 10401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10402                           ;incstack = 0
 10403  01BF5E  0100               	movlb	0	; () banked
 10404  01BF60  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10405  01BF62  D7FD               	goto	_wait_lcd_done
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;eadog.c: 447:  wdtdelay(50);
 10409  01BF64  0E32               	movlw	50
 10410  01BF66  6EE6               	movwf	postinc1,c
 10411  01BF68  0E00               	movlw	0
 10412  01BF6A  6EE6               	movwf	postinc1,c
 10413  01BF6C  0E00               	movlw	0
 10414  01BF6E  6EE6               	movwf	postinc1,c
 10415  01BF70  0E00               	movlw	0
 10416  01BF72  6EE6               	movwf	postinc1,c
 10417  01BF74  ECEF  F0D8         	call	_wdtdelay	;wreg free
 10418                           
 10419                           ; BSR set to: 0
 10420                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10421  01BF78  0012               	return		;funcret
 10422  01BF7A                     __end_of_wait_lcd_done:
 10423                           	opt callstack 0
 10424                           
 10425 ;; *************** function _wdtdelay *****************
 10426 ;; Defined at:
 10427 ;;		line 23 in file "eadog.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  delay           4  [STACK] const unsigned long 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1  [STACK] void 
 10434 ;; Registers used:
 10435 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10436 ;; Tracked objects:
 10437 ;;		On entry : 2/3D
 10438 ;;		On exit  : 3F/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;Total ram usage:        0 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:   15
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_init_display
 10452 ;;		_send_lcd_data
 10453 ;;		_send_lcd_cmd
 10454 ;;		_send_lcd_cmd_long
 10455 ;;		_eaDogM_WriteStringAtPos
 10456 ;;		_wait_lcd_done
 10457 ;; This function uses a reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text38
 10461  01B1DE                     __ptext38:
 10462                           	opt callstack 0
 10463  01B1DE                     _wdtdelay:
 10464                           	opt callstack 13
 10465                           
 10466                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10467                           
 10468                           ; BSR set to: 0
 10469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10470                           ;incstack = 0
 10471  01B1DE  0100               	movlb	0	; () banked
 10472  01B1E0  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10473  01B1E2  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10474  01B1E4  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10475  01B1E6  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10476  01B1E8                     l1459:
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;eadog.c: 28:   __nop();
 10480  01B1E8  F000               	nop	
 10481  01B1EA  0004               	clrwdt		;# 
 10482                           
 10483                           ;eadog.c: 30:  };
 10484  01B1EC  0E01               	movlw	1
 10485  01B1EE  0100               	movlb	0	; () banked
 10486  01B1F0  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10487  01B1F2  0E00               	movlw	0
 10488  01B1F4  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10489  01B1F6  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10490  01B1F8  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;stkvar	_delay @ sp[(0)+-4]
 10494  01B1FA  0EFC               	movlw	-4
 10495  01B1FC  006F FF8C  F001    	movff	plusw1,btemp
 10496  01B202  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10497  01B204  5C01               	subwf	btemp^0,w,c
 10498  01B206  0EFD               	movlw	-3
 10499  01B208  006F FF8C  F001    	movff	plusw1,btemp
 10500  01B20E  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10501  01B210  5801               	subwfb	btemp^0,w,c
 10502  01B212  0EFE               	movlw	-2
 10503  01B214  006F FF8C  F001    	movff	plusw1,btemp
 10504  01B21A  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10505  01B21C  5801               	subwfb	btemp^0,w,c
 10506  01B21E  0EFF               	movlw	-1
 10507  01B220  006F FF8C  F001    	movff	plusw1,btemp
 10508  01B226  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10509  01B228  5801               	subwfb	btemp^0,w,c
 10510  01B22A  B0D8               	btfsc	status,0,c
 10511  01B22C  D7DD               	goto	l1459
 10512                           
 10513                           ; BSR set to: 0
 10514                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10515  01B22E  52E5               	movf	postdec1,f,c
 10516  01B230  52E5               	movf	postdec1,f,c
 10517  01B232  52E5               	movf	postdec1,f,c
 10518  01B234  52E5               	movf	postdec1,f,c
 10519  01B236  0012               	return		;funcret
 10520  01B238                     __end_of_wdtdelay:
 10521                           	opt callstack 0
 10522                           
 10523 ;; *************** function _send_lcd_data_dma *****************
 10524 ;; Defined at:
 10525 ;;		line 182 in file "eadog.c"
 10526 ;; Parameters:    Size  Location     Type
 10527 ;;  strPtr          1  [STACK] const unsigned char 
 10528 ;; Auto vars:     Size  Location     Type
 10529 ;;		None
 10530 ;; Return value:  Size  Location     Type
 10531 ;;                  1  [STACK] void 
 10532 ;; Registers used:
 10533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10534 ;; Tracked objects:
 10535 ;;		On entry : 0/0
 10536 ;;		On exit  : 3F/3B
 10537 ;;		Unchanged: 0/0
 10538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;Total ram usage:        0 bytes
 10544 ;; Hardware stack levels used:    1
 10545 ;; Hardware stack levels required when called:   24
 10546 ;; This function calls:
 10547 ;;		_printf
 10548 ;;		_ringBufS_flush
 10549 ;;		_start_lcd
 10550 ;;		_wait_lcd_set
 10551 ;; This function is called by:
 10552 ;;		_send_lcd_cmd_dma
 10553 ;;		_eaDogM_WriteStringAtPos
 10554 ;; This function uses a reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text39
 10558  01B384                     __ptext39:
 10559                           	opt callstack 0
 10560  01B384                     _send_lcd_data_dma:
 10561                           	opt callstack 4
 10562                           
 10563                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 10564                           
 10565                           ; BSR set to: 0
 10566                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10567                           ;incstack = 0
 10568  01B384  ECA2  F0E0         	call	_wait_lcd_set	;wreg free
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 10572  01B388  0E00               	movlw	0
 10573  01B38A  6EE6               	movwf	postinc1,c
 10574  01B38C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10575  01B392  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10576  01B398  EC0C  F0D5         	call	_ringBufS_flush	;wreg free
 10577  01B39C  94BC               	bcf	188,2,c	;volatile
 10578                           
 10579                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 10580  01B39E  013B               	movlb	59	; () banked
 10581  01B3A0  9FFC               	bcf	252,7,b	;volatile
 10582                           
 10583                           ; BSR set to: 59
 10584                           ;eadog.c: 189:  DMA1SSZ = 1;
 10585  01B3A2  0E00               	movlw	0
 10586  01B3A4  6FF8               	movwf	248,b	;volatile
 10587  01B3A6  0E01               	movlw	1
 10588  01B3A8  6FF7               	movwf	247,b	;volatile
 10589                           
 10590                           ; BSR set to: 59
 10591                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 10592  01B3AA  8FFC               	bsf	252,7,b	;volatile
 10593                           
 10594                           ; BSR set to: 59
 10595                           ;eadog.c: 191:  printf("%c", strPtr);
 10596                           ;stkvar	_strPtr @ sp[(0)+-1]
 10597  01B3AC  0EFF               	movlw	-1
 10598  01B3AE  50E3               	movf	plusw1,w,c
 10599  01B3B0  6EE6               	movwf	postinc1,c
 10600  01B3B2  0E00               	movlw	0
 10601  01B3B4  6EE6               	movwf	postinc1,c
 10602  01B3B6  0EF9               	movlw	low STR_44
 10603  01B3B8  6EE6               	movwf	postinc1,c
 10604  01B3BA  0EFF               	movlw	high STR_44
 10605  01B3BC  6EE6               	movwf	postinc1,c
 10606  01B3BE  0E04               	movlw	4
 10607  01B3C0  6EE6               	movwf	postinc1,c
 10608  01B3C2  EC30  F0D8         	call	_printf	;wreg free
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;eadog.c: 192:  start_lcd();
 10612  01B3C6  ECA5  F0E0         	call	_start_lcd	;wreg free
 10613                           
 10614                           ; BSR set to: 59
 10615                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10616  01B3CA  52E5               	movf	postdec1,f,c
 10617  01B3CC  0012               	return		;funcret
 10618  01B3CE                     __end_of_send_lcd_data_dma:
 10619                           	opt callstack 0
 10620                           
 10621 ;; *************** function _eaDogM_WriteString *****************
 10622 ;; Defined at:
 10623 ;;		line 151 in file "eadog.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;  strPtr          2  [STACK] PTR unsigned char 
 10626 ;;		 -> D.lcd(480), D(482), V(191), 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1  [STACK] void 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10633 ;; Tracked objects:
 10634 ;;		On entry : 3F/0
 10635 ;;		On exit  : 3F/3B
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10642 ;;Total ram usage:        0 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; Hardware stack levels required when called:   24
 10645 ;; This function calls:
 10646 ;;		_printf
 10647 ;;		_ringBufS_flush
 10648 ;;		_start_lcd
 10649 ;;		_strlen
 10650 ;;		_wait_lcd_set
 10651 ;; This function is called by:
 10652 ;;		_eaDogM_WriteStringAtPos
 10653 ;; This function uses a reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text40
 10657  01A838                     __ptext40:
 10658                           	opt callstack 0
 10659  01A838                     _eaDogM_WriteString:
 10660                           	opt callstack 4
 10661                           
 10662                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 10663                           
 10664                           ; BSR set to: 59
 10665                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10666                           ;incstack = 0
 10667  01A838  ECA2  F0E0         	call	_wait_lcd_set	;wreg free
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 10671  01A83C  0E00               	movlw	0
 10672  01A83E  6EE6               	movwf	postinc1,c
 10673  01A840  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10674  01A846  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10675  01A84C  EC0C  F0D5         	call	_ringBufS_flush	;wreg free
 10676  01A850  94BC               	bcf	188,2,c	;volatile
 10677                           
 10678                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10679                           ;stkvar	_strPtr @ sp[(0)+-2]
 10680  01A852  0EFE               	movlw	-2
 10681  01A854  006F FF8F FFE6     	movff	plusw1,postinc1
 10682  01A85A  006F FF8F FFE6     	movff	plusw1,postinc1
 10683  01A860  EC6F  F0D4         	call	_strlen	;wreg free
 10684  01A864  5002               	movf	(btemp+1)^0,w,c
 10685  01A866  E104               	bnz	u12240
 10686  01A868  0E41               	movlw	65
 10687  01A86A  5C01               	subwf	btemp^0,w,c
 10688  01A86C  A0D8               	btfss	status,0,c
 10689  01A86E  D010               	goto	l12694
 10690  01A870                     u12240:
 10691                           
 10692                           ;stkvar	_strPtr @ sp[(0)+-2]
 10693  01A870  0EFE               	movlw	-2
 10694  01A872  006F FF8C  F00B    	movff	plusw1,btemp+10
 10695  01A878  0EFF               	movlw	-1
 10696  01A87A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10697  01A880  0E40               	movlw	64
 10698  01A882  240B               	addwf	(btemp+10)^0,w,c
 10699  01A884  6ED9               	movwf	fsr2l,c
 10700  01A886  0E00               	movlw	0
 10701  01A888  200C               	addwfc	(btemp+11)^0,w,c
 10702  01A88A  6EDA               	movwf	fsr2h,c
 10703  01A88C  0E00               	movlw	0
 10704  01A88E  6EDF               	movwf	indf2,c
 10705  01A890                     l12694:
 10706                           
 10707                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 10708  01A890  013B               	movlb	59	; () banked
 10709  01A892  9FFC               	bcf	252,7,b	;volatile
 10710                           
 10711                           ; BSR set to: 59
 10712                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 10713                           ;stkvar	_strPtr @ sp[(0)+-2]
 10714  01A894  0EFE               	movlw	-2
 10715  01A896  006F FF8F FFE6     	movff	plusw1,postinc1
 10716  01A89C  006F FF8F FFE6     	movff	plusw1,postinc1
 10717  01A8A2  EC6F  F0D4         	call	_strlen	;wreg free
 10718  01A8A6  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10719  01A8AC  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10720                           
 10721                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 10722  01A8B2  013B               	movlb	59	; () banked
 10723  01A8B4  8FFC               	bsf	252,7,b	;volatile
 10724                           
 10725                           ; BSR set to: 59
 10726                           ;eadog.c: 161:  printf("%s", strPtr);
 10727                           ;stkvar	_strPtr @ sp[(0)+-2]
 10728  01A8B6  0EFE               	movlw	-2
 10729  01A8B8  006F FF8F FFE6     	movff	plusw1,postinc1
 10730  01A8BE  006F FF8F FFE6     	movff	plusw1,postinc1
 10731  01A8C4  0EFC               	movlw	low STR_43
 10732  01A8C6  6EE6               	movwf	postinc1,c
 10733  01A8C8  0EFF               	movlw	high STR_43
 10734  01A8CA  6EE6               	movwf	postinc1,c
 10735  01A8CC  0E04               	movlw	4
 10736  01A8CE  6EE6               	movwf	postinc1,c
 10737  01A8D0  EC30  F0D8         	call	_printf	;wreg free
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;eadog.c: 162:  start_lcd();
 10741  01A8D4  ECA5  F0E0         	call	_start_lcd	;wreg free
 10742                           
 10743                           ; BSR set to: 59
 10744                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10745  01A8D8  52E5               	movf	postdec1,f,c
 10746  01A8DA  52E5               	movf	postdec1,f,c
 10747  01A8DC  0012               	return		;funcret
 10748  01A8DE                     __end_of_eaDogM_WriteString:
 10749                           	opt callstack 0
 10750                           
 10751 ;; *************** function _wait_lcd_set *****************
 10752 ;; Defined at:
 10753 ;;		line 434 in file "eadog.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;		None
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1  [STACK] void 
 10760 ;; Registers used:
 10761 ;;		None
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 3F/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10771 ;;Total ram usage:        0 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:   15
 10774 ;; This function calls:
 10775 ;;		Nothing
 10776 ;; This function is called by:
 10777 ;;		_eaDogM_WriteString
 10778 ;;		_send_lcd_data_dma
 10779 ;; This function uses a reentrant model
 10780 ;;
 10781                           
 10782                           	psect	text41
 10783  01C144                     __ptext41:
 10784                           	opt callstack 0
 10785  01C144                     _wait_lcd_set:
 10786                           	opt callstack 12
 10787                           
 10788                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 10789                           
 10790                           ; BSR set to: 59
 10791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10792                           ;incstack = 0
 10793  01C144  0100               	movlb	0	; () banked
 10794  01C146  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10795                           
 10796                           ; BSR set to: 0
 10797                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10798  01C148  0012               	return		;funcret
 10799  01C14A                     __end_of_wait_lcd_set:
 10800                           	opt callstack 0
 10801                           
 10802 ;; *************** function _start_lcd *****************
 10803 ;; Defined at:
 10804 ;;		line 429 in file "eadog.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1  [STACK] void 
 10811 ;; Registers used:
 10812 ;;		None
 10813 ;; Tracked objects:
 10814 ;;		On entry : 3F/0
 10815 ;;		On exit  : 3F/3B
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10822 ;;Total ram usage:        0 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:   15
 10825 ;; This function calls:
 10826 ;;		Nothing
 10827 ;; This function is called by:
 10828 ;;		_eaDogM_WriteString
 10829 ;;		_send_lcd_data_dma
 10830 ;; This function uses a reentrant model
 10831 ;;
 10832                           
 10833                           	psect	text42
 10834  01C14A                     __ptext42:
 10835                           	opt callstack 0
 10836  01C14A                     _start_lcd:
 10837                           	opt callstack 12
 10838                           
 10839                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 10840                           
 10841                           ; BSR set to: 0
 10842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10843                           ;incstack = 0
 10844  01C14A  013B               	movlb	59	; () banked
 10845  01C14C  8DFC               	bsf	252,6,b	;volatile
 10846                           
 10847                           ; BSR set to: 59
 10848                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10849  01C14E  0012               	return		;funcret
 10850  01C150                     __end_of_start_lcd:
 10851                           	opt callstack 0
 10852                           
 10853 ;; *************** function _ringBufS_flush *****************
 10854 ;; Defined at:
 10855 ;;		line 76 in file "ringbufs.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10858 ;;		 -> ring_buf1(67), 
 10859 ;;  clearBuffer     1  [STACK] const char 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1  [STACK] void 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10866 ;; Tracked objects:
 10867 ;;		On entry : 3F/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10875 ;;Total ram usage:        0 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:   16
 10878 ;; This function calls:
 10879 ;;		_memset
 10880 ;; This function is called by:
 10881 ;;		_eaDogM_WriteString
 10882 ;;		_send_lcd_data_dma
 10883 ;; This function uses a reentrant model
 10884 ;;
 10885                           
 10886                           	psect	text43
 10887  01AA18                     __ptext43:
 10888                           	opt callstack 0
 10889  01AA18                     _ringBufS_flush:
 10890                           	opt callstack 11
 10891                           
 10892                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10893                           ;stkvar	__this @ sp[(0)+-2]
 10894                           
 10895                           ; BSR set to: 59
 10896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10897                           ;incstack = 0
 10898  01AA18  0EFE               	movlw	-2
 10899  01AA1A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10900  01AA20  0EFF               	movlw	-1
 10901  01AA22  006F FF8C  F00C    	movff	plusw1,btemp+11
 10902  01AA28  0E42               	movlw	66
 10903  01AA2A  240B               	addwf	(btemp+10)^0,w,c
 10904  01AA2C  6ED9               	movwf	fsr2l,c
 10905  01AA2E  0E00               	movlw	0
 10906  01AA30  200C               	addwfc	(btemp+11)^0,w,c
 10907  01AA32  6EDA               	movwf	fsr2h,c
 10908  01AA34  0E00               	movlw	0
 10909  01AA36  6EDF               	movwf	indf2,c
 10910                           
 10911                           ;ringbufs.c: 79:  _this->head = 0;
 10912                           ;stkvar	__this @ sp[(0)+-2]
 10913  01AA38  0EFE               	movlw	-2
 10914  01AA3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10915  01AA40  0EFF               	movlw	-1
 10916  01AA42  006F FF8C  F00C    	movff	plusw1,btemp+11
 10917  01AA48  0E40               	movlw	64
 10918  01AA4A  240B               	addwf	(btemp+10)^0,w,c
 10919  01AA4C  6ED9               	movwf	fsr2l,c
 10920  01AA4E  0E00               	movlw	0
 10921  01AA50  200C               	addwfc	(btemp+11)^0,w,c
 10922  01AA52  6EDA               	movwf	fsr2h,c
 10923  01AA54  0E00               	movlw	0
 10924  01AA56  6EDF               	movwf	indf2,c
 10925                           
 10926                           ;ringbufs.c: 80:  _this->tail = 0;
 10927                           ;stkvar	__this @ sp[(0)+-2]
 10928  01AA58  0EFE               	movlw	-2
 10929  01AA5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 10930  01AA60  0EFF               	movlw	-1
 10931  01AA62  006F FF8C  F00C    	movff	plusw1,btemp+11
 10932  01AA68  0E41               	movlw	65
 10933  01AA6A  240B               	addwf	(btemp+10)^0,w,c
 10934  01AA6C  6ED9               	movwf	fsr2l,c
 10935  01AA6E  0E00               	movlw	0
 10936  01AA70  200C               	addwfc	(btemp+11)^0,w,c
 10937  01AA72  6EDA               	movwf	fsr2h,c
 10938  01AA74  0E00               	movlw	0
 10939  01AA76  6EDF               	movwf	indf2,c
 10940                           
 10941                           ;ringbufs.c: 81:  if (clearBuffer) {
 10942                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10943  01AA78  0EFD               	movlw	-3
 10944  01AA7A  50E3               	movf	plusw1,w,c
 10945  01AA7C  B4D8               	btfsc	status,2,c
 10946  01AA7E  D011               	goto	l1588
 10947                           
 10948                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10949  01AA80  0E40               	movlw	64
 10950  01AA82  6EE6               	movwf	postinc1,c
 10951  01AA84  0E00               	movlw	0
 10952  01AA86  6EE6               	movwf	postinc1,c
 10953  01AA88  0E00               	movlw	0
 10954  01AA8A  6EE6               	movwf	postinc1,c
 10955  01AA8C  0E00               	movlw	0
 10956  01AA8E  6EE6               	movwf	postinc1,c
 10957                           
 10958                           ;stkvar	__this @ sp[(-4)+-2]
 10959  01AA90  0EFA               	movlw	-6
 10960  01AA92  006F FF8F FFE6     	movff	plusw1,postinc1
 10961  01AA98  006F FF8F FFE6     	movff	plusw1,postinc1
 10962  01AA9E  EC2A  F0B7         	call	_memset	;wreg free
 10963  01AAA2                     l1588:
 10964                           
 10965                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10966  01AAA2  52E5               	movf	postdec1,f,c
 10967  01AAA4  52E5               	movf	postdec1,f,c
 10968  01AAA6  52E5               	movf	postdec1,f,c
 10969  01AAA8  0012               	return		;funcret
 10970  01AAAA                     __end_of_ringBufS_flush:
 10971                           	opt callstack 0
 10972                           
 10973 ;; *************** function _memset *****************
 10974 ;; Defined at:
 10975 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  dest            2  [STACK] PTR void 
 10978 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10979 ;;  c               2  [STACK] int 
 10980 ;;  n               2  [STACK] unsigned int 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  s               2  [STACK] PTR unsigned char 
 10983 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10984 ;;  k               2  [STACK] unsigned int 
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  2  [STACK] PTR void 
 10987 ;; Registers used:
 10988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:   15
 11001 ;; This function calls:
 11002 ;;		Nothing
 11003 ;; This function is called by:
 11004 ;;		_ringBufS_init
 11005 ;;		_ringBufS_flush
 11006 ;; This function uses a reentrant model
 11007 ;;
 11008                           
 11009                           	psect	text44
 11010  016E54                     __ptext44:
 11011                           	opt callstack 0
 11012  016E54                     _memset:
 11013                           	opt callstack 0
 11014                           
 11015                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11016  016E54  52E6               	movf	postinc1,f,c
 11017  016E56  52E6               	movf	postinc1,f,c
 11018  016E58  52E6               	movf	postinc1,f,c
 11019  016E5A  52E6               	movf	postinc1,f,c
 11020                           
 11021                           ;stkvar	_dest @ sp[(-4)+-2]
 11022                           
 11023                           ;incstack = 0
 11024  016E5C  0EFA               	movlw	-6
 11025  016E5E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11026  016E64  0EFB               	movlw	-5
 11027  016E66  006F FF8C  F00C    	movff	plusw1,btemp+11
 11028                           
 11029                           ;stkvar	_s @ sp[(-4)+0]
 11030  016E6C  0EFD               	movlw	-3
 11031  016E6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11032  016E74  0EFC               	movlw	-4
 11033  016E76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11034                           
 11035                           ;stkvar	_n @ sp[(-4)+-6]
 11036  016E7C  0EF6               	movlw	-10
 11037  016E7E  006F FF8C  F001    	movff	plusw1,btemp
 11038  016E84  0EF7               	movlw	-9
 11039  016E86  50E3               	movf	plusw1,w,c
 11040  016E88  1001               	iorwf	btemp^0,w,c
 11041  016E8A  B4D8               	btfsc	status,2,c
 11042  016E8C  D154               	goto	u10790
 11043                           
 11044                           ;stkvar	_c @ sp[(-4)+-4]
 11045                           ;stkvar	_s @ sp[(-4)+0]
 11046  016E8E  0EFC               	movlw	-4
 11047  016E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 11048  016E96  0EFD               	movlw	-3
 11049  016E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 11050  016E9E  0EF8               	movlw	-8
 11051  016EA0  006F FF8F FFDF     	movff	plusw1,indf2
 11052                           
 11053                           ;stkvar	_c @ sp[(-4)+-4]
 11054                           ;stkvar	_n @ sp[(-4)+-6]
 11055                           ;stkvar	_s @ sp[(-4)+0]
 11056  016EA6  0EFC               	movlw	-4
 11057  016EA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11058  016EAE  0EFD               	movlw	-3
 11059  016EB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11060  016EB6  0EF6               	movlw	-10
 11061  016EB8  50E3               	movf	plusw1,w,c
 11062  016EBA  260B               	addwf	(btemp+10)^0,f,c
 11063  016EBC  0EF7               	movlw	-9
 11064  016EBE  50E3               	movf	plusw1,w,c
 11065  016EC0  220C               	addwfc	(btemp+11)^0,f,c
 11066  016EC2  0EFF               	movlw	255
 11067  016EC4  240B               	addwf	(btemp+10)^0,w,c
 11068  016EC6  6ED9               	movwf	fsr2l,c
 11069  016EC8  0EFF               	movlw	255
 11070  016ECA  200C               	addwfc	(btemp+11)^0,w,c
 11071  016ECC  6EDA               	movwf	fsr2h,c
 11072  016ECE  0EF8               	movlw	-8
 11073  016ED0  006F FF8F FFDF     	movff	plusw1,indf2
 11074                           
 11075                           ;stkvar	_n @ sp[(-4)+-6]
 11076  016ED6  0EF7               	movlw	-9
 11077  016ED8  50E3               	movf	plusw1,w,c
 11078  016EDA  E108               	bnz	l11846
 11079  016EDC  0EF6               	movlw	-10
 11080  016EDE  006F FF8C  F001    	movff	plusw1,btemp
 11081  016EE4  0E03               	movlw	3
 11082  016EE6  5E01               	subwf	btemp^0,f,c
 11083  016EE8  A0D8               	btfss	status,0,c
 11084  016EEA  D125               	goto	u10790
 11085  016EEC                     l11846:
 11086                           
 11087                           ;stkvar	_c @ sp[(-4)+-4]
 11088                           ;stkvar	_s @ sp[(-4)+0]
 11089  016EEC  0EFC               	movlw	-4
 11090  016EEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11091  016EF4  0EFD               	movlw	-3
 11092  016EF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 11093  016EFC  0E01               	movlw	1
 11094  016EFE  240B               	addwf	(btemp+10)^0,w,c
 11095  016F00  6ED9               	movwf	fsr2l,c
 11096  016F02  0E00               	movlw	0
 11097  016F04  200C               	addwfc	(btemp+11)^0,w,c
 11098  016F06  6EDA               	movwf	fsr2h,c
 11099  016F08  0EF8               	movlw	-8
 11100  016F0A  006F FF8F FFDF     	movff	plusw1,indf2
 11101                           
 11102                           ;stkvar	_c @ sp[(-4)+-4]
 11103                           ;stkvar	_s @ sp[(-4)+0]
 11104  016F10  0EFC               	movlw	-4
 11105  016F12  006F FF8C  F00B    	movff	plusw1,btemp+10
 11106  016F18  0EFD               	movlw	-3
 11107  016F1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11108  016F20  0E02               	movlw	2
 11109  016F22  240B               	addwf	(btemp+10)^0,w,c
 11110  016F24  6ED9               	movwf	fsr2l,c
 11111  016F26  0E00               	movlw	0
 11112  016F28  200C               	addwfc	(btemp+11)^0,w,c
 11113  016F2A  6EDA               	movwf	fsr2h,c
 11114  016F2C  0EF8               	movlw	-8
 11115  016F2E  006F FF8F FFDF     	movff	plusw1,indf2
 11116                           
 11117                           ;stkvar	_c @ sp[(-4)+-4]
 11118                           ;stkvar	_n @ sp[(-4)+-6]
 11119                           ;stkvar	_s @ sp[(-4)+0]
 11120  016F34  0EFC               	movlw	-4
 11121  016F36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11122  016F3C  0EFD               	movlw	-3
 11123  016F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11124  016F44  0EF6               	movlw	-10
 11125  016F46  50E3               	movf	plusw1,w,c
 11126  016F48  260B               	addwf	(btemp+10)^0,f,c
 11127  016F4A  0EF7               	movlw	-9
 11128  016F4C  50E3               	movf	plusw1,w,c
 11129  016F4E  220C               	addwfc	(btemp+11)^0,f,c
 11130  016F50  0EFE               	movlw	254
 11131  016F52  240B               	addwf	(btemp+10)^0,w,c
 11132  016F54  6ED9               	movwf	fsr2l,c
 11133  016F56  0EFF               	movlw	255
 11134  016F58  200C               	addwfc	(btemp+11)^0,w,c
 11135  016F5A  6EDA               	movwf	fsr2h,c
 11136  016F5C  0EF8               	movlw	-8
 11137  016F5E  006F FF8F FFDF     	movff	plusw1,indf2
 11138                           
 11139                           ;stkvar	_c @ sp[(-4)+-4]
 11140                           ;stkvar	_n @ sp[(-4)+-6]
 11141                           ;stkvar	_s @ sp[(-4)+0]
 11142  016F64  0EFC               	movlw	-4
 11143  016F66  006F FF8C  F00B    	movff	plusw1,btemp+10
 11144  016F6C  0EFD               	movlw	-3
 11145  016F6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11146  016F74  0EF6               	movlw	-10
 11147  016F76  50E3               	movf	plusw1,w,c
 11148  016F78  260B               	addwf	(btemp+10)^0,f,c
 11149  016F7A  0EF7               	movlw	-9
 11150  016F7C  50E3               	movf	plusw1,w,c
 11151  016F7E  220C               	addwfc	(btemp+11)^0,f,c
 11152  016F80  0EFD               	movlw	253
 11153  016F82  240B               	addwf	(btemp+10)^0,w,c
 11154  016F84  6ED9               	movwf	fsr2l,c
 11155  016F86  0EFF               	movlw	255
 11156  016F88  200C               	addwfc	(btemp+11)^0,w,c
 11157  016F8A  6EDA               	movwf	fsr2h,c
 11158  016F8C  0EF8               	movlw	-8
 11159  016F8E  006F FF8F FFDF     	movff	plusw1,indf2
 11160                           
 11161                           ;stkvar	_n @ sp[(-4)+-6]
 11162  016F94  0EF7               	movlw	-9
 11163  016F96  50E3               	movf	plusw1,w,c
 11164  016F98  E108               	bnz	l11852
 11165  016F9A  0EF6               	movlw	-10
 11166  016F9C  006F FF8C  F001    	movff	plusw1,btemp
 11167  016FA2  0E07               	movlw	7
 11168  016FA4  5E01               	subwf	btemp^0,f,c
 11169  016FA6  A0D8               	btfss	status,0,c
 11170  016FA8  D0C6               	goto	u10790
 11171  016FAA                     l11852:
 11172                           
 11173                           ;stkvar	_c @ sp[(-4)+-4]
 11174                           ;stkvar	_s @ sp[(-4)+0]
 11175  016FAA  0EFC               	movlw	-4
 11176  016FAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 11177  016FB2  0EFD               	movlw	-3
 11178  016FB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 11179  016FBA  0E03               	movlw	3
 11180  016FBC  240B               	addwf	(btemp+10)^0,w,c
 11181  016FBE  6ED9               	movwf	fsr2l,c
 11182  016FC0  0E00               	movlw	0
 11183  016FC2  200C               	addwfc	(btemp+11)^0,w,c
 11184  016FC4  6EDA               	movwf	fsr2h,c
 11185  016FC6  0EF8               	movlw	-8
 11186  016FC8  006F FF8F FFDF     	movff	plusw1,indf2
 11187                           
 11188                           ;stkvar	_c @ sp[(-4)+-4]
 11189                           ;stkvar	_n @ sp[(-4)+-6]
 11190                           ;stkvar	_s @ sp[(-4)+0]
 11191  016FCE  0EFC               	movlw	-4
 11192  016FD0  006F FF8C  F00B    	movff	plusw1,btemp+10
 11193  016FD6  0EFD               	movlw	-3
 11194  016FD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11195  016FDE  0EF6               	movlw	-10
 11196  016FE0  50E3               	movf	plusw1,w,c
 11197  016FE2  260B               	addwf	(btemp+10)^0,f,c
 11198  016FE4  0EF7               	movlw	-9
 11199  016FE6  50E3               	movf	plusw1,w,c
 11200  016FE8  220C               	addwfc	(btemp+11)^0,f,c
 11201  016FEA  0EFC               	movlw	252
 11202  016FEC  240B               	addwf	(btemp+10)^0,w,c
 11203  016FEE  6ED9               	movwf	fsr2l,c
 11204  016FF0  0EFF               	movlw	255
 11205  016FF2  200C               	addwfc	(btemp+11)^0,w,c
 11206  016FF4  6EDA               	movwf	fsr2h,c
 11207  016FF6  0EF8               	movlw	-8
 11208  016FF8  006F FF8F FFDF     	movff	plusw1,indf2
 11209                           
 11210                           ;stkvar	_n @ sp[(-4)+-6]
 11211  016FFE  0EF7               	movlw	-9
 11212  017000  50E3               	movf	plusw1,w,c
 11213  017002  E108               	bnz	l11858
 11214  017004  0EF6               	movlw	-10
 11215  017006  006F FF8C  F001    	movff	plusw1,btemp
 11216  01700C  0E09               	movlw	9
 11217  01700E  5E01               	subwf	btemp^0,f,c
 11218  017010  A0D8               	btfss	status,0,c
 11219  017012  D091               	goto	u10790
 11220  017014                     l11858:
 11221                           
 11222                           ;stkvar	_s @ sp[(-4)+0]
 11223  017014  0EFC               	movlw	-4
 11224  017016  006F FF8C  F00B    	movff	plusw1,btemp+10
 11225  01701C  1E0B               	comf	(btemp+10)^0,f,c
 11226  01701E  0EFD               	movlw	-3
 11227  017020  006F FF8C  F00C    	movff	plusw1,btemp+11
 11228  017026  1E0C               	comf	(btemp+11)^0,f,c
 11229  017028  2A0B               	incf	(btemp+10)^0,f,c
 11230  01702A  B4D8               	btfsc	status,2,c
 11231  01702C  2A0C               	incf	(btemp+11)^0,f,c
 11232  01702E  0E03               	movlw	3
 11233  017030  160B               	andwf	(btemp+10)^0,f,c
 11234  017032  0E00               	movlw	0
 11235  017034  160C               	andwf	(btemp+11)^0,f,c
 11236                           
 11237                           ;stkvar	_k @ sp[(-4)+2]
 11238  017036  0EFE               	movlw	-2
 11239  017038  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11240  01703E  0EFF               	movlw	-1
 11241  017040  0060  F033  FFE3   	movff	btemp+11,plusw1
 11242                           
 11243                           ;stkvar	_k @ sp[(-4)+2]
 11244                           ;stkvar	_s @ sp[(-4)+0]
 11245  017046  0EFC               	movlw	-4
 11246  017048  50E3               	movf	plusw1,w,c
 11247  01704A  6E01               	movwf	btemp^0,c
 11248  01704C  0EFE               	movlw	-2
 11249  01704E  50E3               	movf	plusw1,w,c
 11250  017050  2601               	addwf	btemp^0,f,c
 11251  017052  0EFC               	movlw	-4
 11252  017054  0060  F007  FFE3   	movff	btemp,plusw1
 11253  01705A  0EFD               	movlw	-3
 11254  01705C  50E3               	movf	plusw1,w,c
 11255  01705E  6E01               	movwf	btemp^0,c
 11256  017060  0EFF               	movlw	-1
 11257  017062  50E3               	movf	plusw1,w,c
 11258  017064  2201               	addwfc	btemp^0,f,c
 11259  017066  0EFD               	movlw	-3
 11260  017068  0060  F007  FFE3   	movff	btemp,plusw1
 11261                           
 11262                           ;stkvar	_k @ sp[(-4)+2]
 11263                           ;stkvar	_n @ sp[(-4)+-6]
 11264  01706E  0EF6               	movlw	-10
 11265  017070  50E3               	movf	plusw1,w,c
 11266  017072  6E01               	movwf	btemp^0,c
 11267  017074  0EFE               	movlw	-2
 11268  017076  50E3               	movf	plusw1,w,c
 11269  017078  5E01               	subwf	btemp^0,f,c
 11270  01707A  0EF6               	movlw	-10
 11271  01707C  0060  F007  FFE3   	movff	btemp,plusw1
 11272  017082  0EF7               	movlw	-9
 11273  017084  50E3               	movf	plusw1,w,c
 11274  017086  6E01               	movwf	btemp^0,c
 11275  017088  0EFF               	movlw	-1
 11276  01708A  50E3               	movf	plusw1,w,c
 11277  01708C  5A01               	subwfb	btemp^0,f,c
 11278  01708E  0EF7               	movlw	-9
 11279  017090  0060  F007  FFE3   	movff	btemp,plusw1
 11280  017096  0EFC               	movlw	252
 11281  017098  6E0B               	movwf	(btemp+10)^0,c
 11282  01709A  0EFF               	movlw	255
 11283  01709C  6E0C               	movwf	(btemp+11)^0,c
 11284                           
 11285                           ;stkvar	_n @ sp[(-4)+-6]
 11286  01709E  0EF6               	movlw	-10
 11287  0170A0  006F FF8C  F001    	movff	plusw1,btemp
 11288  0170A6  500B               	movf	(btemp+10)^0,w,c
 11289  0170A8  1601               	andwf	btemp^0,f,c
 11290  0170AA  0EF6               	movlw	-10
 11291  0170AC  0060  F007  FFE3   	movff	btemp,plusw1
 11292  0170B2  0EF7               	movlw	-9
 11293  0170B4  006F FF8C  F001    	movff	plusw1,btemp
 11294  0170BA  500C               	movf	(btemp+11)^0,w,c
 11295  0170BC  1601               	andwf	btemp^0,f,c
 11296  0170BE  0EF7               	movlw	-9
 11297  0170C0  D02E               	goto	L9
 11298  0170C2                     l11866:
 11299                           
 11300                           ;stkvar	_c @ sp[(-4)+-4]
 11301                           ;stkvar	_s @ sp[(-4)+0]
 11302  0170C2  0EFC               	movlw	-4
 11303  0170C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11304  0170CA  0EFD               	movlw	-3
 11305  0170CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11306  0170D2  0EF8               	movlw	-8
 11307  0170D4  006F FF8F FFDF     	movff	plusw1,indf2
 11308                           
 11309                           ;stkvar	_n @ sp[(-4)+-6]
 11310  0170DA  0EF6               	movlw	-10
 11311  0170DC  006F FF8C  F001    	movff	plusw1,btemp
 11312  0170E2  0E01               	movlw	1
 11313  0170E4  5E01               	subwf	btemp^0,f,c
 11314  0170E6  0EF6               	movlw	-10
 11315  0170E8  0060  F007  FFE3   	movff	btemp,plusw1
 11316  0170EE  0EF7               	movlw	-9
 11317  0170F0  006F FF8C  F001    	movff	plusw1,btemp
 11318  0170F6  0E00               	movlw	0
 11319  0170F8  5A01               	subwfb	btemp^0,f,c
 11320  0170FA  0EF7               	movlw	-9
 11321  0170FC  0060  F007  FFE3   	movff	btemp,plusw1
 11322                           
 11323                           ;stkvar	_s @ sp[(-4)+0]
 11324  017102  0EFC               	movlw	-4
 11325  017104  50E3               	movf	plusw1,w,c
 11326  017106  0F01               	addlw	1
 11327  017108  6E01               	movwf	btemp^0,c
 11328  01710A  0EFC               	movlw	-4
 11329  01710C  0060  F007  FFE3   	movff	btemp,plusw1
 11330  017112  6A01               	clrf	btemp^0,c
 11331  017114  0EFD               	movlw	-3
 11332  017116  50E3               	movf	plusw1,w,c
 11333  017118  2001               	addwfc	btemp^0,w,c
 11334  01711A  6E01               	movwf	btemp^0,c
 11335  01711C  0EFD               	movlw	-3
 11336  01711E                     L9:
 11337  01711E  0060  F007  FFE3   	movff	btemp,plusw1
 11338                           
 11339                           ;stkvar	_n @ sp[(-4)+-6]
 11340  017124  0EF6               	movlw	-10
 11341  017126  006F FF8C  F001    	movff	plusw1,btemp
 11342  01712C  0EF7               	movlw	-9
 11343  01712E  50E3               	movf	plusw1,w,c
 11344  017130  1001               	iorwf	btemp^0,w,c
 11345  017132  A4D8               	btfss	status,2,c
 11346  017134  D7C6               	goto	l11866
 11347  017136                     u10790:
 11348                           
 11349                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11350  017136  0EF6               	movlw	246
 11351  017138  26E1               	addwf	fsr1l,f,c
 11352  01713A  0EFF               	movlw	255
 11353  01713C  22E2               	addwfc	fsr1h,f,c
 11354  01713E  0012               	return		;funcret
 11355  017140                     __end_of_memset:
 11356                           	opt callstack 0
 11357                           
 11358 ;; *************** function _printf *****************
 11359 ;; Defined at:
 11360 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  fmt             2  [STACK] PTR const unsigned char 
 11363 ;;		 -> STR_44(3), STR_43(3), 
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;  ap              2  [STACK] PTR void [1]
 11366 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11367 ;;  ret             2    0        int 
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  2  [STACK] int 
 11370 ;; Registers used:
 11371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11372 ;; Tracked objects:
 11373 ;;		On entry : 3F/3B
 11374 ;;		On exit  : 3F/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;Total ram usage:        0 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:   23
 11384 ;; This function calls:
 11385 ;;		_vfprintf
 11386 ;; This function is called by:
 11387 ;;		_eaDogM_WriteString
 11388 ;;		_send_lcd_data_dma
 11389 ;; This function uses a reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text45
 11393  01B060                     __ptext45:
 11394                           	opt callstack 0
 11395  01B060                     _printf:
 11396                           	opt callstack 0
 11397                           
 11398                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11399  01B060  52E6               	movf	postinc1,f,c
 11400  01B062  52E6               	movf	postinc1,f,c
 11401                           
 11402                           ;stkvar	?_printf @ sp[(-2)+-3]
 11403                           
 11404                           ;incstack = 0
 11405  01B064  0EFB               	movlw	251
 11406  01B066  24E1               	addwf	fsr1l,w,c
 11407  01B068  6E0B               	movwf	(btemp+10)^0,c
 11408  01B06A  0EFF               	movlw	255
 11409  01B06C  20E2               	addwfc	fsr1h,w,c
 11410  01B06E  6E0C               	movwf	(btemp+11)^0,c
 11411                           
 11412                           ;stkvar	_ap @ sp[(-2)+0]
 11413  01B070  0EFF               	movlw	-1
 11414  01B072  0060  F033  FFE3   	movff	btemp+11,plusw1
 11415  01B078  0EFE               	movlw	-2
 11416  01B07A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11417                           
 11418                           ;stkvar	_ap @ sp[(-2)+0]
 11419  01B080  0EFE               	movlw	254
 11420  01B082  24E1               	addwf	fsr1l,w,c
 11421  01B084  6E01               	movwf	btemp^0,c
 11422  01B086  0EFF               	movlw	255
 11423  01B088  20E2               	addwfc	fsr1h,w,c
 11424  01B08A  6E02               	movwf	(btemp+1)^0,c
 11425  01B08C  0060  F007  FFE6   	movff	btemp,postinc1
 11426  01B092  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11427                           
 11428                           ;stkvar	_fmt @ sp[(-4)+-3]
 11429  01B098  0EF9               	movlw	-7
 11430  01B09A  006F FF8F FFE6     	movff	plusw1,postinc1
 11431  01B0A0  006F FF8F FFE6     	movff	plusw1,postinc1
 11432  01B0A6  0E00               	movlw	0
 11433  01B0A8  6EE6               	movwf	postinc1,c
 11434  01B0AA  0E00               	movlw	0
 11435  01B0AC  6EE6               	movwf	postinc1,c
 11436  01B0AE  EC1D  F0D3         	call	_vfprintf	;wreg free
 11437                           
 11438                           ; BSR set to: 0
 11439                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11440  01B0B2  52E5               	movf	postdec1,f,c
 11441  01B0B4  52E5               	movf	postdec1,f,c
 11442  01B0B6  52E5               	movf	postdec1,f,c
 11443  01B0B8  50E7               	movf	indf1,w,c
 11444  01B0BA  5EE1               	subwf	fsr1l,f,c
 11445  01B0BC  0E00               	movlw	0
 11446  01B0BE  5AE2               	subwfb	fsr1h,f,c
 11447  01B0C0  0012               	return		;funcret
 11448  01B0C2                     __end_of_printf:
 11449                           	opt callstack 0
 11450                           
 11451 ;; *************** function _vfprintf *****************
 11452 ;; Defined at:
 11453 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11456 ;;		 -> f(6), NULL(0), 
 11457 ;;  fmt             2  [STACK] PTR const unsigned char 
 11458 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11459 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11460 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11461 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11462 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11463 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11464 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11465 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11466 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11467 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11468 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11469 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11470 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11471 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11472 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11473 ;;  ap              2  [STACK] PTR PTR void 
 11474 ;;		 -> ap(2), ap(2), 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  cfmt            2  [STACK] PTR unsigned char 
 11477 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11478 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11479 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11480 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11481 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 11482 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 11483 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 11484 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 11485 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 11486 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 11487 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11488 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11489 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11490 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11491 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  2  [STACK] int 
 11494 ;; Registers used:
 11495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 3F/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:   22
 11508 ;; This function calls:
 11509 ;;		_vfpfcnvrt
 11510 ;; This function is called by:
 11511 ;;		_sprintf
 11512 ;;		_printf
 11513 ;; This function uses a reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text46
 11517  01A63A                     __ptext46:
 11518                           	opt callstack 0
 11519  01A63A                     _vfprintf:
 11520                           	opt callstack 0
 11521                           
 11522                           ; BSR set to: 0
 11523                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11524  01A63A  52E6               	movf	postinc1,f,c
 11525  01A63C  52E6               	movf	postinc1,f,c
 11526                           
 11527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11528                           ;stkvar	_fmt @ sp[(-2)+-4]
 11529                           
 11530                           ;incstack = 0
 11531 ;; hardware stack exceeded
 11532  01A63E  0EFA               	movlw	-6
 11533  01A640  006F FF8C  F00B    	movff	plusw1,btemp+10
 11534  01A646  0EFB               	movlw	-5
 11535  01A648  006F FF8C  F00C    	movff	plusw1,btemp+11
 11536                           
 11537                           ;stkvar	_cfmt @ sp[(-2)+0]
 11538  01A64E  0EFF               	movlw	-1
 11539  01A650  0060  F033  FFE3   	movff	btemp+11,plusw1
 11540  01A656  0EFE               	movlw	-2
 11541  01A658  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11542                           
 11543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11544  01A65E  0100               	movlb	0	; () banked
 11545  01A660  6BC0               	clrf	_nout& (0+255),b
 11546  01A662  6BC1               	clrf	(_nout+1)& (0+255),b
 11547                           
 11548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11549  01A664  D021               	goto	l12716
 11550  01A666                     l12714:
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11554                           ;stkvar	_ap @ sp[(-2)+-6]
 11555  01A666  0EF8               	movlw	-8
 11556  01A668  006F FF8F FFE6     	movff	plusw1,postinc1
 11557  01A66E  006F FF8F FFE6     	movff	plusw1,postinc1
 11558                           
 11559                           ;stkvar	_cfmt @ sp[(-4)+0]
 11560  01A674  0EFC               	movlw	252
 11561  01A676  24E1               	addwf	fsr1l,w,c
 11562  01A678  6E01               	movwf	btemp^0,c
 11563  01A67A  0EFF               	movlw	255
 11564  01A67C  20E2               	addwfc	fsr1h,w,c
 11565  01A67E  6E02               	movwf	(btemp+1)^0,c
 11566  01A680  0060  F007  FFE6   	movff	btemp,postinc1
 11567  01A686  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11568                           
 11569                           ;stkvar	_fp @ sp[(-6)+-2]
 11570  01A68C  0EF8               	movlw	-8
 11571  01A68E  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  01A694  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  01A69A  ECD0  F091         	call	_vfpfcnvrt	;wreg free
 11574  01A69E  5001               	movf	btemp^0,w,c
 11575  01A6A0  0100               	movlb	0	; () banked
 11576  01A6A2  27C0               	addwf	_nout& (0+255),f,b
 11577  01A6A4  5002               	movf	(btemp+1)^0,w,c
 11578  01A6A6  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11579  01A6A8                     l12716:
 11580                           
 11581                           ; BSR set to: 0
 11582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11583                           ;stkvar	_cfmt @ sp[(-2)+0]
 11584  01A6A8  50E1               	movf	fsr1l,w,c
 11585  01A6AA  0FFE               	addlw	-2
 11586  01A6AC  6ED9               	movwf	fsr2l,c
 11587  01A6AE  50E2               	movf	fsr1h,w,c
 11588  01A6B0  6EDA               	movwf	fsr2h,c
 11589  01A6B2  0EFF               	movlw	255
 11590  01A6B4  22DA               	addwfc	fsr2h,f,c
 11591  01A6B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11592  01A6BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11593  01A6C2                     	if	0	;tblptru may be non-zero
 11594  01A6C2                     	endif
 11595  01A6C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11596  01A6C2  0E00               	movlw	low (__mediumconst shr (0+16))
 11597  01A6C4  6EF8               	movwf	tblptru,c
 11598  01A6C6                     	endif
 11599  01A6C6  0008               	tblrd		*
 11600  01A6C8  50F5               	movf	tablat,w,c
 11601  01A6CA  0900               	iorlw	0
 11602  01A6CC  A4D8               	btfss	status,2,c
 11603  01A6CE  D7CB               	goto	l12714
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11607  01A6D0  0060  F300  F001   	movff	_nout,btemp
 11608  01A6D6  0060  F304  F002   	movff	_nout+1,btemp+1
 11609                           
 11610                           ; BSR set to: 0
 11611                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11612  01A6DC  0EF8               	movlw	248
 11613  01A6DE  26E1               	addwf	fsr1l,f,c
 11614  01A6E0  0EFF               	movlw	255
 11615  01A6E2  22E2               	addwfc	fsr1h,f,c
 11616  01A6E4  0012               	return		;funcret
 11617  01A6E6                     __end_of_vfprintf:
 11618                           	opt callstack 0
 11619                           
 11620 ;; *************** function _vfpfcnvrt *****************
 11621 ;; Defined at:
 11622 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11625 ;;		 -> f(6), NULL(0), 
 11626 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11627 ;;		 -> cfmt(2), 
 11628 ;;  ap              2  [STACK] PTR PTR void 
 11629 ;;		 -> ap(2), ap(2), 
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;  llu             8  [STACK] unsigned long long 
 11632 ;;  ll              8  [STACK] long long 
 11633 ;;  f               4  [STACK] long long 
 11634 ;;  ct              3  [STACK] unsigned char [3]
 11635 ;;  vp              3    0        PTR void 
 11636 ;;  cp              2  [STACK] PTR unsigned char 
 11637 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 11638 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 11639 ;;		 -> V(191), 
 11640 ;;  i               2    0        int 
 11641 ;;  done            2    0        int 
 11642 ;;  c               1  [STACK] unsigned char 
 11643 ;; Return value:  Size  Location     Type
 11644 ;;                  2  [STACK] int 
 11645 ;; Registers used:
 11646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11656 ;;Total ram usage:        0 bytes
 11657 ;; Hardware stack levels used:    1
 11658 ;; Hardware stack levels required when called:   21
 11659 ;; This function calls:
 11660 ;;		_atoi
 11661 ;;		_ctoa
 11662 ;;		_dtoa
 11663 ;;		_efgtoa
 11664 ;;		_fputc
 11665 ;;		_isdigit
 11666 ;;		_isupper
 11667 ;;		_stoa
 11668 ;;		_strncmp
 11669 ;;		_tolower
 11670 ;;		_utoa
 11671 ;;		_xtoa
 11672 ;; This function is called by:
 11673 ;;		_vfprintf
 11674 ;; This function uses a reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text47
 11678  0123A0                     __ptext47:
 11679                           	opt callstack 0
 11680  0123A0                     _vfpfcnvrt:
 11681                           	opt callstack 0
 11682                           
 11683                           ; BSR set to: 0
 11684                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11685  0123A0  0E20               	movlw	32
 11686  0123A2  26E1               	addwf	fsr1l,f,c
 11687  0123A4  0E00               	movlw	0
 11688  0123A6  22E2               	addwfc	fsr1h,f,c
 11689                           
 11690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11691                           ;stkvar	_fmt @ sp[(-32)+-4]
 11692                           
 11693                           ;incstack = 0
 11694 ;; hardware stack exceeded
 11695  0123A8  0EDC               	movlw	-36
 11696  0123AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11697  0123B0  0EDD               	movlw	-35
 11698  0123B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11699  0123B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11700  0123BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11701  0123C4                     	if	0	;tblptru may be non-zero
 11702  0123C4                     	endif
 11703  0123C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11704  0123C4  0E00               	movlw	low (__mediumconst shr (0+16))
 11705  0123C6  6EF8               	movwf	tblptru,c
 11706  0123C8                     	endif
 11707  0123C8  0008               	tblrd		*
 11708  0123CA  50F5               	movf	tablat,w,c
 11709  0123CC  0A25               	xorlw	37
 11710  0123CE  A4D8               	btfss	status,2,c
 11711  0123D0  EF77  F099         	goto	l12676
 11712                           
 11713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11714                           ;stkvar	_fmt @ sp[(-32)+-4]
 11715  0123D4  0EDC               	movlw	-36
 11716  0123D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11717  0123DC  0EDD               	movlw	-35
 11718  0123DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11719  0123E4  2ADE               	incf	postinc2,f,c
 11720  0123E6  0E00               	movlw	0
 11721  0123E8  22DD               	addwfc	postdec2,f,c
 11722                           
 11723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11724  0123EA  6A3A               	clrf	_width^0,c
 11725  0123EC  6A3B               	clrf	(_width+1)^0,c
 11726  0123EE  6A3E               	clrf	_flags^0,c
 11727  0123F0  6A3F               	clrf	(_flags+1)^0,c
 11728                           
 11729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11730  0123F2  683C               	setf	_prec^0,c
 11731  0123F4  683D               	setf	(_prec+1)^0,c
 11732                           
 11733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11734                           ;stkvar	_fmt @ sp[(-32)+-4]
 11735  0123F6  0EDC               	movlw	-36
 11736  0123F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11737  0123FE  0EDD               	movlw	-35
 11738  012400  006F FF8F FFDA     	movff	plusw1,fsr2h
 11739  012406  006F FF7B FFF6     	movff	postinc2,tblptrl
 11740  01240C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11741  012412                     	if	0	;tblptru may be non-zero
 11742  012412                     	endif
 11743  012412                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11744  012412  0E00               	movlw	low (__mediumconst shr (0+16))
 11745  012414  6EF8               	movwf	tblptru,c
 11746  012416                     	endif
 11747  012416  0008               	tblrd		*
 11748  012418  50F5               	movf	tablat,w,c
 11749  01241A  0A2A               	xorlw	42
 11750  01241C  A4D8               	btfss	status,2,c
 11751  01241E  D031               	goto	l12494
 11752                           
 11753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11754                           ;stkvar	_fmt @ sp[(-32)+-4]
 11755  012420  0EDC               	movlw	-36
 11756  012422  006F FF8F FFD9     	movff	plusw1,fsr2l
 11757  012428  0EDD               	movlw	-35
 11758  01242A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11759  012430  2ADE               	incf	postinc2,f,c
 11760  012432  0E00               	movlw	0
 11761  012434  22DD               	addwfc	postdec2,f,c
 11762                           
 11763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11764                           ;stkvar	_ap @ sp[(-32)+-6]
 11765  012436  0EDA               	movlw	-38
 11766  012438  006F FF8F FFD9     	movff	plusw1,fsr2l
 11767  01243E  0EDB               	movlw	-37
 11768  012440  006F FF8F FFDA     	movff	plusw1,fsr2h
 11769  012446  0E02               	movlw	2
 11770  012448  5EDE               	subwf	postinc2,f,c
 11771  01244A  0E00               	movlw	0
 11772  01244C  5ADD               	subwfb	postdec2,f,c
 11773  01244E  006F FF78  F00B    	movff	postinc2,btemp+10
 11774  012454  006F FF74  F00C    	movff	postdec2,btemp+11
 11775  01245A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11776  012460  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11777  012466  006F FF78  F03A    	movff	postinc2,_width
 11778  01246C  006F FF74  F03B    	movff	postdec2,_width+1
 11779                           
 11780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11781  012472  AE3B               	btfss	(_width+1)^0,7,c
 11782  012474  D066               	goto	u11980
 11783                           
 11784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11785  012476  803E               	bsf	_flags^0,0,c
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11788  012478  6C3A               	negf	_width^0,c
 11789  01247A  1E3B               	comf	(_width+1)^0,f,c
 11790  01247C  B0D8               	btfsc	status,0,c
 11791  01247E  2A3B               	incf	(_width+1)^0,f,c
 11792  012480  D060               	goto	u11980
 11793  012482                     l12494:
 11794                           
 11795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11796                           ;stkvar	_fmt @ sp[(-32)+-4]
 11797  012482  0EDC               	movlw	-36
 11798  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11799  01248A  0EDD               	movlw	-35
 11800  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11801  012492  006F FF78  F00B    	movff	postinc2,btemp+10
 11802  012498  006F FF74  F00C    	movff	postdec2,btemp+11
 11803  01249E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11804  0124A4  0060  F033  FFE6   	movff	btemp+11,postinc1
 11805  0124AA  ECA7  F0BC         	call	_atoi	;wreg free
 11806  0124AE  0060  F004  F03A   	movff	btemp,_width
 11807  0124B4  0060  F008  F03B   	movff	btemp+1,_width+1
 11808                           
 11809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11810  0124BA  D00B               	goto	l12498
 11811  0124BC                     l12496:
 11812                           
 11813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11814                           ;stkvar	_fmt @ sp[(-32)+-4]
 11815  0124BC  0EDC               	movlw	-36
 11816  0124BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11817  0124C4  0EDD               	movlw	-35
 11818  0124C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11819  0124CC  2ADE               	incf	postinc2,f,c
 11820  0124CE  0E00               	movlw	0
 11821  0124D0  22DD               	addwfc	postdec2,f,c
 11822  0124D2                     l12498:
 11823  0124D2  0ED0               	movlw	208
 11824  0124D4  6E0B               	movwf	(btemp+10)^0,c
 11825  0124D6  0EFF               	movlw	255
 11826  0124D8  6E0C               	movwf	(btemp+11)^0,c
 11827                           
 11828                           ;stkvar	_fmt @ sp[(-32)+-4]
 11829  0124DA  0EDC               	movlw	-36
 11830  0124DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11831  0124E2  0EDD               	movlw	-35
 11832  0124E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11833  0124EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11834  0124F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11835  0124F6                     	if	0	;tblptru may be non-zero
 11836  0124F6                     	endif
 11837  0124F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11838  0124F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11839  0124F8  6EF8               	movwf	tblptru,c
 11840  0124FA                     	endif
 11841  0124FA  0008               	tblrd		*
 11842  0124FC  50F5               	movf	tablat,w,c
 11843  0124FE  6E09               	movwf	(btemp+8)^0,c
 11844  012500  6A0A               	clrf	(btemp+9)^0,c
 11845  012502  500B               	movf	(btemp+10)^0,w,c
 11846  012504  2609               	addwf	(btemp+8)^0,f,c
 11847  012506  500C               	movf	(btemp+11)^0,w,c
 11848  012508  220A               	addwfc	(btemp+9)^0,f,c
 11849  01250A  500A               	movf	(btemp+9)^0,w,c
 11850  01250C  E106               	bnz	u11960
 11851  01250E  0E0A               	movlw	10
 11852  012510  5C09               	subwf	(btemp+8)^0,w,c
 11853  012512  B0D8               	btfsc	status,0,c
 11854  012514  D002               	goto	u11960
 11855  012516  0E01               	movlw	1
 11856  012518  D001               	goto	u11970
 11857  01251A                     u11960:
 11858  01251A  0E00               	movlw	0
 11859  01251C                     u11970:
 11860  01251C  6E0B               	movwf	(btemp+10)^0,c
 11861  01251E  6A0C               	clrf	(btemp+11)^0,c
 11862                           
 11863                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11864  012520  0EE4               	movlw	-28
 11865  012522  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11866  012528  0EE5               	movlw	-27
 11867  01252A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11868                           
 11869                           ;stkvar	_vfpfcnvrt$5570 @ sp[(-32)+4]
 11870  012530  0EE4               	movlw	-28
 11871  012532  006F FF8C  F001    	movff	plusw1,btemp
 11872  012538  0EE5               	movlw	-27
 11873  01253A  50E3               	movf	plusw1,w,c
 11874  01253C  1001               	iorwf	btemp^0,w,c
 11875  01253E  A4D8               	btfss	status,2,c
 11876  012540  D7BD               	goto	l12496
 11877  012542                     u11980:
 11878                           
 11879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11880                           ;stkvar	_fmt @ sp[(-32)+-4]
 11881  012542  0EDC               	movlw	-36
 11882  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 11883  01254A  0EDD               	movlw	-35
 11884  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11885  012552  006F FF7B FFF6     	movff	postinc2,tblptrl
 11886  012558  006F FF77 FFF7     	movff	postdec2,tblptrh
 11887  01255E                     	if	0	;tblptru may be non-zero
 11888  01255E                     	endif
 11889  01255E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11890  01255E  0E00               	movlw	low (__mediumconst shr (0+16))
 11891  012560  6EF8               	movwf	tblptru,c
 11892  012562                     	endif
 11893  012562  0008               	tblrd		*
 11894  012564  50F5               	movf	tablat,w,c
 11895  012566  0A2E               	xorlw	46
 11896  012568  A4D8               	btfss	status,2,c
 11897  01256A  D0AC               	goto	u12030
 11898                           
 11899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11900  01256C  6A3C               	clrf	_prec^0,c
 11901  01256E  6A3D               	clrf	(_prec+1)^0,c
 11902                           
 11903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11904                           ;stkvar	_fmt @ sp[(-32)+-4]
 11905  012570  0EDC               	movlw	-36
 11906  012572  006F FF8F FFD9     	movff	plusw1,fsr2l
 11907  012578  0EDD               	movlw	-35
 11908  01257A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11909  012580  2ADE               	incf	postinc2,f,c
 11910  012582  0E00               	movlw	0
 11911  012584  22DD               	addwfc	postdec2,f,c
 11912                           
 11913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11914                           ;stkvar	_fmt @ sp[(-32)+-4]
 11915  012586  0EDC               	movlw	-36
 11916  012588  006F FF8F FFD9     	movff	plusw1,fsr2l
 11917  01258E  0EDD               	movlw	-35
 11918  012590  006F FF8F FFDA     	movff	plusw1,fsr2h
 11919  012596  006F FF7B FFF6     	movff	postinc2,tblptrl
 11920  01259C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11921  0125A2                     	if	0	;tblptru may be non-zero
 11922  0125A2                     	endif
 11923  0125A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11924  0125A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11925  0125A4  6EF8               	movwf	tblptru,c
 11926  0125A6                     	endif
 11927  0125A6  0008               	tblrd		*
 11928  0125A8  50F5               	movf	tablat,w,c
 11929  0125AA  0A2A               	xorlw	42
 11930  0125AC  A4D8               	btfss	status,2,c
 11931  0125AE  D02A               	goto	l12516
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11934                           ;stkvar	_fmt @ sp[(-32)+-4]
 11935  0125B0  0EDC               	movlw	-36
 11936  0125B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11937  0125B8  0EDD               	movlw	-35
 11938  0125BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11939  0125C0  2ADE               	incf	postinc2,f,c
 11940  0125C2  0E00               	movlw	0
 11941  0125C4  22DD               	addwfc	postdec2,f,c
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11944                           ;stkvar	_ap @ sp[(-32)+-6]
 11945  0125C6  0EDA               	movlw	-38
 11946  0125C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11947  0125CE  0EDB               	movlw	-37
 11948  0125D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11949  0125D6  0E02               	movlw	2
 11950  0125D8  5EDE               	subwf	postinc2,f,c
 11951  0125DA  0E00               	movlw	0
 11952  0125DC  5ADD               	subwfb	postdec2,f,c
 11953  0125DE  006F FF78  F00B    	movff	postinc2,btemp+10
 11954  0125E4  006F FF74  F00C    	movff	postdec2,btemp+11
 11955  0125EA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11956  0125F0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11957  0125F6  006F FF78  F03C    	movff	postinc2,_prec
 11958  0125FC  006F FF74  F03D    	movff	postdec2,_prec+1
 11959                           
 11960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11961  012602  D060               	goto	u12030
 11962  012604                     l12516:
 11963                           
 11964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11965                           ;stkvar	_fmt @ sp[(-32)+-4]
 11966  012604  0EDC               	movlw	-36
 11967  012606  006F FF8F FFD9     	movff	plusw1,fsr2l
 11968  01260C  0EDD               	movlw	-35
 11969  01260E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11970  012614  006F FF78  F00B    	movff	postinc2,btemp+10
 11971  01261A  006F FF74  F00C    	movff	postdec2,btemp+11
 11972  012620  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11973  012626  0060  F033  FFE6   	movff	btemp+11,postinc1
 11974  01262C  ECA7  F0BC         	call	_atoi	;wreg free
 11975  012630  0060  F004  F03C   	movff	btemp,_prec
 11976  012636  0060  F008  F03D   	movff	btemp+1,_prec+1
 11977                           
 11978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11979  01263C  D00B               	goto	l12520
 11980  01263E                     l12518:
 11981                           
 11982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11983                           ;stkvar	_fmt @ sp[(-32)+-4]
 11984  01263E  0EDC               	movlw	-36
 11985  012640  006F FF8F FFD9     	movff	plusw1,fsr2l
 11986  012646  0EDD               	movlw	-35
 11987  012648  006F FF8F FFDA     	movff	plusw1,fsr2h
 11988  01264E  2ADE               	incf	postinc2,f,c
 11989  012650  0E00               	movlw	0
 11990  012652  22DD               	addwfc	postdec2,f,c
 11991  012654                     l12520:
 11992  012654  0ED0               	movlw	208
 11993  012656  6E0B               	movwf	(btemp+10)^0,c
 11994  012658  0EFF               	movlw	255
 11995  01265A  6E0C               	movwf	(btemp+11)^0,c
 11996                           
 11997                           ;stkvar	_fmt @ sp[(-32)+-4]
 11998  01265C  0EDC               	movlw	-36
 11999  01265E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12000  012664  0EDD               	movlw	-35
 12001  012666  006F FF8F FFDA     	movff	plusw1,fsr2h
 12002  01266C  006F FF7B FFF6     	movff	postinc2,tblptrl
 12003  012672  006F FF77 FFF7     	movff	postdec2,tblptrh
 12004  012678                     	if	0	;tblptru may be non-zero
 12005  012678                     	endif
 12006  012678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12007  012678  0E00               	movlw	low (__mediumconst shr (0+16))
 12008  01267A  6EF8               	movwf	tblptru,c
 12009  01267C                     	endif
 12010  01267C  0008               	tblrd		*
 12011  01267E  50F5               	movf	tablat,w,c
 12012  012680  6E09               	movwf	(btemp+8)^0,c
 12013  012682  6A0A               	clrf	(btemp+9)^0,c
 12014  012684  500B               	movf	(btemp+10)^0,w,c
 12015  012686  2609               	addwf	(btemp+8)^0,f,c
 12016  012688  500C               	movf	(btemp+11)^0,w,c
 12017  01268A  220A               	addwfc	(btemp+9)^0,f,c
 12018  01268C  500A               	movf	(btemp+9)^0,w,c
 12019  01268E  E106               	bnz	u12010
 12020  012690  0E0A               	movlw	10
 12021  012692  5C09               	subwf	(btemp+8)^0,w,c
 12022  012694  B0D8               	btfsc	status,0,c
 12023  012696  D002               	goto	u12010
 12024  012698  0E01               	movlw	1
 12025  01269A  D001               	goto	u12020
 12026  01269C                     u12010:
 12027  01269C  0E00               	movlw	0
 12028  01269E                     u12020:
 12029  01269E  6E0B               	movwf	(btemp+10)^0,c
 12030  0126A0  6A0C               	clrf	(btemp+11)^0,c
 12031                           
 12032                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12033  0126A2  0EE0               	movlw	-32
 12034  0126A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12035  0126AA  0EE1               	movlw	-31
 12036  0126AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12037                           
 12038                           ;stkvar	_vfpfcnvrt$5571 @ sp[(-32)+0]
 12039  0126B2  0EE0               	movlw	-32
 12040  0126B4  006F FF8C  F001    	movff	plusw1,btemp
 12041  0126BA  0EE1               	movlw	-31
 12042  0126BC  50E3               	movf	plusw1,w,c
 12043  0126BE  1001               	iorwf	btemp^0,w,c
 12044  0126C0  A4D8               	btfss	status,2,c
 12045  0126C2  D7BD               	goto	l12518
 12046  0126C4                     u12030:
 12047                           
 12048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12049                           ;stkvar	_fmt @ sp[(-32)+-4]
 12050  0126C4  0EDC               	movlw	-36
 12051  0126C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12052  0126CC  0EDD               	movlw	-35
 12053  0126CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12054  0126D4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12055  0126DA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12056  0126E0                     	if	0	;tblptru may be non-zero
 12057  0126E0                     	endif
 12058  0126E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12059  0126E0  0E00               	movlw	low (__mediumconst shr (0+16))
 12060  0126E2  6EF8               	movwf	tblptru,c
 12061  0126E4                     	endif
 12062  0126E4  0008               	tblrd		*
 12063  0126E6  50F5               	movf	tablat,w,c
 12064  0126E8  6EE6               	movwf	postinc1,c
 12065  0126EA  0E00               	movlw	0
 12066  0126EC  6EE6               	movwf	postinc1,c
 12067  0126EE  EC6C  F0D6         	call	_tolower	;wreg free
 12068                           
 12069                           ;stkvar	_ct @ sp[(-32)+26]
 12070  0126F2  0EFA               	movlw	-6
 12071  0126F4  0060  F007  FFE3   	movff	btemp,plusw1
 12072                           
 12073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12074                           ;stkvar	_ct @ sp[(-32)+26]
 12075  0126FA  0EFA               	movlw	-6
 12076  0126FC  50E3               	movf	plusw1,w,c
 12077  0126FE  B4D8               	btfsc	status,2,c
 12078  012700  D05B               	goto	l12536
 12079                           
 12080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12081                           ;stkvar	_ct @ sp[(-32)+26]
 12082  012702  0EFB               	movlw	251
 12083  012704  24E1               	addwf	fsr1l,w,c
 12084  012706  6ED9               	movwf	fsr2l,c
 12085  012708  0EFF               	movlw	255
 12086  01270A  20E2               	addwfc	fsr1h,w,c
 12087  01270C  6EDA               	movwf	fsr2h,c
 12088                           
 12089                           ;stkvar	_fmt @ sp[(-32)+-4]
 12090  01270E  0EDC               	movlw	-36
 12091  012710  006F FF8F FFE9     	movff	plusw1,fsr0l
 12092  012716  0EDD               	movlw	-35
 12093  012718  006F FF8F FFEA     	movff	plusw1,fsr0h
 12094  01271E  006F FFB8  F00B    	movff	postinc0,btemp+10
 12095  012724  006F FFB4  F00C    	movff	postdec0,btemp+11
 12096  01272A  0E01               	movlw	1
 12097  01272C  260B               	addwf	(btemp+10)^0,f,c
 12098  01272E  0E00               	movlw	0
 12099  012730  220C               	addwfc	(btemp+11)^0,f,c
 12100  012732  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12101  012738  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12102  01273E                     	if	0	;tblptru may be non-zero
 12103  01273E                     	endif
 12104  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12105  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 12106  012740  6EF8               	movwf	tblptru,c
 12107  012742                     	endif
 12108  012742  0008               	tblrd		*
 12109  012744  50F5               	movf	tablat,w,c
 12110  012746  6EE6               	movwf	postinc1,c
 12111  012748  0E00               	movlw	0
 12112  01274A  6EE6               	movwf	postinc1,c
 12113  01274C  EC6C  F0D6         	call	_tolower	;wreg free
 12114  012750  5001               	movf	btemp^0,w,c
 12115  012752  6EDF               	movwf	indf2,c
 12116                           
 12117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12118                           ;stkvar	_ct @ sp[(-32)+26]
 12119  012754  0EFB               	movlw	251
 12120  012756  24E1               	addwf	fsr1l,w,c
 12121  012758  6ED9               	movwf	fsr2l,c
 12122  01275A  0EFF               	movlw	255
 12123  01275C  20E2               	addwfc	fsr1h,w,c
 12124  01275E  6EDA               	movwf	fsr2h,c
 12125  012760  50DF               	movf	indf2,w,c
 12126  012762  B4D8               	btfsc	status,2,c
 12127  012764  D029               	goto	l12536
 12128                           
 12129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12130                           ;stkvar	_ct @ sp[(-32)+26]
 12131  012766  0EFC               	movlw	252
 12132  012768  24E1               	addwf	fsr1l,w,c
 12133  01276A  6ED9               	movwf	fsr2l,c
 12134  01276C  0EFF               	movlw	255
 12135  01276E  20E2               	addwfc	fsr1h,w,c
 12136  012770  6EDA               	movwf	fsr2h,c
 12137                           
 12138                           ;stkvar	_fmt @ sp[(-32)+-4]
 12139  012772  0EDC               	movlw	-36
 12140  012774  006F FF8F FFE9     	movff	plusw1,fsr0l
 12141  01277A  0EDD               	movlw	-35
 12142  01277C  006F FF8F FFEA     	movff	plusw1,fsr0h
 12143  012782  006F FFB8  F00B    	movff	postinc0,btemp+10
 12144  012788  006F FFB4  F00C    	movff	postdec0,btemp+11
 12145  01278E  0E02               	movlw	2
 12146  012790  260B               	addwf	(btemp+10)^0,f,c
 12147  012792  0E00               	movlw	0
 12148  012794  220C               	addwfc	(btemp+11)^0,f,c
 12149  012796  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12150  01279C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12151  0127A2                     	if	0	;tblptru may be non-zero
 12152  0127A2                     	endif
 12153  0127A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12154  0127A2  0E00               	movlw	low (__mediumconst shr (0+16))
 12155  0127A4  6EF8               	movwf	tblptru,c
 12156  0127A6                     	endif
 12157  0127A6  0008               	tblrd		*
 12158  0127A8  50F5               	movf	tablat,w,c
 12159  0127AA  6EE6               	movwf	postinc1,c
 12160  0127AC  0E00               	movlw	0
 12161  0127AE  6EE6               	movwf	postinc1,c
 12162  0127B0  EC6C  F0D6         	call	_tolower	;wreg free
 12163  0127B4  5001               	movf	btemp^0,w,c
 12164  0127B6  6EDF               	movwf	indf2,c
 12165  0127B8                     l12536:
 12166                           
 12167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12168                           ;stkvar	_fmt @ sp[(-32)+-4]
 12169  0127B8  0EDC               	movlw	-36
 12170  0127BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12171  0127C0  0EDD               	movlw	-35
 12172  0127C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12173  0127C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12174  0127CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12175  0127D4                     	if	0	;tblptru may be non-zero
 12176  0127D4                     	endif
 12177  0127D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12178  0127D4  0E00               	movlw	low (__mediumconst shr (0+16))
 12179  0127D6  6EF8               	movwf	tblptru,c
 12180  0127D8                     	endif
 12181  0127D8  0008               	tblrd		*
 12182  0127DA  50F5               	movf	tablat,w,c
 12183  0127DC  0A63               	xorlw	99
 12184  0127DE  A4D8               	btfss	status,2,c
 12185  0127E0  D037               	goto	l12546
 12186                           
 12187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12188                           ;stkvar	_fmt @ sp[(-32)+-4]
 12189  0127E2  0EDC               	movlw	-36
 12190  0127E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12191  0127EA  0EDD               	movlw	-35
 12192  0127EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12193  0127F2  2ADE               	incf	postinc2,f,c
 12194  0127F4  0E00               	movlw	0
 12195  0127F6  22DD               	addwfc	postdec2,f,c
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12198                           ;stkvar	_ap @ sp[(-32)+-6]
 12199  0127F8  0EDA               	movlw	-38
 12200  0127FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12201  012800  0EDB               	movlw	-37
 12202  012802  006F FF8F FFDA     	movff	plusw1,fsr2h
 12203  012808  0E02               	movlw	2
 12204  01280A  5EDE               	subwf	postinc2,f,c
 12205  01280C  0E00               	movlw	0
 12206  01280E  5ADD               	subwfb	postdec2,f,c
 12207  012810  006F FF78  F00B    	movff	postinc2,btemp+10
 12208  012816  006F FF74  F00C    	movff	postdec2,btemp+11
 12209  01281C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12210  012822  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12211  012828  50DF               	movf	indf2,w,c
 12212  01282A  6E0C               	movwf	(btemp+11)^0,c
 12213                           
 12214                           ;stkvar	_c @ sp[(-32)+31]
 12215  01282C  0EFF               	movlw	-1
 12216  01282E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12217                           
 12218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12219                           ;stkvar	_c @ sp[(-32)+31]
 12220  012834  0EFF               	movlw	-1
 12221  012836  50E3               	movf	plusw1,w,c
 12222  012838  6EE6               	movwf	postinc1,c
 12223                           
 12224                           ;stkvar	_fp @ sp[(-33)+-2]
 12225  01283A  0EDD               	movlw	-35
 12226  01283C  006F FF8F FFE6     	movff	plusw1,postinc1
 12227  012842  006F FF8F FFE6     	movff	plusw1,postinc1
 12228  012848  ECE6  F0D5         	call	_ctoa	;wreg free
 12229  01284C  EFA1  F099         	goto	l2362
 12230  012850                     l12546:
 12231                           
 12232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12233                           ;stkvar	_fmt @ sp[(-32)+-4]
 12234  012850  0EDC               	movlw	-36
 12235  012852  006F FF8F FFD9     	movff	plusw1,fsr2l
 12236  012858  0EDD               	movlw	-35
 12237  01285A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12238  012860  006F FF7B FFF6     	movff	postinc2,tblptrl
 12239  012866  006F FF77 FFF7     	movff	postdec2,tblptrh
 12240  01286C                     	if	0	;tblptru may be non-zero
 12241  01286C                     	endif
 12242  01286C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12243  01286C  0E00               	movlw	low (__mediumconst shr (0+16))
 12244  01286E  6EF8               	movwf	tblptru,c
 12245  012870                     	endif
 12246  012870  0008               	tblrd		*
 12247  012872  50F5               	movf	tablat,w,c
 12248  012874  0A64               	xorlw	100
 12249  012876  B4D8               	btfsc	status,2,c
 12250  012878  D015               	goto	u12080
 12251                           
 12252                           ;stkvar	_fmt @ sp[(-32)+-4]
 12253  01287A  0EDC               	movlw	-36
 12254  01287C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12255  012882  0EDD               	movlw	-35
 12256  012884  006F FF8F FFDA     	movff	plusw1,fsr2h
 12257  01288A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12258  012890  006F FF77 FFF7     	movff	postdec2,tblptrh
 12259  012896                     	if	0	;tblptru may be non-zero
 12260  012896                     	endif
 12261  012896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12262  012896  0E00               	movlw	low (__mediumconst shr (0+16))
 12263  012898  6EF8               	movwf	tblptru,c
 12264  01289A                     	endif
 12265  01289A  0008               	tblrd		*
 12266  01289C  50F5               	movf	tablat,w,c
 12267  01289E  0A69               	xorlw	105
 12268  0128A0  A4D8               	btfss	status,2,c
 12269  0128A2  D076               	goto	l12558
 12270  0128A4                     u12080:
 12271                           
 12272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12273                           ;stkvar	_fmt @ sp[(-32)+-4]
 12274  0128A4  0EDC               	movlw	-36
 12275  0128A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12276  0128AC  0EDD               	movlw	-35
 12277  0128AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12278  0128B4  2ADE               	incf	postinc2,f,c
 12279  0128B6  0E00               	movlw	0
 12280  0128B8  22DD               	addwfc	postdec2,f,c
 12281                           
 12282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12283                           ;stkvar	_ap @ sp[(-32)+-6]
 12284  0128BA  0EDA               	movlw	-38
 12285  0128BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12286  0128C2  0EDB               	movlw	-37
 12287  0128C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12288  0128CA  0E02               	movlw	2
 12289  0128CC  5EDE               	subwf	postinc2,f,c
 12290  0128CE  0E00               	movlw	0
 12291  0128D0  5ADD               	subwfb	postdec2,f,c
 12292  0128D2  006F FF78  F00B    	movff	postinc2,btemp+10
 12293  0128D8  006F FF74  F00C    	movff	postdec2,btemp+11
 12294  0128DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12295  0128E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12296  0128EA  006F FF78  F00B    	movff	postinc2,btemp+10
 12297  0128F0  006F FF74  F00C    	movff	postdec2,btemp+11
 12298                           
 12299                           ;stkvar	_ll @ sp[(-32)+14]
 12300  0128F6  0EEE               	movlw	-18
 12301  0128F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12302  0128FE  0EEF               	movlw	-17
 12303  012900  0060  F033  FFE3   	movff	btemp+11,plusw1
 12304  012906  6A01               	clrf	btemp^0,c
 12305  012908  BEE3               	btfsc	plusw1,7,c
 12306  01290A  6801               	setf	btemp^0,c
 12307  01290C  0EF0               	movlw	-16
 12308  01290E  0060  F007  FFE3   	movff	btemp,plusw1
 12309  012914  0EF1               	movlw	-15
 12310  012916  0060  F007  FFE3   	movff	btemp,plusw1
 12311  01291C  0EF2               	movlw	-14
 12312  01291E  0060  F007  FFE3   	movff	btemp,plusw1
 12313  012924  0EF3               	movlw	-13
 12314  012926  0060  F007  FFE3   	movff	btemp,plusw1
 12315  01292C  0EF4               	movlw	-12
 12316  01292E  0060  F007  FFE3   	movff	btemp,plusw1
 12317  012934  0EF5               	movlw	-11
 12318  012936  0060  F007  FFE3   	movff	btemp,plusw1
 12319  01293C                     l12554:
 12320                           
 12321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12322                           ;stkvar	_ll @ sp[(-32)+14]
 12323  01293C  50E1               	movf	fsr1l,w,c
 12324  01293E  0FEE               	addlw	-18
 12325  012940  6ED9               	movwf	fsr2l,c
 12326  012942  50E2               	movf	fsr1h,w,c
 12327  012944  6EDA               	movwf	fsr2h,c
 12328  012946  0EFF               	movlw	255
 12329  012948  22DA               	addwfc	fsr2h,f,c
 12330  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 12331  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 12332  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 12333  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 12334  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 12335  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 12336  01296E  006F FF7B FFE6     	movff	postinc2,postinc1
 12337  012974  006F FF7B FFE6     	movff	postinc2,postinc1
 12338                           
 12339                           ;stkvar	_fp @ sp[(-40)+-2]
 12340  01297A  0ED6               	movlw	-42
 12341  01297C  006F FF8F FFE6     	movff	plusw1,postinc1
 12342  012982  006F FF8F FFE6     	movff	plusw1,postinc1
 12343  012988  ECFB  F0AB         	call	_dtoa	;wreg free
 12344  01298C  EFA1  F099         	goto	l2362
 12345  012990                     l12558:
 12346                           
 12347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12348  012990  0E02               	movlw	2
 12349  012992  6EE6               	movwf	postinc1,c
 12350  012994  0E00               	movlw	0
 12351  012996  6EE6               	movwf	postinc1,c
 12352  012998  0EEA               	movlw	low STR_73
 12353  01299A  6EE6               	movwf	postinc1,c
 12354  01299C  0EFF               	movlw	high STR_73
 12355  01299E  6EE6               	movwf	postinc1,c
 12356                           
 12357                           ;stkvar	_fmt @ sp[(-36)+-4]
 12358  0129A0  0ED8               	movlw	-40
 12359  0129A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12360  0129A8  0ED9               	movlw	-39
 12361  0129AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12362  0129B0  006F FF78  F00B    	movff	postinc2,btemp+10
 12363  0129B6  006F FF74  F00C    	movff	postdec2,btemp+11
 12364  0129BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12365  0129C2  0060  F033  FFE6   	movff	btemp+11,postinc1
 12366  0129C8  EC24  F0C0         	call	_strncmp	;wreg free
 12367  0129CC  5001               	movf	btemp^0,w,c
 12368  0129CE  1002               	iorwf	(btemp+1)^0,w,c
 12369  0129D0  B4D8               	btfsc	status,2,c
 12370  0129D2  D022               	goto	u12100
 12371  0129D4  0E02               	movlw	2
 12372  0129D6  6EE6               	movwf	postinc1,c
 12373  0129D8  0E00               	movlw	0
 12374  0129DA  6EE6               	movwf	postinc1,c
 12375  0129DC  0EF0               	movlw	low STR_77
 12376  0129DE  6EE6               	movwf	postinc1,c
 12377  0129E0  0EFF               	movlw	high STR_77
 12378  0129E2  6EE6               	movwf	postinc1,c
 12379                           
 12380                           ;stkvar	_fmt @ sp[(-36)+-4]
 12381  0129E4  0ED8               	movlw	-40
 12382  0129E6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12383  0129EC  0ED9               	movlw	-39
 12384  0129EE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12385  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 12386  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 12387  012A00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12388  012A06  0060  F033  FFE6   	movff	btemp+11,postinc1
 12389  012A0C  EC24  F0C0         	call	_strncmp	;wreg free
 12390  012A10  5001               	movf	btemp^0,w,c
 12391  012A12  1002               	iorwf	(btemp+1)^0,w,c
 12392  012A14  A4D8               	btfss	status,2,c
 12393  012A16  D069               	goto	l12570
 12394  012A18                     u12100:
 12395                           
 12396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12397                           ;stkvar	_fmt @ sp[(-32)+-4]
 12398  012A18  0EDC               	movlw	-36
 12399  012A1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12400  012A20  0EDD               	movlw	-35
 12401  012A22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12402  012A28  0E02               	movlw	2
 12403  012A2A  26DE               	addwf	postinc2,f,c
 12404  012A2C  0E00               	movlw	0
 12405  012A2E  22DD               	addwfc	postdec2,f,c
 12406                           
 12407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12408                           ;stkvar	_ap @ sp[(-32)+-6]
 12409  012A30  0EDA               	movlw	-38
 12410  012A32  006F FF8F FFD9     	movff	plusw1,fsr2l
 12411  012A38  0EDB               	movlw	-37
 12412  012A3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12413  012A40  0E04               	movlw	4
 12414  012A42  5EDE               	subwf	postinc2,f,c
 12415  012A44  0E00               	movlw	0
 12416  012A46  5ADD               	subwfb	postdec2,f,c
 12417  012A48  006F FF78  F00B    	movff	postinc2,btemp+10
 12418  012A4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12419  012A54  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12420  012A5A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12421  012A60  006F FF78  F009    	movff	postinc2,btemp+8
 12422  012A66  006F FF78  F00A    	movff	postinc2,btemp+9
 12423  012A6C  006F FF78  F00B    	movff	postinc2,btemp+10
 12424  012A72  006F FF78  F00C    	movff	postinc2,btemp+11
 12425  012A78  0060  F024  F011   	movff	btemp+8,btemp+16
 12426  012A7E  0060  F028  F012   	movff	btemp+9,btemp+17
 12427  012A84  0060  F02C  F013   	movff	btemp+10,btemp+18
 12428  012A8A  0060  F030  F014   	movff	btemp+11,btemp+19
 12429  012A90  6A15               	clrf	(btemp+20)^0,c
 12430  012A92  BE14               	btfsc	(btemp+19)^0,7,c
 12431  012A94  6815               	setf	(btemp+20)^0,c
 12432  012A96  0060  F054  F016   	movff	btemp+20,btemp+21
 12433  012A9C  0060  F054  F017   	movff	btemp+20,btemp+22
 12434  012AA2  0060  F054  F018   	movff	btemp+20,btemp+23
 12435                           
 12436                           ;stkvar	_ll @ sp[(-32)+14]
 12437  012AA8  0EEE               	movlw	-18
 12438  012AAA  0060  F047  FFE3   	movff	btemp+16,plusw1
 12439  012AB0  0EEF               	movlw	-17
 12440  012AB2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12441  012AB8  0EF0               	movlw	-16
 12442  012ABA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12443  012AC0  0EF1               	movlw	-15
 12444  012AC2  0060  F053  FFE3   	movff	btemp+19,plusw1
 12445  012AC8  0EF2               	movlw	-14
 12446  012ACA  0060  F057  FFE3   	movff	btemp+20,plusw1
 12447  012AD0  0EF3               	movlw	-13
 12448  012AD2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12449  012AD8  0EF4               	movlw	-12
 12450  012ADA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12451  012AE0  0EF5               	movlw	-11
 12452  012AE2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12453  012AE8  D729               	goto	l12554
 12454  012AEA                     l12570:
 12455                           
 12456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12457                           ;stkvar	_ct @ sp[(-32)+26]
 12458  012AEA  0EFA               	movlw	-6
 12459  012AEC  006F FF8C  F001    	movff	plusw1,btemp
 12460  012AF2  0E66               	movlw	102
 12461  012AF4  1801               	xorwf	btemp^0,w,c
 12462  012AF6  A4D8               	btfss	status,2,c
 12463  012AF8  D06E               	goto	l12582
 12464                           
 12465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12466                           ;stkvar	_fmt @ sp[(-32)+-4]
 12467  012AFA  0EDC               	movlw	-36
 12468  012AFC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12469  012B02  0EDD               	movlw	-35
 12470  012B04  006F FF8F FFDA     	movff	plusw1,fsr2h
 12471  012B0A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12472  012B10  006F FF77 FFF7     	movff	postdec2,tblptrh
 12473  012B16                     	if	0	;tblptru may be non-zero
 12474  012B16                     	endif
 12475  012B16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12476  012B16  0E00               	movlw	low (__mediumconst shr (0+16))
 12477  012B18  6EF8               	movwf	tblptru,c
 12478  012B1A                     	endif
 12479                           
 12480                           ;stkvar	_c @ sp[(-32)+31]
 12481  012B1A  0008               	tblrd		*
 12482  012B1C  0EFF               	movlw	-1
 12483  012B1E  006F FFD7 FFE3     	movff	tablat,plusw1
 12484                           
 12485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12486                           ;stkvar	_fmt @ sp[(-32)+-4]
 12487  012B24  0EDC               	movlw	-36
 12488  012B26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12489  012B2C  0EDD               	movlw	-35
 12490  012B2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12491  012B34  2ADE               	incf	postinc2,f,c
 12492  012B36  0E00               	movlw	0
 12493  012B38  22DD               	addwfc	postdec2,f,c
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12496                           ;stkvar	_ap @ sp[(-32)+-6]
 12497  012B3A  0EDA               	movlw	-38
 12498  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12499  012B42  0EDB               	movlw	-37
 12500  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 12501  012B4A  0E04               	movlw	4
 12502  012B4C  5EDE               	subwf	postinc2,f,c
 12503  012B4E  0E00               	movlw	0
 12504  012B50  5ADD               	subwfb	postdec2,f,c
 12505  012B52  006F FF78  F00B    	movff	postinc2,btemp+10
 12506  012B58  006F FF74  F00C    	movff	postdec2,btemp+11
 12507  012B5E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12508  012B64  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12509  012B6A  006F FF78  F009    	movff	postinc2,btemp+8
 12510  012B70  006F FF78  F00A    	movff	postinc2,btemp+9
 12511  012B76  006F FF78  F00B    	movff	postinc2,btemp+10
 12512  012B7C  006F FF78  F00C    	movff	postinc2,btemp+11
 12513                           
 12514                           ;stkvar	_f @ sp[(-32)+22]
 12515  012B82  0EF6               	movlw	-10
 12516  012B84  0060  F027  FFE3   	movff	btemp+8,plusw1
 12517  012B8A  0EF7               	movlw	-9
 12518  012B8C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12519  012B92  0EF8               	movlw	-8
 12520  012B94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12521  012B9A  0EF9               	movlw	-7
 12522  012B9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 12523  012BA2                     l12578:
 12524                           
 12525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12526                           ;stkvar	_c @ sp[(-32)+31]
 12527  012BA2  0EFF               	movlw	-1
 12528  012BA4  50E3               	movf	plusw1,w,c
 12529  012BA6  6EE6               	movwf	postinc1,c
 12530                           
 12531                           ;stkvar	_f @ sp[(-33)+22]
 12532  012BA8  0EF5               	movlw	-11
 12533  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12534  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12535  012BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12536  012BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12537                           
 12538                           ;stkvar	_fp @ sp[(-37)+-2]
 12539  012BC2  0ED9               	movlw	-39
 12540  012BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12541  012BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12542  012BD0  EC00  F080         	call	_efgtoa	;wreg free
 12543  012BD4  D3B6               	goto	l2362
 12544  012BD6                     l12582:
 12545                           
 12546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12547  012BD6  0E02               	movlw	2
 12548  012BD8  6EE6               	movwf	postinc1,c
 12549  012BDA  0E00               	movlw	0
 12550  012BDC  6EE6               	movwf	postinc1,c
 12551  012BDE  0EED               	movlw	low STR_82
 12552  012BE0  6EE6               	movwf	postinc1,c
 12553  012BE2  0EFF               	movlw	high STR_82
 12554  012BE4  6EE6               	movwf	postinc1,c
 12555                           
 12556                           ;stkvar	_ct @ sp[(-36)+26]
 12557  012BE6  0EF6               	movlw	246
 12558  012BE8  24E1               	addwf	fsr1l,w,c
 12559  012BEA  6E01               	movwf	btemp^0,c
 12560  012BEC  0EFF               	movlw	255
 12561  012BEE  20E2               	addwfc	fsr1h,w,c
 12562  012BF0  6E02               	movwf	(btemp+1)^0,c
 12563  012BF2  0060  F007  FFE6   	movff	btemp,postinc1
 12564  012BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12565  012BFE  EC24  F0C0         	call	_strncmp	;wreg free
 12566  012C02  5001               	movf	btemp^0,w,c
 12567  012C04  1002               	iorwf	(btemp+1)^0,w,c
 12568  012C06  A4D8               	btfss	status,2,c
 12569  012C08  D096               	goto	l12602
 12570                           
 12571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12572                           ;stkvar	_fmt @ sp[(-32)+-4]
 12573  012C0A  0EDC               	movlw	-36
 12574  012C0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12575  012C12  0EDD               	movlw	-35
 12576  012C14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12577  012C1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12578  012C20  006F FF74  F00C    	movff	postdec2,btemp+11
 12579  012C26  0E01               	movlw	1
 12580  012C28  260B               	addwf	(btemp+10)^0,f,c
 12581  012C2A  0E00               	movlw	0
 12582  012C2C  220C               	addwfc	(btemp+11)^0,f,c
 12583  012C2E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12584  012C34  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12585  012C3A                     	if	0	;tblptru may be non-zero
 12586  012C3A                     	endif
 12587  012C3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12588  012C3A  0E00               	movlw	low (__mediumconst shr (0+16))
 12589  012C3C  6EF8               	movwf	tblptru,c
 12590  012C3E                     	endif
 12591                           
 12592                           ;stkvar	_c @ sp[(-32)+31]
 12593  012C3E  0008               	tblrd		*
 12594  012C40  0EFF               	movlw	-1
 12595  012C42  006F FFD7 FFE3     	movff	tablat,plusw1
 12596  012C48  0EBF               	movlw	191
 12597  012C4A  6E0B               	movwf	(btemp+10)^0,c
 12598  012C4C  0EFF               	movlw	255
 12599  012C4E  6E0C               	movwf	(btemp+11)^0,c
 12600                           
 12601                           ;stkvar	_fmt @ sp[(-32)+-4]
 12602  012C50  0EDC               	movlw	-36
 12603  012C52  006F FF8F FFD9     	movff	plusw1,fsr2l
 12604  012C58  0EDD               	movlw	-35
 12605  012C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12606  012C60  006F FF7B FFF6     	movff	postinc2,tblptrl
 12607  012C66  006F FF77 FFF7     	movff	postdec2,tblptrh
 12608  012C6C                     	if	0	;tblptru may be non-zero
 12609  012C6C                     	endif
 12610  012C6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12611  012C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 12612  012C6E  6EF8               	movwf	tblptru,c
 12613  012C70                     	endif
 12614  012C70  0008               	tblrd		*
 12615  012C72  50F5               	movf	tablat,w,c
 12616  012C74  6E09               	movwf	(btemp+8)^0,c
 12617  012C76  6A0A               	clrf	(btemp+9)^0,c
 12618  012C78  500B               	movf	(btemp+10)^0,w,c
 12619  012C7A  2609               	addwf	(btemp+8)^0,f,c
 12620  012C7C  500C               	movf	(btemp+11)^0,w,c
 12621  012C7E  220A               	addwfc	(btemp+9)^0,f,c
 12622  012C80  500A               	movf	(btemp+9)^0,w,c
 12623  012C82  E106               	bnz	u12130
 12624  012C84  0E1A               	movlw	26
 12625  012C86  5C09               	subwf	(btemp+8)^0,w,c
 12626  012C88  B0D8               	btfsc	status,0,c
 12627  012C8A  D002               	goto	u12130
 12628  012C8C  0E01               	movlw	1
 12629  012C8E  D001               	goto	u12140
 12630  012C90                     u12130:
 12631  012C90  0E00               	movlw	0
 12632  012C92                     u12140:
 12633  012C92  6E0B               	movwf	(btemp+10)^0,c
 12634  012C94  6A0C               	clrf	(btemp+11)^0,c
 12635                           
 12636                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12637  012C96  0EE2               	movlw	-30
 12638  012C98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12639  012C9E  0EE3               	movlw	-29
 12640  012CA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12641                           
 12642                           ;stkvar	_vfpfcnvrt$5582 @ sp[(-32)+2]
 12643  012CA6  0EE2               	movlw	-30
 12644  012CA8  006F FF8C  F001    	movff	plusw1,btemp
 12645  012CAE  0EE3               	movlw	-29
 12646  012CB0  50E3               	movf	plusw1,w,c
 12647  012CB2  1001               	iorwf	btemp^0,w,c
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12650                           ;stkvar	_ap @ sp[(-32)+-6]
 12651                           
 12652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12653                           
 12654                           ;stkvar	_f @ sp[(-32)+22]
 12655                           
 12656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12657                           ;stkvar	_ap @ sp[(-32)+-6]
 12658  012CB4  0EDA               	movlw	-38
 12659  012CB6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12660  012CBC  0EDB               	movlw	-37
 12661  012CBE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12662  012CC4  0E04               	movlw	4
 12663  012CC6  5EDE               	subwf	postinc2,f,c
 12664  012CC8  0E00               	movlw	0
 12665  012CCA  5ADD               	subwfb	postdec2,f,c
 12666  012CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 12667  012CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 12668  012CD8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12669  012CDE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12670  012CE4  006F FF78  F009    	movff	postinc2,btemp+8
 12671  012CEA  006F FF78  F00A    	movff	postinc2,btemp+9
 12672  012CF0  006F FF78  F00B    	movff	postinc2,btemp+10
 12673  012CF6  006F FF78  F00C    	movff	postinc2,btemp+11
 12674                           
 12675                           ;stkvar	_f @ sp[(-32)+22]
 12676  012CFC  0EF6               	movlw	-10
 12677  012CFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 12678  012D04  0EF7               	movlw	-9
 12679  012D06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12680  012D0C  0EF8               	movlw	-8
 12681  012D0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12682  012D14  0EF9               	movlw	-7
 12683  012D16  0060  F033  FFE3   	movff	btemp+11,plusw1
 12684                           
 12685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12686                           ;stkvar	_fmt @ sp[(-32)+-4]
 12687  012D1C  0EDC               	movlw	-36
 12688  012D1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12689  012D24  0EDD               	movlw	-35
 12690  012D26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12691  012D2C  0E02               	movlw	2
 12692  012D2E  26DE               	addwf	postinc2,f,c
 12693  012D30  0E00               	movlw	0
 12694  012D32  22DD               	addwfc	postdec2,f,c
 12695  012D34  D736               	goto	l12578
 12696  012D36                     l12602:
 12697                           
 12698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12699                           ;stkvar	_fmt @ sp[(-32)+-4]
 12700  012D36  0EDC               	movlw	-36
 12701  012D38  006F FF8F FFD9     	movff	plusw1,fsr2l
 12702  012D3E  0EDD               	movlw	-35
 12703  012D40  006F FF8F FFDA     	movff	plusw1,fsr2h
 12704  012D46  006F FF7B FFF6     	movff	postinc2,tblptrl
 12705  012D4C  006F FF77 FFF7     	movff	postdec2,tblptrh
 12706  012D52                     	if	0	;tblptru may be non-zero
 12707  012D52                     	endif
 12708  012D52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12709  012D52  0E00               	movlw	low (__mediumconst shr (0+16))
 12710  012D54  6EF8               	movwf	tblptru,c
 12711  012D56                     	endif
 12712  012D56  0008               	tblrd		*
 12713  012D58  50F5               	movf	tablat,w,c
 12714  012D5A  0A73               	xorlw	115
 12715  012D5C  A4D8               	btfss	status,2,c
 12716  012D5E  D042               	goto	l12612
 12717                           
 12718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12719                           ;stkvar	_fmt @ sp[(-32)+-4]
 12720  012D60  0EDC               	movlw	-36
 12721  012D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 12722  012D68  0EDD               	movlw	-35
 12723  012D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12724  012D70  2ADE               	incf	postinc2,f,c
 12725  012D72  0E00               	movlw	0
 12726  012D74  22DD               	addwfc	postdec2,f,c
 12727                           
 12728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12729                           ;stkvar	_ap @ sp[(-32)+-6]
 12730  012D76  0EDA               	movlw	-38
 12731  012D78  006F FF8F FFD9     	movff	plusw1,fsr2l
 12732  012D7E  0EDB               	movlw	-37
 12733  012D80  006F FF8F FFDA     	movff	plusw1,fsr2h
 12734  012D86  0E02               	movlw	2
 12735  012D88  5EDE               	subwf	postinc2,f,c
 12736  012D8A  0E00               	movlw	0
 12737  012D8C  5ADD               	subwfb	postdec2,f,c
 12738  012D8E  006F FF78  F00B    	movff	postinc2,btemp+10
 12739  012D94  006F FF74  F00C    	movff	postdec2,btemp+11
 12740  012D9A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12741  012DA0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12742  012DA6  006F FF78  F00B    	movff	postinc2,btemp+10
 12743  012DAC  006F FF74  F00C    	movff	postdec2,btemp+11
 12744                           
 12745                           ;stkvar	_cp @ sp[(-32)+29]
 12746  012DB2  0EFE               	movlw	-2
 12747  012DB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12748  012DBA  0EFD               	movlw	-3
 12749  012DBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12750                           
 12751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12752                           ;stkvar	_cp @ sp[(-32)+29]
 12753  012DC2  0EFD               	movlw	-3
 12754  012DC4  006F FF8F FFE6     	movff	plusw1,postinc1
 12755  012DCA  006F FF8F FFE6     	movff	plusw1,postinc1
 12756                           
 12757                           ;stkvar	_fp @ sp[(-34)+-2]
 12758  012DD0  0EDC               	movlw	-36
 12759  012DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 12760  012DD8  006F FF8F FFE6     	movff	plusw1,postinc1
 12761  012DDE  EC08  F0BA         	call	_stoa	;wreg free
 12762  012DE2  D2AF               	goto	l2362
 12763  012DE4                     l12612:
 12764                           
 12765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12766                           ;stkvar	_fmt @ sp[(-32)+-4]
 12767  012DE4  0EDC               	movlw	-36
 12768  012DE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12769  012DEC  0EDD               	movlw	-35
 12770  012DEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12771  012DF4  006F FF7B FFF6     	movff	postinc2,tblptrl
 12772  012DFA  006F FF77 FFF7     	movff	postdec2,tblptrh
 12773  012E00                     	if	0	;tblptru may be non-zero
 12774  012E00                     	endif
 12775  012E00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12776  012E00  0E00               	movlw	low (__mediumconst shr (0+16))
 12777  012E02  6EF8               	movwf	tblptru,c
 12778  012E04                     	endif
 12779  012E04  0008               	tblrd		*
 12780  012E06  50F5               	movf	tablat,w,c
 12781  012E08  0A75               	xorlw	117
 12782  012E0A  A4D8               	btfss	status,2,c
 12783  012E0C  D07C               	goto	l12622
 12784                           
 12785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12786                           ;stkvar	_fmt @ sp[(-32)+-4]
 12787  012E0E  0EDC               	movlw	-36
 12788  012E10  006F FF8F FFD9     	movff	plusw1,fsr2l
 12789  012E16  0EDD               	movlw	-35
 12790  012E18  006F FF8F FFDA     	movff	plusw1,fsr2h
 12791  012E1E  2ADE               	incf	postinc2,f,c
 12792  012E20  0E00               	movlw	0
 12793  012E22  22DD               	addwfc	postdec2,f,c
 12794                           
 12795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12796                           ;stkvar	_ap @ sp[(-32)+-6]
 12797  012E24  0EDA               	movlw	-38
 12798  012E26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12799  012E2C  0EDB               	movlw	-37
 12800  012E2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12801  012E34  0E02               	movlw	2
 12802  012E36  5EDE               	subwf	postinc2,f,c
 12803  012E38  0E00               	movlw	0
 12804  012E3A  5ADD               	subwfb	postdec2,f,c
 12805  012E3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12806  012E42  006F FF74  F00C    	movff	postdec2,btemp+11
 12807  012E48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12808  012E4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12809  012E54  006F FF78  F00B    	movff	postinc2,btemp+10
 12810  012E5A  006F FF74  F00C    	movff	postdec2,btemp+11
 12811  012E60  500B               	movf	(btemp+10)^0,w,c
 12812  012E62  6E11               	movwf	(btemp+16)^0,c
 12813  012E64  500C               	movf	(btemp+11)^0,w,c
 12814  012E66  6E12               	movwf	(btemp+17)^0,c
 12815  012E68  6A13               	clrf	(btemp+18)^0,c
 12816  012E6A  6A14               	clrf	(btemp+19)^0,c
 12817  012E6C  6A15               	clrf	(btemp+20)^0,c
 12818  012E6E  6A16               	clrf	(btemp+21)^0,c
 12819  012E70  6A17               	clrf	(btemp+22)^0,c
 12820  012E72  6A18               	clrf	(btemp+23)^0,c
 12821                           
 12822                           ;stkvar	_llu @ sp[(-32)+6]
 12823  012E74  0EE6               	movlw	-26
 12824  012E76  0060  F047  FFE3   	movff	btemp+16,plusw1
 12825  012E7C  0EE7               	movlw	-25
 12826  012E7E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12827  012E84  0EE8               	movlw	-24
 12828  012E86  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12829  012E8C  0EE9               	movlw	-23
 12830  012E8E  0060  F053  FFE3   	movff	btemp+19,plusw1
 12831  012E94  0EEA               	movlw	-22
 12832  012E96  0060  F057  FFE3   	movff	btemp+20,plusw1
 12833  012E9C  0EEB               	movlw	-21
 12834  012E9E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12835  012EA4  0EEC               	movlw	-20
 12836  012EA6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12837  012EAC  0EED               	movlw	-19
 12838  012EAE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12839                           
 12840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12841                           ;stkvar	_llu @ sp[(-32)+6]
 12842  012EB4  50E1               	movf	fsr1l,w,c
 12843  012EB6  0FE6               	addlw	-26
 12844  012EB8  6ED9               	movwf	fsr2l,c
 12845  012EBA  50E2               	movf	fsr1h,w,c
 12846  012EBC  6EDA               	movwf	fsr2h,c
 12847  012EBE  0EFF               	movlw	255
 12848  012EC0  22DA               	addwfc	fsr2h,f,c
 12849  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12850  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12851  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12852  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12853  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12854  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12855  012EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 12856  012EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 12857                           
 12858                           ;stkvar	_fp @ sp[(-40)+-2]
 12859  012EF2  0ED6               	movlw	-42
 12860  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12861  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 12862  012F00  ECF4  F0B3         	call	_utoa	;wreg free
 12863  012F04  D21E               	goto	l2362
 12864  012F06                     l12622:
 12865                           
 12866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12867  012F06  0E02               	movlw	2
 12868  012F08  6EE6               	movwf	postinc1,c
 12869  012F0A  0E00               	movlw	0
 12870  012F0C  6EE6               	movwf	postinc1,c
 12871  012F0E  0EF3               	movlw	low STR_87
 12872  012F10  6EE6               	movwf	postinc1,c
 12873  012F12  0EFF               	movlw	high STR_87
 12874  012F14  6EE6               	movwf	postinc1,c
 12875                           
 12876                           ;stkvar	_fmt @ sp[(-36)+-4]
 12877  012F16  0ED8               	movlw	-40
 12878  012F18  006F FF8F FFD9     	movff	plusw1,fsr2l
 12879  012F1E  0ED9               	movlw	-39
 12880  012F20  006F FF8F FFDA     	movff	plusw1,fsr2h
 12881  012F26  006F FF78  F00B    	movff	postinc2,btemp+10
 12882  012F2C  006F FF74  F00C    	movff	postdec2,btemp+11
 12883  012F32  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12884  012F38  0060  F033  FFE6   	movff	btemp+11,postinc1
 12885  012F3E  EC24  F0C0         	call	_strncmp	;wreg free
 12886  012F42  5001               	movf	btemp^0,w,c
 12887  012F44  1002               	iorwf	(btemp+1)^0,w,c
 12888  012F46  A4D8               	btfss	status,2,c
 12889  012F48  D039               	goto	l12632
 12890                           
 12891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12892                           ;stkvar	_fmt @ sp[(-32)+-4]
 12893  012F4A  0EDC               	movlw	-36
 12894  012F4C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12895  012F52  0EDD               	movlw	-35
 12896  012F54  006F FF8F FFDA     	movff	plusw1,fsr2h
 12897  012F5A  0E02               	movlw	2
 12898  012F5C  26DE               	addwf	postinc2,f,c
 12899  012F5E  0E00               	movlw	0
 12900  012F60  22DD               	addwfc	postdec2,f,c
 12901                           
 12902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12903                           ;stkvar	_ap @ sp[(-32)+-6]
 12904  012F62  0EDA               	movlw	-38
 12905  012F64  006F FF8F FFD9     	movff	plusw1,fsr2l
 12906  012F6A  0EDB               	movlw	-37
 12907  012F6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12908  012F72  0E04               	movlw	4
 12909  012F74  5EDE               	subwf	postinc2,f,c
 12910  012F76  0E00               	movlw	0
 12911  012F78  5ADD               	subwfb	postdec2,f,c
 12912  012F7A  006F FF78  F00B    	movff	postinc2,btemp+10
 12913  012F80  006F FF74  F00C    	movff	postdec2,btemp+11
 12914  012F86  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12915  012F8C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12916  012F92  006F FF78  F009    	movff	postinc2,btemp+8
 12917  012F98  006F FF78  F00A    	movff	postinc2,btemp+9
 12918  012F9E  006F FF78  F00B    	movff	postinc2,btemp+10
 12919  012FA4  006F FF78  F00C    	movff	postinc2,btemp+11
 12920  012FAA  5009               	movf	(btemp+8)^0,w,c
 12921  012FAC  6E11               	movwf	(btemp+16)^0,c
 12922  012FAE  500A               	movf	(btemp+9)^0,w,c
 12923  012FB0  6E12               	movwf	(btemp+17)^0,c
 12924  012FB2  500B               	movf	(btemp+10)^0,w,c
 12925  012FB4  6E13               	movwf	(btemp+18)^0,c
 12926  012FB6  500C               	movf	(btemp+11)^0,w,c
 12927  012FB8  6E14               	movwf	(btemp+19)^0,c
 12928  012FBA  D758               	goto	L10
 12929  012FBC                     l12632:
 12930                           
 12931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12932                           ;stkvar	_fmt @ sp[(-32)+-4]
 12933  012FBC  0EDC               	movlw	-36
 12934  012FBE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12935  012FC4  0EDD               	movlw	-35
 12936  012FC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12937  012FCC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12938  012FD2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12939  012FD8                     	if	0	;tblptru may be non-zero
 12940  012FD8                     	endif
 12941  012FD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12942  012FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 12943  012FDA  6EF8               	movwf	tblptru,c
 12944  012FDC                     	endif
 12945  012FDC  0008               	tblrd		*
 12946  012FDE  50F5               	movf	tablat,w,c
 12947  012FE0  0A78               	xorlw	120
 12948  012FE2  B4D8               	btfsc	status,2,c
 12949  012FE4  D015               	goto	u12200
 12950                           
 12951                           ;stkvar	_fmt @ sp[(-32)+-4]
 12952  012FE6  0EDC               	movlw	-36
 12953  012FE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12954  012FEE  0EDD               	movlw	-35
 12955  012FF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12956  012FF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12957  012FFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12958  013002                     	if	0	;tblptru may be non-zero
 12959  013002                     	endif
 12960  013002                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12961  013002  0E00               	movlw	low (__mediumconst shr (0+16))
 12962  013004  6EF8               	movwf	tblptru,c
 12963  013006                     	endif
 12964  013006  0008               	tblrd		*
 12965  013008  50F5               	movf	tablat,w,c
 12966  01300A  0A58               	xorlw	88
 12967  01300C  A4D8               	btfss	status,2,c
 12968  01300E  D094               	goto	l12646
 12969  013010                     u12200:
 12970                           
 12971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12972                           ;stkvar	_fmt @ sp[(-32)+-4]
 12973  013010  0EDC               	movlw	-36
 12974  013012  006F FF8F FFD9     	movff	plusw1,fsr2l
 12975  013018  0EDD               	movlw	-35
 12976  01301A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12977  013020  006F FF7B FFF6     	movff	postinc2,tblptrl
 12978  013026  006F FF77 FFF7     	movff	postdec2,tblptrh
 12979  01302C                     	if	0	;tblptru may be non-zero
 12980  01302C                     	endif
 12981  01302C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12982  01302C  0E00               	movlw	low (__mediumconst shr (0+16))
 12983  01302E  6EF8               	movwf	tblptru,c
 12984  013030                     	endif
 12985                           
 12986                           ;stkvar	_c @ sp[(-32)+31]
 12987  013030  0008               	tblrd		*
 12988  013032  0EFF               	movlw	-1
 12989  013034  006F FFD7 FFE3     	movff	tablat,plusw1
 12990                           
 12991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12992                           ;stkvar	_fmt @ sp[(-32)+-4]
 12993  01303A  0EDC               	movlw	-36
 12994  01303C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12995  013042  0EDD               	movlw	-35
 12996  013044  006F FF8F FFDA     	movff	plusw1,fsr2h
 12997  01304A  2ADE               	incf	postinc2,f,c
 12998  01304C  0E00               	movlw	0
 12999  01304E  22DD               	addwfc	postdec2,f,c
 13000                           
 13001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13002                           ;stkvar	_ap @ sp[(-32)+-6]
 13003  013050  0EDA               	movlw	-38
 13004  013052  006F FF8F FFD9     	movff	plusw1,fsr2l
 13005  013058  0EDB               	movlw	-37
 13006  01305A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13007  013060  0E02               	movlw	2
 13008  013062  5EDE               	subwf	postinc2,f,c
 13009  013064  0E00               	movlw	0
 13010  013066  5ADD               	subwfb	postdec2,f,c
 13011  013068  006F FF78  F00B    	movff	postinc2,btemp+10
 13012  01306E  006F FF74  F00C    	movff	postdec2,btemp+11
 13013  013074  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13014  01307A  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13015  013080  006F FF78  F00B    	movff	postinc2,btemp+10
 13016  013086  006F FF74  F00C    	movff	postdec2,btemp+11
 13017  01308C  500B               	movf	(btemp+10)^0,w,c
 13018  01308E  6E11               	movwf	(btemp+16)^0,c
 13019  013090  500C               	movf	(btemp+11)^0,w,c
 13020  013092  6E12               	movwf	(btemp+17)^0,c
 13021  013094  6A13               	clrf	(btemp+18)^0,c
 13022  013096  6A14               	clrf	(btemp+19)^0,c
 13023  013098  6A15               	clrf	(btemp+20)^0,c
 13024  01309A  6A16               	clrf	(btemp+21)^0,c
 13025  01309C  6A17               	clrf	(btemp+22)^0,c
 13026  01309E  6A18               	clrf	(btemp+23)^0,c
 13027                           
 13028                           ;stkvar	_llu @ sp[(-32)+6]
 13029  0130A0  0EE6               	movlw	-26
 13030  0130A2  0060  F047  FFE3   	movff	btemp+16,plusw1
 13031  0130A8  0EE7               	movlw	-25
 13032  0130AA  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13033  0130B0  0EE8               	movlw	-24
 13034  0130B2  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13035  0130B8  0EE9               	movlw	-23
 13036  0130BA  0060  F053  FFE3   	movff	btemp+19,plusw1
 13037  0130C0  0EEA               	movlw	-22
 13038  0130C2  0060  F057  FFE3   	movff	btemp+20,plusw1
 13039  0130C8  0EEB               	movlw	-21
 13040  0130CA  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13041  0130D0  0EEC               	movlw	-20
 13042  0130D2  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13043  0130D8  0EED               	movlw	-19
 13044  0130DA  0060  F063  FFE3   	movff	btemp+23,plusw1
 13045                           
 13046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13047                           ;stkvar	_c @ sp[(-32)+31]
 13048  0130E0  0EFF               	movlw	-1
 13049  0130E2  50E3               	movf	plusw1,w,c
 13050  0130E4  6EE6               	movwf	postinc1,c
 13051                           
 13052                           ;stkvar	_llu @ sp[(-33)+6]
 13053  0130E6  50E1               	movf	fsr1l,w,c
 13054  0130E8  0FE5               	addlw	-27
 13055  0130EA  6ED9               	movwf	fsr2l,c
 13056  0130EC  50E2               	movf	fsr1h,w,c
 13057  0130EE  6EDA               	movwf	fsr2h,c
 13058  0130F0  0EFF               	movlw	255
 13059  0130F2  22DA               	addwfc	fsr2h,f,c
 13060  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13061  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13062  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 13063  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 13064  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 13065  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 13066  013118  006F FF7B FFE6     	movff	postinc2,postinc1
 13067  01311E  006F FF7B FFE6     	movff	postinc2,postinc1
 13068                           
 13069                           ;stkvar	_fp @ sp[(-41)+-2]
 13070  013124  0ED5               	movlw	-43
 13071  013126  006F FF8F FFE6     	movff	plusw1,postinc1
 13072  01312C  006F FF8F FFE6     	movff	plusw1,postinc1
 13073  013132  EC61  F0B0         	call	_xtoa	;wreg free
 13074  013136  D105               	goto	l2362
 13075  013138                     l12646:
 13076                           
 13077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13078  013138  0E02               	movlw	2
 13079  01313A  6EE6               	movwf	postinc1,c
 13080  01313C  0E00               	movlw	0
 13081  01313E  6EE6               	movwf	postinc1,c
 13082  013140  0EF6               	movlw	low STR_92
 13083  013142  6EE6               	movwf	postinc1,c
 13084  013144  0EFF               	movlw	high STR_92
 13085  013146  6EE6               	movwf	postinc1,c
 13086                           
 13087                           ;stkvar	_fmt @ sp[(-36)+-4]
 13088  013148  0ED8               	movlw	-40
 13089  01314A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13090  013150  0ED9               	movlw	-39
 13091  013152  006F FF8F FFDA     	movff	plusw1,fsr2h
 13092  013158  006F FF78  F00B    	movff	postinc2,btemp+10
 13093  01315E  006F FF74  F00C    	movff	postdec2,btemp+11
 13094  013164  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13095  01316A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13096  013170  EC24  F0C0         	call	_strncmp	;wreg free
 13097  013174  5001               	movf	btemp^0,w,c
 13098  013176  1002               	iorwf	(btemp+1)^0,w,c
 13099  013178  B4D8               	btfsc	status,2,c
 13100  01317A  D022               	goto	u12220
 13101  01317C  0E02               	movlw	2
 13102  01317E  6EE6               	movwf	postinc1,c
 13103  013180  0E00               	movlw	0
 13104  013182  6EE6               	movwf	postinc1,c
 13105  013184  0EE7               	movlw	low STR_96
 13106  013186  6EE6               	movwf	postinc1,c
 13107  013188  0EFF               	movlw	high STR_96
 13108  01318A  6EE6               	movwf	postinc1,c
 13109                           
 13110                           ;stkvar	_fmt @ sp[(-36)+-4]
 13111  01318C  0ED8               	movlw	-40
 13112  01318E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13113  013194  0ED9               	movlw	-39
 13114  013196  006F FF8F FFDA     	movff	plusw1,fsr2h
 13115  01319C  006F FF78  F00B    	movff	postinc2,btemp+10
 13116  0131A2  006F FF74  F00C    	movff	postdec2,btemp+11
 13117  0131A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13118  0131AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 13119  0131B4  EC24  F0C0         	call	_strncmp	;wreg free
 13120  0131B8  5001               	movf	btemp^0,w,c
 13121  0131BA  1002               	iorwf	(btemp+1)^0,w,c
 13122  0131BC  A4D8               	btfss	status,2,c
 13123  0131BE  D058               	goto	l12660
 13124  0131C0                     u12220:
 13125                           
 13126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13127                           ;stkvar	_fmt @ sp[(-32)+-4]
 13128  0131C0  0EDC               	movlw	-36
 13129  0131C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13130  0131C8  0EDD               	movlw	-35
 13131  0131CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13132  0131D0  006F FF78  F00B    	movff	postinc2,btemp+10
 13133  0131D6  006F FF74  F00C    	movff	postdec2,btemp+11
 13134  0131DC  0E01               	movlw	1
 13135  0131DE  260B               	addwf	(btemp+10)^0,f,c
 13136  0131E0  0E00               	movlw	0
 13137  0131E2  220C               	addwfc	(btemp+11)^0,f,c
 13138  0131E4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13139  0131EA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13140  0131F0                     	if	0	;tblptru may be non-zero
 13141  0131F0                     	endif
 13142  0131F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13143  0131F0  0E00               	movlw	low (__mediumconst shr (0+16))
 13144  0131F2  6EF8               	movwf	tblptru,c
 13145  0131F4                     	endif
 13146                           
 13147                           ;stkvar	_c @ sp[(-32)+31]
 13148  0131F4  0008               	tblrd		*
 13149  0131F6  0EFF               	movlw	-1
 13150  0131F8  006F FFD7 FFE3     	movff	tablat,plusw1
 13151                           
 13152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13153                           ;stkvar	_fmt @ sp[(-32)+-4]
 13154  0131FE  0EDC               	movlw	-36
 13155  013200  006F FF8F FFD9     	movff	plusw1,fsr2l
 13156  013206  0EDD               	movlw	-35
 13157  013208  006F FF8F FFDA     	movff	plusw1,fsr2h
 13158  01320E  0E02               	movlw	2
 13159  013210  26DE               	addwf	postinc2,f,c
 13160  013212  0E00               	movlw	0
 13161  013214  22DD               	addwfc	postdec2,f,c
 13162                           
 13163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13164                           ;stkvar	_ap @ sp[(-32)+-6]
 13165  013216  0EDA               	movlw	-38
 13166  013218  006F FF8F FFD9     	movff	plusw1,fsr2l
 13167  01321E  0EDB               	movlw	-37
 13168  013220  006F FF8F FFDA     	movff	plusw1,fsr2h
 13169  013226  0E04               	movlw	4
 13170  013228  5EDE               	subwf	postinc2,f,c
 13171  01322A  0E00               	movlw	0
 13172  01322C  5ADD               	subwfb	postdec2,f,c
 13173  01322E  006F FF78  F00B    	movff	postinc2,btemp+10
 13174  013234  006F FF74  F00C    	movff	postdec2,btemp+11
 13175  01323A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13176  013240  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13177  013246  006F FF78  F009    	movff	postinc2,btemp+8
 13178  01324C  006F FF78  F00A    	movff	postinc2,btemp+9
 13179  013252  006F FF78  F00B    	movff	postinc2,btemp+10
 13180  013258  006F FF78  F00C    	movff	postinc2,btemp+11
 13181  01325E  5009               	movf	(btemp+8)^0,w,c
 13182  013260  6E11               	movwf	(btemp+16)^0,c
 13183  013262  500A               	movf	(btemp+9)^0,w,c
 13184  013264  6E12               	movwf	(btemp+17)^0,c
 13185  013266  500B               	movf	(btemp+10)^0,w,c
 13186  013268  6E13               	movwf	(btemp+18)^0,c
 13187  01326A  500C               	movf	(btemp+11)^0,w,c
 13188  01326C  6E14               	movwf	(btemp+19)^0,c
 13189  01326E  D714               	goto	L11
 13190  013270                     l12660:
 13191                           
 13192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13193                           ;stkvar	_fmt @ sp[(-32)+-4]
 13194  013270  0EDC               	movlw	-36
 13195  013272  006F FF8F FFD9     	movff	plusw1,fsr2l
 13196  013278  0EDD               	movlw	-35
 13197  01327A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13198  013280  006F FF7B FFF6     	movff	postinc2,tblptrl
 13199  013286  006F FF77 FFF7     	movff	postdec2,tblptrh
 13200  01328C                     	if	0	;tblptru may be non-zero
 13201  01328C                     	endif
 13202  01328C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13203  01328C  0E00               	movlw	low (__mediumconst shr (0+16))
 13204  01328E  6EF8               	movwf	tblptru,c
 13205  013290                     	endif
 13206  013290  0008               	tblrd		*
 13207  013292  50F5               	movf	tablat,w,c
 13208  013294  0A25               	xorlw	37
 13209  013296  A4D8               	btfss	status,2,c
 13210  013298  D01A               	goto	l12670
 13211                           
 13212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13213                           ;stkvar	_fmt @ sp[(-32)+-4]
 13214  01329A  0EDC               	movlw	-36
 13215  01329C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13216  0132A2  0EDD               	movlw	-35
 13217  0132A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 13218  0132AA  2ADE               	incf	postinc2,f,c
 13219  0132AC  0E00               	movlw	0
 13220  0132AE  22DD               	addwfc	postdec2,f,c
 13221                           
 13222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13223                           ;stkvar	_fp @ sp[(-32)+-2]
 13224  0132B0  0EDE               	movlw	-34
 13225  0132B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13226  0132B8  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  0132BE  0E25               	movlw	37
 13228  0132C0  6EE6               	movwf	postinc1,c
 13229  0132C2  0E00               	movlw	0
 13230  0132C4  6EE6               	movwf	postinc1,c
 13231  0132C6  ECD0  F0CB         	call	_fputc	;wreg free
 13232  0132CA                     l12666:
 13233                           
 13234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13235  0132CA  0E01               	movlw	1
 13236  0132CC  D00C               	goto	L12
 13237  0132CE                     l12670:
 13238                           
 13239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13240                           ;stkvar	_fmt @ sp[(-32)+-4]
 13241  0132CE  0EDC               	movlw	-36
 13242  0132D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 13243  0132D6  0EDD               	movlw	-35
 13244  0132D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 13245  0132DE  2ADE               	incf	postinc2,f,c
 13246  0132E0  0E00               	movlw	0
 13247  0132E2  22DD               	addwfc	postdec2,f,c
 13248                           
 13249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13250  0132E4  0E00               	movlw	0
 13251  0132E6                     L12:
 13252  0132E6  6E01               	movwf	btemp^0,c
 13253  0132E8  0E00               	movlw	0
 13254  0132EA  6E02               	movwf	(btemp+1)^0,c
 13255  0132EC  D02A               	goto	l2362
 13256  0132EE                     l12676:
 13257                           
 13258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13259                           ;stkvar	_fp @ sp[(-32)+-2]
 13260  0132EE  0EDE               	movlw	-34
 13261  0132F0  006F FF8F FFE6     	movff	plusw1,postinc1
 13262  0132F6  006F FF8F FFE6     	movff	plusw1,postinc1
 13263                           
 13264                           ;stkvar	_fmt @ sp[(-34)+-4]
 13265  0132FC  0EDA               	movlw	-38
 13266  0132FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 13267  013304  0EDB               	movlw	-37
 13268  013306  006F FF8F FFDA     	movff	plusw1,fsr2h
 13269  01330C  006F FF7B FFF6     	movff	postinc2,tblptrl
 13270  013312  006F FF77 FFF7     	movff	postdec2,tblptrh
 13271  013318                     	if	0	;tblptru may be non-zero
 13272  013318                     	endif
 13273  013318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13274  013318  0E00               	movlw	low (__mediumconst shr (0+16))
 13275  01331A  6EF8               	movwf	tblptru,c
 13276  01331C                     	endif
 13277  01331C  0008               	tblrd		*
 13278  01331E  50F5               	movf	tablat,w,c
 13279  013320  6EE6               	movwf	postinc1,c
 13280  013322  0E00               	movlw	0
 13281  013324  6EE6               	movwf	postinc1,c
 13282  013326  ECD0  F0CB         	call	_fputc	;wreg free
 13283                           
 13284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13285                           ;stkvar	_fmt @ sp[(-32)+-4]
 13286  01332A  0EDC               	movlw	-36
 13287  01332C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13288  013332  0EDD               	movlw	-35
 13289  013334  006F FF8F FFDA     	movff	plusw1,fsr2h
 13290  01333A  2ADE               	incf	postinc2,f,c
 13291  01333C  0E00               	movlw	0
 13292  01333E  22DD               	addwfc	postdec2,f,c
 13293  013340  D7C4               	goto	l12666
 13294  013342                     l2362:
 13295                           
 13296                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13297  013342  0EDA               	movlw	218
 13298  013344  26E1               	addwf	fsr1l,f,c
 13299  013346  0EFF               	movlw	255
 13300  013348  22E2               	addwfc	fsr1h,f,c
 13301  01334A  0012               	return		;funcret
 13302  01334C                     __end_of_vfpfcnvrt:
 13303                           	opt callstack 0
 13304                           
 13305 ;; *************** function _xtoa *****************
 13306 ;; Defined at:
 13307 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13310 ;;		 -> f(6), NULL(0), 
 13311 ;;  d               8  [STACK] unsigned long long 
 13312 ;;  x               1  [STACK] unsigned char 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  n               8  [STACK] unsigned long long 
 13315 ;;  c               2  [STACK] int 
 13316 ;;  i               2  [STACK] int 
 13317 ;;  w               2  [STACK] int 
 13318 ;;  p               2  [STACK] int 
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  2  [STACK] int 
 13321 ;; Registers used:
 13322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:   20
 13335 ;; This function calls:
 13336 ;;		_isalpha
 13337 ;;		_isupper
 13338 ;;		_pad
 13339 ;;		_toupper
 13340 ;; This function is called by:
 13341 ;;		_vfpfcnvrt
 13342 ;; This function uses a reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text48
 13346  0160C2                     __ptext48:
 13347                           	opt callstack 0
 13348  0160C2                     _xtoa:
 13349                           	opt callstack 0
 13350                           
 13351                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13352  0160C2  0E14               	movlw	20
 13353  0160C4  26E1               	addwf	fsr1l,f,c
 13354  0160C6  0E00               	movlw	0
 13355  0160C8  22E2               	addwfc	fsr1h,f,c
 13356                           
 13357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13358                           
 13359                           ;incstack = 0
 13360 ;; hardware stack exceeded
 13361  0160CA  AE3D               	btfss	(_prec+1)^0,7,c
 13362                           
 13363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13364  0160CC  923E               	bcf	_flags^0,1,c
 13365                           
 13366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13367  0160CE  BE3D               	btfsc	(_prec+1)^0,7,c
 13368  0160D0  D005               	goto	u11760
 13369  0160D2  503D               	movf	(_prec+1)^0,w,c
 13370  0160D4  E110               	bnz	l12396
 13371  0160D6  043C               	decf	_prec^0,w,c
 13372  0160D8  B0D8               	btfsc	status,0,c
 13373  0160DA  D00D               	goto	l12396
 13374  0160DC                     u11760:
 13375  0160DC  0E01               	movlw	1
 13376  0160DE  6E0B               	movwf	(btemp+10)^0,c
 13377  0160E0  0E00               	movlw	0
 13378  0160E2  6E0C               	movwf	(btemp+11)^0,c
 13379                           
 13380                           ;stkvar	_p @ sp[(-20)+18]
 13381  0160E4  0EFE               	movlw	-2
 13382  0160E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13383  0160EC  0EFF               	movlw	-1
 13384  0160EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 13385  0160F4  D008               	goto	l2312
 13386  0160F6                     l12396:
 13387                           
 13388                           ;stkvar	_p @ sp[(-20)+18]
 13389  0160F6  0EFE               	movlw	-2
 13390  0160F8  0060  F0F3  FFE3   	movff	_prec,plusw1
 13391  0160FE  0EFF               	movlw	-1
 13392  016100  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13393  016106                     l2312:
 13394                           
 13395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13396                           ;stkvar	_w @ sp[(-20)+16]
 13397  016106  0EFC               	movlw	-4
 13398  016108  0060  F0EB  FFE3   	movff	_width,plusw1
 13399  01610E  0EFD               	movlw	-3
 13400  016110  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13401                           
 13402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13403  016116  A83E               	btfss	_flags^0,4,c
 13404  016118  D00B               	goto	l12402
 13405                           
 13406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13407                           ;stkvar	_w @ sp[(-20)+16]
 13408  01611A  50E1               	movf	fsr1l,w,c
 13409  01611C  0FFC               	addlw	-4
 13410  01611E  6ED9               	movwf	fsr2l,c
 13411  016120  50E2               	movf	fsr1h,w,c
 13412  016122  6EDA               	movwf	fsr2h,c
 13413  016124  0EFF               	movlw	255
 13414  016126  22DA               	addwfc	fsr2h,f,c
 13415  016128  0EFE               	movlw	254
 13416  01612A  26DE               	addwf	postinc2,f,c
 13417  01612C  0EFF               	movlw	255
 13418  01612E  22DD               	addwfc	postdec2,f,c
 13419  016130                     l12402:
 13420                           
 13421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13422                           ;stkvar	_d @ sp[(-20)+-10]
 13423  016130  0EE2               	movlw	226
 13424  016132  24E1               	addwf	fsr1l,w,c
 13425  016134  6ED9               	movwf	fsr2l,c
 13426  016136  0EFF               	movlw	255
 13427  016138  20E2               	addwfc	fsr1h,w,c
 13428  01613A  6EDA               	movwf	fsr2h,c
 13429                           
 13430                           ;stkvar	_n @ sp[(-20)+4]
 13431  01613C  0E08               	movlw	8
 13432  01613E  6E01               	movwf	btemp^0,c
 13433  016140  0EF0               	movlw	-16
 13434  016142                     us1178999:
 13435  016142  006F FF7B FFE3     	movff	postinc2,plusw1
 13436  016148  28E8               	incf	wreg,w,c
 13437  01614A  2E01               	decfsz	btemp^0,f,c
 13438  01614C  D7FA               	bra	us1178999
 13439                           
 13440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13441  01614E  0E4F               	movlw	79
 13442  016150  6E0B               	movwf	(btemp+10)^0,c
 13443  016152  0E00               	movlw	0
 13444  016154  6E0C               	movwf	(btemp+11)^0,c
 13445                           
 13446                           ;stkvar	_i @ sp[(-20)+14]
 13447  016156  0EFA               	movlw	-6
 13448  016158  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13449  01615E  0EFB               	movlw	-5
 13450  016160  0060  F033  FFE3   	movff	btemp+11,plusw1
 13451                           
 13452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13453  016166  0102               	movlb	2	; () banked
 13454  016168  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13455                           
 13456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13457  01616A  D0EE               	goto	l12440
 13458  01616C                     l12408:
 13459                           
 13460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13461                           ;stkvar	_i @ sp[(-20)+14]
 13462  01616C  50E1               	movf	fsr1l,w,c
 13463  01616E  0FFA               	addlw	-6
 13464  016170  6ED9               	movwf	fsr2l,c
 13465  016172  50E2               	movf	fsr1h,w,c
 13466  016174  6EDA               	movwf	fsr2h,c
 13467  016176  0EFF               	movlw	255
 13468  016178  22DA               	addwfc	fsr2h,f,c
 13469  01617A  06DE               	decf	postinc2,f,c
 13470  01617C  0E00               	movlw	0
 13471  01617E  5ADD               	subwfb	postdec2,f,c
 13472                           
 13473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13474                           ;stkvar	_n @ sp[(-20)+4]
 13475  016180  0EF0               	movlw	-16
 13476  016182  006F FF8C  F00B    	movff	plusw1,btemp+10
 13477  016188  0EF1               	movlw	-15
 13478  01618A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13479  016190  0E0F               	movlw	15
 13480  016192  160B               	andwf	(btemp+10)^0,f,c
 13481  016194  0E00               	movlw	0
 13482  016196  160C               	andwf	(btemp+11)^0,f,c
 13483                           
 13484                           ;stkvar	_c @ sp[(-20)+12]
 13485  016198  0EF8               	movlw	-8
 13486  01619A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13487  0161A0  0EF9               	movlw	-7
 13488  0161A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13489                           
 13490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13491                           ;stkvar	_c @ sp[(-20)+12]
 13492  0161A8  0EF9               	movlw	-7
 13493  0161AA  BEE3               	btfsc	plusw1,7,c
 13494  0161AC  D00F               	goto	l12416
 13495  0161AE  0EF9               	movlw	-7
 13496  0161B0  50E3               	movf	plusw1,w,c
 13497  0161B2  E108               	bnz	u11790
 13498  0161B4  0EF8               	movlw	-8
 13499  0161B6  006F FF8C  F001    	movff	plusw1,btemp
 13500  0161BC  0E0A               	movlw	10
 13501  0161BE  5E01               	subwf	btemp^0,f,c
 13502  0161C0  A0D8               	btfss	status,0,c
 13503  0161C2  D004               	goto	l12416
 13504  0161C4                     u11790:
 13505                           
 13506                           ;stkvar	_c @ sp[(-20)+12]
 13507  0161C4  0EF8               	movlw	-8
 13508  0161C6  50E3               	movf	plusw1,w,c
 13509  0161C8  0F57               	addlw	87
 13510  0161CA  D003               	goto	L13
 13511  0161CC                     l12416:
 13512                           
 13513                           ;stkvar	_c @ sp[(-20)+12]
 13514  0161CC  0EF8               	movlw	-8
 13515  0161CE  50E3               	movf	plusw1,w,c
 13516  0161D0  0F30               	addlw	48
 13517  0161D2                     L13:
 13518  0161D2  6E0B               	movwf	(btemp+10)^0,c
 13519  0161D4  0EF9               	movlw	-7
 13520  0161D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13521  0161DC  0E00               	movlw	0
 13522  0161DE  220C               	addwfc	(btemp+11)^0,f,c
 13523                           
 13524                           ;stkvar	_c @ sp[(-20)+12]
 13525  0161E0  0EF8               	movlw	-8
 13526  0161E2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13527  0161E8  0EF9               	movlw	-7
 13528  0161EA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13529  0161F0  0EBF               	movlw	191
 13530  0161F2  6E0B               	movwf	(btemp+10)^0,c
 13531  0161F4  0EFF               	movlw	255
 13532  0161F6  6E0C               	movwf	(btemp+11)^0,c
 13533                           
 13534                           ;stkvar	_x @ sp[(-20)+-11]
 13535  0161F8  0EE1               	movlw	-31
 13536  0161FA  50E3               	movf	plusw1,w,c
 13537  0161FC  6E09               	movwf	(btemp+8)^0,c
 13538  0161FE  6A0A               	clrf	(btemp+9)^0,c
 13539  016200  500B               	movf	(btemp+10)^0,w,c
 13540  016202  2609               	addwf	(btemp+8)^0,f,c
 13541  016204  500C               	movf	(btemp+11)^0,w,c
 13542  016206  220A               	addwfc	(btemp+9)^0,f,c
 13543  016208  500A               	movf	(btemp+9)^0,w,c
 13544  01620A  E106               	bnz	u11800
 13545  01620C  0E1A               	movlw	26
 13546  01620E  5C09               	subwf	(btemp+8)^0,w,c
 13547  016210  B0D8               	btfsc	status,0,c
 13548  016212  D002               	goto	u11800
 13549  016214  0E01               	movlw	1
 13550  016216  D001               	goto	u11810
 13551  016218                     u11800:
 13552  016218  0E00               	movlw	0
 13553  01621A                     u11810:
 13554  01621A  6E0B               	movwf	(btemp+10)^0,c
 13555  01621C  6A0C               	clrf	(btemp+11)^0,c
 13556                           
 13557                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13558  01621E  0EEE               	movlw	-18
 13559  016220  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13560  016226  0EEF               	movlw	-17
 13561  016228  0060  F033  FFE3   	movff	btemp+11,plusw1
 13562                           
 13563                           ;stkvar	_xtoa$5555 @ sp[(-20)+2]
 13564  01622E  0EEE               	movlw	-18
 13565  016230  006F FF8C  F001    	movff	plusw1,btemp
 13566  016236  0EEF               	movlw	-17
 13567  016238  50E3               	movf	plusw1,w,c
 13568  01623A  1001               	iorwf	btemp^0,w,c
 13569  01623C  B4D8               	btfsc	status,2,c
 13570  01623E  D041               	goto	l12432
 13571  016240  0E9F               	movlw	159
 13572  016242  6E0B               	movwf	(btemp+10)^0,c
 13573  016244  0EFF               	movlw	255
 13574  016246  6E0C               	movwf	(btemp+11)^0,c
 13575                           
 13576                           ;stkvar	_c @ sp[(-20)+12]
 13577  016248  0EF8               	movlw	-8
 13578  01624A  006F FF8C  F009    	movff	plusw1,btemp+8
 13579  016250  0EF9               	movlw	-7
 13580  016252  006F FF8C  F00A    	movff	plusw1,btemp+9
 13581  016258  0E20               	movlw	32
 13582  01625A  1209               	iorwf	(btemp+8)^0,f,c
 13583  01625C  0E00               	movlw	0
 13584  01625E  120A               	iorwf	(btemp+9)^0,f,c
 13585  016260  500B               	movf	(btemp+10)^0,w,c
 13586  016262  2609               	addwf	(btemp+8)^0,f,c
 13587  016264  500C               	movf	(btemp+11)^0,w,c
 13588  016266  220A               	addwfc	(btemp+9)^0,f,c
 13589  016268  500A               	movf	(btemp+9)^0,w,c
 13590  01626A  E106               	bnz	u11830
 13591  01626C  0E1A               	movlw	26
 13592  01626E  5C09               	subwf	(btemp+8)^0,w,c
 13593  016270  B0D8               	btfsc	status,0,c
 13594  016272  D002               	goto	u11830
 13595  016274  0E01               	movlw	1
 13596  016276  D001               	goto	u11840
 13597  016278                     u11830:
 13598  016278  0E00               	movlw	0
 13599  01627A                     u11840:
 13600  01627A  6E0B               	movwf	(btemp+10)^0,c
 13601  01627C  6A0C               	clrf	(btemp+11)^0,c
 13602                           
 13603                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13604  01627E  0EEC               	movlw	-20
 13605  016280  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13606  016286  0EED               	movlw	-19
 13607  016288  0060  F033  FFE3   	movff	btemp+11,plusw1
 13608                           
 13609                           ;stkvar	_xtoa$5556 @ sp[(-20)+0]
 13610  01628E  0EEC               	movlw	-20
 13611  016290  006F FF8C  F001    	movff	plusw1,btemp
 13612  016296  0EED               	movlw	-19
 13613  016298  50E3               	movf	plusw1,w,c
 13614  01629A  1001               	iorwf	btemp^0,w,c
 13615  01629C  B4D8               	btfsc	status,2,c
 13616  01629E  D011               	goto	l12432
 13617                           
 13618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13619                           ;stkvar	_c @ sp[(-20)+12]
 13620  0162A0  0EF8               	movlw	-8
 13621  0162A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13622  0162A8  006F FF8F FFE6     	movff	plusw1,postinc1
 13623  0162AE  EC2A  F0D6         	call	_toupper	;wreg free
 13624                           
 13625                           ;stkvar	_c @ sp[(-20)+12]
 13626  0162B2  0EF8               	movlw	-8
 13627  0162B4  0060  F007  FFE3   	movff	btemp,plusw1
 13628  0162BA  0EF9               	movlw	-7
 13629  0162BC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13630  0162C2                     l12432:
 13631                           
 13632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13633                           ;stkvar	_c @ sp[(-20)+12]
 13634                           ;stkvar	_i @ sp[(-20)+14]
 13635  0162C2  0EFA               	movlw	-6
 13636  0162C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13637  0162CA  0EFB               	movlw	-5
 13638  0162CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13639  0162D2  0E97               	movlw	low _dbuf
 13640  0162D4  240B               	addwf	(btemp+10)^0,w,c
 13641  0162D6  6ED9               	movwf	fsr2l,c
 13642  0162D8  0E02               	movlw	high _dbuf
 13643  0162DA  200C               	addwfc	(btemp+11)^0,w,c
 13644  0162DC  6EDA               	movwf	fsr2h,c
 13645  0162DE  0EF8               	movlw	-8
 13646  0162E0  006F FF8F FFDF     	movff	plusw1,indf2
 13647                           
 13648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13649                           ;stkvar	_p @ sp[(-20)+18]
 13650  0162E6  50E1               	movf	fsr1l,w,c
 13651  0162E8  0FFE               	addlw	-2
 13652  0162EA  6ED9               	movwf	fsr2l,c
 13653  0162EC  50E2               	movf	fsr1h,w,c
 13654  0162EE  6EDA               	movwf	fsr2h,c
 13655  0162F0  0EFF               	movlw	255
 13656  0162F2  22DA               	addwfc	fsr2h,f,c
 13657  0162F4  06DE               	decf	postinc2,f,c
 13658  0162F6  0E00               	movlw	0
 13659  0162F8  5ADD               	subwfb	postdec2,f,c
 13660                           
 13661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13662                           ;stkvar	_w @ sp[(-20)+16]
 13663  0162FA  50E1               	movf	fsr1l,w,c
 13664  0162FC  0FFC               	addlw	-4
 13665  0162FE  6ED9               	movwf	fsr2l,c
 13666  016300  50E2               	movf	fsr1h,w,c
 13667  016302  6EDA               	movwf	fsr2h,c
 13668  016304  0EFF               	movlw	255
 13669  016306  22DA               	addwfc	fsr2h,f,c
 13670  016308  06DE               	decf	postinc2,f,c
 13671  01630A  0E00               	movlw	0
 13672  01630C  5ADD               	subwfb	postdec2,f,c
 13673                           
 13674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13675  01630E  0E04               	movlw	4
 13676  016310  6E0C               	movwf	(btemp+11)^0,c
 13677                           
 13678                           ;stkvar	_n @ sp[(-20)+4]
 13679  016312  50E1               	movf	fsr1l,w,c
 13680  016314  0FF0               	addlw	-16
 13681  016316  6ED9               	movwf	fsr2l,c
 13682  016318  50E2               	movf	fsr1h,w,c
 13683  01631A  6EDA               	movwf	fsr2h,c
 13684  01631C  0EFF               	movlw	255
 13685  01631E  22DA               	addwfc	fsr2h,f,c
 13686  016320  280C               	incf	(btemp+11)^0,w,c
 13687  016322  52DE               	movf	postinc2,f,c
 13688  016324  D00F               	goto	u11860
 13689  016326                     u11865:
 13690  016326  52DE               	movf	postinc2,f,c
 13691  016328  52DE               	movf	postinc2,f,c
 13692  01632A  52DE               	movf	postinc2,f,c
 13693  01632C  52DE               	movf	postinc2,f,c
 13694  01632E  52DE               	movf	postinc2,f,c
 13695  016330  52DE               	movf	postinc2,f,c
 13696  016332  90D8               	bcf	status,0,c
 13697  016334  32DD               	rrcf	postdec2,f,c
 13698  016336  32DD               	rrcf	postdec2,f,c
 13699  016338  32DD               	rrcf	postdec2,f,c
 13700  01633A  32DD               	rrcf	postdec2,f,c
 13701  01633C  32DD               	rrcf	postdec2,f,c
 13702  01633E  32DD               	rrcf	postdec2,f,c
 13703  016340  32DD               	rrcf	postdec2,f,c
 13704  016342  32DE               	rrcf	postinc2,f,c
 13705  016344                     u11860:
 13706  016344  2EE8               	decfsz	wreg,f,c
 13707  016346  D7EF               	goto	u11865
 13708  016348                     l12440:
 13709                           
 13710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13711                           ;stkvar	_i @ sp[(-20)+14]
 13712  016348  0EFB               	movlw	-5
 13713  01634A  BEE3               	btfsc	plusw1,7,c
 13714  01634C  D03A               	goto	u11910
 13715  01634E  0EFB               	movlw	-5
 13716  016350  50E3               	movf	plusw1,w,c
 13717  016352  E108               	bnz	u11870
 13718  016354  0EFA               	movlw	-6
 13719  016356  006F FF8C  F001    	movff	plusw1,btemp
 13720  01635C  0E02               	movlw	2
 13721  01635E  5E01               	subwf	btemp^0,f,c
 13722  016360  A0D8               	btfss	status,0,c
 13723  016362  D02F               	goto	u11910
 13724  016364                     u11870:
 13725                           
 13726                           ;stkvar	_n @ sp[(-20)+4]
 13727  016364  0EF0               	movlw	-16
 13728  016366  50E3               	movf	plusw1,w,c
 13729  016368  E115               	bnz	u11881
 13730  01636A  0EF1               	movlw	-15
 13731  01636C  50E3               	movf	plusw1,w,c
 13732  01636E  E112               	bnz	u11881
 13733  016370  0EF2               	movlw	-14
 13734  016372  50E3               	movf	plusw1,w,c
 13735  016374  E10F               	bnz	u11881
 13736  016376  0EF3               	movlw	-13
 13737  016378  50E3               	movf	plusw1,w,c
 13738  01637A  E10C               	bnz	u11881
 13739  01637C  0EF4               	movlw	-12
 13740  01637E  50E3               	movf	plusw1,w,c
 13741  016380  E109               	bnz	u11881
 13742  016382  0EF5               	movlw	-11
 13743  016384  50E3               	movf	plusw1,w,c
 13744  016386  E106               	bnz	u11881
 13745  016388  0EF6               	movlw	-10
 13746  01638A  50E3               	movf	plusw1,w,c
 13747  01638C  E103               	bnz	u11881
 13748  01638E  0EF7               	movlw	-9
 13749  016390  50E3               	movf	plusw1,w,c
 13750  016392  A4D8               	btfss	status,2,c
 13751  016394                     u11881:
 13752  016394  D6EB               	goto	l12408
 13753                           
 13754                           ;stkvar	_p @ sp[(-20)+18]
 13755  016396  0EFF               	movlw	-1
 13756  016398  BEE3               	btfsc	plusw1,7,c
 13757  01639A  D007               	goto	u11890
 13758  01639C  0EFF               	movlw	-1
 13759  01639E  50E3               	movf	plusw1,w,c
 13760  0163A0  E103               	bnz	u11891
 13761  0163A2  0EFE               	movlw	-2
 13762  0163A4  04E3               	decf	plusw1,w,c
 13763  0163A6  B0D8               	btfsc	status,0,c
 13764  0163A8                     u11891:
 13765  0163A8  D6E1               	goto	l12408
 13766  0163AA                     u11890:
 13767                           
 13768                           ;stkvar	_w @ sp[(-20)+16]
 13769  0163AA  0EFD               	movlw	-3
 13770  0163AC  BEE3               	btfsc	plusw1,7,c
 13771  0163AE  D009               	goto	u11910
 13772  0163B0  0EFD               	movlw	-3
 13773  0163B2  50E3               	movf	plusw1,w,c
 13774  0163B4  E104               	bnz	u11900
 13775  0163B6  0EFC               	movlw	-4
 13776  0163B8  04E3               	decf	plusw1,w,c
 13777  0163BA  A0D8               	btfss	status,0,c
 13778  0163BC  D002               	goto	u11910
 13779  0163BE                     u11900:
 13780  0163BE  B23E               	btfsc	_flags^0,1,c
 13781  0163C0  D6D5               	goto	l12408
 13782  0163C2                     u11910:
 13783                           
 13784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13785  0163C2  A83E               	btfss	_flags^0,4,c
 13786  0163C4  D036               	goto	l12456
 13787                           
 13788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13789                           ;stkvar	_i @ sp[(-20)+14]
 13790  0163C6  50E1               	movf	fsr1l,w,c
 13791  0163C8  0FFA               	addlw	-6
 13792  0163CA  6ED9               	movwf	fsr2l,c
 13793  0163CC  50E2               	movf	fsr1h,w,c
 13794  0163CE  6EDA               	movwf	fsr2h,c
 13795  0163D0  0EFF               	movlw	255
 13796  0163D2  22DA               	addwfc	fsr2h,f,c
 13797  0163D4  06DE               	decf	postinc2,f,c
 13798  0163D6  0E00               	movlw	0
 13799  0163D8  5ADD               	subwfb	postdec2,f,c
 13800                           
 13801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13802                           ;stkvar	_x @ sp[(-20)+-11]
 13803                           ;stkvar	_i @ sp[(-20)+14]
 13804  0163DA  0EFA               	movlw	-6
 13805  0163DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13806  0163E2  0EFB               	movlw	-5
 13807  0163E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13808  0163EA  0E97               	movlw	low _dbuf
 13809  0163EC  240B               	addwf	(btemp+10)^0,w,c
 13810  0163EE  6ED9               	movwf	fsr2l,c
 13811  0163F0  0E02               	movlw	high _dbuf
 13812  0163F2  200C               	addwfc	(btemp+11)^0,w,c
 13813  0163F4  6EDA               	movwf	fsr2h,c
 13814  0163F6  0EE1               	movlw	-31
 13815  0163F8  006F FF8F FFDF     	movff	plusw1,indf2
 13816                           
 13817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13818                           ;stkvar	_i @ sp[(-20)+14]
 13819  0163FE  50E1               	movf	fsr1l,w,c
 13820  016400  0FFA               	addlw	-6
 13821  016402  6ED9               	movwf	fsr2l,c
 13822  016404  50E2               	movf	fsr1h,w,c
 13823  016406  6EDA               	movwf	fsr2h,c
 13824  016408  0EFF               	movlw	255
 13825  01640A  22DA               	addwfc	fsr2h,f,c
 13826  01640C  06DE               	decf	postinc2,f,c
 13827  01640E  0E00               	movlw	0
 13828  016410  5ADD               	subwfb	postdec2,f,c
 13829                           
 13830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13831                           ;stkvar	_i @ sp[(-20)+14]
 13832  016412  0EFA               	movlw	-6
 13833  016414  006F FF8C  F00B    	movff	plusw1,btemp+10
 13834  01641A  0EFB               	movlw	-5
 13835  01641C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13836  016422  0E97               	movlw	low _dbuf
 13837  016424  240B               	addwf	(btemp+10)^0,w,c
 13838  016426  6ED9               	movwf	fsr2l,c
 13839  016428  0E02               	movlw	high _dbuf
 13840  01642A  200C               	addwfc	(btemp+11)^0,w,c
 13841  01642C  6EDA               	movwf	fsr2h,c
 13842  01642E  0E30               	movlw	48
 13843  016430  6EDF               	movwf	indf2,c
 13844  016432                     l12456:
 13845                           
 13846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13847                           ;stkvar	_w @ sp[(-20)+16]
 13848  016432  0EFC               	movlw	-4
 13849  016434  006F FF8F FFE6     	movff	plusw1,postinc1
 13850  01643A  006F FF8F FFE6     	movff	plusw1,postinc1
 13851                           
 13852                           ;stkvar	_i @ sp[(-22)+14]
 13853  016440  0E97               	movlw	low _dbuf
 13854  016442  6E0B               	movwf	(btemp+10)^0,c
 13855  016444  0E02               	movlw	high _dbuf
 13856  016446  6E0C               	movwf	(btemp+11)^0,c
 13857  016448  0EF8               	movlw	-8
 13858  01644A  50E3               	movf	plusw1,w,c
 13859  01644C  260B               	addwf	(btemp+10)^0,f,c
 13860  01644E  0EF9               	movlw	-7
 13861  016450  50E3               	movf	plusw1,w,c
 13862  016452  220C               	addwfc	(btemp+11)^0,f,c
 13863  016454  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13864  01645A  0060  F033  FFE6   	movff	btemp+11,postinc1
 13865                           
 13866                           ;stkvar	_fp @ sp[(-24)+-2]
 13867  016460  0EE6               	movlw	-26
 13868  016462  006F FF8F FFE6     	movff	plusw1,postinc1
 13869  016468  006F FF8F FFE6     	movff	plusw1,postinc1
 13870  01646E  ECEE  F0CC         	call	_pad	;wreg free
 13871                           
 13872                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13873  016472  0EE1               	movlw	225
 13874  016474  26E1               	addwf	fsr1l,f,c
 13875  016476  0EFF               	movlw	255
 13876  016478  22E2               	addwfc	fsr1h,f,c
 13877  01647A  0012               	return		;funcret
 13878  01647C                     __end_of_xtoa:
 13879                           	opt callstack 0
 13880                           
 13881 ;; *************** function _toupper *****************
 13882 ;; Defined at:
 13883 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;  c               2  [STACK] int 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  2  [STACK] int 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/2
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;Total ram usage:        0 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:   16
 13904 ;; This function calls:
 13905 ;;		_islower
 13906 ;; This function is called by:
 13907 ;;		_xtoa
 13908 ;; This function uses a reentrant model
 13909 ;;
 13910                           
 13911                           	psect	text49
 13912  01AC54                     __ptext49:
 13913                           	opt callstack 0
 13914  01AC54                     _toupper:
 13915                           	opt callstack 0
 13916                           
 13917                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13918  01AC54  52E6               	movf	postinc1,f,c
 13919  01AC56  52E6               	movf	postinc1,f,c
 13920                           
 13921                           ;stkvar	_c @ sp[(-2)+-2]
 13922                           
 13923                           ;incstack = 0
 13924 ;; hardware stack exceeded
 13925  01AC58  0EFC               	movlw	-4
 13926  01AC5A  50E3               	movf	plusw1,w,c
 13927  01AC5C  0F9F               	addlw	159
 13928  01AC5E  6E0B               	movwf	(btemp+10)^0,c
 13929  01AC60  0EFD               	movlw	-3
 13930  01AC62  006F FF8C  F00C    	movff	plusw1,btemp+11
 13931  01AC68  0EFF               	movlw	255
 13932  01AC6A  220C               	addwfc	(btemp+11)^0,f,c
 13933  01AC6C  500C               	movf	(btemp+11)^0,w,c
 13934  01AC6E  E106               	bnz	u6230
 13935  01AC70  0E1A               	movlw	26
 13936  01AC72  5C0B               	subwf	(btemp+10)^0,w,c
 13937  01AC74  B0D8               	btfsc	status,0,c
 13938  01AC76  D002               	goto	u6230
 13939  01AC78  0E01               	movlw	1
 13940  01AC7A  D001               	goto	u6240
 13941  01AC7C                     u6230:
 13942  01AC7C  0E00               	movlw	0
 13943  01AC7E                     u6240:
 13944  01AC7E  6E0B               	movwf	(btemp+10)^0,c
 13945  01AC80  6A0C               	clrf	(btemp+11)^0,c
 13946                           
 13947                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13948  01AC82  0EFE               	movlw	-2
 13949  01AC84  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13950  01AC8A  0EFF               	movlw	-1
 13951  01AC8C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13952                           
 13953                           ;stkvar	_toupper$6362 @ sp[(-2)+0]
 13954  01AC92  0EFE               	movlw	-2
 13955  01AC94  006F FF8C  F001    	movff	plusw1,btemp
 13956  01AC9A  0EFF               	movlw	-1
 13957  01AC9C  50E3               	movf	plusw1,w,c
 13958  01AC9E  1001               	iorwf	btemp^0,w,c
 13959  01ACA0  B4D8               	btfsc	status,2,c
 13960  01ACA2  D00D               	goto	l8100
 13961                           
 13962                           ;stkvar	_c @ sp[(-2)+-2]
 13963  01ACA4  0EFC               	movlw	-4
 13964  01ACA6  006F FF8C  F001    	movff	plusw1,btemp
 13965  01ACAC  0EFD               	movlw	-3
 13966  01ACAE  006F FF8C  F002    	movff	plusw1,btemp+1
 13967  01ACB4  0E5F               	movlw	95
 13968  01ACB6  1601               	andwf	btemp^0,f,c
 13969  01ACB8  0E00               	movlw	0
 13970  01ACBA  1602               	andwf	(btemp+1)^0,f,c
 13971  01ACBC  D008               	goto	l3479
 13972  01ACBE                     l8100:
 13973                           
 13974                           ;stkvar	_c @ sp[(-2)+-2]
 13975  01ACBE  0EFC               	movlw	-4
 13976  01ACC0  006F FF8C  F001    	movff	plusw1,btemp
 13977  01ACC6  0EFD               	movlw	-3
 13978  01ACC8  006F FF8C  F002    	movff	plusw1,btemp+1
 13979  01ACCE                     l3479:
 13980                           
 13981                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13982  01ACCE  52E5               	movf	postdec1,f,c
 13983  01ACD0  52E5               	movf	postdec1,f,c
 13984  01ACD2  52E5               	movf	postdec1,f,c
 13985  01ACD4  52E5               	movf	postdec1,f,c
 13986  01ACD6  0012               	return		;funcret
 13987  01ACD8                     __end_of_toupper:
 13988                           	opt callstack 0
 13989                           
 13990 ;; *************** function _islower *****************
 13991 ;; Defined at:
 13992 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  c               2  [STACK] int 
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;		None
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  2  [STACK] int 
 13999 ;; Registers used:
 14000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14001 ;; Tracked objects:
 14002 ;;		On entry : 0/0
 14003 ;;		On exit  : 0/0
 14004 ;;		Unchanged: 0/0
 14005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;Total ram usage:        0 bytes
 14011 ;; Hardware stack levels used:    1
 14012 ;; Hardware stack levels required when called:   15
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_toupper
 14017 ;; This function uses a reentrant model
 14018 ;;
 14019                           
 14020                           	psect	text50
 14021  01B982                     __ptext50:
 14022                           	opt callstack 0
 14023  01B982                     _islower:
 14024                           	opt callstack 0
 14025                           
 14026                           ;stkvar	_c @ sp[(0)+-2]
 14027                           
 14028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14029                           ;incstack = 0
 14030 ;; hardware stack exceeded
 14031  01B982  0EFE               	movlw	-2
 14032  01B984  50E3               	movf	plusw1,w,c
 14033  01B986  0F9F               	addlw	159
 14034  01B988  6E0B               	movwf	(btemp+10)^0,c
 14035  01B98A  0EFF               	movlw	-1
 14036  01B98C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14037  01B992  0EFF               	movlw	255
 14038  01B994  220C               	addwfc	(btemp+11)^0,f,c
 14039  01B996  500C               	movf	(btemp+11)^0,w,c
 14040  01B998  E106               	bnz	u5870
 14041  01B99A  0E1A               	movlw	26
 14042  01B99C  5C0B               	subwf	(btemp+10)^0,w,c
 14043  01B99E  B0D8               	btfsc	status,0,c
 14044  01B9A0  D002               	goto	u5870
 14045  01B9A2  0E01               	movlw	1
 14046  01B9A4  D001               	goto	u5880
 14047  01B9A6                     u5870:
 14048  01B9A6  0E00               	movlw	0
 14049  01B9A8                     u5880:
 14050  01B9A8  6E01               	movwf	btemp^0,c
 14051  01B9AA  6A02               	clrf	(btemp+1)^0,c
 14052                           
 14053                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14054  01B9AC  52E5               	movf	postdec1,f,c
 14055  01B9AE  52E5               	movf	postdec1,f,c
 14056  01B9B0  0012               	return		;funcret
 14057  01B9B2                     __end_of_islower:
 14058                           	opt callstack 0
 14059                           
 14060 ;; *************** function _isalpha *****************
 14061 ;; Defined at:
 14062 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;  c               2  [STACK] int 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  2  [STACK] int 
 14069 ;; Registers used:
 14070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14080 ;;Total ram usage:        0 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; Hardware stack levels required when called:   15
 14083 ;; This function calls:
 14084 ;;		Nothing
 14085 ;; This function is called by:
 14086 ;;		_xtoa
 14087 ;; This function uses a reentrant model
 14088 ;;
 14089                           
 14090                           	psect	text51
 14091  01B5C4                     __ptext51:
 14092                           	opt callstack 0
 14093  01B5C4                     _isalpha:
 14094                           	opt callstack 0
 14095                           
 14096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14097                           ;incstack = 0
 14098 ;; hardware stack exceeded
 14099  01B5C4  0E9F               	movlw	159
 14100  01B5C6  6E0B               	movwf	(btemp+10)^0,c
 14101  01B5C8  0EFF               	movlw	255
 14102  01B5CA  6E0C               	movwf	(btemp+11)^0,c
 14103                           
 14104                           ;stkvar	_c @ sp[(0)+-2]
 14105  01B5CC  0EFE               	movlw	-2
 14106  01B5CE  006F FF8C  F009    	movff	plusw1,btemp+8
 14107  01B5D4  0EFF               	movlw	-1
 14108  01B5D6  006F FF8C  F00A    	movff	plusw1,btemp+9
 14109  01B5DC  0E20               	movlw	32
 14110  01B5DE  1209               	iorwf	(btemp+8)^0,f,c
 14111  01B5E0  0E00               	movlw	0
 14112  01B5E2  120A               	iorwf	(btemp+9)^0,f,c
 14113  01B5E4  500B               	movf	(btemp+10)^0,w,c
 14114  01B5E6  2609               	addwf	(btemp+8)^0,f,c
 14115  01B5E8  500C               	movf	(btemp+11)^0,w,c
 14116  01B5EA  220A               	addwfc	(btemp+9)^0,f,c
 14117  01B5EC  500A               	movf	(btemp+9)^0,w,c
 14118  01B5EE  E106               	bnz	u6210
 14119  01B5F0  0E1A               	movlw	26
 14120  01B5F2  5C09               	subwf	(btemp+8)^0,w,c
 14121  01B5F4  B0D8               	btfsc	status,0,c
 14122  01B5F6  D002               	goto	u6210
 14123  01B5F8  0E01               	movlw	1
 14124  01B5FA  D001               	goto	u6220
 14125  01B5FC                     u6210:
 14126  01B5FC  0E00               	movlw	0
 14127  01B5FE                     u6220:
 14128  01B5FE  6E01               	movwf	btemp^0,c
 14129  01B600  6A02               	clrf	(btemp+1)^0,c
 14130                           
 14131                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14132  01B602  52E5               	movf	postdec1,f,c
 14133  01B604  52E5               	movf	postdec1,f,c
 14134  01B606  0012               	return		;funcret
 14135  01B608                     __end_of_isalpha:
 14136                           	opt callstack 0
 14137                           
 14138 ;; *************** function _utoa *****************
 14139 ;; Defined at:
 14140 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14141 ;; Parameters:    Size  Location     Type
 14142 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14143 ;;		 -> f(6), NULL(0), 
 14144 ;;  d               8  [STACK] unsigned long long 
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;  n               8  [STACK] unsigned long long 
 14147 ;;  i               2  [STACK] int 
 14148 ;;  w               2  [STACK] int 
 14149 ;;  p               2  [STACK] int 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  2  [STACK] int 
 14152 ;; Registers used:
 14153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;Total ram usage:        0 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:   20
 14166 ;; This function calls:
 14167 ;;		___lodiv
 14168 ;;		___lomod
 14169 ;;		_pad
 14170 ;; This function is called by:
 14171 ;;		_vfpfcnvrt
 14172 ;; This function uses a reentrant model
 14173 ;;
 14174                           
 14175                           	psect	text52
 14176  0167E8                     __ptext52:
 14177                           	opt callstack 0
 14178  0167E8                     _utoa:
 14179                           	opt callstack 0
 14180                           
 14181                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14182  0167E8  0E0E               	movlw	14
 14183  0167EA  26E1               	addwf	fsr1l,f,c
 14184  0167EC  0E00               	movlw	0
 14185  0167EE  22E2               	addwfc	fsr1h,f,c
 14186                           
 14187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14188                           
 14189                           ;incstack = 0
 14190 ;; hardware stack exceeded
 14191  0167F0  AE3D               	btfss	(_prec+1)^0,7,c
 14192                           
 14193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14194  0167F2  923E               	bcf	_flags^0,1,c
 14195                           
 14196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14197  0167F4  BE3D               	btfsc	(_prec+1)^0,7,c
 14198  0167F6  D005               	goto	u11680
 14199  0167F8  503D               	movf	(_prec+1)^0,w,c
 14200  0167FA  E110               	bnz	l12356
 14201  0167FC  043C               	decf	_prec^0,w,c
 14202  0167FE  B0D8               	btfsc	status,0,c
 14203  016800  D00D               	goto	l12356
 14204  016802                     u11680:
 14205  016802  0E01               	movlw	1
 14206  016804  6E0B               	movwf	(btemp+10)^0,c
 14207  016806  0E00               	movlw	0
 14208  016808  6E0C               	movwf	(btemp+11)^0,c
 14209                           
 14210                           ;stkvar	_p @ sp[(-14)+12]
 14211  01680A  0EFE               	movlw	-2
 14212  01680C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14213  016812  0EFF               	movlw	-1
 14214  016814  0060  F033  FFE3   	movff	btemp+11,plusw1
 14215  01681A  D008               	goto	l2297
 14216  01681C                     l12356:
 14217                           
 14218                           ;stkvar	_p @ sp[(-14)+12]
 14219  01681C  0EFE               	movlw	-2
 14220  01681E  0060  F0F3  FFE3   	movff	_prec,plusw1
 14221  016824  0EFF               	movlw	-1
 14222  016826  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14223  01682C                     l2297:
 14224                           
 14225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14226                           ;stkvar	_w @ sp[(-14)+10]
 14227  01682C  0EFC               	movlw	-4
 14228  01682E  0060  F0EB  FFE3   	movff	_width,plusw1
 14229  016834  0EFD               	movlw	-3
 14230  016836  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14231                           
 14232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14233                           ;stkvar	_d @ sp[(-14)+-10]
 14234  01683C  0EE8               	movlw	232
 14235  01683E  24E1               	addwf	fsr1l,w,c
 14236  016840  6ED9               	movwf	fsr2l,c
 14237  016842  0EFF               	movlw	255
 14238  016844  20E2               	addwfc	fsr1h,w,c
 14239  016846  6EDA               	movwf	fsr2h,c
 14240                           
 14241                           ;stkvar	_n @ sp[(-14)+0]
 14242  016848  0E08               	movlw	8
 14243  01684A  6E01               	movwf	btemp^0,c
 14244  01684C  0EF2               	movlw	-14
 14245  01684E                     us1169999:
 14246  01684E  006F FF7B FFE3     	movff	postinc2,plusw1
 14247  016854  28E8               	incf	wreg,w,c
 14248  016856  2E01               	decfsz	btemp^0,f,c
 14249  016858  D7FA               	bra	us1169999
 14250                           
 14251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14252  01685A  0E4F               	movlw	79
 14253  01685C  6E0B               	movwf	(btemp+10)^0,c
 14254  01685E  0E00               	movlw	0
 14255  016860  6E0C               	movwf	(btemp+11)^0,c
 14256                           
 14257                           ;stkvar	_i @ sp[(-14)+8]
 14258  016862  0EFA               	movlw	-6
 14259  016864  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14260  01686A  0EFB               	movlw	-5
 14261  01686C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14262                           
 14263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14264  016872  0102               	movlb	2	; () banked
 14265  016874  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14266                           
 14267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14268  016876  D0FB               	goto	l12374
 14269  016878                     l12364:
 14270                           
 14271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14272                           ;stkvar	_i @ sp[(-14)+8]
 14273  016878  50E1               	movf	fsr1l,w,c
 14274  01687A  0FFA               	addlw	-6
 14275  01687C  6ED9               	movwf	fsr2l,c
 14276  01687E  50E2               	movf	fsr1h,w,c
 14277  016880  6EDA               	movwf	fsr2h,c
 14278  016882  0EFF               	movlw	255
 14279  016884  22DA               	addwfc	fsr2h,f,c
 14280  016886  06DE               	decf	postinc2,f,c
 14281  016888  0E00               	movlw	0
 14282  01688A  5ADD               	subwfb	postdec2,f,c
 14283                           
 14284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14285  01688C  0E0A               	movlw	10
 14286  01688E  6EE6               	movwf	postinc1,c
 14287  016890  0E00               	movlw	0
 14288  016892  6EE6               	movwf	postinc1,c
 14289  016894  0E00               	movlw	0
 14290  016896  6EE6               	movwf	postinc1,c
 14291  016898  0E00               	movlw	0
 14292  01689A  6EE6               	movwf	postinc1,c
 14293  01689C  0E00               	movlw	0
 14294  01689E  6EE6               	movwf	postinc1,c
 14295  0168A0  0E00               	movlw	0
 14296  0168A2  6EE6               	movwf	postinc1,c
 14297  0168A4  0E00               	movlw	0
 14298  0168A6  6EE6               	movwf	postinc1,c
 14299  0168A8  0E00               	movlw	0
 14300  0168AA  6EE6               	movwf	postinc1,c
 14301                           
 14302                           ;stkvar	_n @ sp[(-22)+0]
 14303  0168AC  50E1               	movf	fsr1l,w,c
 14304  0168AE  0FEA               	addlw	-22
 14305  0168B0  6ED9               	movwf	fsr2l,c
 14306  0168B2  50E2               	movf	fsr1h,w,c
 14307  0168B4  6EDA               	movwf	fsr2h,c
 14308  0168B6  0EFF               	movlw	255
 14309  0168B8  22DA               	addwfc	fsr2h,f,c
 14310  0168BA  006F FF7B FFE6     	movff	postinc2,postinc1
 14311  0168C0  006F FF7B FFE6     	movff	postinc2,postinc1
 14312  0168C6  006F FF7B FFE6     	movff	postinc2,postinc1
 14313  0168CC  006F FF7B FFE6     	movff	postinc2,postinc1
 14314  0168D2  006F FF7B FFE6     	movff	postinc2,postinc1
 14315  0168D8  006F FF7B FFE6     	movff	postinc2,postinc1
 14316  0168DE  006F FF7B FFE6     	movff	postinc2,postinc1
 14317  0168E4  006F FF7B FFE6     	movff	postinc2,postinc1
 14318  0168EA  ECFE  F0C9         	call	___lomod	;wreg free
 14319  0168EE  52E5               	movf	postdec1,f,c
 14320  0168F0  006F FF9C  F018    	movff	indf1,btemp+23
 14321  0168F6  52E5               	movf	postdec1,f,c
 14322  0168F8  006F FF9C  F017    	movff	indf1,btemp+22
 14323  0168FE  52E5               	movf	postdec1,f,c
 14324  016900  006F FF9C  F016    	movff	indf1,btemp+21
 14325  016906  52E5               	movf	postdec1,f,c
 14326  016908  006F FF9C  F015    	movff	indf1,btemp+20
 14327  01690E  52E5               	movf	postdec1,f,c
 14328  016910  006F FF9C  F014    	movff	indf1,btemp+19
 14329  016916  52E5               	movf	postdec1,f,c
 14330  016918  006F FF9C  F013    	movff	indf1,btemp+18
 14331  01691E  52E5               	movf	postdec1,f,c
 14332  016920  006F FF9C  F012    	movff	indf1,btemp+17
 14333  016926  52E5               	movf	postdec1,f,c
 14334  016928  006F FF9C  F011    	movff	indf1,btemp+16
 14335  01692E  0EF8               	movlw	248
 14336  016930  26E1               	addwf	fsr1l,f,c
 14337  016932  0EFF               	movlw	255
 14338  016934  22E2               	addwfc	fsr1h,f,c
 14339  016936  0E30               	movlw	48
 14340  016938  2611               	addwf	(btemp+16)^0,f,c
 14341                           
 14342                           ;stkvar	_i @ sp[(-14)+8]
 14343  01693A  0EFA               	movlw	-6
 14344  01693C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14345  016942  0EFB               	movlw	-5
 14346  016944  006F FF8C  F00C    	movff	plusw1,btemp+11
 14347  01694A  0E97               	movlw	low _dbuf
 14348  01694C  240B               	addwf	(btemp+10)^0,w,c
 14349  01694E  6ED9               	movwf	fsr2l,c
 14350  016950  0E02               	movlw	high _dbuf
 14351  016952  200C               	addwfc	(btemp+11)^0,w,c
 14352  016954  6EDA               	movwf	fsr2h,c
 14353  016956  0060  F047  FFDF   	movff	btemp+16,indf2
 14354                           
 14355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14356                           ;stkvar	_p @ sp[(-14)+12]
 14357  01695C  50E1               	movf	fsr1l,w,c
 14358  01695E  0FFE               	addlw	-2
 14359  016960  6ED9               	movwf	fsr2l,c
 14360  016962  50E2               	movf	fsr1h,w,c
 14361  016964  6EDA               	movwf	fsr2h,c
 14362  016966  0EFF               	movlw	255
 14363  016968  22DA               	addwfc	fsr2h,f,c
 14364  01696A  06DE               	decf	postinc2,f,c
 14365  01696C  0E00               	movlw	0
 14366  01696E  5ADD               	subwfb	postdec2,f,c
 14367                           
 14368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14369                           ;stkvar	_w @ sp[(-14)+10]
 14370  016970  50E1               	movf	fsr1l,w,c
 14371  016972  0FFC               	addlw	-4
 14372  016974  6ED9               	movwf	fsr2l,c
 14373  016976  50E2               	movf	fsr1h,w,c
 14374  016978  6EDA               	movwf	fsr2h,c
 14375  01697A  0EFF               	movlw	255
 14376  01697C  22DA               	addwfc	fsr2h,f,c
 14377  01697E  06DE               	decf	postinc2,f,c
 14378  016980  0E00               	movlw	0
 14379  016982  5ADD               	subwfb	postdec2,f,c
 14380                           
 14381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14382  016984  0E0A               	movlw	10
 14383  016986  6EE6               	movwf	postinc1,c
 14384  016988  0E00               	movlw	0
 14385  01698A  6EE6               	movwf	postinc1,c
 14386  01698C  0E00               	movlw	0
 14387  01698E  6EE6               	movwf	postinc1,c
 14388  016990  0E00               	movlw	0
 14389  016992  6EE6               	movwf	postinc1,c
 14390  016994  0E00               	movlw	0
 14391  016996  6EE6               	movwf	postinc1,c
 14392  016998  0E00               	movlw	0
 14393  01699A  6EE6               	movwf	postinc1,c
 14394  01699C  0E00               	movlw	0
 14395  01699E  6EE6               	movwf	postinc1,c
 14396  0169A0  0E00               	movlw	0
 14397  0169A2  6EE6               	movwf	postinc1,c
 14398                           
 14399                           ;stkvar	_n @ sp[(-22)+0]
 14400  0169A4  50E1               	movf	fsr1l,w,c
 14401  0169A6  0FEA               	addlw	-22
 14402  0169A8  6ED9               	movwf	fsr2l,c
 14403  0169AA  50E2               	movf	fsr1h,w,c
 14404  0169AC  6EDA               	movwf	fsr2h,c
 14405  0169AE  0EFF               	movlw	255
 14406  0169B0  22DA               	addwfc	fsr2h,f,c
 14407  0169B2  006F FF7B FFE6     	movff	postinc2,postinc1
 14408  0169B8  006F FF7B FFE6     	movff	postinc2,postinc1
 14409  0169BE  006F FF7B FFE6     	movff	postinc2,postinc1
 14410  0169C4  006F FF7B FFE6     	movff	postinc2,postinc1
 14411  0169CA  006F FF7B FFE6     	movff	postinc2,postinc1
 14412  0169D0  006F FF7B FFE6     	movff	postinc2,postinc1
 14413  0169D6  006F FF7B FFE6     	movff	postinc2,postinc1
 14414  0169DC  006F FF7B FFE6     	movff	postinc2,postinc1
 14415  0169E2  EC7B  F0C6         	call	___lodiv	;wreg free
 14416  0169E6  52E5               	movf	postdec1,f,c
 14417  0169E8  006F FF9C  F018    	movff	indf1,btemp+23
 14418  0169EE  52E5               	movf	postdec1,f,c
 14419  0169F0  006F FF9C  F017    	movff	indf1,btemp+22
 14420  0169F6  52E5               	movf	postdec1,f,c
 14421  0169F8  006F FF9C  F016    	movff	indf1,btemp+21
 14422  0169FE  52E5               	movf	postdec1,f,c
 14423  016A00  006F FF9C  F015    	movff	indf1,btemp+20
 14424  016A06  52E5               	movf	postdec1,f,c
 14425  016A08  006F FF9C  F014    	movff	indf1,btemp+19
 14426  016A0E  52E5               	movf	postdec1,f,c
 14427  016A10  006F FF9C  F013    	movff	indf1,btemp+18
 14428  016A16  52E5               	movf	postdec1,f,c
 14429  016A18  006F FF9C  F012    	movff	indf1,btemp+17
 14430  016A1E  52E5               	movf	postdec1,f,c
 14431  016A20  006F FF9C  F011    	movff	indf1,btemp+16
 14432  016A26  0EF8               	movlw	248
 14433  016A28  26E1               	addwf	fsr1l,f,c
 14434  016A2A  0EFF               	movlw	255
 14435  016A2C  22E2               	addwfc	fsr1h,f,c
 14436                           
 14437                           ;stkvar	_n @ sp[(-14)+0]
 14438  016A2E  0EF2               	movlw	-14
 14439  016A30  0060  F047  FFE3   	movff	btemp+16,plusw1
 14440  016A36  0EF3               	movlw	-13
 14441  016A38  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14442  016A3E  0EF4               	movlw	-12
 14443  016A40  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14444  016A46  0EF5               	movlw	-11
 14445  016A48  0060  F053  FFE3   	movff	btemp+19,plusw1
 14446  016A4E  0EF6               	movlw	-10
 14447  016A50  0060  F057  FFE3   	movff	btemp+20,plusw1
 14448  016A56  0EF7               	movlw	-9
 14449  016A58  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14450  016A5E  0EF8               	movlw	-8
 14451  016A60  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14452  016A66  0EF9               	movlw	-7
 14453  016A68  0060  F063  FFE3   	movff	btemp+23,plusw1
 14454  016A6E                     l12374:
 14455                           
 14456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14457                           ;stkvar	_i @ sp[(-14)+8]
 14458  016A6E  0EFA               	movlw	-6
 14459  016A70  006F FF8C  F001    	movff	plusw1,btemp
 14460  016A76  0EFB               	movlw	-5
 14461  016A78  50E3               	movf	plusw1,w,c
 14462  016A7A  1001               	iorwf	btemp^0,w,c
 14463  016A7C  B4D8               	btfsc	status,2,c
 14464  016A7E  D02F               	goto	u11740
 14465                           
 14466                           ;stkvar	_n @ sp[(-14)+0]
 14467  016A80  0EF2               	movlw	-14
 14468  016A82  50E3               	movf	plusw1,w,c
 14469  016A84  E115               	bnz	u11711
 14470  016A86  0EF3               	movlw	-13
 14471  016A88  50E3               	movf	plusw1,w,c
 14472  016A8A  E112               	bnz	u11711
 14473  016A8C  0EF4               	movlw	-12
 14474  016A8E  50E3               	movf	plusw1,w,c
 14475  016A90  E10F               	bnz	u11711
 14476  016A92  0EF5               	movlw	-11
 14477  016A94  50E3               	movf	plusw1,w,c
 14478  016A96  E10C               	bnz	u11711
 14479  016A98  0EF6               	movlw	-10
 14480  016A9A  50E3               	movf	plusw1,w,c
 14481  016A9C  E109               	bnz	u11711
 14482  016A9E  0EF7               	movlw	-9
 14483  016AA0  50E3               	movf	plusw1,w,c
 14484  016AA2  E106               	bnz	u11711
 14485  016AA4  0EF8               	movlw	-8
 14486  016AA6  50E3               	movf	plusw1,w,c
 14487  016AA8  E103               	bnz	u11711
 14488  016AAA  0EF9               	movlw	-7
 14489  016AAC  50E3               	movf	plusw1,w,c
 14490  016AAE  A4D8               	btfss	status,2,c
 14491  016AB0                     u11711:
 14492  016AB0  D6E3               	goto	l12364
 14493                           
 14494                           ;stkvar	_p @ sp[(-14)+12]
 14495  016AB2  0EFF               	movlw	-1
 14496  016AB4  BEE3               	btfsc	plusw1,7,c
 14497  016AB6  D007               	goto	u11720
 14498  016AB8  0EFF               	movlw	-1
 14499  016ABA  50E3               	movf	plusw1,w,c
 14500  016ABC  E103               	bnz	u11721
 14501  016ABE  0EFE               	movlw	-2
 14502  016AC0  04E3               	decf	plusw1,w,c
 14503  016AC2  B0D8               	btfsc	status,0,c
 14504  016AC4                     u11721:
 14505  016AC4  D6D9               	goto	l12364
 14506  016AC6                     u11720:
 14507                           
 14508                           ;stkvar	_w @ sp[(-14)+10]
 14509  016AC6  0EFD               	movlw	-3
 14510  016AC8  BEE3               	btfsc	plusw1,7,c
 14511  016ACA  D009               	goto	u11740
 14512  016ACC  0EFD               	movlw	-3
 14513  016ACE  50E3               	movf	plusw1,w,c
 14514  016AD0  E104               	bnz	u11730
 14515  016AD2  0EFC               	movlw	-4
 14516  016AD4  04E3               	decf	plusw1,w,c
 14517  016AD6  A0D8               	btfss	status,0,c
 14518  016AD8  D002               	goto	u11740
 14519  016ADA                     u11730:
 14520  016ADA  B23E               	btfsc	_flags^0,1,c
 14521  016ADC  D6CD               	goto	l12364
 14522  016ADE                     u11740:
 14523                           
 14524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14525                           ;stkvar	_w @ sp[(-14)+10]
 14526  016ADE  0EFC               	movlw	-4
 14527  016AE0  006F FF8F FFE6     	movff	plusw1,postinc1
 14528  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 14529                           
 14530                           ;stkvar	_i @ sp[(-16)+8]
 14531  016AEC  0E97               	movlw	low _dbuf
 14532  016AEE  6E0B               	movwf	(btemp+10)^0,c
 14533  016AF0  0E02               	movlw	high _dbuf
 14534  016AF2  6E0C               	movwf	(btemp+11)^0,c
 14535  016AF4  0EF8               	movlw	-8
 14536  016AF6  50E3               	movf	plusw1,w,c
 14537  016AF8  260B               	addwf	(btemp+10)^0,f,c
 14538  016AFA  0EF9               	movlw	-7
 14539  016AFC  50E3               	movf	plusw1,w,c
 14540  016AFE  220C               	addwfc	(btemp+11)^0,f,c
 14541  016B00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14542  016B06  0060  F033  FFE6   	movff	btemp+11,postinc1
 14543                           
 14544                           ;stkvar	_fp @ sp[(-18)+-2]
 14545  016B0C  0EEC               	movlw	-20
 14546  016B0E  006F FF8F FFE6     	movff	plusw1,postinc1
 14547  016B14  006F FF8F FFE6     	movff	plusw1,postinc1
 14548  016B1A  ECEE  F0CC         	call	_pad	;wreg free
 14549                           
 14550                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14551  016B1E  0EE8               	movlw	232
 14552  016B20  26E1               	addwf	fsr1l,f,c
 14553  016B22  0EFF               	movlw	255
 14554  016B24  22E2               	addwfc	fsr1h,f,c
 14555  016B26  0012               	return		;funcret
 14556  016B28                     __end_of_utoa:
 14557                           	opt callstack 0
 14558                           
 14559 ;; *************** function ___lomod *****************
 14560 ;; Defined at:
 14561 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;  dividend        8  [STACK] unsigned long long 
 14564 ;;  divisor         8  [STACK] unsigned long long 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  counter         1  [STACK] unsigned char 
 14567 ;; Return value:  Size  Location     Type
 14568 ;;                  8  [STACK] unsigned long long 
 14569 ;; Registers used:
 14570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/2
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;Total ram usage:        0 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; Hardware stack levels required when called:   15
 14583 ;; This function calls:
 14584 ;;		Nothing
 14585 ;; This function is called by:
 14586 ;;		_utoa
 14587 ;; This function uses a reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text53
 14591  0193FC                     __ptext53:
 14592                           	opt callstack 0
 14593  0193FC                     ___lomod:
 14594                           	opt callstack 0
 14595                           
 14596                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14597  0193FC  52E6               	movf	postinc1,f,c
 14598                           
 14599                           ;stkvar	_divisor @ sp[(-1)+-16]
 14600                           
 14601                           ;incstack = 0
 14602 ;; hardware stack exceeded
 14603  0193FE  0EEF               	movlw	-17
 14604  019400  50E3               	movf	plusw1,w,c
 14605  019402  E116               	bnz	u7360
 14606  019404  0EF0               	movlw	-16
 14607  019406  50E3               	movf	plusw1,w,c
 14608  019408  E113               	bnz	u7360
 14609  01940A  0EF1               	movlw	-15
 14610  01940C  50E3               	movf	plusw1,w,c
 14611  01940E  E110               	bnz	u7360
 14612  019410  0EF2               	movlw	-14
 14613  019412  50E3               	movf	plusw1,w,c
 14614  019414  E10D               	bnz	u7360
 14615  019416  0EF3               	movlw	-13
 14616  019418  50E3               	movf	plusw1,w,c
 14617  01941A  E10A               	bnz	u7360
 14618  01941C  0EF4               	movlw	-12
 14619  01941E  50E3               	movf	plusw1,w,c
 14620  019420  E107               	bnz	u7360
 14621  019422  0EF5               	movlw	-11
 14622  019424  50E3               	movf	plusw1,w,c
 14623  019426  E104               	bnz	u7360
 14624  019428  0EF6               	movlw	-10
 14625  01942A  50E3               	movf	plusw1,w,c
 14626  01942C  B4D8               	btfsc	status,2,c
 14627  01942E  D075               	goto	u7390
 14628  019430                     u7360:
 14629                           
 14630                           ;stkvar	_counter @ sp[(-1)+0]
 14631  019430  0EFF               	movlw	-1
 14632  019432  6AE3               	clrf	plusw1,c
 14633  019434  D012               	goto	L14
 14634  019436                     l8710:
 14635                           
 14636                           ;stkvar	_divisor @ sp[(-1)+-16]
 14637  019436  90D8               	bcf	status,0,c
 14638  019438  0EEF               	movlw	-17
 14639  01943A  36E3               	rlcf	plusw1,f,c
 14640  01943C  0EF0               	movlw	-16
 14641  01943E  36E3               	rlcf	plusw1,f,c
 14642  019440  0EF1               	movlw	-15
 14643  019442  36E3               	rlcf	plusw1,f,c
 14644  019444  0EF2               	movlw	-14
 14645  019446  36E3               	rlcf	plusw1,f,c
 14646  019448  0EF3               	movlw	-13
 14647  01944A  36E3               	rlcf	plusw1,f,c
 14648  01944C  0EF4               	movlw	-12
 14649  01944E  36E3               	rlcf	plusw1,f,c
 14650  019450  0EF5               	movlw	-11
 14651  019452  36E3               	rlcf	plusw1,f,c
 14652  019454  0EF6               	movlw	-10
 14653  019456  36E3               	rlcf	plusw1,f,c
 14654                           
 14655                           ;stkvar	_counter @ sp[(-1)+0]
 14656  019458  0EFF               	movlw	-1
 14657  01945A                     L14:
 14658  01945A  2AE3               	incf	plusw1,f,c
 14659                           
 14660                           ;stkvar	_divisor @ sp[(-1)+-16]
 14661  01945C  0EF6               	movlw	-10
 14662  01945E  AEE3               	btfss	plusw1,7,c
 14663  019460  D7EA               	goto	l8710
 14664  019462                     u7370:
 14665                           
 14666                           ;stkvar	_divisor @ sp[(-1)+-16]
 14667                           ;stkvar	_dividend @ sp[(-1)+-8]
 14668  019462  50E1               	movf	fsr1l,w,c
 14669  019464  0FF7               	addlw	-9
 14670  019466  6ED9               	movwf	fsr2l,c
 14671  019468  50E2               	movf	fsr1h,w,c
 14672  01946A  6EDA               	movwf	fsr2h,c
 14673  01946C  0EFF               	movlw	255
 14674  01946E  22DA               	addwfc	fsr2h,f,c
 14675  019470  0EEF               	movlw	-17
 14676  019472  50E3               	movf	plusw1,w,c
 14677  019474  5CDE               	subwf	postinc2,w,c
 14678  019476  0EF0               	movlw	-16
 14679  019478  50E3               	movf	plusw1,w,c
 14680  01947A  58DE               	subwfb	postinc2,w,c
 14681  01947C  0EF1               	movlw	-15
 14682  01947E  50E3               	movf	plusw1,w,c
 14683  019480  58DE               	subwfb	postinc2,w,c
 14684  019482  0EF2               	movlw	-14
 14685  019484  50E3               	movf	plusw1,w,c
 14686  019486  58DE               	subwfb	postinc2,w,c
 14687  019488  0EF3               	movlw	-13
 14688  01948A  50E3               	movf	plusw1,w,c
 14689  01948C  58DE               	subwfb	postinc2,w,c
 14690  01948E  0EF4               	movlw	-12
 14691  019490  50E3               	movf	plusw1,w,c
 14692  019492  58DE               	subwfb	postinc2,w,c
 14693  019494  0EF5               	movlw	-11
 14694  019496  50E3               	movf	plusw1,w,c
 14695  019498  58DE               	subwfb	postinc2,w,c
 14696  01949A  0EF6               	movlw	-10
 14697  01949C  50E3               	movf	plusw1,w,c
 14698  01949E  58DE               	subwfb	postinc2,w,c
 14699  0194A0  A0D8               	btfss	status,0,c
 14700  0194A2  D01F               	goto	l8718
 14701                           
 14702                           ;stkvar	_divisor @ sp[(-1)+-16]
 14703                           ;stkvar	_dividend @ sp[(-1)+-8]
 14704  0194A4  50E1               	movf	fsr1l,w,c
 14705  0194A6  0FF7               	addlw	-9
 14706  0194A8  6ED9               	movwf	fsr2l,c
 14707  0194AA  50E2               	movf	fsr1h,w,c
 14708  0194AC  6EDA               	movwf	fsr2h,c
 14709  0194AE  0EFF               	movlw	255
 14710  0194B0  22DA               	addwfc	fsr2h,f,c
 14711  0194B2  0EEF               	movlw	-17
 14712  0194B4  50E3               	movf	plusw1,w,c
 14713  0194B6  5EDE               	subwf	postinc2,f,c
 14714  0194B8  0EF0               	movlw	-16
 14715  0194BA  50E3               	movf	plusw1,w,c
 14716  0194BC  5ADE               	subwfb	postinc2,f,c
 14717  0194BE  0EF1               	movlw	-15
 14718  0194C0  50E3               	movf	plusw1,w,c
 14719  0194C2  5ADE               	subwfb	postinc2,f,c
 14720  0194C4  0EF2               	movlw	-14
 14721  0194C6  50E3               	movf	plusw1,w,c
 14722  0194C8  5ADE               	subwfb	postinc2,f,c
 14723  0194CA  0EF3               	movlw	-13
 14724  0194CC  50E3               	movf	plusw1,w,c
 14725  0194CE  5ADE               	subwfb	postinc2,f,c
 14726  0194D0  0EF4               	movlw	-12
 14727  0194D2  50E3               	movf	plusw1,w,c
 14728  0194D4  5ADE               	subwfb	postinc2,f,c
 14729  0194D6  0EF5               	movlw	-11
 14730  0194D8  50E3               	movf	plusw1,w,c
 14731  0194DA  5ADE               	subwfb	postinc2,f,c
 14732  0194DC  0EF6               	movlw	-10
 14733  0194DE  50E3               	movf	plusw1,w,c
 14734  0194E0  5ADE               	subwfb	postinc2,f,c
 14735  0194E2                     l8718:
 14736                           
 14737                           ;stkvar	_divisor @ sp[(-1)+-16]
 14738  0194E2  90D8               	bcf	status,0,c
 14739  0194E4  0EF6               	movlw	-10
 14740  0194E6  32E3               	rrcf	plusw1,f,c
 14741  0194E8  0EF5               	movlw	-11
 14742  0194EA  32E3               	rrcf	plusw1,f,c
 14743  0194EC  0EF4               	movlw	-12
 14744  0194EE  32E3               	rrcf	plusw1,f,c
 14745  0194F0  0EF3               	movlw	-13
 14746  0194F2  32E3               	rrcf	plusw1,f,c
 14747  0194F4  0EF2               	movlw	-14
 14748  0194F6  32E3               	rrcf	plusw1,f,c
 14749  0194F8  0EF1               	movlw	-15
 14750  0194FA  32E3               	rrcf	plusw1,f,c
 14751  0194FC  0EF0               	movlw	-16
 14752  0194FE  32E3               	rrcf	plusw1,f,c
 14753  019500  0EEF               	movlw	-17
 14754  019502  32E3               	rrcf	plusw1,f,c
 14755                           
 14756                           ;stkvar	_counter @ sp[(-1)+0]
 14757  019504  0EFF               	movlw	-1
 14758  019506  50E3               	movf	plusw1,w,c
 14759  019508  6E01               	movwf	btemp^0,c
 14760  01950A  0E01               	movlw	1
 14761  01950C  5E01               	subwf	btemp^0,f,c
 14762  01950E  0EFF               	movlw	-1
 14763  019510  0060  F007  FFE3   	movff	btemp,plusw1
 14764  019516  A4D8               	btfss	status,2,c
 14765  019518  D7A4               	goto	u7370
 14766  01951A                     u7390:
 14767                           
 14768                           ;stkvar	_dividend @ sp[(-1)+-8]
 14769  01951A  0EF7               	movlw	247
 14770  01951C  24E1               	addwf	fsr1l,w,c
 14771  01951E  6ED9               	movwf	fsr2l,c
 14772  019520  0EFF               	movlw	255
 14773  019522  20E2               	addwfc	fsr1h,w,c
 14774  019524  6EDA               	movwf	fsr2h,c
 14775                           
 14776                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14777  019526  0E08               	movlw	8
 14778  019528  6E01               	movwf	btemp^0,c
 14779  01952A  0EF7               	movlw	-9
 14780  01952C                     us740999:
 14781  01952C  006F FF7B FFE3     	movff	postinc2,plusw1
 14782  019532  28E8               	incf	wreg,w,c
 14783  019534  2E01               	decfsz	btemp^0,f,c
 14784  019536  D7FA               	bra	us740999
 14785                           
 14786                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14787  019538  52E5               	movf	postdec1,f,c
 14788  01953A  0012               	return		;funcret
 14789  01953C                     __end_of___lomod:
 14790                           	opt callstack 0
 14791                           
 14792 ;; *************** function ___lodiv *****************
 14793 ;; Defined at:
 14794 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14795 ;; Parameters:    Size  Location     Type
 14796 ;;  dividend        8  [STACK] unsigned long long 
 14797 ;;  divisor         8  [STACK] unsigned long long 
 14798 ;; Auto vars:     Size  Location     Type
 14799 ;;  quotient        8  [STACK] unsigned long long 
 14800 ;;  counter         1  [STACK] unsigned char 
 14801 ;; Return value:  Size  Location     Type
 14802 ;;                  8  [STACK] unsigned long long 
 14803 ;; Registers used:
 14804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14805 ;; Tracked objects:
 14806 ;;		On entry : 0/2
 14807 ;;		On exit  : 0/0
 14808 ;;		Unchanged: 0/0
 14809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;Total ram usage:        0 bytes
 14815 ;; Hardware stack levels used:    1
 14816 ;; Hardware stack levels required when called:   15
 14817 ;; This function calls:
 14818 ;;		Nothing
 14819 ;; This function is called by:
 14820 ;;		_utoa
 14821 ;; This function uses a reentrant model
 14822 ;;
 14823                           
 14824                           	psect	text54
 14825  018CF6                     __ptext54:
 14826                           	opt callstack 0
 14827  018CF6                     ___lodiv:
 14828                           	opt callstack 0
 14829                           
 14830                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14831  018CF6  0E09               	movlw	9
 14832  018CF8  26E1               	addwf	fsr1l,f,c
 14833  018CFA  0E00               	movlw	0
 14834  018CFC  22E2               	addwfc	fsr1h,f,c
 14835                           
 14836                           ;stkvar	_quotient @ sp[(-9)+0]
 14837                           
 14838                           ;incstack = 0
 14839 ;; hardware stack exceeded
 14840  018CFE  0E07               	movlw	7
 14841  018D00  6E01               	movwf	btemp^0,c
 14842  018D02  0EF7               	movlw	-9
 14843  018D04                     u7301:
 14844  018D04  6AE3               	clrf	plusw1,c
 14845  018D06  2AE8               	incf	wreg,f,c
 14846  018D08  0601               	decf	btemp^0,f,c
 14847  018D0A  E2FC               	bc	u7301
 14848                           
 14849                           ;stkvar	_divisor @ sp[(-9)+-16]
 14850  018D0C  0EE7               	movlw	-25
 14851  018D0E  50E3               	movf	plusw1,w,c
 14852  018D10  E116               	bnz	u7310
 14853  018D12  0EE8               	movlw	-24
 14854  018D14  50E3               	movf	plusw1,w,c
 14855  018D16  E113               	bnz	u7310
 14856  018D18  0EE9               	movlw	-23
 14857  018D1A  50E3               	movf	plusw1,w,c
 14858  018D1C  E110               	bnz	u7310
 14859  018D1E  0EEA               	movlw	-22
 14860  018D20  50E3               	movf	plusw1,w,c
 14861  018D22  E10D               	bnz	u7310
 14862  018D24  0EEB               	movlw	-21
 14863  018D26  50E3               	movf	plusw1,w,c
 14864  018D28  E10A               	bnz	u7310
 14865  018D2A  0EEC               	movlw	-20
 14866  018D2C  50E3               	movf	plusw1,w,c
 14867  018D2E  E107               	bnz	u7310
 14868  018D30  0EED               	movlw	-19
 14869  018D32  50E3               	movf	plusw1,w,c
 14870  018D34  E104               	bnz	u7310
 14871  018D36  0EEE               	movlw	-18
 14872  018D38  50E3               	movf	plusw1,w,c
 14873  018D3A  B4D8               	btfsc	status,2,c
 14874  018D3C  D088               	goto	u7340
 14875  018D3E                     u7310:
 14876                           
 14877                           ;stkvar	_counter @ sp[(-9)+8]
 14878  018D3E  0EFF               	movlw	-1
 14879  018D40  6AE3               	clrf	plusw1,c
 14880  018D42  D012               	goto	L15
 14881  018D44                     l8686:
 14882                           
 14883                           ;stkvar	_divisor @ sp[(-9)+-16]
 14884  018D44  90D8               	bcf	status,0,c
 14885  018D46  0EE7               	movlw	-25
 14886  018D48  36E3               	rlcf	plusw1,f,c
 14887  018D4A  0EE8               	movlw	-24
 14888  018D4C  36E3               	rlcf	plusw1,f,c
 14889  018D4E  0EE9               	movlw	-23
 14890  018D50  36E3               	rlcf	plusw1,f,c
 14891  018D52  0EEA               	movlw	-22
 14892  018D54  36E3               	rlcf	plusw1,f,c
 14893  018D56  0EEB               	movlw	-21
 14894  018D58  36E3               	rlcf	plusw1,f,c
 14895  018D5A  0EEC               	movlw	-20
 14896  018D5C  36E3               	rlcf	plusw1,f,c
 14897  018D5E  0EED               	movlw	-19
 14898  018D60  36E3               	rlcf	plusw1,f,c
 14899  018D62  0EEE               	movlw	-18
 14900  018D64  36E3               	rlcf	plusw1,f,c
 14901                           
 14902                           ;stkvar	_counter @ sp[(-9)+8]
 14903  018D66  0EFF               	movlw	-1
 14904  018D68                     L15:
 14905  018D68  2AE3               	incf	plusw1,f,c
 14906                           
 14907                           ;stkvar	_divisor @ sp[(-9)+-16]
 14908  018D6A  0EEE               	movlw	-18
 14909  018D6C  AEE3               	btfss	plusw1,7,c
 14910  018D6E  D7EA               	goto	l8686
 14911  018D70                     u7320:
 14912                           
 14913                           ;stkvar	_quotient @ sp[(-9)+0]
 14914  018D70  90D8               	bcf	status,0,c
 14915  018D72  0EF7               	movlw	-9
 14916  018D74  36E3               	rlcf	plusw1,f,c
 14917  018D76  0EF8               	movlw	-8
 14918  018D78  36E3               	rlcf	plusw1,f,c
 14919  018D7A  0EF9               	movlw	-7
 14920  018D7C  36E3               	rlcf	plusw1,f,c
 14921  018D7E  0EFA               	movlw	-6
 14922  018D80  36E3               	rlcf	plusw1,f,c
 14923  018D82  0EFB               	movlw	-5
 14924  018D84  36E3               	rlcf	plusw1,f,c
 14925  018D86  0EFC               	movlw	-4
 14926  018D88  36E3               	rlcf	plusw1,f,c
 14927  018D8A  0EFD               	movlw	-3
 14928  018D8C  36E3               	rlcf	plusw1,f,c
 14929  018D8E  0EFE               	movlw	-2
 14930  018D90  36E3               	rlcf	plusw1,f,c
 14931                           
 14932                           ;stkvar	_divisor @ sp[(-9)+-16]
 14933                           ;stkvar	_dividend @ sp[(-9)+-8]
 14934  018D92  50E1               	movf	fsr1l,w,c
 14935  018D94  0FEF               	addlw	-17
 14936  018D96  6ED9               	movwf	fsr2l,c
 14937  018D98  50E2               	movf	fsr1h,w,c
 14938  018D9A  6EDA               	movwf	fsr2h,c
 14939  018D9C  0EFF               	movlw	255
 14940  018D9E  22DA               	addwfc	fsr2h,f,c
 14941  018DA0  0EE7               	movlw	-25
 14942  018DA2  50E3               	movf	plusw1,w,c
 14943  018DA4  5CDE               	subwf	postinc2,w,c
 14944  018DA6  0EE8               	movlw	-24
 14945  018DA8  50E3               	movf	plusw1,w,c
 14946  018DAA  58DE               	subwfb	postinc2,w,c
 14947  018DAC  0EE9               	movlw	-23
 14948  018DAE  50E3               	movf	plusw1,w,c
 14949  018DB0  58DE               	subwfb	postinc2,w,c
 14950  018DB2  0EEA               	movlw	-22
 14951  018DB4  50E3               	movf	plusw1,w,c
 14952  018DB6  58DE               	subwfb	postinc2,w,c
 14953  018DB8  0EEB               	movlw	-21
 14954  018DBA  50E3               	movf	plusw1,w,c
 14955  018DBC  58DE               	subwfb	postinc2,w,c
 14956  018DBE  0EEC               	movlw	-20
 14957  018DC0  50E3               	movf	plusw1,w,c
 14958  018DC2  58DE               	subwfb	postinc2,w,c
 14959  018DC4  0EED               	movlw	-19
 14960  018DC6  50E3               	movf	plusw1,w,c
 14961  018DC8  58DE               	subwfb	postinc2,w,c
 14962  018DCA  0EEE               	movlw	-18
 14963  018DCC  50E3               	movf	plusw1,w,c
 14964  018DCE  58DE               	subwfb	postinc2,w,c
 14965  018DD0  A0D8               	btfss	status,0,c
 14966  018DD2  D021               	goto	l8698
 14967                           
 14968                           ;stkvar	_divisor @ sp[(-9)+-16]
 14969                           ;stkvar	_dividend @ sp[(-9)+-8]
 14970  018DD4  50E1               	movf	fsr1l,w,c
 14971  018DD6  0FEF               	addlw	-17
 14972  018DD8  6ED9               	movwf	fsr2l,c
 14973  018DDA  50E2               	movf	fsr1h,w,c
 14974  018DDC  6EDA               	movwf	fsr2h,c
 14975  018DDE  0EFF               	movlw	255
 14976  018DE0  22DA               	addwfc	fsr2h,f,c
 14977  018DE2  0EE7               	movlw	-25
 14978  018DE4  50E3               	movf	plusw1,w,c
 14979  018DE6  5EDE               	subwf	postinc2,f,c
 14980  018DE8  0EE8               	movlw	-24
 14981  018DEA  50E3               	movf	plusw1,w,c
 14982  018DEC  5ADE               	subwfb	postinc2,f,c
 14983  018DEE  0EE9               	movlw	-23
 14984  018DF0  50E3               	movf	plusw1,w,c
 14985  018DF2  5ADE               	subwfb	postinc2,f,c
 14986  018DF4  0EEA               	movlw	-22
 14987  018DF6  50E3               	movf	plusw1,w,c
 14988  018DF8  5ADE               	subwfb	postinc2,f,c
 14989  018DFA  0EEB               	movlw	-21
 14990  018DFC  50E3               	movf	plusw1,w,c
 14991  018DFE  5ADE               	subwfb	postinc2,f,c
 14992  018E00  0EEC               	movlw	-20
 14993  018E02  50E3               	movf	plusw1,w,c
 14994  018E04  5ADE               	subwfb	postinc2,f,c
 14995  018E06  0EED               	movlw	-19
 14996  018E08  50E3               	movf	plusw1,w,c
 14997  018E0A  5ADE               	subwfb	postinc2,f,c
 14998  018E0C  0EEE               	movlw	-18
 14999  018E0E  50E3               	movf	plusw1,w,c
 15000  018E10  5ADE               	subwfb	postinc2,f,c
 15001                           
 15002                           ;stkvar	_quotient @ sp[(-9)+0]
 15003  018E12  0EF7               	movlw	-9
 15004  018E14  80E3               	bsf	plusw1,0,c
 15005  018E16                     l8698:
 15006                           
 15007                           ;stkvar	_divisor @ sp[(-9)+-16]
 15008  018E16  90D8               	bcf	status,0,c
 15009  018E18  0EEE               	movlw	-18
 15010  018E1A  32E3               	rrcf	plusw1,f,c
 15011  018E1C  0EED               	movlw	-19
 15012  018E1E  32E3               	rrcf	plusw1,f,c
 15013  018E20  0EEC               	movlw	-20
 15014  018E22  32E3               	rrcf	plusw1,f,c
 15015  018E24  0EEB               	movlw	-21
 15016  018E26  32E3               	rrcf	plusw1,f,c
 15017  018E28  0EEA               	movlw	-22
 15018  018E2A  32E3               	rrcf	plusw1,f,c
 15019  018E2C  0EE9               	movlw	-23
 15020  018E2E  32E3               	rrcf	plusw1,f,c
 15021  018E30  0EE8               	movlw	-24
 15022  018E32  32E3               	rrcf	plusw1,f,c
 15023  018E34  0EE7               	movlw	-25
 15024  018E36  32E3               	rrcf	plusw1,f,c
 15025                           
 15026                           ;stkvar	_counter @ sp[(-9)+8]
 15027  018E38  0EFF               	movlw	-1
 15028  018E3A  50E3               	movf	plusw1,w,c
 15029  018E3C  6E01               	movwf	btemp^0,c
 15030  018E3E  0E01               	movlw	1
 15031  018E40  5E01               	subwf	btemp^0,f,c
 15032  018E42  0EFF               	movlw	-1
 15033  018E44  0060  F007  FFE3   	movff	btemp,plusw1
 15034  018E4A  A4D8               	btfss	status,2,c
 15035  018E4C  D791               	goto	u7320
 15036  018E4E                     u7340:
 15037                           
 15038                           ;stkvar	_quotient @ sp[(-9)+0]
 15039  018E4E  0EF7               	movlw	247
 15040  018E50  24E1               	addwf	fsr1l,w,c
 15041  018E52  6ED9               	movwf	fsr2l,c
 15042  018E54  0EFF               	movlw	255
 15043  018E56  20E2               	addwfc	fsr1h,w,c
 15044  018E58  6EDA               	movwf	fsr2h,c
 15045                           
 15046                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15047  018E5A  0E08               	movlw	8
 15048  018E5C  6E01               	movwf	btemp^0,c
 15049  018E5E  0EEF               	movlw	-17
 15050  018E60                     us735999:
 15051  018E60  006F FF7B FFE3     	movff	postinc2,plusw1
 15052  018E66  28E8               	incf	wreg,w,c
 15053  018E68  2E01               	decfsz	btemp^0,f,c
 15054  018E6A  D7FA               	bra	us735999
 15055                           
 15056                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15057  018E6C  0EF7               	movlw	247
 15058  018E6E  26E1               	addwf	fsr1l,f,c
 15059  018E70  0EFF               	movlw	255
 15060  018E72  22E2               	addwfc	fsr1h,f,c
 15061  018E74  0012               	return		;funcret
 15062  018E76                     __end_of___lodiv:
 15063                           	opt callstack 0
 15064                           
 15065 ;; *************** function _strncmp *****************
 15066 ;; Defined at:
 15067 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;  _l              2  [STACK] PTR const unsigned char 
 15070 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15071 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15072 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15073 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15074 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15075 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15076 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15077 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15078 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15079 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15080 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15081 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15082 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15083 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15084 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15085 ;;		 -> STR_1(21), 
 15086 ;;  _r              2  [STACK] PTR const unsigned char 
 15087 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15088 ;;		 -> STR_79(3), STR_75(3), 
 15089 ;;  n               2  [STACK] unsigned int 
 15090 ;; Auto vars:     Size  Location     Type
 15091 ;;  r               2  [STACK] PTR const unsigned char 
 15092 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15093 ;;		 -> STR_79(3), STR_75(3), 
 15094 ;;  l               2  [STACK] PTR const unsigned char 
 15095 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15096 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15097 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15098 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15099 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15100 ;;		 -> STR_42(22), STR_41(22), STR_40(22), STR_39(23), 
 15101 ;;		 -> STR_38(23), STR_37(23), STR_36(23), STR_35(23), 
 15102 ;;		 -> STR_34(23), STR_33(22), STR_32(22), STR_31(22), 
 15103 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 15104 ;;		 -> STR_26(22), STR_25(22), STR_24(22), STR_23(22), 
 15105 ;;		 -> STR_22(22), STR_21(17), STR_20(16), STR_19(16), 
 15106 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15107 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15108 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15109 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15110 ;;		 -> STR_1(21), 
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  2  [STACK] int 
 15113 ;; Registers used:
 15114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15124 ;;Total ram usage:        0 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; Hardware stack levels required when called:   15
 15127 ;; This function calls:
 15128 ;;		Nothing
 15129 ;; This function is called by:
 15130 ;;		_vfpfcnvrt
 15131 ;; This function uses a reentrant model
 15132 ;;
 15133                           
 15134                           	psect	text55
 15135  018048                     __ptext55:
 15136                           	opt callstack 0
 15137  018048                     _strncmp:
 15138                           	opt callstack 0
 15139                           
 15140                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15141  018048  52E6               	movf	postinc1,f,c
 15142  01804A  52E6               	movf	postinc1,f,c
 15143  01804C  52E6               	movf	postinc1,f,c
 15144  01804E  52E6               	movf	postinc1,f,c
 15145                           
 15146                           ;stkvar	__l @ sp[(-4)+-2]
 15147                           
 15148                           ;incstack = 0
 15149 ;; hardware stack exceeded
 15150  018050  0EFA               	movlw	-6
 15151  018052  006F FF8C  F00B    	movff	plusw1,btemp+10
 15152  018058  0EFB               	movlw	-5
 15153  01805A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15154                           
 15155                           ;stkvar	_l @ sp[(-4)+2]
 15156  018060  0EFF               	movlw	-1
 15157  018062  0060  F033  FFE3   	movff	btemp+11,plusw1
 15158  018068  0EFE               	movlw	-2
 15159  01806A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15160                           
 15161                           ;stkvar	__r @ sp[(-4)+-4]
 15162  018070  0EF8               	movlw	-8
 15163  018072  006F FF8C  F00B    	movff	plusw1,btemp+10
 15164  018078  0EF9               	movlw	-7
 15165  01807A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15166                           
 15167                           ;stkvar	_r @ sp[(-4)+0]
 15168  018080  0EFD               	movlw	-3
 15169  018082  0060  F033  FFE3   	movff	btemp+11,plusw1
 15170  018088  0EFC               	movlw	-4
 15171  01808A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15172                           
 15173                           ;stkvar	_n @ sp[(-4)+-6]
 15174  018090  0EF6               	movlw	-10
 15175  018092  006F FF8C  F001    	movff	plusw1,btemp
 15176  018098  0E01               	movlw	1
 15177  01809A  5E01               	subwf	btemp^0,f,c
 15178  01809C  0EF6               	movlw	-10
 15179  01809E  0060  F007  FFE3   	movff	btemp,plusw1
 15180  0180A4  0EF7               	movlw	-9
 15181  0180A6  006F FF8C  F001    	movff	plusw1,btemp
 15182  0180AC  0E00               	movlw	0
 15183  0180AE  5A01               	subwfb	btemp^0,f,c
 15184  0180B0  0EF7               	movlw	-9
 15185  0180B2  0060  F007  FFE3   	movff	btemp,plusw1
 15186  0180B8  0EF6               	movlw	-10
 15187  0180BA  28E3               	incf	plusw1,w,c
 15188  0180BC  E13F               	bnz	l9368
 15189  0180BE  0EF7               	movlw	-9
 15190  0180C0  28E3               	incf	plusw1,w,c
 15191  0180C2  A4D8               	btfss	status,2,c
 15192  0180C4  D03B               	goto	l9368
 15193  0180C6  0E00               	movlw	0
 15194  0180C8  6E01               	movwf	btemp^0,c
 15195  0180CA  0E00               	movlw	0
 15196  0180CC  6E02               	movwf	(btemp+1)^0,c
 15197  0180CE  D0C7               	goto	l3451
 15198  0180D0                     l9366:
 15199                           
 15200                           ;stkvar	_l @ sp[(-4)+2]
 15201  0180D0  0EFE               	movlw	-2
 15202  0180D2  50E3               	movf	plusw1,w,c
 15203  0180D4  0F01               	addlw	1
 15204  0180D6  6E01               	movwf	btemp^0,c
 15205  0180D8  0EFE               	movlw	-2
 15206  0180DA  0060  F007  FFE3   	movff	btemp,plusw1
 15207  0180E0  6A01               	clrf	btemp^0,c
 15208  0180E2  0EFF               	movlw	-1
 15209  0180E4  50E3               	movf	plusw1,w,c
 15210  0180E6  2001               	addwfc	btemp^0,w,c
 15211  0180E8  6E01               	movwf	btemp^0,c
 15212  0180EA  0EFF               	movlw	-1
 15213  0180EC  0060  F007  FFE3   	movff	btemp,plusw1
 15214                           
 15215                           ;stkvar	_r @ sp[(-4)+0]
 15216  0180F2  0EFC               	movlw	-4
 15217  0180F4  50E3               	movf	plusw1,w,c
 15218  0180F6  0F01               	addlw	1
 15219  0180F8  6E01               	movwf	btemp^0,c
 15220  0180FA  0EFC               	movlw	-4
 15221  0180FC  0060  F007  FFE3   	movff	btemp,plusw1
 15222  018102  6A01               	clrf	btemp^0,c
 15223  018104  0EFD               	movlw	-3
 15224  018106  50E3               	movf	plusw1,w,c
 15225  018108  2001               	addwfc	btemp^0,w,c
 15226  01810A  6E01               	movwf	btemp^0,c
 15227  01810C  0EFD               	movlw	-3
 15228  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 15229                           
 15230                           ;stkvar	_n @ sp[(-4)+-6]
 15231  018114  0EF6               	movlw	-10
 15232  018116  006F FF8C  F001    	movff	plusw1,btemp
 15233  01811C  0E01               	movlw	1
 15234  01811E  5E01               	subwf	btemp^0,f,c
 15235  018120  0EF6               	movlw	-10
 15236  018122  0060  F007  FFE3   	movff	btemp,plusw1
 15237  018128  0EF7               	movlw	-9
 15238  01812A  006F FF8C  F001    	movff	plusw1,btemp
 15239  018130  0E00               	movlw	0
 15240  018132  5A01               	subwfb	btemp^0,f,c
 15241  018134  0EF7               	movlw	-9
 15242  018136  0060  F007  FFE3   	movff	btemp,plusw1
 15243  01813C                     l9368:
 15244                           
 15245                           ;stkvar	_l @ sp[(-4)+2]
 15246  01813C  0EFE               	movlw	-2
 15247  01813E  006F FF8F FFF6     	movff	plusw1,tblptrl
 15248  018144  0EFF               	movlw	-1
 15249  018146  006F FF8F FFF7     	movff	plusw1,tblptrh
 15250  01814C  0E00               	movlw	low (__mediumconst shr (0+16))
 15251  01814E  6EF8               	movwf	tblptru,c
 15252  018150  0E1F               	movlw	(high __ramtop+-1)
 15253  018152  64F7               	cpfsgt	tblptrh,c
 15254  018154  D003               	bra	u8597
 15255  018156  0008               	tblrd		*
 15256  018158  50F5               	movf	tablat,w,c
 15257  01815A  D007               	bra	u8590
 15258  01815C                     u8597:
 15259  01815C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15260  018162  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15261  018168  50EF               	movf	indf0,w,c
 15262  01816A                     u8590:
 15263  01816A  0900               	iorlw	0
 15264  01816C  B4D8               	btfsc	status,2,c
 15265  01816E  D04A               	goto	u8630
 15266                           
 15267                           ;stkvar	_r @ sp[(-4)+0]
 15268  018170  50E1               	movf	fsr1l,w,c
 15269  018172  0FFC               	addlw	-4
 15270  018174  6ED9               	movwf	fsr2l,c
 15271  018176  50E2               	movf	fsr1h,w,c
 15272  018178  6EDA               	movwf	fsr2h,c
 15273  01817A  0EFF               	movlw	255
 15274  01817C  22DA               	addwfc	fsr2h,f,c
 15275  01817E  006F FF7B FFF6     	movff	postinc2,tblptrl
 15276  018184  006F FF77 FFF7     	movff	postdec2,tblptrh
 15277  01818A                     	if	0	;tblptru may be non-zero
 15278  01818A                     	endif
 15279  01818A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15280  01818A  0E00               	movlw	low (__mediumconst shr (0+16))
 15281  01818C  6EF8               	movwf	tblptru,c
 15282  01818E                     	endif
 15283  01818E  0008               	tblrd		*
 15284  018190  50F5               	movf	tablat,w,c
 15285  018192  0900               	iorlw	0
 15286  018194  B4D8               	btfsc	status,2,c
 15287  018196  D036               	goto	u8630
 15288                           
 15289                           ;stkvar	_n @ sp[(-4)+-6]
 15290  018198  0EF6               	movlw	-10
 15291  01819A  006F FF8C  F001    	movff	plusw1,btemp
 15292  0181A0  0EF7               	movlw	-9
 15293  0181A2  50E3               	movf	plusw1,w,c
 15294  0181A4  1001               	iorwf	btemp^0,w,c
 15295  0181A6  B4D8               	btfsc	status,2,c
 15296  0181A8  D02D               	goto	u8630
 15297                           
 15298                           ;stkvar	_r @ sp[(-4)+0]
 15299  0181AA  50E1               	movf	fsr1l,w,c
 15300  0181AC  0FFC               	addlw	-4
 15301  0181AE  6ED9               	movwf	fsr2l,c
 15302  0181B0  50E2               	movf	fsr1h,w,c
 15303  0181B2  6EDA               	movwf	fsr2h,c
 15304  0181B4  0EFF               	movlw	255
 15305  0181B6  22DA               	addwfc	fsr2h,f,c
 15306  0181B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15307  0181BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15308  0181C4                     	if	0	;tblptru may be non-zero
 15309  0181C4                     	endif
 15310  0181C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15311  0181C4  0E00               	movlw	low (__mediumconst shr (0+16))
 15312  0181C6  6EF8               	movwf	tblptru,c
 15313  0181C8                     	endif
 15314  0181C8  0008               	tblrd		*
 15315  0181CA  006F FFD4  F00C    	movff	tablat,btemp+11
 15316                           
 15317                           ;stkvar	_l @ sp[(-4)+2]
 15318  0181D0  0EFE               	movlw	-2
 15319  0181D2  006F FF8F FFF6     	movff	plusw1,tblptrl
 15320  0181D8  0EFF               	movlw	-1
 15321  0181DA  006F FF8F FFF7     	movff	plusw1,tblptrh
 15322  0181E0  0E00               	movlw	low (__mediumconst shr (0+16))
 15323  0181E2  6EF8               	movwf	tblptru,c
 15324  0181E4  0E1F               	movlw	(high __ramtop+-1)
 15325  0181E6  64F7               	cpfsgt	tblptrh,c
 15326  0181E8  D003               	bra	u8637
 15327  0181EA  0008               	tblrd		*
 15328  0181EC  50F5               	movf	tablat,w,c
 15329  0181EE  D007               	bra	u8635
 15330  0181F0                     u8637:
 15331  0181F0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15332  0181F6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15333  0181FC  50EF               	movf	indf0,w,c
 15334  0181FE                     u8635:
 15335  0181FE  180C               	xorwf	(btemp+11)^0,w,c
 15336  018200  B4D8               	btfsc	status,2,c
 15337  018202  D766               	goto	l9366
 15338  018204                     u8630:
 15339                           
 15340                           ;stkvar	_l @ sp[(-4)+2]
 15341  018204  0EFE               	movlw	-2
 15342  018206  006F FF8F FFF6     	movff	plusw1,tblptrl
 15343  01820C  0EFF               	movlw	-1
 15344  01820E  006F FF8F FFF7     	movff	plusw1,tblptrh
 15345  018214  0E00               	movlw	low (__mediumconst shr (0+16))
 15346  018216  6EF8               	movwf	tblptru,c
 15347  018218  0E1F               	movlw	(high __ramtop+-1)
 15348  01821A  64F7               	cpfsgt	tblptrh,c
 15349  01821C  D003               	bra	u8647
 15350  01821E  0008               	tblrd		*
 15351  018220  50F5               	movf	tablat,w,c
 15352  018222  D007               	bra	u8640
 15353  018224                     u8647:
 15354  018224  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15355  01822A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15356  018230  50EF               	movf	indf0,w,c
 15357  018232                     u8640:
 15358  018232  6E01               	movwf	btemp^0,c
 15359  018234  6A02               	clrf	(btemp+1)^0,c
 15360                           
 15361                           ;stkvar	_r @ sp[(-4)+0]
 15362  018236  50E1               	movf	fsr1l,w,c
 15363  018238  0FFC               	addlw	-4
 15364  01823A  6ED9               	movwf	fsr2l,c
 15365  01823C  50E2               	movf	fsr1h,w,c
 15366  01823E  6EDA               	movwf	fsr2h,c
 15367  018240  0EFF               	movlw	255
 15368  018242  22DA               	addwfc	fsr2h,f,c
 15369  018244  006F FF7B FFF6     	movff	postinc2,tblptrl
 15370  01824A  006F FF77 FFF7     	movff	postdec2,tblptrh
 15371  018250                     	if	0	;tblptru may be non-zero
 15372  018250                     	endif
 15373  018250                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15374  018250  0E00               	movlw	low (__mediumconst shr (0+16))
 15375  018252  6EF8               	movwf	tblptru,c
 15376  018254                     	endif
 15377  018254  0008               	tblrd		*
 15378  018256  50F5               	movf	tablat,w,c
 15379  018258  5E01               	subwf	btemp^0,f,c
 15380  01825A  0E00               	movlw	0
 15381  01825C  5A02               	subwfb	(btemp+1)^0,f,c
 15382  01825E                     l3451:
 15383                           
 15384                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15385  01825E  0EF6               	movlw	246
 15386  018260  26E1               	addwf	fsr1l,f,c
 15387  018262  0EFF               	movlw	255
 15388  018264  22E2               	addwfc	fsr1h,f,c
 15389  018266  0012               	return		;funcret
 15390  018268                     __end_of_strncmp:
 15391                           	opt callstack 0
 15392                           
 15393 ;; *************** function _stoa *****************
 15394 ;; Defined at:
 15395 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15396 ;; Parameters:    Size  Location     Type
 15397 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15398 ;;		 -> f(6), NULL(0), 
 15399 ;;  s               2  [STACK] PTR unsigned char 
 15400 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15401 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15402 ;;		 -> V(191), 
 15403 ;; Auto vars:     Size  Location     Type
 15404 ;;  nuls            7  [STACK] unsigned char [7]
 15405 ;;  l               2  [STACK] int 
 15406 ;;  p               2  [STACK] int 
 15407 ;;  cp              2  [STACK] PTR unsigned char 
 15408 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15409 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15410 ;;		 -> STR_3(5), V(191), 
 15411 ;;  w               2  [STACK] int 
 15412 ;;  i               2  [STACK] int 
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  2  [STACK] int 
 15415 ;; Registers used:
 15416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used:    1
 15428 ;; Hardware stack levels required when called:   18
 15429 ;; This function calls:
 15430 ;;		_fputc
 15431 ;;		_strlen
 15432 ;; This function is called by:
 15433 ;;		_vfpfcnvrt
 15434 ;; This function uses a reentrant model
 15435 ;;
 15436                           
 15437                           	psect	text56
 15438  017410                     __ptext56:
 15439                           	opt callstack 0
 15440  017410                     _stoa:
 15441                           	opt callstack 0
 15442                           
 15443                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15444  017410  0E11               	movlw	17
 15445  017412  26E1               	addwf	fsr1l,f,c
 15446  017414  0E00               	movlw	0
 15447  017416  22E2               	addwfc	fsr1h,f,c
 15448                           
 15449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15450                           
 15451                           ;incstack = 0
 15452 ;; hardware stack exceeded
 15453  017418  EE20  F0F0         	lfsr	2,stoa@F1166
 15454                           
 15455                           ;stkvar	_nuls @ sp[(-17)+0]
 15456  01741C  0E07               	movlw	7
 15457  01741E  6E01               	movwf	btemp^0,c
 15458  017420  0EEF               	movlw	-17
 15459  017422                     us1157999:
 15460  017422  006F FF7B FFE3     	movff	postinc2,plusw1
 15461  017428  28E8               	incf	wreg,w,c
 15462  01742A  2E01               	decfsz	btemp^0,f,c
 15463  01742C  D7FA               	bra	us1157999
 15464                           
 15465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15466                           ;stkvar	_s @ sp[(-17)+-4]
 15467  01742E  0EEB               	movlw	-21
 15468  017430  006F FF8C  F00B    	movff	plusw1,btemp+10
 15469  017436  0EEC               	movlw	-20
 15470  017438  006F FF8C  F00C    	movff	plusw1,btemp+11
 15471                           
 15472                           ;stkvar	_cp @ sp[(-17)+11]
 15473  01743E  0EFB               	movlw	-5
 15474  017440  0060  F033  FFE3   	movff	btemp+11,plusw1
 15475  017446  0EFA               	movlw	-6
 15476  017448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15477                           
 15478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15479                           ;stkvar	_cp @ sp[(-17)+11]
 15480  01744E  0EFA               	movlw	-6
 15481  017450  006F FF8C  F001    	movff	plusw1,btemp
 15482  017456  0EFB               	movlw	-5
 15483  017458  50E3               	movf	plusw1,w,c
 15484  01745A  1001               	iorwf	btemp^0,w,c
 15485  01745C  A4D8               	btfss	status,2,c
 15486  01745E  D00E               	goto	l12304
 15487                           
 15488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15489                           ;stkvar	_nuls @ sp[(-17)+0]
 15490  017460  0EEF               	movlw	239
 15491  017462  24E1               	addwf	fsr1l,w,c
 15492  017464  6E0B               	movwf	(btemp+10)^0,c
 15493  017466  0EFF               	movlw	255
 15494  017468  20E2               	addwfc	fsr1h,w,c
 15495  01746A  6E0C               	movwf	(btemp+11)^0,c
 15496                           
 15497                           ;stkvar	_cp @ sp[(-17)+11]
 15498  01746C  0EFB               	movlw	-5
 15499  01746E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15500  017474  0EFA               	movlw	-6
 15501  017476  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15502  01747C                     l12304:
 15503                           
 15504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15505                           ;stkvar	_cp @ sp[(-17)+11]
 15506  01747C  0EFA               	movlw	-6
 15507  01747E  006F FF8F FFE6     	movff	plusw1,postinc1
 15508  017484  006F FF8F FFE6     	movff	plusw1,postinc1
 15509  01748A  EC6F  F0D4         	call	_strlen	;wreg free
 15510                           
 15511                           ;stkvar	_l @ sp[(-17)+7]
 15512  01748E  0EF6               	movlw	-10
 15513  017490  0060  F007  FFE3   	movff	btemp,plusw1
 15514  017496  0EF7               	movlw	-9
 15515  017498  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15516                           
 15517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15518                           ;stkvar	_p @ sp[(-17)+9]
 15519  01749E  0EF8               	movlw	-8
 15520  0174A0  0060  F0F3  FFE3   	movff	_prec,plusw1
 15521  0174A6  0EF9               	movlw	-7
 15522  0174A8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15523                           
 15524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15525                           ;stkvar	_p @ sp[(-17)+9]
 15526  0174AE  0EF9               	movlw	-7
 15527  0174B0  BEE3               	btfsc	plusw1,7,c
 15528  0174B2  D023               	goto	l2276
 15529                           
 15530                           ;stkvar	_l @ sp[(-17)+7]
 15531                           ;stkvar	_p @ sp[(-17)+9]
 15532  0174B4  50E1               	movf	fsr1l,w,c
 15533  0174B6  0FF8               	addlw	-8
 15534  0174B8  6ED9               	movwf	fsr2l,c
 15535  0174BA  50E2               	movf	fsr1h,w,c
 15536  0174BC  6EDA               	movwf	fsr2h,c
 15537  0174BE  0EFF               	movlw	255
 15538  0174C0  22DA               	addwfc	fsr2h,f,c
 15539  0174C2  0EF6               	movlw	-10
 15540  0174C4  50E3               	movf	plusw1,w,c
 15541  0174C6  5CDE               	subwf	postinc2,w,c
 15542  0174C8  50DE               	movf	postinc2,w,c
 15543  0174CA  0A80               	xorlw	128
 15544  0174CC  6E01               	movwf	btemp^0,c
 15545  0174CE  0EF7               	movlw	-9
 15546  0174D0  50E3               	movf	plusw1,w,c
 15547  0174D2  0A80               	xorlw	128
 15548  0174D4  5801               	subwfb	btemp^0,w,c
 15549  0174D6  B0D8               	btfsc	status,0,c
 15550  0174D8  D010               	goto	l2276
 15551                           
 15552                           ;stkvar	_p @ sp[(-17)+9]
 15553                           ;stkvar	_l @ sp[(-17)+7]
 15554  0174DA  0EF8               	movlw	-8
 15555  0174DC  006F FF8C  F001    	movff	plusw1,btemp
 15556  0174E2  0EF6               	movlw	-10
 15557  0174E4  0060  F007  FFE3   	movff	btemp,plusw1
 15558  0174EA  0EF9               	movlw	-7
 15559  0174EC  006F FF8C  F001    	movff	plusw1,btemp
 15560  0174F2  0EF7               	movlw	-9
 15561  0174F4  0060  F007  FFE3   	movff	btemp,plusw1
 15562  0174FA                     l2276:
 15563                           
 15564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15565                           ;stkvar	_l @ sp[(-17)+7]
 15566                           ;stkvar	_p @ sp[(-17)+9]
 15567  0174FA  0EF6               	movlw	-10
 15568  0174FC  006F FF8C  F001    	movff	plusw1,btemp
 15569  017502  0EF8               	movlw	-8
 15570  017504  0060  F007  FFE3   	movff	btemp,plusw1
 15571  01750A  0EF7               	movlw	-9
 15572  01750C  006F FF8C  F001    	movff	plusw1,btemp
 15573  017512  0EF9               	movlw	-7
 15574  017514  0060  F007  FFE3   	movff	btemp,plusw1
 15575                           
 15576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15577                           ;stkvar	_w @ sp[(-17)+13]
 15578  01751A  0EFC               	movlw	-4
 15579  01751C  0060  F0EB  FFE3   	movff	_width,plusw1
 15580  017522  0EFD               	movlw	-3
 15581  017524  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15582                           
 15583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15584  01752A  A03E               	btfss	_flags^0,0,c
 15585  01752C  D01F               	goto	l12324
 15586  01752E  D031               	goto	u11620
 15587  017530                     l12320:
 15588                           
 15589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15590                           ;stkvar	_fp @ sp[(-17)+-2]
 15591  017530  0EED               	movlw	-19
 15592  017532  006F FF8F FFE6     	movff	plusw1,postinc1
 15593  017538  006F FF8F FFE6     	movff	plusw1,postinc1
 15594  01753E  0E20               	movlw	32
 15595  017540  6EE6               	movwf	postinc1,c
 15596  017542  0E00               	movlw	0
 15597  017544  6EE6               	movwf	postinc1,c
 15598  017546  ECD0  F0CB         	call	_fputc	;wreg free
 15599                           
 15600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15601                           ;stkvar	_l @ sp[(-17)+7]
 15602  01754A  0EF6               	movlw	-10
 15603  01754C  50E3               	movf	plusw1,w,c
 15604  01754E  0F01               	addlw	1
 15605  017550  6E01               	movwf	btemp^0,c
 15606  017552  0EF6               	movlw	-10
 15607  017554  0060  F007  FFE3   	movff	btemp,plusw1
 15608  01755A  6A01               	clrf	btemp^0,c
 15609  01755C  0EF7               	movlw	-9
 15610  01755E  50E3               	movf	plusw1,w,c
 15611  017560  2001               	addwfc	btemp^0,w,c
 15612  017562  6E01               	movwf	btemp^0,c
 15613  017564  0EF7               	movlw	-9
 15614  017566  0060  F007  FFE3   	movff	btemp,plusw1
 15615  01756C                     l12324:
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15618                           ;stkvar	_w @ sp[(-17)+13]
 15619                           ;stkvar	_l @ sp[(-17)+7]
 15620  01756C  50E1               	movf	fsr1l,w,c
 15621  01756E  0FF6               	addlw	-10
 15622  017570  6ED9               	movwf	fsr2l,c
 15623  017572  50E2               	movf	fsr1h,w,c
 15624  017574  6EDA               	movwf	fsr2h,c
 15625  017576  0EFF               	movlw	255
 15626  017578  22DA               	addwfc	fsr2h,f,c
 15627  01757A  0EFC               	movlw	-4
 15628  01757C  50E3               	movf	plusw1,w,c
 15629  01757E  5CDE               	subwf	postinc2,w,c
 15630  017580  50DE               	movf	postinc2,w,c
 15631  017582  0A80               	xorlw	128
 15632  017584  6E01               	movwf	btemp^0,c
 15633  017586  0EFD               	movlw	-3
 15634  017588  50E3               	movf	plusw1,w,c
 15635  01758A  0A80               	xorlw	128
 15636  01758C  5801               	subwfb	btemp^0,w,c
 15637  01758E  A0D8               	btfss	status,0,c
 15638  017590  D7CF               	goto	l12320
 15639  017592                     u11620:
 15640                           
 15641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15642                           ;stkvar	_i @ sp[(-17)+15]
 15643  017592  0EFE               	movlw	-2
 15644  017594  6AE3               	clrf	plusw1,c
 15645  017596  0EFF               	movlw	-1
 15646  017598  6AE3               	clrf	plusw1,c
 15647                           
 15648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15649  01759A  D045               	goto	l12334
 15650  01759C                     l12328:
 15651                           
 15652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15653                           ;stkvar	_fp @ sp[(-17)+-2]
 15654  01759C  0EED               	movlw	-19
 15655  01759E  006F FF8F FFE6     	movff	plusw1,postinc1
 15656  0175A4  006F FF8F FFE6     	movff	plusw1,postinc1
 15657                           
 15658                           ;stkvar	_cp @ sp[(-19)+11]
 15659  0175AA  0EF8               	movlw	-8
 15660  0175AC  006F FF8F FFF6     	movff	plusw1,tblptrl
 15661  0175B2  0EF9               	movlw	-7
 15662  0175B4  006F FF8F FFF7     	movff	plusw1,tblptrh
 15663  0175BA  0E00               	movlw	low (__mediumconst shr (0+16))
 15664  0175BC  6EF8               	movwf	tblptru,c
 15665  0175BE  0E1F               	movlw	(high __ramtop+-1)
 15666  0175C0  64F7               	cpfsgt	tblptrh,c
 15667  0175C2  D003               	bra	u11637
 15668  0175C4  0008               	tblrd		*
 15669  0175C6  50F5               	movf	tablat,w,c
 15670  0175C8  D007               	bra	u11630
 15671  0175CA                     u11637:
 15672  0175CA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15673  0175D0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15674  0175D6  50EF               	movf	indf0,w,c
 15675  0175D8                     u11630:
 15676  0175D8  6EE6               	movwf	postinc1,c
 15677  0175DA  0E00               	movlw	0
 15678  0175DC  6EE6               	movwf	postinc1,c
 15679  0175DE  ECD0  F0CB         	call	_fputc	;wreg free
 15680                           
 15681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15682                           ;stkvar	_cp @ sp[(-17)+11]
 15683  0175E2  0EFA               	movlw	-6
 15684  0175E4  50E3               	movf	plusw1,w,c
 15685  0175E6  0F01               	addlw	1
 15686  0175E8  6E01               	movwf	btemp^0,c
 15687  0175EA  0EFA               	movlw	-6
 15688  0175EC  0060  F007  FFE3   	movff	btemp,plusw1
 15689  0175F2  6A01               	clrf	btemp^0,c
 15690  0175F4  0EFB               	movlw	-5
 15691  0175F6  50E3               	movf	plusw1,w,c
 15692  0175F8  2001               	addwfc	btemp^0,w,c
 15693  0175FA  6E01               	movwf	btemp^0,c
 15694  0175FC  0EFB               	movlw	-5
 15695  0175FE  0060  F007  FFE3   	movff	btemp,plusw1
 15696                           
 15697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15698                           ;stkvar	_i @ sp[(-17)+15]
 15699  017604  0EFE               	movlw	-2
 15700  017606  50E3               	movf	plusw1,w,c
 15701  017608  0F01               	addlw	1
 15702  01760A  6E01               	movwf	btemp^0,c
 15703  01760C  0EFE               	movlw	-2
 15704  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 15705  017614  6A01               	clrf	btemp^0,c
 15706  017616  0EFF               	movlw	-1
 15707  017618  50E3               	movf	plusw1,w,c
 15708  01761A  2001               	addwfc	btemp^0,w,c
 15709  01761C  6E01               	movwf	btemp^0,c
 15710  01761E  0EFF               	movlw	-1
 15711  017620  0060  F007  FFE3   	movff	btemp,plusw1
 15712  017626                     l12334:
 15713                           
 15714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15715                           ;stkvar	_p @ sp[(-17)+9]
 15716                           ;stkvar	_i @ sp[(-17)+15]
 15717  017626  50E1               	movf	fsr1l,w,c
 15718  017628  0FFE               	addlw	-2
 15719  01762A  6ED9               	movwf	fsr2l,c
 15720  01762C  50E2               	movf	fsr1h,w,c
 15721  01762E  6EDA               	movwf	fsr2h,c
 15722  017630  0EFF               	movlw	255
 15723  017632  22DA               	addwfc	fsr2h,f,c
 15724  017634  0EF8               	movlw	-8
 15725  017636  50E3               	movf	plusw1,w,c
 15726  017638  5CDE               	subwf	postinc2,w,c
 15727  01763A  50DE               	movf	postinc2,w,c
 15728  01763C  0A80               	xorlw	128
 15729  01763E  6E01               	movwf	btemp^0,c
 15730  017640  0EF9               	movlw	-7
 15731  017642  50E3               	movf	plusw1,w,c
 15732  017644  0A80               	xorlw	128
 15733  017646  5801               	subwfb	btemp^0,w,c
 15734  017648  A0D8               	btfss	status,0,c
 15735  01764A  D7A8               	goto	l12328
 15736                           
 15737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15738  01764C  B03E               	btfsc	_flags^0,0,c
 15739  01764E  D01F               	goto	l12342
 15740  017650  D031               	goto	u11660
 15741  017652                     l12338:
 15742                           
 15743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15744                           ;stkvar	_fp @ sp[(-17)+-2]
 15745  017652  0EED               	movlw	-19
 15746  017654  006F FF8F FFE6     	movff	plusw1,postinc1
 15747  01765A  006F FF8F FFE6     	movff	plusw1,postinc1
 15748  017660  0E20               	movlw	32
 15749  017662  6EE6               	movwf	postinc1,c
 15750  017664  0E00               	movlw	0
 15751  017666  6EE6               	movwf	postinc1,c
 15752  017668  ECD0  F0CB         	call	_fputc	;wreg free
 15753                           
 15754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15755                           ;stkvar	_l @ sp[(-17)+7]
 15756  01766C  0EF6               	movlw	-10
 15757  01766E  50E3               	movf	plusw1,w,c
 15758  017670  0F01               	addlw	1
 15759  017672  6E01               	movwf	btemp^0,c
 15760  017674  0EF6               	movlw	-10
 15761  017676  0060  F007  FFE3   	movff	btemp,plusw1
 15762  01767C  6A01               	clrf	btemp^0,c
 15763  01767E  0EF7               	movlw	-9
 15764  017680  50E3               	movf	plusw1,w,c
 15765  017682  2001               	addwfc	btemp^0,w,c
 15766  017684  6E01               	movwf	btemp^0,c
 15767  017686  0EF7               	movlw	-9
 15768  017688  0060  F007  FFE3   	movff	btemp,plusw1
 15769  01768E                     l12342:
 15770                           
 15771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15772                           ;stkvar	_w @ sp[(-17)+13]
 15773                           ;stkvar	_l @ sp[(-17)+7]
 15774  01768E  50E1               	movf	fsr1l,w,c
 15775  017690  0FF6               	addlw	-10
 15776  017692  6ED9               	movwf	fsr2l,c
 15777  017694  50E2               	movf	fsr1h,w,c
 15778  017696  6EDA               	movwf	fsr2h,c
 15779  017698  0EFF               	movlw	255
 15780  01769A  22DA               	addwfc	fsr2h,f,c
 15781  01769C  0EFC               	movlw	-4
 15782  01769E  50E3               	movf	plusw1,w,c
 15783  0176A0  5CDE               	subwf	postinc2,w,c
 15784  0176A2  50DE               	movf	postinc2,w,c
 15785  0176A4  0A80               	xorlw	128
 15786  0176A6  6E01               	movwf	btemp^0,c
 15787  0176A8  0EFD               	movlw	-3
 15788  0176AA  50E3               	movf	plusw1,w,c
 15789  0176AC  0A80               	xorlw	128
 15790  0176AE  5801               	subwfb	btemp^0,w,c
 15791  0176B0  A0D8               	btfss	status,0,c
 15792  0176B2  D7CF               	goto	l12338
 15793  0176B4                     u11660:
 15794                           
 15795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15796                           ;stkvar	_l @ sp[(-17)+7]
 15797  0176B4  0EF6               	movlw	-10
 15798  0176B6  006F FF8C  F001    	movff	plusw1,btemp
 15799  0176BC  0EF7               	movlw	-9
 15800  0176BE  006F FF8C  F002    	movff	plusw1,btemp+1
 15801                           
 15802                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15803  0176C4  0EEB               	movlw	235
 15804  0176C6  26E1               	addwf	fsr1l,f,c
 15805  0176C8  0EFF               	movlw	255
 15806  0176CA  22E2               	addwfc	fsr1h,f,c
 15807  0176CC  0012               	return		;funcret
 15808  0176CE                     __end_of_stoa:
 15809                           	opt callstack 0
 15810                           
 15811 ;; *************** function _efgtoa *****************
 15812 ;; Defined at:
 15813 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15816 ;;		 -> f(6), NULL(0), 
 15817 ;;  f               4  [STACK] PTR struct _IO_FILE
 15818 ;;  c               1  [STACK] unsigned char 
 15819 ;; Auto vars:     Size  Location     Type
 15820 ;;  u               4  [STACK] unsigned char 
 15821 ;;  g               4  [STACK] unsigned char 
 15822 ;;  l               4  [STACK] unsigned char 
 15823 ;;  h               4  [STACK] unsigned char 
 15824 ;;  ou              4  [STACK] unsigned char 
 15825 ;;  n               2  [STACK] int 
 15826 ;;  e               2  [STACK] int 
 15827 ;;  i               2  [STACK] int 
 15828 ;;  w               2  [STACK] int 
 15829 ;;  p               2  [STACK] int 
 15830 ;;  sign            2  [STACK] int 
 15831 ;;  d               2  [STACK] int 
 15832 ;;  ne              2  [STACK] int 
 15833 ;;  m               2  [STACK] int 
 15834 ;;  pp              2  [STACK] int 
 15835 ;;  t               2  [STACK] int 
 15836 ;;  mode            1  [STACK] unsigned char 
 15837 ;;  nmode           1  [STACK] unsigned char 
 15838 ;; Return value:  Size  Location     Type
 15839 ;;                  2  [STACK] int 
 15840 ;; Registers used:
 15841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15842 ;; Tracked objects:
 15843 ;;		On entry : 0/0
 15844 ;;		On exit  : 0/0
 15845 ;;		Unchanged: 0/0
 15846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15851 ;;Total ram usage:        0 bytes
 15852 ;; Hardware stack levels used:    1
 15853 ;; Hardware stack levels required when called:   20
 15854 ;; This function calls:
 15855 ;;		___awdiv
 15856 ;;		___awmod
 15857 ;;		___fladd
 15858 ;;		___fldiv
 15859 ;;		___fleq
 15860 ;;		___flge
 15861 ;;		___flmul
 15862 ;;		___flneg
 15863 ;;		___flsub
 15864 ;;		___fltol
 15865 ;;		___fpclassifyf
 15866 ;;		_floorf
 15867 ;;		_isupper
 15868 ;;		_pad
 15869 ;;		_strcpy
 15870 ;;		_tolower
 15871 ;; This function is called by:
 15872 ;;		_vfpfcnvrt
 15873 ;; This function uses a reentrant model
 15874 ;;
 15875                           
 15876                           	psect	text57
 15877  010000                     __ptext57:
 15878                           	opt callstack 0
 15879  010000                     _efgtoa:
 15880                           	opt callstack 0
 15881                           
 15882                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15883  010000  0E38               	movlw	56
 15884  010002  26E1               	addwf	fsr1l,f,c
 15885  010004  0E00               	movlw	0
 15886  010006  22E2               	addwfc	fsr1h,f,c
 15887                           
 15888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15889                           ;stkvar	_sign @ sp[(-56)+42]
 15890                           
 15891                           ;incstack = 0
 15892 ;; hardware stack exceeded
 15893  010008  0EF2               	movlw	-14
 15894  01000A  6AE3               	clrf	plusw1,c
 15895  01000C  0EF3               	movlw	-13
 15896  01000E  6AE3               	clrf	plusw1,c
 15897                           
 15898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15899                           ;stkvar	_f @ sp[(-56)+-6]
 15900  010010  0EC2               	movlw	-62
 15901  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15902  010018  0EC3               	movlw	-61
 15903  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15904  010020  0EC4               	movlw	-60
 15905  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15906  010028  0EC5               	movlw	-59
 15907  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15908                           
 15909                           ;stkvar	_g @ sp[(-56)+16]
 15910  010030  0ED8               	movlw	-40
 15911  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15912  010038  0ED9               	movlw	-39
 15913  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15914  010040  0EDA               	movlw	-38
 15915  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15916  010048  0EDB               	movlw	-37
 15917  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15918                           
 15919                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15920                           ;stkvar	_g @ sp[(-56)+16]
 15921  010050  0EDB               	movlw	-37
 15922  010052  AEE3               	btfss	plusw1,7,c
 15923  010054  D02B               	goto	l12002
 15924                           
 15925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15926  010056  0E01               	movlw	1
 15927  010058  6E0B               	movwf	(btemp+10)^0,c
 15928  01005A  0E00               	movlw	0
 15929  01005C  6E0C               	movwf	(btemp+11)^0,c
 15930                           
 15931                           ;stkvar	_sign @ sp[(-56)+42]
 15932  01005E  0EF2               	movlw	-14
 15933  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15934  010066  0EF3               	movlw	-13
 15935  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15936                           
 15937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15938                           ;stkvar	_g @ sp[(-56)+16]
 15939  01006E  0ED8               	movlw	-40
 15940  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15941  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15942  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15943  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15944  010088  EC0C  F0DA         	call	___flneg	;wreg free
 15945                           
 15946                           ;stkvar	_g @ sp[(-56)+16]
 15947  01008C  0ED8               	movlw	-40
 15948  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15949  010094  0ED9               	movlw	-39
 15950  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15951  01009C  0EDA               	movlw	-38
 15952  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15953  0100A4  0EDB               	movlw	-37
 15954  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15955  0100AC                     l12002:
 15956                           
 15957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15958                           ;stkvar	_n @ sp[(-56)+32]
 15959  0100AC  0EE8               	movlw	-24
 15960  0100AE  6AE3               	clrf	plusw1,c
 15961  0100B0  0EE9               	movlw	-23
 15962  0100B2  6AE3               	clrf	plusw1,c
 15963                           
 15964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15965                           ;stkvar	_w @ sp[(-56)+38]
 15966  0100B4  0EEE               	movlw	-18
 15967  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15968  0100BC  0EEF               	movlw	-17
 15969  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15970                           
 15971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15972                           ;stkvar	_sign @ sp[(-56)+42]
 15973  0100C4  0EF2               	movlw	-14
 15974  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15975  0100CC  0EF3               	movlw	-13
 15976  0100CE  50E3               	movf	plusw1,w,c
 15977  0100D0  1001               	iorwf	btemp^0,w,c
 15978  0100D2  A4D8               	btfss	status,2,c
 15979  0100D4  D002               	goto	u11070
 15980  0100D6  A43E               	btfss	_flags^0,2,c
 15981  0100D8  D036               	goto	l12022
 15982  0100DA                     u11070:
 15983                           
 15984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15985                           ;stkvar	_sign @ sp[(-56)+42]
 15986  0100DA  0EF2               	movlw	-14
 15987  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15988  0100E2  0EF3               	movlw	-13
 15989  0100E4  50E3               	movf	plusw1,w,c
 15990  0100E6  1001               	iorwf	btemp^0,w,c
 15991  0100E8  A4D8               	btfss	status,2,c
 15992  0100EA  D002               	goto	l12014
 15993  0100EC  0E2B               	movlw	43
 15994  0100EE  D001               	goto	L16
 15995  0100F0                     l12014:
 15996  0100F0  0E2D               	movlw	45
 15997  0100F2                     L16:
 15998  0100F2  6E0B               	movwf	(btemp+10)^0,c
 15999  0100F4  0E00               	movlw	0
 16000  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16001                           
 16002                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16003  0100F8  0ED2               	movlw	-46
 16004  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16005  010100  0ED3               	movlw	-45
 16006  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16007                           
 16008                           ;stkvar	_efgtoa$5517 @ sp[(-56)+10]
 16009  010108  0ED2               	movlw	-46
 16010  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16011                           
 16012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16013                           ;stkvar	_n @ sp[(-56)+32]
 16014  010110  0EE8               	movlw	-24
 16015  010112  50E3               	movf	plusw1,w,c
 16016  010114  0F01               	addlw	1
 16017  010116  6E01               	movwf	btemp^0,c
 16018  010118  0EE8               	movlw	-24
 16019  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16020  010120  6A01               	clrf	btemp^0,c
 16021  010122  0EE9               	movlw	-23
 16022  010124  50E3               	movf	plusw1,w,c
 16023  010126  2001               	addwfc	btemp^0,w,c
 16024  010128  6E01               	movwf	btemp^0,c
 16025  01012A  0EE9               	movlw	-23
 16026  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16027                           
 16028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16029                           ;stkvar	_w @ sp[(-56)+38]
 16030  010132  50E1               	movf	fsr1l,w,c
 16031  010134  0FEE               	addlw	-18
 16032  010136  6ED9               	movwf	fsr2l,c
 16033  010138  50E2               	movf	fsr1h,w,c
 16034  01013A  6EDA               	movwf	fsr2h,c
 16035  01013C  0EFF               	movlw	255
 16036  01013E  22DA               	addwfc	fsr2h,f,c
 16037  010140  06DE               	decf	postinc2,f,c
 16038  010142  0E00               	movlw	0
 16039  010144  5ADD               	subwfb	postdec2,f,c
 16040  010146                     l12022:
 16041                           
 16042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16043                           ;stkvar	_g @ sp[(-56)+16]
 16044  010146  0ED8               	movlw	-40
 16045  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16046  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16047  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16048  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16049  010160  ECED  F0C4         	call	___fpclassifyf	;wreg free
 16050  010164  0401               	decf	btemp^0,w,c
 16051  010166  1002               	iorwf	(btemp+1)^0,w,c
 16052  010168  A4D8               	btfss	status,2,c
 16053  01016A  D076               	goto	l12040
 16054  01016C  0EBF               	movlw	191
 16055  01016E  6E0B               	movwf	(btemp+10)^0,c
 16056  010170  0EFF               	movlw	255
 16057  010172  6E0C               	movwf	(btemp+11)^0,c
 16058                           
 16059                           ;stkvar	_c @ sp[(-56)+-7]
 16060  010174  0EC1               	movlw	-63
 16061  010176  50E3               	movf	plusw1,w,c
 16062  010178  6E09               	movwf	(btemp+8)^0,c
 16063  01017A  6A0A               	clrf	(btemp+9)^0,c
 16064  01017C  500B               	movf	(btemp+10)^0,w,c
 16065  01017E  2609               	addwf	(btemp+8)^0,f,c
 16066  010180  500C               	movf	(btemp+11)^0,w,c
 16067  010182  220A               	addwfc	(btemp+9)^0,f,c
 16068  010184  500A               	movf	(btemp+9)^0,w,c
 16069  010186  E106               	bnz	u11100
 16070  010188  0E1A               	movlw	26
 16071  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16072  01018C  B0D8               	btfsc	status,0,c
 16073  01018E  D002               	goto	u11100
 16074  010190  0E01               	movlw	1
 16075  010192  D001               	goto	u11110
 16076  010194                     u11100:
 16077  010194  0E00               	movlw	0
 16078  010196                     u11110:
 16079  010196  6E0B               	movwf	(btemp+10)^0,c
 16080  010198  6A0C               	clrf	(btemp+11)^0,c
 16081                           
 16082                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16083  01019A  0ED0               	movlw	-48
 16084  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16085  0101A2  0ED1               	movlw	-47
 16086  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16087                           
 16088                           ;stkvar	_efgtoa$5518 @ sp[(-56)+8]
 16089  0101AA  0ED0               	movlw	-48
 16090  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16091  0101B2  0ED1               	movlw	-47
 16092  0101B4  50E3               	movf	plusw1,w,c
 16093  0101B6  1001               	iorwf	btemp^0,w,c
 16094  0101B8  B4D8               	btfsc	status,2,c
 16095  0101BA  D017               	goto	l12032
 16096                           
 16097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16098  0101BC  0ED7               	movlw	low STR_65
 16099  0101BE  6EE6               	movwf	postinc1,c
 16100  0101C0  0EFF               	movlw	high STR_65
 16101  0101C2  6EE6               	movwf	postinc1,c
 16102                           
 16103                           ;stkvar	_n @ sp[(-58)+32]
 16104  0101C4  0E97               	movlw	low _dbuf
 16105  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16106  0101C8  0E02               	movlw	high _dbuf
 16107  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16108  0101CC  0EE6               	movlw	-26
 16109  0101CE  50E3               	movf	plusw1,w,c
 16110  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16111  0101D2  0EE7               	movlw	-25
 16112  0101D4  50E3               	movf	plusw1,w,c
 16113  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16114  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16115  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16116  0101E4  EC41  F0D1         	call	_strcpy	;wreg free
 16117                           
 16118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16119  0101E8  D016               	goto	l12034
 16120  0101EA                     l12032:
 16121                           
 16122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16123  0101EA  0EDF               	movlw	low STR_66
 16124  0101EC  6EE6               	movwf	postinc1,c
 16125  0101EE  0EFF               	movlw	high STR_66
 16126  0101F0  6EE6               	movwf	postinc1,c
 16127                           
 16128                           ;stkvar	_n @ sp[(-58)+32]
 16129  0101F2  0E97               	movlw	low _dbuf
 16130  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16131  0101F6  0E02               	movlw	high _dbuf
 16132  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16133  0101FA  0EE6               	movlw	-26
 16134  0101FC  50E3               	movf	plusw1,w,c
 16135  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16136  010200  0EE7               	movlw	-25
 16137  010202  50E3               	movf	plusw1,w,c
 16138  010204  220C               	addwfc	(btemp+11)^0,f,c
 16139  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16140  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16141  010212  EC41  F0D1         	call	_strcpy	;wreg free
 16142  010216                     l12034:
 16143                           
 16144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16145                           ;stkvar	_w @ sp[(-56)+38]
 16146  010216  50E1               	movf	fsr1l,w,c
 16147  010218  0FEE               	addlw	-18
 16148  01021A  6ED9               	movwf	fsr2l,c
 16149  01021C  50E2               	movf	fsr1h,w,c
 16150  01021E  6EDA               	movwf	fsr2h,c
 16151  010220  0EFF               	movlw	255
 16152  010222  22DA               	addwfc	fsr2h,f,c
 16153  010224  0EFD               	movlw	253
 16154  010226  26DE               	addwf	postinc2,f,c
 16155  010228  0EFF               	movlw	255
 16156  01022A  22DD               	addwfc	postdec2,f,c
 16157  01022C                     l12036:
 16158                           
 16159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16160                           ;stkvar	_w @ sp[(-56)+38]
 16161  01022C  0EEE               	movlw	-18
 16162  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16163  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16164  01023A  0E97               	movlw	low _dbuf
 16165  01023C  6EE6               	movwf	postinc1,c
 16166  01023E  0E02               	movlw	high _dbuf
 16167  010240  6EE6               	movwf	postinc1,c
 16168                           
 16169                           ;stkvar	_fp @ sp[(-60)+-2]
 16170  010242  0EC2               	movlw	-62
 16171  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16172  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16173  010250  ECEE  F0CC         	call	_pad	;wreg free
 16174  010254  EF1D  F089         	goto	l2194
 16175  010258                     l12040:
 16176                           
 16177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16178                           ;stkvar	_g @ sp[(-56)+16]
 16179  010258  0ED8               	movlw	-40
 16180  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16181  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16182  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  010272  ECED  F0C4         	call	___fpclassifyf	;wreg free
 16185  010276  5001               	movf	btemp^0,w,c
 16186  010278  1002               	iorwf	(btemp+1)^0,w,c
 16187  01027A  A4D8               	btfss	status,2,c
 16188  01027C  D056               	goto	l12058
 16189  01027E  0EBF               	movlw	191
 16190  010280  6E0B               	movwf	(btemp+10)^0,c
 16191  010282  0EFF               	movlw	255
 16192  010284  6E0C               	movwf	(btemp+11)^0,c
 16193                           
 16194                           ;stkvar	_c @ sp[(-56)+-7]
 16195  010286  0EC1               	movlw	-63
 16196  010288  50E3               	movf	plusw1,w,c
 16197  01028A  6E09               	movwf	(btemp+8)^0,c
 16198  01028C  6A0A               	clrf	(btemp+9)^0,c
 16199  01028E  500B               	movf	(btemp+10)^0,w,c
 16200  010290  2609               	addwf	(btemp+8)^0,f,c
 16201  010292  500C               	movf	(btemp+11)^0,w,c
 16202  010294  220A               	addwfc	(btemp+9)^0,f,c
 16203  010296  500A               	movf	(btemp+9)^0,w,c
 16204  010298  E106               	bnz	u11140
 16205  01029A  0E1A               	movlw	26
 16206  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16207  01029E  B0D8               	btfsc	status,0,c
 16208  0102A0  D002               	goto	u11140
 16209  0102A2  0E01               	movlw	1
 16210  0102A4  D001               	goto	u11150
 16211  0102A6                     u11140:
 16212  0102A6  0E00               	movlw	0
 16213  0102A8                     u11150:
 16214  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16215  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16216                           
 16217                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16218  0102AC  0ECE               	movlw	-50
 16219  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16220  0102B4  0ECF               	movlw	-49
 16221  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16222                           
 16223                           ;stkvar	_efgtoa$5522 @ sp[(-56)+6]
 16224  0102BC  0ECE               	movlw	-50
 16225  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16226  0102C4  0ECF               	movlw	-49
 16227  0102C6  50E3               	movf	plusw1,w,c
 16228  0102C8  1001               	iorwf	btemp^0,w,c
 16229  0102CA  B4D8               	btfsc	status,2,c
 16230  0102CC  D017               	goto	l12050
 16231                           
 16232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16233  0102CE  0EDB               	movlw	low STR_69
 16234  0102D0  6EE6               	movwf	postinc1,c
 16235  0102D2  0EFF               	movlw	high STR_69
 16236  0102D4  6EE6               	movwf	postinc1,c
 16237                           
 16238                           ;stkvar	_n @ sp[(-58)+32]
 16239  0102D6  0E97               	movlw	low _dbuf
 16240  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16241  0102DA  0E02               	movlw	high _dbuf
 16242  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16243  0102DE  0EE6               	movlw	-26
 16244  0102E0  50E3               	movf	plusw1,w,c
 16245  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16246  0102E4  0EE7               	movlw	-25
 16247  0102E6  50E3               	movf	plusw1,w,c
 16248  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16249  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16250  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16251  0102F6  EC41  F0D1         	call	_strcpy	;wreg free
 16252                           
 16253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16254  0102FA  D78D               	goto	l12034
 16255  0102FC                     l12050:
 16256                           
 16257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16258  0102FC  0EE3               	movlw	low STR_70
 16259  0102FE  6EE6               	movwf	postinc1,c
 16260  010300  0EFF               	movlw	high STR_70
 16261  010302  6EE6               	movwf	postinc1,c
 16262                           
 16263                           ;stkvar	_n @ sp[(-58)+32]
 16264  010304  0E97               	movlw	low _dbuf
 16265  010306  6E0B               	movwf	(btemp+10)^0,c
 16266  010308  0E02               	movlw	high _dbuf
 16267  01030A  6E0C               	movwf	(btemp+11)^0,c
 16268  01030C  0EE6               	movlw	-26
 16269  01030E  50E3               	movf	plusw1,w,c
 16270  010310  260B               	addwf	(btemp+10)^0,f,c
 16271  010312  0EE7               	movlw	-25
 16272  010314  50E3               	movf	plusw1,w,c
 16273  010316  220C               	addwfc	(btemp+11)^0,f,c
 16274  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16275  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16276  010324  EC41  F0D1         	call	_strcpy	;wreg free
 16277  010328  D776               	goto	l12034
 16278  01032A                     l12058:
 16279                           
 16280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16281  01032A  0E00               	movlw	0
 16282  01032C  6E09               	movwf	(btemp+8)^0,c
 16283  01032E  0E00               	movlw	0
 16284  010330  6E0A               	movwf	(btemp+9)^0,c
 16285  010332  0E80               	movlw	128
 16286  010334  6E0B               	movwf	(btemp+10)^0,c
 16287  010336  0E3F               	movlw	63
 16288  010338  6E0C               	movwf	(btemp+11)^0,c
 16289                           
 16290                           ;stkvar	_u @ sp[(-56)+12]
 16291  01033A  0ED4               	movlw	-44
 16292  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16293  010342  0ED5               	movlw	-43
 16294  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16295  01034A  0ED6               	movlw	-42
 16296  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16297  010352  0ED7               	movlw	-41
 16298  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16299                           
 16300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16301                           ;stkvar	_e @ sp[(-56)+34]
 16302  01035A  0EEA               	movlw	-22
 16303  01035C  6AE3               	clrf	plusw1,c
 16304  01035E  0EEB               	movlw	-21
 16305  010360  6AE3               	clrf	plusw1,c
 16306                           
 16307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16308  010362  0E00               	movlw	0
 16309  010364  6EE6               	movwf	postinc1,c
 16310  010366  0E00               	movlw	0
 16311  010368  6EE6               	movwf	postinc1,c
 16312  01036A  0E00               	movlw	0
 16313  01036C  6EE6               	movwf	postinc1,c
 16314  01036E  0E00               	movlw	0
 16315  010370  6EE6               	movwf	postinc1,c
 16316                           
 16317                           ;stkvar	_g @ sp[(-60)+16]
 16318  010372  0ED4               	movlw	-44
 16319  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16320  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16321  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16322  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  01038C  ECAB  F0D1         	call	___fleq	;wreg free
 16324  010390  A001               	btfss	btemp& (0+255),0,c
 16325  010392  D039               	goto	l12070
 16326  010394  D0BC               	goto	u11190
 16327  010396                     l12066:
 16328                           
 16329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16330  010396  0E00               	movlw	0
 16331  010398  6EE6               	movwf	postinc1,c
 16332  01039A  0E00               	movlw	0
 16333  01039C  6EE6               	movwf	postinc1,c
 16334  01039E  0E20               	movlw	32
 16335  0103A0  6EE6               	movwf	postinc1,c
 16336  0103A2  0E41               	movlw	65
 16337  0103A4  6EE6               	movwf	postinc1,c
 16338                           
 16339                           ;stkvar	_u @ sp[(-60)+12]
 16340  0103A6  0ED0               	movlw	-48
 16341  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16342  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16343  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16344  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16345  0103C0  ECC1  F09E         	call	___flmul	;wreg free
 16346                           
 16347                           ;stkvar	_u @ sp[(-56)+12]
 16348  0103C4  0ED4               	movlw	-44
 16349  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16350  0103CC  0ED5               	movlw	-43
 16351  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16352  0103D4  0ED6               	movlw	-42
 16353  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16354  0103DC  0ED7               	movlw	-41
 16355  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16356                           
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16358                           ;stkvar	_e @ sp[(-56)+34]
 16359  0103E4  0EEA               	movlw	-22
 16360  0103E6  50E3               	movf	plusw1,w,c
 16361  0103E8  0F01               	addlw	1
 16362  0103EA  6E01               	movwf	btemp^0,c
 16363  0103EC  0EEA               	movlw	-22
 16364  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16365  0103F4  6A01               	clrf	btemp^0,c
 16366  0103F6  0EEB               	movlw	-21
 16367  0103F8  50E3               	movf	plusw1,w,c
 16368  0103FA  2001               	addwfc	btemp^0,w,c
 16369  0103FC  6E01               	movwf	btemp^0,c
 16370  0103FE  0EEB               	movlw	-21
 16371  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16372  010406                     l12070:
 16373                           
 16374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16375  010406  0E00               	movlw	0
 16376  010408  6EE6               	movwf	postinc1,c
 16377  01040A  0E00               	movlw	0
 16378  01040C  6EE6               	movwf	postinc1,c
 16379  01040E  0E20               	movlw	32
 16380  010410  6EE6               	movwf	postinc1,c
 16381  010412  0E41               	movlw	65
 16382  010414  6EE6               	movwf	postinc1,c
 16383                           
 16384                           ;stkvar	_u @ sp[(-60)+12]
 16385  010416  0ED0               	movlw	-48
 16386  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16387  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16388  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16389  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16390  010430  ECC1  F09E         	call	___flmul	;wreg free
 16391  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16392  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16393  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16394  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16395                           
 16396                           ;stkvar	_g @ sp[(-60)+16]
 16397  01044C  0ED4               	movlw	-44
 16398  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16401  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16402  010466  ECF4  F0C7         	call	___flge	;wreg free
 16403  01046A  A001               	btfss	btemp& (0+255),0,c
 16404  01046C  D032               	goto	l12076
 16405  01046E  D793               	goto	l12066
 16406  010470                     l12072:
 16407                           
 16408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16409  010470  0E00               	movlw	0
 16410  010472  6EE6               	movwf	postinc1,c
 16411  010474  0E00               	movlw	0
 16412  010476  6EE6               	movwf	postinc1,c
 16413  010478  0E20               	movlw	32
 16414  01047A  6EE6               	movwf	postinc1,c
 16415  01047C  0E41               	movlw	65
 16416  01047E  6EE6               	movwf	postinc1,c
 16417                           
 16418                           ;stkvar	_u @ sp[(-60)+12]
 16419  010480  0ED0               	movlw	-48
 16420  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16421  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16422  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16423  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16424  01049A  ECB4  F0A6         	call	___fldiv	;wreg free
 16425                           
 16426                           ;stkvar	_u @ sp[(-56)+12]
 16427  01049E  0ED4               	movlw	-44
 16428  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16429  0104A6  0ED5               	movlw	-43
 16430  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16431  0104AE  0ED6               	movlw	-42
 16432  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16433  0104B6  0ED7               	movlw	-41
 16434  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16435                           
 16436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16437                           ;stkvar	_e @ sp[(-56)+34]
 16438  0104BE  50E1               	movf	fsr1l,w,c
 16439  0104C0  0FEA               	addlw	-22
 16440  0104C2  6ED9               	movwf	fsr2l,c
 16441  0104C4  50E2               	movf	fsr1h,w,c
 16442  0104C6  6EDA               	movwf	fsr2h,c
 16443  0104C8  0EFF               	movlw	255
 16444  0104CA  22DA               	addwfc	fsr2h,f,c
 16445  0104CC  06DE               	decf	postinc2,f,c
 16446  0104CE  0E00               	movlw	0
 16447  0104D0  5ADD               	subwfb	postdec2,f,c
 16448  0104D2                     l12076:
 16449                           
 16450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16451                           ;stkvar	_u @ sp[(-56)+12]
 16452  0104D2  0ED4               	movlw	-44
 16453  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16454  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16455  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16456  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16457                           
 16458                           ;stkvar	_g @ sp[(-60)+16]
 16459  0104EC  0ED4               	movlw	-44
 16460  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16461  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16462  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16463  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16464  010506  ECF4  F0C7         	call	___flge	;wreg free
 16465  01050A  A001               	btfss	btemp& (0+255),0,c
 16466  01050C  D7B1               	goto	l12072
 16467  01050E                     u11190:
 16468                           
 16469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16470                           ;stkvar	_c @ sp[(-56)+-7]
 16471  01050E  0EC1               	movlw	-63
 16472  010510  50E3               	movf	plusw1,w,c
 16473  010512  6EE6               	movwf	postinc1,c
 16474  010514  0E00               	movlw	0
 16475  010516  6EE6               	movwf	postinc1,c
 16476  010518  EC6C  F0D6         	call	_tolower	;wreg free
 16477                           
 16478                           ;stkvar	_mode @ sp[(-56)+54]
 16479  01051C  0EFE               	movlw	-2
 16480  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16481                           
 16482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16483                           ;stkvar	_mode @ sp[(-56)+54]
 16484                           ;stkvar	_nmode @ sp[(-56)+55]
 16485  010524  0EFE               	movlw	-2
 16486  010526  006F FF8C  F001    	movff	plusw1,btemp
 16487  01052C  0EFF               	movlw	-1
 16488  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16489                           
 16490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16491                           ;stkvar	_mode @ sp[(-56)+54]
 16492  010534  0EFE               	movlw	-2
 16493  010536  006F FF8C  F001    	movff	plusw1,btemp
 16494  01053C  0E67               	movlw	103
 16495  01053E  1801               	xorwf	btemp^0,w,c
 16496  010540  A4D8               	btfss	status,2,c
 16497  010542  D025               	goto	l12094
 16498                           
 16499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16500  010544  503C               	movf	_prec^0,w,c
 16501  010546  103D               	iorwf	(_prec+1)^0,w,c
 16502  010548  A4D8               	btfss	status,2,c
 16503  01054A  D004               	goto	l12088
 16504                           
 16505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16506  01054C  0E00               	movlw	0
 16507  01054E  6E3D               	movwf	(_prec+1)^0,c
 16508  010550  0E01               	movlw	1
 16509  010552  6E3C               	movwf	_prec^0,c
 16510  010554                     l12088:
 16511                           
 16512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16513  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16514  010556  D005               	goto	u11220
 16515  010558  503D               	movf	(_prec+1)^0,w,c
 16516  01055A  E110               	bnz	l12092
 16517  01055C  043C               	decf	_prec^0,w,c
 16518  01055E  B0D8               	btfsc	status,0,c
 16519  010560  D00D               	goto	l12092
 16520  010562                     u11220:
 16521  010562  0E06               	movlw	6
 16522  010564  6E0B               	movwf	(btemp+10)^0,c
 16523  010566  0E00               	movlw	0
 16524  010568  6E0C               	movwf	(btemp+11)^0,c
 16525                           
 16526                           ;stkvar	_p @ sp[(-56)+40]
 16527  01056A  0EF0               	movlw	-16
 16528  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16529  010572  0EF1               	movlw	-15
 16530  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16531  01057A  D00C               	goto	l12100
 16532  01057C                     l12092:
 16533                           
 16534                           ;stkvar	_p @ sp[(-56)+40]
 16535  01057C  0EF0               	movlw	-16
 16536  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16537  010584  0EF1               	movlw	-15
 16538  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16539  01058C  D003               	goto	l12100
 16540  01058E                     l12094:
 16541                           
 16542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16543  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16544  010590  D7F5               	goto	l12092
 16545  010592  D7E7               	goto	u11220
 16546  010594                     l12100:
 16547                           
 16548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16549                           ;stkvar	_mode @ sp[(-56)+54]
 16550  010594  0EFE               	movlw	-2
 16551  010596  006F FF8C  F001    	movff	plusw1,btemp
 16552  01059C  0E67               	movlw	103
 16553  01059E  1801               	xorwf	btemp^0,w,c
 16554  0105A0  A4D8               	btfss	status,2,c
 16555  0105A2  D02F               	goto	l12110
 16556                           
 16557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16558                           ;stkvar	_e @ sp[(-56)+34]
 16559  0105A4  0EEB               	movlw	-21
 16560  0105A6  AEE3               	btfss	plusw1,7,c
 16561  0105A8  D00E               	goto	u11250
 16562  0105AA  0EEA               	movlw	-22
 16563  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16564  0105B2  0EFC               	movlw	252
 16565  0105B4  5E01               	subwf	btemp^0,f,c
 16566  0105B6  0EEB               	movlw	-21
 16567  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16568  0105BE  0EFF               	movlw	255
 16569  0105C0  5A01               	subwfb	btemp^0,f,c
 16570  0105C2  A0D8               	btfss	status,0,c
 16571  0105C4  D018               	goto	l12108
 16572  0105C6                     u11250:
 16573                           
 16574                           ;stkvar	_e @ sp[(-56)+34]
 16575                           ;stkvar	_p @ sp[(-56)+40]
 16576  0105C6  0EF0               	movlw	-16
 16577  0105C8  50E3               	movf	plusw1,w,c
 16578  0105CA  0FFF               	addlw	255
 16579  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16580  0105CE  0EF1               	movlw	-15
 16581  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16582  0105D6  0EFF               	movlw	255
 16583  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16584  0105DA  0EEA               	movlw	-22
 16585  0105DC  50E3               	movf	plusw1,w,c
 16586  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16587  0105E0  500C               	movf	(btemp+11)^0,w,c
 16588  0105E2  0A80               	xorlw	128
 16589  0105E4  6E01               	movwf	btemp^0,c
 16590  0105E6  0EEB               	movlw	-21
 16591  0105E8  50E3               	movf	plusw1,w,c
 16592  0105EA  0A80               	xorlw	128
 16593  0105EC  5801               	subwfb	btemp^0,w,c
 16594  0105EE  A0D8               	btfss	status,0,c
 16595  0105F0  D002               	goto	l12108
 16596                           
 16597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16598  0105F2  0E66               	movlw	102
 16599  0105F4  D001               	goto	L17
 16600  0105F6                     l12108:
 16601                           
 16602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16603  0105F6  0E65               	movlw	101
 16604  0105F8                     L17:
 16605  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16606                           
 16607                           ;stkvar	_nmode @ sp[(-56)+55]
 16608  0105FA  0EFF               	movlw	-1
 16609  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16610  010602                     l12110:
 16611                           
 16612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16613                           ;stkvar	_p @ sp[(-56)+40]
 16614                           ;stkvar	_m @ sp[(-56)+48]
 16615  010602  0EF0               	movlw	-16
 16616  010604  006F FF8C  F001    	movff	plusw1,btemp
 16617  01060A  0EF8               	movlw	-8
 16618  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16619  010612  0EF1               	movlw	-15
 16620  010614  006F FF8C  F001    	movff	plusw1,btemp
 16621  01061A  0EF9               	movlw	-7
 16622  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16623                           
 16624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16625                           ;stkvar	_mode @ sp[(-56)+54]
 16626  010622  0EFE               	movlw	-2
 16627  010624  006F FF8C  F001    	movff	plusw1,btemp
 16628  01062A  0E67               	movlw	103
 16629  01062C  1801               	xorwf	btemp^0,w,c
 16630  01062E  A4D8               	btfss	status,2,c
 16631  010630  D00B               	goto	u11290
 16632                           
 16633                           ;stkvar	_nmode @ sp[(-56)+55]
 16634  010632  0EFF               	movlw	-1
 16635  010634  006F FF8C  F001    	movff	plusw1,btemp
 16636  01063A  0E66               	movlw	102
 16637  01063C  1801               	xorwf	btemp^0,w,c
 16638  01063E  A4D8               	btfss	status,2,c
 16639  010640  D014               	goto	l2223
 16640                           
 16641                           ;stkvar	_e @ sp[(-56)+34]
 16642  010642  0EEB               	movlw	-21
 16643  010644  AEE3               	btfss	plusw1,7,c
 16644  010646  D011               	goto	l2223
 16645  010648                     u11290:
 16646                           
 16647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16648                           ;stkvar	_m @ sp[(-56)+48]
 16649  010648  0EF8               	movlw	-8
 16650  01064A  50E3               	movf	plusw1,w,c
 16651  01064C  0F01               	addlw	1
 16652  01064E  6E01               	movwf	btemp^0,c
 16653  010650  0EF8               	movlw	-8
 16654  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16655  010658  6A01               	clrf	btemp^0,c
 16656  01065A  0EF9               	movlw	-7
 16657  01065C  50E3               	movf	plusw1,w,c
 16658  01065E  2001               	addwfc	btemp^0,w,c
 16659  010660  6E01               	movwf	btemp^0,c
 16660  010662  0EF9               	movlw	-7
 16661  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16662  01066A                     l2223:
 16663                           
 16664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16665                           ;stkvar	_nmode @ sp[(-56)+55]
 16666  01066A  0EFF               	movlw	-1
 16667  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16668  010672  0E66               	movlw	102
 16669  010674  1801               	xorwf	btemp^0,w,c
 16670  010676  A4D8               	btfss	status,2,c
 16671  010678  D03B               	goto	l12130
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16674                           ;stkvar	_e @ sp[(-56)+34]
 16675  01067A  0EEB               	movlw	-21
 16676  01067C  AEE3               	btfss	plusw1,7,c
 16677  01067E  D01C               	goto	l12126
 16678                           
 16679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16680  010680  0E00               	movlw	0
 16681  010682  6E09               	movwf	(btemp+8)^0,c
 16682  010684  0E00               	movlw	0
 16683  010686  6E0A               	movwf	(btemp+9)^0,c
 16684  010688  0E80               	movlw	128
 16685  01068A  6E0B               	movwf	(btemp+10)^0,c
 16686  01068C  0E3F               	movlw	63
 16687  01068E  6E0C               	movwf	(btemp+11)^0,c
 16688                           
 16689                           ;stkvar	_u @ sp[(-56)+12]
 16690  010690  0ED4               	movlw	-44
 16691  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16692  010698  0ED5               	movlw	-43
 16693  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16694  0106A0  0ED6               	movlw	-42
 16695  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16696  0106A8  0ED7               	movlw	-41
 16697  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16698                           
 16699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16700                           ;stkvar	_e @ sp[(-56)+34]
 16701  0106B0  0EEA               	movlw	-22
 16702  0106B2  6AE3               	clrf	plusw1,c
 16703  0106B4  0EEB               	movlw	-21
 16704  0106B6  6AE3               	clrf	plusw1,c
 16705  0106B8                     l12126:
 16706                           
 16707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16708                           ;stkvar	_mode @ sp[(-56)+54]
 16709  0106B8  0EFE               	movlw	-2
 16710  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16711  0106C0  0E67               	movlw	103
 16712  0106C2  1801               	xorwf	btemp^0,w,c
 16713  0106C4  B4D8               	btfsc	status,2,c
 16714  0106C6  D014               	goto	l12130
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16717                           ;stkvar	_e @ sp[(-56)+34]
 16718                           ;stkvar	_m @ sp[(-56)+48]
 16719  0106C8  0EF8               	movlw	-8
 16720  0106CA  50E3               	movf	plusw1,w,c
 16721  0106CC  6E01               	movwf	btemp^0,c
 16722  0106CE  0EEA               	movlw	-22
 16723  0106D0  50E3               	movf	plusw1,w,c
 16724  0106D2  2601               	addwf	btemp^0,f,c
 16725  0106D4  0EF8               	movlw	-8
 16726  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16727  0106DC  0EF9               	movlw	-7
 16728  0106DE  50E3               	movf	plusw1,w,c
 16729  0106E0  6E01               	movwf	btemp^0,c
 16730  0106E2  0EEB               	movlw	-21
 16731  0106E4  50E3               	movf	plusw1,w,c
 16732  0106E6  2201               	addwfc	btemp^0,f,c
 16733  0106E8  0EF9               	movlw	-7
 16734  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16735  0106F0                     l12130:
 16736                           
 16737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16738                           ;stkvar	_i @ sp[(-56)+36]
 16739  0106F0  0EEC               	movlw	-20
 16740  0106F2  6AE3               	clrf	plusw1,c
 16741  0106F4  0EED               	movlw	-19
 16742  0106F6  6AE3               	clrf	plusw1,c
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16745                           ;stkvar	_g @ sp[(-56)+16]
 16746  0106F8  0ED8               	movlw	-40
 16747  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16748  010700  0ED9               	movlw	-39
 16749  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16750  010708  0EDA               	movlw	-38
 16751  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16752  010710  0EDB               	movlw	-37
 16753  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16754                           
 16755                           ;stkvar	_h @ sp[(-56)+24]
 16756  010718  0EE0               	movlw	-32
 16757  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16758  010720  0EE1               	movlw	-31
 16759  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16760  010728  0EE2               	movlw	-30
 16761  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16762  010730  0EE3               	movlw	-29
 16763  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16764                           
 16765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16766                           ;stkvar	_u @ sp[(-56)+12]
 16767  010738  0ED4               	movlw	-44
 16768  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16769  010740  0ED5               	movlw	-43
 16770  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16771  010748  0ED6               	movlw	-42
 16772  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16773  010750  0ED7               	movlw	-41
 16774  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16775                           
 16776                           ;stkvar	_ou @ sp[(-56)+28]
 16777  010758  0EE4               	movlw	-28
 16778  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16779  010760  0EE5               	movlw	-27
 16780  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16781  010768  0EE6               	movlw	-26
 16782  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16783  010770  0EE7               	movlw	-25
 16784  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16785                           
 16786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16787  010778  D0D6               	goto	l12146
 16788  01077A                     l12136:
 16789                           
 16790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16791                           ;stkvar	_u @ sp[(-56)+12]
 16792  01077A  0ED4               	movlw	-44
 16793  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16795  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16796  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16797                           
 16798                           ;stkvar	_h @ sp[(-60)+24]
 16799  010794  0EDC               	movlw	-36
 16800  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16801  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16802  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16803  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16804  0107AE  ECB4  F0A6         	call	___fldiv	;wreg free
 16805  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16806  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16807  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16808  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16809  0107CA  EC3E  F0B2         	call	_floorf	;wreg free
 16810                           
 16811                           ;stkvar	_l @ sp[(-56)+20]
 16812  0107CE  0EDC               	movlw	-36
 16813  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16814  0107D6  0EDD               	movlw	-35
 16815  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16816  0107DE  0EDE               	movlw	-34
 16817  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16818  0107E6  0EDF               	movlw	-33
 16819  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16820                           
 16821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16822                           ;stkvar	_l @ sp[(-56)+20]
 16823  0107EE  0EDC               	movlw	-36
 16824  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16825  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16826  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16827  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16828  010808  EC3B  F0C7         	call	___fltol	;wreg free
 16829  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16830  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16831                           
 16832                           ;stkvar	_d @ sp[(-56)+44]
 16833  010818  0EF4               	movlw	-12
 16834  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16835  010820  0EF5               	movlw	-11
 16836  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16837                           
 16838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16839                           ;stkvar	_u @ sp[(-56)+12]
 16840  010828  0ED4               	movlw	-44
 16841  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16842  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16843  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16844  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16845                           
 16846                           ;stkvar	_l @ sp[(-60)+20]
 16847  010842  0ED8               	movlw	-40
 16848  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16849  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16850  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16851  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16852  01085C  ECC1  F09E         	call	___flmul	;wreg free
 16853  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16854  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16855  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16856  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16857                           
 16858                           ;stkvar	_h @ sp[(-60)+24]
 16859  010878  0EDC               	movlw	-36
 16860  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16861  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16862  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16863  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16864  010892  ECBF  F0DA         	call	___flsub	;wreg free
 16865                           
 16866                           ;stkvar	_h @ sp[(-56)+24]
 16867  010896  0EE0               	movlw	-32
 16868  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16869  01089E  0EE1               	movlw	-31
 16870  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16871  0108A6  0EE2               	movlw	-30
 16872  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16873  0108AE  0EE3               	movlw	-29
 16874  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16875                           
 16876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16877  0108B6  0E00               	movlw	0
 16878  0108B8  6EE6               	movwf	postinc1,c
 16879  0108BA  0E00               	movlw	0
 16880  0108BC  6EE6               	movwf	postinc1,c
 16881  0108BE  0E20               	movlw	32
 16882  0108C0  6EE6               	movwf	postinc1,c
 16883  0108C2  0E41               	movlw	65
 16884  0108C4  6EE6               	movwf	postinc1,c
 16885                           
 16886                           ;stkvar	_u @ sp[(-60)+12]
 16887  0108C6  0ED0               	movlw	-48
 16888  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16889  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16890  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16891  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16892  0108E0  ECB4  F0A6         	call	___fldiv	;wreg free
 16893                           
 16894                           ;stkvar	_u @ sp[(-56)+12]
 16895  0108E4  0ED4               	movlw	-44
 16896  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16897  0108EC  0ED5               	movlw	-43
 16898  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16899  0108F4  0ED6               	movlw	-42
 16900  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16901  0108FC  0ED7               	movlw	-41
 16902  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16903                           
 16904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16905                           ;stkvar	_i @ sp[(-56)+36]
 16906  010904  0EEC               	movlw	-20
 16907  010906  50E3               	movf	plusw1,w,c
 16908  010908  0F01               	addlw	1
 16909  01090A  6E01               	movwf	btemp^0,c
 16910  01090C  0EEC               	movlw	-20
 16911  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16912  010914  6A01               	clrf	btemp^0,c
 16913  010916  0EED               	movlw	-19
 16914  010918  50E3               	movf	plusw1,w,c
 16915  01091A  2001               	addwfc	btemp^0,w,c
 16916  01091C  6E01               	movwf	btemp^0,c
 16917  01091E  0EED               	movlw	-19
 16918  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16919  010926                     l12146:
 16920                           
 16921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16922                           ;stkvar	_m @ sp[(-56)+48]
 16923                           ;stkvar	_i @ sp[(-56)+36]
 16924  010926  50E1               	movf	fsr1l,w,c
 16925  010928  0FEC               	addlw	-20
 16926  01092A  6ED9               	movwf	fsr2l,c
 16927  01092C  50E2               	movf	fsr1h,w,c
 16928  01092E  6EDA               	movwf	fsr2h,c
 16929  010930  0EFF               	movlw	255
 16930  010932  22DA               	addwfc	fsr2h,f,c
 16931  010934  0EF8               	movlw	-8
 16932  010936  50E3               	movf	plusw1,w,c
 16933  010938  5CDE               	subwf	postinc2,w,c
 16934  01093A  50DE               	movf	postinc2,w,c
 16935  01093C  0A80               	xorlw	128
 16936  01093E  6E01               	movwf	btemp^0,c
 16937  010940  0EF9               	movlw	-7
 16938  010942  50E3               	movf	plusw1,w,c
 16939  010944  0A80               	xorlw	128
 16940  010946  5801               	subwfb	btemp^0,w,c
 16941  010948  A0D8               	btfss	status,0,c
 16942  01094A  D717               	goto	l12136
 16943                           
 16944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16945  01094C  0E00               	movlw	0
 16946  01094E  6EE6               	movwf	postinc1,c
 16947  010950  0E00               	movlw	0
 16948  010952  6EE6               	movwf	postinc1,c
 16949  010954  0EA0               	movlw	160
 16950  010956  6EE6               	movwf	postinc1,c
 16951  010958  0E40               	movlw	64
 16952  01095A  6EE6               	movwf	postinc1,c
 16953                           
 16954                           ;stkvar	_u @ sp[(-60)+12]
 16955  01095C  0ED0               	movlw	-48
 16956  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16957  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16958  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16959  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16960  010976  ECC1  F09E         	call	___flmul	;wreg free
 16961                           
 16962                           ;stkvar	_l @ sp[(-56)+20]
 16963  01097A  0EDC               	movlw	-36
 16964  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16965  010982  0EDD               	movlw	-35
 16966  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16967  01098A  0EDE               	movlw	-34
 16968  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16969  010992  0EDF               	movlw	-33
 16970  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16971                           
 16972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16973                           ;stkvar	_l @ sp[(-56)+20]
 16974  01099A  0EDC               	movlw	-36
 16975  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16976  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16977  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16978  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16979                           
 16980                           ;stkvar	_h @ sp[(-60)+24]
 16981  0109B4  0EDC               	movlw	-36
 16982  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16983  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16984  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16985  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16986  0109CE  ECF4  F0C7         	call	___flge	;wreg free
 16987  0109D2  A001               	btfss	btemp& (0+255),0,c
 16988  0109D4  D021               	goto	u11360
 16989                           
 16990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16991                           ;stkvar	_l @ sp[(-56)+20]
 16992                           
 16993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16994                           
 16995                           ;stkvar	_l @ sp[(-56)+20]
 16996                           
 16997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16998  0109D6  0EDC               	movlw	-36
 16999  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17000  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17001  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17002  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17003                           
 17004                           ;stkvar	_h @ sp[(-60)+24]
 17005  0109F0  0EDC               	movlw	-36
 17006  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17007  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17008  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17009  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17010  010A0A  ECAB  F0D1         	call	___fleq	;wreg free
 17011  010A0E  A001               	btfss	btemp& (0+255),0,c
 17012  010A10  D01B               	goto	l12160
 17013                           
 17014                           ;stkvar	_d @ sp[(-56)+44]
 17015  010A12  0EF4               	movlw	-12
 17016  010A14  B0E3               	btfsc	plusw1,0,c
 17017  010A16  D018               	goto	l12160
 17018  010A18                     u11360:
 17019                           
 17020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17021  010A18  0E00               	movlw	0
 17022  010A1A  6E09               	movwf	(btemp+8)^0,c
 17023  010A1C  0E00               	movlw	0
 17024  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17025  010A20  0E00               	movlw	0
 17026  010A22  6E0B               	movwf	(btemp+10)^0,c
 17027  010A24  0E00               	movlw	0
 17028  010A26  6E0C               	movwf	(btemp+11)^0,c
 17029                           
 17030                           ;stkvar	_l @ sp[(-56)+20]
 17031  010A28  0EDC               	movlw	-36
 17032  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17033  010A30  0EDD               	movlw	-35
 17034  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17035  010A38  0EDE               	movlw	-34
 17036  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17037  010A40  0EDF               	movlw	-33
 17038  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17039  010A48                     l12160:
 17040                           
 17041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17042                           ;stkvar	_l @ sp[(-56)+20]
 17043  010A48  0EDC               	movlw	-36
 17044  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17045  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17046  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17047  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17048                           
 17049                           ;stkvar	_g @ sp[(-60)+16]
 17050  010A62  0ED4               	movlw	-44
 17051  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17053  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17054  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17055  010A7C  ECD6  F0A2         	call	___fladd	;wreg free
 17056                           
 17057                           ;stkvar	_h @ sp[(-56)+24]
 17058  010A80  0EE0               	movlw	-32
 17059  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17060  010A88  0EE1               	movlw	-31
 17061  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17062  010A90  0EE2               	movlw	-30
 17063  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17064  010A98  0EE3               	movlw	-29
 17065  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17068                           ;stkvar	_ou @ sp[(-56)+28]
 17069  010AA0  0EE4               	movlw	-28
 17070  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17071  010AA8  0EE5               	movlw	-27
 17072  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17073  010AB0  0EE6               	movlw	-26
 17074  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17075  010AB8  0EE7               	movlw	-25
 17076  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17077                           
 17078                           ;stkvar	_u @ sp[(-56)+12]
 17079  010AC0  0ED4               	movlw	-44
 17080  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17081  010AC8  0ED5               	movlw	-43
 17082  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17083  010AD0  0ED6               	movlw	-42
 17084  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17085  010AD8  0ED7               	movlw	-41
 17086  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17087                           
 17088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17089                           ;stkvar	_nmode @ sp[(-56)+55]
 17090  010AE0  0EFF               	movlw	-1
 17091  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17092  010AE8  0E65               	movlw	101
 17093  010AEA  1801               	xorwf	btemp^0,w,c
 17094  010AEC  B4D8               	btfsc	status,2,c
 17095  010AEE  D011               	goto	l12168
 17096                           
 17097                           ;stkvar	_e @ sp[(-56)+34]
 17098                           ;stkvar	_ne @ sp[(-56)+46]
 17099  010AF0  0EEA               	movlw	-22
 17100  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17101  010AF8  0EF6               	movlw	-10
 17102  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17103  010B00  0EEB               	movlw	-21
 17104  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17105  010B08  0EF7               	movlw	-9
 17106  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17107  010B10  D004               	goto	l2238
 17108  010B12                     l12168:
 17109                           
 17110                           ;stkvar	_ne @ sp[(-56)+46]
 17111  010B12  0EF6               	movlw	-10
 17112  010B14  6AE3               	clrf	plusw1,c
 17113  010B16  0EF7               	movlw	-9
 17114  010B18  6AE3               	clrf	plusw1,c
 17115  010B1A                     l2238:
 17116                           
 17117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17118                           ;stkvar	_pp @ sp[(-56)+50]
 17119  010B1A  0EFA               	movlw	-6
 17120  010B1C  6AE3               	clrf	plusw1,c
 17121  010B1E  0EFB               	movlw	-5
 17122  010B20  6AE3               	clrf	plusw1,c
 17123                           
 17124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17125                           ;stkvar	_t @ sp[(-56)+52]
 17126  010B22  0EFC               	movlw	-4
 17127  010B24  6AE3               	clrf	plusw1,c
 17128  010B26  0EFD               	movlw	-3
 17129  010B28  6AE3               	clrf	plusw1,c
 17130                           
 17131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17132                           ;stkvar	_i @ sp[(-56)+36]
 17133  010B2A  0EEC               	movlw	-20
 17134  010B2C  6AE3               	clrf	plusw1,c
 17135  010B2E  0EED               	movlw	-19
 17136  010B30  6AE3               	clrf	plusw1,c
 17137                           
 17138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17139  010B32  D1B7               	goto	l12220
 17140  010B34                     l12170:
 17141                           
 17142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17143                           ;stkvar	_u @ sp[(-56)+12]
 17144  010B34  0ED4               	movlw	-44
 17145  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17146  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17147  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17148  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17149                           
 17150                           ;stkvar	_h @ sp[(-60)+24]
 17151  010B4E  0EDC               	movlw	-36
 17152  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17153  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17154  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17155  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17156  010B68  ECB4  F0A6         	call	___fldiv	;wreg free
 17157  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17158  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17159  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17160  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17161  010B84  EC3E  F0B2         	call	_floorf	;wreg free
 17162                           
 17163                           ;stkvar	_l @ sp[(-56)+20]
 17164  010B88  0EDC               	movlw	-36
 17165  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17166  010B90  0EDD               	movlw	-35
 17167  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17168  010B98  0EDE               	movlw	-34
 17169  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17170  010BA0  0EDF               	movlw	-33
 17171  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17174                           ;stkvar	_l @ sp[(-56)+20]
 17175  010BA8  0EDC               	movlw	-36
 17176  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17177  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17178  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17179  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17180  010BC2  EC3B  F0C7         	call	___fltol	;wreg free
 17181  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17182  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17183                           
 17184                           ;stkvar	_d @ sp[(-56)+44]
 17185  010BD2  0EF4               	movlw	-12
 17186  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17187  010BDA  0EF5               	movlw	-11
 17188  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17189                           
 17190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17191  010BE2  B83E               	btfsc	_flags^0,4,c
 17192  010BE4  D026               	goto	l12184
 17193                           
 17194                           ;stkvar	_d @ sp[(-56)+44]
 17195  010BE6  0EF4               	movlw	-12
 17196  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17197  010BEE  0EF5               	movlw	-11
 17198  010BF0  50E3               	movf	plusw1,w,c
 17199  010BF2  1001               	iorwf	btemp^0,w,c
 17200  010BF4  A4D8               	btfss	status,2,c
 17201  010BF6  D01D               	goto	l12184
 17202                           
 17203                           ;stkvar	_mode @ sp[(-56)+54]
 17204  010BF8  0EFE               	movlw	-2
 17205  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17206  010C00  0E67               	movlw	103
 17207  010C02  1801               	xorwf	btemp^0,w,c
 17208  010C04  A4D8               	btfss	status,2,c
 17209  010C06  D015               	goto	l12184
 17210                           
 17211                           ;stkvar	_ne @ sp[(-56)+46]
 17212  010C08  0EF7               	movlw	-9
 17213  010C0A  AEE3               	btfss	plusw1,7,c
 17214  010C0C  D012               	goto	l12184
 17215                           
 17216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17217                           ;stkvar	_t @ sp[(-56)+52]
 17218  010C0E  0EFC               	movlw	-4
 17219  010C10  50E3               	movf	plusw1,w,c
 17220  010C12  0F01               	addlw	1
 17221  010C14  6E01               	movwf	btemp^0,c
 17222  010C16  0EFC               	movlw	-4
 17223  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17224  010C1E  6A01               	clrf	btemp^0,c
 17225  010C20  0EFD               	movlw	-3
 17226  010C22  50E3               	movf	plusw1,w,c
 17227  010C24  2001               	addwfc	btemp^0,w,c
 17228  010C26  6E01               	movwf	btemp^0,c
 17229  010C28  0EFD               	movlw	-3
 17230  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17231                           
 17232                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17233  010C30  D0AF               	goto	l12212
 17234  010C32                     l12184:
 17235                           
 17236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17237                           ;stkvar	_pp @ sp[(-56)+50]
 17238  010C32  0EFA               	movlw	-6
 17239  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17240  010C3A  0EFB               	movlw	-5
 17241  010C3C  50E3               	movf	plusw1,w,c
 17242  010C3E  1001               	iorwf	btemp^0,w,c
 17243  010C40  A4D8               	btfss	status,2,c
 17244  010C42  D070               	goto	l12204
 17245                           
 17246                           ;stkvar	_ne @ sp[(-56)+46]
 17247  010C44  0EF7               	movlw	-9
 17248  010C46  AEE3               	btfss	plusw1,7,c
 17249  010C48  D06D               	goto	l12204
 17250                           
 17251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17252                           ;stkvar	_n @ sp[(-56)+32]
 17253  010C4A  0EE8               	movlw	-24
 17254  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17255  010C52  0EE9               	movlw	-23
 17256  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17257  010C5A  0E97               	movlw	low _dbuf
 17258  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17259  010C5E  6ED9               	movwf	fsr2l,c
 17260  010C60  0E02               	movlw	high _dbuf
 17261  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17262  010C64  6EDA               	movwf	fsr2h,c
 17263  010C66  0E2E               	movlw	46
 17264  010C68  6EDF               	movwf	indf2,c
 17265                           
 17266                           ;stkvar	_n @ sp[(-56)+32]
 17267  010C6A  0EE8               	movlw	-24
 17268  010C6C  50E3               	movf	plusw1,w,c
 17269  010C6E  0F01               	addlw	1
 17270  010C70  6E01               	movwf	btemp^0,c
 17271  010C72  0EE8               	movlw	-24
 17272  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17273  010C7A  6A01               	clrf	btemp^0,c
 17274  010C7C  0EE9               	movlw	-23
 17275  010C7E  50E3               	movf	plusw1,w,c
 17276  010C80  2001               	addwfc	btemp^0,w,c
 17277  010C82  6E01               	movwf	btemp^0,c
 17278  010C84  0EE9               	movlw	-23
 17279  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17280                           
 17281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17282                           ;stkvar	_w @ sp[(-56)+38]
 17283  010C8C  50E1               	movf	fsr1l,w,c
 17284  010C8E  0FEE               	addlw	-18
 17285  010C90  6ED9               	movwf	fsr2l,c
 17286  010C92  50E2               	movf	fsr1h,w,c
 17287  010C94  6EDA               	movwf	fsr2h,c
 17288  010C96  0EFF               	movlw	255
 17289  010C98  22DA               	addwfc	fsr2h,f,c
 17290  010C9A  06DE               	decf	postinc2,f,c
 17291  010C9C  0E00               	movlw	0
 17292  010C9E  5ADD               	subwfb	postdec2,f,c
 17293                           
 17294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17295  010CA0  0E01               	movlw	1
 17296  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17297  010CA4  0E00               	movlw	0
 17298  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17299                           
 17300                           ;stkvar	_pp @ sp[(-56)+50]
 17301  010CA8  0EFA               	movlw	-6
 17302  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17303  010CB0  0EFB               	movlw	-5
 17304  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17305  010CB8  D035               	goto	l12204
 17306  010CBA                     l12196:
 17307                           
 17308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17309                           ;stkvar	_n @ sp[(-56)+32]
 17310  010CBA  0EE8               	movlw	-24
 17311  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17312  010CC2  0EE9               	movlw	-23
 17313  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17314  010CCA  0E97               	movlw	low _dbuf
 17315  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17316  010CCE  6ED9               	movwf	fsr2l,c
 17317  010CD0  0E02               	movlw	high _dbuf
 17318  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17319  010CD4  6EDA               	movwf	fsr2h,c
 17320  010CD6  0E30               	movlw	48
 17321  010CD8  6EDF               	movwf	indf2,c
 17322                           
 17323                           ;stkvar	_n @ sp[(-56)+32]
 17324  010CDA  0EE8               	movlw	-24
 17325  010CDC  50E3               	movf	plusw1,w,c
 17326  010CDE  0F01               	addlw	1
 17327  010CE0  6E01               	movwf	btemp^0,c
 17328  010CE2  0EE8               	movlw	-24
 17329  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17330  010CEA  6A01               	clrf	btemp^0,c
 17331  010CEC  0EE9               	movlw	-23
 17332  010CEE  50E3               	movf	plusw1,w,c
 17333  010CF0  2001               	addwfc	btemp^0,w,c
 17334  010CF2  6E01               	movwf	btemp^0,c
 17335  010CF4  0EE9               	movlw	-23
 17336  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17337                           
 17338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17339                           ;stkvar	_w @ sp[(-56)+38]
 17340  010CFC  50E1               	movf	fsr1l,w,c
 17341  010CFE  0FEE               	addlw	-18
 17342  010D00  6ED9               	movwf	fsr2l,c
 17343  010D02  50E2               	movf	fsr1h,w,c
 17344  010D04  6EDA               	movwf	fsr2h,c
 17345  010D06  0EFF               	movlw	255
 17346  010D08  22DA               	addwfc	fsr2h,f,c
 17347  010D0A  06DE               	decf	postinc2,f,c
 17348  010D0C  0E00               	movlw	0
 17349  010D0E  5ADD               	subwfb	postdec2,f,c
 17350                           
 17351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17352                           ;stkvar	_t @ sp[(-56)+52]
 17353  010D10  50E1               	movf	fsr1l,w,c
 17354  010D12  0FFC               	addlw	-4
 17355  010D14  6ED9               	movwf	fsr2l,c
 17356  010D16  50E2               	movf	fsr1h,w,c
 17357  010D18  6EDA               	movwf	fsr2h,c
 17358  010D1A  0EFF               	movlw	255
 17359  010D1C  22DA               	addwfc	fsr2h,f,c
 17360  010D1E  06DE               	decf	postinc2,f,c
 17361  010D20  0E00               	movlw	0
 17362  010D22  5ADD               	subwfb	postdec2,f,c
 17363  010D24                     l12204:
 17364                           
 17365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17366                           ;stkvar	_t @ sp[(-56)+52]
 17367  010D24  0EFC               	movlw	-4
 17368  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17369  010D2C  0EFD               	movlw	-3
 17370  010D2E  50E3               	movf	plusw1,w,c
 17371  010D30  1001               	iorwf	btemp^0,w,c
 17372  010D32  A4D8               	btfss	status,2,c
 17373  010D34  D7C2               	goto	l12196
 17374                           
 17375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17376                           ;stkvar	_n @ sp[(-56)+32]
 17377  010D36  0EE8               	movlw	-24
 17378  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17379  010D3E  0EE9               	movlw	-23
 17380  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17381  010D46  0E97               	movlw	low _dbuf
 17382  010D48  240B               	addwf	(btemp+10)^0,w,c
 17383  010D4A  6ED9               	movwf	fsr2l,c
 17384  010D4C  0E02               	movlw	high _dbuf
 17385  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17386  010D50  6EDA               	movwf	fsr2h,c
 17387                           
 17388                           ;stkvar	_d @ sp[(-56)+44]
 17389  010D52  0EF4               	movlw	-12
 17390  010D54  50E3               	movf	plusw1,w,c
 17391  010D56  0F30               	addlw	48
 17392  010D58  6EDF               	movwf	indf2,c
 17393                           
 17394                           ;stkvar	_n @ sp[(-56)+32]
 17395  010D5A  0EE8               	movlw	-24
 17396  010D5C  50E3               	movf	plusw1,w,c
 17397  010D5E  0F01               	addlw	1
 17398  010D60  6E01               	movwf	btemp^0,c
 17399  010D62  0EE8               	movlw	-24
 17400  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17401  010D6A  6A01               	clrf	btemp^0,c
 17402  010D6C  0EE9               	movlw	-23
 17403  010D6E  50E3               	movf	plusw1,w,c
 17404  010D70  2001               	addwfc	btemp^0,w,c
 17405  010D72  6E01               	movwf	btemp^0,c
 17406  010D74  0EE9               	movlw	-23
 17407  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17408                           
 17409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17410                           ;stkvar	_w @ sp[(-56)+38]
 17411  010D7C  50E1               	movf	fsr1l,w,c
 17412  010D7E  0FEE               	addlw	-18
 17413  010D80  6ED9               	movwf	fsr2l,c
 17414  010D82  50E2               	movf	fsr1h,w,c
 17415  010D84  6EDA               	movwf	fsr2h,c
 17416  010D86  0EFF               	movlw	255
 17417  010D88  22DA               	addwfc	fsr2h,f,c
 17418  010D8A  06DE               	decf	postinc2,f,c
 17419  010D8C  0E00               	movlw	0
 17420  010D8E  5ADD               	subwfb	postdec2,f,c
 17421  010D90                     l12212:
 17422                           
 17423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17424                           ;stkvar	_u @ sp[(-56)+12]
 17425  010D90  0ED4               	movlw	-44
 17426  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17427  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17428  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17429  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17430                           
 17431                           ;stkvar	_l @ sp[(-60)+20]
 17432  010DAA  0ED8               	movlw	-40
 17433  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17434  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17435  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17436  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17437  010DC4  ECC1  F09E         	call	___flmul	;wreg free
 17438  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17439  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17440  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17441  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17442                           
 17443                           ;stkvar	_h @ sp[(-60)+24]
 17444  010DE0  0EDC               	movlw	-36
 17445  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17446  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17447  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17448  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17449  010DFA  ECBF  F0DA         	call	___flsub	;wreg free
 17450                           
 17451                           ;stkvar	_h @ sp[(-56)+24]
 17452  010DFE  0EE0               	movlw	-32
 17453  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17454  010E06  0EE1               	movlw	-31
 17455  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17456  010E0E  0EE2               	movlw	-30
 17457  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17458  010E16  0EE3               	movlw	-29
 17459  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17460                           
 17461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17462  010E1E  0E00               	movlw	0
 17463  010E20  6EE6               	movwf	postinc1,c
 17464  010E22  0E00               	movlw	0
 17465  010E24  6EE6               	movwf	postinc1,c
 17466  010E26  0E20               	movlw	32
 17467  010E28  6EE6               	movwf	postinc1,c
 17468  010E2A  0E41               	movlw	65
 17469  010E2C  6EE6               	movwf	postinc1,c
 17470                           
 17471                           ;stkvar	_u @ sp[(-60)+12]
 17472  010E2E  0ED0               	movlw	-48
 17473  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17474  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17475  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17476  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17477  010E48  ECB4  F0A6         	call	___fldiv	;wreg free
 17478                           
 17479                           ;stkvar	_u @ sp[(-56)+12]
 17480  010E4C  0ED4               	movlw	-44
 17481  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17482  010E54  0ED5               	movlw	-43
 17483  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17484  010E5C  0ED6               	movlw	-42
 17485  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17486  010E64  0ED7               	movlw	-41
 17487  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17488                           
 17489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17490                           ;stkvar	_ne @ sp[(-56)+46]
 17491  010E6C  50E1               	movf	fsr1l,w,c
 17492  010E6E  0FF6               	addlw	-10
 17493  010E70  6ED9               	movwf	fsr2l,c
 17494  010E72  50E2               	movf	fsr1h,w,c
 17495  010E74  6EDA               	movwf	fsr2h,c
 17496  010E76  0EFF               	movlw	255
 17497  010E78  22DA               	addwfc	fsr2h,f,c
 17498  010E7A  06DE               	decf	postinc2,f,c
 17499  010E7C  0E00               	movlw	0
 17500  010E7E  5ADD               	subwfb	postdec2,f,c
 17501                           
 17502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17503                           ;stkvar	_i @ sp[(-56)+36]
 17504  010E80  0EEC               	movlw	-20
 17505  010E82  50E3               	movf	plusw1,w,c
 17506  010E84  0F01               	addlw	1
 17507  010E86  6E01               	movwf	btemp^0,c
 17508  010E88  0EEC               	movlw	-20
 17509  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17510  010E90  6A01               	clrf	btemp^0,c
 17511  010E92  0EED               	movlw	-19
 17512  010E94  50E3               	movf	plusw1,w,c
 17513  010E96  2001               	addwfc	btemp^0,w,c
 17514  010E98  6E01               	movwf	btemp^0,c
 17515  010E9A  0EED               	movlw	-19
 17516  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17517  010EA2                     l12220:
 17518                           
 17519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17520                           ;stkvar	_m @ sp[(-56)+48]
 17521                           ;stkvar	_i @ sp[(-56)+36]
 17522  010EA2  50E1               	movf	fsr1l,w,c
 17523  010EA4  0FEC               	addlw	-20
 17524  010EA6  6ED9               	movwf	fsr2l,c
 17525  010EA8  50E2               	movf	fsr1h,w,c
 17526  010EAA  6EDA               	movwf	fsr2h,c
 17527  010EAC  0EFF               	movlw	255
 17528  010EAE  22DA               	addwfc	fsr2h,f,c
 17529  010EB0  0EF8               	movlw	-8
 17530  010EB2  50E3               	movf	plusw1,w,c
 17531  010EB4  5CDE               	subwf	postinc2,w,c
 17532  010EB6  50DE               	movf	postinc2,w,c
 17533  010EB8  0A80               	xorlw	128
 17534  010EBA  6E01               	movwf	btemp^0,c
 17535  010EBC  0EF9               	movlw	-7
 17536  010EBE  50E3               	movf	plusw1,w,c
 17537  010EC0  0A80               	xorlw	128
 17538  010EC2  5801               	subwfb	btemp^0,w,c
 17539  010EC4  B0D8               	btfsc	status,0,c
 17540  010EC6  D00E               	goto	u11460
 17541                           
 17542                           ;stkvar	_n @ sp[(-56)+32]
 17543  010EC8  0EE9               	movlw	-23
 17544  010ECA  BEE3               	btfsc	plusw1,7,c
 17545  010ECC  D633               	goto	l12170
 17546  010ECE  0EE9               	movlw	-23
 17547  010ED0  50E3               	movf	plusw1,w,c
 17548  010ED2  E108               	bnz	u11460
 17549  010ED4  0EE8               	movlw	-24
 17550  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17551  010EDC  0E4B               	movlw	75
 17552  010EDE  5E01               	subwf	btemp^0,f,c
 17553  010EE0  A0D8               	btfss	status,0,c
 17554  010EE2  D628               	goto	l12170
 17555  010EE4                     u11460:
 17556                           
 17557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17558                           ;stkvar	_pp @ sp[(-56)+50]
 17559  010EE4  0EFA               	movlw	-6
 17560  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17561  010EEC  0EFB               	movlw	-5
 17562  010EEE  50E3               	movf	plusw1,w,c
 17563  010EF0  1001               	iorwf	btemp^0,w,c
 17564  010EF2  B4D8               	btfsc	status,2,c
 17565  010EF4  A83E               	btfss	_flags^0,4,c
 17566  010EF6  D021               	goto	l12232
 17567                           
 17568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17569                           ;stkvar	_n @ sp[(-56)+32]
 17570  010EF8  0EE8               	movlw	-24
 17571  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17572  010F00  0EE9               	movlw	-23
 17573  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17574  010F08  0E97               	movlw	low _dbuf
 17575  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17576  010F0C  6ED9               	movwf	fsr2l,c
 17577  010F0E  0E02               	movlw	high _dbuf
 17578  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17579  010F12  6EDA               	movwf	fsr2h,c
 17580  010F14  0E2E               	movlw	46
 17581  010F16  6EDF               	movwf	indf2,c
 17582                           
 17583                           ;stkvar	_n @ sp[(-56)+32]
 17584  010F18  0EE8               	movlw	-24
 17585  010F1A  50E3               	movf	plusw1,w,c
 17586  010F1C  0F01               	addlw	1
 17587  010F1E  6E01               	movwf	btemp^0,c
 17588  010F20  0EE8               	movlw	-24
 17589  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17590  010F28  6A01               	clrf	btemp^0,c
 17591  010F2A  0EE9               	movlw	-23
 17592  010F2C  50E3               	movf	plusw1,w,c
 17593  010F2E  2001               	addwfc	btemp^0,w,c
 17594  010F30  6E01               	movwf	btemp^0,c
 17595  010F32  0EE9               	movlw	-23
 17596  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17597  010F3A                     l12232:
 17598                           
 17599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17600                           ;stkvar	_n @ sp[(-56)+32]
 17601  010F3A  0EE8               	movlw	-24
 17602  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17603  010F42  0EE9               	movlw	-23
 17604  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17605  010F4A  0E97               	movlw	low _dbuf
 17606  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17607  010F4E  6ED9               	movwf	fsr2l,c
 17608  010F50  0E02               	movlw	high _dbuf
 17609  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17610  010F54  6EDA               	movwf	fsr2h,c
 17611  010F56  0E00               	movlw	0
 17612  010F58  6EDF               	movwf	indf2,c
 17613                           
 17614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17615                           ;stkvar	_nmode @ sp[(-56)+55]
 17616  010F5A  0EFF               	movlw	-1
 17617  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17618  010F62  0E65               	movlw	101
 17619  010F64  1801               	xorwf	btemp^0,w,c
 17620  010F66  A4D8               	btfss	status,2,c
 17621  010F68  EF16  F081         	goto	l12036
 17622                           
 17623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17624  010F6C  0E4F               	movlw	79
 17625  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17626  010F70  0E00               	movlw	0
 17627  010F72  6E0C               	movwf	(btemp+11)^0,c
 17628                           
 17629                           ;stkvar	_i @ sp[(-56)+36]
 17630  010F74  0EEC               	movlw	-20
 17631  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17632  010F7C  0EED               	movlw	-19
 17633  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17634                           
 17635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17636                           ;stkvar	_i @ sp[(-56)+36]
 17637  010F84  0EEC               	movlw	-20
 17638  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17639  010F8C  0EED               	movlw	-19
 17640  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17641  010F94  0E97               	movlw	low _dbuf
 17642  010F96  240B               	addwf	(btemp+10)^0,w,c
 17643  010F98  6ED9               	movwf	fsr2l,c
 17644  010F9A  0E02               	movlw	high _dbuf
 17645  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17646  010F9E  6EDA               	movwf	fsr2h,c
 17647  010FA0  0E00               	movlw	0
 17648  010FA2  6EDF               	movwf	indf2,c
 17649                           
 17650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17651                           ;stkvar	_sign @ sp[(-56)+42]
 17652  010FA4  0EF2               	movlw	-14
 17653  010FA6  6AE3               	clrf	plusw1,c
 17654  010FA8  0EF3               	movlw	-13
 17655  010FAA  6AE3               	clrf	plusw1,c
 17656                           
 17657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17658                           ;stkvar	_e @ sp[(-56)+34]
 17659  010FAC  0EEB               	movlw	-21
 17660  010FAE  AEE3               	btfss	plusw1,7,c
 17661  010FB0  D012               	goto	l12246
 17662                           
 17663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17664  010FB2  0E01               	movlw	1
 17665  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17666  010FB6  0E00               	movlw	0
 17667  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17668                           
 17669                           ;stkvar	_sign @ sp[(-56)+42]
 17670  010FBA  0EF2               	movlw	-14
 17671  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17672  010FC2  0EF3               	movlw	-13
 17673  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17674                           
 17675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17676                           ;stkvar	_e @ sp[(-56)+34]
 17677                           ;stkvar	_e @ sp[(-56)+34]
 17678  010FCA  0EEA               	movlw	-22
 17679  010FCC  6CE3               	negf	plusw1,c
 17680  010FCE  0EEB               	movlw	-21
 17681  010FD0  1EE3               	comf	plusw1,f,c
 17682  010FD2  B0D8               	btfsc	status,0,c
 17683  010FD4  2AE3               	incf	plusw1,f,c
 17684  010FD6                     l12246:
 17685                           
 17686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17687  010FD6  0E02               	movlw	2
 17688  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17689  010FDA  0E00               	movlw	0
 17690  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17691                           
 17692                           ;stkvar	_p @ sp[(-56)+40]
 17693  010FDE  0EF0               	movlw	-16
 17694  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17695  010FE6  0EF1               	movlw	-15
 17696  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17697                           
 17698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17699  010FEE  D051               	goto	l12258
 17700  010FF0                     l12248:
 17701                           
 17702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17703                           ;stkvar	_i @ sp[(-56)+36]
 17704  010FF0  50E1               	movf	fsr1l,w,c
 17705  010FF2  0FEC               	addlw	-20
 17706  010FF4  6ED9               	movwf	fsr2l,c
 17707  010FF6  50E2               	movf	fsr1h,w,c
 17708  010FF8  6EDA               	movwf	fsr2h,c
 17709  010FFA  0EFF               	movlw	255
 17710  010FFC  22DA               	addwfc	fsr2h,f,c
 17711  010FFE  06DE               	decf	postinc2,f,c
 17712  011000  0E00               	movlw	0
 17713  011002  5ADD               	subwfb	postdec2,f,c
 17714                           
 17715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17716                           ;stkvar	_i @ sp[(-56)+36]
 17717  011004  0EEC               	movlw	-20
 17718  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17719  01100C  0EED               	movlw	-19
 17720  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17721  011014  0E97               	movlw	low _dbuf
 17722  011016  240B               	addwf	(btemp+10)^0,w,c
 17723  011018  6ED9               	movwf	fsr2l,c
 17724  01101A  0E02               	movlw	high _dbuf
 17725  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17726  01101E  6EDA               	movwf	fsr2h,c
 17727  011020  0E0A               	movlw	10
 17728  011022  6EE6               	movwf	postinc1,c
 17729  011024  0E00               	movlw	0
 17730  011026  6EE6               	movwf	postinc1,c
 17731                           
 17732                           ;stkvar	_e @ sp[(-58)+34]
 17733  011028  0EE8               	movlw	-24
 17734  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17735  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17736  011036  EC62  F0CC         	call	___awmod	;wreg free
 17737  01103A  5001               	movf	btemp^0,w,c
 17738  01103C  0F30               	addlw	48
 17739  01103E  6EDF               	movwf	indf2,c
 17740                           
 17741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17742  011040  0E0A               	movlw	10
 17743  011042  6EE6               	movwf	postinc1,c
 17744  011044  0E00               	movlw	0
 17745  011046  6EE6               	movwf	postinc1,c
 17746                           
 17747                           ;stkvar	_e @ sp[(-58)+34]
 17748  011048  0EE8               	movlw	-24
 17749  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17750  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17751  011056  EC57  F0C9         	call	___awdiv	;wreg free
 17752                           
 17753                           ;stkvar	_e @ sp[(-56)+34]
 17754  01105A  0EEA               	movlw	-22
 17755  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17756  011062  0EEB               	movlw	-21
 17757  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17758                           
 17759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17760                           ;stkvar	_p @ sp[(-56)+40]
 17761  01106A  50E1               	movf	fsr1l,w,c
 17762  01106C  0FF0               	addlw	-16
 17763  01106E  6ED9               	movwf	fsr2l,c
 17764  011070  50E2               	movf	fsr1h,w,c
 17765  011072  6EDA               	movwf	fsr2h,c
 17766  011074  0EFF               	movlw	255
 17767  011076  22DA               	addwfc	fsr2h,f,c
 17768  011078  06DE               	decf	postinc2,f,c
 17769  01107A  0E00               	movlw	0
 17770  01107C  5ADD               	subwfb	postdec2,f,c
 17771                           
 17772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17773                           ;stkvar	_w @ sp[(-56)+38]
 17774  01107E  50E1               	movf	fsr1l,w,c
 17775  011080  0FEE               	addlw	-18
 17776  011082  6ED9               	movwf	fsr2l,c
 17777  011084  50E2               	movf	fsr1h,w,c
 17778  011086  6EDA               	movwf	fsr2h,c
 17779  011088  0EFF               	movlw	255
 17780  01108A  22DA               	addwfc	fsr2h,f,c
 17781  01108C  06DE               	decf	postinc2,f,c
 17782  01108E  0E00               	movlw	0
 17783  011090  5ADD               	subwfb	postdec2,f,c
 17784  011092                     l12258:
 17785                           
 17786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17787                           ;stkvar	_e @ sp[(-56)+34]
 17788  011092  0EEA               	movlw	-22
 17789  011094  006F FF8C  F001    	movff	plusw1,btemp
 17790  01109A  0EEB               	movlw	-21
 17791  01109C  50E3               	movf	plusw1,w,c
 17792  01109E  1001               	iorwf	btemp^0,w,c
 17793  0110A0  A4D8               	btfss	status,2,c
 17794  0110A2  D7A6               	goto	l12248
 17795                           
 17796                           ;stkvar	_p @ sp[(-56)+40]
 17797  0110A4  0EF1               	movlw	-15
 17798  0110A6  BEE3               	btfsc	plusw1,7,c
 17799  0110A8  D007               	goto	u11520
 17800  0110AA  0EF1               	movlw	-15
 17801  0110AC  50E3               	movf	plusw1,w,c
 17802  0110AE  E1A0               	bnz	l12248
 17803  0110B0  0EF0               	movlw	-16
 17804  0110B2  04E3               	decf	plusw1,w,c
 17805  0110B4  B0D8               	btfsc	status,0,c
 17806  0110B6  D79C               	goto	l12248
 17807  0110B8                     u11520:
 17808                           
 17809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17810                           ;stkvar	_i @ sp[(-56)+36]
 17811  0110B8  50E1               	movf	fsr1l,w,c
 17812  0110BA  0FEC               	addlw	-20
 17813  0110BC  6ED9               	movwf	fsr2l,c
 17814  0110BE  50E2               	movf	fsr1h,w,c
 17815  0110C0  6EDA               	movwf	fsr2h,c
 17816  0110C2  0EFF               	movlw	255
 17817  0110C4  22DA               	addwfc	fsr2h,f,c
 17818  0110C6  06DE               	decf	postinc2,f,c
 17819  0110C8  0E00               	movlw	0
 17820  0110CA  5ADD               	subwfb	postdec2,f,c
 17821                           
 17822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17823                           ;stkvar	_sign @ sp[(-56)+42]
 17824  0110CC  0EF2               	movlw	-14
 17825  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17826  0110D4  0EF3               	movlw	-13
 17827  0110D6  50E3               	movf	plusw1,w,c
 17828  0110D8  1001               	iorwf	btemp^0,w,c
 17829  0110DA  A4D8               	btfss	status,2,c
 17830  0110DC  D002               	goto	l12268
 17831  0110DE  0E2B               	movlw	43
 17832  0110E0  D001               	goto	L18
 17833  0110E2                     l12268:
 17834  0110E2  0E2D               	movlw	45
 17835  0110E4                     L18:
 17836  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17837  0110E6  0E00               	movlw	0
 17838  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17839                           
 17840                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17841  0110EA  0ECC               	movlw	-52
 17842  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17843  0110F2  0ECD               	movlw	-51
 17844  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17845                           
 17846                           ;stkvar	_efgtoa$5526 @ sp[(-56)+4]
 17847                           ;stkvar	_i @ sp[(-56)+36]
 17848  0110FA  0EEC               	movlw	-20
 17849  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17850  011102  0EED               	movlw	-19
 17851  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17852  01110A  0E97               	movlw	low _dbuf
 17853  01110C  240B               	addwf	(btemp+10)^0,w,c
 17854  01110E  6ED9               	movwf	fsr2l,c
 17855  011110  0E02               	movlw	high _dbuf
 17856  011112  200C               	addwfc	(btemp+11)^0,w,c
 17857  011114  6EDA               	movwf	fsr2h,c
 17858  011116  0ECC               	movlw	-52
 17859  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17860                           
 17861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17862                           ;stkvar	_w @ sp[(-56)+38]
 17863  01111E  50E1               	movf	fsr1l,w,c
 17864  011120  0FEE               	addlw	-18
 17865  011122  6ED9               	movwf	fsr2l,c
 17866  011124  50E2               	movf	fsr1h,w,c
 17867  011126  6EDA               	movwf	fsr2h,c
 17868  011128  0EFF               	movlw	255
 17869  01112A  22DA               	addwfc	fsr2h,f,c
 17870  01112C  06DE               	decf	postinc2,f,c
 17871  01112E  0E00               	movlw	0
 17872  011130  5ADD               	subwfb	postdec2,f,c
 17873                           
 17874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17875                           ;stkvar	_i @ sp[(-56)+36]
 17876  011132  50E1               	movf	fsr1l,w,c
 17877  011134  0FEC               	addlw	-20
 17878  011136  6ED9               	movwf	fsr2l,c
 17879  011138  50E2               	movf	fsr1h,w,c
 17880  01113A  6EDA               	movwf	fsr2h,c
 17881  01113C  0EFF               	movlw	255
 17882  01113E  22DA               	addwfc	fsr2h,f,c
 17883  011140  06DE               	decf	postinc2,f,c
 17884  011142  0E00               	movlw	0
 17885  011144  5ADD               	subwfb	postdec2,f,c
 17886  011146  0EBF               	movlw	191
 17887  011148  6E0B               	movwf	(btemp+10)^0,c
 17888  01114A  0EFF               	movlw	255
 17889  01114C  6E0C               	movwf	(btemp+11)^0,c
 17890                           
 17891                           ;stkvar	_c @ sp[(-56)+-7]
 17892  01114E  0EC1               	movlw	-63
 17893  011150  50E3               	movf	plusw1,w,c
 17894  011152  6E09               	movwf	(btemp+8)^0,c
 17895  011154  6A0A               	clrf	(btemp+9)^0,c
 17896  011156  500B               	movf	(btemp+10)^0,w,c
 17897  011158  2609               	addwf	(btemp+8)^0,f,c
 17898  01115A  500C               	movf	(btemp+11)^0,w,c
 17899  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17900  01115E  500A               	movf	(btemp+9)^0,w,c
 17901  011160  E106               	bnz	u11540
 17902  011162  0E1A               	movlw	26
 17903  011164  5C09               	subwf	(btemp+8)^0,w,c
 17904  011166  B0D8               	btfsc	status,0,c
 17905  011168  D002               	goto	u11540
 17906  01116A  0E01               	movlw	1
 17907  01116C  D001               	goto	u11550
 17908  01116E                     u11540:
 17909  01116E  0E00               	movlw	0
 17910  011170                     u11550:
 17911  011170  6E0B               	movwf	(btemp+10)^0,c
 17912  011172  6A0C               	clrf	(btemp+11)^0,c
 17913                           
 17914                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17915  011174  0EC8               	movlw	-56
 17916  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17917  01117C  0EC9               	movlw	-55
 17918  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17919                           
 17920                           ;stkvar	_efgtoa$5528 @ sp[(-56)+0]
 17921  011184  0EC8               	movlw	-56
 17922  011186  006F FF8C  F001    	movff	plusw1,btemp
 17923  01118C  0EC9               	movlw	-55
 17924  01118E  50E3               	movf	plusw1,w,c
 17925  011190  1001               	iorwf	btemp^0,w,c
 17926  011192  A4D8               	btfss	status,2,c
 17927  011194  D002               	goto	l12284
 17928  011196  0E65               	movlw	101
 17929  011198  D001               	goto	L19
 17930  01119A                     l12284:
 17931  01119A  0E45               	movlw	69
 17932  01119C                     L19:
 17933  01119C  6E0B               	movwf	(btemp+10)^0,c
 17934  01119E  0E00               	movlw	0
 17935  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17936                           
 17937                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17938  0111A2  0ECA               	movlw	-54
 17939  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17940  0111AA  0ECB               	movlw	-53
 17941  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17942                           
 17943                           ;stkvar	_efgtoa$5527 @ sp[(-56)+2]
 17944                           ;stkvar	_i @ sp[(-56)+36]
 17945  0111B2  0EEC               	movlw	-20
 17946  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17947  0111BA  0EED               	movlw	-19
 17948  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17949  0111C2  0E97               	movlw	low _dbuf
 17950  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17951  0111C6  6ED9               	movwf	fsr2l,c
 17952  0111C8  0E02               	movlw	high _dbuf
 17953  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17954  0111CC  6EDA               	movwf	fsr2h,c
 17955  0111CE  0ECA               	movlw	-54
 17956  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17957                           
 17958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17959                           ;stkvar	_w @ sp[(-56)+38]
 17960  0111D6  50E1               	movf	fsr1l,w,c
 17961  0111D8  0FEE               	addlw	-18
 17962  0111DA  6ED9               	movwf	fsr2l,c
 17963  0111DC  50E2               	movf	fsr1h,w,c
 17964  0111DE  6EDA               	movwf	fsr2h,c
 17965  0111E0  0EFF               	movlw	255
 17966  0111E2  22DA               	addwfc	fsr2h,f,c
 17967  0111E4  06DE               	decf	postinc2,f,c
 17968  0111E6  0E00               	movlw	0
 17969  0111E8  5ADD               	subwfb	postdec2,f,c
 17970                           
 17971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17972                           ;stkvar	_i @ sp[(-56)+36]
 17973  0111EA  0EEC               	movlw	-20
 17974  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17975  0111F2  0EED               	movlw	-19
 17976  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17977  0111FA  0E97               	movlw	low _dbuf
 17978  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17979  0111FE  6E09               	movwf	(btemp+8)^0,c
 17980  011200  0E02               	movlw	high _dbuf
 17981  011202  200C               	addwfc	(btemp+11)^0,w,c
 17982  011204  6E0A               	movwf	(btemp+9)^0,c
 17983  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17984  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17985                           
 17986                           ;stkvar	_n @ sp[(-58)+32]
 17987  011212  0E97               	movlw	low _dbuf
 17988  011214  6E0B               	movwf	(btemp+10)^0,c
 17989  011216  0E02               	movlw	high _dbuf
 17990  011218  6E0C               	movwf	(btemp+11)^0,c
 17991  01121A  0EE6               	movlw	-26
 17992  01121C  50E3               	movf	plusw1,w,c
 17993  01121E  260B               	addwf	(btemp+10)^0,f,c
 17994  011220  0EE7               	movlw	-25
 17995  011222  50E3               	movf	plusw1,w,c
 17996  011224  220C               	addwfc	(btemp+11)^0,f,c
 17997  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17998  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 17999  011232  EC41  F0D1         	call	_strcpy	;wreg free
 18000  011236  EF16  F081         	goto	l12036
 18001  01123A                     l2194:
 18002                           
 18003                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18004  01123A  0EC1               	movlw	193
 18005  01123C  26E1               	addwf	fsr1l,f,c
 18006  01123E  0EFF               	movlw	255
 18007  011240  22E2               	addwfc	fsr1h,f,c
 18008  011242  0012               	return		;funcret
 18009  011244                     __end_of_efgtoa:
 18010                           	opt callstack 0
 18011                           
 18012 ;; *************** function _tolower *****************
 18013 ;; Defined at:
 18014 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;  c               2  [STACK] int 
 18017 ;; Auto vars:     Size  Location     Type
 18018 ;;		None
 18019 ;; Return value:  Size  Location     Type
 18020 ;;                  2  [STACK] int 
 18021 ;; Registers used:
 18022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18023 ;; Tracked objects:
 18024 ;;		On entry : 0/0
 18025 ;;		On exit  : 0/0
 18026 ;;		Unchanged: 0/0
 18027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18032 ;;Total ram usage:        0 bytes
 18033 ;; Hardware stack levels used:    1
 18034 ;; Hardware stack levels required when called:   16
 18035 ;; This function calls:
 18036 ;;		_isupper
 18037 ;; This function is called by:
 18038 ;;		_efgtoa
 18039 ;;		_vfpfcnvrt
 18040 ;; This function uses a reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text58
 18044  01ACD8                     __ptext58:
 18045                           	opt callstack 0
 18046  01ACD8                     _tolower:
 18047                           	opt callstack 0
 18048                           
 18049                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18050  01ACD8  52E6               	movf	postinc1,f,c
 18051  01ACDA  52E6               	movf	postinc1,f,c
 18052                           
 18053                           ;stkvar	_c @ sp[(-2)+-2]
 18054                           
 18055                           ;incstack = 0
 18056 ;; hardware stack exceeded
 18057  01ACDC  0EFC               	movlw	-4
 18058  01ACDE  50E3               	movf	plusw1,w,c
 18059  01ACE0  0FBF               	addlw	191
 18060  01ACE2  6E0B               	movwf	(btemp+10)^0,c
 18061  01ACE4  0EFD               	movlw	-3
 18062  01ACE6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18063  01ACEC  0EFF               	movlw	255
 18064  01ACEE  220C               	addwfc	(btemp+11)^0,f,c
 18065  01ACF0  500C               	movf	(btemp+11)^0,w,c
 18066  01ACF2  E106               	bnz	u6080
 18067  01ACF4  0E1A               	movlw	26
 18068  01ACF6  5C0B               	subwf	(btemp+10)^0,w,c
 18069  01ACF8  B0D8               	btfsc	status,0,c
 18070  01ACFA  D002               	goto	u6080
 18071  01ACFC  0E01               	movlw	1
 18072  01ACFE  D001               	goto	u6090
 18073  01AD00                     u6080:
 18074  01AD00  0E00               	movlw	0
 18075  01AD02                     u6090:
 18076  01AD02  6E0B               	movwf	(btemp+10)^0,c
 18077  01AD04  6A0C               	clrf	(btemp+11)^0,c
 18078                           
 18079                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18080  01AD06  0EFE               	movlw	-2
 18081  01AD08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18082  01AD0E  0EFF               	movlw	-1
 18083  01AD10  0060  F033  FFE3   	movff	btemp+11,plusw1
 18084                           
 18085                           ;stkvar	_tolower$6347 @ sp[(-2)+0]
 18086  01AD16  0EFE               	movlw	-2
 18087  01AD18  006F FF8C  F001    	movff	plusw1,btemp
 18088  01AD1E  0EFF               	movlw	-1
 18089  01AD20  50E3               	movf	plusw1,w,c
 18090  01AD22  1001               	iorwf	btemp^0,w,c
 18091  01AD24  B4D8               	btfsc	status,2,c
 18092  01AD26  D00D               	goto	l8044
 18093                           
 18094                           ;stkvar	_c @ sp[(-2)+-2]
 18095  01AD28  0EFC               	movlw	-4
 18096  01AD2A  006F FF8C  F001    	movff	plusw1,btemp
 18097  01AD30  0EFD               	movlw	-3
 18098  01AD32  006F FF8C  F002    	movff	plusw1,btemp+1
 18099  01AD38  0E20               	movlw	32
 18100  01AD3A  1201               	iorwf	btemp^0,f,c
 18101  01AD3C  0E00               	movlw	0
 18102  01AD3E  1202               	iorwf	(btemp+1)^0,f,c
 18103  01AD40  D008               	goto	l3466
 18104  01AD42                     l8044:
 18105                           
 18106                           ;stkvar	_c @ sp[(-2)+-2]
 18107  01AD42  0EFC               	movlw	-4
 18108  01AD44  006F FF8C  F001    	movff	plusw1,btemp
 18109  01AD4A  0EFD               	movlw	-3
 18110  01AD4C  006F FF8C  F002    	movff	plusw1,btemp+1
 18111  01AD52                     l3466:
 18112                           
 18113                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18114  01AD52  52E5               	movf	postdec1,f,c
 18115  01AD54  52E5               	movf	postdec1,f,c
 18116  01AD56  52E5               	movf	postdec1,f,c
 18117  01AD58  52E5               	movf	postdec1,f,c
 18118  01AD5A  0012               	return		;funcret
 18119  01AD5C                     __end_of_tolower:
 18120                           	opt callstack 0
 18121                           
 18122 ;; *************** function _isupper *****************
 18123 ;; Defined at:
 18124 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18125 ;; Parameters:    Size  Location     Type
 18126 ;;  c               2  [STACK] int 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;		None
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  2  [STACK] int 
 18131 ;; Registers used:
 18132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 0/0
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18142 ;;Total ram usage:        0 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:   15
 18145 ;; This function calls:
 18146 ;;		Nothing
 18147 ;; This function is called by:
 18148 ;;		_efgtoa
 18149 ;;		_xtoa
 18150 ;;		_vfpfcnvrt
 18151 ;;		_tolower
 18152 ;; This function uses a reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text59
 18156  01B9B2                     __ptext59:
 18157                           	opt callstack 0
 18158  01B9B2                     _isupper:
 18159                           	opt callstack 0
 18160                           
 18161                           ;stkvar	_c @ sp[(0)+-2]
 18162                           
 18163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18164                           ;incstack = 0
 18165 ;; hardware stack exceeded
 18166  01B9B2  0EFE               	movlw	-2
 18167  01B9B4  50E3               	movf	plusw1,w,c
 18168  01B9B6  0FBF               	addlw	191
 18169  01B9B8  6E0B               	movwf	(btemp+10)^0,c
 18170  01B9BA  0EFF               	movlw	-1
 18171  01B9BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18172  01B9C2  0EFF               	movlw	255
 18173  01B9C4  220C               	addwfc	(btemp+11)^0,f,c
 18174  01B9C6  500C               	movf	(btemp+11)^0,w,c
 18175  01B9C8  E106               	bnz	u5430
 18176  01B9CA  0E1A               	movlw	26
 18177  01B9CC  5C0B               	subwf	(btemp+10)^0,w,c
 18178  01B9CE  B0D8               	btfsc	status,0,c
 18179  01B9D0  D002               	goto	u5430
 18180  01B9D2  0E01               	movlw	1
 18181  01B9D4  D001               	goto	u5440
 18182  01B9D6                     u5430:
 18183  01B9D6  0E00               	movlw	0
 18184  01B9D8                     u5440:
 18185  01B9D8  6E01               	movwf	btemp^0,c
 18186  01B9DA  6A02               	clrf	(btemp+1)^0,c
 18187                           
 18188                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18189  01B9DC  52E5               	movf	postdec1,f,c
 18190  01B9DE  52E5               	movf	postdec1,f,c
 18191  01B9E0  0012               	return		;funcret
 18192  01B9E2                     __end_of_isupper:
 18193                           	opt callstack 0
 18194                           
 18195 ;; *************** function _strcpy *****************
 18196 ;; Defined at:
 18197 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18198 ;; Parameters:    Size  Location     Type
 18199 ;;  dest            2  [STACK] PTR unsigned char 
 18200 ;;		 -> dbuf(80), 
 18201 ;;  src             2  [STACK] PTR const unsigned char 
 18202 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18203 ;;		 -> dbuf(80), 
 18204 ;; Auto vars:     Size  Location     Type
 18205 ;;  d               2  [STACK] PTR unsigned char 
 18206 ;;		 -> dbuf(80), 
 18207 ;;  s               2  [STACK] PTR const unsigned char 
 18208 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18209 ;;		 -> dbuf(80), 
 18210 ;; Return value:  Size  Location     Type
 18211 ;;                  2  [STACK] PTR unsigned char 
 18212 ;; Registers used:
 18213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18214 ;; Tracked objects:
 18215 ;;		On entry : 0/0
 18216 ;;		On exit  : 0/0
 18217 ;;		Unchanged: 0/0
 18218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18223 ;;Total ram usage:        0 bytes
 18224 ;; Hardware stack levels used:    1
 18225 ;; Hardware stack levels required when called:   15
 18226 ;; This function calls:
 18227 ;;		Nothing
 18228 ;; This function is called by:
 18229 ;;		_efgtoa
 18230 ;; This function uses a reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text60
 18234  01A282                     __ptext60:
 18235                           	opt callstack 0
 18236  01A282                     _strcpy:
 18237                           	opt callstack 0
 18238                           
 18239                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18240  01A282  52E6               	movf	postinc1,f,c
 18241  01A284  52E6               	movf	postinc1,f,c
 18242  01A286  52E6               	movf	postinc1,f,c
 18243  01A288  52E6               	movf	postinc1,f,c
 18244                           
 18245                           ;stkvar	_src @ sp[(-4)+-4]
 18246                           
 18247                           ;incstack = 0
 18248 ;; hardware stack exceeded
 18249  01A28A  0EF8               	movlw	-8
 18250  01A28C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18251  01A292  0EF9               	movlw	-7
 18252  01A294  006F FF8C  F00C    	movff	plusw1,btemp+11
 18253                           
 18254                           ;stkvar	_s @ sp[(-4)+2]
 18255  01A29A  0EFF               	movlw	-1
 18256  01A29C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18257  01A2A2  0EFE               	movlw	-2
 18258  01A2A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18259                           
 18260                           ;stkvar	_dest @ sp[(-4)+-2]
 18261  01A2AA  0EFA               	movlw	-6
 18262  01A2AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18263  01A2B2  0EFB               	movlw	-5
 18264  01A2B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18265                           
 18266                           ;stkvar	_d @ sp[(-4)+0]
 18267  01A2BA  0EFD               	movlw	-3
 18268  01A2BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18269  01A2C2  0EFC               	movlw	-4
 18270  01A2C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18271  01A2CA                     l11898:
 18272                           
 18273                           ;stkvar	_s @ sp[(-4)+2]
 18274  01A2CA  50E1               	movf	fsr1l,w,c
 18275  01A2CC  0FFE               	addlw	-2
 18276  01A2CE  6ED9               	movwf	fsr2l,c
 18277  01A2D0  50E2               	movf	fsr1h,w,c
 18278  01A2D2  6EDA               	movwf	fsr2h,c
 18279  01A2D4  0EFF               	movlw	255
 18280  01A2D6  22DA               	addwfc	fsr2h,f,c
 18281  01A2D8  006F FF7C  F00B    	movff	indf2,btemp+10
 18282  01A2DE  0E01               	movlw	1
 18283  01A2E0  26DE               	addwf	postinc2,f,c
 18284  01A2E2  006F FF7C  F00C    	movff	indf2,btemp+11
 18285  01A2E8  0E00               	movlw	0
 18286  01A2EA  22DD               	addwfc	postdec2,f,c
 18287  01A2EC  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18288  01A2F2  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18289  01A2F8  0E00               	movlw	low (__mediumconst shr (0+16))
 18290  01A2FA  6EF8               	movwf	tblptru,c
 18291                           
 18292                           ;stkvar	_d @ sp[(-4)+0]
 18293  01A2FC  50E1               	movf	fsr1l,w,c
 18294  01A2FE  0FFC               	addlw	-4
 18295  01A300  6ED9               	movwf	fsr2l,c
 18296  01A302  50E2               	movf	fsr1h,w,c
 18297  01A304  6EDA               	movwf	fsr2h,c
 18298  01A306  0EFF               	movlw	255
 18299  01A308  22DA               	addwfc	fsr2h,f,c
 18300  01A30A  006F FF7C  F00B    	movff	indf2,btemp+10
 18301  01A310  0E01               	movlw	1
 18302  01A312  26DE               	addwf	postinc2,f,c
 18303  01A314  006F FF7C  F00C    	movff	indf2,btemp+11
 18304  01A31A  0E00               	movlw	0
 18305  01A31C  22DD               	addwfc	postdec2,f,c
 18306  01A31E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18307  01A324  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18308  01A32A  0E1F               	movlw	(high __ramtop+-1)
 18309  01A32C  64F7               	cpfsgt	tblptrh,c
 18310  01A32E  D003               	bra	u10847
 18311  01A330  0008               	tblrd		*
 18312  01A332  50F5               	movf	tablat,w,c
 18313  01A334  D007               	bra	u10840
 18314  01A336                     u10847:
 18315  01A336  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18316  01A33C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18317  01A342  50EF               	movf	indf0,w,c
 18318  01A344                     u10840:
 18319  01A344  6EDF               	movwf	indf2,c
 18320  01A346  50DF               	movf	indf2,w,c
 18321  01A348  A4D8               	btfss	status,2,c
 18322  01A34A  D7BF               	goto	l11898
 18323                           
 18324                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18325  01A34C  0EF8               	movlw	248
 18326  01A34E  26E1               	addwf	fsr1l,f,c
 18327  01A350  0EFF               	movlw	255
 18328  01A352  22E2               	addwfc	fsr1h,f,c
 18329  01A354  0012               	return		;funcret
 18330  01A356                     __end_of_strcpy:
 18331                           	opt callstack 0
 18332                           
 18333 ;; *************** function _floorf *****************
 18334 ;; Defined at:
 18335 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;  x               4  [STACK] float 
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;  u               4  [STACK] struct .
 18340 ;;  m               4  [STACK] unsigned long 
 18341 ;;  e               2  [STACK] int 
 18342 ;; Return value:  Size  Location     Type
 18343 ;;                  4  [STACK] float 
 18344 ;; Registers used:
 18345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18346 ;; Tracked objects:
 18347 ;;		On entry : 0/0
 18348 ;;		On exit  : 0/0
 18349 ;;		Unchanged: 0/0
 18350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18355 ;;Total ram usage:        0 bytes
 18356 ;; Hardware stack levels used:    1
 18357 ;; Hardware stack levels required when called:   15
 18358 ;; This function calls:
 18359 ;;		Nothing
 18360 ;; This function is called by:
 18361 ;;		_efgtoa
 18362 ;; This function uses a reentrant model
 18363 ;;
 18364                           
 18365                           	psect	text61
 18366  01647C                     __ptext61:
 18367                           	opt callstack 0
 18368  01647C                     _floorf:
 18369                           	opt callstack 0
 18370                           
 18371                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18372  01647C  0E0A               	movlw	10
 18373  01647E  26E1               	addwf	fsr1l,f,c
 18374  016480  0E00               	movlw	0
 18375  016482  22E2               	addwfc	fsr1h,f,c
 18376                           
 18377                           ;incstack = 0
 18378 ;; hardware stack exceeded
 18379  016484  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18380  01648A  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18381  016490  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18382  016496  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18383                           
 18384                           ;stkvar	_u @ sp[(-10)+0]
 18385  01649C  0EF6               	movlw	-10
 18386  01649E  0060  F027  FFE3   	movff	btemp+8,plusw1
 18387  0164A4  0EF7               	movlw	-9
 18388  0164A6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18389  0164AC  0EF8               	movlw	-8
 18390  0164AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18391  0164B4  0EF9               	movlw	-7
 18392  0164B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18393                           
 18394                           ;stkvar	_x @ sp[(-10)+-4]
 18395  0164BC  0EF2               	movlw	-14
 18396  0164BE  006F FF8C  F009    	movff	plusw1,btemp+8
 18397  0164C4  0EF3               	movlw	-13
 18398  0164C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18399  0164CC  0EF4               	movlw	-12
 18400  0164CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18401  0164D4  0EF5               	movlw	-11
 18402  0164D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 18403                           
 18404                           ;stkvar	_u @ sp[(-10)+0]
 18405  0164DC  0EF6               	movlw	-10
 18406  0164DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 18407  0164E4  0EF7               	movlw	-9
 18408  0164E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18409  0164EC  0EF8               	movlw	-8
 18410  0164EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18411  0164F4  0EF9               	movlw	-7
 18412  0164F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18413  0164FC  0E81               	movlw	129
 18414  0164FE  6E0B               	movwf	(btemp+10)^0,c
 18415  016500  0EFF               	movlw	255
 18416  016502  6E0C               	movwf	(btemp+11)^0,c
 18417                           
 18418                           ;stkvar	_u @ sp[(-10)+0]
 18419  016504  0EF6               	movlw	-10
 18420  016506  006F FF8C  F005    	movff	plusw1,btemp+4
 18421  01650C  0EF7               	movlw	-9
 18422  01650E  006F FF8C  F006    	movff	plusw1,btemp+5
 18423  016514  0EF8               	movlw	-8
 18424  016516  006F FF8C  F007    	movff	plusw1,btemp+6
 18425  01651C  0EF9               	movlw	-7
 18426  01651E  006F FF8C  F008    	movff	plusw1,btemp+7
 18427  016524  0E18               	movlw	24
 18428  016526  D005               	goto	u6110
 18429  016528                     u6115:
 18430  016528  90D8               	bcf	status,0,c
 18431  01652A  3208               	rrcf	(btemp+7)^0,f,c
 18432  01652C  3207               	rrcf	(btemp+6)^0,f,c
 18433  01652E  3206               	rrcf	(btemp+5)^0,f,c
 18434  016530  3205               	rrcf	(btemp+4)^0,f,c
 18435  016532                     u6110:
 18436  016532  2EE8               	decfsz	wreg,f,c
 18437  016534  D7F9               	goto	u6115
 18438  016536  0060  F014  F009   	movff	btemp+4,btemp+8
 18439  01653C  0060  F018  F00A   	movff	btemp+5,btemp+9
 18440  016542  0EFF               	movlw	255
 18441  016544  1609               	andwf	(btemp+8)^0,f,c
 18442  016546  0E00               	movlw	0
 18443  016548  160A               	andwf	(btemp+9)^0,f,c
 18444  01654A  500B               	movf	(btemp+10)^0,w,c
 18445  01654C  2609               	addwf	(btemp+8)^0,f,c
 18446  01654E  500C               	movf	(btemp+11)^0,w,c
 18447  016550  220A               	addwfc	(btemp+9)^0,f,c
 18448                           
 18449                           ;stkvar	_e @ sp[(-10)+8]
 18450  016552  0EFE               	movlw	-2
 18451  016554  0060  F027  FFE3   	movff	btemp+8,plusw1
 18452  01655A  0EFF               	movlw	-1
 18453  01655C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18454                           
 18455                           ;stkvar	_e @ sp[(-10)+8]
 18456  016562  0EFF               	movlw	-1
 18457  016564  BEE3               	btfsc	plusw1,7,c
 18458  016566  D019               	goto	l8058
 18459  016568  0EFF               	movlw	-1
 18460  01656A  50E3               	movf	plusw1,w,c
 18461  01656C  E108               	bnz	u6120
 18462  01656E  0EFE               	movlw	-2
 18463  016570  006F FF8C  F001    	movff	plusw1,btemp
 18464  016576  0E17               	movlw	23
 18465  016578  5E01               	subwf	btemp^0,f,c
 18466  01657A  A0D8               	btfss	status,0,c
 18467  01657C  D00E               	goto	l8058
 18468  01657E                     u6120:
 18469                           
 18470                           ;stkvar	_x @ sp[(-10)+-4]
 18471  01657E  0EF2               	movlw	-14
 18472  016580  006F FF8C  F001    	movff	plusw1,btemp
 18473  016586  0EF3               	movlw	-13
 18474  016588  006F FF8C  F002    	movff	plusw1,btemp+1
 18475  01658E  0EF4               	movlw	-12
 18476  016590  006F FF8C  F003    	movff	plusw1,btemp+2
 18477  016596  0EF5               	movlw	-11
 18478  016598  D11F               	goto	L20
 18479  01659A                     l8058:
 18480                           
 18481                           ;stkvar	_e @ sp[(-10)+8]
 18482  01659A  0EFF               	movlw	-1
 18483  01659C  BEE3               	btfsc	plusw1,7,c
 18484  01659E  D0B4               	goto	l8074
 18485                           
 18486                           ;stkvar	_e @ sp[(-10)+8]
 18487  0165A0  0EFE               	movlw	-2
 18488  0165A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18489  0165A8  0EFF               	movlw	255
 18490  0165AA  6E05               	movwf	(btemp+4)^0,c
 18491  0165AC  0EFF               	movlw	255
 18492  0165AE  6E06               	movwf	(btemp+5)^0,c
 18493  0165B0  0E7F               	movlw	127
 18494  0165B2  6E07               	movwf	(btemp+6)^0,c
 18495  0165B4  0E00               	movlw	0
 18496  0165B6  6E08               	movwf	(btemp+7)^0,c
 18497  0165B8                     u6145:
 18498  0165B8  660C               	tstfsz	(btemp+11)^0,c
 18499  0165BA  D001               	goto	u6146
 18500  0165BC  D007               	goto	u6147
 18501  0165BE                     u6146:
 18502  0165BE  3408               	rlcf	(btemp+7)^0,w,c
 18503  0165C0  3208               	rrcf	(btemp+7)^0,f,c
 18504  0165C2  3207               	rrcf	(btemp+6)^0,f,c
 18505  0165C4  3206               	rrcf	(btemp+5)^0,f,c
 18506  0165C6  3205               	rrcf	(btemp+4)^0,f,c
 18507  0165C8  2E0C               	decfsz	(btemp+11)^0,f,c
 18508  0165CA  D7F6               	goto	u6145
 18509  0165CC                     u6147:
 18510                           
 18511                           ;stkvar	_m @ sp[(-10)+4]
 18512  0165CC  0EFA               	movlw	-6
 18513  0165CE  0060  F017  FFE3   	movff	btemp+4,plusw1
 18514  0165D4  0EFB               	movlw	-5
 18515  0165D6  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18516  0165DC  0EFC               	movlw	-4
 18517  0165DE  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18518  0165E4  0EFD               	movlw	-3
 18519  0165E6  0060  F023  FFE3   	movff	btemp+7,plusw1
 18520                           
 18521                           ;stkvar	_m @ sp[(-10)+4]
 18522                           ;stkvar	_u @ sp[(-10)+0]
 18523  0165EC  0EF6               	movlw	-10
 18524  0165EE  006F FF8C  F009    	movff	plusw1,btemp+8
 18525  0165F4  0EF7               	movlw	-9
 18526  0165F6  006F FF8C  F00A    	movff	plusw1,btemp+9
 18527  0165FC  0EF8               	movlw	-8
 18528  0165FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 18529  016604  0EF9               	movlw	-7
 18530  016606  006F FF8C  F00C    	movff	plusw1,btemp+11
 18531  01660C  0EFA               	movlw	-6
 18532  01660E  50E3               	movf	plusw1,w,c
 18533  016610  1609               	andwf	(btemp+8)^0,f,c
 18534  016612  0EFB               	movlw	-5
 18535  016614  50E3               	movf	plusw1,w,c
 18536  016616  160A               	andwf	(btemp+9)^0,f,c
 18537  016618  0EFC               	movlw	-4
 18538  01661A  50E3               	movf	plusw1,w,c
 18539  01661C  160B               	andwf	(btemp+10)^0,f,c
 18540  01661E  0EFD               	movlw	-3
 18541  016620  50E3               	movf	plusw1,w,c
 18542  016622  160C               	andwf	(btemp+11)^0,f,c
 18543  016624  5009               	movf	(btemp+8)^0,w,c
 18544  016626  100A               	iorwf	(btemp+9)^0,w,c
 18545  016628  100B               	iorwf	(btemp+10)^0,w,c
 18546  01662A  100C               	iorwf	(btemp+11)^0,w,c
 18547  01662C  B4D8               	btfsc	status,2,c
 18548  01662E  D7A7               	goto	u6120
 18549                           
 18550                           ;stkvar	_u @ sp[(-10)+0]
 18551  016630  0EF6               	movlw	-10
 18552  016632  006F FF8C  F009    	movff	plusw1,btemp+8
 18553  016638  0EF7               	movlw	-9
 18554  01663A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18555  016640  0EF8               	movlw	-8
 18556  016642  006F FF8C  F00B    	movff	plusw1,btemp+10
 18557  016648  0EF9               	movlw	-7
 18558  01664A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18559  016650  0E20               	movlw	32
 18560  016652  D005               	goto	u6160
 18561  016654                     u6165:
 18562  016654  90D8               	bcf	status,0,c
 18563  016656  320C               	rrcf	(btemp+11)^0,f,c
 18564  016658  320B               	rrcf	(btemp+10)^0,f,c
 18565  01665A  320A               	rrcf	(btemp+9)^0,f,c
 18566  01665C  3209               	rrcf	(btemp+8)^0,f,c
 18567  01665E                     u6160:
 18568  01665E  2EE8               	decfsz	wreg,f,c
 18569  016660  D7F9               	goto	u6165
 18570  016662  5009               	movf	(btemp+8)^0,w,c
 18571  016664  B4D8               	btfsc	status,2,c
 18572  016666  D028               	goto	l8072
 18573                           
 18574                           ;stkvar	_m @ sp[(-10)+4]
 18575                           ;stkvar	_u @ sp[(-10)+0]
 18576  016668  0EF6               	movlw	-10
 18577  01666A  50E3               	movf	plusw1,w,c
 18578  01666C  6E01               	movwf	btemp^0,c
 18579  01666E  0EFA               	movlw	-6
 18580  016670  50E3               	movf	plusw1,w,c
 18581  016672  2601               	addwf	btemp^0,f,c
 18582  016674  0EF6               	movlw	-10
 18583  016676  0060  F007  FFE3   	movff	btemp,plusw1
 18584  01667C  0EF7               	movlw	-9
 18585  01667E  50E3               	movf	plusw1,w,c
 18586  016680  6E01               	movwf	btemp^0,c
 18587  016682  0EFB               	movlw	-5
 18588  016684  50E3               	movf	plusw1,w,c
 18589  016686  2201               	addwfc	btemp^0,f,c
 18590  016688  0EF7               	movlw	-9
 18591  01668A  0060  F007  FFE3   	movff	btemp,plusw1
 18592  016690  0EF8               	movlw	-8
 18593  016692  50E3               	movf	plusw1,w,c
 18594  016694  6E01               	movwf	btemp^0,c
 18595  016696  0EFC               	movlw	-4
 18596  016698  50E3               	movf	plusw1,w,c
 18597  01669A  2201               	addwfc	btemp^0,f,c
 18598  01669C  0EF8               	movlw	-8
 18599  01669E  0060  F007  FFE3   	movff	btemp,plusw1
 18600  0166A4  0EF9               	movlw	-7
 18601  0166A6  50E3               	movf	plusw1,w,c
 18602  0166A8  6E01               	movwf	btemp^0,c
 18603  0166AA  0EFD               	movlw	-3
 18604  0166AC  50E3               	movf	plusw1,w,c
 18605  0166AE  2201               	addwfc	btemp^0,f,c
 18606  0166B0  0EF9               	movlw	-7
 18607  0166B2  0060  F007  FFE3   	movff	btemp,plusw1
 18608  0166B8                     l8072:
 18609                           
 18610                           ;stkvar	_m @ sp[(-10)+4]
 18611  0166B8  0EFA               	movlw	-6
 18612  0166BA  006F FF8C  F009    	movff	plusw1,btemp+8
 18613  0166C0  0EFB               	movlw	-5
 18614  0166C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 18615  0166C8  0EFC               	movlw	-4
 18616  0166CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 18617  0166D0  0EFD               	movlw	-3
 18618  0166D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 18619  0166D8  1C09               	comf	(btemp+8)^0,w,c
 18620  0166DA  6E05               	movwf	(btemp+4)^0,c
 18621  0166DC  1C0A               	comf	(btemp+9)^0,w,c
 18622  0166DE  6E06               	movwf	(btemp+5)^0,c
 18623  0166E0  1C0B               	comf	(btemp+10)^0,w,c
 18624  0166E2  6E07               	movwf	(btemp+6)^0,c
 18625  0166E4  1C0C               	comf	(btemp+11)^0,w,c
 18626  0166E6  6E08               	movwf	(btemp+7)^0,c
 18627                           
 18628                           ;stkvar	_u @ sp[(-10)+0]
 18629  0166E8  50E1               	movf	fsr1l,w,c
 18630  0166EA  0FF6               	addlw	-10
 18631  0166EC  6ED9               	movwf	fsr2l,c
 18632  0166EE  50E2               	movf	fsr1h,w,c
 18633  0166F0  6EDA               	movwf	fsr2h,c
 18634  0166F2  0EFF               	movlw	255
 18635  0166F4  22DA               	addwfc	fsr2h,f,c
 18636  0166F6  5005               	movf	(btemp+4)^0,w,c
 18637  0166F8  16DE               	andwf	postinc2,f,c
 18638  0166FA  5006               	movf	(btemp+5)^0,w,c
 18639  0166FC  16DE               	andwf	postinc2,f,c
 18640  0166FE  5007               	movf	(btemp+6)^0,w,c
 18641  016700  16DE               	andwf	postinc2,f,c
 18642  016702  5008               	movf	(btemp+7)^0,w,c
 18643  016704  16DE               	andwf	postinc2,f,c
 18644  016706  D05B               	goto	l8082
 18645  016708                     l8074:
 18646                           
 18647                           ;stkvar	_u @ sp[(-10)+0]
 18648  016708  0EF6               	movlw	-10
 18649  01670A  006F FF8C  F009    	movff	plusw1,btemp+8
 18650  016710  0EF7               	movlw	-9
 18651  016712  006F FF8C  F00A    	movff	plusw1,btemp+9
 18652  016718  0EF8               	movlw	-8
 18653  01671A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18654  016720  0EF9               	movlw	-7
 18655  016722  006F FF8C  F00C    	movff	plusw1,btemp+11
 18656  016728  0E20               	movlw	32
 18657  01672A  D005               	goto	u6180
 18658  01672C                     u6185:
 18659  01672C  90D8               	bcf	status,0,c
 18660  01672E  320C               	rrcf	(btemp+11)^0,f,c
 18661  016730  320B               	rrcf	(btemp+10)^0,f,c
 18662  016732  320A               	rrcf	(btemp+9)^0,f,c
 18663  016734  3209               	rrcf	(btemp+8)^0,f,c
 18664  016736                     u6180:
 18665  016736  2EE8               	decfsz	wreg,f,c
 18666  016738  D7F9               	goto	u6185
 18667  01673A  6609               	tstfsz	(btemp+8)^0,c
 18668  01673C  D009               	goto	l8078
 18669                           
 18670                           ;stkvar	_u @ sp[(-10)+0]
 18671  01673E  0EF6               	movlw	-10
 18672  016740  6AE3               	clrf	plusw1,c
 18673  016742  0EF7               	movlw	-9
 18674  016744  6AE3               	clrf	plusw1,c
 18675  016746  0EF8               	movlw	-8
 18676  016748  6AE3               	clrf	plusw1,c
 18677  01674A  0EF9               	movlw	-7
 18678  01674C  6AE3               	clrf	plusw1,c
 18679  01674E  D037               	goto	l8082
 18680  016750                     l8078:
 18681                           
 18682                           ;stkvar	_u @ sp[(-10)+0]
 18683  016750  0EF6               	movlw	-10
 18684  016752  006F FF8C  F009    	movff	plusw1,btemp+8
 18685  016758  0EF7               	movlw	-9
 18686  01675A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18687  016760  0EF8               	movlw	-8
 18688  016762  006F FF8C  F00B    	movff	plusw1,btemp+10
 18689  016768  0EF9               	movlw	-7
 18690  01676A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18691  016770  90D8               	bcf	status,0,c
 18692  016772  3409               	rlcf	(btemp+8)^0,w,c
 18693  016774  6E05               	movwf	(btemp+4)^0,c
 18694  016776  340A               	rlcf	(btemp+9)^0,w,c
 18695  016778  6E06               	movwf	(btemp+5)^0,c
 18696  01677A  340B               	rlcf	(btemp+10)^0,w,c
 18697  01677C  6E07               	movwf	(btemp+6)^0,c
 18698  01677E  340C               	rlcf	(btemp+11)^0,w,c
 18699  016780  6E08               	movwf	(btemp+7)^0,c
 18700  016782  5005               	movf	(btemp+4)^0,w,c
 18701  016784  1006               	iorwf	(btemp+5)^0,w,c
 18702  016786  1007               	iorwf	(btemp+6)^0,w,c
 18703  016788  1008               	iorwf	(btemp+7)^0,w,c
 18704  01678A  B4D8               	btfsc	status,2,c
 18705  01678C  D018               	goto	l8082
 18706  01678E  0E00               	movlw	0
 18707  016790  6E09               	movwf	(btemp+8)^0,c
 18708  016792  0E00               	movlw	0
 18709  016794  6E0A               	movwf	(btemp+9)^0,c
 18710  016796  0E80               	movlw	128
 18711  016798  6E0B               	movwf	(btemp+10)^0,c
 18712  01679A  0EBF               	movlw	191
 18713  01679C  6E0C               	movwf	(btemp+11)^0,c
 18714                           
 18715                           ;stkvar	_u @ sp[(-10)+0]
 18716  01679E  0EF6               	movlw	-10
 18717  0167A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 18718  0167A6  0EF7               	movlw	-9
 18719  0167A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18720  0167AE  0EF8               	movlw	-8
 18721  0167B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18722  0167B6  0EF9               	movlw	-7
 18723  0167B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18724  0167BE                     l8082:
 18725                           
 18726                           ;stkvar	_u @ sp[(-10)+0]
 18727  0167BE  0EF6               	movlw	-10
 18728  0167C0  006F FF8C  F001    	movff	plusw1,btemp
 18729  0167C6  0EF7               	movlw	-9
 18730  0167C8  006F FF8C  F002    	movff	plusw1,btemp+1
 18731  0167CE  0EF8               	movlw	-8
 18732  0167D0  006F FF8C  F003    	movff	plusw1,btemp+2
 18733  0167D6  0EF9               	movlw	-7
 18734  0167D8                     L20:
 18735  0167D8  006F FF8C  F004    	movff	plusw1,btemp+3
 18736                           
 18737                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18738  0167DE  0EF2               	movlw	242
 18739  0167E0  26E1               	addwf	fsr1l,f,c
 18740  0167E2  0EFF               	movlw	255
 18741  0167E4  22E2               	addwfc	fsr1h,f,c
 18742  0167E6  0012               	return		;funcret
 18743  0167E8                     __end_of_floorf:
 18744                           	opt callstack 0
 18745                           
 18746 ;; *************** function ___fpclassifyf *****************
 18747 ;; Defined at:
 18748 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;  x               4  [STACK] float 
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;  u               4  [STACK] struct .
 18753 ;;  e               2  [STACK] int 
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  2  [STACK] int 
 18756 ;; Registers used:
 18757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18767 ;;Total ram usage:        0 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; Hardware stack levels required when called:   15
 18770 ;; This function calls:
 18771 ;;		Nothing
 18772 ;; This function is called by:
 18773 ;;		_efgtoa
 18774 ;; This function uses a reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text62
 18778  0189DA                     __ptext62:
 18779                           	opt callstack 0
 18780  0189DA                     ___fpclassifyf:
 18781                           	opt callstack 0
 18782                           
 18783                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18784  0189DA  0E06               	movlw	6
 18785  0189DC  26E1               	addwf	fsr1l,f,c
 18786  0189DE  0E00               	movlw	0
 18787  0189E0  22E2               	addwfc	fsr1h,f,c
 18788                           
 18789                           ;incstack = 0
 18790 ;; hardware stack exceeded
 18791  0189E2  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18792  0189E8  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18793  0189EE  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18794  0189F4  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18795                           
 18796                           ;stkvar	_u @ sp[(-6)+0]
 18797  0189FA  0EFA               	movlw	-6
 18798  0189FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 18799  018A02  0EFB               	movlw	-5
 18800  018A04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18801  018A0A  0EFC               	movlw	-4
 18802  018A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18803  018A12  0EFD               	movlw	-3
 18804  018A14  0060  F033  FFE3   	movff	btemp+11,plusw1
 18805                           
 18806                           ;stkvar	_x @ sp[(-6)+-4]
 18807  018A1A  0EF6               	movlw	-10
 18808  018A1C  006F FF8C  F009    	movff	plusw1,btemp+8
 18809  018A22  0EF7               	movlw	-9
 18810  018A24  006F FF8C  F00A    	movff	plusw1,btemp+9
 18811  018A2A  0EF8               	movlw	-8
 18812  018A2C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18813  018A32  0EF9               	movlw	-7
 18814  018A34  006F FF8C  F00C    	movff	plusw1,btemp+11
 18815                           
 18816                           ;stkvar	_u @ sp[(-6)+0]
 18817  018A3A  0EFA               	movlw	-6
 18818  018A3C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18819  018A42  0EFB               	movlw	-5
 18820  018A44  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18821  018A4A  0EFC               	movlw	-4
 18822  018A4C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18823  018A52  0EFD               	movlw	-3
 18824  018A54  0060  F033  FFE3   	movff	btemp+11,plusw1
 18825                           
 18826                           ;stkvar	_u @ sp[(-6)+0]
 18827  018A5A  0EFA               	movlw	-6
 18828  018A5C  006F FF8C  F009    	movff	plusw1,btemp+8
 18829  018A62  0EFB               	movlw	-5
 18830  018A64  006F FF8C  F00A    	movff	plusw1,btemp+9
 18831  018A6A  0EFC               	movlw	-4
 18832  018A6C  006F FF8C  F00B    	movff	plusw1,btemp+10
 18833  018A72  0EFD               	movlw	-3
 18834  018A74  006F FF8C  F00C    	movff	plusw1,btemp+11
 18835  018A7A  0E18               	movlw	24
 18836  018A7C  D005               	goto	u5990
 18837  018A7E                     u5995:
 18838  018A7E  90D8               	bcf	status,0,c
 18839  018A80  320C               	rrcf	(btemp+11)^0,f,c
 18840  018A82  320B               	rrcf	(btemp+10)^0,f,c
 18841  018A84  320A               	rrcf	(btemp+9)^0,f,c
 18842  018A86  3209               	rrcf	(btemp+8)^0,f,c
 18843  018A88                     u5990:
 18844  018A88  2EE8               	decfsz	wreg,f,c
 18845  018A8A  D7F9               	goto	u5995
 18846  018A8C  0060  F024  F007   	movff	btemp+8,btemp+6
 18847  018A92  0060  F028  F008   	movff	btemp+9,btemp+7
 18848  018A98  0EFF               	movlw	255
 18849  018A9A  1607               	andwf	(btemp+6)^0,f,c
 18850  018A9C  0E00               	movlw	0
 18851  018A9E  1608               	andwf	(btemp+7)^0,f,c
 18852                           
 18853                           ;stkvar	_e @ sp[(-6)+4]
 18854  018AA0  0EFE               	movlw	-2
 18855  018AA2  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18856  018AA8  0EFF               	movlw	-1
 18857  018AAA  0060  F023  FFE3   	movff	btemp+7,plusw1
 18858                           
 18859                           ;stkvar	_e @ sp[(-6)+4]
 18860  018AB0  0EFE               	movlw	-2
 18861  018AB2  006F FF8C  F001    	movff	plusw1,btemp
 18862  018AB8  0EFF               	movlw	-1
 18863  018ABA  50E3               	movf	plusw1,w,c
 18864  018ABC  1001               	iorwf	btemp^0,w,c
 18865  018ABE  A4D8               	btfss	status,2,c
 18866  018AC0  D023               	goto	l8020
 18867                           
 18868                           ;stkvar	_u @ sp[(-6)+0]
 18869  018AC2  0EFA               	movlw	-6
 18870  018AC4  006F FF8C  F009    	movff	plusw1,btemp+8
 18871  018ACA  0EFB               	movlw	-5
 18872  018ACC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18873  018AD2  0EFC               	movlw	-4
 18874  018AD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18875  018ADA  0EFD               	movlw	-3
 18876  018ADC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18877  018AE2  90D8               	bcf	status,0,c
 18878  018AE4  3409               	rlcf	(btemp+8)^0,w,c
 18879  018AE6  6E05               	movwf	(btemp+4)^0,c
 18880  018AE8  340A               	rlcf	(btemp+9)^0,w,c
 18881  018AEA  6E06               	movwf	(btemp+5)^0,c
 18882  018AEC  340B               	rlcf	(btemp+10)^0,w,c
 18883  018AEE  6E07               	movwf	(btemp+6)^0,c
 18884  018AF0  340C               	rlcf	(btemp+11)^0,w,c
 18885  018AF2  6E08               	movwf	(btemp+7)^0,c
 18886  018AF4  5005               	movf	(btemp+4)^0,w,c
 18887  018AF6  1006               	iorwf	(btemp+5)^0,w,c
 18888  018AF8  1007               	iorwf	(btemp+6)^0,w,c
 18889  018AFA  1008               	iorwf	(btemp+7)^0,w,c
 18890  018AFC  A4D8               	btfss	status,2,c
 18891  018AFE  D002               	goto	l8016
 18892  018B00  0E02               	movlw	2
 18893  018B02  D02E               	goto	L21
 18894  018B04                     l8016:
 18895  018B04  0E03               	movlw	3
 18896  018B06  D02C               	goto	L21
 18897  018B08                     l8020:
 18898                           
 18899                           ;stkvar	_e @ sp[(-6)+4]
 18900  018B08  0EFE               	movlw	-2
 18901  018B0A  28E3               	incf	plusw1,w,c
 18902  018B0C  E128               	bnz	l8026
 18903  018B0E  0EFF               	movlw	-1
 18904  018B10  50E3               	movf	plusw1,w,c
 18905  018B12  A4D8               	btfss	status,2,c
 18906  018B14  D024               	goto	l8026
 18907                           
 18908                           ;stkvar	_u @ sp[(-6)+0]
 18909  018B16  0EFA               	movlw	-6
 18910  018B18  006F FF8C  F009    	movff	plusw1,btemp+8
 18911  018B1E  0EFB               	movlw	-5
 18912  018B20  006F FF8C  F00A    	movff	plusw1,btemp+9
 18913  018B26  0EFC               	movlw	-4
 18914  018B28  006F FF8C  F00B    	movff	plusw1,btemp+10
 18915  018B2E  0EFD               	movlw	-3
 18916  018B30  006F FF8C  F00C    	movff	plusw1,btemp+11
 18917  018B36  0E09               	movlw	9
 18918  018B38                     u6035:
 18919  018B38  90D8               	bcf	status,0,c
 18920  018B3A  3609               	rlcf	(btemp+8)^0,f,c
 18921  018B3C  360A               	rlcf	(btemp+9)^0,f,c
 18922  018B3E  360B               	rlcf	(btemp+10)^0,f,c
 18923  018B40  360C               	rlcf	(btemp+11)^0,f,c
 18924  018B42  2EE8               	decfsz	wreg,f,c
 18925  018B44  D7F9               	goto	u6035
 18926  018B46  5009               	movf	(btemp+8)^0,w,c
 18927  018B48  100A               	iorwf	(btemp+9)^0,w,c
 18928  018B4A  100B               	iorwf	(btemp+10)^0,w,c
 18929  018B4C  100C               	iorwf	(btemp+11)^0,w,c
 18930  018B4E  A4D8               	btfss	status,2,c
 18931  018B50  D002               	goto	u6040
 18932  018B52  0E01               	movlw	1
 18933  018B54  D001               	goto	u6050
 18934  018B56                     u6040:
 18935  018B56  0E00               	movlw	0
 18936  018B58                     u6050:
 18937  018B58  6E01               	movwf	btemp^0,c
 18938  018B5A  6A02               	clrf	(btemp+1)^0,c
 18939  018B5C  D004               	goto	l3076
 18940  018B5E                     l8026:
 18941  018B5E  0E04               	movlw	4
 18942  018B60                     L21:
 18943  018B60  6E01               	movwf	btemp^0,c
 18944  018B62  0E00               	movlw	0
 18945  018B64  6E02               	movwf	(btemp+1)^0,c
 18946  018B66                     l3076:
 18947                           
 18948                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18949  018B66  0EF6               	movlw	246
 18950  018B68  26E1               	addwf	fsr1l,f,c
 18951  018B6A  0EFF               	movlw	255
 18952  018B6C  22E2               	addwfc	fsr1h,f,c
 18953  018B6E  0012               	return		;funcret
 18954  018B70                     __end_of___fpclassifyf:
 18955                           	opt callstack 0
 18956                           
 18957 ;; *************** function ___fltol *****************
 18958 ;; Defined at:
 18959 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;  f1              4  [STACK] int 
 18962 ;; Auto vars:     Size  Location     Type
 18963 ;;  exp1            1  [STACK] unsigned char 
 18964 ;;  sign1           1  [STACK] unsigned char 
 18965 ;; Return value:  Size  Location     Type
 18966 ;;                  4  [STACK] long 
 18967 ;; Registers used:
 18968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18969 ;; Tracked objects:
 18970 ;;		On entry : 0/0
 18971 ;;		On exit  : 0/0
 18972 ;;		Unchanged: 0/0
 18973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;Total ram usage:        0 bytes
 18979 ;; Hardware stack levels used:    1
 18980 ;; Hardware stack levels required when called:   15
 18981 ;; This function calls:
 18982 ;;		Nothing
 18983 ;; This function is called by:
 18984 ;;		_main
 18985 ;;		_calc_bsoc
 18986 ;;		_init_bsoc
 18987 ;;		_efgtoa
 18988 ;; This function uses a reentrant model
 18989 ;;
 18990                           
 18991                           	psect	text63
 18992  018E76                     __ptext63:
 18993                           	opt callstack 0
 18994  018E76                     ___fltol:
 18995                           	opt callstack 0
 18996                           
 18997                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18998  018E76  52E6               	movf	postinc1,f,c
 18999  018E78  52E6               	movf	postinc1,f,c
 19000                           
 19001                           ;stkvar	_f1 @ sp[(-2)+-4]
 19002                           
 19003                           ;incstack = 0
 19004 ;; hardware stack exceeded
 19005  018E7A  0EFA               	movlw	-6
 19006  018E7C  006F FF8C  F009    	movff	plusw1,btemp+8
 19007  018E82  0EFB               	movlw	-5
 19008  018E84  006F FF8C  F00A    	movff	plusw1,btemp+9
 19009  018E8A  0EFC               	movlw	-4
 19010  018E8C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19011  018E92  0EFD               	movlw	-3
 19012  018E94  006F FF8C  F00C    	movff	plusw1,btemp+11
 19013  018E9A  0E18               	movlw	24
 19014  018E9C  D005               	goto	u7200
 19015  018E9E                     u7205:
 19016  018E9E  90D8               	bcf	status,0,c
 19017  018EA0  320C               	rrcf	(btemp+11)^0,f,c
 19018  018EA2  320B               	rrcf	(btemp+10)^0,f,c
 19019  018EA4  320A               	rrcf	(btemp+9)^0,f,c
 19020  018EA6  3209               	rrcf	(btemp+8)^0,f,c
 19021  018EA8                     u7200:
 19022  018EA8  2EE8               	decfsz	wreg,f,c
 19023  018EAA  D7F9               	goto	u7205
 19024                           
 19025                           ;stkvar	_exp1 @ sp[(-2)+0]
 19026  018EAC  0EFE               	movlw	-2
 19027  018EAE  0060  F027  FFE3   	movff	btemp+8,plusw1
 19028  018EB4  0EFE               	movlw	-2
 19029  018EB6  50E3               	movf	plusw1,w,c
 19030  018EB8  A4D8               	btfss	status,2,c
 19031  018EBA  D006               	goto	l8646
 19032  018EBC                     u7210:
 19033  018EBC  0E00               	movlw	0
 19034  018EBE  6E01               	movwf	btemp^0,c
 19035  018EC0  6A02               	clrf	(btemp+1)^0,c
 19036  018EC2  6A03               	clrf	(btemp+2)^0,c
 19037  018EC4  6A04               	clrf	(btemp+3)^0,c
 19038  018EC6  D08B               	goto	l2692
 19039  018EC8                     l8646:
 19040                           
 19041                           ;stkvar	_f1 @ sp[(-2)+-4]
 19042  018EC8  0EFA               	movlw	-6
 19043  018ECA  006F FF8C  F009    	movff	plusw1,btemp+8
 19044  018ED0  0EFB               	movlw	-5
 19045  018ED2  006F FF8C  F00A    	movff	plusw1,btemp+9
 19046  018ED8  0EFC               	movlw	-4
 19047  018EDA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19048  018EE0  0EFD               	movlw	-3
 19049  018EE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 19050  018EE8  0E20               	movlw	32
 19051  018EEA  D005               	goto	u7220
 19052  018EEC                     u7225:
 19053  018EEC  90D8               	bcf	status,0,c
 19054  018EEE  320C               	rrcf	(btemp+11)^0,f,c
 19055  018EF0  320B               	rrcf	(btemp+10)^0,f,c
 19056  018EF2  320A               	rrcf	(btemp+9)^0,f,c
 19057  018EF4  3209               	rrcf	(btemp+8)^0,f,c
 19058  018EF6                     u7220:
 19059  018EF6  2EE8               	decfsz	wreg,f,c
 19060  018EF8  D7F9               	goto	u7225
 19061                           
 19062                           ;stkvar	_sign1 @ sp[(-2)+1]
 19063  018EFA  0EFF               	movlw	-1
 19064  018EFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 19065                           
 19066                           ;stkvar	_f1 @ sp[(-2)+-4]
 19067  018F02  0EFC               	movlw	-4
 19068  018F04  8EE3               	bsf	plusw1,7,c
 19069                           
 19070                           ;stkvar	_f1 @ sp[(-2)+-4]
 19071  018F06  50E1               	movf	fsr1l,w,c
 19072  018F08  0FFA               	addlw	-6
 19073  018F0A  6ED9               	movwf	fsr2l,c
 19074  018F0C  50E2               	movf	fsr1h,w,c
 19075  018F0E  6EDA               	movwf	fsr2h,c
 19076  018F10  0EFF               	movlw	255
 19077  018F12  22DA               	addwfc	fsr2h,f,c
 19078  018F14  0EFF               	movlw	255
 19079  018F16  16DE               	andwf	postinc2,f,c
 19080  018F18  0EFF               	movlw	255
 19081  018F1A  16DE               	andwf	postinc2,f,c
 19082  018F1C  0EFF               	movlw	255
 19083  018F1E  16DE               	andwf	postinc2,f,c
 19084  018F20  0E00               	movlw	0
 19085  018F22  16DE               	andwf	postinc2,f,c
 19086                           
 19087                           ;stkvar	_exp1 @ sp[(-2)+0]
 19088  018F24  0EFE               	movlw	-2
 19089  018F26  006F FF8C  F001    	movff	plusw1,btemp
 19090  018F2C  0E96               	movlw	150
 19091  018F2E  5E01               	subwf	btemp^0,f,c
 19092  018F30  0EFE               	movlw	-2
 19093  018F32  0060  F007  FFE3   	movff	btemp,plusw1
 19094                           
 19095                           ;stkvar	_exp1 @ sp[(-2)+0]
 19096  018F38  0EFE               	movlw	-2
 19097  018F3A  AEE3               	btfss	plusw1,7,c
 19098  018F3C  D014               	goto	l8664
 19099                           
 19100                           ;stkvar	_exp1 @ sp[(-2)+0]
 19101  018F3E  0EFE               	movlw	-2
 19102  018F40  50E3               	movf	plusw1,w,c
 19103  018F42  0A80               	xorlw	128
 19104  018F44  0F97               	addlw	151
 19105  018F46  A0D8               	btfss	status,0,c
 19106  018F48  D7B9               	goto	u7210
 19107  018F4A                     l8662:
 19108                           
 19109                           ;stkvar	_f1 @ sp[(-2)+-4]
 19110  018F4A  90D8               	bcf	status,0,c
 19111  018F4C  0EFD               	movlw	-3
 19112  018F4E  32E3               	rrcf	plusw1,f,c
 19113  018F50  0EFC               	movlw	-4
 19114  018F52  32E3               	rrcf	plusw1,f,c
 19115  018F54  0EFB               	movlw	-5
 19116  018F56  32E3               	rrcf	plusw1,f,c
 19117  018F58  0EFA               	movlw	-6
 19118  018F5A  32E3               	rrcf	plusw1,f,c
 19119                           
 19120                           ;stkvar	_exp1 @ sp[(-2)+0]
 19121  018F5C  0EFE               	movlw	-2
 19122  018F5E  2AE3               	incf	plusw1,f,c
 19123  018F60  B4D8               	btfsc	status,2,c
 19124  018F62  D018               	goto	u7270
 19125  018F64  D7F2               	goto	l8662
 19126  018F66                     l8664:
 19127                           
 19128                           ;stkvar	_exp1 @ sp[(-2)+0]
 19129  018F66  0EFE               	movlw	-2
 19130  018F68  006F FF8C  F001    	movff	plusw1,btemp
 19131  018F6E  0E1F               	movlw	31
 19132  018F70  6401               	cpfsgt	btemp^0,c
 19133  018F72  D00C               	goto	l8672
 19134  018F74  D7A3               	goto	u7210
 19135  018F76                     l8670:
 19136                           
 19137                           ;stkvar	_f1 @ sp[(-2)+-4]
 19138  018F76  90D8               	bcf	status,0,c
 19139  018F78  0EFA               	movlw	-6
 19140  018F7A  36E3               	rlcf	plusw1,f,c
 19141  018F7C  0EFB               	movlw	-5
 19142  018F7E  36E3               	rlcf	plusw1,f,c
 19143  018F80  0EFC               	movlw	-4
 19144  018F82  36E3               	rlcf	plusw1,f,c
 19145  018F84  0EFD               	movlw	-3
 19146  018F86  36E3               	rlcf	plusw1,f,c
 19147                           
 19148                           ;stkvar	_exp1 @ sp[(-2)+0]
 19149  018F88  0EFE               	movlw	-2
 19150  018F8A  06E3               	decf	plusw1,f,c
 19151  018F8C                     l8672:
 19152                           
 19153                           ;stkvar	_exp1 @ sp[(-2)+0]
 19154  018F8C  0EFE               	movlw	-2
 19155  018F8E  50E3               	movf	plusw1,w,c
 19156  018F90  A4D8               	btfss	status,2,c
 19157  018F92  D7F1               	goto	l8670
 19158  018F94                     u7270:
 19159                           
 19160                           ;stkvar	_sign1 @ sp[(-2)+1]
 19161  018F94  0EFF               	movlw	-1
 19162  018F96  50E3               	movf	plusw1,w,c
 19163  018F98  B4D8               	btfsc	status,2,c
 19164  018F9A  D011               	goto	u7290
 19165                           
 19166                           ;stkvar	_f1 @ sp[(-2)+-4]
 19167                           ;stkvar	_f1 @ sp[(-2)+-4]
 19168  018F9C  0EFA               	movlw	-6
 19169  018F9E  6CE3               	negf	plusw1,c
 19170  018FA0  0EFB               	movlw	-5
 19171  018FA2  1EE3               	comf	plusw1,f,c
 19172  018FA4  0EFC               	movlw	-4
 19173  018FA6  1EE3               	comf	plusw1,f,c
 19174  018FA8  0EFD               	movlw	-3
 19175  018FAA  1EE3               	comf	plusw1,f,c
 19176  018FAC  E308               	bnc	u7290
 19177  018FAE  0EFB               	movlw	-5
 19178  018FB0  2AE3               	incf	plusw1,f,c
 19179  018FB2  E305               	bnc	u7290
 19180  018FB4  0EFC               	movlw	-4
 19181  018FB6  2AE3               	incf	plusw1,f,c
 19182  018FB8  E302               	bnc	u7290
 19183  018FBA  0EFD               	movlw	-3
 19184  018FBC  2AE3               	incf	plusw1,f,c
 19185  018FBE                     u7290:
 19186                           
 19187                           ;stkvar	_f1 @ sp[(-2)+-4]
 19188  018FBE  0EFA               	movlw	-6
 19189  018FC0  006F FF8C  F001    	movff	plusw1,btemp
 19190  018FC6  0EFB               	movlw	-5
 19191  018FC8  006F FF8C  F002    	movff	plusw1,btemp+1
 19192  018FCE  0EFC               	movlw	-4
 19193  018FD0  006F FF8C  F003    	movff	plusw1,btemp+2
 19194  018FD6  0EFD               	movlw	-3
 19195  018FD8  006F FF8C  F004    	movff	plusw1,btemp+3
 19196  018FDE                     l2692:
 19197                           
 19198                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19199  018FDE  0EFA               	movlw	250
 19200  018FE0  26E1               	addwf	fsr1l,f,c
 19201  018FE2  0EFF               	movlw	255
 19202  018FE4  22E2               	addwfc	fsr1h,f,c
 19203  018FE6  0012               	return		;funcret
 19204  018FE8                     __end_of___fltol:
 19205                           	opt callstack 0
 19206                           
 19207 ;; *************** function ___flneg *****************
 19208 ;; Defined at:
 19209 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19210 ;; Parameters:    Size  Location     Type
 19211 ;;  f1              4  [STACK] long 
 19212 ;; Auto vars:     Size  Location     Type
 19213 ;;		None
 19214 ;; Return value:  Size  Location     Type
 19215 ;;                  4  [STACK] long 
 19216 ;; Registers used:
 19217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19218 ;; Tracked objects:
 19219 ;;		On entry : 0/0
 19220 ;;		On exit  : 0/0
 19221 ;;		Unchanged: 0/0
 19222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19227 ;;Total ram usage:        0 bytes
 19228 ;; Hardware stack levels used:    1
 19229 ;; Hardware stack levels required when called:   15
 19230 ;; This function calls:
 19231 ;;		Nothing
 19232 ;; This function is called by:
 19233 ;;		_calc_bsoc
 19234 ;;		_efgtoa
 19235 ;; This function uses a reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text64
 19239  01B418                     __ptext64:
 19240                           	opt callstack 0
 19241  01B418                     ___flneg:
 19242                           	opt callstack 0
 19243                           
 19244                           ;stkvar	_f1 @ sp[(0)+-4]
 19245                           
 19246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19247                           ;incstack = 0
 19248 ;; hardware stack exceeded
 19249  01B418  0EFC               	movlw	-4
 19250  01B41A  50E3               	movf	plusw1,w,c
 19251  01B41C  E10A               	bnz	u7190
 19252  01B41E  0EFD               	movlw	-3
 19253  01B420  50E3               	movf	plusw1,w,c
 19254  01B422  E107               	bnz	u7190
 19255  01B424  0EFE               	movlw	-2
 19256  01B426  50E3               	movf	plusw1,w,c
 19257  01B428  E104               	bnz	u7190
 19258  01B42A  0EFF               	movlw	-1
 19259  01B42C  50E3               	movf	plusw1,w,c
 19260  01B42E  B4D8               	btfsc	status,2,c
 19261  01B430  D002               	goto	l8636
 19262  01B432                     u7190:
 19263                           
 19264                           ;stkvar	_f1 @ sp[(0)+-4]
 19265  01B432  0EFF               	movlw	-1
 19266  01B434  7EE3               	btg	plusw1,7,c
 19267  01B436                     l8636:
 19268                           
 19269                           ;stkvar	_f1 @ sp[(0)+-4]
 19270  01B436  0EFC               	movlw	-4
 19271  01B438  006F FF8C  F001    	movff	plusw1,btemp
 19272  01B43E  0EFD               	movlw	-3
 19273  01B440  006F FF8C  F002    	movff	plusw1,btemp+1
 19274  01B446  0EFE               	movlw	-2
 19275  01B448  006F FF8C  F003    	movff	plusw1,btemp+2
 19276  01B44E  0EFF               	movlw	-1
 19277  01B450  006F FF8C  F004    	movff	plusw1,btemp+3
 19278                           
 19279                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19280  01B456  52E5               	movf	postdec1,f,c
 19281  01B458  52E5               	movf	postdec1,f,c
 19282  01B45A  52E5               	movf	postdec1,f,c
 19283  01B45C  52E5               	movf	postdec1,f,c
 19284  01B45E  0012               	return		;funcret
 19285  01B460                     __end_of___flneg:
 19286                           	opt callstack 0
 19287                           
 19288 ;; *************** function ___fleq *****************
 19289 ;; Defined at:
 19290 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19291 ;; Parameters:    Size  Location     Type
 19292 ;;  ff1             4  [STACK] long 
 19293 ;;  ff2             4  [STACK] long 
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;		None
 19296 ;; Return value:  Size  Location     Type
 19297 ;;		None               void
 19298 ;; Registers used:
 19299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19300 ;; Tracked objects:
 19301 ;;		On entry : 0/0
 19302 ;;		On exit  : 0/0
 19303 ;;		Unchanged: 0/0
 19304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19309 ;;Total ram usage:        0 bytes
 19310 ;; Hardware stack levels used:    1
 19311 ;; Hardware stack levels required when called:   15
 19312 ;; This function calls:
 19313 ;;		Nothing
 19314 ;; This function is called by:
 19315 ;;		_efgtoa
 19316 ;; This function uses a reentrant model
 19317 ;;
 19318                           
 19319                           	psect	text65
 19320  01A356                     __ptext65:
 19321                           	opt callstack 0
 19322  01A356                     ___fleq:
 19323                           	opt callstack 0
 19324                           
 19325                           ;stkvar	_ff1 @ sp[(0)+-4]
 19326                           
 19327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19328                           ;incstack = 0
 19329 ;; hardware stack exceeded
 19330  01A356  50E1               	movf	fsr1l,w,c
 19331  01A358  0FFC               	addlw	-4
 19332  01A35A  6ED9               	movwf	fsr2l,c
 19333  01A35C  50E2               	movf	fsr1h,w,c
 19334  01A35E  6EDA               	movwf	fsr2h,c
 19335  01A360  0EFF               	movlw	255
 19336  01A362  22DA               	addwfc	fsr2h,f,c
 19337  01A364  0E00               	movlw	0
 19338  01A366  14DE               	andwf	postinc2,w,c
 19339  01A368  6E09               	movwf	(btemp+8)^0,c
 19340  01A36A  0E00               	movlw	0
 19341  01A36C  14DE               	andwf	postinc2,w,c
 19342  01A36E  6E0A               	movwf	(btemp+9)^0,c
 19343  01A370  0E80               	movlw	128
 19344  01A372  14DE               	andwf	postinc2,w,c
 19345  01A374  6E0B               	movwf	(btemp+10)^0,c
 19346  01A376  0E7F               	movlw	127
 19347  01A378  14DE               	andwf	postinc2,w,c
 19348  01A37A  6E0C               	movwf	(btemp+11)^0,c
 19349  01A37C  5009               	movf	(btemp+8)^0,w,c
 19350  01A37E  100A               	iorwf	(btemp+9)^0,w,c
 19351  01A380  100B               	iorwf	(btemp+10)^0,w,c
 19352  01A382  100C               	iorwf	(btemp+11)^0,w,c
 19353  01A384  A4D8               	btfss	status,2,c
 19354  01A386  D008               	goto	l8594
 19355                           
 19356                           ;stkvar	_ff1 @ sp[(0)+-4]
 19357  01A388  0EFC               	movlw	-4
 19358  01A38A  6AE3               	clrf	plusw1,c
 19359  01A38C  0EFD               	movlw	-3
 19360  01A38E  6AE3               	clrf	plusw1,c
 19361  01A390  0EFE               	movlw	-2
 19362  01A392  6AE3               	clrf	plusw1,c
 19363  01A394  0EFF               	movlw	-1
 19364  01A396  6AE3               	clrf	plusw1,c
 19365  01A398                     l8594:
 19366                           
 19367                           ;stkvar	_ff2 @ sp[(0)+-8]
 19368  01A398  50E1               	movf	fsr1l,w,c
 19369  01A39A  0FF8               	addlw	-8
 19370  01A39C  6ED9               	movwf	fsr2l,c
 19371  01A39E  50E2               	movf	fsr1h,w,c
 19372  01A3A0  6EDA               	movwf	fsr2h,c
 19373  01A3A2  0EFF               	movlw	255
 19374  01A3A4  22DA               	addwfc	fsr2h,f,c
 19375  01A3A6  0E00               	movlw	0
 19376  01A3A8  14DE               	andwf	postinc2,w,c
 19377  01A3AA  6E09               	movwf	(btemp+8)^0,c
 19378  01A3AC  0E00               	movlw	0
 19379  01A3AE  14DE               	andwf	postinc2,w,c
 19380  01A3B0  6E0A               	movwf	(btemp+9)^0,c
 19381  01A3B2  0E80               	movlw	128
 19382  01A3B4  14DE               	andwf	postinc2,w,c
 19383  01A3B6  6E0B               	movwf	(btemp+10)^0,c
 19384  01A3B8  0E7F               	movlw	127
 19385  01A3BA  14DE               	andwf	postinc2,w,c
 19386  01A3BC  6E0C               	movwf	(btemp+11)^0,c
 19387  01A3BE  5009               	movf	(btemp+8)^0,w,c
 19388  01A3C0  100A               	iorwf	(btemp+9)^0,w,c
 19389  01A3C2  100B               	iorwf	(btemp+10)^0,w,c
 19390  01A3C4  100C               	iorwf	(btemp+11)^0,w,c
 19391  01A3C6  A4D8               	btfss	status,2,c
 19392  01A3C8  D008               	goto	l8598
 19393                           
 19394                           ;stkvar	_ff2 @ sp[(0)+-8]
 19395  01A3CA  0EF8               	movlw	-8
 19396  01A3CC  6AE3               	clrf	plusw1,c
 19397  01A3CE  0EF9               	movlw	-7
 19398  01A3D0  6AE3               	clrf	plusw1,c
 19399  01A3D2  0EFA               	movlw	-6
 19400  01A3D4  6AE3               	clrf	plusw1,c
 19401  01A3D6  0EFB               	movlw	-5
 19402  01A3D8  6AE3               	clrf	plusw1,c
 19403  01A3DA                     l8598:
 19404                           
 19405                           ;stkvar	_ff2 @ sp[(0)+-8]
 19406                           ;stkvar	_ff1 @ sp[(0)+-4]
 19407  01A3DA  50E1               	movf	fsr1l,w,c
 19408  01A3DC  0FFC               	addlw	-4
 19409  01A3DE  6ED9               	movwf	fsr2l,c
 19410  01A3E0  50E2               	movf	fsr1h,w,c
 19411  01A3E2  6EDA               	movwf	fsr2h,c
 19412  01A3E4  0EFF               	movlw	255
 19413  01A3E6  22DA               	addwfc	fsr2h,f,c
 19414  01A3E8  0EF8               	movlw	-8
 19415  01A3EA  50E3               	movf	plusw1,w,c
 19416  01A3EC  18DE               	xorwf	postinc2,w,c
 19417  01A3EE  E10D               	bnz	u7130
 19418  01A3F0  0EF9               	movlw	-7
 19419  01A3F2  50E3               	movf	plusw1,w,c
 19420  01A3F4  18DE               	xorwf	postinc2,w,c
 19421  01A3F6  E109               	bnz	u7130
 19422  01A3F8  0EFA               	movlw	-6
 19423  01A3FA  50E3               	movf	plusw1,w,c
 19424  01A3FC  18DE               	xorwf	postinc2,w,c
 19425  01A3FE  E105               	bnz	u7130
 19426  01A400  0EFB               	movlw	-5
 19427  01A402  50E3               	movf	plusw1,w,c
 19428  01A404  18DE               	xorwf	postinc2,w,c
 19429  01A406  B4D8               	btfsc	status,2,c
 19430  01A408  D002               	goto	l8602
 19431  01A40A                     u7130:
 19432  01A40A  9001               	bcf	btemp& (0+255),0,c
 19433  01A40C  D001               	goto	l2654
 19434  01A40E                     l8602:
 19435  01A40E  8001               	bsf	btemp& (0+255),0,c
 19436  01A410                     l2654:
 19437                           
 19438                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19439  01A410  0EF8               	movlw	248
 19440  01A412  26E1               	addwf	fsr1l,f,c
 19441  01A414  0EFF               	movlw	255
 19442  01A416  22E2               	addwfc	fsr1h,f,c
 19443  01A418  0012               	return		;funcret
 19444  01A41A                     __end_of___fleq:
 19445                           	opt callstack 0
 19446                           
 19447 ;; *************** function ___awmod *****************
 19448 ;; Defined at:
 19449 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19450 ;; Parameters:    Size  Location     Type
 19451 ;;  dividend        2  [STACK] int 
 19452 ;;  divisor         2  [STACK] int 
 19453 ;; Auto vars:     Size  Location     Type
 19454 ;;  sign            1  [STACK] unsigned char 
 19455 ;;  counter         1  [STACK] unsigned char 
 19456 ;; Return value:  Size  Location     Type
 19457 ;;                  2  [STACK] int 
 19458 ;; Registers used:
 19459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19460 ;; Tracked objects:
 19461 ;;		On entry : 0/0
 19462 ;;		On exit  : 0/0
 19463 ;;		Unchanged: 0/0
 19464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19469 ;;Total ram usage:        0 bytes
 19470 ;; Hardware stack levels used:    1
 19471 ;; Hardware stack levels required when called:   15
 19472 ;; This function calls:
 19473 ;;		Nothing
 19474 ;; This function is called by:
 19475 ;;		_efgtoa
 19476 ;; This function uses a reentrant model
 19477 ;;
 19478                           
 19479                           	psect	text66
 19480  0198C4                     __ptext66:
 19481                           	opt callstack 0
 19482  0198C4                     ___awmod:
 19483                           	opt callstack 0
 19484                           
 19485                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19486  0198C4  52E6               	movf	postinc1,f,c
 19487  0198C6  52E6               	movf	postinc1,f,c
 19488                           
 19489                           ;stkvar	_sign @ sp[(-2)+0]
 19490                           
 19491                           ;incstack = 0
 19492 ;; hardware stack exceeded
 19493  0198C8  0EFE               	movlw	-2
 19494  0198CA  6AE3               	clrf	plusw1,c
 19495                           
 19496                           ;stkvar	_dividend @ sp[(-2)+-2]
 19497  0198CC  0EFD               	movlw	-3
 19498  0198CE  AEE3               	btfss	plusw1,7,c
 19499  0198D0  D009               	goto	l8560
 19500                           
 19501                           ;stkvar	_dividend @ sp[(-2)+-2]
 19502                           ;stkvar	_dividend @ sp[(-2)+-2]
 19503  0198D2  0EFC               	movlw	-4
 19504  0198D4  6CE3               	negf	plusw1,c
 19505  0198D6  0EFD               	movlw	-3
 19506  0198D8  1EE3               	comf	plusw1,f,c
 19507  0198DA  B0D8               	btfsc	status,0,c
 19508  0198DC  2AE3               	incf	plusw1,f,c
 19509                           
 19510                           ;stkvar	_sign @ sp[(-2)+0]
 19511  0198DE  0EFE               	movlw	-2
 19512  0198E0  6AE3               	clrf	plusw1,c
 19513  0198E2  2AE3               	incf	plusw1,f,c
 19514  0198E4                     l8560:
 19515                           
 19516                           ;stkvar	_divisor @ sp[(-2)+-4]
 19517  0198E4  0EFB               	movlw	-5
 19518  0198E6  AEE3               	btfss	plusw1,7,c
 19519  0198E8  D006               	goto	l8564
 19520                           
 19521                           ;stkvar	_divisor @ sp[(-2)+-4]
 19522                           ;stkvar	_divisor @ sp[(-2)+-4]
 19523  0198EA  0EFA               	movlw	-6
 19524  0198EC  6CE3               	negf	plusw1,c
 19525  0198EE  0EFB               	movlw	-5
 19526  0198F0  1EE3               	comf	plusw1,f,c
 19527  0198F2  B0D8               	btfsc	status,0,c
 19528  0198F4  2AE3               	incf	plusw1,f,c
 19529  0198F6                     l8564:
 19530                           
 19531                           ;stkvar	_divisor @ sp[(-2)+-4]
 19532  0198F6  0EFA               	movlw	-6
 19533  0198F8  006F FF8C  F001    	movff	plusw1,btemp
 19534  0198FE  0EFB               	movlw	-5
 19535  019900  50E3               	movf	plusw1,w,c
 19536  019902  1001               	iorwf	btemp^0,w,c
 19537  019904  B4D8               	btfsc	status,2,c
 19538  019906  D053               	goto	u7090
 19539                           
 19540                           ;stkvar	_counter @ sp[(-2)+1]
 19541  019908  0EFF               	movlw	-1
 19542  01990A  6AE3               	clrf	plusw1,c
 19543  01990C  D012               	goto	L22
 19544  01990E                     l8568:
 19545                           
 19546                           ;stkvar	_divisor @ sp[(-2)+-4]
 19547  01990E  0EFA               	movlw	-6
 19548  019910  50E3               	movf	plusw1,w,c
 19549  019912  90D8               	bcf	status,0,c
 19550  019914  34E8               	rlcf	wreg,w,c
 19551  019916  6E01               	movwf	btemp^0,c
 19552  019918  0EFA               	movlw	-6
 19553  01991A  0060  F007  FFE3   	movff	btemp,plusw1
 19554  019920  0EFB               	movlw	-5
 19555  019922  50E3               	movf	plusw1,w,c
 19556  019924  34E8               	rlcf	wreg,w,c
 19557  019926  6E01               	movwf	btemp^0,c
 19558  019928  0EFB               	movlw	-5
 19559  01992A  0060  F007  FFE3   	movff	btemp,plusw1
 19560                           
 19561                           ;stkvar	_counter @ sp[(-2)+1]
 19562  019930  0EFF               	movlw	-1
 19563  019932                     L22:
 19564  019932  2AE3               	incf	plusw1,f,c
 19565                           
 19566                           ;stkvar	_divisor @ sp[(-2)+-4]
 19567  019934  0EFB               	movlw	-5
 19568  019936  AEE3               	btfss	plusw1,7,c
 19569  019938  D7EA               	goto	l8568
 19570  01993A                     u7070:
 19571                           
 19572                           ;stkvar	_divisor @ sp[(-2)+-4]
 19573  01993A  0EFA               	movlw	-6
 19574  01993C  006F FF8C  F00B    	movff	plusw1,btemp+10
 19575  019942  0EFB               	movlw	-5
 19576  019944  006F FF8C  F00C    	movff	plusw1,btemp+11
 19577                           
 19578                           ;stkvar	_dividend @ sp[(-2)+-2]
 19579  01994A  0EFC               	movlw	-4
 19580  01994C  006F FF8C  F009    	movff	plusw1,btemp+8
 19581  019952  0EFD               	movlw	-3
 19582  019954  006F FF8C  F00A    	movff	plusw1,btemp+9
 19583  01995A  500B               	movf	(btemp+10)^0,w,c
 19584  01995C  5C09               	subwf	(btemp+8)^0,w,c
 19585  01995E  500C               	movf	(btemp+11)^0,w,c
 19586  019960  580A               	subwfb	(btemp+9)^0,w,c
 19587  019962  A0D8               	btfss	status,0,c
 19588  019964  D014               	goto	l8578
 19589                           
 19590                           ;stkvar	_divisor @ sp[(-2)+-4]
 19591                           ;stkvar	_dividend @ sp[(-2)+-2]
 19592  019966  0EFC               	movlw	-4
 19593  019968  50E3               	movf	plusw1,w,c
 19594  01996A  6E01               	movwf	btemp^0,c
 19595  01996C  0EFA               	movlw	-6
 19596  01996E  50E3               	movf	plusw1,w,c
 19597  019970  5E01               	subwf	btemp^0,f,c
 19598  019972  0EFC               	movlw	-4
 19599  019974  0060  F007  FFE3   	movff	btemp,plusw1
 19600  01997A  0EFD               	movlw	-3
 19601  01997C  50E3               	movf	plusw1,w,c
 19602  01997E  6E01               	movwf	btemp^0,c
 19603  019980  0EFB               	movlw	-5
 19604  019982  50E3               	movf	plusw1,w,c
 19605  019984  5A01               	subwfb	btemp^0,f,c
 19606  019986  0EFD               	movlw	-3
 19607  019988  0060  F007  FFE3   	movff	btemp,plusw1
 19608  01998E                     l8578:
 19609                           
 19610                           ;stkvar	_divisor @ sp[(-2)+-4]
 19611  01998E  90D8               	bcf	status,0,c
 19612  019990  0EFB               	movlw	-5
 19613  019992  32E3               	rrcf	plusw1,f,c
 19614  019994  0EFA               	movlw	-6
 19615  019996  32E3               	rrcf	plusw1,f,c
 19616                           
 19617                           ;stkvar	_counter @ sp[(-2)+1]
 19618  019998  0EFF               	movlw	-1
 19619  01999A  50E3               	movf	plusw1,w,c
 19620  01999C  6E01               	movwf	btemp^0,c
 19621  01999E  0E01               	movlw	1
 19622  0199A0  5E01               	subwf	btemp^0,f,c
 19623  0199A2  0EFF               	movlw	-1
 19624  0199A4  0060  F007  FFE3   	movff	btemp,plusw1
 19625  0199AA  A4D8               	btfss	status,2,c
 19626  0199AC  D7C6               	goto	u7070
 19627  0199AE                     u7090:
 19628                           
 19629                           ;stkvar	_sign @ sp[(-2)+0]
 19630  0199AE  0EFE               	movlw	-2
 19631  0199B0  50E3               	movf	plusw1,w,c
 19632  0199B2  B4D8               	btfsc	status,2,c
 19633  0199B4  D006               	goto	l8586
 19634                           
 19635                           ;stkvar	_dividend @ sp[(-2)+-2]
 19636                           ;stkvar	_dividend @ sp[(-2)+-2]
 19637  0199B6  0EFC               	movlw	-4
 19638  0199B8  6CE3               	negf	plusw1,c
 19639  0199BA  0EFD               	movlw	-3
 19640  0199BC  1EE3               	comf	plusw1,f,c
 19641  0199BE  B0D8               	btfsc	status,0,c
 19642  0199C0  2AE3               	incf	plusw1,f,c
 19643  0199C2                     l8586:
 19644                           
 19645                           ;stkvar	_dividend @ sp[(-2)+-2]
 19646  0199C2  0EFC               	movlw	-4
 19647  0199C4  006F FF8C  F001    	movff	plusw1,btemp
 19648  0199CA  0EFD               	movlw	-3
 19649  0199CC  006F FF8C  F002    	movff	plusw1,btemp+1
 19650                           
 19651                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19652  0199D2  0EFA               	movlw	250
 19653  0199D4  26E1               	addwf	fsr1l,f,c
 19654  0199D6  0EFF               	movlw	255
 19655  0199D8  22E2               	addwfc	fsr1h,f,c
 19656  0199DA  0012               	return		;funcret
 19657  0199DC                     __end_of___awmod:
 19658                           	opt callstack 0
 19659                           
 19660 ;; *************** function ___awdiv *****************
 19661 ;; Defined at:
 19662 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19663 ;; Parameters:    Size  Location     Type
 19664 ;;  dividend        2  [STACK] int 
 19665 ;;  divisor         2  [STACK] int 
 19666 ;; Auto vars:     Size  Location     Type
 19667 ;;  quotient        2  [STACK] int 
 19668 ;;  sign            1  [STACK] unsigned char 
 19669 ;;  counter         1  [STACK] unsigned char 
 19670 ;; Return value:  Size  Location     Type
 19671 ;;                  2  [STACK] int 
 19672 ;; Registers used:
 19673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19674 ;; Tracked objects:
 19675 ;;		On entry : 0/0
 19676 ;;		On exit  : 0/0
 19677 ;;		Unchanged: 0/0
 19678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19683 ;;Total ram usage:        0 bytes
 19684 ;; Hardware stack levels used:    1
 19685 ;; Hardware stack levels required when called:   15
 19686 ;; This function calls:
 19687 ;;		Nothing
 19688 ;; This function is called by:
 19689 ;;		_efgtoa
 19690 ;; This function uses a reentrant model
 19691 ;;
 19692                           
 19693                           	psect	text67
 19694  0192AE                     __ptext67:
 19695                           	opt callstack 0
 19696  0192AE                     ___awdiv:
 19697                           	opt callstack 0
 19698                           
 19699                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19700  0192AE  52E6               	movf	postinc1,f,c
 19701  0192B0  52E6               	movf	postinc1,f,c
 19702  0192B2  52E6               	movf	postinc1,f,c
 19703  0192B4  52E6               	movf	postinc1,f,c
 19704                           
 19705                           ;stkvar	_sign @ sp[(-4)+2]
 19706                           
 19707                           ;incstack = 0
 19708 ;; hardware stack exceeded
 19709  0192B6  0EFE               	movlw	-2
 19710  0192B8  6AE3               	clrf	plusw1,c
 19711                           
 19712                           ;stkvar	_divisor @ sp[(-4)+-4]
 19713  0192BA  0EF9               	movlw	-7
 19714  0192BC  AEE3               	btfss	plusw1,7,c
 19715  0192BE  D009               	goto	l8514
 19716                           
 19717                           ;stkvar	_divisor @ sp[(-4)+-4]
 19718                           ;stkvar	_divisor @ sp[(-4)+-4]
 19719  0192C0  0EF8               	movlw	-8
 19720  0192C2  6CE3               	negf	plusw1,c
 19721  0192C4  0EF9               	movlw	-7
 19722  0192C6  1EE3               	comf	plusw1,f,c
 19723  0192C8  B0D8               	btfsc	status,0,c
 19724  0192CA  2AE3               	incf	plusw1,f,c
 19725                           
 19726                           ;stkvar	_sign @ sp[(-4)+2]
 19727  0192CC  0EFE               	movlw	-2
 19728  0192CE  6AE3               	clrf	plusw1,c
 19729  0192D0  2AE3               	incf	plusw1,f,c
 19730  0192D2                     l8514:
 19731                           
 19732                           ;stkvar	_dividend @ sp[(-4)+-2]
 19733  0192D2  0EFB               	movlw	-5
 19734  0192D4  AEE3               	btfss	plusw1,7,c
 19735  0192D6  D008               	goto	l8520
 19736                           
 19737                           ;stkvar	_dividend @ sp[(-4)+-2]
 19738                           ;stkvar	_dividend @ sp[(-4)+-2]
 19739  0192D8  0EFA               	movlw	-6
 19740  0192DA  6CE3               	negf	plusw1,c
 19741  0192DC  0EFB               	movlw	-5
 19742  0192DE  1EE3               	comf	plusw1,f,c
 19743  0192E0  B0D8               	btfsc	status,0,c
 19744  0192E2  2AE3               	incf	plusw1,f,c
 19745                           
 19746                           ;stkvar	_sign @ sp[(-4)+2]
 19747  0192E4  0EFE               	movlw	-2
 19748  0192E6  70E3               	btg	plusw1,0,c
 19749  0192E8                     l8520:
 19750                           
 19751                           ;stkvar	_quotient @ sp[(-4)+0]
 19752  0192E8  0EFC               	movlw	-4
 19753  0192EA  6AE3               	clrf	plusw1,c
 19754  0192EC  0EFD               	movlw	-3
 19755  0192EE  6AE3               	clrf	plusw1,c
 19756                           
 19757                           ;stkvar	_divisor @ sp[(-4)+-4]
 19758  0192F0  0EF8               	movlw	-8
 19759  0192F2  006F FF8C  F001    	movff	plusw1,btemp
 19760  0192F8  0EF9               	movlw	-7
 19761  0192FA  50E3               	movf	plusw1,w,c
 19762  0192FC  1001               	iorwf	btemp^0,w,c
 19763  0192FE  B4D8               	btfsc	status,2,c
 19764  019300  D066               	goto	u7020
 19765                           
 19766                           ;stkvar	_counter @ sp[(-4)+3]
 19767  019302  0EFF               	movlw	-1
 19768  019304  6AE3               	clrf	plusw1,c
 19769  019306  D012               	goto	L23
 19770  019308                     l8526:
 19771                           
 19772                           ;stkvar	_divisor @ sp[(-4)+-4]
 19773  019308  0EF8               	movlw	-8
 19774  01930A  50E3               	movf	plusw1,w,c
 19775  01930C  90D8               	bcf	status,0,c
 19776  01930E  34E8               	rlcf	wreg,w,c
 19777  019310  6E01               	movwf	btemp^0,c
 19778  019312  0EF8               	movlw	-8
 19779  019314  0060  F007  FFE3   	movff	btemp,plusw1
 19780  01931A  0EF9               	movlw	-7
 19781  01931C  50E3               	movf	plusw1,w,c
 19782  01931E  34E8               	rlcf	wreg,w,c
 19783  019320  6E01               	movwf	btemp^0,c
 19784  019322  0EF9               	movlw	-7
 19785  019324  0060  F007  FFE3   	movff	btemp,plusw1
 19786                           
 19787                           ;stkvar	_counter @ sp[(-4)+3]
 19788  01932A  0EFF               	movlw	-1
 19789  01932C                     L23:
 19790  01932C  2AE3               	incf	plusw1,f,c
 19791                           
 19792                           ;stkvar	_divisor @ sp[(-4)+-4]
 19793  01932E  0EF9               	movlw	-7
 19794  019330  AEE3               	btfss	plusw1,7,c
 19795  019332  D7EA               	goto	l8526
 19796  019334                     u7000:
 19797                           
 19798                           ;stkvar	_quotient @ sp[(-4)+0]
 19799  019334  0EFC               	movlw	-4
 19800  019336  50E3               	movf	plusw1,w,c
 19801  019338  90D8               	bcf	status,0,c
 19802  01933A  34E8               	rlcf	wreg,w,c
 19803  01933C  6E01               	movwf	btemp^0,c
 19804  01933E  0EFC               	movlw	-4
 19805  019340  0060  F007  FFE3   	movff	btemp,plusw1
 19806  019346  0EFD               	movlw	-3
 19807  019348  50E3               	movf	plusw1,w,c
 19808  01934A  34E8               	rlcf	wreg,w,c
 19809  01934C  6E01               	movwf	btemp^0,c
 19810  01934E  0EFD               	movlw	-3
 19811  019350  0060  F007  FFE3   	movff	btemp,plusw1
 19812                           
 19813                           ;stkvar	_divisor @ sp[(-4)+-4]
 19814  019356  0EF8               	movlw	-8
 19815  019358  006F FF8C  F00B    	movff	plusw1,btemp+10
 19816  01935E  0EF9               	movlw	-7
 19817  019360  006F FF8C  F00C    	movff	plusw1,btemp+11
 19818                           
 19819                           ;stkvar	_dividend @ sp[(-4)+-2]
 19820  019366  0EFA               	movlw	-6
 19821  019368  006F FF8C  F009    	movff	plusw1,btemp+8
 19822  01936E  0EFB               	movlw	-5
 19823  019370  006F FF8C  F00A    	movff	plusw1,btemp+9
 19824  019376  500B               	movf	(btemp+10)^0,w,c
 19825  019378  5C09               	subwf	(btemp+8)^0,w,c
 19826  01937A  500C               	movf	(btemp+11)^0,w,c
 19827  01937C  580A               	subwfb	(btemp+9)^0,w,c
 19828  01937E  A0D8               	btfss	status,0,c
 19829  019380  D016               	goto	l8540
 19830                           
 19831                           ;stkvar	_divisor @ sp[(-4)+-4]
 19832                           ;stkvar	_dividend @ sp[(-4)+-2]
 19833  019382  0EFA               	movlw	-6
 19834  019384  50E3               	movf	plusw1,w,c
 19835  019386  6E01               	movwf	btemp^0,c
 19836  019388  0EF8               	movlw	-8
 19837  01938A  50E3               	movf	plusw1,w,c
 19838  01938C  5E01               	subwf	btemp^0,f,c
 19839  01938E  0EFA               	movlw	-6
 19840  019390  0060  F007  FFE3   	movff	btemp,plusw1
 19841  019396  0EFB               	movlw	-5
 19842  019398  50E3               	movf	plusw1,w,c
 19843  01939A  6E01               	movwf	btemp^0,c
 19844  01939C  0EF9               	movlw	-7
 19845  01939E  50E3               	movf	plusw1,w,c
 19846  0193A0  5A01               	subwfb	btemp^0,f,c
 19847  0193A2  0EFB               	movlw	-5
 19848  0193A4  0060  F007  FFE3   	movff	btemp,plusw1
 19849                           
 19850                           ;stkvar	_quotient @ sp[(-4)+0]
 19851  0193AA  0EFC               	movlw	-4
 19852  0193AC  80E3               	bsf	plusw1,0,c
 19853  0193AE                     l8540:
 19854                           
 19855                           ;stkvar	_divisor @ sp[(-4)+-4]
 19856  0193AE  90D8               	bcf	status,0,c
 19857  0193B0  0EF9               	movlw	-7
 19858  0193B2  32E3               	rrcf	plusw1,f,c
 19859  0193B4  0EF8               	movlw	-8
 19860  0193B6  32E3               	rrcf	plusw1,f,c
 19861                           
 19862                           ;stkvar	_counter @ sp[(-4)+3]
 19863  0193B8  0EFF               	movlw	-1
 19864  0193BA  50E3               	movf	plusw1,w,c
 19865  0193BC  6E01               	movwf	btemp^0,c
 19866  0193BE  0E01               	movlw	1
 19867  0193C0  5E01               	subwf	btemp^0,f,c
 19868  0193C2  0EFF               	movlw	-1
 19869  0193C4  0060  F007  FFE3   	movff	btemp,plusw1
 19870  0193CA  A4D8               	btfss	status,2,c
 19871  0193CC  D7B3               	goto	u7000
 19872  0193CE                     u7020:
 19873                           
 19874                           ;stkvar	_sign @ sp[(-4)+2]
 19875  0193CE  0EFE               	movlw	-2
 19876  0193D0  50E3               	movf	plusw1,w,c
 19877  0193D2  B4D8               	btfsc	status,2,c
 19878  0193D4  D006               	goto	l8548
 19879                           
 19880                           ;stkvar	_quotient @ sp[(-4)+0]
 19881                           ;stkvar	_quotient @ sp[(-4)+0]
 19882  0193D6  0EFC               	movlw	-4
 19883  0193D8  6CE3               	negf	plusw1,c
 19884  0193DA  0EFD               	movlw	-3
 19885  0193DC  1EE3               	comf	plusw1,f,c
 19886  0193DE  B0D8               	btfsc	status,0,c
 19887  0193E0  2AE3               	incf	plusw1,f,c
 19888  0193E2                     l8548:
 19889                           
 19890                           ;stkvar	_quotient @ sp[(-4)+0]
 19891  0193E2  0EFC               	movlw	-4
 19892  0193E4  006F FF8C  F001    	movff	plusw1,btemp
 19893  0193EA  0EFD               	movlw	-3
 19894  0193EC  006F FF8C  F002    	movff	plusw1,btemp+1
 19895                           
 19896                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19897  0193F2  0EF8               	movlw	248
 19898  0193F4  26E1               	addwf	fsr1l,f,c
 19899  0193F6  0EFF               	movlw	255
 19900  0193F8  22E2               	addwfc	fsr1h,f,c
 19901  0193FA  0012               	return		;funcret
 19902  0193FC                     __end_of___awdiv:
 19903                           	opt callstack 0
 19904                           
 19905 ;; *************** function _dtoa *****************
 19906 ;; Defined at:
 19907 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19908 ;; Parameters:    Size  Location     Type
 19909 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19910 ;;		 -> f(6), NULL(0), 
 19911 ;;  d               8  [STACK] long long 
 19912 ;; Auto vars:     Size  Location     Type
 19913 ;;  n               8  [STACK] long long 
 19914 ;;  i               2  [STACK] int 
 19915 ;;  s               2  [STACK] int 
 19916 ;;  w               2  [STACK] int 
 19917 ;;  p               2  [STACK] int 
 19918 ;; Return value:  Size  Location     Type
 19919 ;;                  2  [STACK] int 
 19920 ;; Registers used:
 19921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19922 ;; Tracked objects:
 19923 ;;		On entry : 0/0
 19924 ;;		On exit  : 0/0
 19925 ;;		Unchanged: 0/0
 19926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19931 ;;Total ram usage:        0 bytes
 19932 ;; Hardware stack levels used:    1
 19933 ;; Hardware stack levels required when called:   20
 19934 ;; This function calls:
 19935 ;;		___aodiv
 19936 ;;		___aomod
 19937 ;;		_abs
 19938 ;;		_pad
 19939 ;; This function is called by:
 19940 ;;		_vfpfcnvrt
 19941 ;; This function uses a reentrant model
 19942 ;;
 19943                           
 19944                           	psect	text68
 19945  0157F6                     __ptext68:
 19946                           	opt callstack 0
 19947  0157F6                     _dtoa:
 19948                           	opt callstack 0
 19949                           
 19950                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19951  0157F6  0E12               	movlw	18
 19952  0157F8  26E1               	addwf	fsr1l,f,c
 19953  0157FA  0E00               	movlw	0
 19954  0157FC  22E2               	addwfc	fsr1h,f,c
 19955                           
 19956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19957                           ;stkvar	_d @ sp[(-18)+-10]
 19958                           
 19959                           ;incstack = 0
 19960 ;; hardware stack exceeded
 19961  0157FE  0EE4               	movlw	228
 19962  015800  24E1               	addwf	fsr1l,w,c
 19963  015802  6ED9               	movwf	fsr2l,c
 19964  015804  0EFF               	movlw	255
 19965  015806  20E2               	addwfc	fsr1h,w,c
 19966  015808  6EDA               	movwf	fsr2h,c
 19967                           
 19968                           ;stkvar	_n @ sp[(-18)+2]
 19969  01580A  0E08               	movlw	8
 19970  01580C  6E01               	movwf	btemp^0,c
 19971  01580E  0EF0               	movlw	-16
 19972  015810                     us1088999:
 19973  015810  006F FF7B FFE3     	movff	postinc2,plusw1
 19974  015816  28E8               	incf	wreg,w,c
 19975  015818  2E01               	decfsz	btemp^0,f,c
 19976  01581A  D7FA               	bra	us1088999
 19977                           
 19978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19979                           ;stkvar	_n @ sp[(-18)+2]
 19980  01581C  0EF7               	movlw	-9
 19981  01581E  AEE3               	btfss	plusw1,7,c
 19982  015820  D002               	goto	u10890
 19983  015822  0E01               	movlw	1
 19984  015824  D001               	goto	u10900
 19985  015826                     u10890:
 19986  015826  0E00               	movlw	0
 19987  015828                     u10900:
 19988  015828  6E0B               	movwf	(btemp+10)^0,c
 19989  01582A  6A0C               	clrf	(btemp+11)^0,c
 19990                           
 19991                           ;stkvar	_s @ sp[(-18)+12]
 19992  01582C  0EFA               	movlw	-6
 19993  01582E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19994  015834  0EFB               	movlw	-5
 19995  015836  0060  F033  FFE3   	movff	btemp+11,plusw1
 19996                           
 19997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19998                           ;stkvar	_s @ sp[(-18)+12]
 19999  01583C  0EFA               	movlw	-6
 20000  01583E  006F FF8C  F001    	movff	plusw1,btemp
 20001  015844  0EFB               	movlw	-5
 20002  015846  50E3               	movf	plusw1,w,c
 20003  015848  1001               	iorwf	btemp^0,w,c
 20004  01584A  B4D8               	btfsc	status,2,c
 20005  01584C  D025               	goto	u10920
 20006                           
 20007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20008                           ;stkvar	_n @ sp[(-18)+2]
 20009                           ;stkvar	_n @ sp[(-18)+2]
 20010  01584E  0EF0               	movlw	-16
 20011  015850  6CE3               	negf	plusw1,c
 20012  015852  0EF1               	movlw	-15
 20013  015854  1EE3               	comf	plusw1,f,c
 20014  015856  0EF2               	movlw	-14
 20015  015858  1EE3               	comf	plusw1,f,c
 20016  01585A  0EF3               	movlw	-13
 20017  01585C  1EE3               	comf	plusw1,f,c
 20018  01585E  0EF4               	movlw	-12
 20019  015860  1EE3               	comf	plusw1,f,c
 20020  015862  0EF5               	movlw	-11
 20021  015864  1EE3               	comf	plusw1,f,c
 20022  015866  0EF6               	movlw	-10
 20023  015868  1EE3               	comf	plusw1,f,c
 20024  01586A  0EF7               	movlw	-9
 20025  01586C  1EE3               	comf	plusw1,f,c
 20026  01586E  E314               	bnc	u10920
 20027  015870  0EF1               	movlw	-15
 20028  015872  2AE3               	incf	plusw1,f,c
 20029  015874  E311               	bnc	u10920
 20030  015876  0EF2               	movlw	-14
 20031  015878  2AE3               	incf	plusw1,f,c
 20032  01587A  E30E               	bnc	u10920
 20033  01587C  0EF3               	movlw	-13
 20034  01587E  2AE3               	incf	plusw1,f,c
 20035  015880  E30B               	bnc	u10920
 20036  015882  0EF4               	movlw	-12
 20037  015884  2AE3               	incf	plusw1,f,c
 20038  015886  E308               	bnc	u10920
 20039  015888  0EF5               	movlw	-11
 20040  01588A  2AE3               	incf	plusw1,f,c
 20041  01588C  E305               	bnc	u10920
 20042  01588E  0EF6               	movlw	-10
 20043  015890  2AE3               	incf	plusw1,f,c
 20044  015892  E302               	bnc	u10920
 20045  015894  0EF7               	movlw	-9
 20046  015896  2AE3               	incf	plusw1,f,c
 20047  015898                     u10920:
 20048                           
 20049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20050  015898  AE3D               	btfss	(_prec+1)^0,7,c
 20051                           
 20052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20053  01589A  923E               	bcf	_flags^0,1,c
 20054                           
 20055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20056  01589C  BE3D               	btfsc	(_prec+1)^0,7,c
 20057  01589E  D005               	goto	u10940
 20058  0158A0  503D               	movf	(_prec+1)^0,w,c
 20059  0158A2  E110               	bnz	l11942
 20060  0158A4  043C               	decf	_prec^0,w,c
 20061  0158A6  B0D8               	btfsc	status,0,c
 20062  0158A8  D00D               	goto	l11942
 20063  0158AA                     u10940:
 20064  0158AA  0E01               	movlw	1
 20065  0158AC  6E0B               	movwf	(btemp+10)^0,c
 20066  0158AE  0E00               	movlw	0
 20067  0158B0  6E0C               	movwf	(btemp+11)^0,c
 20068                           
 20069                           ;stkvar	_p @ sp[(-18)+16]
 20070  0158B2  0EFE               	movlw	-2
 20071  0158B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20072  0158BA  0EFF               	movlw	-1
 20073  0158BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20074  0158C2  D008               	goto	l2158
 20075  0158C4                     l11942:
 20076                           
 20077                           ;stkvar	_p @ sp[(-18)+16]
 20078  0158C4  0EFE               	movlw	-2
 20079  0158C6  0060  F0F3  FFE3   	movff	_prec,plusw1
 20080  0158CC  0EFF               	movlw	-1
 20081  0158CE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20082  0158D4                     l2158:
 20083                           
 20084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20085                           ;stkvar	_w @ sp[(-18)+14]
 20086  0158D4  0EFC               	movlw	-4
 20087  0158D6  0060  F0EB  FFE3   	movff	_width,plusw1
 20088  0158DC  0EFD               	movlw	-3
 20089  0158DE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20090                           
 20091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20092                           ;stkvar	_s @ sp[(-18)+12]
 20093  0158E4  0EFA               	movlw	-6
 20094  0158E6  006F FF8C  F001    	movff	plusw1,btemp
 20095  0158EC  0EFB               	movlw	-5
 20096  0158EE  50E3               	movf	plusw1,w,c
 20097  0158F0  1001               	iorwf	btemp^0,w,c
 20098  0158F2  A4D8               	btfss	status,2,c
 20099  0158F4  D002               	goto	u10960
 20100  0158F6  A43E               	btfss	_flags^0,2,c
 20101  0158F8  D00A               	goto	l11950
 20102  0158FA                     u10960:
 20103                           
 20104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20105                           ;stkvar	_w @ sp[(-18)+14]
 20106  0158FA  50E1               	movf	fsr1l,w,c
 20107  0158FC  0FFC               	addlw	-4
 20108  0158FE  6ED9               	movwf	fsr2l,c
 20109  015900  50E2               	movf	fsr1h,w,c
 20110  015902  6EDA               	movwf	fsr2h,c
 20111  015904  0EFF               	movlw	255
 20112  015906  22DA               	addwfc	fsr2h,f,c
 20113  015908  06DE               	decf	postinc2,f,c
 20114  01590A  0E00               	movlw	0
 20115  01590C  5ADD               	subwfb	postdec2,f,c
 20116  01590E                     l11950:
 20117                           
 20118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20119  01590E  0E4F               	movlw	79
 20120  015910  6E0B               	movwf	(btemp+10)^0,c
 20121  015912  0E00               	movlw	0
 20122  015914  6E0C               	movwf	(btemp+11)^0,c
 20123                           
 20124                           ;stkvar	_i @ sp[(-18)+10]
 20125  015916  0EF8               	movlw	-8
 20126  015918  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20127  01591E  0EF9               	movlw	-7
 20128  015920  0060  F033  FFE3   	movff	btemp+11,plusw1
 20129                           
 20130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20131  015926  0102               	movlb	2	; () banked
 20132  015928  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20133                           
 20134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20135  01592A  D109               	goto	l11964
 20136  01592C                     l11954:
 20137                           
 20138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20139                           ;stkvar	_i @ sp[(-18)+10]
 20140  01592C  50E1               	movf	fsr1l,w,c
 20141  01592E  0FF8               	addlw	-8
 20142  015930  6ED9               	movwf	fsr2l,c
 20143  015932  50E2               	movf	fsr1h,w,c
 20144  015934  6EDA               	movwf	fsr2h,c
 20145  015936  0EFF               	movlw	255
 20146  015938  22DA               	addwfc	fsr2h,f,c
 20147  01593A  06DE               	decf	postinc2,f,c
 20148  01593C  0E00               	movlw	0
 20149  01593E  5ADD               	subwfb	postdec2,f,c
 20150                           
 20151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20152  015940  0E0A               	movlw	10
 20153  015942  6EE6               	movwf	postinc1,c
 20154  015944  0E00               	movlw	0
 20155  015946  6EE6               	movwf	postinc1,c
 20156  015948  0E00               	movlw	0
 20157  01594A  6EE6               	movwf	postinc1,c
 20158  01594C  0E00               	movlw	0
 20159  01594E  6EE6               	movwf	postinc1,c
 20160  015950  0E00               	movlw	0
 20161  015952  6EE6               	movwf	postinc1,c
 20162  015954  0E00               	movlw	0
 20163  015956  6EE6               	movwf	postinc1,c
 20164  015958  0E00               	movlw	0
 20165  01595A  6EE6               	movwf	postinc1,c
 20166  01595C  0E00               	movlw	0
 20167  01595E  6EE6               	movwf	postinc1,c
 20168                           
 20169                           ;stkvar	_n @ sp[(-26)+2]
 20170  015960  50E1               	movf	fsr1l,w,c
 20171  015962  0FE8               	addlw	-24
 20172  015964  6ED9               	movwf	fsr2l,c
 20173  015966  50E2               	movf	fsr1h,w,c
 20174  015968  6EDA               	movwf	fsr2h,c
 20175  01596A  0EFF               	movlw	255
 20176  01596C  22DA               	addwfc	fsr2h,f,c
 20177  01596E  006F FF7B FFE6     	movff	postinc2,postinc1
 20178  015974  006F FF7B FFE6     	movff	postinc2,postinc1
 20179  01597A  006F FF7B FFE6     	movff	postinc2,postinc1
 20180  015980  006F FF7B FFE6     	movff	postinc2,postinc1
 20181  015986  006F FF7B FFE6     	movff	postinc2,postinc1
 20182  01598C  006F FF7B FFE6     	movff	postinc2,postinc1
 20183  015992  006F FF7B FFE6     	movff	postinc2,postinc1
 20184  015998  006F FF7B FFE6     	movff	postinc2,postinc1
 20185  01599E  EC04  F0BF         	call	___aomod	;wreg free
 20186  0159A2  52E5               	movf	postdec1,f,c
 20187  0159A4  006F FF9C  F018    	movff	indf1,btemp+23
 20188  0159AA  52E5               	movf	postdec1,f,c
 20189  0159AC  006F FF9C  F017    	movff	indf1,btemp+22
 20190  0159B2  52E5               	movf	postdec1,f,c
 20191  0159B4  006F FF9C  F016    	movff	indf1,btemp+21
 20192  0159BA  52E5               	movf	postdec1,f,c
 20193  0159BC  006F FF9C  F015    	movff	indf1,btemp+20
 20194  0159C2  52E5               	movf	postdec1,f,c
 20195  0159C4  006F FF9C  F014    	movff	indf1,btemp+19
 20196  0159CA  52E5               	movf	postdec1,f,c
 20197  0159CC  006F FF9C  F013    	movff	indf1,btemp+18
 20198  0159D2  52E5               	movf	postdec1,f,c
 20199  0159D4  006F FF9C  F012    	movff	indf1,btemp+17
 20200  0159DA  52E5               	movf	postdec1,f,c
 20201  0159DC  006F FF9C  F011    	movff	indf1,btemp+16
 20202  0159E2  0EF8               	movlw	248
 20203  0159E4  26E1               	addwf	fsr1l,f,c
 20204  0159E6  0EFF               	movlw	255
 20205  0159E8  22E2               	addwfc	fsr1h,f,c
 20206  0159EA  0060  F044  F00B   	movff	btemp+16,btemp+10
 20207  0159F0  0060  F048  F00C   	movff	btemp+17,btemp+11
 20208  0159F6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20209  0159FC  0060  F033  FFE6   	movff	btemp+11,postinc1
 20210  015A02  EC9C  F0DA         	call	_abs	;wreg free
 20211  015A06  0E30               	movlw	48
 20212  015A08  2601               	addwf	btemp^0,f,c
 20213                           
 20214                           ;stkvar	_i @ sp[(-18)+10]
 20215  015A0A  0EF8               	movlw	-8
 20216  015A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20217  015A12  0EF9               	movlw	-7
 20218  015A14  006F FF8C  F00C    	movff	plusw1,btemp+11
 20219  015A1A  0E97               	movlw	low _dbuf
 20220  015A1C  240B               	addwf	(btemp+10)^0,w,c
 20221  015A1E  6ED9               	movwf	fsr2l,c
 20222  015A20  0E02               	movlw	high _dbuf
 20223  015A22  200C               	addwfc	(btemp+11)^0,w,c
 20224  015A24  6EDA               	movwf	fsr2h,c
 20225  015A26  0060  F007  FFDF   	movff	btemp,indf2
 20226                           
 20227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20228                           ;stkvar	_p @ sp[(-18)+16]
 20229  015A2C  50E1               	movf	fsr1l,w,c
 20230  015A2E  0FFE               	addlw	-2
 20231  015A30  6ED9               	movwf	fsr2l,c
 20232  015A32  50E2               	movf	fsr1h,w,c
 20233  015A34  6EDA               	movwf	fsr2h,c
 20234  015A36  0EFF               	movlw	255
 20235  015A38  22DA               	addwfc	fsr2h,f,c
 20236  015A3A  06DE               	decf	postinc2,f,c
 20237  015A3C  0E00               	movlw	0
 20238  015A3E  5ADD               	subwfb	postdec2,f,c
 20239                           
 20240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20241                           ;stkvar	_w @ sp[(-18)+14]
 20242  015A40  50E1               	movf	fsr1l,w,c
 20243  015A42  0FFC               	addlw	-4
 20244  015A44  6ED9               	movwf	fsr2l,c
 20245  015A46  50E2               	movf	fsr1h,w,c
 20246  015A48  6EDA               	movwf	fsr2h,c
 20247  015A4A  0EFF               	movlw	255
 20248  015A4C  22DA               	addwfc	fsr2h,f,c
 20249  015A4E  06DE               	decf	postinc2,f,c
 20250  015A50  0E00               	movlw	0
 20251  015A52  5ADD               	subwfb	postdec2,f,c
 20252                           
 20253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20254  015A54  0E0A               	movlw	10
 20255  015A56  6EE6               	movwf	postinc1,c
 20256  015A58  0E00               	movlw	0
 20257  015A5A  6EE6               	movwf	postinc1,c
 20258  015A5C  0E00               	movlw	0
 20259  015A5E  6EE6               	movwf	postinc1,c
 20260  015A60  0E00               	movlw	0
 20261  015A62  6EE6               	movwf	postinc1,c
 20262  015A64  0E00               	movlw	0
 20263  015A66  6EE6               	movwf	postinc1,c
 20264  015A68  0E00               	movlw	0
 20265  015A6A  6EE6               	movwf	postinc1,c
 20266  015A6C  0E00               	movlw	0
 20267  015A6E  6EE6               	movwf	postinc1,c
 20268  015A70  0E00               	movlw	0
 20269  015A72  6EE6               	movwf	postinc1,c
 20270                           
 20271                           ;stkvar	_n @ sp[(-26)+2]
 20272  015A74  50E1               	movf	fsr1l,w,c
 20273  015A76  0FE8               	addlw	-24
 20274  015A78  6ED9               	movwf	fsr2l,c
 20275  015A7A  50E2               	movf	fsr1h,w,c
 20276  015A7C  6EDA               	movwf	fsr2h,c
 20277  015A7E  0EFF               	movlw	255
 20278  015A80  22DA               	addwfc	fsr2h,f,c
 20279  015A82  006F FF7B FFE6     	movff	postinc2,postinc1
 20280  015A88  006F FF7B FFE6     	movff	postinc2,postinc1
 20281  015A8E  006F FF7B FFE6     	movff	postinc2,postinc1
 20282  015A94  006F FF7B FFE6     	movff	postinc2,postinc1
 20283  015A9A  006F FF7B FFE6     	movff	postinc2,postinc1
 20284  015AA0  006F FF7B FFE6     	movff	postinc2,postinc1
 20285  015AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 20286  015AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 20287  015AB2  EC67  F0BB         	call	___aodiv	;wreg free
 20288  015AB6  52E5               	movf	postdec1,f,c
 20289  015AB8  006F FF9C  F018    	movff	indf1,btemp+23
 20290  015ABE  52E5               	movf	postdec1,f,c
 20291  015AC0  006F FF9C  F017    	movff	indf1,btemp+22
 20292  015AC6  52E5               	movf	postdec1,f,c
 20293  015AC8  006F FF9C  F016    	movff	indf1,btemp+21
 20294  015ACE  52E5               	movf	postdec1,f,c
 20295  015AD0  006F FF9C  F015    	movff	indf1,btemp+20
 20296  015AD6  52E5               	movf	postdec1,f,c
 20297  015AD8  006F FF9C  F014    	movff	indf1,btemp+19
 20298  015ADE  52E5               	movf	postdec1,f,c
 20299  015AE0  006F FF9C  F013    	movff	indf1,btemp+18
 20300  015AE6  52E5               	movf	postdec1,f,c
 20301  015AE8  006F FF9C  F012    	movff	indf1,btemp+17
 20302  015AEE  52E5               	movf	postdec1,f,c
 20303  015AF0  006F FF9C  F011    	movff	indf1,btemp+16
 20304  015AF6  0EF8               	movlw	248
 20305  015AF8  26E1               	addwf	fsr1l,f,c
 20306  015AFA  0EFF               	movlw	255
 20307  015AFC  22E2               	addwfc	fsr1h,f,c
 20308                           
 20309                           ;stkvar	_n @ sp[(-18)+2]
 20310  015AFE  0EF0               	movlw	-16
 20311  015B00  0060  F047  FFE3   	movff	btemp+16,plusw1
 20312  015B06  0EF1               	movlw	-15
 20313  015B08  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20314  015B0E  0EF2               	movlw	-14
 20315  015B10  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20316  015B16  0EF3               	movlw	-13
 20317  015B18  0060  F053  FFE3   	movff	btemp+19,plusw1
 20318  015B1E  0EF4               	movlw	-12
 20319  015B20  0060  F057  FFE3   	movff	btemp+20,plusw1
 20320  015B26  0EF5               	movlw	-11
 20321  015B28  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20322  015B2E  0EF6               	movlw	-10
 20323  015B30  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20324  015B36  0EF7               	movlw	-9
 20325  015B38  0060  F063  FFE3   	movff	btemp+23,plusw1
 20326  015B3E                     l11964:
 20327                           
 20328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20329                           ;stkvar	_i @ sp[(-18)+10]
 20330  015B3E  0EF9               	movlw	-7
 20331  015B40  BEE3               	btfsc	plusw1,7,c
 20332  015B42  D036               	goto	u11010
 20333  015B44  0EF9               	movlw	-7
 20334  015B46  50E3               	movf	plusw1,w,c
 20335  015B48  E104               	bnz	u10970
 20336  015B4A  0EF8               	movlw	-8
 20337  015B4C  04E3               	decf	plusw1,w,c
 20338  015B4E  A0D8               	btfss	status,0,c
 20339  015B50  D02F               	goto	u11010
 20340  015B52                     u10970:
 20341                           
 20342                           ;stkvar	_n @ sp[(-18)+2]
 20343  015B52  0EF0               	movlw	-16
 20344  015B54  50E3               	movf	plusw1,w,c
 20345  015B56  E115               	bnz	u10981
 20346  015B58  0EF1               	movlw	-15
 20347  015B5A  50E3               	movf	plusw1,w,c
 20348  015B5C  E112               	bnz	u10981
 20349  015B5E  0EF2               	movlw	-14
 20350  015B60  50E3               	movf	plusw1,w,c
 20351  015B62  E10F               	bnz	u10981
 20352  015B64  0EF3               	movlw	-13
 20353  015B66  50E3               	movf	plusw1,w,c
 20354  015B68  E10C               	bnz	u10981
 20355  015B6A  0EF4               	movlw	-12
 20356  015B6C  50E3               	movf	plusw1,w,c
 20357  015B6E  E109               	bnz	u10981
 20358  015B70  0EF5               	movlw	-11
 20359  015B72  50E3               	movf	plusw1,w,c
 20360  015B74  E106               	bnz	u10981
 20361  015B76  0EF6               	movlw	-10
 20362  015B78  50E3               	movf	plusw1,w,c
 20363  015B7A  E103               	bnz	u10981
 20364  015B7C  0EF7               	movlw	-9
 20365  015B7E  50E3               	movf	plusw1,w,c
 20366  015B80  A4D8               	btfss	status,2,c
 20367  015B82                     u10981:
 20368  015B82  D6D4               	goto	l11954
 20369                           
 20370                           ;stkvar	_p @ sp[(-18)+16]
 20371  015B84  0EFF               	movlw	-1
 20372  015B86  BEE3               	btfsc	plusw1,7,c
 20373  015B88  D007               	goto	u10990
 20374  015B8A  0EFF               	movlw	-1
 20375  015B8C  50E3               	movf	plusw1,w,c
 20376  015B8E  E103               	bnz	u10991
 20377  015B90  0EFE               	movlw	-2
 20378  015B92  04E3               	decf	plusw1,w,c
 20379  015B94  B0D8               	btfsc	status,0,c
 20380  015B96                     u10991:
 20381  015B96  D6CA               	goto	l11954
 20382  015B98                     u10990:
 20383                           
 20384                           ;stkvar	_w @ sp[(-18)+14]
 20385  015B98  0EFD               	movlw	-3
 20386  015B9A  BEE3               	btfsc	plusw1,7,c
 20387  015B9C  D009               	goto	u11010
 20388  015B9E  0EFD               	movlw	-3
 20389  015BA0  50E3               	movf	plusw1,w,c
 20390  015BA2  E104               	bnz	u11000
 20391  015BA4  0EFC               	movlw	-4
 20392  015BA6  04E3               	decf	plusw1,w,c
 20393  015BA8  A0D8               	btfss	status,0,c
 20394  015BAA  D002               	goto	u11010
 20395  015BAC                     u11000:
 20396  015BAC  B23E               	btfsc	_flags^0,1,c
 20397  015BAE  D6BE               	goto	l11954
 20398  015BB0                     u11010:
 20399                           
 20400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20401                           ;stkvar	_s @ sp[(-18)+12]
 20402  015BB0  0EFA               	movlw	-6
 20403  015BB2  006F FF8C  F001    	movff	plusw1,btemp
 20404  015BB8  0EFB               	movlw	-5
 20405  015BBA  50E3               	movf	plusw1,w,c
 20406  015BBC  1001               	iorwf	btemp^0,w,c
 20407  015BBE  A4D8               	btfss	status,2,c
 20408  015BC0  D002               	goto	u11030
 20409  015BC2  A43E               	btfss	_flags^0,2,c
 20410  015BC4  D033               	goto	l11988
 20411  015BC6                     u11030:
 20412                           
 20413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20414                           ;stkvar	_i @ sp[(-18)+10]
 20415  015BC6  50E1               	movf	fsr1l,w,c
 20416  015BC8  0FF8               	addlw	-8
 20417  015BCA  6ED9               	movwf	fsr2l,c
 20418  015BCC  50E2               	movf	fsr1h,w,c
 20419  015BCE  6EDA               	movwf	fsr2h,c
 20420  015BD0  0EFF               	movlw	255
 20421  015BD2  22DA               	addwfc	fsr2h,f,c
 20422  015BD4  06DE               	decf	postinc2,f,c
 20423  015BD6  0E00               	movlw	0
 20424  015BD8  5ADD               	subwfb	postdec2,f,c
 20425                           
 20426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20427                           ;stkvar	_s @ sp[(-18)+12]
 20428  015BDA  0EFA               	movlw	-6
 20429  015BDC  006F FF8C  F001    	movff	plusw1,btemp
 20430  015BE2  0EFB               	movlw	-5
 20431  015BE4  50E3               	movf	plusw1,w,c
 20432  015BE6  1001               	iorwf	btemp^0,w,c
 20433  015BE8  A4D8               	btfss	status,2,c
 20434  015BEA  D002               	goto	l11984
 20435  015BEC  0E2B               	movlw	43
 20436  015BEE  D001               	goto	L24
 20437  015BF0                     l11984:
 20438  015BF0  0E2D               	movlw	45
 20439  015BF2                     L24:
 20440  015BF2  6E0B               	movwf	(btemp+10)^0,c
 20441  015BF4  0E00               	movlw	0
 20442  015BF6  6E0C               	movwf	(btemp+11)^0,c
 20443                           
 20444                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20445  015BF8  0EEE               	movlw	-18
 20446  015BFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20447  015C00  0EEF               	movlw	-17
 20448  015C02  0060  F033  FFE3   	movff	btemp+11,plusw1
 20449                           
 20450                           ;stkvar	_dtoa$5494 @ sp[(-18)+0]
 20451                           ;stkvar	_i @ sp[(-18)+10]
 20452  015C08  0EF8               	movlw	-8
 20453  015C0A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20454  015C10  0EF9               	movlw	-7
 20455  015C12  006F FF8C  F00C    	movff	plusw1,btemp+11
 20456  015C18  0E97               	movlw	low _dbuf
 20457  015C1A  240B               	addwf	(btemp+10)^0,w,c
 20458  015C1C  6ED9               	movwf	fsr2l,c
 20459  015C1E  0E02               	movlw	high _dbuf
 20460  015C20  200C               	addwfc	(btemp+11)^0,w,c
 20461  015C22  6EDA               	movwf	fsr2h,c
 20462  015C24  0EEE               	movlw	-18
 20463  015C26  006F FF8F FFDF     	movff	plusw1,indf2
 20464  015C2C                     l11988:
 20465                           
 20466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20467                           ;stkvar	_w @ sp[(-18)+14]
 20468  015C2C  0EFC               	movlw	-4
 20469  015C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20470  015C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20471                           
 20472                           ;stkvar	_i @ sp[(-20)+10]
 20473  015C3A  0E97               	movlw	low _dbuf
 20474  015C3C  6E0B               	movwf	(btemp+10)^0,c
 20475  015C3E  0E02               	movlw	high _dbuf
 20476  015C40  6E0C               	movwf	(btemp+11)^0,c
 20477  015C42  0EF6               	movlw	-10
 20478  015C44  50E3               	movf	plusw1,w,c
 20479  015C46  260B               	addwf	(btemp+10)^0,f,c
 20480  015C48  0EF7               	movlw	-9
 20481  015C4A  50E3               	movf	plusw1,w,c
 20482  015C4C  220C               	addwfc	(btemp+11)^0,f,c
 20483  015C4E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20484  015C54  0060  F033  FFE6   	movff	btemp+11,postinc1
 20485                           
 20486                           ;stkvar	_fp @ sp[(-22)+-2]
 20487  015C5A  0EE8               	movlw	-24
 20488  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 20489  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 20490  015C68  ECEE  F0CC         	call	_pad	;wreg free
 20491                           
 20492                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20493  015C6C  0EE4               	movlw	228
 20494  015C6E  26E1               	addwf	fsr1l,f,c
 20495  015C70  0EFF               	movlw	255
 20496  015C72  22E2               	addwfc	fsr1h,f,c
 20497  015C74  0012               	return		;funcret
 20498  015C76                     __end_of_dtoa:
 20499                           	opt callstack 0
 20500                           
 20501 ;; *************** function _abs *****************
 20502 ;; Defined at:
 20503 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;  a               2  [STACK] int 
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;		None
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  2  [STACK] int 
 20510 ;; Registers used:
 20511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20512 ;; Tracked objects:
 20513 ;;		On entry : 0/2
 20514 ;;		On exit  : 0/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20521 ;;Total ram usage:        0 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:   15
 20524 ;; This function calls:
 20525 ;;		Nothing
 20526 ;; This function is called by:
 20527 ;;		_dtoa
 20528 ;; This function uses a reentrant model
 20529 ;;
 20530                           
 20531                           	psect	text69
 20532  01B538                     __ptext69:
 20533                           	opt callstack 0
 20534  01B538                     _abs:
 20535                           	opt callstack 0
 20536                           
 20537                           ;stkvar	_a @ sp[(0)+-2]
 20538                           
 20539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20540                           ;incstack = 0
 20541 ;; hardware stack exceeded
 20542  01B538  0EFF               	movlw	-1
 20543  01B53A  BEE3               	btfsc	plusw1,7,c
 20544  01B53C  D007               	goto	u5980
 20545  01B53E  0EFF               	movlw	-1
 20546  01B540  50E3               	movf	plusw1,w,c
 20547  01B542  E112               	bnz	l8002
 20548  01B544  0EFE               	movlw	-2
 20549  01B546  04E3               	decf	plusw1,w,c
 20550  01B548  B0D8               	btfsc	status,0,c
 20551  01B54A  D00E               	goto	l8002
 20552  01B54C                     u5980:
 20553                           
 20554                           ;stkvar	_a @ sp[(0)+-2]
 20555  01B54C  0EFE               	movlw	-2
 20556  01B54E  006F FF8C  F001    	movff	plusw1,btemp
 20557  01B554  1E01               	comf	btemp^0,f,c
 20558  01B556  0EFF               	movlw	-1
 20559  01B558  006F FF8C  F002    	movff	plusw1,btemp+1
 20560  01B55E  1E02               	comf	(btemp+1)^0,f,c
 20561  01B560  2A01               	incf	btemp^0,f,c
 20562  01B562  B4D8               	btfsc	status,2,c
 20563  01B564  2A02               	incf	(btemp+1)^0,f,c
 20564  01B566  D008               	goto	l3084
 20565  01B568                     l8002:
 20566                           
 20567                           ;stkvar	_a @ sp[(0)+-2]
 20568  01B568  0EFE               	movlw	-2
 20569  01B56A  006F FF8C  F001    	movff	plusw1,btemp
 20570  01B570  0EFF               	movlw	-1
 20571  01B572  006F FF8C  F002    	movff	plusw1,btemp+1
 20572  01B578                     l3084:
 20573                           
 20574                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20575  01B578  52E5               	movf	postdec1,f,c
 20576  01B57A  52E5               	movf	postdec1,f,c
 20577  01B57C  0012               	return		;funcret
 20578  01B57E                     __end_of_abs:
 20579                           	opt callstack 0
 20580                           
 20581 ;; *************** function ___aomod *****************
 20582 ;; Defined at:
 20583 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20584 ;; Parameters:    Size  Location     Type
 20585 ;;  dividend        8  [STACK] long long 
 20586 ;;  divisor         8  [STACK] long long 
 20587 ;; Auto vars:     Size  Location     Type
 20588 ;;  sign            1  [STACK] unsigned char 
 20589 ;;  counter         1  [STACK] unsigned char 
 20590 ;; Return value:  Size  Location     Type
 20591 ;;                  8  [STACK] long long 
 20592 ;; Registers used:
 20593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20594 ;; Tracked objects:
 20595 ;;		On entry : 0/2
 20596 ;;		On exit  : 0/0
 20597 ;;		Unchanged: 0/0
 20598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20603 ;;Total ram usage:        0 bytes
 20604 ;; Hardware stack levels used:    1
 20605 ;; Hardware stack levels required when called:   15
 20606 ;; This function calls:
 20607 ;;		Nothing
 20608 ;; This function is called by:
 20609 ;;		_dtoa
 20610 ;; This function uses a reentrant model
 20611 ;;
 20612                           
 20613                           	psect	text70
 20614  017E08                     __ptext70:
 20615                           	opt callstack 0
 20616  017E08                     ___aomod:
 20617                           	opt callstack 0
 20618                           
 20619                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20620  017E08  52E6               	movf	postinc1,f,c
 20621  017E0A  52E6               	movf	postinc1,f,c
 20622                           
 20623                           ;stkvar	_sign @ sp[(-2)+0]
 20624                           
 20625                           ;incstack = 0
 20626 ;; hardware stack exceeded
 20627  017E0C  0EFE               	movlw	-2
 20628  017E0E  6AE3               	clrf	plusw1,c
 20629                           
 20630                           ;stkvar	_dividend @ sp[(-2)+-8]
 20631  017E10  0EFD               	movlw	-3
 20632  017E12  AEE3               	btfss	plusw1,7,c
 20633  017E14  D028               	goto	l8160
 20634                           
 20635                           ;stkvar	_dividend @ sp[(-2)+-8]
 20636                           ;stkvar	_dividend @ sp[(-2)+-8]
 20637  017E16  0EF6               	movlw	-10
 20638  017E18  6CE3               	negf	plusw1,c
 20639  017E1A  0EF7               	movlw	-9
 20640  017E1C  1EE3               	comf	plusw1,f,c
 20641  017E1E  0EF8               	movlw	-8
 20642  017E20  1EE3               	comf	plusw1,f,c
 20643  017E22  0EF9               	movlw	-7
 20644  017E24  1EE3               	comf	plusw1,f,c
 20645  017E26  0EFA               	movlw	-6
 20646  017E28  1EE3               	comf	plusw1,f,c
 20647  017E2A  0EFB               	movlw	-5
 20648  017E2C  1EE3               	comf	plusw1,f,c
 20649  017E2E  0EFC               	movlw	-4
 20650  017E30  1EE3               	comf	plusw1,f,c
 20651  017E32  0EFD               	movlw	-3
 20652  017E34  1EE3               	comf	plusw1,f,c
 20653  017E36  E314               	bnc	u6410
 20654  017E38  0EF7               	movlw	-9
 20655  017E3A  2AE3               	incf	plusw1,f,c
 20656  017E3C  E311               	bnc	u6410
 20657  017E3E  0EF8               	movlw	-8
 20658  017E40  2AE3               	incf	plusw1,f,c
 20659  017E42  E30E               	bnc	u6410
 20660  017E44  0EF9               	movlw	-7
 20661  017E46  2AE3               	incf	plusw1,f,c
 20662  017E48  E30B               	bnc	u6410
 20663  017E4A  0EFA               	movlw	-6
 20664  017E4C  2AE3               	incf	plusw1,f,c
 20665  017E4E  E308               	bnc	u6410
 20666  017E50  0EFB               	movlw	-5
 20667  017E52  2AE3               	incf	plusw1,f,c
 20668  017E54  E305               	bnc	u6410
 20669  017E56  0EFC               	movlw	-4
 20670  017E58  2AE3               	incf	plusw1,f,c
 20671  017E5A  E302               	bnc	u6410
 20672  017E5C  0EFD               	movlw	-3
 20673  017E5E  2AE3               	incf	plusw1,f,c
 20674  017E60                     u6410:
 20675                           
 20676                           ;stkvar	_sign @ sp[(-2)+0]
 20677  017E60  0EFE               	movlw	-2
 20678  017E62  6AE3               	clrf	plusw1,c
 20679  017E64  2AE3               	incf	plusw1,f,c
 20680  017E66                     l8160:
 20681                           
 20682                           ;stkvar	_divisor @ sp[(-2)+-16]
 20683  017E66  0EF5               	movlw	-11
 20684  017E68  AEE3               	btfss	plusw1,7,c
 20685  017E6A  D025               	goto	u6430
 20686                           
 20687                           ;stkvar	_divisor @ sp[(-2)+-16]
 20688                           ;stkvar	_divisor @ sp[(-2)+-16]
 20689  017E6C  0EEE               	movlw	-18
 20690  017E6E  6CE3               	negf	plusw1,c
 20691  017E70  0EEF               	movlw	-17
 20692  017E72  1EE3               	comf	plusw1,f,c
 20693  017E74  0EF0               	movlw	-16
 20694  017E76  1EE3               	comf	plusw1,f,c
 20695  017E78  0EF1               	movlw	-15
 20696  017E7A  1EE3               	comf	plusw1,f,c
 20697  017E7C  0EF2               	movlw	-14
 20698  017E7E  1EE3               	comf	plusw1,f,c
 20699  017E80  0EF3               	movlw	-13
 20700  017E82  1EE3               	comf	plusw1,f,c
 20701  017E84  0EF4               	movlw	-12
 20702  017E86  1EE3               	comf	plusw1,f,c
 20703  017E88  0EF5               	movlw	-11
 20704  017E8A  1EE3               	comf	plusw1,f,c
 20705  017E8C  E314               	bnc	u6430
 20706  017E8E  0EEF               	movlw	-17
 20707  017E90  2AE3               	incf	plusw1,f,c
 20708  017E92  E311               	bnc	u6430
 20709  017E94  0EF0               	movlw	-16
 20710  017E96  2AE3               	incf	plusw1,f,c
 20711  017E98  E30E               	bnc	u6430
 20712  017E9A  0EF1               	movlw	-15
 20713  017E9C  2AE3               	incf	plusw1,f,c
 20714  017E9E  E30B               	bnc	u6430
 20715  017EA0  0EF2               	movlw	-14
 20716  017EA2  2AE3               	incf	plusw1,f,c
 20717  017EA4  E308               	bnc	u6430
 20718  017EA6  0EF3               	movlw	-13
 20719  017EA8  2AE3               	incf	plusw1,f,c
 20720  017EAA  E305               	bnc	u6430
 20721  017EAC  0EF4               	movlw	-12
 20722  017EAE  2AE3               	incf	plusw1,f,c
 20723  017EB0  E302               	bnc	u6430
 20724  017EB2  0EF5               	movlw	-11
 20725  017EB4  2AE3               	incf	plusw1,f,c
 20726  017EB6                     u6430:
 20727                           
 20728                           ;stkvar	_divisor @ sp[(-2)+-16]
 20729  017EB6  0EEE               	movlw	-18
 20730  017EB8  50E3               	movf	plusw1,w,c
 20731  017EBA  E116               	bnz	u6440
 20732  017EBC  0EEF               	movlw	-17
 20733  017EBE  50E3               	movf	plusw1,w,c
 20734  017EC0  E113               	bnz	u6440
 20735  017EC2  0EF0               	movlw	-16
 20736  017EC4  50E3               	movf	plusw1,w,c
 20737  017EC6  E110               	bnz	u6440
 20738  017EC8  0EF1               	movlw	-15
 20739  017ECA  50E3               	movf	plusw1,w,c
 20740  017ECC  E10D               	bnz	u6440
 20741  017ECE  0EF2               	movlw	-14
 20742  017ED0  50E3               	movf	plusw1,w,c
 20743  017ED2  E10A               	bnz	u6440
 20744  017ED4  0EF3               	movlw	-13
 20745  017ED6  50E3               	movf	plusw1,w,c
 20746  017ED8  E107               	bnz	u6440
 20747  017EDA  0EF4               	movlw	-12
 20748  017EDC  50E3               	movf	plusw1,w,c
 20749  017EDE  E104               	bnz	u6440
 20750  017EE0  0EF5               	movlw	-11
 20751  017EE2  50E3               	movf	plusw1,w,c
 20752  017EE4  B4D8               	btfsc	status,2,c
 20753  017EE6  D075               	goto	u6470
 20754  017EE8                     u6440:
 20755                           
 20756                           ;stkvar	_counter @ sp[(-2)+1]
 20757  017EE8  0EFF               	movlw	-1
 20758  017EEA  6AE3               	clrf	plusw1,c
 20759  017EEC  D012               	goto	L25
 20760  017EEE                     l8168:
 20761                           
 20762                           ;stkvar	_divisor @ sp[(-2)+-16]
 20763  017EEE  90D8               	bcf	status,0,c
 20764  017EF0  0EEE               	movlw	-18
 20765  017EF2  36E3               	rlcf	plusw1,f,c
 20766  017EF4  0EEF               	movlw	-17
 20767  017EF6  36E3               	rlcf	plusw1,f,c
 20768  017EF8  0EF0               	movlw	-16
 20769  017EFA  36E3               	rlcf	plusw1,f,c
 20770  017EFC  0EF1               	movlw	-15
 20771  017EFE  36E3               	rlcf	plusw1,f,c
 20772  017F00  0EF2               	movlw	-14
 20773  017F02  36E3               	rlcf	plusw1,f,c
 20774  017F04  0EF3               	movlw	-13
 20775  017F06  36E3               	rlcf	plusw1,f,c
 20776  017F08  0EF4               	movlw	-12
 20777  017F0A  36E3               	rlcf	plusw1,f,c
 20778  017F0C  0EF5               	movlw	-11
 20779  017F0E  36E3               	rlcf	plusw1,f,c
 20780                           
 20781                           ;stkvar	_counter @ sp[(-2)+1]
 20782  017F10  0EFF               	movlw	-1
 20783  017F12                     L25:
 20784  017F12  2AE3               	incf	plusw1,f,c
 20785                           
 20786                           ;stkvar	_divisor @ sp[(-2)+-16]
 20787  017F14  0EF5               	movlw	-11
 20788  017F16  AEE3               	btfss	plusw1,7,c
 20789  017F18  D7EA               	goto	l8168
 20790  017F1A                     u6450:
 20791                           
 20792                           ;stkvar	_divisor @ sp[(-2)+-16]
 20793                           ;stkvar	_dividend @ sp[(-2)+-8]
 20794  017F1A  50E1               	movf	fsr1l,w,c
 20795  017F1C  0FF6               	addlw	-10
 20796  017F1E  6ED9               	movwf	fsr2l,c
 20797  017F20  50E2               	movf	fsr1h,w,c
 20798  017F22  6EDA               	movwf	fsr2h,c
 20799  017F24  0EFF               	movlw	255
 20800  017F26  22DA               	addwfc	fsr2h,f,c
 20801  017F28  0EEE               	movlw	-18
 20802  017F2A  50E3               	movf	plusw1,w,c
 20803  017F2C  5CDE               	subwf	postinc2,w,c
 20804  017F2E  0EEF               	movlw	-17
 20805  017F30  50E3               	movf	plusw1,w,c
 20806  017F32  58DE               	subwfb	postinc2,w,c
 20807  017F34  0EF0               	movlw	-16
 20808  017F36  50E3               	movf	plusw1,w,c
 20809  017F38  58DE               	subwfb	postinc2,w,c
 20810  017F3A  0EF1               	movlw	-15
 20811  017F3C  50E3               	movf	plusw1,w,c
 20812  017F3E  58DE               	subwfb	postinc2,w,c
 20813  017F40  0EF2               	movlw	-14
 20814  017F42  50E3               	movf	plusw1,w,c
 20815  017F44  58DE               	subwfb	postinc2,w,c
 20816  017F46  0EF3               	movlw	-13
 20817  017F48  50E3               	movf	plusw1,w,c
 20818  017F4A  58DE               	subwfb	postinc2,w,c
 20819  017F4C  0EF4               	movlw	-12
 20820  017F4E  50E3               	movf	plusw1,w,c
 20821  017F50  58DE               	subwfb	postinc2,w,c
 20822  017F52  0EF5               	movlw	-11
 20823  017F54  50E3               	movf	plusw1,w,c
 20824  017F56  58DE               	subwfb	postinc2,w,c
 20825  017F58  A0D8               	btfss	status,0,c
 20826  017F5A  D01F               	goto	l8176
 20827                           
 20828                           ;stkvar	_divisor @ sp[(-2)+-16]
 20829                           ;stkvar	_dividend @ sp[(-2)+-8]
 20830  017F5C  50E1               	movf	fsr1l,w,c
 20831  017F5E  0FF6               	addlw	-10
 20832  017F60  6ED9               	movwf	fsr2l,c
 20833  017F62  50E2               	movf	fsr1h,w,c
 20834  017F64  6EDA               	movwf	fsr2h,c
 20835  017F66  0EFF               	movlw	255
 20836  017F68  22DA               	addwfc	fsr2h,f,c
 20837  017F6A  0EEE               	movlw	-18
 20838  017F6C  50E3               	movf	plusw1,w,c
 20839  017F6E  5EDE               	subwf	postinc2,f,c
 20840  017F70  0EEF               	movlw	-17
 20841  017F72  50E3               	movf	plusw1,w,c
 20842  017F74  5ADE               	subwfb	postinc2,f,c
 20843  017F76  0EF0               	movlw	-16
 20844  017F78  50E3               	movf	plusw1,w,c
 20845  017F7A  5ADE               	subwfb	postinc2,f,c
 20846  017F7C  0EF1               	movlw	-15
 20847  017F7E  50E3               	movf	plusw1,w,c
 20848  017F80  5ADE               	subwfb	postinc2,f,c
 20849  017F82  0EF2               	movlw	-14
 20850  017F84  50E3               	movf	plusw1,w,c
 20851  017F86  5ADE               	subwfb	postinc2,f,c
 20852  017F88  0EF3               	movlw	-13
 20853  017F8A  50E3               	movf	plusw1,w,c
 20854  017F8C  5ADE               	subwfb	postinc2,f,c
 20855  017F8E  0EF4               	movlw	-12
 20856  017F90  50E3               	movf	plusw1,w,c
 20857  017F92  5ADE               	subwfb	postinc2,f,c
 20858  017F94  0EF5               	movlw	-11
 20859  017F96  50E3               	movf	plusw1,w,c
 20860  017F98  5ADE               	subwfb	postinc2,f,c
 20861  017F9A                     l8176:
 20862                           
 20863                           ;stkvar	_divisor @ sp[(-2)+-16]
 20864  017F9A  90D8               	bcf	status,0,c
 20865  017F9C  0EF5               	movlw	-11
 20866  017F9E  32E3               	rrcf	plusw1,f,c
 20867  017FA0  0EF4               	movlw	-12
 20868  017FA2  32E3               	rrcf	plusw1,f,c
 20869  017FA4  0EF3               	movlw	-13
 20870  017FA6  32E3               	rrcf	plusw1,f,c
 20871  017FA8  0EF2               	movlw	-14
 20872  017FAA  32E3               	rrcf	plusw1,f,c
 20873  017FAC  0EF1               	movlw	-15
 20874  017FAE  32E3               	rrcf	plusw1,f,c
 20875  017FB0  0EF0               	movlw	-16
 20876  017FB2  32E3               	rrcf	plusw1,f,c
 20877  017FB4  0EEF               	movlw	-17
 20878  017FB6  32E3               	rrcf	plusw1,f,c
 20879  017FB8  0EEE               	movlw	-18
 20880  017FBA  32E3               	rrcf	plusw1,f,c
 20881                           
 20882                           ;stkvar	_counter @ sp[(-2)+1]
 20883  017FBC  0EFF               	movlw	-1
 20884  017FBE  50E3               	movf	plusw1,w,c
 20885  017FC0  6E01               	movwf	btemp^0,c
 20886  017FC2  0E01               	movlw	1
 20887  017FC4  5E01               	subwf	btemp^0,f,c
 20888  017FC6  0EFF               	movlw	-1
 20889  017FC8  0060  F007  FFE3   	movff	btemp,plusw1
 20890  017FCE  A4D8               	btfss	status,2,c
 20891  017FD0  D7A4               	goto	u6450
 20892  017FD2                     u6470:
 20893                           
 20894                           ;stkvar	_sign @ sp[(-2)+0]
 20895  017FD2  0EFE               	movlw	-2
 20896  017FD4  50E3               	movf	plusw1,w,c
 20897  017FD6  B4D8               	btfsc	status,2,c
 20898  017FD8  D025               	goto	u6490
 20899                           
 20900                           ;stkvar	_dividend @ sp[(-2)+-8]
 20901                           ;stkvar	_dividend @ sp[(-2)+-8]
 20902  017FDA  0EF6               	movlw	-10
 20903  017FDC  6CE3               	negf	plusw1,c
 20904  017FDE  0EF7               	movlw	-9
 20905  017FE0  1EE3               	comf	plusw1,f,c
 20906  017FE2  0EF8               	movlw	-8
 20907  017FE4  1EE3               	comf	plusw1,f,c
 20908  017FE6  0EF9               	movlw	-7
 20909  017FE8  1EE3               	comf	plusw1,f,c
 20910  017FEA  0EFA               	movlw	-6
 20911  017FEC  1EE3               	comf	plusw1,f,c
 20912  017FEE  0EFB               	movlw	-5
 20913  017FF0  1EE3               	comf	plusw1,f,c
 20914  017FF2  0EFC               	movlw	-4
 20915  017FF4  1EE3               	comf	plusw1,f,c
 20916  017FF6  0EFD               	movlw	-3
 20917  017FF8  1EE3               	comf	plusw1,f,c
 20918  017FFA  E314               	bnc	u6490
 20919  017FFC  0EF7               	movlw	-9
 20920  017FFE  2AE3               	incf	plusw1,f,c
 20921  018000  E311               	bnc	u6490
 20922  018002  0EF8               	movlw	-8
 20923  018004  2AE3               	incf	plusw1,f,c
 20924  018006  E30E               	bnc	u6490
 20925  018008  0EF9               	movlw	-7
 20926  01800A  2AE3               	incf	plusw1,f,c
 20927  01800C  E30B               	bnc	u6490
 20928  01800E  0EFA               	movlw	-6
 20929  018010  2AE3               	incf	plusw1,f,c
 20930  018012  E308               	bnc	u6490
 20931  018014  0EFB               	movlw	-5
 20932  018016  2AE3               	incf	plusw1,f,c
 20933  018018  E305               	bnc	u6490
 20934  01801A  0EFC               	movlw	-4
 20935  01801C  2AE3               	incf	plusw1,f,c
 20936  01801E  E302               	bnc	u6490
 20937  018020  0EFD               	movlw	-3
 20938  018022  2AE3               	incf	plusw1,f,c
 20939  018024                     u6490:
 20940                           
 20941                           ;stkvar	_dividend @ sp[(-2)+-8]
 20942  018024  0EF6               	movlw	246
 20943  018026  24E1               	addwf	fsr1l,w,c
 20944  018028  6ED9               	movwf	fsr2l,c
 20945  01802A  0EFF               	movlw	255
 20946  01802C  20E2               	addwfc	fsr1h,w,c
 20947  01802E  6EDA               	movwf	fsr2h,c
 20948                           
 20949                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20950  018030  0E08               	movlw	8
 20951  018032  6E01               	movwf	btemp^0,c
 20952  018034  0EF6               	movlw	-10
 20953  018036                     us650999:
 20954  018036  006F FF7B FFE3     	movff	postinc2,plusw1
 20955  01803C  28E8               	incf	wreg,w,c
 20956  01803E  2E01               	decfsz	btemp^0,f,c
 20957  018040  D7FA               	bra	us650999
 20958                           
 20959                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20960  018042  52E5               	movf	postdec1,f,c
 20961  018044  52E5               	movf	postdec1,f,c
 20962  018046  0012               	return		;funcret
 20963  018048                     __end_of___aomod:
 20964                           	opt callstack 0
 20965                           
 20966 ;; *************** function ___aodiv *****************
 20967 ;; Defined at:
 20968 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;  dividend        8  [STACK] long long 
 20971 ;;  divisor         8  [STACK] long long 
 20972 ;; Auto vars:     Size  Location     Type
 20973 ;;  quotient        8  [STACK] long long 
 20974 ;;  sign            1  [STACK] unsigned char 
 20975 ;;  counter         1  [STACK] unsigned char 
 20976 ;; Return value:  Size  Location     Type
 20977 ;;                  8  [STACK] long long 
 20978 ;; Registers used:
 20979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20980 ;; Tracked objects:
 20981 ;;		On entry : 0/2
 20982 ;;		On exit  : 0/0
 20983 ;;		Unchanged: 0/0
 20984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20989 ;;Total ram usage:        0 bytes
 20990 ;; Hardware stack levels used:    1
 20991 ;; Hardware stack levels required when called:   15
 20992 ;; This function calls:
 20993 ;;		Nothing
 20994 ;; This function is called by:
 20995 ;;		_dtoa
 20996 ;; This function uses a reentrant model
 20997 ;;
 20998                           
 20999                           	psect	text71
 21000  0176CE                     __ptext71:
 21001                           	opt callstack 0
 21002  0176CE                     ___aodiv:
 21003                           	opt callstack 0
 21004                           
 21005                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21006  0176CE  0E0A               	movlw	10
 21007  0176D0  26E1               	addwf	fsr1l,f,c
 21008  0176D2  0E00               	movlw	0
 21009  0176D4  22E2               	addwfc	fsr1h,f,c
 21010                           
 21011                           ;stkvar	_sign @ sp[(-10)+8]
 21012                           
 21013                           ;incstack = 0
 21014 ;; hardware stack exceeded
 21015  0176D6  0EFE               	movlw	-2
 21016  0176D8  6AE3               	clrf	plusw1,c
 21017                           
 21018                           ;stkvar	_divisor @ sp[(-10)+-16]
 21019  0176DA  0EED               	movlw	-19
 21020  0176DC  AEE3               	btfss	plusw1,7,c
 21021  0176DE  D028               	goto	l8116
 21022                           
 21023                           ;stkvar	_divisor @ sp[(-10)+-16]
 21024                           ;stkvar	_divisor @ sp[(-10)+-16]
 21025  0176E0  0EE6               	movlw	-26
 21026  0176E2  6CE3               	negf	plusw1,c
 21027  0176E4  0EE7               	movlw	-25
 21028  0176E6  1EE3               	comf	plusw1,f,c
 21029  0176E8  0EE8               	movlw	-24
 21030  0176EA  1EE3               	comf	plusw1,f,c
 21031  0176EC  0EE9               	movlw	-23
 21032  0176EE  1EE3               	comf	plusw1,f,c
 21033  0176F0  0EEA               	movlw	-22
 21034  0176F2  1EE3               	comf	plusw1,f,c
 21035  0176F4  0EEB               	movlw	-21
 21036  0176F6  1EE3               	comf	plusw1,f,c
 21037  0176F8  0EEC               	movlw	-20
 21038  0176FA  1EE3               	comf	plusw1,f,c
 21039  0176FC  0EED               	movlw	-19
 21040  0176FE  1EE3               	comf	plusw1,f,c
 21041  017700  E314               	bnc	u6290
 21042  017702  0EE7               	movlw	-25
 21043  017704  2AE3               	incf	plusw1,f,c
 21044  017706  E311               	bnc	u6290
 21045  017708  0EE8               	movlw	-24
 21046  01770A  2AE3               	incf	plusw1,f,c
 21047  01770C  E30E               	bnc	u6290
 21048  01770E  0EE9               	movlw	-23
 21049  017710  2AE3               	incf	plusw1,f,c
 21050  017712  E30B               	bnc	u6290
 21051  017714  0EEA               	movlw	-22
 21052  017716  2AE3               	incf	plusw1,f,c
 21053  017718  E308               	bnc	u6290
 21054  01771A  0EEB               	movlw	-21
 21055  01771C  2AE3               	incf	plusw1,f,c
 21056  01771E  E305               	bnc	u6290
 21057  017720  0EEC               	movlw	-20
 21058  017722  2AE3               	incf	plusw1,f,c
 21059  017724  E302               	bnc	u6290
 21060  017726  0EED               	movlw	-19
 21061  017728  2AE3               	incf	plusw1,f,c
 21062  01772A                     u6290:
 21063                           
 21064                           ;stkvar	_sign @ sp[(-10)+8]
 21065  01772A  0EFE               	movlw	-2
 21066  01772C  6AE3               	clrf	plusw1,c
 21067  01772E  2AE3               	incf	plusw1,f,c
 21068  017730                     l8116:
 21069                           
 21070                           ;stkvar	_dividend @ sp[(-10)+-8]
 21071  017730  0EF5               	movlw	-11
 21072  017732  AEE3               	btfss	plusw1,7,c
 21073  017734  D027               	goto	l8122
 21074                           
 21075                           ;stkvar	_dividend @ sp[(-10)+-8]
 21076                           ;stkvar	_dividend @ sp[(-10)+-8]
 21077  017736  0EEE               	movlw	-18
 21078  017738  6CE3               	negf	plusw1,c
 21079  01773A  0EEF               	movlw	-17
 21080  01773C  1EE3               	comf	plusw1,f,c
 21081  01773E  0EF0               	movlw	-16
 21082  017740  1EE3               	comf	plusw1,f,c
 21083  017742  0EF1               	movlw	-15
 21084  017744  1EE3               	comf	plusw1,f,c
 21085  017746  0EF2               	movlw	-14
 21086  017748  1EE3               	comf	plusw1,f,c
 21087  01774A  0EF3               	movlw	-13
 21088  01774C  1EE3               	comf	plusw1,f,c
 21089  01774E  0EF4               	movlw	-12
 21090  017750  1EE3               	comf	plusw1,f,c
 21091  017752  0EF5               	movlw	-11
 21092  017754  1EE3               	comf	plusw1,f,c
 21093  017756  E314               	bnc	u6310
 21094  017758  0EEF               	movlw	-17
 21095  01775A  2AE3               	incf	plusw1,f,c
 21096  01775C  E311               	bnc	u6310
 21097  01775E  0EF0               	movlw	-16
 21098  017760  2AE3               	incf	plusw1,f,c
 21099  017762  E30E               	bnc	u6310
 21100  017764  0EF1               	movlw	-15
 21101  017766  2AE3               	incf	plusw1,f,c
 21102  017768  E30B               	bnc	u6310
 21103  01776A  0EF2               	movlw	-14
 21104  01776C  2AE3               	incf	plusw1,f,c
 21105  01776E  E308               	bnc	u6310
 21106  017770  0EF3               	movlw	-13
 21107  017772  2AE3               	incf	plusw1,f,c
 21108  017774  E305               	bnc	u6310
 21109  017776  0EF4               	movlw	-12
 21110  017778  2AE3               	incf	plusw1,f,c
 21111  01777A  E302               	bnc	u6310
 21112  01777C  0EF5               	movlw	-11
 21113  01777E  2AE3               	incf	plusw1,f,c
 21114  017780                     u6310:
 21115                           
 21116                           ;stkvar	_sign @ sp[(-10)+8]
 21117  017780  0EFE               	movlw	-2
 21118  017782  70E3               	btg	plusw1,0,c
 21119  017784                     l8122:
 21120                           
 21121                           ;stkvar	_quotient @ sp[(-10)+0]
 21122  017784  0E07               	movlw	7
 21123  017786  6E01               	movwf	btemp^0,c
 21124  017788  0EF6               	movlw	-10
 21125  01778A                     u6321:
 21126  01778A  6AE3               	clrf	plusw1,c
 21127  01778C  2AE8               	incf	wreg,f,c
 21128  01778E  0601               	decf	btemp^0,f,c
 21129  017790  E2FC               	bc	u6321
 21130                           
 21131                           ;stkvar	_divisor @ sp[(-10)+-16]
 21132  017792  0EE6               	movlw	-26
 21133  017794  50E3               	movf	plusw1,w,c
 21134  017796  E116               	bnz	u6330
 21135  017798  0EE7               	movlw	-25
 21136  01779A  50E3               	movf	plusw1,w,c
 21137  01779C  E113               	bnz	u6330
 21138  01779E  0EE8               	movlw	-24
 21139  0177A0  50E3               	movf	plusw1,w,c
 21140  0177A2  E110               	bnz	u6330
 21141  0177A4  0EE9               	movlw	-23
 21142  0177A6  50E3               	movf	plusw1,w,c
 21143  0177A8  E10D               	bnz	u6330
 21144  0177AA  0EEA               	movlw	-22
 21145  0177AC  50E3               	movf	plusw1,w,c
 21146  0177AE  E10A               	bnz	u6330
 21147  0177B0  0EEB               	movlw	-21
 21148  0177B2  50E3               	movf	plusw1,w,c
 21149  0177B4  E107               	bnz	u6330
 21150  0177B6  0EEC               	movlw	-20
 21151  0177B8  50E3               	movf	plusw1,w,c
 21152  0177BA  E104               	bnz	u6330
 21153  0177BC  0EED               	movlw	-19
 21154  0177BE  50E3               	movf	plusw1,w,c
 21155  0177C0  B4D8               	btfsc	status,2,c
 21156  0177C2  D088               	goto	u6360
 21157  0177C4                     u6330:
 21158                           
 21159                           ;stkvar	_counter @ sp[(-10)+9]
 21160  0177C4  0EFF               	movlw	-1
 21161  0177C6  6AE3               	clrf	plusw1,c
 21162  0177C8  D012               	goto	L26
 21163  0177CA                     l8128:
 21164                           
 21165                           ;stkvar	_divisor @ sp[(-10)+-16]
 21166  0177CA  90D8               	bcf	status,0,c
 21167  0177CC  0EE6               	movlw	-26
 21168  0177CE  36E3               	rlcf	plusw1,f,c
 21169  0177D0  0EE7               	movlw	-25
 21170  0177D2  36E3               	rlcf	plusw1,f,c
 21171  0177D4  0EE8               	movlw	-24
 21172  0177D6  36E3               	rlcf	plusw1,f,c
 21173  0177D8  0EE9               	movlw	-23
 21174  0177DA  36E3               	rlcf	plusw1,f,c
 21175  0177DC  0EEA               	movlw	-22
 21176  0177DE  36E3               	rlcf	plusw1,f,c
 21177  0177E0  0EEB               	movlw	-21
 21178  0177E2  36E3               	rlcf	plusw1,f,c
 21179  0177E4  0EEC               	movlw	-20
 21180  0177E6  36E3               	rlcf	plusw1,f,c
 21181  0177E8  0EED               	movlw	-19
 21182  0177EA  36E3               	rlcf	plusw1,f,c
 21183                           
 21184                           ;stkvar	_counter @ sp[(-10)+9]
 21185  0177EC  0EFF               	movlw	-1
 21186  0177EE                     L26:
 21187  0177EE  2AE3               	incf	plusw1,f,c
 21188                           
 21189                           ;stkvar	_divisor @ sp[(-10)+-16]
 21190  0177F0  0EED               	movlw	-19
 21191  0177F2  AEE3               	btfss	plusw1,7,c
 21192  0177F4  D7EA               	goto	l8128
 21193  0177F6                     u6340:
 21194                           
 21195                           ;stkvar	_quotient @ sp[(-10)+0]
 21196  0177F6  90D8               	bcf	status,0,c
 21197  0177F8  0EF6               	movlw	-10
 21198  0177FA  36E3               	rlcf	plusw1,f,c
 21199  0177FC  0EF7               	movlw	-9
 21200  0177FE  36E3               	rlcf	plusw1,f,c
 21201  017800  0EF8               	movlw	-8
 21202  017802  36E3               	rlcf	plusw1,f,c
 21203  017804  0EF9               	movlw	-7
 21204  017806  36E3               	rlcf	plusw1,f,c
 21205  017808  0EFA               	movlw	-6
 21206  01780A  36E3               	rlcf	plusw1,f,c
 21207  01780C  0EFB               	movlw	-5
 21208  01780E  36E3               	rlcf	plusw1,f,c
 21209  017810  0EFC               	movlw	-4
 21210  017812  36E3               	rlcf	plusw1,f,c
 21211  017814  0EFD               	movlw	-3
 21212  017816  36E3               	rlcf	plusw1,f,c
 21213                           
 21214                           ;stkvar	_divisor @ sp[(-10)+-16]
 21215                           ;stkvar	_dividend @ sp[(-10)+-8]
 21216  017818  50E1               	movf	fsr1l,w,c
 21217  01781A  0FEE               	addlw	-18
 21218  01781C  6ED9               	movwf	fsr2l,c
 21219  01781E  50E2               	movf	fsr1h,w,c
 21220  017820  6EDA               	movwf	fsr2h,c
 21221  017822  0EFF               	movlw	255
 21222  017824  22DA               	addwfc	fsr2h,f,c
 21223  017826  0EE6               	movlw	-26
 21224  017828  50E3               	movf	plusw1,w,c
 21225  01782A  5CDE               	subwf	postinc2,w,c
 21226  01782C  0EE7               	movlw	-25
 21227  01782E  50E3               	movf	plusw1,w,c
 21228  017830  58DE               	subwfb	postinc2,w,c
 21229  017832  0EE8               	movlw	-24
 21230  017834  50E3               	movf	plusw1,w,c
 21231  017836  58DE               	subwfb	postinc2,w,c
 21232  017838  0EE9               	movlw	-23
 21233  01783A  50E3               	movf	plusw1,w,c
 21234  01783C  58DE               	subwfb	postinc2,w,c
 21235  01783E  0EEA               	movlw	-22
 21236  017840  50E3               	movf	plusw1,w,c
 21237  017842  58DE               	subwfb	postinc2,w,c
 21238  017844  0EEB               	movlw	-21
 21239  017846  50E3               	movf	plusw1,w,c
 21240  017848  58DE               	subwfb	postinc2,w,c
 21241  01784A  0EEC               	movlw	-20
 21242  01784C  50E3               	movf	plusw1,w,c
 21243  01784E  58DE               	subwfb	postinc2,w,c
 21244  017850  0EED               	movlw	-19
 21245  017852  50E3               	movf	plusw1,w,c
 21246  017854  58DE               	subwfb	postinc2,w,c
 21247  017856  A0D8               	btfss	status,0,c
 21248  017858  D021               	goto	l8140
 21249                           
 21250                           ;stkvar	_divisor @ sp[(-10)+-16]
 21251                           ;stkvar	_dividend @ sp[(-10)+-8]
 21252  01785A  50E1               	movf	fsr1l,w,c
 21253  01785C  0FEE               	addlw	-18
 21254  01785E  6ED9               	movwf	fsr2l,c
 21255  017860  50E2               	movf	fsr1h,w,c
 21256  017862  6EDA               	movwf	fsr2h,c
 21257  017864  0EFF               	movlw	255
 21258  017866  22DA               	addwfc	fsr2h,f,c
 21259  017868  0EE6               	movlw	-26
 21260  01786A  50E3               	movf	plusw1,w,c
 21261  01786C  5EDE               	subwf	postinc2,f,c
 21262  01786E  0EE7               	movlw	-25
 21263  017870  50E3               	movf	plusw1,w,c
 21264  017872  5ADE               	subwfb	postinc2,f,c
 21265  017874  0EE8               	movlw	-24
 21266  017876  50E3               	movf	plusw1,w,c
 21267  017878  5ADE               	subwfb	postinc2,f,c
 21268  01787A  0EE9               	movlw	-23
 21269  01787C  50E3               	movf	plusw1,w,c
 21270  01787E  5ADE               	subwfb	postinc2,f,c
 21271  017880  0EEA               	movlw	-22
 21272  017882  50E3               	movf	plusw1,w,c
 21273  017884  5ADE               	subwfb	postinc2,f,c
 21274  017886  0EEB               	movlw	-21
 21275  017888  50E3               	movf	plusw1,w,c
 21276  01788A  5ADE               	subwfb	postinc2,f,c
 21277  01788C  0EEC               	movlw	-20
 21278  01788E  50E3               	movf	plusw1,w,c
 21279  017890  5ADE               	subwfb	postinc2,f,c
 21280  017892  0EED               	movlw	-19
 21281  017894  50E3               	movf	plusw1,w,c
 21282  017896  5ADE               	subwfb	postinc2,f,c
 21283                           
 21284                           ;stkvar	_quotient @ sp[(-10)+0]
 21285  017898  0EF6               	movlw	-10
 21286  01789A  80E3               	bsf	plusw1,0,c
 21287  01789C                     l8140:
 21288                           
 21289                           ;stkvar	_divisor @ sp[(-10)+-16]
 21290  01789C  90D8               	bcf	status,0,c
 21291  01789E  0EED               	movlw	-19
 21292  0178A0  32E3               	rrcf	plusw1,f,c
 21293  0178A2  0EEC               	movlw	-20
 21294  0178A4  32E3               	rrcf	plusw1,f,c
 21295  0178A6  0EEB               	movlw	-21
 21296  0178A8  32E3               	rrcf	plusw1,f,c
 21297  0178AA  0EEA               	movlw	-22
 21298  0178AC  32E3               	rrcf	plusw1,f,c
 21299  0178AE  0EE9               	movlw	-23
 21300  0178B0  32E3               	rrcf	plusw1,f,c
 21301  0178B2  0EE8               	movlw	-24
 21302  0178B4  32E3               	rrcf	plusw1,f,c
 21303  0178B6  0EE7               	movlw	-25
 21304  0178B8  32E3               	rrcf	plusw1,f,c
 21305  0178BA  0EE6               	movlw	-26
 21306  0178BC  32E3               	rrcf	plusw1,f,c
 21307                           
 21308                           ;stkvar	_counter @ sp[(-10)+9]
 21309  0178BE  0EFF               	movlw	-1
 21310  0178C0  50E3               	movf	plusw1,w,c
 21311  0178C2  6E01               	movwf	btemp^0,c
 21312  0178C4  0E01               	movlw	1
 21313  0178C6  5E01               	subwf	btemp^0,f,c
 21314  0178C8  0EFF               	movlw	-1
 21315  0178CA  0060  F007  FFE3   	movff	btemp,plusw1
 21316  0178D0  A4D8               	btfss	status,2,c
 21317  0178D2  D791               	goto	u6340
 21318  0178D4                     u6360:
 21319                           
 21320                           ;stkvar	_sign @ sp[(-10)+8]
 21321  0178D4  0EFE               	movlw	-2
 21322  0178D6  50E3               	movf	plusw1,w,c
 21323  0178D8  B4D8               	btfsc	status,2,c
 21324  0178DA  D025               	goto	u6380
 21325                           
 21326                           ;stkvar	_quotient @ sp[(-10)+0]
 21327                           ;stkvar	_quotient @ sp[(-10)+0]
 21328  0178DC  0EF6               	movlw	-10
 21329  0178DE  6CE3               	negf	plusw1,c
 21330  0178E0  0EF7               	movlw	-9
 21331  0178E2  1EE3               	comf	plusw1,f,c
 21332  0178E4  0EF8               	movlw	-8
 21333  0178E6  1EE3               	comf	plusw1,f,c
 21334  0178E8  0EF9               	movlw	-7
 21335  0178EA  1EE3               	comf	plusw1,f,c
 21336  0178EC  0EFA               	movlw	-6
 21337  0178EE  1EE3               	comf	plusw1,f,c
 21338  0178F0  0EFB               	movlw	-5
 21339  0178F2  1EE3               	comf	plusw1,f,c
 21340  0178F4  0EFC               	movlw	-4
 21341  0178F6  1EE3               	comf	plusw1,f,c
 21342  0178F8  0EFD               	movlw	-3
 21343  0178FA  1EE3               	comf	plusw1,f,c
 21344  0178FC  E314               	bnc	u6380
 21345  0178FE  0EF7               	movlw	-9
 21346  017900  2AE3               	incf	plusw1,f,c
 21347  017902  E311               	bnc	u6380
 21348  017904  0EF8               	movlw	-8
 21349  017906  2AE3               	incf	plusw1,f,c
 21350  017908  E30E               	bnc	u6380
 21351  01790A  0EF9               	movlw	-7
 21352  01790C  2AE3               	incf	plusw1,f,c
 21353  01790E  E30B               	bnc	u6380
 21354  017910  0EFA               	movlw	-6
 21355  017912  2AE3               	incf	plusw1,f,c
 21356  017914  E308               	bnc	u6380
 21357  017916  0EFB               	movlw	-5
 21358  017918  2AE3               	incf	plusw1,f,c
 21359  01791A  E305               	bnc	u6380
 21360  01791C  0EFC               	movlw	-4
 21361  01791E  2AE3               	incf	plusw1,f,c
 21362  017920  E302               	bnc	u6380
 21363  017922  0EFD               	movlw	-3
 21364  017924  2AE3               	incf	plusw1,f,c
 21365  017926                     u6380:
 21366                           
 21367                           ;stkvar	_quotient @ sp[(-10)+0]
 21368  017926  0EF6               	movlw	246
 21369  017928  24E1               	addwf	fsr1l,w,c
 21370  01792A  6ED9               	movwf	fsr2l,c
 21371  01792C  0EFF               	movlw	255
 21372  01792E  20E2               	addwfc	fsr1h,w,c
 21373  017930  6EDA               	movwf	fsr2h,c
 21374                           
 21375                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21376  017932  0E08               	movlw	8
 21377  017934  6E01               	movwf	btemp^0,c
 21378  017936  0EEE               	movlw	-18
 21379  017938                     us639999:
 21380  017938  006F FF7B FFE3     	movff	postinc2,plusw1
 21381  01793E  28E8               	incf	wreg,w,c
 21382  017940  2E01               	decfsz	btemp^0,f,c
 21383  017942  D7FA               	bra	us639999
 21384                           
 21385                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21386  017944  0EF6               	movlw	246
 21387  017946  26E1               	addwf	fsr1l,f,c
 21388  017948  0EFF               	movlw	255
 21389  01794A  22E2               	addwfc	fsr1h,f,c
 21390  01794C  0012               	return		;funcret
 21391  01794E                     __end_of___aodiv:
 21392                           	opt callstack 0
 21393                           
 21394 ;; *************** function _ctoa *****************
 21395 ;; Defined at:
 21396 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21397 ;; Parameters:    Size  Location     Type
 21398 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21399 ;;		 -> f(6), NULL(0), 
 21400 ;;  c               1  [STACK] unsigned char 
 21401 ;; Auto vars:     Size  Location     Type
 21402 ;;  w               2  [STACK] int 
 21403 ;;  l               2    0        int 
 21404 ;; Return value:  Size  Location     Type
 21405 ;;                  2  [STACK] int 
 21406 ;; Registers used:
 21407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21408 ;; Tracked objects:
 21409 ;;		On entry : 0/0
 21410 ;;		On exit  : 0/0
 21411 ;;		Unchanged: 0/0
 21412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21417 ;;Total ram usage:        0 bytes
 21418 ;; Hardware stack levels used:    1
 21419 ;; Hardware stack levels required when called:   20
 21420 ;; This function calls:
 21421 ;;		_pad
 21422 ;; This function is called by:
 21423 ;;		_vfpfcnvrt
 21424 ;; This function uses a reentrant model
 21425 ;;
 21426                           
 21427                           	psect	text72
 21428  01ABCC                     __ptext72:
 21429                           	opt callstack 0
 21430  01ABCC                     _ctoa:
 21431                           	opt callstack 0
 21432                           
 21433                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21434  01ABCC  52E6               	movf	postinc1,f,c
 21435  01ABCE  52E6               	movf	postinc1,f,c
 21436                           
 21437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21438                           
 21439                           ;incstack = 0
 21440 ;; hardware stack exceeded
 21441  01ABD0  503A               	movf	_width^0,w,c
 21442  01ABD2  103B               	iorwf	(_width+1)^0,w,c
 21443  01ABD4  A4D8               	btfss	status,2,c
 21444  01ABD6  D009               	goto	l11916
 21445                           
 21446                           ;stkvar	_w @ sp[(-2)+0]
 21447  01ABD8  0EFE               	movlw	-2
 21448  01ABDA  0060  F0EB  FFE3   	movff	_width,plusw1
 21449  01ABE0  0EFF               	movlw	-1
 21450  01ABE2  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21451  01ABE8  D016               	goto	l11918
 21452  01ABEA                     l11916:
 21453  01ABEA  0EFF               	movlw	255
 21454  01ABEC  6E0B               	movwf	(btemp+10)^0,c
 21455  01ABEE  0EFF               	movlw	255
 21456  01ABF0  6E0C               	movwf	(btemp+11)^0,c
 21457  01ABF2  0060  F0E8  F009   	movff	_width,btemp+8
 21458  01ABF8  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21459  01ABFE  500B               	movf	(btemp+10)^0,w,c
 21460  01AC00  2609               	addwf	(btemp+8)^0,f,c
 21461  01AC02  500C               	movf	(btemp+11)^0,w,c
 21462  01AC04  220A               	addwfc	(btemp+9)^0,f,c
 21463                           
 21464                           ;stkvar	_w @ sp[(-2)+0]
 21465  01AC06  0EFE               	movlw	-2
 21466  01AC08  0060  F027  FFE3   	movff	btemp+8,plusw1
 21467  01AC0E  0EFF               	movlw	-1
 21468  01AC10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21469  01AC16                     l11918:
 21470                           
 21471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21472                           ;stkvar	_c @ sp[(-2)+-3]
 21473  01AC16  0EFB               	movlw	-5
 21474  01AC18  006F FF8C  F297    	movff	plusw1,_dbuf
 21475                           
 21476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21477  01AC1E  0102               	movlb	2	; () banked
 21478  01AC20  6B98               	clrf	(_dbuf+1)& (0+255),b
 21479                           
 21480                           ; BSR set to: 2
 21481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21482                           ;stkvar	_w @ sp[(-2)+0]
 21483  01AC22  0EFE               	movlw	-2
 21484  01AC24  006F FF8F FFE6     	movff	plusw1,postinc1
 21485  01AC2A  006F FF8F FFE6     	movff	plusw1,postinc1
 21486  01AC30  0E97               	movlw	low _dbuf
 21487  01AC32  6EE6               	movwf	postinc1,c
 21488  01AC34  0E02               	movlw	high _dbuf
 21489  01AC36  6EE6               	movwf	postinc1,c
 21490                           
 21491                           ;stkvar	_fp @ sp[(-6)+-2]
 21492  01AC38  0EF8               	movlw	-8
 21493  01AC3A  006F FF8F FFE6     	movff	plusw1,postinc1
 21494  01AC40  006F FF8F FFE6     	movff	plusw1,postinc1
 21495  01AC46  ECEE  F0CC         	call	_pad	;wreg free
 21496                           
 21497                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21498  01AC4A  0EFB               	movlw	251
 21499  01AC4C  26E1               	addwf	fsr1l,f,c
 21500  01AC4E  0EFF               	movlw	255
 21501  01AC50  22E2               	addwfc	fsr1h,f,c
 21502  01AC52  0012               	return		;funcret
 21503  01AC54                     __end_of_ctoa:
 21504                           	opt callstack 0
 21505                           
 21506 ;; *************** function _pad *****************
 21507 ;; Defined at:
 21508 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21509 ;; Parameters:    Size  Location     Type
 21510 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21511 ;;		 -> f(6), NULL(0), 
 21512 ;;  buf             2  [STACK] PTR unsigned char 
 21513 ;;		 -> dbuf(80), 
 21514 ;;  p               2  [STACK] int 
 21515 ;; Auto vars:     Size  Location     Type
 21516 ;;  w               2  [STACK] int 
 21517 ;;  i               2  [STACK] int 
 21518 ;; Return value:  Size  Location     Type
 21519 ;;                  2  [STACK] int 
 21520 ;; Registers used:
 21521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21522 ;; Tracked objects:
 21523 ;;		On entry : 0/2
 21524 ;;		On exit  : 0/0
 21525 ;;		Unchanged: 0/0
 21526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21531 ;;Total ram usage:        0 bytes
 21532 ;; Hardware stack levels used:    1
 21533 ;; Hardware stack levels required when called:   19
 21534 ;; This function calls:
 21535 ;;		_fputc
 21536 ;;		_fputs
 21537 ;;		_strlen
 21538 ;; This function is called by:
 21539 ;;		_ctoa
 21540 ;;		_dtoa
 21541 ;;		_efgtoa
 21542 ;;		_utoa
 21543 ;;		_xtoa
 21544 ;; This function uses a reentrant model
 21545 ;;
 21546                           
 21547                           	psect	text73
 21548  0199DC                     __ptext73:
 21549                           	opt callstack 0
 21550  0199DC                     _pad:
 21551                           	opt callstack 0
 21552                           
 21553                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21554  0199DC  52E6               	movf	postinc1,f,c
 21555  0199DE  52E6               	movf	postinc1,f,c
 21556  0199E0  52E6               	movf	postinc1,f,c
 21557  0199E2  52E6               	movf	postinc1,f,c
 21558                           
 21559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21560                           
 21561                           ;incstack = 0
 21562 ;; hardware stack exceeded
 21563  0199E4  A03E               	btfss	_flags^0,0,c
 21564  0199E6  D010               	goto	l11878
 21565                           
 21566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21567                           ;stkvar	_fp @ sp[(-4)+-2]
 21568  0199E8  0EFA               	movlw	-6
 21569  0199EA  006F FF8F FFE6     	movff	plusw1,postinc1
 21570  0199F0  006F FF8F FFE6     	movff	plusw1,postinc1
 21571                           
 21572                           ;stkvar	_buf @ sp[(-6)+-4]
 21573  0199F6  0EF6               	movlw	-10
 21574  0199F8  006F FF8F FFE6     	movff	plusw1,postinc1
 21575  0199FE  006F FF8F FFE6     	movff	plusw1,postinc1
 21576  019A04  ECC0  F0D4         	call	_fputs	;wreg free
 21577  019A08                     l11878:
 21578                           
 21579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21580                           ;stkvar	_p @ sp[(-4)+-6]
 21581  019A08  0EF7               	movlw	-9
 21582  019A0A  BEE3               	btfsc	plusw1,7,c
 21583  019A0C  D011               	goto	l11882
 21584                           
 21585                           ;stkvar	_p @ sp[(-4)+-6]
 21586                           ;stkvar	_w @ sp[(-4)+0]
 21587  019A0E  0EF6               	movlw	-10
 21588  019A10  006F FF8C  F001    	movff	plusw1,btemp
 21589  019A16  0EFC               	movlw	-4
 21590  019A18  0060  F007  FFE3   	movff	btemp,plusw1
 21591  019A1E  0EF7               	movlw	-9
 21592  019A20  006F FF8C  F001    	movff	plusw1,btemp
 21593  019A26  0EFD               	movlw	-3
 21594  019A28  0060  F007  FFE3   	movff	btemp,plusw1
 21595  019A2E  D004               	goto	l2138
 21596  019A30                     l11882:
 21597                           
 21598                           ;stkvar	_w @ sp[(-4)+0]
 21599  019A30  0EFC               	movlw	-4
 21600  019A32  6AE3               	clrf	plusw1,c
 21601  019A34  0EFD               	movlw	-3
 21602  019A36  6AE3               	clrf	plusw1,c
 21603  019A38                     l2138:
 21604                           
 21605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21606                           ;stkvar	_i @ sp[(-4)+2]
 21607  019A38  0EFE               	movlw	-2
 21608  019A3A  6AE3               	clrf	plusw1,c
 21609  019A3C  0EFF               	movlw	-1
 21610  019A3E  6AE3               	clrf	plusw1,c
 21611                           
 21612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21613  019A40  D01E               	goto	l11888
 21614  019A42                     l11884:
 21615                           
 21616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21617                           ;stkvar	_fp @ sp[(-4)+-2]
 21618  019A42  0EFA               	movlw	-6
 21619  019A44  006F FF8F FFE6     	movff	plusw1,postinc1
 21620  019A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 21621  019A50  0E20               	movlw	32
 21622  019A52  6EE6               	movwf	postinc1,c
 21623  019A54  0E00               	movlw	0
 21624  019A56  6EE6               	movwf	postinc1,c
 21625  019A58  ECD0  F0CB         	call	_fputc	;wreg free
 21626                           
 21627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21628                           ;stkvar	_i @ sp[(-4)+2]
 21629  019A5C  0EFE               	movlw	-2
 21630  019A5E  50E3               	movf	plusw1,w,c
 21631  019A60  0F01               	addlw	1
 21632  019A62  6E01               	movwf	btemp^0,c
 21633  019A64  0EFE               	movlw	-2
 21634  019A66  0060  F007  FFE3   	movff	btemp,plusw1
 21635  019A6C  6A01               	clrf	btemp^0,c
 21636  019A6E  0EFF               	movlw	-1
 21637  019A70  50E3               	movf	plusw1,w,c
 21638  019A72  2001               	addwfc	btemp^0,w,c
 21639  019A74  6E01               	movwf	btemp^0,c
 21640  019A76  0EFF               	movlw	-1
 21641  019A78  0060  F007  FFE3   	movff	btemp,plusw1
 21642  019A7E                     l11888:
 21643                           
 21644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21645                           ;stkvar	_w @ sp[(-4)+0]
 21646                           ;stkvar	_i @ sp[(-4)+2]
 21647  019A7E  50E1               	movf	fsr1l,w,c
 21648  019A80  0FFE               	addlw	-2
 21649  019A82  6ED9               	movwf	fsr2l,c
 21650  019A84  50E2               	movf	fsr1h,w,c
 21651  019A86  6EDA               	movwf	fsr2h,c
 21652  019A88  0EFF               	movlw	255
 21653  019A8A  22DA               	addwfc	fsr2h,f,c
 21654  019A8C  0EFC               	movlw	-4
 21655  019A8E  50E3               	movf	plusw1,w,c
 21656  019A90  5CDE               	subwf	postinc2,w,c
 21657  019A92  50DE               	movf	postinc2,w,c
 21658  019A94  0A80               	xorlw	128
 21659  019A96  6E01               	movwf	btemp^0,c
 21660  019A98  0EFD               	movlw	-3
 21661  019A9A  50E3               	movf	plusw1,w,c
 21662  019A9C  0A80               	xorlw	128
 21663  019A9E  5801               	subwfb	btemp^0,w,c
 21664  019AA0  A0D8               	btfss	status,0,c
 21665  019AA2  D7CF               	goto	l11884
 21666                           
 21667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21668  019AA4  B03E               	btfsc	_flags^0,0,c
 21669  019AA6  D010               	goto	l11892
 21670                           
 21671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21672                           ;stkvar	_fp @ sp[(-4)+-2]
 21673  019AA8  0EFA               	movlw	-6
 21674  019AAA  006F FF8F FFE6     	movff	plusw1,postinc1
 21675  019AB0  006F FF8F FFE6     	movff	plusw1,postinc1
 21676                           
 21677                           ;stkvar	_buf @ sp[(-6)+-4]
 21678  019AB6  0EF6               	movlw	-10
 21679  019AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 21680  019ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 21681  019AC4  ECC0  F0D4         	call	_fputs	;wreg free
 21682  019AC8                     l11892:
 21683                           
 21684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21685                           ;stkvar	_w @ sp[(-4)+0]
 21686                           ;stkvar	_buf @ sp[(-4)+-4]
 21687  019AC8  0EF8               	movlw	-8
 21688  019ACA  006F FF8F FFE6     	movff	plusw1,postinc1
 21689  019AD0  006F FF8F FFE6     	movff	plusw1,postinc1
 21690  019AD6  EC6F  F0D4         	call	_strlen	;wreg free
 21691  019ADA  0EFC               	movlw	-4
 21692  019ADC  50E3               	movf	plusw1,w,c
 21693  019ADE  2601               	addwf	btemp^0,f,c
 21694  019AE0  0EFD               	movlw	-3
 21695  019AE2  50E3               	movf	plusw1,w,c
 21696  019AE4  2202               	addwfc	(btemp+1)^0,f,c
 21697                           
 21698                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21699  019AE6  0EF6               	movlw	246
 21700  019AE8  26E1               	addwf	fsr1l,f,c
 21701  019AEA  0EFF               	movlw	255
 21702  019AEC  22E2               	addwfc	fsr1h,f,c
 21703  019AEE  0012               	return		;funcret
 21704  019AF0                     __end_of_pad:
 21705                           	opt callstack 0
 21706                           
 21707 ;; *************** function _strlen *****************
 21708 ;; Defined at:
 21709 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;  s               2  [STACK] PTR const unsigned char 
 21712 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21713 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21714 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21715 ;;		 -> V(191), 
 21716 ;; Auto vars:     Size  Location     Type
 21717 ;;  a               2  [STACK] PTR const unsigned char 
 21718 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21719 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21720 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21721 ;;		 -> V(191), 
 21722 ;; Return value:  Size  Location     Type
 21723 ;;                  2  [STACK] unsigned int 
 21724 ;; Registers used:
 21725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21726 ;; Tracked objects:
 21727 ;;		On entry : 0/0
 21728 ;;		On exit  : 0/0
 21729 ;;		Unchanged: 0/0
 21730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21735 ;;Total ram usage:        0 bytes
 21736 ;; Hardware stack levels used:    1
 21737 ;; Hardware stack levels required when called:   15
 21738 ;; This function calls:
 21739 ;;		Nothing
 21740 ;; This function is called by:
 21741 ;;		_eaDogM_WriteString
 21742 ;;		_spinners
 21743 ;;		_calc_bsoc
 21744 ;;		_pad
 21745 ;;		_stoa
 21746 ;; This function uses a reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text74
 21750  01A8DE                     __ptext74:
 21751                           	opt callstack 0
 21752  01A8DE                     _strlen:
 21753                           	opt callstack 0
 21754                           
 21755                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21756  01A8DE  52E6               	movf	postinc1,f,c
 21757  01A8E0  52E6               	movf	postinc1,f,c
 21758                           
 21759                           ;stkvar	_s @ sp[(-2)+-2]
 21760                           
 21761                           ;incstack = 0
 21762 ;; hardware stack exceeded
 21763  01A8E2  0EFC               	movlw	-4
 21764  01A8E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21765  01A8EA  0EFD               	movlw	-3
 21766  01A8EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21767                           
 21768                           ;stkvar	_a @ sp[(-2)+0]
 21769  01A8F2  0EFF               	movlw	-1
 21770  01A8F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 21771  01A8FA  0EFE               	movlw	-2
 21772  01A8FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21773  01A902  D011               	goto	l7692
 21774  01A904                     l7690:
 21775                           
 21776                           ;stkvar	_s @ sp[(-2)+-2]
 21777  01A904  0EFC               	movlw	-4
 21778  01A906  50E3               	movf	plusw1,w,c
 21779  01A908  0F01               	addlw	1
 21780  01A90A  6E01               	movwf	btemp^0,c
 21781  01A90C  0EFC               	movlw	-4
 21782  01A90E  0060  F007  FFE3   	movff	btemp,plusw1
 21783  01A914  6A01               	clrf	btemp^0,c
 21784  01A916  0EFD               	movlw	-3
 21785  01A918  50E3               	movf	plusw1,w,c
 21786  01A91A  2001               	addwfc	btemp^0,w,c
 21787  01A91C  6E01               	movwf	btemp^0,c
 21788  01A91E  0EFD               	movlw	-3
 21789  01A920  0060  F007  FFE3   	movff	btemp,plusw1
 21790  01A926                     l7692:
 21791                           
 21792                           ;stkvar	_s @ sp[(-2)+-2]
 21793  01A926  0EFC               	movlw	-4
 21794  01A928  006F FF8F FFF6     	movff	plusw1,tblptrl
 21795  01A92E  0EFD               	movlw	-3
 21796  01A930  006F FF8F FFF7     	movff	plusw1,tblptrh
 21797  01A936  0E00               	movlw	low (__mediumconst shr (0+16))
 21798  01A938  6EF8               	movwf	tblptru,c
 21799  01A93A  0E1F               	movlw	(high __ramtop+-1)
 21800  01A93C  64F7               	cpfsgt	tblptrh,c
 21801  01A93E  D003               	bra	u5407
 21802  01A940  0008               	tblrd		*
 21803  01A942  50F5               	movf	tablat,w,c
 21804  01A944  D007               	bra	u5400
 21805  01A946                     u5407:
 21806  01A946  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21807  01A94C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21808  01A952  50EF               	movf	indf0,w,c
 21809  01A954                     u5400:
 21810  01A954  0900               	iorlw	0
 21811  01A956  A4D8               	btfss	status,2,c
 21812  01A958  D7D5               	goto	l7690
 21813                           
 21814                           ;stkvar	_a @ sp[(-2)+0]
 21815                           ;stkvar	_s @ sp[(-2)+-2]
 21816  01A95A  0EFC               	movlw	-4
 21817  01A95C  006F FF8C  F001    	movff	plusw1,btemp
 21818  01A962  0EFD               	movlw	-3
 21819  01A964  006F FF8C  F002    	movff	plusw1,btemp+1
 21820  01A96A  0EFE               	movlw	-2
 21821  01A96C  50E3               	movf	plusw1,w,c
 21822  01A96E  5E01               	subwf	btemp^0,f,c
 21823  01A970  0EFF               	movlw	-1
 21824  01A972  50E3               	movf	plusw1,w,c
 21825  01A974  5A02               	subwfb	(btemp+1)^0,f,c
 21826                           
 21827                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21828  01A976  52E5               	movf	postdec1,f,c
 21829  01A978  52E5               	movf	postdec1,f,c
 21830  01A97A  52E5               	movf	postdec1,f,c
 21831  01A97C  52E5               	movf	postdec1,f,c
 21832  01A97E  0012               	return		;funcret
 21833  01A980                     __end_of_strlen:
 21834                           	opt callstack 0
 21835                           
 21836 ;; *************** function _fputs *****************
 21837 ;; Defined at:
 21838 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21839 ;; Parameters:    Size  Location     Type
 21840 ;;  s               2  [STACK] PTR const unsigned char 
 21841 ;;		 -> dbuf(80), 
 21842 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21843 ;;		 -> f(6), NULL(0), 
 21844 ;; Auto vars:     Size  Location     Type
 21845 ;;  i               2  [STACK] int 
 21846 ;;  c               1  [STACK] unsigned char 
 21847 ;; Return value:  Size  Location     Type
 21848 ;;                  2  [STACK] int 
 21849 ;; Registers used:
 21850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21851 ;; Tracked objects:
 21852 ;;		On entry : 0/2
 21853 ;;		On exit  : 0/0
 21854 ;;		Unchanged: 0/0
 21855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21860 ;;Total ram usage:        0 bytes
 21861 ;; Hardware stack levels used:    1
 21862 ;; Hardware stack levels required when called:   18
 21863 ;; This function calls:
 21864 ;;		_fputc
 21865 ;; This function is called by:
 21866 ;;		_pad
 21867 ;; This function uses a reentrant model
 21868 ;;
 21869                           
 21870                           	psect	text75
 21871  01A980                     __ptext75:
 21872                           	opt callstack 0
 21873  01A980                     _fputs:
 21874                           	opt callstack 0
 21875                           
 21876                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21877  01A980  52E6               	movf	postinc1,f,c
 21878  01A982  52E6               	movf	postinc1,f,c
 21879  01A984  52E6               	movf	postinc1,f,c
 21880                           
 21881                           ;stkvar	_i @ sp[(-3)+0]
 21882                           
 21883                           ;incstack = 0
 21884 ;; hardware stack exceeded
 21885  01A986  0EFD               	movlw	-3
 21886  01A988  6AE3               	clrf	plusw1,c
 21887  01A98A  0EFE               	movlw	-2
 21888  01A98C  6AE3               	clrf	plusw1,c
 21889  01A98E  D01F               	goto	l11830
 21890  01A990                     l11826:
 21891                           
 21892                           ;stkvar	_fp @ sp[(-3)+-4]
 21893  01A990  0EF9               	movlw	-7
 21894  01A992  006F FF8F FFE6     	movff	plusw1,postinc1
 21895  01A998  006F FF8F FFE6     	movff	plusw1,postinc1
 21896                           
 21897                           ;stkvar	_c @ sp[(-5)+2]
 21898  01A99E  0EFD               	movlw	-3
 21899  01A9A0  50E3               	movf	plusw1,w,c
 21900  01A9A2  6EE6               	movwf	postinc1,c
 21901  01A9A4  0E00               	movlw	0
 21902  01A9A6  6EE6               	movwf	postinc1,c
 21903  01A9A8  ECD0  F0CB         	call	_fputc	;wreg free
 21904                           
 21905                           ;stkvar	_i @ sp[(-3)+0]
 21906  01A9AC  0EFD               	movlw	-3
 21907  01A9AE  50E3               	movf	plusw1,w,c
 21908  01A9B0  0F01               	addlw	1
 21909  01A9B2  6E01               	movwf	btemp^0,c
 21910  01A9B4  0EFD               	movlw	-3
 21911  01A9B6  0060  F007  FFE3   	movff	btemp,plusw1
 21912  01A9BC  6A01               	clrf	btemp^0,c
 21913  01A9BE  0EFE               	movlw	-2
 21914  01A9C0  50E3               	movf	plusw1,w,c
 21915  01A9C2  2001               	addwfc	btemp^0,w,c
 21916  01A9C4  6E01               	movwf	btemp^0,c
 21917  01A9C6  0EFE               	movlw	-2
 21918  01A9C8  0060  F007  FFE3   	movff	btemp,plusw1
 21919  01A9CE                     l11830:
 21920                           
 21921                           ;stkvar	_i @ sp[(-3)+0]
 21922  01A9CE  0EFD               	movlw	-3
 21923  01A9D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 21924  01A9D6  0EFE               	movlw	-2
 21925  01A9D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21926                           
 21927                           ;stkvar	_s @ sp[(-3)+-2]
 21928  01A9DE  0EFB               	movlw	-5
 21929  01A9E0  006F FF8C  F009    	movff	plusw1,btemp+8
 21930  01A9E6  0EFC               	movlw	-4
 21931  01A9E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 21932  01A9EE  500B               	movf	(btemp+10)^0,w,c
 21933  01A9F0  2409               	addwf	(btemp+8)^0,w,c
 21934  01A9F2  6ED9               	movwf	fsr2l,c
 21935  01A9F4  500C               	movf	(btemp+11)^0,w,c
 21936  01A9F6  200A               	addwfc	(btemp+9)^0,w,c
 21937  01A9F8  6EDA               	movwf	fsr2h,c
 21938  01A9FA  50DF               	movf	indf2,w,c
 21939  01A9FC  6E0C               	movwf	(btemp+11)^0,c
 21940                           
 21941                           ;stkvar	_c @ sp[(-3)+2]
 21942  01A9FE  0EFF               	movlw	-1
 21943  01AA00  0060  F033  FFE3   	movff	btemp+11,plusw1
 21944  01AA06  0EFF               	movlw	-1
 21945  01AA08  50E3               	movf	plusw1,w,c
 21946  01AA0A  A4D8               	btfss	status,2,c
 21947  01AA0C  D7C1               	goto	l11826
 21948                           
 21949                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21950  01AA0E  0EF9               	movlw	249
 21951  01AA10  26E1               	addwf	fsr1l,f,c
 21952  01AA12  0EFF               	movlw	255
 21953  01AA14  22E2               	addwfc	fsr1h,f,c
 21954  01AA16  0012               	return		;funcret
 21955  01AA18                     __end_of_fputs:
 21956                           	opt callstack 0
 21957                           
 21958 ;; *************** function _fputc *****************
 21959 ;; Defined at:
 21960 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21961 ;; Parameters:    Size  Location     Type
 21962 ;;  c               2  [STACK] int 
 21963 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21964 ;;		 -> f(6), NULL(0), 
 21965 ;; Auto vars:     Size  Location     Type
 21966 ;;		None
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  2  [STACK] int 
 21969 ;; Registers used:
 21970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21980 ;;Total ram usage:        0 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; Hardware stack levels required when called:   17
 21983 ;; This function calls:
 21984 ;;		_putch
 21985 ;; This function is called by:
 21986 ;;		_pad
 21987 ;;		_stoa
 21988 ;;		_vfpfcnvrt
 21989 ;;		_fputs
 21990 ;; This function uses a reentrant model
 21991 ;;
 21992                           
 21993                           	psect	text76
 21994  0197A0                     __ptext76:
 21995                           	opt callstack 0
 21996  0197A0                     _fputc:
 21997                           	opt callstack 0
 21998                           
 21999                           ;stkvar	_fp @ sp[(0)+-4]
 22000                           
 22001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22002                           ;incstack = 0
 22003 ;; hardware stack exceeded
 22004  0197A0  0EFC               	movlw	-4
 22005  0197A2  006F FF8C  F001    	movff	plusw1,btemp
 22006  0197A8  0EFD               	movlw	-3
 22007  0197AA  50E3               	movf	plusw1,w,c
 22008  0197AC  1001               	iorwf	btemp^0,w,c
 22009  0197AE  B4D8               	btfsc	status,2,c
 22010  0197B0  D009               	goto	u10710
 22011                           
 22012                           ;stkvar	_fp @ sp[(0)+-4]
 22013  0197B2  0EFC               	movlw	-4
 22014  0197B4  006F FF8C  F001    	movff	plusw1,btemp
 22015  0197BA  0EFD               	movlw	-3
 22016  0197BC  50E3               	movf	plusw1,w,c
 22017  0197BE  1001               	iorwf	btemp^0,w,c
 22018  0197C0  A4D8               	btfss	status,2,c
 22019  0197C2  D006               	goto	l11814
 22020  0197C4                     u10710:
 22021                           
 22022                           ;stkvar	_c @ sp[(0)+-2]
 22023  0197C4  0EFE               	movlw	-2
 22024  0197C6  50E3               	movf	plusw1,w,c
 22025  0197C8  6EE6               	movwf	postinc1,c
 22026  0197CA  ECBD  F0DF         	call	_putch	;wreg free
 22027  0197CE  D075               	goto	l3184
 22028  0197D0                     l11814:
 22029                           
 22030                           ;stkvar	_fp @ sp[(0)+-4]
 22031  0197D0  0EFC               	movlw	-4
 22032  0197D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 22033  0197D8  0EFD               	movlw	-3
 22034  0197DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22035  0197E0  0E04               	movlw	4
 22036  0197E2  240B               	addwf	(btemp+10)^0,w,c
 22037  0197E4  6ED9               	movwf	fsr2l,c
 22038  0197E6  0E00               	movlw	0
 22039  0197E8  200C               	addwfc	(btemp+11)^0,w,c
 22040  0197EA  6EDA               	movwf	fsr2h,c
 22041  0197EC  50DE               	movf	postinc2,w,c
 22042  0197EE  10DE               	iorwf	postinc2,w,c
 22043  0197F0  B4D8               	btfsc	status,2,c
 22044  0197F2  D026               	goto	u10730
 22045                           
 22046                           ;stkvar	_fp @ sp[(0)+-4]
 22047  0197F4  0EFC               	movlw	-4
 22048  0197F6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22049  0197FC  0EFD               	movlw	-3
 22050  0197FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22051  019804  0E04               	movlw	4
 22052  019806  240B               	addwf	(btemp+10)^0,w,c
 22053  019808  6ED9               	movwf	fsr2l,c
 22054  01980A  0E00               	movlw	0
 22055  01980C  200C               	addwfc	(btemp+11)^0,w,c
 22056  01980E  6EDA               	movwf	fsr2h,c
 22057                           
 22058                           ;stkvar	_fp @ sp[(0)+-4]
 22059  019810  0EFC               	movlw	-4
 22060  019812  006F FF8C  F00B    	movff	plusw1,btemp+10
 22061  019818  0EFD               	movlw	-3
 22062  01981A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22063  019820  0E02               	movlw	2
 22064  019822  240B               	addwf	(btemp+10)^0,w,c
 22065  019824  6EE9               	movwf	fsr0l,c
 22066  019826  0E00               	movlw	0
 22067  019828  200C               	addwfc	(btemp+11)^0,w,c
 22068  01982A  6EEA               	movwf	fsr0h,c
 22069  01982C  50DE               	movf	postinc2,w,c
 22070  01982E  5CEE               	subwf	postinc0,w,c
 22071  019830  50EE               	movf	postinc0,w,c
 22072  019832  0A80               	xorlw	128
 22073  019834  6E01               	movwf	btemp^0,c
 22074  019836  50DE               	movf	postinc2,w,c
 22075  019838  0A80               	xorlw	128
 22076  01983A  5801               	subwfb	btemp^0,w,c
 22077  01983C  B0D8               	btfsc	status,0,c
 22078  01983E  D03D               	goto	l3184
 22079  019840                     u10730:
 22080                           
 22081                           ;stkvar	_c @ sp[(0)+-2]
 22082                           ;stkvar	_fp @ sp[(0)+-4]
 22083  019840  0EFC               	movlw	-4
 22084  019842  006F FF8C  F00B    	movff	plusw1,btemp+10
 22085  019848  0EFD               	movlw	-3
 22086  01984A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22087  019850  0E02               	movlw	2
 22088  019852  240B               	addwf	(btemp+10)^0,w,c
 22089  019854  6ED9               	movwf	fsr2l,c
 22090  019856  0E00               	movlw	0
 22091  019858  200C               	addwfc	(btemp+11)^0,w,c
 22092  01985A  6EDA               	movwf	fsr2h,c
 22093  01985C  006F FF78  F00B    	movff	postinc2,btemp+10
 22094  019862  006F FF74  F00C    	movff	postdec2,btemp+11
 22095                           
 22096                           ;stkvar	_fp @ sp[(0)+-4]
 22097  019868  0EFC               	movlw	-4
 22098  01986A  006F FF8F FFD9     	movff	plusw1,fsr2l
 22099  019870  0EFD               	movlw	-3
 22100  019872  006F FF8F FFDA     	movff	plusw1,fsr2h
 22101  019878  006F FF78  F009    	movff	postinc2,btemp+8
 22102  01987E  006F FF74  F00A    	movff	postdec2,btemp+9
 22103  019884  500B               	movf	(btemp+10)^0,w,c
 22104  019886  2409               	addwf	(btemp+8)^0,w,c
 22105  019888  6ED9               	movwf	fsr2l,c
 22106  01988A  500C               	movf	(btemp+11)^0,w,c
 22107  01988C  200A               	addwfc	(btemp+9)^0,w,c
 22108  01988E  6EDA               	movwf	fsr2h,c
 22109  019890  0EFE               	movlw	-2
 22110  019892  006F FF8F FFDF     	movff	plusw1,indf2
 22111                           
 22112                           ;stkvar	_fp @ sp[(0)+-4]
 22113  019898  0EFC               	movlw	-4
 22114  01989A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22115  0198A0  0EFD               	movlw	-3
 22116  0198A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22117  0198A8  0E02               	movlw	2
 22118  0198AA  240B               	addwf	(btemp+10)^0,w,c
 22119  0198AC  6ED9               	movwf	fsr2l,c
 22120  0198AE  0E00               	movlw	0
 22121  0198B0  200C               	addwfc	(btemp+11)^0,w,c
 22122  0198B2  6EDA               	movwf	fsr2h,c
 22123  0198B4  2ADE               	incf	postinc2,f,c
 22124  0198B6  0E00               	movlw	0
 22125  0198B8  22DD               	addwfc	postdec2,f,c
 22126  0198BA                     l3184:
 22127                           
 22128                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22129  0198BA  52E5               	movf	postdec1,f,c
 22130  0198BC  52E5               	movf	postdec1,f,c
 22131  0198BE  52E5               	movf	postdec1,f,c
 22132  0198C0  52E5               	movf	postdec1,f,c
 22133  0198C2  0012               	return		;funcret
 22134  0198C4                     __end_of_fputc:
 22135                           	opt callstack 0
 22136                           
 22137 ;; *************** function _putch *****************
 22138 ;; Defined at:
 22139 ;;		line 421 in file "eadog.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;  c               1  [STACK] unsigned char 
 22142 ;; Auto vars:     Size  Location     Type
 22143 ;;		None
 22144 ;; Return value:  Size  Location     Type
 22145 ;;                  1  [STACK] void 
 22146 ;; Registers used:
 22147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22148 ;; Tracked objects:
 22149 ;;		On entry : 0/0
 22150 ;;		On exit  : 0/0
 22151 ;;		Unchanged: 0/0
 22152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22157 ;;Total ram usage:        0 bytes
 22158 ;; Hardware stack levels used:    1
 22159 ;; Hardware stack levels required when called:   16
 22160 ;; This function calls:
 22161 ;;		_ringBufS_put_dma
 22162 ;; This function is called by:
 22163 ;;		_fputc
 22164 ;; This function uses a reentrant model
 22165 ;;
 22166                           
 22167                           	psect	text77
 22168  01BF7A                     __ptext77:
 22169                           	opt callstack 0
 22170  01BF7A                     _putch:
 22171                           	opt callstack 0
 22172                           
 22173                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22174                           ;stkvar	_c @ sp[(0)+-1]
 22175                           
 22176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22177                           ;incstack = 0
 22178 ;; hardware stack exceeded
 22179  01BF7A  0EFF               	movlw	-1
 22180  01BF7C  50E3               	movf	plusw1,w,c
 22181  01BF7E  6EE6               	movwf	postinc1,c
 22182  01BF80  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 22183  01BF86  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 22184  01BF8C  EC73  F0D3         	call	_ringBufS_put_dma	;wreg free
 22185                           
 22186                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22187  01BF90  52E5               	movf	postdec1,f,c
 22188  01BF92  0012               	return		;funcret
 22189  01BF94                     __end_of_putch:
 22190                           	opt callstack 0
 22191                           
 22192 ;; *************** function _ringBufS_put_dma *****************
 22193 ;; Defined at:
 22194 ;;		line 67 in file "ringbufs.c"
 22195 ;; Parameters:    Size  Location     Type
 22196 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22197 ;;		 -> ring_buf1(67), 
 22198 ;;  c               1  [STACK] const unsigned char 
 22199 ;; Auto vars:     Size  Location     Type
 22200 ;;		None
 22201 ;; Return value:  Size  Location     Type
 22202 ;;                  1  [STACK] void 
 22203 ;; Registers used:
 22204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/0
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;Total ram usage:        0 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; Hardware stack levels required when called:   15
 22217 ;; This function calls:
 22218 ;;		Nothing
 22219 ;; This function is called by:
 22220 ;;		_putch
 22221 ;; This function uses a reentrant model
 22222 ;;
 22223                           
 22224                           	psect	text78
 22225  01A6E6                     __ptext78:
 22226                           	opt callstack 0
 22227  01A6E6                     _ringBufS_put_dma:
 22228                           	opt callstack 0
 22229                           
 22230                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22231                           ;stkvar	__this @ sp[(0)+-2]
 22232                           
 22233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22234                           ;incstack = 0
 22235 ;; hardware stack exceeded
 22236  01A6E6  0EFE               	movlw	-2
 22237  01A6E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 22238  01A6EE  0EFF               	movlw	-1
 22239  01A6F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22240  01A6F6  0E42               	movlw	66
 22241  01A6F8  240B               	addwf	(btemp+10)^0,w,c
 22242  01A6FA  6ED9               	movwf	fsr2l,c
 22243  01A6FC  0E00               	movlw	0
 22244  01A6FE  200C               	addwfc	(btemp+11)^0,w,c
 22245  01A700  6EDA               	movwf	fsr2h,c
 22246  01A702  0E40               	movlw	64
 22247  01A704  60DF               	cpfslt	indf2,c
 22248  01A706  D040               	goto	l1584
 22249                           
 22250                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22251                           ;stkvar	_c @ sp[(0)+-3]
 22252                           ;stkvar	__this @ sp[(0)+-2]
 22253  01A708  0EFE               	movlw	-2
 22254  01A70A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22255  01A710  0EFF               	movlw	-1
 22256  01A712  006F FF8C  F00C    	movff	plusw1,btemp+11
 22257  01A718  0E40               	movlw	64
 22258  01A71A  240B               	addwf	(btemp+10)^0,w,c
 22259  01A71C  6ED9               	movwf	fsr2l,c
 22260  01A71E  0E00               	movlw	0
 22261  01A720  200C               	addwfc	(btemp+11)^0,w,c
 22262  01A722  6EDA               	movwf	fsr2h,c
 22263  01A724  50DF               	movf	indf2,w,c
 22264  01A726  6E0C               	movwf	(btemp+11)^0,c
 22265                           
 22266                           ;stkvar	__this @ sp[(0)+-2]
 22267  01A728  0EFE               	movlw	-2
 22268  01A72A  006F FF8C  F009    	movff	plusw1,btemp+8
 22269  01A730  0EFF               	movlw	-1
 22270  01A732  006F FF8C  F00A    	movff	plusw1,btemp+9
 22271  01A738  500C               	movf	(btemp+11)^0,w,c
 22272  01A73A  2409               	addwf	(btemp+8)^0,w,c
 22273  01A73C  6ED9               	movwf	fsr2l,c
 22274  01A73E  0E00               	movlw	0
 22275  01A740  200A               	addwfc	(btemp+9)^0,w,c
 22276  01A742  6EDA               	movwf	fsr2h,c
 22277  01A744  0EFD               	movlw	-3
 22278  01A746  006F FF8F FFDF     	movff	plusw1,indf2
 22279                           
 22280                           ;ringbufs.c: 71:   ++_this->head;
 22281                           ;stkvar	__this @ sp[(0)+-2]
 22282  01A74C  0EFE               	movlw	-2
 22283  01A74E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22284  01A754  0EFF               	movlw	-1
 22285  01A756  006F FF8C  F00C    	movff	plusw1,btemp+11
 22286  01A75C  0E40               	movlw	64
 22287  01A75E  240B               	addwf	(btemp+10)^0,w,c
 22288  01A760  6ED9               	movwf	fsr2l,c
 22289  01A762  0E00               	movlw	0
 22290  01A764  200C               	addwfc	(btemp+11)^0,w,c
 22291  01A766  6EDA               	movwf	fsr2h,c
 22292  01A768  2ADF               	incf	indf2,f,c
 22293                           
 22294                           ;ringbufs.c: 72:   ++_this->count;
 22295                           ;stkvar	__this @ sp[(0)+-2]
 22296  01A76A  0EFE               	movlw	-2
 22297  01A76C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22298  01A772  0EFF               	movlw	-1
 22299  01A774  006F FF8C  F00C    	movff	plusw1,btemp+11
 22300  01A77A  0E42               	movlw	66
 22301  01A77C  240B               	addwf	(btemp+10)^0,w,c
 22302  01A77E  6ED9               	movwf	fsr2l,c
 22303  01A780  0E00               	movlw	0
 22304  01A782  200C               	addwfc	(btemp+11)^0,w,c
 22305  01A784  6EDA               	movwf	fsr2h,c
 22306  01A786  2ADF               	incf	indf2,f,c
 22307  01A788                     l1584:
 22308                           
 22309                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22310  01A788  52E5               	movf	postdec1,f,c
 22311  01A78A  52E5               	movf	postdec1,f,c
 22312  01A78C  52E5               	movf	postdec1,f,c
 22313  01A78E  0012               	return		;funcret
 22314  01A790                     __end_of_ringBufS_put_dma:
 22315                           	opt callstack 0
 22316                           
 22317 ;; *************** function _atoi *****************
 22318 ;; Defined at:
 22319 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22320 ;; Parameters:    Size  Location     Type
 22321 ;;  s               2  [STACK] PTR const unsigned char 
 22322 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22323 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22324 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22325 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22326 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(22), 
 22327 ;;		 -> STR_41(22), STR_40(22), STR_39(23), STR_38(23), 
 22328 ;;		 -> STR_37(23), STR_36(23), STR_35(23), STR_34(23), 
 22329 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22330 ;;		 -> STR_29(22), STR_28(22), STR_27(22), STR_26(22), 
 22331 ;;		 -> STR_25(22), STR_24(22), STR_23(22), STR_22(22), 
 22332 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22333 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22334 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22335 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22336 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22337 ;; Auto vars:     Size  Location     Type
 22338 ;;  n               2  [STACK] int 
 22339 ;;  neg             2  [STACK] int 
 22340 ;; Return value:  Size  Location     Type
 22341 ;;                  2  [STACK] int 
 22342 ;; Registers used:
 22343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22344 ;; Tracked objects:
 22345 ;;		On entry : 0/0
 22346 ;;		On exit  : 0/0
 22347 ;;		Unchanged: 0/0
 22348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22353 ;;Total ram usage:        0 bytes
 22354 ;; Hardware stack levels used:    1
 22355 ;; Hardware stack levels required when called:   16
 22356 ;; This function calls:
 22357 ;;		_isdigit
 22358 ;;		_isspace
 22359 ;; This function is called by:
 22360 ;;		_vfpfcnvrt
 22361 ;; This function uses a reentrant model
 22362 ;;
 22363                           
 22364                           	psect	text79
 22365  01794E                     __ptext79:
 22366                           	opt callstack 0
 22367  01794E                     _atoi:
 22368                           	opt callstack 0
 22369                           
 22370                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22371  01794E  0E09               	movlw	9
 22372  017950  26E1               	addwf	fsr1l,f,c
 22373  017952  0E00               	movlw	0
 22374  017954  22E2               	addwfc	fsr1h,f,c
 22375                           
 22376                           ;stkvar	_n @ sp[(-9)+5]
 22377                           
 22378                           ;incstack = 0
 22379 ;; hardware stack exceeded
 22380  017956  0EFC               	movlw	-4
 22381  017958  6AE3               	clrf	plusw1,c
 22382  01795A  0EFD               	movlw	-3
 22383  01795C  6AE3               	clrf	plusw1,c
 22384                           
 22385                           ;stkvar	_neg @ sp[(-9)+7]
 22386  01795E  0EFE               	movlw	-2
 22387  017960  6AE3               	clrf	plusw1,c
 22388  017962  0EFF               	movlw	-1
 22389  017964  6AE3               	clrf	plusw1,c
 22390  017966  D011               	goto	l9316
 22391  017968                     l9314:
 22392                           
 22393                           ;stkvar	_s @ sp[(-9)+-2]
 22394  017968  0EF5               	movlw	-11
 22395  01796A  50E3               	movf	plusw1,w,c
 22396  01796C  0F01               	addlw	1
 22397  01796E  6E01               	movwf	btemp^0,c
 22398  017970  0EF5               	movlw	-11
 22399  017972  0060  F007  FFE3   	movff	btemp,plusw1
 22400  017978  6A01               	clrf	btemp^0,c
 22401  01797A  0EF6               	movlw	-10
 22402  01797C  50E3               	movf	plusw1,w,c
 22403  01797E  2001               	addwfc	btemp^0,w,c
 22404  017980  6E01               	movwf	btemp^0,c
 22405  017982  0EF6               	movlw	-10
 22406  017984  0060  F007  FFE3   	movff	btemp,plusw1
 22407  01798A                     l9316:
 22408                           
 22409                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22410  01798A  0EFB               	movlw	-5
 22411  01798C  6AE3               	clrf	plusw1,c
 22412  01798E  2AE3               	incf	plusw1,f,c
 22413                           
 22414                           ;stkvar	_s @ sp[(-9)+-2]
 22415  017990  50E1               	movf	fsr1l,w,c
 22416  017992  0FF5               	addlw	-11
 22417  017994  6ED9               	movwf	fsr2l,c
 22418  017996  50E2               	movf	fsr1h,w,c
 22419  017998  6EDA               	movwf	fsr2h,c
 22420  01799A  0EFF               	movlw	255
 22421  01799C  22DA               	addwfc	fsr2h,f,c
 22422  01799E  006F FF7B FFF6     	movff	postinc2,tblptrl
 22423  0179A4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22424  0179AA                     	if	0	;tblptru may be non-zero
 22425  0179AA                     	endif
 22426  0179AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22427  0179AA  0E00               	movlw	low (__mediumconst shr (0+16))
 22428  0179AC  6EF8               	movwf	tblptru,c
 22429  0179AE                     	endif
 22430  0179AE  0008               	tblrd		*
 22431  0179B0  50F5               	movf	tablat,w,c
 22432  0179B2  0A20               	xorlw	32
 22433  0179B4  B4D8               	btfsc	status,2,c
 22434  0179B6  D023               	goto	l9324
 22435  0179B8  0EF7               	movlw	247
 22436  0179BA  6E0B               	movwf	(btemp+10)^0,c
 22437  0179BC  0EFF               	movlw	255
 22438  0179BE  6E0C               	movwf	(btemp+11)^0,c
 22439                           
 22440                           ;stkvar	_s @ sp[(-9)+-2]
 22441  0179C0  50E1               	movf	fsr1l,w,c
 22442  0179C2  0FF5               	addlw	-11
 22443  0179C4  6ED9               	movwf	fsr2l,c
 22444  0179C6  50E2               	movf	fsr1h,w,c
 22445  0179C8  6EDA               	movwf	fsr2h,c
 22446  0179CA  0EFF               	movlw	255
 22447  0179CC  22DA               	addwfc	fsr2h,f,c
 22448  0179CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 22449  0179D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 22450  0179DA                     	if	0	;tblptru may be non-zero
 22451  0179DA                     	endif
 22452  0179DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22453  0179DA  0E00               	movlw	low (__mediumconst shr (0+16))
 22454  0179DC  6EF8               	movwf	tblptru,c
 22455  0179DE                     	endif
 22456  0179DE  0008               	tblrd		*
 22457  0179E0  50F5               	movf	tablat,w,c
 22458  0179E2  6E09               	movwf	(btemp+8)^0,c
 22459  0179E4  6A0A               	clrf	(btemp+9)^0,c
 22460  0179E6  500B               	movf	(btemp+10)^0,w,c
 22461  0179E8  2609               	addwf	(btemp+8)^0,f,c
 22462  0179EA  500C               	movf	(btemp+11)^0,w,c
 22463  0179EC  220A               	addwfc	(btemp+9)^0,f,c
 22464  0179EE  500A               	movf	(btemp+9)^0,w,c
 22465  0179F0  E104               	bnz	u8520
 22466  0179F2  0E05               	movlw	5
 22467  0179F4  5C09               	subwf	(btemp+8)^0,w,c
 22468  0179F6  A0D8               	btfss	status,0,c
 22469  0179F8  D002               	goto	l9324
 22470  0179FA                     u8520:
 22471                           
 22472                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22473  0179FA  0EFB               	movlw	-5
 22474  0179FC  6AE3               	clrf	plusw1,c
 22475  0179FE                     l9324:
 22476                           
 22477                           ;stkvar	_atoi$6077 @ sp[(-9)+4]
 22478  0179FE  0EFB               	movlw	-5
 22479  017A00  50E3               	movf	plusw1,w,c
 22480  017A02  6E0B               	movwf	(btemp+10)^0,c
 22481  017A04  6A0C               	clrf	(btemp+11)^0,c
 22482                           
 22483                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22484  017A06  0EF9               	movlw	-7
 22485  017A08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22486  017A0E  0EFA               	movlw	-6
 22487  017A10  0060  F033  FFE3   	movff	btemp+11,plusw1
 22488                           
 22489                           ;stkvar	_atoi$6076 @ sp[(-9)+2]
 22490  017A16  0EF9               	movlw	-7
 22491  017A18  006F FF8C  F001    	movff	plusw1,btemp
 22492  017A1E  0EFA               	movlw	-6
 22493  017A20  50E3               	movf	plusw1,w,c
 22494  017A22  1001               	iorwf	btemp^0,w,c
 22495  017A24  B4D8               	btfsc	status,2,c
 22496  017A26  D01F               	goto	l9334
 22497  017A28  D79F               	goto	l9314
 22498  017A2A                     l9330:
 22499  017A2A  0E01               	movlw	1
 22500  017A2C  6E0B               	movwf	(btemp+10)^0,c
 22501  017A2E  0E00               	movlw	0
 22502  017A30  6E0C               	movwf	(btemp+11)^0,c
 22503                           
 22504                           ;stkvar	_neg @ sp[(-9)+7]
 22505  017A32  0EFE               	movlw	-2
 22506  017A34  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22507  017A3A  0EFF               	movlw	-1
 22508  017A3C  0060  F033  FFE3   	movff	btemp+11,plusw1
 22509  017A42                     l9332:
 22510                           
 22511                           ;stkvar	_s @ sp[(-9)+-2]
 22512  017A42  0EF5               	movlw	-11
 22513  017A44  50E3               	movf	plusw1,w,c
 22514  017A46  0F01               	addlw	1
 22515  017A48  6E01               	movwf	btemp^0,c
 22516  017A4A  0EF5               	movlw	-11
 22517  017A4C  0060  F007  FFE3   	movff	btemp,plusw1
 22518  017A52  6A01               	clrf	btemp^0,c
 22519  017A54  0EF6               	movlw	-10
 22520  017A56  50E3               	movf	plusw1,w,c
 22521  017A58  2001               	addwfc	btemp^0,w,c
 22522  017A5A  6E01               	movwf	btemp^0,c
 22523  017A5C  0EF6               	movlw	-10
 22524  017A5E  0060  F007  FFE3   	movff	btemp,plusw1
 22525  017A64  D053               	goto	l9340
 22526  017A66                     l9334:
 22527                           
 22528                           ;stkvar	_s @ sp[(-9)+-2]
 22529  017A66  50E1               	movf	fsr1l,w,c
 22530  017A68  0FF5               	addlw	-11
 22531  017A6A  6ED9               	movwf	fsr2l,c
 22532  017A6C  50E2               	movf	fsr1h,w,c
 22533  017A6E  6EDA               	movwf	fsr2h,c
 22534  017A70  0EFF               	movlw	255
 22535  017A72  22DA               	addwfc	fsr2h,f,c
 22536  017A74  006F FF7B FFF6     	movff	postinc2,tblptrl
 22537  017A7A  006F FF77 FFF7     	movff	postdec2,tblptrh
 22538  017A80                     	if	0	;tblptru may be non-zero
 22539  017A80                     	endif
 22540  017A80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22541  017A80  0E00               	movlw	low (__mediumconst shr (0+16))
 22542  017A82  6EF8               	movwf	tblptru,c
 22543  017A84                     	endif
 22544  017A84  0008               	tblrd		*
 22545  017A86  50F5               	movf	tablat,w,c
 22546  017A88  6E0B               	movwf	(btemp+10)^0,c
 22547  017A8A  6A0C               	clrf	(btemp+11)^0,c
 22548                           
 22549                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22550                           ; Switch size 1, requested type "simple"
 22551                           ; Number of cases is 1, Range of values is 0 to 0
 22552                           ; switch strategies available:
 22553                           ; Name         Instructions Cycles
 22554                           ; simple_byte            4     3 (average)
 22555                           ;	Chosen strategy is simple_byte
 22556  017A8C  500C               	movf	(btemp+11)^0,w,c
 22557  017A8E  0A00               	xorlw	0	; case 0
 22558  017A90  A4D8               	btfss	status,2,c
 22559  017A92  D03C               	goto	l9340
 22560                           
 22561                           ; Switch size 1, requested type "simple"
 22562                           ; Number of cases is 2, Range of values is 43 to 45
 22563                           ; switch strategies available:
 22564                           ; Name         Instructions Cycles
 22565                           ; simple_byte            7     4 (average)
 22566                           ;	Chosen strategy is simple_byte
 22567  017A94  500B               	movf	(btemp+10)^0,w,c
 22568  017A96  0A2B               	xorlw	43	; case 43
 22569  017A98  B4D8               	btfsc	status,2,c
 22570  017A9A  D7D3               	goto	l9332
 22571  017A9C  0A06               	xorlw	6	; case 45
 22572  017A9E  B4D8               	btfsc	status,2,c
 22573  017AA0  D7C4               	goto	l9330
 22574  017AA2  D034               	goto	l9340
 22575  017AA4                     l9336:
 22576                           
 22577                           ;stkvar	_n @ sp[(-9)+5]
 22578  017AA4  0EFC               	movlw	-4
 22579  017AA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 22580  017AAC  0EFD               	movlw	-3
 22581  017AAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 22582  017AB4  0E0A               	movlw	10
 22583  017AB6  020B               	mulwf	(btemp+10)^0,c
 22584  017AB8  006F FFCC  F009    	movff	prodl,btemp+8
 22585  017ABE  006F FFD0  F00A    	movff	prodh,btemp+9
 22586  017AC4  020C               	mulwf	(btemp+11)^0,c
 22587  017AC6  50F3               	movf	prodl,w,c
 22588  017AC8  260A               	addwf	(btemp+9)^0,f,c
 22589                           
 22590                           ;stkvar	_s @ sp[(-9)+-2]
 22591  017ACA  50E1               	movf	fsr1l,w,c
 22592  017ACC  0FF5               	addlw	-11
 22593  017ACE  6ED9               	movwf	fsr2l,c
 22594  017AD0  50E2               	movf	fsr1h,w,c
 22595  017AD2  6EDA               	movwf	fsr2h,c
 22596  017AD4  0EFF               	movlw	255
 22597  017AD6  22DA               	addwfc	fsr2h,f,c
 22598  017AD8  006F FF7B FFF6     	movff	postinc2,tblptrl
 22599  017ADE  006F FF77 FFF7     	movff	postdec2,tblptrh
 22600  017AE4                     	if	0	;tblptru may be non-zero
 22601  017AE4                     	endif
 22602  017AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22603  017AE4  0E00               	movlw	low (__mediumconst shr (0+16))
 22604  017AE6  6EF8               	movwf	tblptru,c
 22605  017AE8                     	endif
 22606  017AE8  0008               	tblrd		*
 22607  017AEA  50F5               	movf	tablat,w,c
 22608  017AEC  5E09               	subwf	(btemp+8)^0,f,c
 22609  017AEE  0E00               	movlw	0
 22610  017AF0  5A0A               	subwfb	(btemp+9)^0,f,c
 22611  017AF2  0E30               	movlw	48
 22612  017AF4  2609               	addwf	(btemp+8)^0,f,c
 22613  017AF6  0E00               	movlw	0
 22614  017AF8  220A               	addwfc	(btemp+9)^0,f,c
 22615                           
 22616                           ;stkvar	_n @ sp[(-9)+5]
 22617  017AFA  0EFC               	movlw	-4
 22618  017AFC  0060  F027  FFE3   	movff	btemp+8,plusw1
 22619  017B02  0EFD               	movlw	-3
 22620  017B04  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22621  017B0A  D79B               	goto	l9332
 22622  017B0C                     l9340:
 22623  017B0C  0ED0               	movlw	208
 22624  017B0E  6E0B               	movwf	(btemp+10)^0,c
 22625  017B10  0EFF               	movlw	255
 22626  017B12  6E0C               	movwf	(btemp+11)^0,c
 22627                           
 22628                           ;stkvar	_s @ sp[(-9)+-2]
 22629  017B14  50E1               	movf	fsr1l,w,c
 22630  017B16  0FF5               	addlw	-11
 22631  017B18  6ED9               	movwf	fsr2l,c
 22632  017B1A  50E2               	movf	fsr1h,w,c
 22633  017B1C  6EDA               	movwf	fsr2h,c
 22634  017B1E  0EFF               	movlw	255
 22635  017B20  22DA               	addwfc	fsr2h,f,c
 22636  017B22  006F FF7B FFF6     	movff	postinc2,tblptrl
 22637  017B28  006F FF77 FFF7     	movff	postdec2,tblptrh
 22638  017B2E                     	if	0	;tblptru may be non-zero
 22639  017B2E                     	endif
 22640  017B2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22641  017B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 22642  017B30  6EF8               	movwf	tblptru,c
 22643  017B32                     	endif
 22644  017B32  0008               	tblrd		*
 22645  017B34  50F5               	movf	tablat,w,c
 22646  017B36  6E09               	movwf	(btemp+8)^0,c
 22647  017B38  6A0A               	clrf	(btemp+9)^0,c
 22648  017B3A  500B               	movf	(btemp+10)^0,w,c
 22649  017B3C  2609               	addwf	(btemp+8)^0,f,c
 22650  017B3E  500C               	movf	(btemp+11)^0,w,c
 22651  017B40  220A               	addwfc	(btemp+9)^0,f,c
 22652  017B42  500A               	movf	(btemp+9)^0,w,c
 22653  017B44  E106               	bnz	u8540
 22654  017B46  0E0A               	movlw	10
 22655  017B48  5C09               	subwf	(btemp+8)^0,w,c
 22656  017B4A  B0D8               	btfsc	status,0,c
 22657  017B4C  D002               	goto	u8540
 22658  017B4E  0E01               	movlw	1
 22659  017B50  D001               	goto	u8550
 22660  017B52                     u8540:
 22661  017B52  0E00               	movlw	0
 22662  017B54                     u8550:
 22663  017B54  6E0B               	movwf	(btemp+10)^0,c
 22664  017B56  6A0C               	clrf	(btemp+11)^0,c
 22665                           
 22666                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22667  017B58  0EF7               	movlw	-9
 22668  017B5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22669  017B60  0EF8               	movlw	-8
 22670  017B62  0060  F033  FFE3   	movff	btemp+11,plusw1
 22671                           
 22672                           ;stkvar	_atoi$6078 @ sp[(-9)+0]
 22673  017B68  0EF7               	movlw	-9
 22674  017B6A  006F FF8C  F001    	movff	plusw1,btemp
 22675  017B70  0EF8               	movlw	-8
 22676  017B72  50E3               	movf	plusw1,w,c
 22677  017B74  1001               	iorwf	btemp^0,w,c
 22678  017B76  A4D8               	btfss	status,2,c
 22679  017B78  D795               	goto	l9336
 22680                           
 22681                           ;stkvar	_neg @ sp[(-9)+7]
 22682  017B7A  0EFE               	movlw	-2
 22683  017B7C  006F FF8C  F001    	movff	plusw1,btemp
 22684  017B82  0EFF               	movlw	-1
 22685  017B84  50E3               	movf	plusw1,w,c
 22686  017B86  1001               	iorwf	btemp^0,w,c
 22687  017B88  A4D8               	btfss	status,2,c
 22688  017B8A  D00E               	goto	l9350
 22689                           
 22690                           ;stkvar	_n @ sp[(-9)+5]
 22691  017B8C  0EFC               	movlw	-4
 22692  017B8E  006F FF8C  F001    	movff	plusw1,btemp
 22693  017B94  1E01               	comf	btemp^0,f,c
 22694  017B96  0EFD               	movlw	-3
 22695  017B98  006F FF8C  F002    	movff	plusw1,btemp+1
 22696  017B9E  1E02               	comf	(btemp+1)^0,f,c
 22697  017BA0  2A01               	incf	btemp^0,f,c
 22698  017BA2  B4D8               	btfsc	status,2,c
 22699  017BA4  2A02               	incf	(btemp+1)^0,f,c
 22700  017BA6  D008               	goto	l3115
 22701  017BA8                     l9350:
 22702                           
 22703                           ;stkvar	_n @ sp[(-9)+5]
 22704  017BA8  0EFC               	movlw	-4
 22705  017BAA  006F FF8C  F001    	movff	plusw1,btemp
 22706  017BB0  0EFD               	movlw	-3
 22707  017BB2  006F FF8C  F002    	movff	plusw1,btemp+1
 22708  017BB8                     l3115:
 22709                           
 22710                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22711  017BB8  0EF5               	movlw	245
 22712  017BBA  26E1               	addwf	fsr1l,f,c
 22713  017BBC  0EFF               	movlw	255
 22714  017BBE  22E2               	addwfc	fsr1h,f,c
 22715  017BC0  0012               	return		;funcret
 22716  017BC2                     __end_of_atoi:
 22717                           	opt callstack 0
 22718                           
 22719 ;; *************** function _isspace *****************
 22720 ;; Defined at:
 22721 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22722 ;; Parameters:    Size  Location     Type
 22723 ;;  c               2  [STACK] int 
 22724 ;; Auto vars:     Size  Location     Type
 22725 ;;		None
 22726 ;; Return value:  Size  Location     Type
 22727 ;;                  2  [STACK] int 
 22728 ;; Registers used:
 22729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22730 ;; Tracked objects:
 22731 ;;		On entry : 0/0
 22732 ;;		On exit  : 0/0
 22733 ;;		Unchanged: 0/0
 22734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22739 ;;Total ram usage:        0 bytes
 22740 ;; Hardware stack levels used:    1
 22741 ;; Hardware stack levels required when called:   15
 22742 ;; This function calls:
 22743 ;;		Nothing
 22744 ;; This function is called by:
 22745 ;;		_atoi
 22746 ;; This function uses a reentrant model
 22747 ;;
 22748                           
 22749                           	psect	text80
 22750  01B292                     __ptext80:
 22751                           	opt callstack 0
 22752  01B292                     _isspace:
 22753                           	opt callstack 0
 22754                           
 22755                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22756  01B292  52E6               	movf	postinc1,f,c
 22757                           
 22758                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22759                           
 22760                           ;incstack = 0
 22761 ;; hardware stack exceeded
 22762  01B294  0EFF               	movlw	-1
 22763  01B296  6AE3               	clrf	plusw1,c
 22764  01B298  2AE3               	incf	plusw1,f,c
 22765                           
 22766                           ;stkvar	_c @ sp[(-1)+-2]
 22767  01B29A  0EFD               	movlw	-3
 22768  01B29C  006F FF8C  F001    	movff	plusw1,btemp
 22769  01B2A2  0E20               	movlw	32
 22770  01B2A4  1801               	xorwf	btemp^0,w,c
 22771  01B2A6  E104               	bnz	u7410
 22772  01B2A8  0EFE               	movlw	-2
 22773  01B2AA  50E3               	movf	plusw1,w,c
 22774  01B2AC  B4D8               	btfsc	status,2,c
 22775  01B2AE  D012               	goto	l8734
 22776  01B2B0                     u7410:
 22777                           
 22778                           ;stkvar	_c @ sp[(-1)+-2]
 22779  01B2B0  0EFD               	movlw	-3
 22780  01B2B2  50E3               	movf	plusw1,w,c
 22781  01B2B4  0FF7               	addlw	247
 22782  01B2B6  6E0B               	movwf	(btemp+10)^0,c
 22783  01B2B8  0EFE               	movlw	-2
 22784  01B2BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 22785  01B2C0  0EFF               	movlw	255
 22786  01B2C2  220C               	addwfc	(btemp+11)^0,f,c
 22787  01B2C4  500C               	movf	(btemp+11)^0,w,c
 22788  01B2C6  E104               	bnz	u7420
 22789  01B2C8  0E05               	movlw	5
 22790  01B2CA  5C0B               	subwf	(btemp+10)^0,w,c
 22791  01B2CC  A0D8               	btfss	status,0,c
 22792  01B2CE  D002               	goto	l8734
 22793  01B2D0                     u7420:
 22794                           
 22795                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22796  01B2D0  0EFF               	movlw	-1
 22797  01B2D2  6AE3               	clrf	plusw1,c
 22798  01B2D4                     l8734:
 22799                           
 22800                           ;stkvar	_isspace$6127 @ sp[(-1)+0]
 22801  01B2D4  0EFF               	movlw	-1
 22802  01B2D6  50E3               	movf	plusw1,w,c
 22803  01B2D8  6E01               	movwf	btemp^0,c
 22804  01B2DA  6A02               	clrf	(btemp+1)^0,c
 22805                           
 22806                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22807  01B2DC  52E5               	movf	postdec1,f,c
 22808  01B2DE  52E5               	movf	postdec1,f,c
 22809  01B2E0  52E5               	movf	postdec1,f,c
 22810  01B2E2  0012               	return		;funcret
 22811  01B2E4                     __end_of_isspace:
 22812                           	opt callstack 0
 22813                           
 22814 ;; *************** function _isdigit *****************
 22815 ;; Defined at:
 22816 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22817 ;; Parameters:    Size  Location     Type
 22818 ;;  c               2  [STACK] int 
 22819 ;; Auto vars:     Size  Location     Type
 22820 ;;		None
 22821 ;; Return value:  Size  Location     Type
 22822 ;;                  2  [STACK] int 
 22823 ;; Registers used:
 22824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22825 ;; Tracked objects:
 22826 ;;		On entry : 0/0
 22827 ;;		On exit  : 0/0
 22828 ;;		Unchanged: 0/0
 22829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22834 ;;Total ram usage:        0 bytes
 22835 ;; Hardware stack levels used:    1
 22836 ;; Hardware stack levels required when called:   15
 22837 ;; This function calls:
 22838 ;;		Nothing
 22839 ;; This function is called by:
 22840 ;;		_vfpfcnvrt
 22841 ;;		_atoi
 22842 ;; This function uses a reentrant model
 22843 ;;
 22844                           
 22845                           	psect	text81
 22846  01B9E2                     __ptext81:
 22847                           	opt callstack 0
 22848  01B9E2                     _isdigit:
 22849                           	opt callstack 0
 22850                           
 22851                           ;stkvar	_c @ sp[(0)+-2]
 22852                           
 22853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22854                           ;incstack = 0
 22855 ;; hardware stack exceeded
 22856  01B9E2  0EFE               	movlw	-2
 22857  01B9E4  50E3               	movf	plusw1,w,c
 22858  01B9E6  0FD0               	addlw	208
 22859  01B9E8  6E0B               	movwf	(btemp+10)^0,c
 22860  01B9EA  0EFF               	movlw	-1
 22861  01B9EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 22862  01B9F2  0EFF               	movlw	255
 22863  01B9F4  220C               	addwfc	(btemp+11)^0,f,c
 22864  01B9F6  500C               	movf	(btemp+11)^0,w,c
 22865  01B9F8  E106               	bnz	u6260
 22866  01B9FA  0E0A               	movlw	10
 22867  01B9FC  5C0B               	subwf	(btemp+10)^0,w,c
 22868  01B9FE  B0D8               	btfsc	status,0,c
 22869  01BA00  D002               	goto	u6260
 22870  01BA02  0E01               	movlw	1
 22871  01BA04  D001               	goto	u6270
 22872  01BA06                     u6260:
 22873  01BA06  0E00               	movlw	0
 22874  01BA08                     u6270:
 22875  01BA08  6E01               	movwf	btemp^0,c
 22876  01BA0A  6A02               	clrf	(btemp+1)^0,c
 22877                           
 22878                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22879  01BA0C  52E5               	movf	postdec1,f,c
 22880  01BA0E  52E5               	movf	postdec1,f,c
 22881  01BA10  0012               	return		;funcret
 22882  01BA12                     __end_of_isdigit:
 22883                           	opt callstack 0
 22884                           
 22885 ;; *************** function _set_vterm *****************
 22886 ;; Defined at:
 22887 ;;		line 107 in file "mconfig.c"
 22888 ;; Parameters:    Size  Location     Type
 22889 ;;  vterm           1  [STACK] const unsigned char 
 22890 ;; Auto vars:     Size  Location     Type
 22891 ;;		None
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  1  [STACK] unsigned char 
 22894 ;; Registers used:
 22895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;Total ram usage:        0 bytes
 22906 ;; Hardware stack levels used:    1
 22907 ;; Hardware stack levels required when called:   15
 22908 ;; This function calls:
 22909 ;;		Nothing
 22910 ;; This function is called by:
 22911 ;;		_main
 22912 ;;		_check_help
 22913 ;; This function uses a reentrant model
 22914 ;;
 22915                           
 22916                           	psect	text82
 22917  01BF04                     __ptext82:
 22918                           	opt callstack 0
 22919  01BF04                     _set_vterm:
 22920                           	opt callstack 15
 22921                           
 22922                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22923                           ;stkvar	_vterm @ sp[(0)+-1]
 22924                           
 22925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22926                           ;incstack = 0
 22927  01BF04  0EFF               	movlw	-1
 22928  01BF06  006F FF8C  F00C    	movff	plusw1,btemp+11
 22929  01BF0C  0E03               	movlw	3
 22930  01BF0E  160C               	andwf	(btemp+11)^0,f,c
 22931  01BF10  EE22  F20A         	lfsr	2,_D+480
 22932  01BF14  50DF               	movf	223,w,c
 22933  01BF16  180C               	xorwf	(btemp+11)^0,w,c
 22934  01BF18  0BFE               	andlw	-2
 22935  01BF1A  180C               	xorwf	(btemp+11)^0,w,c
 22936  01BF1C  6EDF               	movwf	223,c
 22937                           
 22938                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22939  01BF1E  52E5               	movf	postdec1,f,c
 22940  01BF20  0012               	return		;funcret
 22941  01BF22                     __end_of_set_vterm:
 22942                           	opt callstack 0
 22943                           
 22944 ;; *************** function _set_temp_display_help *****************
 22945 ;; Defined at:
 22946 ;;		line 211 in file "mconfig.c"
 22947 ;; Parameters:    Size  Location     Type
 22948 ;;  new_response    1  [STACK] const enum E16509
 22949 ;; Auto vars:     Size  Location     Type
 22950 ;;		None
 22951 ;; Return value:  Size  Location     Type
 22952 ;;                  1  [STACK] enum E16509
 22953 ;; Registers used:
 22954 ;;		wreg, fsr1l, fsr1h
 22955 ;; Tracked objects:
 22956 ;;		On entry : 0/1
 22957 ;;		On exit  : 3F/1
 22958 ;;		Unchanged: 0/0
 22959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22964 ;;Total ram usage:        0 bytes
 22965 ;; Hardware stack levels used:    1
 22966 ;; Hardware stack levels required when called:   15
 22967 ;; This function calls:
 22968 ;;		Nothing
 22969 ;; This function is called by:
 22970 ;;		_check_help
 22971 ;; This function uses a reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text83
 22975  01C066                     __ptext83:
 22976                           	opt callstack 0
 22977  01C066                     _set_temp_display_help:
 22978                           	opt callstack 14
 22979                           
 22980                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22981                           
 22982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22983                           ;incstack = 0
 22984  01C066  0101               	movlb	1	; () banked
 22985  01C068  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22986                           
 22987                           ; BSR set to: 1
 22988                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22989                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22990  01C06A  0EFF               	movlw	-1
 22991  01C06C  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22992                           
 22993                           ; BSR set to: 1
 22994                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22995  01C072  52E5               	movf	postdec1,f,c
 22996  01C074  0012               	return		;funcret
 22997  01C076                     __end_of_set_temp_display_help:
 22998                           	opt callstack 0
 22999                           
 23000 ;; *************** function _set_display_info *****************
 23001 ;; Defined at:
 23002 ;;		line 200 in file "mconfig.c"
 23003 ;; Parameters:    Size  Location     Type
 23004 ;;  new_response    1  [STACK] const enum E16509
 23005 ;; Auto vars:     Size  Location     Type
 23006 ;;		None
 23007 ;; Return value:  Size  Location     Type
 23008 ;;                  1  [STACK] enum E16994
 23009 ;; Registers used:
 23010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23011 ;; Tracked objects:
 23012 ;;		On entry : 0/1
 23013 ;;		On exit  : 0/0
 23014 ;;		Unchanged: 0/0
 23015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23020 ;;Total ram usage:        0 bytes
 23021 ;; Hardware stack levels used:    1
 23022 ;; Hardware stack levels required when called:   16
 23023 ;; This function calls:
 23024 ;;		_TimerDone
 23025 ;; This function is called by:
 23026 ;;		_main
 23027 ;;		_check_help
 23028 ;; This function uses a reentrant model
 23029 ;;
 23030                           
 23031                           	psect	text84
 23032  01BF22                     __ptext84:
 23033                           	opt callstack 0
 23034  01BF22                     _set_display_info:
 23035                           	opt callstack 14
 23036                           
 23037                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23038                           
 23039                           ; BSR set to: 1
 23040                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23041                           ;incstack = 0
 23042  01BF22  0E07               	movlw	7
 23043  01BF24  6EE6               	movwf	postinc1,c
 23044  01BF26  EC8B  F0DD         	call	_TimerDone	;wreg free
 23045  01BF2A  5001               	movf	btemp^0,w,c
 23046  01BF2C  B4D8               	btfsc	status,2,c
 23047  01BF2E  D006               	goto	l1719
 23048                           
 23049                           ;mconfig.c: 205:   old_info = V.response.info;
 23050  01BF30  0101               	movlb	1	; () banked
 23051  01BF32  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 23052                           
 23053                           ; BSR set to: 1
 23054                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23055                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23056  01BF34  0EFF               	movlw	-1
 23057  01BF36  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 23058  01BF3C                     l1719:
 23059                           
 23060                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23061  01BF3C  52E5               	movf	postdec1,f,c
 23062  01BF3E  0012               	return		;funcret
 23063  01BF40                     __end_of_set_display_info:
 23064                           	opt callstack 0
 23065                           
 23066 ;; *************** function _mode_lamp_dim *****************
 23067 ;; Defined at:
 23068 ;;		line 13 in file "mconfig.c"
 23069 ;; Parameters:    Size  Location     Type
 23070 ;;  level           2  [STACK] const unsigned short 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;		None
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  1  [STACK] void 
 23075 ;; Registers used:
 23076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/1
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;Total ram usage:        0 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; Hardware stack levels required when called:   16
 23089 ;; This function calls:
 23090 ;;		_PWM8_LoadDutyValue
 23091 ;; This function is called by:
 23092 ;;		_main
 23093 ;;		_check_help
 23094 ;; This function uses a reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text85
 23098  01BFAE                     __ptext85:
 23099                           	opt callstack 0
 23100  01BFAE                     _mode_lamp_dim:
 23101                           	opt callstack 14
 23102                           
 23103                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23104                           ;stkvar	_level @ sp[(0)+-2]
 23105                           
 23106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23107                           ;incstack = 0
 23108  01BFAE  0EFE               	movlw	-2
 23109  01BFB0  006F FF8F FFE6     	movff	plusw1,postinc1
 23110  01BFB6  006F FF8F FFE6     	movff	plusw1,postinc1
 23111  01BFBC  EC04  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23112                           
 23113                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23114  01BFC0  52E5               	movf	postdec1,f,c
 23115  01BFC2  52E5               	movf	postdec1,f,c
 23116  01BFC4  0012               	return		;funcret
 23117  01BFC6                     __end_of_mode_lamp_dim:
 23118                           	opt callstack 0
 23119                           
 23120 ;; *************** function _mode_lamp_bright *****************
 23121 ;; Defined at:
 23122 ;;		line 18 in file "mconfig.c"
 23123 ;; Parameters:    Size  Location     Type
 23124 ;;		None
 23125 ;; Auto vars:     Size  Location     Type
 23126 ;;		None
 23127 ;; Return value:  Size  Location     Type
 23128 ;;                  1  [STACK] void 
 23129 ;; Registers used:
 23130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23131 ;; Tracked objects:
 23132 ;;		On entry : 0/0
 23133 ;;		On exit  : 0/0
 23134 ;;		Unchanged: 0/0
 23135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23140 ;;Total ram usage:        0 bytes
 23141 ;; Hardware stack levels used:    1
 23142 ;; Hardware stack levels required when called:   16
 23143 ;; This function calls:
 23144 ;;		_PWM8_LoadDutyValue
 23145 ;; This function is called by:
 23146 ;;		_check_help
 23147 ;; This function uses a reentrant model
 23148 ;;
 23149                           
 23150                           	psect	text86
 23151  01C0A2                     __ptext86:
 23152                           	opt callstack 0
 23153  01C0A2                     _mode_lamp_bright:
 23154                           	opt callstack 13
 23155                           
 23156                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23157                           
 23158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23159                           ;incstack = 0
 23160  01C0A2  0E2C               	movlw	44
 23161  01C0A4  6EE6               	movwf	postinc1,c
 23162  01C0A6  0E01               	movlw	1
 23163  01C0A8  6EE6               	movwf	postinc1,c
 23164  01C0AA  EC04  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23165                           
 23166                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23167  01C0AE  0012               	return		;funcret
 23168  01C0B0                     __end_of_mode_lamp_bright:
 23169                           	opt callstack 0
 23170                           
 23171 ;; *************** function _PWM8_LoadDutyValue *****************
 23172 ;; Defined at:
 23173 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23174 ;; Parameters:    Size  Location     Type
 23175 ;;  dutyValue       2  [STACK] unsigned short 
 23176 ;; Auto vars:     Size  Location     Type
 23177 ;;		None
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  1  [STACK] void 
 23180 ;; Registers used:
 23181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23182 ;; Tracked objects:
 23183 ;;		On entry : 0/1
 23184 ;;		On exit  : 0/0
 23185 ;;		Unchanged: 0/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23191 ;;Total ram usage:        0 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:   15
 23194 ;; This function calls:
 23195 ;;		Nothing
 23196 ;; This function is called by:
 23197 ;;		_mode_lamp_dim
 23198 ;;		_mode_lamp_bright
 23199 ;; This function uses a reentrant model
 23200 ;;
 23201                           
 23202                           	psect	text87
 23203  01B608                     __ptext87:
 23204                           	opt callstack 0
 23205  01B608                     _PWM8_LoadDutyValue:
 23206                           	opt callstack 14
 23207                           
 23208                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23209                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23210                           
 23211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23212                           ;incstack = 0
 23213  01B608  0EFE               	movlw	-2
 23214  01B60A  006F FF8C  F00B    	movff	plusw1,btemp+10
 23215  01B610  0EFF               	movlw	-1
 23216  01B612  006F FF8C  F00C    	movff	plusw1,btemp+11
 23217  01B618  90D8               	bcf	status,0,c
 23218  01B61A  320C               	rrcf	(btemp+11)^0,f,c
 23219  01B61C  320B               	rrcf	(btemp+10)^0,f,c
 23220  01B61E  90D8               	bcf	status,0,c
 23221  01B620  320C               	rrcf	(btemp+11)^0,f,c
 23222  01B622  320B               	rrcf	(btemp+10)^0,f,c
 23223  01B624  500B               	movf	(btemp+10)^0,w,c
 23224  01B626  6E61               	movwf	97,c	;volatile
 23225                           
 23226                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23227                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23228  01B628  0EFE               	movlw	-2
 23229  01B62A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23230  01B630  0E03               	movlw	3
 23231  01B632  160C               	andwf	(btemp+11)^0,f,c
 23232  01B634  0E06               	movlw	6
 23233  01B636  6E01               	movwf	btemp^0,c
 23234  01B638                     u9355:
 23235  01B638  90D8               	bcf	status,0,c
 23236  01B63A  360C               	rlcf	(btemp+11)^0,f,c
 23237  01B63C  2E01               	decfsz	btemp^0,f,c
 23238  01B63E  D7FC               	goto	u9355
 23239  01B640  500C               	movf	(btemp+11)^0,w,c
 23240  01B642  6E60               	movwf	96,c	;volatile
 23241                           
 23242                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23243  01B644  52E5               	movf	postdec1,f,c
 23244  01B646  52E5               	movf	postdec1,f,c
 23245  01B648  0012               	return		;funcret
 23246  01B64A                     __end_of_PWM8_LoadDutyValue:
 23247                           	opt callstack 0
 23248                           
 23249 ;; *************** function _help_button *****************
 23250 ;; Defined at:
 23251 ;;		line 26 in file "mconfig.c"
 23252 ;; Parameters:    Size  Location     Type
 23253 ;;		None
 23254 ;; Auto vars:     Size  Location     Type
 23255 ;;		None
 23256 ;; Return value:  Size  Location     Type
 23257 ;;                  1  [STACK] _Bool 
 23258 ;; Registers used:
 23259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23260 ;; Tracked objects:
 23261 ;;		On entry : 0/1
 23262 ;;		On exit  : 0/0
 23263 ;;		Unchanged: 0/0
 23264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;Total ram usage:        0 bytes
 23270 ;; Hardware stack levels used:    1
 23271 ;; Hardware stack levels required when called:   16
 23272 ;; This function calls:
 23273 ;;		_StartTimer
 23274 ;;		_TimerDone
 23275 ;; This function is called by:
 23276 ;;		_check_help
 23277 ;; This function uses a reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text88
 23281  01B844                     __ptext88:
 23282                           	opt callstack 0
 23283  01B844                     _help_button:
 23284                           	opt callstack 13
 23285                           
 23286                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23287                           
 23288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23289                           ;incstack = 0
 23290  01B844  B0CB               	btfsc	203,0,c	;volatile
 23291  01B846  D00C               	goto	l1662
 23292                           
 23293                           ;mconfig.c: 29:   V.help = 1;
 23294  01B848  0101               	movlb	1	; () banked
 23295  01B84A  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 23296                           
 23297                           ; BSR set to: 1
 23298                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23299  01B84C  0E08               	movlw	8
 23300  01B84E  6EE6               	movwf	postinc1,c
 23301  01B850  EC8B  F0DD         	call	_TimerDone	;wreg free
 23302  01B854  5001               	movf	btemp^0,w,c
 23303  01B856  B4D8               	btfsc	status,2,c
 23304  01B858  D003               	goto	l1662
 23305                           
 23306                           ;mconfig.c: 31:    return 1;
 23307  01B85A  0E01               	movlw	1
 23308  01B85C  6E01               	movwf	btemp^0,c
 23309  01B85E  0012               	return	
 23310  01B860                     l1662:
 23311                           
 23312                           ;mconfig.c: 34:  if (!V.help)
 23313  01B860  0101               	movlb	1	; () banked
 23314  01B862  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23315  01B864  D008               	goto	l10462
 23316                           
 23317                           ; BSR set to: 1
 23318                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23319  01B866  0E2C               	movlw	44
 23320  01B868  6EE6               	movwf	postinc1,c
 23321  01B86A  0E01               	movlw	1
 23322  01B86C  6EE6               	movwf	postinc1,c
 23323  01B86E  0E08               	movlw	8
 23324  01B870  6EE6               	movwf	postinc1,c
 23325  01B872  EC65  F0DB         	call	_StartTimer	;wreg free
 23326  01B876                     l10462:
 23327                           
 23328                           ;mconfig.c: 37:  return 0;
 23329  01B876  0E00               	movlw	0
 23330  01B878  6E01               	movwf	btemp^0,c
 23331                           
 23332                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23333  01B87A  0012               	return		;funcret
 23334  01B87C                     __end_of_help_button:
 23335                           	opt callstack 0
 23336                           
 23337 ;; *************** function _TimerDone *****************
 23338 ;; Defined at:
 23339 ;;		line 20 in file "timers.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;  timer           1  [STACK] const unsigned char 
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  1  [STACK] _Bool 
 23346 ;; Registers used:
 23347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/1
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23357 ;;Total ram usage:        0 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; Hardware stack levels required when called:   15
 23360 ;; This function calls:
 23361 ;;		Nothing
 23362 ;; This function is called by:
 23363 ;;		_main
 23364 ;;		_WaitMs
 23365 ;;		_help_button
 23366 ;;		_check_help
 23367 ;;		_set_display_info
 23368 ;;		_update_adc_result
 23369 ;;		_esr_check
 23370 ;; This function uses a reentrant model
 23371 ;;
 23372                           
 23373                           	psect	text89
 23374  01BB16                     __ptext89:
 23375                           	opt callstack 0
 23376  01BB16                     _TimerDone:
 23377                           	opt callstack 14
 23378                           
 23379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23380                           ;incstack = 0
 23381  01BB16  0004               	clrwdt		;# 
 23382                           
 23383                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23384                           ;stkvar	_timer @ sp[(0)+-1]
 23385  01BB18  0EFF               	movlw	-1
 23386  01BB1A  50E3               	movf	plusw1,w,c
 23387  01BB1C  0D02               	mullw	2
 23388  01BB1E  0E7D               	movlw	low _tickCount
 23389  01BB20  24F3               	addwf	243,w,c
 23390  01BB22  6ED9               	movwf	fsr2l,c
 23391  01BB24  0E02               	movlw	high _tickCount
 23392  01BB26  20F4               	addwfc	prodh,w,c
 23393  01BB28  6EDA               	movwf	fsr2h,c
 23394  01BB2A  50DE               	movf	postinc2,w,c
 23395  01BB2C  10DE               	iorwf	postinc2,w,c
 23396  01BB2E  A4D8               	btfss	status,2,c
 23397  01BB30  D002               	goto	l9748
 23398                           
 23399                           ;timers.c: 24:   return 1;
 23400  01BB32  0E01               	movlw	1
 23401  01BB34  D001               	goto	L27
 23402  01BB36                     l9748:
 23403                           
 23404                           ;timers.c: 26:  return 0;
 23405  01BB36  0E00               	movlw	0
 23406  01BB38                     L27:
 23407  01BB38  6E01               	movwf	btemp^0,c
 23408                           
 23409                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23410  01BB3A  52E5               	movf	postdec1,f,c
 23411  01BB3C  0012               	return		;funcret
 23412  01BB3E                     __end_of_TimerDone:
 23413                           	opt callstack 0
 23414                           
 23415 ;; *************** function _StartTimer *****************
 23416 ;; Defined at:
 23417 ;;		line 12 in file "timers.c"
 23418 ;; Parameters:    Size  Location     Type
 23419 ;;  timer           1  [STACK] const unsigned char 
 23420 ;;  count           2  [STACK] const unsigned short 
 23421 ;; Auto vars:     Size  Location     Type
 23422 ;;		None
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  1  [STACK] void 
 23425 ;; Registers used:
 23426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23427 ;; Tracked objects:
 23428 ;;		On entry : 0/0
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23436 ;;Total ram usage:        0 bytes
 23437 ;; Hardware stack levels used:    1
 23438 ;; Hardware stack levels required when called:   15
 23439 ;; This function calls:
 23440 ;;		Nothing
 23441 ;; This function is called by:
 23442 ;;		_main
 23443 ;;		_WaitMs
 23444 ;;		_help_button
 23445 ;;		_check_help
 23446 ;;		_update_adc_result
 23447 ;;		_calc_bsoc
 23448 ;;		_esr_check
 23449 ;; This function uses a reentrant model
 23450 ;;
 23451                           
 23452                           	psect	text90
 23453  01B6CA                     __ptext90:
 23454                           	opt callstack 0
 23455  01B6CA                     _StartTimer:
 23456                           	opt callstack 0
 23457                           
 23458                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23459                           ;stkvar	_count @ sp[(0)+-3]
 23460                           
 23461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23462                           ;incstack = 0
 23463 ;; hardware stack exceeded
 23464  01B6CA  0EFD               	movlw	-3
 23465  01B6CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23466  01B6D2  0EFE               	movlw	-2
 23467  01B6D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23468  01B6DA  90D8               	bcf	status,0,c
 23469  01B6DC  340B               	rlcf	(btemp+10)^0,w,c
 23470  01B6DE  6E09               	movwf	(btemp+8)^0,c
 23471  01B6E0  340C               	rlcf	(btemp+11)^0,w,c
 23472  01B6E2  6E0A               	movwf	(btemp+9)^0,c
 23473                           
 23474                           ;stkvar	_timer @ sp[(0)+-1]
 23475  01B6E4  0EFF               	movlw	-1
 23476  01B6E6  50E3               	movf	plusw1,w,c
 23477  01B6E8  0D02               	mullw	2
 23478  01B6EA  0E7D               	movlw	low _tickCount
 23479  01B6EC  24F3               	addwf	243,w,c
 23480  01B6EE  6ED9               	movwf	fsr2l,c
 23481  01B6F0  0E02               	movlw	high _tickCount
 23482  01B6F2  20F4               	addwfc	prodh,w,c
 23483  01B6F4  6EDA               	movwf	fsr2h,c
 23484  01B6F6  0060  F027  FFDE   	movff	btemp+8,postinc2
 23485  01B6FC  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23486                           
 23487                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23488  01B702  52E5               	movf	postdec1,f,c
 23489  01B704  52E5               	movf	postdec1,f,c
 23490  01B706  52E5               	movf	postdec1,f,c
 23491  01B708  0012               	return		;funcret
 23492  01B70A                     __end_of_StartTimer:
 23493                           	opt callstack 0
 23494                           
 23495 ;; *************** function _display_info *****************
 23496 ;; Defined at:
 23497 ;;		line 190 in file "mconfig.c"
 23498 ;; Parameters:    Size  Location     Type
 23499 ;;		None
 23500 ;; Auto vars:     Size  Location     Type
 23501 ;;		None
 23502 ;; Return value:  Size  Location     Type
 23503 ;;                  1  [STACK] enum E16509
 23504 ;; Registers used:
 23505 ;;		btemp
 23506 ;; Tracked objects:
 23507 ;;		On entry : 0/1
 23508 ;;		On exit  : 0/0
 23509 ;;		Unchanged: 0/0
 23510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23515 ;;Total ram usage:        0 bytes
 23516 ;; Hardware stack levels used:    1
 23517 ;; Hardware stack levels required when called:   15
 23518 ;; This function calls:
 23519 ;;		Nothing
 23520 ;; This function is called by:
 23521 ;;		_check_help
 23522 ;; This function uses a reentrant model
 23523 ;;
 23524                           
 23525                           	psect	text91
 23526  01C126                     __ptext91:
 23527                           	opt callstack 0
 23528  01C126                     _display_info:
 23529                           	opt callstack 14
 23530                           
 23531                           ;mconfig.c: 192:  return V.response.info;
 23532                           
 23533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23534                           ;incstack = 0
 23535  01C126  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23536                           
 23537                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23538  01C12C  0012               	return		;funcret
 23539  01C12E                     __end_of_display_info:
 23540                           	opt callstack 0
 23541                           
 23542 ;; *************** function _display_help *****************
 23543 ;; Defined at:
 23544 ;;		line 195 in file "mconfig.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;		None
 23547 ;; Auto vars:     Size  Location     Type
 23548 ;;		None
 23549 ;; Return value:  Size  Location     Type
 23550 ;;                  1  [STACK] enum E16509
 23551 ;; Registers used:
 23552 ;;		btemp
 23553 ;; Tracked objects:
 23554 ;;		On entry : 3F/1
 23555 ;;		On exit  : 0/0
 23556 ;;		Unchanged: 0/0
 23557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23562 ;;Total ram usage:        0 bytes
 23563 ;; Hardware stack levels used:    1
 23564 ;; Hardware stack levels required when called:   15
 23565 ;; This function calls:
 23566 ;;		Nothing
 23567 ;; This function is called by:
 23568 ;;		_check_help
 23569 ;; This function uses a reentrant model
 23570 ;;
 23571                           
 23572                           	psect	text92
 23573  01C12E                     __ptext92:
 23574                           	opt callstack 0
 23575  01C12E                     _display_help:
 23576                           	opt callstack 14
 23577                           
 23578                           ;mconfig.c: 197:  return V.response.help_temp;
 23579                           
 23580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23581                           ;incstack = 0
 23582  01C12E  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23583                           
 23584                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23585  01C134  0012               	return		;funcret
 23586  01C136                     __end_of_display_help:
 23587                           	opt callstack 0
 23588                           
 23589 ;; *************** function _check_enter_button *****************
 23590 ;; Defined at:
 23591 ;;		line 42 in file "hid.c"
 23592 ;; Parameters:    Size  Location     Type
 23593 ;;  h               1  [STACK] PTR struct H_data
 23594 ;;		 -> H(7), 
 23595 ;; Auto vars:     Size  Location     Type
 23596 ;;		None
 23597 ;; Return value:  Size  Location     Type
 23598 ;;                  1  [STACK] _Bool 
 23599 ;; Registers used:
 23600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23601 ;; Tracked objects:
 23602 ;;		On entry : 0/0
 23603 ;;		On exit  : 0/0
 23604 ;;		Unchanged: 0/0
 23605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23610 ;;Total ram usage:        0 bytes
 23611 ;; Hardware stack levels used:    1
 23612 ;; Hardware stack levels required when called:   15
 23613 ;; This function calls:
 23614 ;;		Nothing
 23615 ;; This function is called by:
 23616 ;;		_main
 23617 ;; This function uses a reentrant model
 23618 ;;
 23619                           
 23620                           	psect	text93
 23621  01B70A                     __ptext93:
 23622                           	opt callstack 0
 23623  01B70A                     _check_enter_button:
 23624                           	opt callstack 15
 23625                           
 23626                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23627                           ;stkvar	_h @ sp[(0)+-1]
 23628                           
 23629                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23630                           ;incstack = 0
 23631  01B70A  0EFF               	movlw	-1
 23632  01B70C  50E3               	movf	plusw1,w,c
 23633  01B70E  6ED9               	movwf	fsr2l,c
 23634  01B710  6ADA               	clrf	fsr2h,c
 23635  01B712  0E04               	movlw	4
 23636  01B714  26D9               	addwf	fsr2l,f,c
 23637  01B716  50DF               	movf	indf2,w,c
 23638  01B718  A4D8               	btfss	status,2,c
 23639  01B71A  D013               	goto	l11092
 23640                           
 23641                           ;stkvar	_h @ sp[(0)+-1]
 23642  01B71C  0EFF               	movlw	-1
 23643  01B71E  50E3               	movf	plusw1,w,c
 23644  01B720  6ED9               	movwf	fsr2l,c
 23645  01B722  6ADA               	clrf	fsr2h,c
 23646  01B724  0E05               	movlw	5
 23647  01B726  26D9               	addwf	fsr2l,f,c
 23648  01B728  50DF               	movf	indf2,w,c
 23649  01B72A  A4D8               	btfss	status,2,c
 23650  01B72C  D00A               	goto	l11092
 23651                           
 23652                           ;hid.c: 45:   h->wait_enter = 1;
 23653                           ;stkvar	_h @ sp[(0)+-1]
 23654  01B72E  0EFF               	movlw	-1
 23655  01B730  50E3               	movf	plusw1,w,c
 23656  01B732  6ED9               	movwf	fsr2l,c
 23657  01B734  6ADA               	clrf	fsr2h,c
 23658  01B736  0E04               	movlw	4
 23659  01B738  26D9               	addwf	fsr2l,f,c
 23660  01B73A  0E01               	movlw	1
 23661  01B73C  6EDF               	movwf	indf2,c
 23662                           
 23663                           ;hid.c: 46:   return 1;
 23664  01B73E  0E01               	movlw	1
 23665  01B740  D001               	goto	L28
 23666  01B742                     l11092:
 23667                           
 23668                           ;hid.c: 48:  return 0;
 23669  01B742  0E00               	movlw	0
 23670  01B744                     L28:
 23671  01B744  6E01               	movwf	btemp^0,c
 23672                           
 23673                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23674  01B746  52E5               	movf	postdec1,f,c
 23675  01B748  0012               	return		;funcret
 23676  01B74A                     __end_of_check_enter_button:
 23677                           	opt callstack 0
 23678                           
 23679 ;; *************** function _calc_ror_data *****************
 23680 ;; Defined at:
 23681 ;;		line 102 in file "mbmc.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;		None
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;		None
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1  [STACK] void 
 23688 ;; Registers used:
 23689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/39
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23699 ;;Total ram usage:        0 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:   18
 23702 ;; This function calls:
 23703 ;;		___flge
 23704 ;;		___flsub
 23705 ;;		_conv_raw_result
 23706 ;;		_fabsf
 23707 ;; This function is called by:
 23708 ;;		_main
 23709 ;; This function uses a reentrant model
 23710 ;;
 23711                           
 23712                           	psect	text94
 23713  018B70                     __ptext94:
 23714                           	opt callstack 0
 23715  018B70                     _calc_ror_data:
 23716                           	opt callstack 12
 23717                           
 23718                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23719                           
 23720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23721                           ;incstack = 0
 23722  018B70  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23723  018B76  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23724  018B7C  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23725  018B82  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23726  018B88  0E00               	movlw	0
 23727  018B8A  6EE6               	movwf	postinc1,c
 23728  018B8C  0E00               	movlw	0
 23729  018B8E  6EE6               	movwf	postinc1,c
 23730  018B90  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23731  018B94  0060  F007  FFE6   	movff	btemp,postinc1
 23732  018B9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23733  018BA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23734  018BA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 23735  018BAC  ECBF  F0DA         	call	___flsub	;wreg free
 23736  018BB0  0060  F007  FFE6   	movff	btemp,postinc1
 23737  018BB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23738  018BBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23739  018BC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 23740  018BC8  ECC6  F0D2         	call	_fabsf	;wreg free
 23741  018BCC  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23742  018BD2  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23743  018BD8  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23744  018BDE  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23745                           
 23746                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23747  018BE4  0E00               	movlw	0
 23748  018BE6  6EE6               	movwf	postinc1,c
 23749  018BE8  0E00               	movlw	0
 23750  018BEA  6EE6               	movwf	postinc1,c
 23751  018BEC  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23752  018BF0  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23753  018BF6  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23754  018BFC  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23755  018C02  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23756                           
 23757                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23758  018C08  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23759  018C0E  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23760  018C14  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23761  018C1A  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23762  018C20  0E00               	movlw	0
 23763  018C22  6EE6               	movwf	postinc1,c
 23764  018C24  0E04               	movlw	4
 23765  018C26  6EE6               	movwf	postinc1,c
 23766  018C28  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23767  018C2C  0060  F007  FFE6   	movff	btemp,postinc1
 23768  018C32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23769  018C38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23770  018C3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23771  018C44  ECBF  F0DA         	call	___flsub	;wreg free
 23772  018C48  0060  F007  FFE6   	movff	btemp,postinc1
 23773  018C4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23774  018C54  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23775  018C5A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23776  018C60  ECC6  F0D2         	call	_fabsf	;wreg free
 23777  018C64  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23778  018C6A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23779  018C70  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23780  018C76  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23781                           
 23782                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23783  018C7C  0EE7               	movlw	231
 23784  018C7E  6EE6               	movwf	postinc1,c
 23785  018C80  0E1D               	movlw	29
 23786  018C82  6EE6               	movwf	postinc1,c
 23787  018C84  0EA7               	movlw	167
 23788  018C86  6EE6               	movwf	postinc1,c
 23789  018C88  0E3B               	movlw	59
 23790  018C8A  6EE6               	movwf	postinc1,c
 23791  018C8C  EE21  F36B         	lfsr	2,_C+108	;volatile
 23792  018C90  006F FF7B FFE6     	movff	postinc2,postinc1
 23793  018C96  006F FF7B FFE6     	movff	postinc2,postinc1
 23794  018C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 23795  018CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 23796  018CA8  ECF4  F0C7         	call	___flge	;wreg free
 23797  018CAC  B001               	btfsc	btemp& (0+255),0,c
 23798  018CAE  D010               	goto	l10882
 23799                           
 23800                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23801  018CB0  0EB0               	movlw	176
 23802  018CB2  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23803  018CB8  0E03               	movlw	3
 23804  018CBA  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23805  018CC0  0E67               	movlw	103
 23806  018CC2  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23807  018CC8  0E3C               	movlw	60
 23808  018CCA  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23809  018CD0                     l10882:
 23810                           
 23811                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23812  018CD0  0E00               	movlw	0
 23813  018CD2  6EE6               	movwf	postinc1,c
 23814  018CD4  0E04               	movlw	4
 23815  018CD6  6EE6               	movwf	postinc1,c
 23816  018CD8  EC71  F0A9         	call	_conv_raw_result	;wreg free
 23817  018CDC  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23818  018CE2  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23819  018CE8  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23820  018CEE  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23821                           
 23822                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23823  018CF4  0012               	return		;funcret
 23824  018CF6                     __end_of_calc_ror_data:
 23825                           	opt callstack 0
 23826                           
 23827 ;; *************** function _fabsf *****************
 23828 ;; Defined at:
 23829 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23830 ;; Parameters:    Size  Location     Type
 23831 ;;  x               4  [STACK] float 
 23832 ;; Auto vars:     Size  Location     Type
 23833 ;;  u               4  [STACK] struct .
 23834 ;; Return value:  Size  Location     Type
 23835 ;;                  4  [STACK] float 
 23836 ;; Registers used:
 23837 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23838 ;; Tracked objects:
 23839 ;;		On entry : 0/0
 23840 ;;		On exit  : 0/0
 23841 ;;		Unchanged: 0/0
 23842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23847 ;;Total ram usage:        0 bytes
 23848 ;; Hardware stack levels used:    1
 23849 ;; Hardware stack levels required when called:   15
 23850 ;; This function calls:
 23851 ;;		Nothing
 23852 ;; This function is called by:
 23853 ;;		_main
 23854 ;;		_calc_ror_data
 23855 ;;		_calc_bsoc
 23856 ;;		_esr_check
 23857 ;; This function uses a reentrant model
 23858 ;;
 23859                           
 23860                           	psect	text95
 23861  01A58C                     __ptext95:
 23862                           	opt callstack 0
 23863  01A58C                     _fabsf:
 23864                           	opt callstack 0
 23865                           
 23866                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23867  01A58C  52E6               	movf	postinc1,f,c
 23868  01A58E  52E6               	movf	postinc1,f,c
 23869  01A590  52E6               	movf	postinc1,f,c
 23870  01A592  52E6               	movf	postinc1,f,c
 23871                           
 23872                           ;incstack = 0
 23873 ;; hardware stack exceeded
 23874  01A594  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23875  01A59A  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23876  01A5A0  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23877  01A5A6  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23878                           
 23879                           ;stkvar	_u @ sp[(-4)+0]
 23880  01A5AC  0EFC               	movlw	-4
 23881  01A5AE  0060  F027  FFE3   	movff	btemp+8,plusw1
 23882  01A5B4  0EFD               	movlw	-3
 23883  01A5B6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23884  01A5BC  0EFE               	movlw	-2
 23885  01A5BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23886  01A5C4  0EFF               	movlw	-1
 23887  01A5C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23888                           
 23889                           ;stkvar	_x @ sp[(-4)+-4]
 23890  01A5CC  0EF8               	movlw	-8
 23891  01A5CE  006F FF8C  F009    	movff	plusw1,btemp+8
 23892  01A5D4  0EF9               	movlw	-7
 23893  01A5D6  006F FF8C  F00A    	movff	plusw1,btemp+9
 23894  01A5DC  0EFA               	movlw	-6
 23895  01A5DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 23896  01A5E4  0EFB               	movlw	-5
 23897  01A5E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23898                           
 23899                           ;stkvar	_u @ sp[(-4)+0]
 23900  01A5EC  0EFC               	movlw	-4
 23901  01A5EE  0060  F027  FFE3   	movff	btemp+8,plusw1
 23902  01A5F4  0EFD               	movlw	-3
 23903  01A5F6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23904  01A5FC  0EFE               	movlw	-2
 23905  01A5FE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23906  01A604  0EFF               	movlw	-1
 23907  01A606  0060  F033  FFE3   	movff	btemp+11,plusw1
 23908                           
 23909                           ;stkvar	_u @ sp[(-4)+0]
 23910  01A60C  0EFF               	movlw	-1
 23911  01A60E  9EE3               	bcf	plusw1,7,c
 23912                           
 23913                           ;stkvar	_u @ sp[(-4)+0]
 23914  01A610  0EFC               	movlw	-4
 23915  01A612  006F FF8C  F001    	movff	plusw1,btemp
 23916  01A618  0EFD               	movlw	-3
 23917  01A61A  006F FF8C  F002    	movff	plusw1,btemp+1
 23918  01A620  0EFE               	movlw	-2
 23919  01A622  006F FF8C  F003    	movff	plusw1,btemp+2
 23920  01A628  0EFF               	movlw	-1
 23921  01A62A  006F FF8C  F004    	movff	plusw1,btemp+3
 23922                           
 23923                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23924  01A630  0EF8               	movlw	248
 23925  01A632  26E1               	addwf	fsr1l,f,c
 23926  01A634  0EFF               	movlw	255
 23927  01A636  22E2               	addwfc	fsr1h,f,c
 23928  01A638  0012               	return		;funcret
 23929  01A63A                     __end_of_fabsf:
 23930                           	opt callstack 0
 23931                           
 23932 ;; *************** function _conv_raw_result *****************
 23933 ;; Defined at:
 23934 ;;		line 98 in file "daq.c"
 23935 ;; Parameters:    Size  Location     Type
 23936 ;;  chan            1  [STACK] const enum E16582
 23937 ;;  to_what         1  [STACK] const enum E16644
 23938 ;; Auto vars:     Size  Location     Type
 23939 ;;		None
 23940 ;; Return value:  Size  Location     Type
 23941 ;;                  4  [STACK] float 
 23942 ;; Registers used:
 23943 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23944 ;; Tracked objects:
 23945 ;;		On entry : 0/39
 23946 ;;		On exit  : 0/0
 23947 ;;		Unchanged: 0/0
 23948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23953 ;;Total ram usage:        0 bytes
 23954 ;; Hardware stack levels used:    1
 23955 ;; Hardware stack levels required when called:   17
 23956 ;; This function calls:
 23957 ;;		___fladd
 23958 ;;		___fldiv
 23959 ;;		___flmul
 23960 ;;		___flsub
 23961 ;;		___xxtofl
 23962 ;;		_get_raw_result
 23963 ;;		_nanf
 23964 ;; This function is called by:
 23965 ;;		_main
 23966 ;;		_convert_adc_data
 23967 ;;		_calc_ror_data
 23968 ;;		_check_day_time
 23969 ;;		_init_bsoc
 23970 ;;		_esr_check
 23971 ;; This function uses a reentrant model
 23972 ;;
 23973                           
 23974                           	psect	text96
 23975  0152E2                     __ptext96:
 23976                           	opt callstack 0
 23977  0152E2                     _conv_raw_result:
 23978                           	opt callstack 0
 23979                           
 23980                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23981                           
 23982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23983                           ;incstack = 0
 23984 ;; hardware stack exceeded
 23985  0152E2  D276               	goto	l9730
 23986  0152E4                     l9676:
 23987                           
 23988                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23989                           ;stkvar	_chan @ sp[(0)+-1]
 23990  0152E4  0EFF               	movlw	-1
 23991  0152E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 23992  0152EC  0E77               	movlw	119
 23993  0152EE  6E09               	movwf	(btemp+8)^0,c
 23994  0152F0  0E3C               	movlw	60
 23995  0152F2  6E0A               	movwf	(btemp+9)^0,c
 23996  0152F4  2A0C               	incf	(btemp+11)^0,f,c
 23997  0152F6  D003               	goto	u9074
 23998  0152F8                     u9075:
 23999  0152F8  340A               	rlcf	(btemp+9)^0,w,c
 24000  0152FA  320A               	rrcf	(btemp+9)^0,f,c
 24001  0152FC  3209               	rrcf	(btemp+8)^0,f,c
 24002  0152FE                     u9074:
 24003  0152FE  2E0C               	decfsz	(btemp+11)^0,f,c
 24004  015300  D7FB               	goto	u9075
 24005  015302  B009               	btfsc	(btemp+8)^0,0,c
 24006  015304  D007               	goto	l9682
 24007                           
 24008                           ;daq.c: 104:    return nanf("");
 24009  015306  0E4F               	movlw	low (STR_64+120)
 24010  015308  6EE6               	movwf	postinc1,c
 24011  01530A  0EFC               	movlw	high (STR_64+120)
 24012  01530C  6EE6               	movwf	postinc1,c
 24013  01530E  EC61  F0D8         	call	_nanf	;wreg free
 24014  015312  D26E               	goto	l1781
 24015  015314                     l9682:
 24016                           
 24017                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 24018                           ;stkvar	_chan @ sp[(0)+-1]
 24019  015314  0EFF               	movlw	-1
 24020  015316  006F FF8C  F00C    	movff	plusw1,btemp+11
 24021  01531C  0E03               	movlw	3
 24022  01531E  6E09               	movwf	(btemp+8)^0,c
 24023  015320  0E00               	movlw	0
 24024  015322  6E0A               	movwf	(btemp+9)^0,c
 24025  015324  2A0C               	incf	(btemp+11)^0,f,c
 24026  015326  D003               	goto	u9094
 24027  015328                     u9095:
 24028  015328  340A               	rlcf	(btemp+9)^0,w,c
 24029  01532A  320A               	rrcf	(btemp+9)^0,f,c
 24030  01532C  3209               	rrcf	(btemp+8)^0,f,c
 24031  01532E                     u9094:
 24032  01532E  2E0C               	decfsz	(btemp+11)^0,f,c
 24033  015330  D7FB               	goto	u9095
 24034  015332  A009               	btfss	(btemp+8)^0,0,c
 24035  015334  D11F               	goto	l9696
 24036                           
 24037                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 24038                           ;stkvar	_chan @ sp[(0)+-1]
 24039  015336  0EFF               	movlw	-1
 24040  015338  006F FF8C  F00C    	movff	plusw1,btemp+11
 24041  01533E  0E01               	movlw	1
 24042  015340  6E09               	movwf	(btemp+8)^0,c
 24043  015342  0E00               	movlw	0
 24044  015344  6E0A               	movwf	(btemp+9)^0,c
 24045  015346  2A0C               	incf	(btemp+11)^0,f,c
 24046  015348  D003               	goto	u9114
 24047  01534A                     u9115:
 24048  01534A  340A               	rlcf	(btemp+9)^0,w,c
 24049  01534C  320A               	rrcf	(btemp+9)^0,f,c
 24050  01534E  3209               	rrcf	(btemp+8)^0,f,c
 24051  015350                     u9114:
 24052  015350  2E0C               	decfsz	(btemp+11)^0,f,c
 24053  015352  D7FB               	goto	u9115
 24054  015354  A009               	btfss	(btemp+8)^0,0,c
 24055  015356  D087               	goto	l9692
 24056                           
 24057                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24058  015358  0060  F493  FFE6   	movff	_R+36,postinc1
 24059  01535E  0060  F497  FFE6   	movff	_R+37,postinc1
 24060  015364  0060  F49B  FFE6   	movff	_R+38,postinc1
 24061  01536A  0060  F49F  FFE6   	movff	_R+39,postinc1
 24062  015370  0E7B               	movlw	123
 24063  015372  6EE6               	movwf	postinc1,c
 24064  015374  0E14               	movlw	20
 24065  015376  6EE6               	movwf	postinc1,c
 24066  015378  0EAE               	movlw	174
 24067  01537A  6EE6               	movwf	postinc1,c
 24068  01537C  0E3D               	movlw	61
 24069  01537E  6EE6               	movwf	postinc1,c
 24070  015380  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 24071  015386  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 24072  01538C  0E00               	movlw	0
 24073  01538E  BE0A               	btfsc	(btemp+9)^0,7,c
 24074  015390  0EFF               	movlw	255
 24075  015392  6E0B               	movwf	(btemp+10)^0,c
 24076  015394  6E0C               	movwf	(btemp+11)^0,c
 24077  015396  0060  F027  FFE6   	movff	btemp+8,postinc1
 24078  01539C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24079  0153A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24080  0153A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 24081  0153AE  0E01               	movlw	1
 24082  0153B0  6EE6               	movwf	postinc1,c
 24083  0153B2  EC3D  F0C2         	call	___xxtofl	;wreg free
 24084  0153B6  0060  F007  FFE6   	movff	btemp,postinc1
 24085  0153BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24086  0153C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24087  0153C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 24088                           
 24089                           ;stkvar	_chan @ sp[(-12)+-1]
 24090  0153CE  0EF3               	movlw	-13
 24091  0153D0  50E3               	movf	plusw1,w,c
 24092  0153D2  6EE6               	movwf	postinc1,c
 24093  0153D4  EC22  F0DF         	call	_get_raw_result	;wreg free
 24094  0153D8  0060  F004  F00B   	movff	btemp,btemp+10
 24095  0153DE  0060  F008  F00C   	movff	btemp+1,btemp+11
 24096  0153E4  500B               	movf	(btemp+10)^0,w,c
 24097  0153E6  6E05               	movwf	(btemp+4)^0,c
 24098  0153E8  500C               	movf	(btemp+11)^0,w,c
 24099  0153EA  6E06               	movwf	(btemp+5)^0,c
 24100  0153EC  6A07               	clrf	(btemp+6)^0,c
 24101  0153EE  6A08               	clrf	(btemp+7)^0,c
 24102  0153F0  0060  F017  FFE6   	movff	btemp+4,postinc1
 24103  0153F6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24104  0153FC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24105  015402  0060  F023  FFE6   	movff	btemp+7,postinc1
 24106  015408  0E00               	movlw	0
 24107  01540A  6EE6               	movwf	postinc1,c
 24108  01540C  EC3D  F0C2         	call	___xxtofl	;wreg free
 24109  015410  0060  F007  FFE6   	movff	btemp,postinc1
 24110  015416  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24111  01541C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24112  015422  0060  F013  FFE6   	movff	btemp+3,postinc1
 24113  015428  ECBF  F0DA         	call	___flsub	;wreg free
 24114  01542C  0060  F007  FFE6   	movff	btemp,postinc1
 24115  015432  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24116  015438  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24117  01543E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24118  015444  ECC1  F09E         	call	___flmul	;wreg free
 24119  015448  0060  F007  FFE6   	movff	btemp,postinc1
 24120  01544E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24121  015454  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24122  01545A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24123  015460  ECD6  F0A2         	call	___fladd	;wreg free
 24124  015464  D1C5               	goto	l1781
 24125  015466                     l9692:
 24126                           
 24127                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24128  015466  0060  F4A3  FFE6   	movff	_R+40,postinc1
 24129  01546C  0060  F4A7  FFE6   	movff	_R+41,postinc1
 24130  015472  0060  F4AB  FFE6   	movff	_R+42,postinc1
 24131  015478  0060  F4AF  FFE6   	movff	_R+43,postinc1
 24132  01547E  0E29               	movlw	41
 24133  015480  6EE6               	movwf	postinc1,c
 24134  015482  0E5C               	movlw	92
 24135  015484  6EE6               	movwf	postinc1,c
 24136  015486  0E0F               	movlw	15
 24137  015488  6EE6               	movwf	postinc1,c
 24138  01548A  0E3D               	movlw	61
 24139  01548C  6EE6               	movwf	postinc1,c
 24140  01548E  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 24141  015494  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 24142  01549A  0E00               	movlw	0
 24143  01549C  BE0A               	btfsc	(btemp+9)^0,7,c
 24144  01549E  0EFF               	movlw	255
 24145  0154A0  6E0B               	movwf	(btemp+10)^0,c
 24146  0154A2  6E0C               	movwf	(btemp+11)^0,c
 24147  0154A4  0060  F027  FFE6   	movff	btemp+8,postinc1
 24148  0154AA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24149  0154B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24150  0154B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 24151  0154BC  0E01               	movlw	1
 24152  0154BE  6EE6               	movwf	postinc1,c
 24153  0154C0  EC3D  F0C2         	call	___xxtofl	;wreg free
 24154  0154C4  0060  F007  FFE6   	movff	btemp,postinc1
 24155  0154CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24156  0154D0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24157  0154D6  0060  F013  FFE6   	movff	btemp+3,postinc1
 24158                           
 24159                           ;stkvar	_chan @ sp[(-12)+-1]
 24160  0154DC  0EF3               	movlw	-13
 24161  0154DE  50E3               	movf	plusw1,w,c
 24162  0154E0  6EE6               	movwf	postinc1,c
 24163  0154E2  EC22  F0DF         	call	_get_raw_result	;wreg free
 24164  0154E6  0060  F004  F00B   	movff	btemp,btemp+10
 24165  0154EC  0060  F008  F00C   	movff	btemp+1,btemp+11
 24166  0154F2  500B               	movf	(btemp+10)^0,w,c
 24167  0154F4  6E05               	movwf	(btemp+4)^0,c
 24168  0154F6  500C               	movf	(btemp+11)^0,w,c
 24169  0154F8  6E06               	movwf	(btemp+5)^0,c
 24170  0154FA  6A07               	clrf	(btemp+6)^0,c
 24171  0154FC  6A08               	clrf	(btemp+7)^0,c
 24172  0154FE  0060  F017  FFE6   	movff	btemp+4,postinc1
 24173  015504  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24174  01550A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24175  015510  0060  F023  FFE6   	movff	btemp+7,postinc1
 24176  015516  0E00               	movlw	0
 24177  015518  6EE6               	movwf	postinc1,c
 24178  01551A  EC3D  F0C2         	call	___xxtofl	;wreg free
 24179  01551E  0060  F007  FFE6   	movff	btemp,postinc1
 24180  015524  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24181  01552A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24182  015530  0060  F013  FFE6   	movff	btemp+3,postinc1
 24183  015536  ECBF  F0DA         	call	___flsub	;wreg free
 24184  01553A  0060  F007  FFE6   	movff	btemp,postinc1
 24185  015540  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24186  015546  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24187  01554C  0060  F013  FFE6   	movff	btemp+3,postinc1
 24188  015552  ECC1  F09E         	call	___flmul	;wreg free
 24189  015556  0060  F007  FFE6   	movff	btemp,postinc1
 24190  01555C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24191  015562  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24192  015568  0060  F013  FFE6   	movff	btemp+3,postinc1
 24193  01556E  ECD6  F0A2         	call	___fladd	;wreg free
 24194  015572  D13E               	goto	l1781
 24195  015574                     l9696:
 24196                           
 24197                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 24198                           ;stkvar	_chan @ sp[(0)+-1]
 24199  015574  0EFF               	movlw	-1
 24200  015576  006F FF8C  F00C    	movff	plusw1,btemp+11
 24201  01557C  0E00               	movlw	0
 24202  01557E  6E09               	movwf	(btemp+8)^0,c
 24203  015580  0E08               	movlw	8
 24204  015582  6E0A               	movwf	(btemp+9)^0,c
 24205  015584  2A0C               	incf	(btemp+11)^0,f,c
 24206  015586  D003               	goto	u9134
 24207  015588                     u9135:
 24208  015588  340A               	rlcf	(btemp+9)^0,w,c
 24209  01558A  320A               	rrcf	(btemp+9)^0,f,c
 24210  01558C  3209               	rrcf	(btemp+8)^0,f,c
 24211  01558E                     u9134:
 24212  01558E  2E0C               	decfsz	(btemp+11)^0,f,c
 24213  015590  D7FB               	goto	u9135
 24214  015592  A009               	btfss	(btemp+8)^0,0,c
 24215  015594  D008               	goto	l9704
 24216                           
 24217                           ;daq.c: 114:     return 25.0;
 24218  015596  0E00               	movlw	0
 24219  015598  6E01               	movwf	btemp^0,c
 24220  01559A  0E00               	movlw	0
 24221  01559C  6E02               	movwf	(btemp+1)^0,c
 24222  01559E  0EC8               	movlw	200
 24223  0155A0  6E03               	movwf	(btemp+2)^0,c
 24224  0155A2  0E41               	movlw	65
 24225  0155A4  D113               	goto	L29
 24226  0155A6                     l9704:
 24227                           
 24228                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24229  0155A6  0E00               	movlw	0
 24230  0155A8  6EE6               	movwf	postinc1,c
 24231  0155AA  0E00               	movlw	0
 24232  0155AC  6EE6               	movwf	postinc1,c
 24233  0155AE  0E7A               	movlw	122
 24234  0155B0  6EE6               	movwf	postinc1,c
 24235  0155B2  0E44               	movlw	68
 24236  0155B4  6EE6               	movwf	postinc1,c
 24237  0155B6  0E61               	movlw	97
 24238  0155B8  6EE6               	movwf	postinc1,c
 24239  0155BA  0E03               	movlw	3
 24240  0155BC  6EE6               	movwf	postinc1,c
 24241  0155BE  0E84               	movlw	132
 24242  0155C0  6EE6               	movwf	postinc1,c
 24243  0155C2  0E40               	movlw	64
 24244  0155C4  6EE6               	movwf	postinc1,c
 24245                           
 24246                           ;stkvar	_chan @ sp[(-8)+-1]
 24247  0155C6  0EF7               	movlw	-9
 24248  0155C8  50E3               	movf	plusw1,w,c
 24249  0155CA  6EE6               	movwf	postinc1,c
 24250  0155CC  EC22  F0DF         	call	_get_raw_result	;wreg free
 24251  0155D0  0060  F004  F00B   	movff	btemp,btemp+10
 24252  0155D6  0060  F008  F00C   	movff	btemp+1,btemp+11
 24253  0155DC  500B               	movf	(btemp+10)^0,w,c
 24254  0155DE  6E05               	movwf	(btemp+4)^0,c
 24255  0155E0  500C               	movf	(btemp+11)^0,w,c
 24256  0155E2  6E06               	movwf	(btemp+5)^0,c
 24257  0155E4  6A07               	clrf	(btemp+6)^0,c
 24258  0155E6  6A08               	clrf	(btemp+7)^0,c
 24259  0155E8  0060  F017  FFE6   	movff	btemp+4,postinc1
 24260  0155EE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24261  0155F4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24262  0155FA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24263  015600  0E00               	movlw	0
 24264  015602  6EE6               	movwf	postinc1,c
 24265  015604  EC3D  F0C2         	call	___xxtofl	;wreg free
 24266  015608  0060  F007  FFE6   	movff	btemp,postinc1
 24267  01560E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24268  015614  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24269  01561A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24270  015620  ECC1  F09E         	call	___flmul	;wreg free
 24271  015624  0060  F007  FFE6   	movff	btemp,postinc1
 24272  01562A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24273  015630  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24274  015636  0060  F013  FFE6   	movff	btemp+3,postinc1
 24275  01563C  ECB4  F0A6         	call	___fldiv	;wreg free
 24276  015640  D0D7               	goto	l1781
 24277  015642                     l9708:
 24278                           
 24279                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24280                           ;stkvar	_chan @ sp[(0)+-1]
 24281  015642  0EFF               	movlw	-1
 24282  015644  006F FF8C  F00C    	movff	plusw1,btemp+11
 24283  01564A  0E03               	movlw	3
 24284  01564C  6E09               	movwf	(btemp+8)^0,c
 24285  01564E  0E00               	movlw	0
 24286  015650  6E0A               	movwf	(btemp+9)^0,c
 24287  015652  2A0C               	incf	(btemp+11)^0,f,c
 24288  015654  D003               	goto	u9154
 24289  015656                     u9155:
 24290  015656  340A               	rlcf	(btemp+9)^0,w,c
 24291  015658  320A               	rrcf	(btemp+9)^0,f,c
 24292  01565A  3209               	rrcf	(btemp+8)^0,f,c
 24293  01565C                     u9154:
 24294  01565C  2E0C               	decfsz	(btemp+11)^0,f,c
 24295  01565E  D7FB               	goto	u9155
 24296  015660  B009               	btfsc	(btemp+8)^0,0,c
 24297  015662  D011               	goto	u9180
 24298                           
 24299                           ;stkvar	_chan @ sp[(0)+-1]
 24300  015664  0EFF               	movlw	-1
 24301  015666  006F FF8C  F00C    	movff	plusw1,btemp+11
 24302  01566C  0E00               	movlw	0
 24303  01566E  6E09               	movwf	(btemp+8)^0,c
 24304  015670  0E08               	movlw	8
 24305  015672  6E0A               	movwf	(btemp+9)^0,c
 24306  015674  2A0C               	incf	(btemp+11)^0,f,c
 24307  015676  D003               	goto	u9174
 24308  015678                     u9175:
 24309  015678  340A               	rlcf	(btemp+9)^0,w,c
 24310  01567A  320A               	rrcf	(btemp+9)^0,f,c
 24311  01567C  3209               	rrcf	(btemp+8)^0,f,c
 24312  01567E                     u9174:
 24313  01567E  2E0C               	decfsz	(btemp+11)^0,f,c
 24314  015680  D7FB               	goto	u9175
 24315  015682  A009               	btfss	(btemp+8)^0,0,c
 24316  015684  D04E               	goto	l9716
 24317  015686                     u9180:
 24318                           
 24319                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24320  015686  0E00               	movlw	0
 24321  015688  6EE6               	movwf	postinc1,c
 24322  01568A  0E00               	movlw	0
 24323  01568C  6EE6               	movwf	postinc1,c
 24324  01568E  0E7A               	movlw	122
 24325  015690  6EE6               	movwf	postinc1,c
 24326  015692  0E44               	movlw	68
 24327  015694  6EE6               	movwf	postinc1,c
 24328  015696  0E00               	movlw	0
 24329  015698  6EE6               	movwf	postinc1,c
 24330  01569A  0E00               	movlw	0
 24331  01569C  6EE6               	movwf	postinc1,c
 24332  01569E  0E20               	movlw	32
 24333  0156A0  6EE6               	movwf	postinc1,c
 24334  0156A2  0E3F               	movlw	63
 24335  0156A4  6EE6               	movwf	postinc1,c
 24336                           
 24337                           ;stkvar	_chan @ sp[(-8)+-1]
 24338  0156A6  0EF7               	movlw	-9
 24339  0156A8  50E3               	movf	plusw1,w,c
 24340  0156AA  6EE6               	movwf	postinc1,c
 24341  0156AC  EC22  F0DF         	call	_get_raw_result	;wreg free
 24342  0156B0  0060  F004  F00B   	movff	btemp,btemp+10
 24343  0156B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 24344  0156BC  500B               	movf	(btemp+10)^0,w,c
 24345  0156BE  6E05               	movwf	(btemp+4)^0,c
 24346  0156C0  500C               	movf	(btemp+11)^0,w,c
 24347  0156C2  6E06               	movwf	(btemp+5)^0,c
 24348  0156C4  6A07               	clrf	(btemp+6)^0,c
 24349  0156C6  6A08               	clrf	(btemp+7)^0,c
 24350  0156C8  0060  F017  FFE6   	movff	btemp+4,postinc1
 24351  0156CE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24352  0156D4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24353  0156DA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24354  0156E0  0E00               	movlw	0
 24355  0156E2  6EE6               	movwf	postinc1,c
 24356  0156E4  EC3D  F0C2         	call	___xxtofl	;wreg free
 24357  0156E8  0060  F007  FFE6   	movff	btemp,postinc1
 24358  0156EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24359  0156F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24360  0156FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24361  015700  ECC1  F09E         	call	___flmul	;wreg free
 24362  015704  0060  F007  FFE6   	movff	btemp,postinc1
 24363  01570A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24364  015710  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24365  015716  0060  F013  FFE6   	movff	btemp+3,postinc1
 24366  01571C  ECB4  F0A6         	call	___fldiv	;wreg free
 24367  015720  D067               	goto	l1781
 24368  015722                     l9716:
 24369                           
 24370                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24371  015722  0E00               	movlw	0
 24372  015724  6EE6               	movwf	postinc1,c
 24373  015726  0E00               	movlw	0
 24374  015728  6EE6               	movwf	postinc1,c
 24375  01572A  0E7A               	movlw	122
 24376  01572C  6EE6               	movwf	postinc1,c
 24377  01572E  0E44               	movlw	68
 24378  015730  6EE6               	movwf	postinc1,c
 24379  015732  0E61               	movlw	97
 24380  015734  6EE6               	movwf	postinc1,c
 24381  015736  0E03               	movlw	3
 24382  015738  6EE6               	movwf	postinc1,c
 24383  01573A  0E84               	movlw	132
 24384  01573C  6EE6               	movwf	postinc1,c
 24385  01573E  0E40               	movlw	64
 24386  015740  6EE6               	movwf	postinc1,c
 24387                           
 24388                           ;stkvar	_chan @ sp[(-8)+-1]
 24389  015742  0EF7               	movlw	-9
 24390  015744  50E3               	movf	plusw1,w,c
 24391  015746  6EE6               	movwf	postinc1,c
 24392  015748  EC22  F0DF         	call	_get_raw_result	;wreg free
 24393  01574C  0060  F004  F00B   	movff	btemp,btemp+10
 24394  015752  0060  F008  F00C   	movff	btemp+1,btemp+11
 24395  015758  500B               	movf	(btemp+10)^0,w,c
 24396  01575A  6E05               	movwf	(btemp+4)^0,c
 24397  01575C  500C               	movf	(btemp+11)^0,w,c
 24398  01575E  6E06               	movwf	(btemp+5)^0,c
 24399  015760  6A07               	clrf	(btemp+6)^0,c
 24400  015762  6A08               	clrf	(btemp+7)^0,c
 24401  015764  0060  F017  FFE6   	movff	btemp+4,postinc1
 24402  01576A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24403  015770  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24404  015776  0060  F023  FFE6   	movff	btemp+7,postinc1
 24405  01577C  0E00               	movlw	0
 24406  01577E  6EE6               	movwf	postinc1,c
 24407  015780  EC3D  F0C2         	call	___xxtofl	;wreg free
 24408  015784  0060  F007  FFE6   	movff	btemp,postinc1
 24409  01578A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24410  015790  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24411  015796  0060  F013  FFE6   	movff	btemp+3,postinc1
 24412  01579C  ECC1  F09E         	call	___flmul	;wreg free
 24413  0157A0  0060  F007  FFE6   	movff	btemp,postinc1
 24414  0157A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24415  0157AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24416  0157B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24417  0157B8  ECB4  F0A6         	call	___fldiv	;wreg free
 24418  0157BC  D019               	goto	l1781
 24419  0157BE                     l9722:
 24420                           
 24421                           ;daq.c: 127:   return 0.0;
 24422  0157BE  0E00               	movlw	0
 24423  0157C0  6E01               	movwf	btemp^0,c
 24424  0157C2  0E00               	movlw	0
 24425  0157C4  6E02               	movwf	(btemp+1)^0,c
 24426  0157C6  0E00               	movlw	0
 24427  0157C8  6E03               	movwf	(btemp+2)^0,c
 24428  0157CA  0E00               	movlw	0
 24429  0157CC                     L29:
 24430  0157CC  6E04               	movwf	(btemp+3)^0,c
 24431  0157CE  D010               	goto	l1781
 24432  0157D0                     l9730:
 24433                           
 24434                           ;stkvar	_to_what @ sp[(0)+-2]
 24435  0157D0  0EFE               	movlw	-2
 24436  0157D2  50E3               	movf	plusw1,w,c
 24437  0157D4  6E0B               	movwf	(btemp+10)^0,c
 24438  0157D6  6A0C               	clrf	(btemp+11)^0,c
 24439                           
 24440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24441                           ; Switch size 1, requested type "simple"
 24442                           ; Number of cases is 1, Range of values is 0 to 0
 24443                           ; switch strategies available:
 24444                           ; Name         Instructions Cycles
 24445                           ; simple_byte            4     3 (average)
 24446                           ;	Chosen strategy is simple_byte
 24447  0157D8  500C               	movf	(btemp+11)^0,w,c
 24448  0157DA  0A00               	xorlw	0	; case 0
 24449  0157DC  A4D8               	btfss	status,2,c
 24450  0157DE  D7EF               	goto	l9722
 24451                           
 24452                           ; Switch size 1, requested type "simple"
 24453                           ; Number of cases is 2, Range of values is 0 to 1
 24454                           ; switch strategies available:
 24455                           ; Name         Instructions Cycles
 24456                           ; simple_byte            7     4 (average)
 24457                           ;	Chosen strategy is simple_byte
 24458  0157E0  500B               	movf	(btemp+10)^0,w,c
 24459  0157E2  0A00               	xorlw	0	; case 0
 24460  0157E4  B4D8               	btfsc	status,2,c
 24461  0157E6  D57E               	goto	l9676
 24462  0157E8  0A01               	xorlw	1	; case 1
 24463  0157EA  B4D8               	btfsc	status,2,c
 24464  0157EC  D72A               	goto	l9708
 24465  0157EE  D7E7               	goto	l9722
 24466  0157F0                     l1781:
 24467                           
 24468                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24469  0157F0  52E5               	movf	postdec1,f,c
 24470  0157F2  52E5               	movf	postdec1,f,c
 24471  0157F4  0012               	return		;funcret
 24472  0157F6                     __end_of_conv_raw_result:
 24473                           	opt callstack 0
 24474                           
 24475 ;; *************** function _nanf *****************
 24476 ;; Defined at:
 24477 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24478 ;; Parameters:    Size  Location     Type
 24479 ;;  s               2  [STACK] PTR const unsigned char 
 24480 ;;		 -> STR_101(1), STR_63(1), 
 24481 ;; Auto vars:     Size  Location     Type
 24482 ;;  u               4  [STACK] struct .
 24483 ;; Return value:  Size  Location     Type
 24484 ;;                  4  [STACK] float 
 24485 ;; Registers used:
 24486 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24487 ;; Tracked objects:
 24488 ;;		On entry : 0/39
 24489 ;;		On exit  : 0/0
 24490 ;;		Unchanged: 0/0
 24491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24496 ;;Total ram usage:        0 bytes
 24497 ;; Hardware stack levels used:    1
 24498 ;; Hardware stack levels required when called:   15
 24499 ;; This function calls:
 24500 ;;		Nothing
 24501 ;; This function is called by:
 24502 ;;		_conv_raw_result
 24503 ;; This function uses a reentrant model
 24504 ;;
 24505                           
 24506                           	psect	text97
 24507  01B0C2                     __ptext97:
 24508                           	opt callstack 0
 24509  01B0C2                     _nanf:
 24510                           	opt callstack 0
 24511                           
 24512                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24513  01B0C2  52E6               	movf	postinc1,f,c
 24514  01B0C4  52E6               	movf	postinc1,f,c
 24515  01B0C6  52E6               	movf	postinc1,f,c
 24516  01B0C8  52E6               	movf	postinc1,f,c
 24517                           
 24518                           ;incstack = 0
 24519 ;; hardware stack exceeded
 24520  01B0CA  0EFF               	movlw	255
 24521  01B0CC  6E09               	movwf	(btemp+8)^0,c
 24522  01B0CE  0EFF               	movlw	255
 24523  01B0D0  6E0A               	movwf	(btemp+9)^0,c
 24524  01B0D2  0EFF               	movlw	255
 24525  01B0D4  6E0B               	movwf	(btemp+10)^0,c
 24526  01B0D6  0E7F               	movlw	127
 24527  01B0D8  6E0C               	movwf	(btemp+11)^0,c
 24528                           
 24529                           ;stkvar	_u @ sp[(-4)+0]
 24530  01B0DA  0EFC               	movlw	-4
 24531  01B0DC  0060  F027  FFE3   	movff	btemp+8,plusw1
 24532  01B0E2  0EFD               	movlw	-3
 24533  01B0E4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24534  01B0EA  0EFE               	movlw	-2
 24535  01B0EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24536  01B0F2  0EFF               	movlw	-1
 24537  01B0F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24538                           
 24539                           ;stkvar	_u @ sp[(-4)+0]
 24540  01B0FA  0EFC               	movlw	-4
 24541  01B0FC  006F FF8C  F001    	movff	plusw1,btemp
 24542  01B102  0EFD               	movlw	-3
 24543  01B104  006F FF8C  F002    	movff	plusw1,btemp+1
 24544  01B10A  0EFE               	movlw	-2
 24545  01B10C  006F FF8C  F003    	movff	plusw1,btemp+2
 24546  01B112  0EFF               	movlw	-1
 24547  01B114  006F FF8C  F004    	movff	plusw1,btemp+3
 24548                           
 24549                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24550  01B11A  0EFA               	movlw	250
 24551  01B11C  26E1               	addwf	fsr1l,f,c
 24552  01B11E  0EFF               	movlw	255
 24553  01B120  22E2               	addwfc	fsr1h,f,c
 24554  01B122  0012               	return		;funcret
 24555  01B124                     __end_of_nanf:
 24556                           	opt callstack 0
 24557                           
 24558 ;; *************** function _get_raw_result *****************
 24559 ;; Defined at:
 24560 ;;		line 90 in file "daq.c"
 24561 ;; Parameters:    Size  Location     Type
 24562 ;;  index           1  [STACK] const enum E16582
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;		None
 24565 ;; Return value:  Size  Location     Type
 24566 ;;                  2  [STACK] unsigned short 
 24567 ;; Registers used:
 24568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24569 ;; Tracked objects:
 24570 ;;		On entry : 0/1
 24571 ;;		On exit  : 0/0
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24578 ;;Total ram usage:        0 bytes
 24579 ;; Hardware stack levels used:    1
 24580 ;; Hardware stack levels required when called:   15
 24581 ;; This function calls:
 24582 ;;		Nothing
 24583 ;; This function is called by:
 24584 ;;		_main
 24585 ;;		_conv_raw_result
 24586 ;; This function uses a reentrant model
 24587 ;;
 24588                           
 24589                           	psect	text98
 24590  01BE44                     __ptext98:
 24591                           	opt callstack 0
 24592  01BE44                     _get_raw_result:
 24593                           	opt callstack 0
 24594                           
 24595                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24596                           ;stkvar	_index @ sp[(0)+-1]
 24597                           
 24598                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24599                           ;incstack = 0
 24600 ;; hardware stack exceeded
 24601  01BE44  0EFF               	movlw	-1
 24602  01BE46  50E3               	movf	plusw1,w,c
 24603  01BE48  0D02               	mullw	2
 24604  01BE4A  0E00               	movlw	low _R
 24605  01BE4C  24F3               	addwf	243,w,c
 24606  01BE4E  6ED9               	movwf	fsr2l,c
 24607  01BE50  0E01               	movlw	high _R
 24608  01BE52  20F4               	addwfc	prodh,w,c
 24609  01BE54  6EDA               	movwf	fsr2h,c
 24610  01BE56  006F FF78  F001    	movff	postinc2,btemp
 24611  01BE5C  006F FF74  F002    	movff	postdec2,btemp+1
 24612                           
 24613                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24614  01BE62  52E5               	movf	postdec1,f,c
 24615  01BE64  0012               	return		;funcret
 24616  01BE66                     __end_of_get_raw_result:
 24617                           	opt callstack 0
 24618                           
 24619 ;; *************** function ___xxtofl *****************
 24620 ;; Defined at:
 24621 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24622 ;; Parameters:    Size  Location     Type
 24623 ;;  sign            1  [STACK] unsigned char 
 24624 ;;  val             4  [STACK] long 
 24625 ;; Auto vars:     Size  Location     Type
 24626 ;;  arg             4  [STACK] unsigned long 
 24627 ;;  exp             1  [STACK] unsigned char 
 24628 ;; Return value:  Size  Location     Type
 24629 ;;                  4  [STACK] unsigned char 
 24630 ;; Registers used:
 24631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24632 ;; Tracked objects:
 24633 ;;		On entry : 0/1
 24634 ;;		On exit  : 0/0
 24635 ;;		Unchanged: 0/0
 24636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24641 ;;Total ram usage:        0 bytes
 24642 ;; Hardware stack levels used:    1
 24643 ;; Hardware stack levels required when called:   15
 24644 ;; This function calls:
 24645 ;;		Nothing
 24646 ;; This function is called by:
 24647 ;;		_conv_raw_result
 24648 ;;		_init_bsoc
 24649 ;; This function uses a reentrant model
 24650 ;;
 24651                           
 24652                           	psect	text99
 24653  01847A                     __ptext99:
 24654                           	opt callstack 0
 24655  01847A                     ___xxtofl:
 24656                           	opt callstack 0
 24657                           
 24658                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24659  01847A  0E05               	movlw	5
 24660  01847C  26E1               	addwf	fsr1l,f,c
 24661  01847E  0E00               	movlw	0
 24662  018480  22E2               	addwfc	fsr1h,f,c
 24663                           
 24664                           ;stkvar	_sign @ sp[(-5)+-1]
 24665                           
 24666                           ;incstack = 0
 24667 ;; hardware stack exceeded
 24668  018482  0EFA               	movlw	-6
 24669  018484  50E3               	movf	plusw1,w,c
 24670  018486  B4D8               	btfsc	status,2,c
 24671  018488  D01D               	goto	l9624
 24672                           
 24673                           ;stkvar	_val @ sp[(-5)+-5]
 24674  01848A  0EF9               	movlw	-7
 24675  01848C  AEE3               	btfss	plusw1,7,c
 24676  01848E  D01A               	goto	l9624
 24677                           
 24678                           ;stkvar	_val @ sp[(-5)+-5]
 24679  018490  0EF6               	movlw	-10
 24680  018492  006F FF8C  F009    	movff	plusw1,btemp+8
 24681  018498  0EF7               	movlw	-9
 24682  01849A  006F FF8C  F00A    	movff	plusw1,btemp+9
 24683  0184A0  0EF8               	movlw	-8
 24684  0184A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24685  0184A8  0EF9               	movlw	-7
 24686  0184AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24687  0184B0  1E09               	comf	(btemp+8)^0,f,c
 24688  0184B2  1E0A               	comf	(btemp+9)^0,f,c
 24689  0184B4  1E0B               	comf	(btemp+10)^0,f,c
 24690  0184B6  1E0C               	comf	(btemp+11)^0,f,c
 24691  0184B8  2A09               	incf	(btemp+8)^0,f,c
 24692  0184BA  0E00               	movlw	0
 24693  0184BC  220A               	addwfc	(btemp+9)^0,f,c
 24694  0184BE  220B               	addwfc	(btemp+10)^0,f,c
 24695  0184C0  220C               	addwfc	(btemp+11)^0,f,c
 24696  0184C2  D010               	goto	L30
 24697  0184C4                     l9624:
 24698                           
 24699                           ;stkvar	_val @ sp[(-5)+-5]
 24700  0184C4  0EF6               	movlw	-10
 24701  0184C6  006F FF8C  F009    	movff	plusw1,btemp+8
 24702  0184CC  0EF7               	movlw	-9
 24703  0184CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 24704  0184D4  0EF8               	movlw	-8
 24705  0184D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 24706  0184DC  0EF9               	movlw	-7
 24707  0184DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24708  0184E4                     L30:
 24709                           
 24710                           ;stkvar	_arg @ sp[(-5)+0]
 24711  0184E4  0EFB               	movlw	-5
 24712  0184E6  0060  F027  FFE3   	movff	btemp+8,plusw1
 24713  0184EC  0EFC               	movlw	-4
 24714  0184EE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24715  0184F4  0EFD               	movlw	-3
 24716  0184F6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24717  0184FC  0EFE               	movlw	-2
 24718  0184FE  0060  F033  FFE3   	movff	btemp+11,plusw1
 24719                           
 24720                           ;stkvar	_val @ sp[(-5)+-5]
 24721  018504  0EF6               	movlw	-10
 24722  018506  50E3               	movf	plusw1,w,c
 24723  018508  E113               	bnz	l9632
 24724  01850A  0EF7               	movlw	-9
 24725  01850C  50E3               	movf	plusw1,w,c
 24726  01850E  E110               	bnz	l9632
 24727  018510  0EF8               	movlw	-8
 24728  018512  50E3               	movf	plusw1,w,c
 24729  018514  E10D               	bnz	l9632
 24730  018516  0EF9               	movlw	-7
 24731  018518  50E3               	movf	plusw1,w,c
 24732  01851A  A4D8               	btfss	status,2,c
 24733  01851C  D009               	goto	l9632
 24734  01851E  0E00               	movlw	0
 24735  018520  6E01               	movwf	btemp^0,c
 24736  018522  0E00               	movlw	0
 24737  018524  6E02               	movwf	(btemp+1)^0,c
 24738  018526  0E00               	movlw	0
 24739  018528  6E03               	movwf	(btemp+2)^0,c
 24740  01852A  0E00               	movlw	0
 24741  01852C  6E04               	movwf	(btemp+3)^0,c
 24742  01852E  D0A2               	goto	l3053
 24743  018530                     l9632:
 24744  018530  0E96               	movlw	150
 24745  018532  6E0C               	movwf	(btemp+11)^0,c
 24746                           
 24747                           ;stkvar	_exp @ sp[(-5)+4]
 24748  018534  0EFF               	movlw	-1
 24749  018536  0060  F033  FFE3   	movff	btemp+11,plusw1
 24750  01853C  D00B               	goto	l9636
 24751  01853E                     l9634:
 24752                           
 24753                           ;stkvar	_exp @ sp[(-5)+4]
 24754  01853E  0EFF               	movlw	-1
 24755  018540  2AE3               	incf	plusw1,f,c
 24756                           
 24757                           ;stkvar	_arg @ sp[(-5)+0]
 24758  018542  90D8               	bcf	status,0,c
 24759  018544  0EFE               	movlw	-2
 24760  018546  32E3               	rrcf	plusw1,f,c
 24761  018548  0EFD               	movlw	-3
 24762  01854A  32E3               	rrcf	plusw1,f,c
 24763  01854C  0EFC               	movlw	-4
 24764  01854E  32E3               	rrcf	plusw1,f,c
 24765  018550  0EFB               	movlw	-5
 24766  018552  32E3               	rrcf	plusw1,f,c
 24767  018554                     l9636:
 24768                           
 24769                           ;stkvar	_arg @ sp[(-5)+0]
 24770  018554  50E1               	movf	fsr1l,w,c
 24771  018556  0FFB               	addlw	-5
 24772  018558  6ED9               	movwf	fsr2l,c
 24773  01855A  50E2               	movf	fsr1h,w,c
 24774  01855C  6EDA               	movwf	fsr2h,c
 24775  01855E  0EFF               	movlw	255
 24776  018560  22DA               	addwfc	fsr2h,f,c
 24777  018562  52DE               	movf	postinc2,f,c
 24778  018564  52DE               	movf	postinc2,f,c
 24779  018566  52DE               	movf	postinc2,f,c
 24780  018568  0EFE               	movlw	254
 24781  01856A  14DD               	andwf	postdec2,w,c
 24782  01856C  B4D8               	btfsc	status,2,c
 24783  01856E  D018               	goto	l9644
 24784  018570  D7E6               	goto	l9634
 24785  018572                     l9638:
 24786                           
 24787                           ;stkvar	_exp @ sp[(-5)+4]
 24788  018572  0EFF               	movlw	-1
 24789  018574  2AE3               	incf	plusw1,f,c
 24790                           
 24791                           ;stkvar	_arg @ sp[(-5)+0]
 24792  018576  50E1               	movf	fsr1l,w,c
 24793  018578  0FFB               	addlw	-5
 24794  01857A  6ED9               	movwf	fsr2l,c
 24795  01857C  50E2               	movf	fsr1h,w,c
 24796  01857E  6EDA               	movwf	fsr2h,c
 24797  018580  0EFF               	movlw	255
 24798  018582  22DA               	addwfc	fsr2h,f,c
 24799  018584  2ADE               	incf	postinc2,f,c
 24800  018586  0E00               	movlw	0
 24801  018588  22DE               	addwfc	postinc2,f,c
 24802  01858A  22DE               	addwfc	postinc2,f,c
 24803  01858C  22DE               	addwfc	postinc2,f,c
 24804                           
 24805                           ;stkvar	_arg @ sp[(-5)+0]
 24806  01858E  90D8               	bcf	status,0,c
 24807  018590  0EFE               	movlw	-2
 24808  018592  32E3               	rrcf	plusw1,f,c
 24809  018594  0EFD               	movlw	-3
 24810  018596  32E3               	rrcf	plusw1,f,c
 24811  018598  0EFC               	movlw	-4
 24812  01859A  32E3               	rrcf	plusw1,f,c
 24813  01859C  0EFB               	movlw	-5
 24814  01859E  32E3               	rrcf	plusw1,f,c
 24815  0185A0                     l9644:
 24816                           
 24817                           ;stkvar	_arg @ sp[(-5)+0]
 24818  0185A0  50E1               	movf	fsr1l,w,c
 24819  0185A2  0FFB               	addlw	-5
 24820  0185A4  6ED9               	movwf	fsr2l,c
 24821  0185A6  50E2               	movf	fsr1h,w,c
 24822  0185A8  6EDA               	movwf	fsr2h,c
 24823  0185AA  0EFF               	movlw	255
 24824  0185AC  22DA               	addwfc	fsr2h,f,c
 24825  0185AE  52DE               	movf	postinc2,f,c
 24826  0185B0  52DE               	movf	postinc2,f,c
 24827  0185B2  52DE               	movf	postinc2,f,c
 24828  0185B4  0EFF               	movlw	255
 24829  0185B6  14DD               	andwf	postdec2,w,c
 24830  0185B8  B4D8               	btfsc	status,2,c
 24831  0185BA  D00C               	goto	l9648
 24832  0185BC  D7DA               	goto	l9638
 24833  0185BE                     l9646:
 24834                           
 24835                           ;stkvar	_exp @ sp[(-5)+4]
 24836  0185BE  0EFF               	movlw	-1
 24837  0185C0  06E3               	decf	plusw1,f,c
 24838                           
 24839                           ;stkvar	_arg @ sp[(-5)+0]
 24840  0185C2  90D8               	bcf	status,0,c
 24841  0185C4  0EFB               	movlw	-5
 24842  0185C6  36E3               	rlcf	plusw1,f,c
 24843  0185C8  0EFC               	movlw	-4
 24844  0185CA  36E3               	rlcf	plusw1,f,c
 24845  0185CC  0EFD               	movlw	-3
 24846  0185CE  36E3               	rlcf	plusw1,f,c
 24847  0185D0  0EFE               	movlw	-2
 24848  0185D2  36E3               	rlcf	plusw1,f,c
 24849  0185D4                     l9648:
 24850                           
 24851                           ;stkvar	_arg @ sp[(-5)+0]
 24852  0185D4  0EFD               	movlw	-3
 24853  0185D6  BEE3               	btfsc	plusw1,7,c
 24854  0185D8  D007               	goto	u9030
 24855                           
 24856                           ;stkvar	_exp @ sp[(-5)+4]
 24857  0185DA  0EFF               	movlw	-1
 24858  0185DC  006F FF8C  F001    	movff	plusw1,btemp
 24859  0185E2  0E02               	movlw	2
 24860  0185E4  6001               	cpfslt	btemp^0,c
 24861  0185E6  D7EB               	goto	l9646
 24862  0185E8                     u9030:
 24863                           
 24864                           ;stkvar	_exp @ sp[(-5)+4]
 24865  0185E8  0EFF               	movlw	-1
 24866  0185EA  B0E3               	btfsc	plusw1,0,c
 24867  0185EC  D002               	goto	l9656
 24868                           
 24869                           ;stkvar	_arg @ sp[(-5)+0]
 24870  0185EE  0EFD               	movlw	-3
 24871  0185F0  9EE3               	bcf	plusw1,7,c
 24872  0185F2                     l9656:
 24873                           
 24874                           ;stkvar	_exp @ sp[(-5)+4]
 24875  0185F2  50E1               	movf	fsr1l,w,c
 24876  0185F4  0FFF               	addlw	-1
 24877  0185F6  6ED9               	movwf	fsr2l,c
 24878  0185F8  50E2               	movf	fsr1h,w,c
 24879  0185FA  6EDA               	movwf	fsr2h,c
 24880  0185FC  0EFF               	movlw	255
 24881  0185FE  22DA               	addwfc	fsr2h,f,c
 24882  018600  90D8               	bcf	status,0,c
 24883  018602  32DF               	rrcf	indf2,f,c
 24884                           
 24885                           ;stkvar	_exp @ sp[(-5)+4]
 24886  018604  0EFF               	movlw	-1
 24887  018606  006F FF8C  F00C    	movff	plusw1,btemp+11
 24888  01860C  0060  F030  F005   	movff	btemp+11,btemp+4
 24889  018612  6A06               	clrf	(btemp+5)^0,c
 24890  018614  6A07               	clrf	(btemp+6)^0,c
 24891  018616  6A08               	clrf	(btemp+7)^0,c
 24892  018618  0060  F014  F008   	movff	btemp+4,btemp+7
 24893  01861E  6A07               	clrf	(btemp+6)^0,c
 24894  018620  6A06               	clrf	(btemp+5)^0,c
 24895  018622  6A05               	clrf	(btemp+4)^0,c
 24896                           
 24897                           ;stkvar	_arg @ sp[(-5)+0]
 24898  018624  50E1               	movf	fsr1l,w,c
 24899  018626  0FFB               	addlw	-5
 24900  018628  6ED9               	movwf	fsr2l,c
 24901  01862A  50E2               	movf	fsr1h,w,c
 24902  01862C  6EDA               	movwf	fsr2h,c
 24903  01862E  0EFF               	movlw	255
 24904  018630  22DA               	addwfc	fsr2h,f,c
 24905  018632  5005               	movf	(btemp+4)^0,w,c
 24906  018634  12DE               	iorwf	postinc2,f,c
 24907  018636  5006               	movf	(btemp+5)^0,w,c
 24908  018638  12DE               	iorwf	postinc2,f,c
 24909  01863A  5007               	movf	(btemp+6)^0,w,c
 24910  01863C  12DE               	iorwf	postinc2,f,c
 24911  01863E  5008               	movf	(btemp+7)^0,w,c
 24912  018640  12DE               	iorwf	postinc2,f,c
 24913                           
 24914                           ;stkvar	_sign @ sp[(-5)+-1]
 24915  018642  0EFA               	movlw	-6
 24916  018644  50E3               	movf	plusw1,w,c
 24917  018646  B4D8               	btfsc	status,2,c
 24918  018648  D005               	goto	l9666
 24919                           
 24920                           ;stkvar	_val @ sp[(-5)+-5]
 24921  01864A  0EF9               	movlw	-7
 24922  01864C  AEE3               	btfss	plusw1,7,c
 24923  01864E  D002               	goto	l9666
 24924                           
 24925                           ;stkvar	_arg @ sp[(-5)+0]
 24926  018650  0EFE               	movlw	-2
 24927  018652  8EE3               	bsf	plusw1,7,c
 24928  018654                     l9666:
 24929                           
 24930                           ;stkvar	_arg @ sp[(-5)+0]
 24931  018654  0EFB               	movlw	-5
 24932  018656  006F FF8C  F001    	movff	plusw1,btemp
 24933  01865C  0EFC               	movlw	-4
 24934  01865E  006F FF8C  F002    	movff	plusw1,btemp+1
 24935  018664  0EFD               	movlw	-3
 24936  018666  006F FF8C  F003    	movff	plusw1,btemp+2
 24937  01866C  0EFE               	movlw	-2
 24938  01866E  006F FF8C  F004    	movff	plusw1,btemp+3
 24939  018674                     l3053:
 24940                           
 24941                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24942  018674  0EF6               	movlw	246
 24943  018676  26E1               	addwf	fsr1l,f,c
 24944  018678  0EFF               	movlw	255
 24945  01867A  22E2               	addwfc	fsr1h,f,c
 24946  01867C  0012               	return		;funcret
 24947  01867E                     __end_of___xxtofl:
 24948                           	opt callstack 0
 24949                           
 24950 ;; *************** function ___fldiv *****************
 24951 ;; Defined at:
 24952 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24953 ;; Parameters:    Size  Location     Type
 24954 ;;  b               4  [STACK] unsigned char 
 24955 ;;  a               4  [STACK] unsigned char 
 24956 ;; Auto vars:     Size  Location     Type
 24957 ;;  grs             4  [STACK] unsigned long 
 24958 ;;  rem             4  [STACK] unsigned long 
 24959 ;;  new_exp         2  [STACK] short 
 24960 ;;  aexp            1  [STACK] unsigned char 
 24961 ;;  bexp            1  [STACK] unsigned char 
 24962 ;;  sign            1  [STACK] unsigned char 
 24963 ;; Return value:  Size  Location     Type
 24964 ;;                  4  [STACK] unsigned char 
 24965 ;; Registers used:
 24966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24967 ;; Tracked objects:
 24968 ;;		On entry : 0/1
 24969 ;;		On exit  : 0/0
 24970 ;;		Unchanged: 0/0
 24971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24976 ;;Total ram usage:        0 bytes
 24977 ;; Hardware stack levels used:    1
 24978 ;; Hardware stack levels required when called:   15
 24979 ;; This function calls:
 24980 ;;		Nothing
 24981 ;; This function is called by:
 24982 ;;		_conv_raw_result
 24983 ;;		_calc_bsoc
 24984 ;;		_init_bsoc
 24985 ;;		_esr_check
 24986 ;;		_efgtoa
 24987 ;; This function uses a reentrant model
 24988 ;;
 24989                           
 24990                           	psect	text100
 24991  014D68                     __ptext100:
 24992                           	opt callstack 0
 24993  014D68                     ___fldiv:
 24994                           	opt callstack 0
 24995                           
 24996                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24997  014D68  0E0D               	movlw	13
 24998  014D6A  26E1               	addwf	fsr1l,f,c
 24999  014D6C  0E00               	movlw	0
 25000  014D6E  22E2               	addwfc	fsr1h,f,c
 25001                           
 25002                           ;stkvar	_b @ sp[(-13)+-4]
 25003                           
 25004                           ;incstack = 0
 25005 ;; hardware stack exceeded
 25006  014D70  0EF2               	movlw	242
 25007  014D72  24E1               	addwf	fsr1l,w,c
 25008  014D74  6ED9               	movwf	fsr2l,c
 25009  014D76  0EFF               	movlw	255
 25010  014D78  20E2               	addwfc	fsr1h,w,c
 25011  014D7A  6EDA               	movwf	fsr2h,c
 25012  014D7C  50DF               	movf	indf2,w,c
 25013  014D7E  6E0C               	movwf	(btemp+11)^0,c
 25014  014D80  0E80               	movlw	128
 25015  014D82  160C               	andwf	(btemp+11)^0,f,c
 25016                           
 25017                           ;stkvar	_sign @ sp[(-13)+12]
 25018  014D84  0EFF               	movlw	-1
 25019  014D86  0060  F033  FFE3   	movff	btemp+11,plusw1
 25020                           
 25021                           ;stkvar	_b @ sp[(-13)+-4]
 25022  014D8C  0EF2               	movlw	242
 25023  014D8E  24E1               	addwf	fsr1l,w,c
 25024  014D90  6ED9               	movwf	fsr2l,c
 25025  014D92  0EFF               	movlw	255
 25026  014D94  20E2               	addwfc	fsr1h,w,c
 25027  014D96  6EDA               	movwf	fsr2h,c
 25028  014D98  50DF               	movf	indf2,w,c
 25029  014D9A  6E0C               	movwf	(btemp+11)^0,c
 25030  014D9C  90D8               	bcf	status,0,c
 25031  014D9E  340C               	rlcf	(btemp+11)^0,w,c
 25032  014DA0  6E0B               	movwf	(btemp+10)^0,c
 25033                           
 25034                           ;stkvar	_bexp @ sp[(-13)+11]
 25035  014DA2  0EFE               	movlw	-2
 25036  014DA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25037                           
 25038                           ;stkvar	_b @ sp[(-13)+-4]
 25039  014DAA  0EF1               	movlw	241
 25040  014DAC  24E1               	addwf	fsr1l,w,c
 25041  014DAE  6ED9               	movwf	fsr2l,c
 25042  014DB0  0EFF               	movlw	255
 25043  014DB2  20E2               	addwfc	fsr1h,w,c
 25044  014DB4  6EDA               	movwf	fsr2h,c
 25045  014DB6  AEDF               	btfss	indf2,7,c
 25046  014DB8  D002               	goto	l8196
 25047                           
 25048                           ;stkvar	_bexp @ sp[(-13)+11]
 25049  014DBA  0EFE               	movlw	-2
 25050  014DBC  80E3               	bsf	plusw1,0,c
 25051  014DBE                     l8196:
 25052                           
 25053                           ;stkvar	_bexp @ sp[(-13)+11]
 25054  014DBE  0EFE               	movlw	-2
 25055  014DC0  50E3               	movf	plusw1,w,c
 25056  014DC2  B4D8               	btfsc	status,2,c
 25057  014DC4  D027               	goto	l8206
 25058                           
 25059                           ;stkvar	_bexp @ sp[(-13)+11]
 25060  014DC6  0EFE               	movlw	-2
 25061  014DC8  28E3               	incf	plusw1,w,c
 25062  014DCA  A4D8               	btfss	status,2,c
 25063  014DCC  D018               	goto	l8202
 25064  014DCE  0E00               	movlw	0
 25065  014DD0  6E09               	movwf	(btemp+8)^0,c
 25066  014DD2  0E00               	movlw	0
 25067  014DD4  6E0A               	movwf	(btemp+9)^0,c
 25068  014DD6  0E00               	movlw	0
 25069  014DD8  6E0B               	movwf	(btemp+10)^0,c
 25070  014DDA  0E00               	movlw	0
 25071  014DDC  6E0C               	movwf	(btemp+11)^0,c
 25072                           
 25073                           ;stkvar	_b @ sp[(-13)+-4]
 25074  014DDE  0EEF               	movlw	-17
 25075  014DE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 25076  014DE6  0EF0               	movlw	-16
 25077  014DE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25078  014DEE  0EF1               	movlw	-15
 25079  014DF0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25080  014DF6  0EF2               	movlw	-14
 25081  014DF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25082  014DFE                     l8202:
 25083                           
 25084                           ;stkvar	_b @ sp[(-13)+-4]
 25085  014DFE  0EF1               	movlw	-15
 25086  014E00  8EE3               	bsf	plusw1,7,c
 25087                           
 25088                           ;stkvar	_b @ sp[(-13)+-4]
 25089  014E02  0EF2               	movlw	242
 25090  014E04  24E1               	addwf	fsr1l,w,c
 25091  014E06  6ED9               	movwf	fsr2l,c
 25092  014E08  0EFF               	movlw	255
 25093  014E0A  20E2               	addwfc	fsr1h,w,c
 25094  014E0C  6EDA               	movwf	fsr2h,c
 25095  014E0E  0E00               	movlw	0
 25096  014E10  6EDF               	movwf	indf2,c
 25097  014E12  D018               	goto	l8208
 25098  014E14                     l8206:
 25099  014E14  0E00               	movlw	0
 25100  014E16  6E09               	movwf	(btemp+8)^0,c
 25101  014E18  0E00               	movlw	0
 25102  014E1A  6E0A               	movwf	(btemp+9)^0,c
 25103  014E1C  0E00               	movlw	0
 25104  014E1E  6E0B               	movwf	(btemp+10)^0,c
 25105  014E20  0E00               	movlw	0
 25106  014E22  6E0C               	movwf	(btemp+11)^0,c
 25107                           
 25108                           ;stkvar	_b @ sp[(-13)+-4]
 25109  014E24  0EEF               	movlw	-17
 25110  014E26  0060  F027  FFE3   	movff	btemp+8,plusw1
 25111  014E2C  0EF0               	movlw	-16
 25112  014E2E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25113  014E34  0EF1               	movlw	-15
 25114  014E36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25115  014E3C  0EF2               	movlw	-14
 25116  014E3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25117  014E44                     l8208:
 25118                           
 25119                           ;stkvar	_a @ sp[(-13)+-8]
 25120  014E44  0EEE               	movlw	238
 25121  014E46  24E1               	addwf	fsr1l,w,c
 25122  014E48  6ED9               	movwf	fsr2l,c
 25123  014E4A  0EFF               	movlw	255
 25124  014E4C  20E2               	addwfc	fsr1h,w,c
 25125  014E4E  6EDA               	movwf	fsr2h,c
 25126  014E50  50DF               	movf	indf2,w,c
 25127  014E52  6E0C               	movwf	(btemp+11)^0,c
 25128  014E54  0E80               	movlw	128
 25129  014E56  160C               	andwf	(btemp+11)^0,f,c
 25130                           
 25131                           ;stkvar	_sign @ sp[(-13)+12]
 25132  014E58  50E1               	movf	fsr1l,w,c
 25133  014E5A  0FFF               	addlw	-1
 25134  014E5C  6ED9               	movwf	fsr2l,c
 25135  014E5E  50E2               	movf	fsr1h,w,c
 25136  014E60  6EDA               	movwf	fsr2h,c
 25137  014E62  0EFF               	movlw	255
 25138  014E64  22DA               	addwfc	fsr2h,f,c
 25139  014E66  500C               	movf	(btemp+11)^0,w,c
 25140  014E68  1ADF               	xorwf	indf2,f,c
 25141                           
 25142                           ;stkvar	_a @ sp[(-13)+-8]
 25143  014E6A  0EEE               	movlw	238
 25144  014E6C  24E1               	addwf	fsr1l,w,c
 25145  014E6E  6ED9               	movwf	fsr2l,c
 25146  014E70  0EFF               	movlw	255
 25147  014E72  20E2               	addwfc	fsr1h,w,c
 25148  014E74  6EDA               	movwf	fsr2h,c
 25149  014E76  50DF               	movf	indf2,w,c
 25150  014E78  6E0C               	movwf	(btemp+11)^0,c
 25151  014E7A  90D8               	bcf	status,0,c
 25152  014E7C  340C               	rlcf	(btemp+11)^0,w,c
 25153  014E7E  6E0B               	movwf	(btemp+10)^0,c
 25154                           
 25155                           ;stkvar	_aexp @ sp[(-13)+10]
 25156  014E80  0EFD               	movlw	-3
 25157  014E82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25158                           
 25159                           ;stkvar	_a @ sp[(-13)+-8]
 25160  014E88  0EED               	movlw	237
 25161  014E8A  24E1               	addwf	fsr1l,w,c
 25162  014E8C  6ED9               	movwf	fsr2l,c
 25163  014E8E  0EFF               	movlw	255
 25164  014E90  20E2               	addwfc	fsr1h,w,c
 25165  014E92  6EDA               	movwf	fsr2h,c
 25166  014E94  AEDF               	btfss	indf2,7,c
 25167  014E96  D002               	goto	l8216
 25168                           
 25169                           ;stkvar	_aexp @ sp[(-13)+10]
 25170  014E98  0EFD               	movlw	-3
 25171  014E9A  80E3               	bsf	plusw1,0,c
 25172  014E9C                     l8216:
 25173                           
 25174                           ;stkvar	_aexp @ sp[(-13)+10]
 25175  014E9C  0EFD               	movlw	-3
 25176  014E9E  50E3               	movf	plusw1,w,c
 25177  014EA0  B4D8               	btfsc	status,2,c
 25178  014EA2  D027               	goto	l8226
 25179                           
 25180                           ;stkvar	_aexp @ sp[(-13)+10]
 25181  014EA4  0EFD               	movlw	-3
 25182  014EA6  28E3               	incf	plusw1,w,c
 25183  014EA8  A4D8               	btfss	status,2,c
 25184  014EAA  D018               	goto	l8222
 25185  014EAC  0E00               	movlw	0
 25186  014EAE  6E09               	movwf	(btemp+8)^0,c
 25187  014EB0  0E00               	movlw	0
 25188  014EB2  6E0A               	movwf	(btemp+9)^0,c
 25189  014EB4  0E00               	movlw	0
 25190  014EB6  6E0B               	movwf	(btemp+10)^0,c
 25191  014EB8  0E00               	movlw	0
 25192  014EBA  6E0C               	movwf	(btemp+11)^0,c
 25193                           
 25194                           ;stkvar	_a @ sp[(-13)+-8]
 25195  014EBC  0EEB               	movlw	-21
 25196  014EBE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25197  014EC4  0EEC               	movlw	-20
 25198  014EC6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25199  014ECC  0EED               	movlw	-19
 25200  014ECE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25201  014ED4  0EEE               	movlw	-18
 25202  014ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 25203  014EDC                     l8222:
 25204                           
 25205                           ;stkvar	_a @ sp[(-13)+-8]
 25206  014EDC  0EED               	movlw	-19
 25207  014EDE  8EE3               	bsf	plusw1,7,c
 25208                           
 25209                           ;stkvar	_a @ sp[(-13)+-8]
 25210  014EE0  0EEE               	movlw	238
 25211  014EE2  24E1               	addwf	fsr1l,w,c
 25212  014EE4  6ED9               	movwf	fsr2l,c
 25213  014EE6  0EFF               	movlw	255
 25214  014EE8  20E2               	addwfc	fsr1h,w,c
 25215  014EEA  6EDA               	movwf	fsr2h,c
 25216  014EEC  0E00               	movlw	0
 25217  014EEE  6EDF               	movwf	indf2,c
 25218  014EF0  D018               	goto	l8228
 25219  014EF2                     l8226:
 25220  014EF2  0E00               	movlw	0
 25221  014EF4  6E09               	movwf	(btemp+8)^0,c
 25222  014EF6  0E00               	movlw	0
 25223  014EF8  6E0A               	movwf	(btemp+9)^0,c
 25224  014EFA  0E00               	movlw	0
 25225  014EFC  6E0B               	movwf	(btemp+10)^0,c
 25226  014EFE  0E00               	movlw	0
 25227  014F00  6E0C               	movwf	(btemp+11)^0,c
 25228                           
 25229                           ;stkvar	_a @ sp[(-13)+-8]
 25230  014F02  0EEB               	movlw	-21
 25231  014F04  0060  F027  FFE3   	movff	btemp+8,plusw1
 25232  014F0A  0EEC               	movlw	-20
 25233  014F0C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25234  014F12  0EED               	movlw	-19
 25235  014F14  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25236  014F1A  0EEE               	movlw	-18
 25237  014F1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25238  014F22                     l8228:
 25239                           
 25240                           ;stkvar	_a @ sp[(-13)+-8]
 25241  014F22  0EEB               	movlw	-21
 25242  014F24  50E3               	movf	plusw1,w,c
 25243  014F26  E139               	bnz	l8240
 25244  014F28  0EEC               	movlw	-20
 25245  014F2A  50E3               	movf	plusw1,w,c
 25246  014F2C  E136               	bnz	l8240
 25247  014F2E  0EED               	movlw	-19
 25248  014F30  50E3               	movf	plusw1,w,c
 25249  014F32  E133               	bnz	l8240
 25250  014F34  0EEE               	movlw	-18
 25251  014F36  50E3               	movf	plusw1,w,c
 25252  014F38  A4D8               	btfss	status,2,c
 25253  014F3A  D02F               	goto	l8240
 25254                           
 25255                           ;stkvar	_b @ sp[(-13)+-4]
 25256  014F3C  0EEF               	movlw	-17
 25257  014F3E  6AE3               	clrf	plusw1,c
 25258  014F40  0EF0               	movlw	-16
 25259  014F42  6AE3               	clrf	plusw1,c
 25260  014F44  0EF1               	movlw	-15
 25261  014F46  6AE3               	clrf	plusw1,c
 25262  014F48  0EF2               	movlw	-14
 25263  014F4A  6AE3               	clrf	plusw1,c
 25264                           
 25265                           ;stkvar	_b @ sp[(-13)+-4]
 25266  014F4C  0EF1               	movlw	241
 25267  014F4E  24E1               	addwf	fsr1l,w,c
 25268  014F50  6ED9               	movwf	fsr2l,c
 25269  014F52  0EFF               	movlw	255
 25270  014F54  20E2               	addwfc	fsr1h,w,c
 25271  014F56  6EDA               	movwf	fsr2h,c
 25272  014F58  0E80               	movlw	128
 25273  014F5A  12DE               	iorwf	postinc2,f,c
 25274  014F5C  0E7F               	movlw	127
 25275  014F5E  12DD               	iorwf	postdec2,f,c
 25276  014F60                     l8234:
 25277                           
 25278                           ;stkvar	_sign @ sp[(-13)+12]
 25279  014F60  0EFF               	movlw	-1
 25280  014F62  006F FF8C  F00C    	movff	plusw1,btemp+11
 25281                           
 25282                           ;stkvar	_b @ sp[(-13)+-4]
 25283  014F68  0EF2               	movlw	242
 25284  014F6A  24E1               	addwf	fsr1l,w,c
 25285  014F6C  6ED9               	movwf	fsr2l,c
 25286  014F6E  0EFF               	movlw	255
 25287  014F70  20E2               	addwfc	fsr1h,w,c
 25288  014F72  6EDA               	movwf	fsr2h,c
 25289  014F74  500C               	movf	(btemp+11)^0,w,c
 25290  014F76  12DF               	iorwf	indf2,f,c
 25291                           
 25292                           ;stkvar	_b @ sp[(-13)+-4]
 25293  014F78  0EEF               	movlw	-17
 25294  014F7A  006F FF8C  F001    	movff	plusw1,btemp
 25295  014F80  0EF0               	movlw	-16
 25296  014F82  006F FF8C  F002    	movff	plusw1,btemp+1
 25297  014F88  0EF1               	movlw	-15
 25298  014F8A  006F FF8C  F003    	movff	plusw1,btemp+2
 25299  014F90  0EF2               	movlw	-14
 25300  014F92  006F FF8C  F004    	movff	plusw1,btemp+3
 25301  014F98  D19F               	goto	l2977
 25302  014F9A                     l8240:
 25303                           
 25304                           ;stkvar	_bexp @ sp[(-13)+11]
 25305  014F9A  0EFE               	movlw	-2
 25306  014F9C  50E3               	movf	plusw1,w,c
 25307  014F9E  A4D8               	btfss	status,2,c
 25308  014FA0  D009               	goto	l8248
 25309  014FA2  0E00               	movlw	0
 25310  014FA4  6E01               	movwf	btemp^0,c
 25311  014FA6  0E00               	movlw	0
 25312  014FA8  6E02               	movwf	(btemp+1)^0,c
 25313  014FAA  0E00               	movlw	0
 25314  014FAC  6E03               	movwf	(btemp+2)^0,c
 25315  014FAE  0E00               	movlw	0
 25316  014FB0  6E04               	movwf	(btemp+3)^0,c
 25317  014FB2  D192               	goto	l2977
 25318  014FB4                     l8248:
 25319                           
 25320                           ;stkvar	_bexp @ sp[(-13)+11]
 25321  014FB4  0EFE               	movlw	-2
 25322  014FB6  50E3               	movf	plusw1,w,c
 25323  014FB8  6E0B               	movwf	(btemp+10)^0,c
 25324  014FBA  6A0C               	clrf	(btemp+11)^0,c
 25325                           
 25326                           ;stkvar	_aexp @ sp[(-13)+10]
 25327  014FBC  0EFD               	movlw	-3
 25328  014FBE  50E3               	movf	plusw1,w,c
 25329  014FC0  5E0B               	subwf	(btemp+10)^0,f,c
 25330  014FC2  0E00               	movlw	0
 25331  014FC4  5A0C               	subwfb	(btemp+11)^0,f,c
 25332  014FC6  0E7F               	movlw	127
 25333  014FC8  260B               	addwf	(btemp+10)^0,f,c
 25334  014FCA  0E00               	movlw	0
 25335  014FCC  220C               	addwfc	(btemp+11)^0,f,c
 25336                           
 25337                           ;stkvar	_new_exp @ sp[(-13)+8]
 25338  014FCE  0EFB               	movlw	-5
 25339  014FD0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25340  014FD6  0EFC               	movlw	-4
 25341  014FD8  0060  F033  FFE3   	movff	btemp+11,plusw1
 25342                           
 25343                           ;stkvar	_b @ sp[(-13)+-4]
 25344  014FDE  0EEF               	movlw	-17
 25345  014FE0  006F FF8C  F009    	movff	plusw1,btemp+8
 25346  014FE6  0EF0               	movlw	-16
 25347  014FE8  006F FF8C  F00A    	movff	plusw1,btemp+9
 25348  014FEE  0EF1               	movlw	-15
 25349  014FF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 25350  014FF6  0EF2               	movlw	-14
 25351  014FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 25352                           
 25353                           ;stkvar	_rem @ sp[(-13)+4]
 25354  014FFE  0EF7               	movlw	-9
 25355  015000  0060  F027  FFE3   	movff	btemp+8,plusw1
 25356  015006  0EF8               	movlw	-8
 25357  015008  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25358  01500E  0EF9               	movlw	-7
 25359  015010  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25360  015016  0EFA               	movlw	-6
 25361  015018  0060  F033  FFE3   	movff	btemp+11,plusw1
 25362                           
 25363                           ;stkvar	_b @ sp[(-13)+-4]
 25364  01501E  0EEF               	movlw	-17
 25365  015020  6AE3               	clrf	plusw1,c
 25366  015022  0EF0               	movlw	-16
 25367  015024  6AE3               	clrf	plusw1,c
 25368  015026  0EF1               	movlw	-15
 25369  015028  6AE3               	clrf	plusw1,c
 25370  01502A  0EF2               	movlw	-14
 25371  01502C  6AE3               	clrf	plusw1,c
 25372                           
 25373                           ;stkvar	_grs @ sp[(-13)+0]
 25374  01502E  0EF3               	movlw	-13
 25375  015030  6AE3               	clrf	plusw1,c
 25376  015032  0EF4               	movlw	-12
 25377  015034  6AE3               	clrf	plusw1,c
 25378  015036  0EF5               	movlw	-11
 25379  015038  6AE3               	clrf	plusw1,c
 25380  01503A  0EF6               	movlw	-10
 25381  01503C  6AE3               	clrf	plusw1,c
 25382                           
 25383                           ;stkvar	_aexp @ sp[(-13)+10]
 25384  01503E  0EFD               	movlw	-3
 25385  015040  6AE3               	clrf	plusw1,c
 25386  015042  D050               	goto	l8276
 25387  015044                     l8258:
 25388                           
 25389                           ;stkvar	_aexp @ sp[(-13)+10]
 25390  015044  0EFD               	movlw	-3
 25391  015046  50E3               	movf	plusw1,w,c
 25392  015048  B4D8               	btfsc	status,2,c
 25393  01504A  D020               	goto	l8268
 25394                           
 25395                           ;stkvar	_rem @ sp[(-13)+4]
 25396  01504C  90D8               	bcf	status,0,c
 25397  01504E  0EF7               	movlw	-9
 25398  015050  36E3               	rlcf	plusw1,f,c
 25399  015052  0EF8               	movlw	-8
 25400  015054  36E3               	rlcf	plusw1,f,c
 25401  015056  0EF9               	movlw	-7
 25402  015058  36E3               	rlcf	plusw1,f,c
 25403  01505A  0EFA               	movlw	-6
 25404  01505C  36E3               	rlcf	plusw1,f,c
 25405                           
 25406                           ;stkvar	_b @ sp[(-13)+-4]
 25407  01505E  90D8               	bcf	status,0,c
 25408  015060  0EEF               	movlw	-17
 25409  015062  36E3               	rlcf	plusw1,f,c
 25410  015064  0EF0               	movlw	-16
 25411  015066  36E3               	rlcf	plusw1,f,c
 25412  015068  0EF1               	movlw	-15
 25413  01506A  36E3               	rlcf	plusw1,f,c
 25414  01506C  0EF2               	movlw	-14
 25415  01506E  36E3               	rlcf	plusw1,f,c
 25416                           
 25417                           ;stkvar	_grs @ sp[(-13)+0]
 25418  015070  0EF6               	movlw	-10
 25419  015072  AEE3               	btfss	plusw1,7,c
 25420  015074  D002               	goto	l8266
 25421                           
 25422                           ;stkvar	_b @ sp[(-13)+-4]
 25423  015076  0EEF               	movlw	-17
 25424  015078  80E3               	bsf	plusw1,0,c
 25425  01507A                     l8266:
 25426                           
 25427                           ;stkvar	_grs @ sp[(-13)+0]
 25428  01507A  90D8               	bcf	status,0,c
 25429  01507C  0EF3               	movlw	-13
 25430  01507E  36E3               	rlcf	plusw1,f,c
 25431  015080  0EF4               	movlw	-12
 25432  015082  36E3               	rlcf	plusw1,f,c
 25433  015084  0EF5               	movlw	-11
 25434  015086  36E3               	rlcf	plusw1,f,c
 25435  015088  0EF6               	movlw	-10
 25436  01508A  36E3               	rlcf	plusw1,f,c
 25437  01508C                     l8268:
 25438                           
 25439                           ;stkvar	_a @ sp[(-13)+-8]
 25440                           ;stkvar	_rem @ sp[(-13)+4]
 25441  01508C  50E1               	movf	fsr1l,w,c
 25442  01508E  0FF7               	addlw	-9
 25443  015090  6ED9               	movwf	fsr2l,c
 25444  015092  50E2               	movf	fsr1h,w,c
 25445  015094  6EDA               	movwf	fsr2h,c
 25446  015096  0EFF               	movlw	255
 25447  015098  22DA               	addwfc	fsr2h,f,c
 25448  01509A  0EEB               	movlw	-21
 25449  01509C  50E3               	movf	plusw1,w,c
 25450  01509E  5CDE               	subwf	postinc2,w,c
 25451  0150A0  0EEC               	movlw	-20
 25452  0150A2  50E3               	movf	plusw1,w,c
 25453  0150A4  58DE               	subwfb	postinc2,w,c
 25454  0150A6  0EED               	movlw	-19
 25455  0150A8  50E3               	movf	plusw1,w,c
 25456  0150AA  58DE               	subwfb	postinc2,w,c
 25457  0150AC  0EEE               	movlw	-18
 25458  0150AE  50E3               	movf	plusw1,w,c
 25459  0150B0  58DE               	subwfb	postinc2,w,c
 25460  0150B2  A0D8               	btfss	status,0,c
 25461  0150B4  D015               	goto	l8274
 25462                           
 25463                           ;stkvar	_grs @ sp[(-13)+0]
 25464  0150B6  0EF6               	movlw	-10
 25465  0150B8  8CE3               	bsf	plusw1,6,c
 25466                           
 25467                           ;stkvar	_a @ sp[(-13)+-8]
 25468                           ;stkvar	_rem @ sp[(-13)+4]
 25469  0150BA  50E1               	movf	fsr1l,w,c
 25470  0150BC  0FF7               	addlw	-9
 25471  0150BE  6ED9               	movwf	fsr2l,c
 25472  0150C0  50E2               	movf	fsr1h,w,c
 25473  0150C2  6EDA               	movwf	fsr2h,c
 25474  0150C4  0EFF               	movlw	255
 25475  0150C6  22DA               	addwfc	fsr2h,f,c
 25476  0150C8  0EEB               	movlw	-21
 25477  0150CA  50E3               	movf	plusw1,w,c
 25478  0150CC  5EDE               	subwf	postinc2,f,c
 25479  0150CE  0EEC               	movlw	-20
 25480  0150D0  50E3               	movf	plusw1,w,c
 25481  0150D2  5ADE               	subwfb	postinc2,f,c
 25482  0150D4  0EED               	movlw	-19
 25483  0150D6  50E3               	movf	plusw1,w,c
 25484  0150D8  5ADE               	subwfb	postinc2,f,c
 25485  0150DA  0EEE               	movlw	-18
 25486  0150DC  50E3               	movf	plusw1,w,c
 25487  0150DE  5ADE               	subwfb	postinc2,f,c
 25488  0150E0                     l8274:
 25489                           
 25490                           ;stkvar	_aexp @ sp[(-13)+10]
 25491  0150E0  0EFD               	movlw	-3
 25492  0150E2  2AE3               	incf	plusw1,f,c
 25493  0150E4                     l8276:
 25494                           
 25495                           ;stkvar	_aexp @ sp[(-13)+10]
 25496  0150E4  0EFD               	movlw	-3
 25497  0150E6  006F FF8C  F001    	movff	plusw1,btemp
 25498  0150EC  0E19               	movlw	25
 25499  0150EE  6401               	cpfsgt	btemp^0,c
 25500  0150F0  D7A9               	goto	l8258
 25501                           
 25502                           ;stkvar	_rem @ sp[(-13)+4]
 25503  0150F2  0EF7               	movlw	-9
 25504  0150F4  50E3               	movf	plusw1,w,c
 25505  0150F6  E10A               	bnz	u6630
 25506  0150F8  0EF8               	movlw	-8
 25507  0150FA  50E3               	movf	plusw1,w,c
 25508  0150FC  E107               	bnz	u6630
 25509  0150FE  0EF9               	movlw	-7
 25510  015100  50E3               	movf	plusw1,w,c
 25511  015102  E104               	bnz	u6630
 25512  015104  0EFA               	movlw	-6
 25513  015106  50E3               	movf	plusw1,w,c
 25514  015108  B4D8               	btfsc	status,2,c
 25515  01510A  D024               	goto	l8292
 25516  01510C                     u6630:
 25517                           
 25518                           ;stkvar	_grs @ sp[(-13)+0]
 25519  01510C  0EF3               	movlw	-13
 25520  01510E  80E3               	bsf	plusw1,0,c
 25521  015110  D021               	goto	l8292
 25522  015112                     l8282:
 25523                           
 25524                           ;stkvar	_b @ sp[(-13)+-4]
 25525  015112  90D8               	bcf	status,0,c
 25526  015114  0EEF               	movlw	-17
 25527  015116  36E3               	rlcf	plusw1,f,c
 25528  015118  0EF0               	movlw	-16
 25529  01511A  36E3               	rlcf	plusw1,f,c
 25530  01511C  0EF1               	movlw	-15
 25531  01511E  36E3               	rlcf	plusw1,f,c
 25532  015120  0EF2               	movlw	-14
 25533  015122  36E3               	rlcf	plusw1,f,c
 25534                           
 25535                           ;stkvar	_grs @ sp[(-13)+0]
 25536  015124  0EF6               	movlw	-10
 25537  015126  AEE3               	btfss	plusw1,7,c
 25538  015128  D002               	goto	l8288
 25539                           
 25540                           ;stkvar	_b @ sp[(-13)+-4]
 25541  01512A  0EEF               	movlw	-17
 25542  01512C  80E3               	bsf	plusw1,0,c
 25543  01512E                     l8288:
 25544                           
 25545                           ;stkvar	_grs @ sp[(-13)+0]
 25546  01512E  90D8               	bcf	status,0,c
 25547  015130  0EF3               	movlw	-13
 25548  015132  36E3               	rlcf	plusw1,f,c
 25549  015134  0EF4               	movlw	-12
 25550  015136  36E3               	rlcf	plusw1,f,c
 25551  015138  0EF5               	movlw	-11
 25552  01513A  36E3               	rlcf	plusw1,f,c
 25553  01513C  0EF6               	movlw	-10
 25554  01513E  36E3               	rlcf	plusw1,f,c
 25555                           
 25556                           ;stkvar	_new_exp @ sp[(-13)+8]
 25557  015140  50E1               	movf	fsr1l,w,c
 25558  015142  0FFB               	addlw	-5
 25559  015144  6ED9               	movwf	fsr2l,c
 25560  015146  50E2               	movf	fsr1h,w,c
 25561  015148  6EDA               	movwf	fsr2h,c
 25562  01514A  0EFF               	movlw	255
 25563  01514C  22DA               	addwfc	fsr2h,f,c
 25564  01514E  06DE               	decf	postinc2,f,c
 25565  015150  0E00               	movlw	0
 25566  015152  5ADD               	subwfb	postdec2,f,c
 25567  015154                     l8292:
 25568                           
 25569                           ;stkvar	_b @ sp[(-13)+-4]
 25570  015154  0EF1               	movlw	-15
 25571  015156  AEE3               	btfss	plusw1,7,c
 25572  015158  D7DC               	goto	l8282
 25573                           
 25574                           ;stkvar	_aexp @ sp[(-13)+10]
 25575  01515A  0EFD               	movlw	-3
 25576  01515C  6AE3               	clrf	plusw1,c
 25577                           
 25578                           ;stkvar	_grs @ sp[(-13)+0]
 25579  01515E  0EF6               	movlw	-10
 25580  015160  AEE3               	btfss	plusw1,7,c
 25581  015162  D020               	goto	l8306
 25582                           
 25583                           ;stkvar	_grs @ sp[(-13)+0]
 25584  015164  50E1               	movf	fsr1l,w,c
 25585  015166  0FF3               	addlw	-13
 25586  015168  6ED9               	movwf	fsr2l,c
 25587  01516A  50E2               	movf	fsr1h,w,c
 25588  01516C  6EDA               	movwf	fsr2h,c
 25589  01516E  0EFF               	movlw	255
 25590  015170  22DA               	addwfc	fsr2h,f,c
 25591  015172  0EFF               	movlw	255
 25592  015174  14DE               	andwf	postinc2,w,c
 25593  015176  6E09               	movwf	(btemp+8)^0,c
 25594  015178  0EFF               	movlw	255
 25595  01517A  14DE               	andwf	postinc2,w,c
 25596  01517C  6E0A               	movwf	(btemp+9)^0,c
 25597  01517E  0EFF               	movlw	255
 25598  015180  14DE               	andwf	postinc2,w,c
 25599  015182  6E0B               	movwf	(btemp+10)^0,c
 25600  015184  0E7F               	movlw	127
 25601  015186  14DE               	andwf	postinc2,w,c
 25602  015188  6E0C               	movwf	(btemp+11)^0,c
 25603  01518A  5009               	movf	(btemp+8)^0,w,c
 25604  01518C  100A               	iorwf	(btemp+9)^0,w,c
 25605  01518E  100B               	iorwf	(btemp+10)^0,w,c
 25606  015190  100C               	iorwf	(btemp+11)^0,w,c
 25607  015192  B4D8               	btfsc	status,2,c
 25608  015194  D004               	goto	l8302
 25609  015196                     u6670:
 25610                           
 25611                           ;stkvar	_aexp @ sp[(-13)+10]
 25612  015196  0EFD               	movlw	-3
 25613  015198  6AE3               	clrf	plusw1,c
 25614  01519A  2AE3               	incf	plusw1,f,c
 25615  01519C  D003               	goto	l8306
 25616  01519E                     l8302:
 25617                           
 25618                           ;stkvar	_b @ sp[(-13)+-4]
 25619  01519E  0EEF               	movlw	-17
 25620  0151A0  B0E3               	btfsc	plusw1,0,c
 25621  0151A2  D7F9               	goto	u6670
 25622  0151A4                     l8306:
 25623                           
 25624                           ;stkvar	_aexp @ sp[(-13)+10]
 25625  0151A4  0EFD               	movlw	-3
 25626  0151A6  50E3               	movf	plusw1,w,c
 25627  0151A8  B4D8               	btfsc	status,2,c
 25628  0151AA  D036               	goto	l8316
 25629                           
 25630                           ;stkvar	_b @ sp[(-13)+-4]
 25631  0151AC  50E1               	movf	fsr1l,w,c
 25632  0151AE  0FEF               	addlw	-17
 25633  0151B0  6ED9               	movwf	fsr2l,c
 25634  0151B2  50E2               	movf	fsr1h,w,c
 25635  0151B4  6EDA               	movwf	fsr2h,c
 25636  0151B6  0EFF               	movlw	255
 25637  0151B8  22DA               	addwfc	fsr2h,f,c
 25638  0151BA  2ADE               	incf	postinc2,f,c
 25639  0151BC  0E00               	movlw	0
 25640  0151BE  22DE               	addwfc	postinc2,f,c
 25641  0151C0  22DE               	addwfc	postinc2,f,c
 25642  0151C2  22DE               	addwfc	postinc2,f,c
 25643                           
 25644                           ;stkvar	_b @ sp[(-13)+-4]
 25645  0151C4  0EF2               	movlw	-14
 25646  0151C6  A0E3               	btfss	plusw1,0,c
 25647  0151C8  D027               	goto	l8316
 25648  0151CA  0E01               	movlw	1
 25649  0151CC  6E0C               	movwf	(btemp+11)^0,c
 25650                           
 25651                           ;stkvar	_b @ sp[(-13)+-4]
 25652  0151CE  50E1               	movf	fsr1l,w,c
 25653  0151D0  0FEF               	addlw	-17
 25654  0151D2  6ED9               	movwf	fsr2l,c
 25655  0151D4  50E2               	movf	fsr1h,w,c
 25656  0151D6  6EDA               	movwf	fsr2h,c
 25657  0151D8  0EFF               	movlw	255
 25658  0151DA  22DA               	addwfc	fsr2h,f,c
 25659  0151DC  280C               	incf	(btemp+11)^0,w,c
 25660  0151DE  52DE               	movf	postinc2,f,c
 25661  0151E0  D008               	goto	u6710
 25662  0151E2                     u6715:
 25663  0151E2  52DE               	movf	postinc2,f,c
 25664  0151E4  90D8               	bcf	status,0,c
 25665  0151E6  BEDC               	btfsc	preinc2,7,c
 25666  0151E8  80D8               	bsf	status,0,c
 25667  0151EA  32DD               	rrcf	postdec2,f,c
 25668  0151EC  32DD               	rrcf	postdec2,f,c
 25669  0151EE  32DD               	rrcf	postdec2,f,c
 25670  0151F0  32DE               	rrcf	postinc2,f,c
 25671  0151F2                     u6710:
 25672  0151F2  2EE8               	decfsz	wreg,f,c
 25673  0151F4  D7F6               	goto	u6715
 25674                           
 25675                           ;stkvar	_new_exp @ sp[(-13)+8]
 25676  0151F6  0EFB               	movlw	-5
 25677  0151F8  50E3               	movf	plusw1,w,c
 25678  0151FA  0F01               	addlw	1
 25679  0151FC  6E01               	movwf	btemp^0,c
 25680  0151FE  0EFB               	movlw	-5
 25681  015200  0060  F007  FFE3   	movff	btemp,plusw1
 25682  015206  6A01               	clrf	btemp^0,c
 25683  015208  0EFC               	movlw	-4
 25684  01520A  50E3               	movf	plusw1,w,c
 25685  01520C  2001               	addwfc	btemp^0,w,c
 25686  01520E  6E01               	movwf	btemp^0,c
 25687  015210  0EFC               	movlw	-4
 25688  015212  0060  F007  FFE3   	movff	btemp,plusw1
 25689  015218                     l8316:
 25690                           
 25691                           ;stkvar	_new_exp @ sp[(-13)+8]
 25692  015218  0EFC               	movlw	-4
 25693  01521A  BEE3               	btfsc	plusw1,7,c
 25694  01521C  D01B               	goto	l8322
 25695  01521E  0EFC               	movlw	-4
 25696  015220  50E3               	movf	plusw1,w,c
 25697  015222  E104               	bnz	u6720
 25698  015224  0EFB               	movlw	-5
 25699  015226  28E3               	incf	plusw1,w,c
 25700  015228  A0D8               	btfss	status,0,c
 25701  01522A  D014               	goto	l8322
 25702  01522C                     u6720:
 25703  01522C  0EFF               	movlw	255
 25704  01522E  6E0B               	movwf	(btemp+10)^0,c
 25705  015230  0E00               	movlw	0
 25706  015232  6E0C               	movwf	(btemp+11)^0,c
 25707                           
 25708                           ;stkvar	_new_exp @ sp[(-13)+8]
 25709  015234  0EFB               	movlw	-5
 25710  015236  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25711  01523C  0EFC               	movlw	-4
 25712  01523E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25713                           
 25714                           ;stkvar	_b @ sp[(-13)+-4]
 25715  015244  0EEF               	movlw	-17
 25716  015246  6AE3               	clrf	plusw1,c
 25717  015248  0EF0               	movlw	-16
 25718  01524A  6AE3               	clrf	plusw1,c
 25719  01524C  0EF1               	movlw	-15
 25720  01524E  6AE3               	clrf	plusw1,c
 25721  015250  0EF2               	movlw	-14
 25722  015252  6AE3               	clrf	plusw1,c
 25723  015254                     l8322:
 25724                           
 25725                           ;stkvar	_new_exp @ sp[(-13)+8]
 25726  015254  0EFC               	movlw	-4
 25727  015256  BEE3               	btfsc	plusw1,7,c
 25728  015258  D007               	goto	u6730
 25729  01525A  0EFC               	movlw	-4
 25730  01525C  50E3               	movf	plusw1,w,c
 25731  01525E  E112               	bnz	l8328
 25732  015260  0EFB               	movlw	-5
 25733  015262  04E3               	decf	plusw1,w,c
 25734  015264  B0D8               	btfsc	status,0,c
 25735  015266  D00E               	goto	l8328
 25736  015268                     u6730:
 25737                           
 25738                           ;stkvar	_new_exp @ sp[(-13)+8]
 25739  015268  0EFB               	movlw	-5
 25740  01526A  6AE3               	clrf	plusw1,c
 25741  01526C  0EFC               	movlw	-4
 25742  01526E  6AE3               	clrf	plusw1,c
 25743                           
 25744                           ;stkvar	_b @ sp[(-13)+-4]
 25745  015270  0EEF               	movlw	-17
 25746  015272  6AE3               	clrf	plusw1,c
 25747  015274  0EF0               	movlw	-16
 25748  015276  6AE3               	clrf	plusw1,c
 25749  015278  0EF1               	movlw	-15
 25750  01527A  6AE3               	clrf	plusw1,c
 25751  01527C  0EF2               	movlw	-14
 25752  01527E  6AE3               	clrf	plusw1,c
 25753                           
 25754                           ;stkvar	_sign @ sp[(-13)+12]
 25755  015280  0EFF               	movlw	-1
 25756  015282  6AE3               	clrf	plusw1,c
 25757  015284                     l8328:
 25758                           
 25759                           ;stkvar	_new_exp @ sp[(-13)+8]
 25760                           ;stkvar	_bexp @ sp[(-13)+11]
 25761  015284  0EFB               	movlw	-5
 25762  015286  006F FF8C  F001    	movff	plusw1,btemp
 25763  01528C  0EFE               	movlw	-2
 25764  01528E  0060  F007  FFE3   	movff	btemp,plusw1
 25765                           
 25766                           ;stkvar	_bexp @ sp[(-13)+11]
 25767  015294  0EFE               	movlw	-2
 25768  015296  A0E3               	btfss	plusw1,0,c
 25769  015298  D009               	goto	l8334
 25770                           
 25771                           ;stkvar	_b @ sp[(-13)+-4]
 25772  01529A  0EF1               	movlw	241
 25773  01529C  24E1               	addwf	fsr1l,w,c
 25774  01529E  6ED9               	movwf	fsr2l,c
 25775  0152A0  0EFF               	movlw	255
 25776  0152A2  20E2               	addwfc	fsr1h,w,c
 25777  0152A4  6EDA               	movwf	fsr2h,c
 25778  0152A6  0E00               	movlw	0
 25779  0152A8  8EDB               	bsf	plusw2,7,c
 25780  0152AA  D008               	goto	l8336
 25781  0152AC                     l8334:
 25782                           
 25783                           ;stkvar	_b @ sp[(-13)+-4]
 25784  0152AC  0EF1               	movlw	241
 25785  0152AE  24E1               	addwf	fsr1l,w,c
 25786  0152B0  6ED9               	movwf	fsr2l,c
 25787  0152B2  0EFF               	movlw	255
 25788  0152B4  20E2               	addwfc	fsr1h,w,c
 25789  0152B6  6EDA               	movwf	fsr2h,c
 25790  0152B8  0E7F               	movlw	127
 25791  0152BA  16DF               	andwf	indf2,f,c
 25792  0152BC                     l8336:
 25793                           
 25794                           ;stkvar	_b @ sp[(-13)+-4]
 25795  0152BC  0EF2               	movlw	242
 25796  0152BE  24E1               	addwf	fsr1l,w,c
 25797  0152C0  6ED9               	movwf	fsr2l,c
 25798  0152C2  0EFF               	movlw	255
 25799  0152C4  20E2               	addwfc	fsr1h,w,c
 25800  0152C6  6EDA               	movwf	fsr2h,c
 25801                           
 25802                           ;stkvar	_bexp @ sp[(-13)+11]
 25803  0152C8  0EFE               	movlw	-2
 25804  0152CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25805  0152D0  90D8               	bcf	status,0,c
 25806  0152D2  300C               	rrcf	(btemp+11)^0,w,c
 25807  0152D4  6EDF               	movwf	indf2,c
 25808  0152D6  D644               	goto	l8234
 25809  0152D8                     l2977:
 25810                           
 25811                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25812  0152D8  0EEB               	movlw	235
 25813  0152DA  26E1               	addwf	fsr1l,f,c
 25814  0152DC  0EFF               	movlw	255
 25815  0152DE  22E2               	addwfc	fsr1h,f,c
 25816  0152E0  0012               	return		;funcret
 25817  0152E2                     __end_of___fldiv:
 25818                           	opt callstack 0
 25819                           
 25820 ;; *************** function ___flge *****************
 25821 ;; Defined at:
 25822 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25823 ;; Parameters:    Size  Location     Type
 25824 ;;  ff1             4  [STACK] unsigned char 
 25825 ;;  ff2             4  [STACK] unsigned char 
 25826 ;; Auto vars:     Size  Location     Type
 25827 ;;		None
 25828 ;; Return value:  Size  Location     Type
 25829 ;;		None               void
 25830 ;; Registers used:
 25831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25832 ;; Tracked objects:
 25833 ;;		On entry : 0/1
 25834 ;;		On exit  : 0/0
 25835 ;;		Unchanged: 0/0
 25836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25841 ;;Total ram usage:        0 bytes
 25842 ;; Hardware stack levels used:    1
 25843 ;; Hardware stack levels required when called:   15
 25844 ;; This function calls:
 25845 ;;		Nothing
 25846 ;; This function is called by:
 25847 ;;		_main
 25848 ;;		_calc_ror_data
 25849 ;;		_check_day_time
 25850 ;;		_calc_bsoc
 25851 ;;		_efgtoa
 25852 ;; This function uses a reentrant model
 25853 ;;
 25854                           
 25855                           	psect	text101
 25856  018FE8                     __ptext101:
 25857                           	opt callstack 0
 25858  018FE8                     ___flge:
 25859                           	opt callstack 0
 25860                           
 25861                           ;stkvar	_ff1 @ sp[(0)+-4]
 25862                           
 25863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25864                           ;incstack = 0
 25865 ;; hardware stack exceeded
 25866  018FE8  50E1               	movf	fsr1l,w,c
 25867  018FEA  0FFC               	addlw	-4
 25868  018FEC  6ED9               	movwf	fsr2l,c
 25869  018FEE  50E2               	movf	fsr1h,w,c
 25870  018FF0  6EDA               	movwf	fsr2h,c
 25871  018FF2  0EFF               	movlw	255
 25872  018FF4  22DA               	addwfc	fsr2h,f,c
 25873  018FF6  0E00               	movlw	0
 25874  018FF8  14DE               	andwf	postinc2,w,c
 25875  018FFA  6E09               	movwf	(btemp+8)^0,c
 25876  018FFC  0E00               	movlw	0
 25877  018FFE  14DE               	andwf	postinc2,w,c
 25878  019000  6E0A               	movwf	(btemp+9)^0,c
 25879  019002  0E80               	movlw	128
 25880  019004  14DE               	andwf	postinc2,w,c
 25881  019006  6E0B               	movwf	(btemp+10)^0,c
 25882  019008  0E7F               	movlw	127
 25883  01900A  14DE               	andwf	postinc2,w,c
 25884  01900C  6E0C               	movwf	(btemp+11)^0,c
 25885  01900E  5009               	movf	(btemp+8)^0,w,c
 25886  019010  100A               	iorwf	(btemp+9)^0,w,c
 25887  019012  100B               	iorwf	(btemp+10)^0,w,c
 25888  019014  100C               	iorwf	(btemp+11)^0,w,c
 25889  019016  A4D8               	btfss	status,2,c
 25890  019018  D008               	goto	l8610
 25891                           
 25892                           ;stkvar	_ff1 @ sp[(0)+-4]
 25893  01901A  0EFC               	movlw	-4
 25894  01901C  6AE3               	clrf	plusw1,c
 25895  01901E  0EFD               	movlw	-3
 25896  019020  6AE3               	clrf	plusw1,c
 25897  019022  0EFE               	movlw	-2
 25898  019024  6AE3               	clrf	plusw1,c
 25899  019026  0EFF               	movlw	-1
 25900  019028  6AE3               	clrf	plusw1,c
 25901  01902A                     l8610:
 25902                           
 25903                           ;stkvar	_ff2 @ sp[(0)+-8]
 25904  01902A  50E1               	movf	fsr1l,w,c
 25905  01902C  0FF8               	addlw	-8
 25906  01902E  6ED9               	movwf	fsr2l,c
 25907  019030  50E2               	movf	fsr1h,w,c
 25908  019032  6EDA               	movwf	fsr2h,c
 25909  019034  0EFF               	movlw	255
 25910  019036  22DA               	addwfc	fsr2h,f,c
 25911  019038  0E00               	movlw	0
 25912  01903A  14DE               	andwf	postinc2,w,c
 25913  01903C  6E09               	movwf	(btemp+8)^0,c
 25914  01903E  0E00               	movlw	0
 25915  019040  14DE               	andwf	postinc2,w,c
 25916  019042  6E0A               	movwf	(btemp+9)^0,c
 25917  019044  0E80               	movlw	128
 25918  019046  14DE               	andwf	postinc2,w,c
 25919  019048  6E0B               	movwf	(btemp+10)^0,c
 25920  01904A  0E7F               	movlw	127
 25921  01904C  14DE               	andwf	postinc2,w,c
 25922  01904E  6E0C               	movwf	(btemp+11)^0,c
 25923  019050  5009               	movf	(btemp+8)^0,w,c
 25924  019052  100A               	iorwf	(btemp+9)^0,w,c
 25925  019054  100B               	iorwf	(btemp+10)^0,w,c
 25926  019056  100C               	iorwf	(btemp+11)^0,w,c
 25927  019058  A4D8               	btfss	status,2,c
 25928  01905A  D008               	goto	l2658
 25929                           
 25930                           ;stkvar	_ff2 @ sp[(0)+-8]
 25931  01905C  0EF8               	movlw	-8
 25932  01905E  6AE3               	clrf	plusw1,c
 25933  019060  0EF9               	movlw	-7
 25934  019062  6AE3               	clrf	plusw1,c
 25935  019064  0EFA               	movlw	-6
 25936  019066  6AE3               	clrf	plusw1,c
 25937  019068  0EFB               	movlw	-5
 25938  01906A  6AE3               	clrf	plusw1,c
 25939  01906C                     l2658:
 25940                           
 25941                           ;stkvar	_ff1 @ sp[(0)+-4]
 25942  01906C  0EFF               	movlw	-1
 25943  01906E  AEE3               	btfss	plusw1,7,c
 25944  019070  D024               	goto	l8616
 25945                           
 25946                           ;stkvar	_ff1 @ sp[(0)+-4]
 25947  019072  0E00               	movlw	0
 25948  019074  6E09               	movwf	(btemp+8)^0,c
 25949  019076  0E00               	movlw	0
 25950  019078  6E0A               	movwf	(btemp+9)^0,c
 25951  01907A  0E00               	movlw	0
 25952  01907C  6E0B               	movwf	(btemp+10)^0,c
 25953  01907E  0E80               	movlw	128
 25954  019080  6E0C               	movwf	(btemp+11)^0,c
 25955  019082  0EFC               	movlw	-4
 25956  019084  50E3               	movf	plusw1,w,c
 25957  019086  5E09               	subwf	(btemp+8)^0,f,c
 25958  019088  0EFD               	movlw	-3
 25959  01908A  50E3               	movf	plusw1,w,c
 25960  01908C  5A0A               	subwfb	(btemp+9)^0,f,c
 25961  01908E  0EFE               	movlw	-2
 25962  019090  50E3               	movf	plusw1,w,c
 25963  019092  5A0B               	subwfb	(btemp+10)^0,f,c
 25964  019094  0EFF               	movlw	-1
 25965  019096  50E3               	movf	plusw1,w,c
 25966  019098  5A0C               	subwfb	(btemp+11)^0,f,c
 25967                           
 25968                           ;stkvar	_ff1 @ sp[(0)+-4]
 25969  01909A  0EFC               	movlw	-4
 25970  01909C  0060  F027  FFE3   	movff	btemp+8,plusw1
 25971  0190A2  0EFD               	movlw	-3
 25972  0190A4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25973  0190AA  0EFE               	movlw	-2
 25974  0190AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25975  0190B2  0EFF               	movlw	-1
 25976  0190B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25977  0190BA                     l8616:
 25978                           
 25979                           ;stkvar	_ff2 @ sp[(0)+-8]
 25980  0190BA  0EFB               	movlw	-5
 25981  0190BC  AEE3               	btfss	plusw1,7,c
 25982  0190BE  D024               	goto	l8620
 25983                           
 25984                           ;stkvar	_ff2 @ sp[(0)+-8]
 25985  0190C0  0E00               	movlw	0
 25986  0190C2  6E09               	movwf	(btemp+8)^0,c
 25987  0190C4  0E00               	movlw	0
 25988  0190C6  6E0A               	movwf	(btemp+9)^0,c
 25989  0190C8  0E00               	movlw	0
 25990  0190CA  6E0B               	movwf	(btemp+10)^0,c
 25991  0190CC  0E80               	movlw	128
 25992  0190CE  6E0C               	movwf	(btemp+11)^0,c
 25993  0190D0  0EF8               	movlw	-8
 25994  0190D2  50E3               	movf	plusw1,w,c
 25995  0190D4  5E09               	subwf	(btemp+8)^0,f,c
 25996  0190D6  0EF9               	movlw	-7
 25997  0190D8  50E3               	movf	plusw1,w,c
 25998  0190DA  5A0A               	subwfb	(btemp+9)^0,f,c
 25999  0190DC  0EFA               	movlw	-6
 26000  0190DE  50E3               	movf	plusw1,w,c
 26001  0190E0  5A0B               	subwfb	(btemp+10)^0,f,c
 26002  0190E2  0EFB               	movlw	-5
 26003  0190E4  50E3               	movf	plusw1,w,c
 26004  0190E6  5A0C               	subwfb	(btemp+11)^0,f,c
 26005                           
 26006                           ;stkvar	_ff2 @ sp[(0)+-8]
 26007  0190E8  0EF8               	movlw	-8
 26008  0190EA  0060  F027  FFE3   	movff	btemp+8,plusw1
 26009  0190F0  0EF9               	movlw	-7
 26010  0190F2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26011  0190F8  0EFA               	movlw	-6
 26012  0190FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26013  019100  0EFB               	movlw	-5
 26014  019102  0060  F033  FFE3   	movff	btemp+11,plusw1
 26015  019108                     l8620:
 26016                           
 26017                           ;stkvar	_ff1 @ sp[(0)+-4]
 26018  019108  0EFF               	movlw	-1
 26019  01910A  7EE3               	btg	plusw1,7,c
 26020                           
 26021                           ;stkvar	_ff2 @ sp[(0)+-8]
 26022  01910C  0EFB               	movlw	-5
 26023  01910E  7EE3               	btg	plusw1,7,c
 26024                           
 26025                           ;stkvar	_ff2 @ sp[(0)+-8]
 26026                           ;stkvar	_ff1 @ sp[(0)+-4]
 26027  019110  50E1               	movf	fsr1l,w,c
 26028  019112  0FFC               	addlw	-4
 26029  019114  6ED9               	movwf	fsr2l,c
 26030  019116  50E2               	movf	fsr1h,w,c
 26031  019118  6EDA               	movwf	fsr2h,c
 26032  01911A  0EFF               	movlw	255
 26033  01911C  22DA               	addwfc	fsr2h,f,c
 26034  01911E  0EF8               	movlw	-8
 26035  019120  50E3               	movf	plusw1,w,c
 26036  019122  5CDE               	subwf	postinc2,w,c
 26037  019124  0EF9               	movlw	-7
 26038  019126  50E3               	movf	plusw1,w,c
 26039  019128  58DE               	subwfb	postinc2,w,c
 26040  01912A  0EFA               	movlw	-6
 26041  01912C  50E3               	movf	plusw1,w,c
 26042  01912E  58DE               	subwfb	postinc2,w,c
 26043  019130  0EFB               	movlw	-5
 26044  019132  50E3               	movf	plusw1,w,c
 26045  019134  58DE               	subwfb	postinc2,w,c
 26046  019136  B0D8               	btfsc	status,0,c
 26047  019138  D002               	goto	l8628
 26048  01913A  9001               	bcf	btemp& (0+255),0,c
 26049  01913C  D001               	goto	l2665
 26050  01913E                     l8628:
 26051  01913E  8001               	bsf	btemp& (0+255),0,c
 26052  019140                     l2665:
 26053                           
 26054                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26055  019140  0EF8               	movlw	248
 26056  019142  26E1               	addwf	fsr1l,f,c
 26057  019144  0EFF               	movlw	255
 26058  019146  22E2               	addwfc	fsr1h,f,c
 26059  019148  0012               	return		;funcret
 26060  01914A                     __end_of___flge:
 26061                           	opt callstack 0
 26062                           
 26063 ;; *************** function _calc_model_data *****************
 26064 ;; Defined at:
 26065 ;;		line 67 in file "mbmc.c"
 26066 ;; Parameters:    Size  Location     Type
 26067 ;;		None
 26068 ;; Auto vars:     Size  Location     Type
 26069 ;;		None
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  1  [STACK] void 
 26072 ;; Registers used:
 26073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26074 ;; Tracked objects:
 26075 ;;		On entry : 0/1
 26076 ;;		On exit  : 3F/39
 26077 ;;		Unchanged: 0/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26083 ;;Total ram usage:        0 bytes
 26084 ;; Hardware stack levels used:    1
 26085 ;; Hardware stack levels required when called:   18
 26086 ;; This function calls:
 26087 ;;		___fladd
 26088 ;;		___flmul
 26089 ;;		___flsub
 26090 ;;		_lp_filter
 26091 ;;		_start_bsoc
 26092 ;;		_stop_bsoc
 26093 ;; This function is called by:
 26094 ;;		_main
 26095 ;; This function uses a reentrant model
 26096 ;;
 26097                           
 26098                           	psect	text102
 26099  015C76                     __ptext102:
 26100                           	opt callstack 0
 26101  015C76                     _calc_model_data:
 26102                           	opt callstack 12
 26103                           
 26104                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26105                           
 26106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26107                           ;incstack = 0
 26108  015C76  ECA8  F0E0         	call	_stop_bsoc	;wreg free
 26109                           
 26110                           ; BSR set to: 57
 26111                           ;mbmc.c: 72:  if (!V.calib) {
 26112  015C7A  0101               	movlb	1	; () banked
 26113  015C7C  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 26114  015C7E  A4D8               	btfss	status,2,c
 26115  015C80  D219               	goto	l11046
 26116                           
 26117                           ; BSR set to: 1
 26118                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26119  015C82  EE21  F2FF         	lfsr	2,_C
 26120  015C86  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26121  015C8C  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26122  015C92  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26123  015C98  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26124                           
 26125                           ; BSR set to: 1
 26126                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26127  015C9E  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 26128  015CA4  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26129  015CAA  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26130  015CB0  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26131  015CB6  EE21  F343         	lfsr	2,_C+68	;volatile
 26132  015CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 26133  015CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 26134  015CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 26135  015CCC  006F FF7B FFE6     	movff	postinc2,postinc1
 26136  015CD2  ECBF  F0DA         	call	___flsub	;wreg free
 26137  015CD6  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26138  015CDC  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26139  015CE2  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26140  015CE8  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26141                           
 26142                           ;mbmc.c: 75:   bcror = C.c_bat;
 26143  015CEE  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 26144  015CF2  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26145  015CF6  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26146  015CFA  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26147                           
 26148                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26149  015CFE  EE21  F303         	lfsr	2,_C+4	;volatile
 26150  015D02  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26151  015D08  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26152  015D0E  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26153  015D14  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26154                           
 26155                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26156  015D1A  EE21  F30F         	lfsr	2,_C+16	;volatile
 26157  015D1E  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26158  015D24  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26159  015D2A  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26160  015D30  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26161                           
 26162                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26163  015D36  EE21  F333         	lfsr	2,_C+52	;volatile
 26164  015D3A  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26165  015D40  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26166  015D46  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26167  015D4C  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26168                           
 26169                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26170  015D52  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 26171  015D58  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26172  015D5E  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26173  015D64  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26174  015D6A  EE21  F353         	lfsr	2,_C+84	;volatile
 26175  015D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26176  015D74  006F FF7B FFE6     	movff	postinc2,postinc1
 26177  015D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 26178  015D80  006F FF7B FFE6     	movff	postinc2,postinc1
 26179  015D86  ECBF  F0DA         	call	___flsub	;wreg free
 26180  015D8A  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26181  015D90  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26182  015D96  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26183  015D9C  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26184                           
 26185                           ;mbmc.c: 80:   bvror = C.v_bat;
 26186  015DA2  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 26187  015DA6  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26188  015DAA  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26189  015DAE  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26190                           
 26191                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26192  015DB2  EE21  F313         	lfsr	2,_C+20	;volatile
 26193  015DB6  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26194  015DBC  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26195  015DC2  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26196  015DC8  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26197                           
 26198                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26199  015DCE  EE21  F307         	lfsr	2,_C+8	;volatile
 26200  015DD2  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26201  015DD8  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26202  015DDE  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26203  015DE4  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26204                           
 26205                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26206  015DEA  EE21  F32F         	lfsr	2,_C+48	;volatile
 26207  015DEE  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26208  015DF4  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26209  015DFA  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26210  015E00  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26211                           
 26212                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26213  015E06  0E01               	movlw	1
 26214  015E08  6EE6               	movwf	postinc1,c
 26215  015E0A  0E10               	movlw	16
 26216  015E0C  6EE6               	movwf	postinc1,c
 26217  015E0E  EE21  F2FF         	lfsr	2,_C
 26218  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 26219  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 26220  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 26221  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 26222  015E2A  EE21  F303         	lfsr	2,_C+4	;volatile
 26223  015E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 26224  015E34  006F FF7B FFE6     	movff	postinc2,postinc1
 26225  015E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 26226  015E40  006F FF7B FFE6     	movff	postinc2,postinc1
 26227  015E46  ECBF  F0DA         	call	___flsub	;wreg free
 26228  015E4A  0060  F007  FFE6   	movff	btemp,postinc1
 26229  015E50  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26230  015E56  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26231  015E5C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26232  015E62  EC3F  F0C3         	call	_lp_filter	;wreg free
 26233  015E66  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26234  015E6C  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26235  015E72  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26236  015E78  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26237                           
 26238                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26239  015E7E  0E01               	movlw	1
 26240  015E80  6EE6               	movwf	postinc1,c
 26241  015E82  0E11               	movlw	17
 26242  015E84  6EE6               	movwf	postinc1,c
 26243  015E86  EE21  F353         	lfsr	2,_C+84	;volatile
 26244  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26245  015E90  006F FF7B FFE6     	movff	postinc2,postinc1
 26246  015E96  006F FF7B FFE6     	movff	postinc2,postinc1
 26247  015E9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26248  015EA2  EE21  F33F         	lfsr	2,_C+64	;volatile
 26249  015EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 26250  015EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  015EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  015EB8  006F FF7B FFE6     	movff	postinc2,postinc1
 26253  015EBE  ECC1  F09E         	call	___flmul	;wreg free
 26254  015EC2  0060  F007  FFE6   	movff	btemp,postinc1
 26255  015EC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26256  015ECE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26257  015ED4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26258  015EDA  EC3F  F0C3         	call	_lp_filter	;wreg free
 26259  015EDE  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26260  015EE4  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26261  015EEA  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26262  015EF0  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26263                           
 26264                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26265  015EF6  0E01               	movlw	1
 26266  015EF8  6EE6               	movwf	postinc1,c
 26267  015EFA  0E12               	movlw	18
 26268  015EFC  6EE6               	movwf	postinc1,c
 26269  015EFE  EE21  F34F         	lfsr	2,_C+80	;volatile
 26270  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 26271  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 26272  015F0E  006F FF7B FFE6     	movff	postinc2,postinc1
 26273  015F14  006F FF7B FFE6     	movff	postinc2,postinc1
 26274  015F1A  EE21  F347         	lfsr	2,_C+72	;volatile
 26275  015F1E  006F FF7B FFE6     	movff	postinc2,postinc1
 26276  015F24  006F FF7B FFE6     	movff	postinc2,postinc1
 26277  015F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 26278  015F30  006F FF7B FFE6     	movff	postinc2,postinc1
 26279  015F36  ECC1  F09E         	call	___flmul	;wreg free
 26280  015F3A  0060  F007  FFE6   	movff	btemp,postinc1
 26281  015F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26282  015F46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26283  015F4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26284  015F52  EC3F  F0C3         	call	_lp_filter	;wreg free
 26285  015F56  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26286  015F5C  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26287  015F62  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26288  015F68  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26289                           
 26290                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26291  015F6E  0E01               	movlw	1
 26292  015F70  6EE6               	movwf	postinc1,c
 26293  015F72  0E13               	movlw	19
 26294  015F74  6EE6               	movwf	postinc1,c
 26295  015F76  0E00               	movlw	0
 26296  015F78  6EE6               	movwf	postinc1,c
 26297  015F7A  0E00               	movlw	0
 26298  015F7C  6EE6               	movwf	postinc1,c
 26299  015F7E  0E60               	movlw	96
 26300  015F80  6EE6               	movwf	postinc1,c
 26301  015F82  0EC1               	movlw	193
 26302  015F84  6EE6               	movwf	postinc1,c
 26303  015F86  EE21  F363         	lfsr	2,_C+100	;volatile
 26304  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26305  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 26306  015F96  006F FF7B FFE6     	movff	postinc2,postinc1
 26307  015F9C  006F FF7B FFE6     	movff	postinc2,postinc1
 26308  015FA2  EE21  F33F         	lfsr	2,_C+64	;volatile
 26309  015FA6  006F FF7B FFE6     	movff	postinc2,postinc1
 26310  015FAC  006F FF7B FFE6     	movff	postinc2,postinc1
 26311  015FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 26312  015FB8  006F FF7B FFE6     	movff	postinc2,postinc1
 26313  015FBE  ECC1  F09E         	call	___flmul	;wreg free
 26314  015FC2  0060  F007  FFE6   	movff	btemp,postinc1
 26315  015FC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26316  015FCE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26317  015FD4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26318  015FDA  ECD6  F0A2         	call	___fladd	;wreg free
 26319  015FDE  0060  F007  FFE6   	movff	btemp,postinc1
 26320  015FE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26321  015FEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26322  015FF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26323  015FF6  EC3F  F0C3         	call	_lp_filter	;wreg free
 26324  015FFA  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26325  016000  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26326  016006  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26327  01600C  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26328                           
 26329                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26330  016012  0E01               	movlw	1
 26331  016014  6EE6               	movwf	postinc1,c
 26332  016016  0E14               	movlw	20
 26333  016018  6EE6               	movwf	postinc1,c
 26334  01601A  EE21  F353         	lfsr	2,_C+84	;volatile
 26335  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 26336  016024  006F FF7B FFE6     	movff	postinc2,postinc1
 26337  01602A  006F FF7B FFE6     	movff	postinc2,postinc1
 26338  016030  006F FF7B FFE6     	movff	postinc2,postinc1
 26339  016036  EE21  F343         	lfsr	2,_C+68	;volatile
 26340  01603A  006F FF7B FFE6     	movff	postinc2,postinc1
 26341  016040  006F FF7B FFE6     	movff	postinc2,postinc1
 26342  016046  006F FF7B FFE6     	movff	postinc2,postinc1
 26343  01604C  006F FF7B FFE6     	movff	postinc2,postinc1
 26344  016052  ECC1  F09E         	call	___flmul	;wreg free
 26345  016056  0060  F007  FFE6   	movff	btemp,postinc1
 26346  01605C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26347  016062  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26348  016068  0060  F013  FFE6   	movff	btemp+3,postinc1
 26349  01606E  EC3F  F0C3         	call	_lp_filter	;wreg free
 26350  016072  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26351  016078  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26352  01607E  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26353  016084  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26354                           
 26355                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26356  01608A  EE21  F377         	lfsr	2,_C+120	;volatile
 26357  01608E  0E03               	movlw	3
 26358  016090  AEDB               	btfss	plusw2,7,c
 26359  016092  D010               	goto	l11046
 26360                           
 26361                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26362  016094  0E17               	movlw	23
 26363  016096  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26364  01609C  0EB7               	movlw	183
 26365  01609E  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26366  0160A4  0ED1               	movlw	209
 26367  0160A6  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26368  0160AC  0E38               	movlw	56
 26369  0160AE  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26370  0160B4                     l11046:
 26371                           
 26372                           ;mbmc.c: 95:  start_bsoc();
 26373  0160B4  EC33  F0DF         	call	_start_bsoc	;wreg free
 26374                           
 26375                           ; BSR set to: 57
 26376                           ;mbmc.c: 96:  C.update = 1;
 26377  0160B8  0E01               	movlw	1
 26378  0160BA  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26379                           
 26380                           ; BSR set to: 57
 26381                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26382  0160C0  0012               	return		;funcret
 26383  0160C2                     __end_of_calc_model_data:
 26384                           	opt callstack 0
 26385                           
 26386 ;; *************** function _stop_bsoc *****************
 26387 ;; Defined at:
 26388 ;;		line 129 in file "bsoc.c"
 26389 ;; Parameters:    Size  Location     Type
 26390 ;;		None
 26391 ;; Auto vars:     Size  Location     Type
 26392 ;;		None
 26393 ;; Return value:  Size  Location     Type
 26394 ;;                  1  [STACK] void 
 26395 ;; Registers used:
 26396 ;;		None
 26397 ;; Tracked objects:
 26398 ;;		On entry : 0/1
 26399 ;;		On exit  : 3F/39
 26400 ;;		Unchanged: 0/0
 26401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26406 ;;Total ram usage:        0 bytes
 26407 ;; Hardware stack levels used:    1
 26408 ;; Hardware stack levels required when called:   15
 26409 ;; This function calls:
 26410 ;;		Nothing
 26411 ;; This function is called by:
 26412 ;;		_calc_model_data
 26413 ;; This function uses a reentrant model
 26414 ;;
 26415                           
 26416                           	psect	text103
 26417  01C150                     __ptext103:
 26418                           	opt callstack 0
 26419  01C150                     _stop_bsoc:
 26420                           	opt callstack 14
 26421                           
 26422                           ;bsoc.c: 132:  PIE6bits.TMR3IE = 0;
 26423                           
 26424                           ; BSR set to: 57
 26425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26426                           ;incstack = 0
 26427  01C150  0139               	movlb	57	; () banked
 26428  01C152  9D96               	bcf	150,6,b	;volatile
 26429                           
 26430                           ; BSR set to: 57
 26431                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26432  01C154  0012               	return		;funcret
 26433  01C156                     __end_of_stop_bsoc:
 26434                           	opt callstack 0
 26435                           
 26436 ;; *************** function _start_bsoc *****************
 26437 ;; Defined at:
 26438 ;;		line 120 in file "bsoc.c"
 26439 ;; Parameters:    Size  Location     Type
 26440 ;;		None
 26441 ;; Auto vars:     Size  Location     Type
 26442 ;;		None
 26443 ;; Return value:  Size  Location     Type
 26444 ;;                  1  [STACK] void 
 26445 ;; Registers used:
 26446 ;;		wreg, status,2, status,0, btemp+11
 26447 ;; Tracked objects:
 26448 ;;		On entry : 0/1
 26449 ;;		On exit  : 3F/39
 26450 ;;		Unchanged: 0/0
 26451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;Total ram usage:        0 bytes
 26457 ;; Hardware stack levels used:    1
 26458 ;; Hardware stack levels required when called:   15
 26459 ;; This function calls:
 26460 ;;		Nothing
 26461 ;; This function is called by:
 26462 ;;		_calc_model_data
 26463 ;; This function uses a reentrant model
 26464 ;;
 26465                           
 26466                           	psect	text104
 26467  01BE66                     __ptext104:
 26468                           	opt callstack 0
 26469  01BE66                     _start_bsoc:
 26470                           	opt callstack 14
 26471                           
 26472                           ;bsoc.c: 123:  PIE6bits.TMR3IE = 1;
 26473                           
 26474                           ; BSR set to: 57
 26475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26476                           ;incstack = 0
 26477  01BE66  0139               	movlb	57	; () banked
 26478  01BE68  8D96               	bsf	150,6,b	;volatile
 26479                           
 26480                           ; BSR set to: 57
 26481  01BE6A  A4BE               	btfss	190,2,c	;volatile
 26482  01BE6C  D002               	goto	u9620
 26483  01BE6E  0E01               	movlw	1
 26484  01BE70  D001               	goto	u9626
 26485  01BE72                     u9620:
 26486  01BE72  0E00               	movlw	0
 26487  01BE74                     u9626:
 26488  01BE74  0AFF               	xorlw	255
 26489  01BE76  6E0C               	movwf	(btemp+11)^0,c
 26490  01BE78  460C               	rlncf	(btemp+11)^0,f,c
 26491  01BE7A  460C               	rlncf	(btemp+11)^0,f,c
 26492  01BE7C  50BE               	movf	190,w,c	;volatile
 26493  01BE7E  180C               	xorwf	(btemp+11)^0,w,c
 26494  01BE80  0BFB               	andlw	-5
 26495  01BE82  180C               	xorwf	(btemp+11)^0,w,c
 26496  01BE84  6EBE               	movwf	190,c	;volatile
 26497                           
 26498                           ; BSR set to: 57
 26499                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26500  01BE86  0012               	return		;funcret
 26501  01BE88                     __end_of_start_bsoc:
 26502                           	opt callstack 0
 26503                           
 26504 ;; *************** function _lp_filter *****************
 26505 ;; Defined at:
 26506 ;;		line 29 in file "mbmc.c"
 26507 ;; Parameters:    Size  Location     Type
 26508 ;;  new             4  [STACK] const float 
 26509 ;;  bn              1  [STACK] const unsigned char 
 26510 ;;  slow            1  [STACK] const char 
 26511 ;; Auto vars:     Size  Location     Type
 26512 ;;  lp_speed        4  [STACK] float 
 26513 ;; Return value:  Size  Location     Type
 26514 ;;                  4  [STACK] float 
 26515 ;; Registers used:
 26516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26517 ;; Tracked objects:
 26518 ;;		On entry : 0/1
 26519 ;;		On exit  : 0/0
 26520 ;;		Unchanged: 0/0
 26521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26526 ;;Total ram usage:        0 bytes
 26527 ;; Hardware stack levels used:    1
 26528 ;; Hardware stack levels required when called:   17
 26529 ;; This function calls:
 26530 ;;		___fladd
 26531 ;;		___flmul
 26532 ;;		___flsub
 26533 ;; This function is called by:
 26534 ;;		_main
 26535 ;;		_convert_adc_data
 26536 ;;		_calc_model_data
 26537 ;; This function uses a reentrant model
 26538 ;;
 26539                           
 26540                           	psect	text105
 26541  01867E                     __ptext105:
 26542                           	opt callstack 0
 26543  01867E                     _lp_filter:
 26544                           	opt callstack 0
 26545                           
 26546                           ; BSR set to: 57
 26547                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26548  01867E  52E6               	movf	postinc1,f,c
 26549  018680  52E6               	movf	postinc1,f,c
 26550  018682  52E6               	movf	postinc1,f,c
 26551  018684  52E6               	movf	postinc1,f,c
 26552                           
 26553                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26554                           ;stkvar	_bn @ sp[(-4)+-5]
 26555                           
 26556                           ;incstack = 0
 26557  018686  0EF7               	movlw	-9
 26558  018688  006F FF8C  F001    	movff	plusw1,btemp
 26559  01868E  0E14               	movlw	20
 26560  018690  6401               	cpfsgt	btemp^0,c
 26561  018692  D011               	goto	l10412
 26562  018694                     u9530:
 26563                           
 26564                           ;mbmc.c: 35:   return new;
 26565                           ;stkvar	_new @ sp[(-4)+-4]
 26566  018694  0EF8               	movlw	-8
 26567  018696  006F FF8C  F001    	movff	plusw1,btemp
 26568  01869C  0EF9               	movlw	-7
 26569  01869E  006F FF8C  F002    	movff	plusw1,btemp+1
 26570  0186A4  0EFA               	movlw	-6
 26571  0186A6  006F FF8C  F003    	movff	plusw1,btemp+2
 26572  0186AC  0EFB               	movlw	-5
 26573  0186AE  006F FF8C  F004    	movff	plusw1,btemp+3
 26574  0186B4  D0BD               	goto	l1832
 26575  0186B6                     l10412:
 26576                           
 26577                           ;mbmc.c: 37:  if (slow == (-1)) {
 26578                           ;stkvar	_slow @ sp[(-4)+-6]
 26579  0186B6  0EF6               	movlw	-10
 26580  0186B8  28E3               	incf	plusw1,w,c
 26581  0186BA  A4D8               	btfss	status,2,c
 26582  0186BC  D012               	goto	l10420
 26583                           
 26584                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26585                           ;stkvar	_bn @ sp[(-4)+-5]
 26586  0186BE  0EF7               	movlw	-9
 26587  0186C0  50E3               	movf	plusw1,w,c
 26588  0186C2  0D04               	mullw	4
 26589  0186C4  0E00               	movlw	low lp_filter@smooth
 26590  0186C6  24F3               	addwf	243,w,c
 26591  0186C8  6ED9               	movwf	fsr2l,c
 26592  0186CA  0E02               	movlw	high lp_filter@smooth
 26593  0186CC  20F4               	addwfc	prodh,w,c
 26594  0186CE  6EDA               	movwf	fsr2h,c
 26595  0186D0  0E00               	movlw	0
 26596  0186D2  6EDE               	movwf	postinc2,c
 26597  0186D4  0E00               	movlw	0
 26598  0186D6  6EDE               	movwf	postinc2,c
 26599  0186D8  0E00               	movlw	0
 26600  0186DA  6EDE               	movwf	postinc2,c
 26601  0186DC  0E00               	movlw	0
 26602  0186DE  6EDD               	movwf	postdec2,c
 26603  0186E0  D7D9               	goto	u9530
 26604  0186E2                     l10420:
 26605                           
 26606                           ;mbmc.c: 42:  if (slow) {
 26607                           ;stkvar	_slow @ sp[(-4)+-6]
 26608  0186E2  0EF6               	movlw	-10
 26609  0186E4  50E3               	movf	plusw1,w,c
 26610  0186E6  B4D8               	btfsc	status,2,c
 26611  0186E8  D006               	goto	l10424
 26612                           
 26613                           ;mbmc.c: 43:   lp_speed = 0.033;
 26614  0186EA  0E02               	movlw	2
 26615  0186EC  6E09               	movwf	(btemp+8)^0,c
 26616  0186EE  0E2B               	movlw	43
 26617  0186F0  6E0A               	movwf	(btemp+9)^0,c
 26618  0186F2  0E07               	movlw	7
 26619  0186F4  D005               	goto	L31
 26620  0186F6                     l10424:
 26621                           
 26622                           ;mbmc.c: 45:   lp_speed = 0.066;
 26623  0186F6  0E02               	movlw	2
 26624  0186F8  6E09               	movwf	(btemp+8)^0,c
 26625  0186FA  0E2B               	movlw	43
 26626  0186FC  6E0A               	movwf	(btemp+9)^0,c
 26627  0186FE  0E87               	movlw	135
 26628  018700                     L31:
 26629  018700  6E0B               	movwf	(btemp+10)^0,c
 26630  018702  0E3D               	movlw	61
 26631  018704  6E0C               	movwf	(btemp+11)^0,c
 26632                           
 26633                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26634  018706  0EFC               	movlw	-4
 26635  018708  0060  F027  FFE3   	movff	btemp+8,plusw1
 26636  01870E  0EFD               	movlw	-3
 26637  018710  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26638  018716  0EFE               	movlw	-2
 26639  018718  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26640  01871E  0EFF               	movlw	-1
 26641  018720  0060  F033  FFE3   	movff	btemp+11,plusw1
 26642                           
 26643                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26644                           ;stkvar	_bn @ sp[(-4)+-5]
 26645  018726  0EF7               	movlw	-9
 26646  018728  50E3               	movf	plusw1,w,c
 26647  01872A  0D04               	mullw	4
 26648  01872C  0E00               	movlw	low lp_filter@smooth
 26649  01872E  24F3               	addwf	243,w,c
 26650  018730  6ED9               	movwf	fsr2l,c
 26651  018732  0E02               	movlw	high lp_filter@smooth
 26652  018734  20F4               	addwfc	prodh,w,c
 26653  018736  6EDA               	movwf	fsr2h,c
 26654  018738  006F FF7B FFE6     	movff	postinc2,postinc1
 26655  01873E  006F FF7B FFE6     	movff	postinc2,postinc1
 26656  018744  006F FF7B FFE6     	movff	postinc2,postinc1
 26657  01874A  006F FF7B FFE6     	movff	postinc2,postinc1
 26658                           
 26659                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26660  018750  0EF8               	movlw	-8
 26661  018752  006F FF8F FFE6     	movff	plusw1,postinc1
 26662  018758  006F FF8F FFE6     	movff	plusw1,postinc1
 26663  01875E  006F FF8F FFE6     	movff	plusw1,postinc1
 26664  018764  006F FF8F FFE6     	movff	plusw1,postinc1
 26665                           
 26666                           ;stkvar	_bn @ sp[(-12)+-5]
 26667  01876A  0EEF               	movlw	-17
 26668  01876C  50E3               	movf	plusw1,w,c
 26669  01876E  0D04               	mullw	4
 26670  018770  0E00               	movlw	low lp_filter@smooth
 26671  018772  24F3               	addwf	243,w,c
 26672  018774  6ED9               	movwf	fsr2l,c
 26673  018776  0E02               	movlw	high lp_filter@smooth
 26674  018778  20F4               	addwfc	prodh,w,c
 26675  01877A  6EDA               	movwf	fsr2h,c
 26676  01877C  006F FF7B FFE6     	movff	postinc2,postinc1
 26677  018782  006F FF7B FFE6     	movff	postinc2,postinc1
 26678  018788  006F FF7B FFE6     	movff	postinc2,postinc1
 26679  01878E  006F FF7B FFE6     	movff	postinc2,postinc1
 26680                           
 26681                           ;stkvar	_new @ sp[(-16)+-4]
 26682  018794  0EEC               	movlw	-20
 26683  018796  006F FF8F FFE6     	movff	plusw1,postinc1
 26684  01879C  006F FF8F FFE6     	movff	plusw1,postinc1
 26685  0187A2  006F FF8F FFE6     	movff	plusw1,postinc1
 26686  0187A8  006F FF8F FFE6     	movff	plusw1,postinc1
 26687  0187AE  ECBF  F0DA         	call	___flsub	;wreg free
 26688  0187B2  0060  F007  FFE6   	movff	btemp,postinc1
 26689  0187B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26690  0187BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26691  0187C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26692  0187CA  ECC1  F09E         	call	___flmul	;wreg free
 26693  0187CE  0060  F007  FFE6   	movff	btemp,postinc1
 26694  0187D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26695  0187DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26696  0187E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26697  0187E6  ECD6  F0A2         	call	___fladd	;wreg free
 26698                           
 26699                           ;stkvar	_bn @ sp[(-4)+-5]
 26700  0187EA  0EF7               	movlw	-9
 26701  0187EC  50E3               	movf	plusw1,w,c
 26702  0187EE  0D04               	mullw	4
 26703  0187F0  0E00               	movlw	low lp_filter@smooth
 26704  0187F2  24F3               	addwf	243,w,c
 26705  0187F4  6ED9               	movwf	fsr2l,c
 26706  0187F6  0E02               	movlw	high lp_filter@smooth
 26707  0187F8  20F4               	addwfc	prodh,w,c
 26708  0187FA  6EDA               	movwf	fsr2h,c
 26709  0187FC  0060  F007  FFDE   	movff	btemp,postinc2
 26710  018802  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26711  018808  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26712  01880E  0060  F013  FFDD   	movff	btemp+3,postdec2
 26713  018814  52DD               	movf	postdec2,f,c
 26714  018816  52DD               	movf	postdec2,f,c
 26715  018818  006F FF78  F001    	movff	postinc2,btemp
 26716  01881E  006F FF78  F002    	movff	postinc2,btemp+1
 26717  018824  006F FF78  F003    	movff	postinc2,btemp+2
 26718  01882A  006F FF78  F004    	movff	postinc2,btemp+3
 26719  018830                     l1832:
 26720                           
 26721                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26722  018830  0EF6               	movlw	246
 26723  018832  26E1               	addwf	fsr1l,f,c
 26724  018834  0EFF               	movlw	255
 26725  018836  22E2               	addwfc	fsr1h,f,c
 26726  018838  0012               	return		;funcret
 26727  01883A                     __end_of_lp_filter:
 26728                           	opt callstack 0
 26729                           
 26730 ;; *************** function ___flsub *****************
 26731 ;; Defined at:
 26732 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26733 ;; Parameters:    Size  Location     Type
 26734 ;;  b               4  [STACK] float 
 26735 ;;  a               4  [STACK] float 
 26736 ;; Auto vars:     Size  Location     Type
 26737 ;;		None
 26738 ;; Return value:  Size  Location     Type
 26739 ;;                  4  [STACK] float 
 26740 ;; Registers used:
 26741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26742 ;; Tracked objects:
 26743 ;;		On entry : 0/0
 26744 ;;		On exit  : 0/0
 26745 ;;		Unchanged: 0/0
 26746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26751 ;;Total ram usage:        0 bytes
 26752 ;; Hardware stack levels used:    1
 26753 ;; Hardware stack levels required when called:   16
 26754 ;; This function calls:
 26755 ;;		___fladd
 26756 ;; This function is called by:
 26757 ;;		_conv_raw_result
 26758 ;;		_lp_filter
 26759 ;;		_calc_model_data
 26760 ;;		_calc_ror_data
 26761 ;;		_esr_check
 26762 ;;		_efgtoa
 26763 ;; This function uses a reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text106
 26767  01B57E                     __ptext106:
 26768                           	opt callstack 0
 26769  01B57E                     ___flsub:
 26770                           	opt callstack 0
 26771                           
 26772                           ;stkvar	_a @ sp[(0)+-8]
 26773                           
 26774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26775                           ;incstack = 0
 26776 ;; hardware stack exceeded
 26777  01B57E  0EFB               	movlw	-5
 26778  01B580  7EE3               	btg	plusw1,7,c
 26779                           
 26780                           ;stkvar	_a @ sp[(0)+-8]
 26781  01B582  0EF8               	movlw	-8
 26782  01B584  006F FF8F FFE6     	movff	plusw1,postinc1
 26783  01B58A  006F FF8F FFE6     	movff	plusw1,postinc1
 26784  01B590  006F FF8F FFE6     	movff	plusw1,postinc1
 26785  01B596  006F FF8F FFE6     	movff	plusw1,postinc1
 26786                           
 26787                           ;stkvar	_b @ sp[(-4)+-4]
 26788  01B59C  0EF8               	movlw	-8
 26789  01B59E  006F FF8F FFE6     	movff	plusw1,postinc1
 26790  01B5A4  006F FF8F FFE6     	movff	plusw1,postinc1
 26791  01B5AA  006F FF8F FFE6     	movff	plusw1,postinc1
 26792  01B5B0  006F FF8F FFE6     	movff	plusw1,postinc1
 26793  01B5B6  ECD6  F0A2         	call	___fladd	;wreg free
 26794                           
 26795                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26796  01B5BA  0EF8               	movlw	248
 26797  01B5BC  26E1               	addwf	fsr1l,f,c
 26798  01B5BE  0EFF               	movlw	255
 26799  01B5C0  22E2               	addwfc	fsr1h,f,c
 26800  01B5C2  0012               	return		;funcret
 26801  01B5C4                     __end_of___flsub:
 26802                           	opt callstack 0
 26803                           
 26804 ;; *************** function ___fladd *****************
 26805 ;; Defined at:
 26806 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26807 ;; Parameters:    Size  Location     Type
 26808 ;;  b               4  [STACK] float 
 26809 ;;  a               4  [STACK] float 
 26810 ;; Auto vars:     Size  Location     Type
 26811 ;;  grs             1  [STACK] unsigned char 
 26812 ;;  bexp            1  [STACK] unsigned char 
 26813 ;;  aexp            1  [STACK] unsigned char 
 26814 ;;  signs           1  [STACK] unsigned char 
 26815 ;; Return value:  Size  Location     Type
 26816 ;;                  4  [STACK] unsigned char 
 26817 ;; Registers used:
 26818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26819 ;; Tracked objects:
 26820 ;;		On entry : 0/0
 26821 ;;		On exit  : 0/0
 26822 ;;		Unchanged: 0/0
 26823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26828 ;;Total ram usage:        0 bytes
 26829 ;; Hardware stack levels used:    1
 26830 ;; Hardware stack levels required when called:   15
 26831 ;; This function calls:
 26832 ;;		Nothing
 26833 ;; This function is called by:
 26834 ;;		_main
 26835 ;;		_conv_raw_result
 26836 ;;		_lp_filter
 26837 ;;		_calc_model_data
 26838 ;;		_efgtoa
 26839 ;;		___asfladd
 26840 ;;		___flsub
 26841 ;; This function uses a reentrant model
 26842 ;;
 26843                           
 26844                           	psect	text107
 26845  0145AC                     __ptext107:
 26846                           	opt callstack 0
 26847  0145AC                     ___fladd:
 26848                           	opt callstack 0
 26849                           
 26850                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26851  0145AC  52E6               	movf	postinc1,f,c
 26852  0145AE  52E6               	movf	postinc1,f,c
 26853  0145B0  52E6               	movf	postinc1,f,c
 26854  0145B2  52E6               	movf	postinc1,f,c
 26855                           
 26856                           ;stkvar	_b @ sp[(-4)+-4]
 26857                           
 26858                           ;incstack = 0
 26859 ;; hardware stack exceeded
 26860  0145B4  0EFB               	movlw	251
 26861  0145B6  24E1               	addwf	fsr1l,w,c
 26862  0145B8  6ED9               	movwf	fsr2l,c
 26863  0145BA  0EFF               	movlw	255
 26864  0145BC  20E2               	addwfc	fsr1h,w,c
 26865  0145BE  6EDA               	movwf	fsr2h,c
 26866  0145C0  50DF               	movf	indf2,w,c
 26867  0145C2  6E0C               	movwf	(btemp+11)^0,c
 26868  0145C4  0E80               	movlw	128
 26869  0145C6  160C               	andwf	(btemp+11)^0,f,c
 26870                           
 26871                           ;stkvar	_signs @ sp[(-4)+3]
 26872  0145C8  0EFF               	movlw	-1
 26873  0145CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26874                           
 26875                           ;stkvar	_b @ sp[(-4)+-4]
 26876  0145D0  0EFB               	movlw	251
 26877  0145D2  24E1               	addwf	fsr1l,w,c
 26878  0145D4  6ED9               	movwf	fsr2l,c
 26879  0145D6  0EFF               	movlw	255
 26880  0145D8  20E2               	addwfc	fsr1h,w,c
 26881  0145DA  6EDA               	movwf	fsr2h,c
 26882  0145DC  50DF               	movf	indf2,w,c
 26883  0145DE  6E0C               	movwf	(btemp+11)^0,c
 26884  0145E0  90D8               	bcf	status,0,c
 26885  0145E2  340C               	rlcf	(btemp+11)^0,w,c
 26886  0145E4  6E0B               	movwf	(btemp+10)^0,c
 26887                           
 26888                           ;stkvar	_bexp @ sp[(-4)+1]
 26889  0145E6  0EFD               	movlw	-3
 26890  0145E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26891                           
 26892                           ;stkvar	_b @ sp[(-4)+-4]
 26893  0145EE  0EFA               	movlw	250
 26894  0145F0  24E1               	addwf	fsr1l,w,c
 26895  0145F2  6ED9               	movwf	fsr2l,c
 26896  0145F4  0EFF               	movlw	255
 26897  0145F6  20E2               	addwfc	fsr1h,w,c
 26898  0145F8  6EDA               	movwf	fsr2h,c
 26899  0145FA  AEDF               	btfss	indf2,7,c
 26900  0145FC  D002               	goto	l7718
 26901                           
 26902                           ;stkvar	_bexp @ sp[(-4)+1]
 26903  0145FE  0EFD               	movlw	-3
 26904  014600  80E3               	bsf	plusw1,0,c
 26905  014602                     l7718:
 26906                           
 26907                           ;stkvar	_bexp @ sp[(-4)+1]
 26908  014602  0EFD               	movlw	-3
 26909  014604  50E3               	movf	plusw1,w,c
 26910  014606  B4D8               	btfsc	status,2,c
 26911  014608  D027               	goto	l7728
 26912                           
 26913                           ;stkvar	_bexp @ sp[(-4)+1]
 26914  01460A  0EFD               	movlw	-3
 26915  01460C  28E3               	incf	plusw1,w,c
 26916  01460E  A4D8               	btfss	status,2,c
 26917  014610  D018               	goto	l7724
 26918  014612  0E00               	movlw	0
 26919  014614  6E09               	movwf	(btemp+8)^0,c
 26920  014616  0E00               	movlw	0
 26921  014618  6E0A               	movwf	(btemp+9)^0,c
 26922  01461A  0E00               	movlw	0
 26923  01461C  6E0B               	movwf	(btemp+10)^0,c
 26924  01461E  0E00               	movlw	0
 26925  014620  6E0C               	movwf	(btemp+11)^0,c
 26926                           
 26927                           ;stkvar	_b @ sp[(-4)+-4]
 26928  014622  0EF8               	movlw	-8
 26929  014624  0060  F027  FFE3   	movff	btemp+8,plusw1
 26930  01462A  0EF9               	movlw	-7
 26931  01462C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26932  014632  0EFA               	movlw	-6
 26933  014634  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26934  01463A  0EFB               	movlw	-5
 26935  01463C  0060  F033  FFE3   	movff	btemp+11,plusw1
 26936  014642                     l7724:
 26937                           
 26938                           ;stkvar	_b @ sp[(-4)+-4]
 26939  014642  0EFA               	movlw	-6
 26940  014644  8EE3               	bsf	plusw1,7,c
 26941                           
 26942                           ;stkvar	_b @ sp[(-4)+-4]
 26943  014646  0EFB               	movlw	251
 26944  014648  24E1               	addwf	fsr1l,w,c
 26945  01464A  6ED9               	movwf	fsr2l,c
 26946  01464C  0EFF               	movlw	255
 26947  01464E  20E2               	addwfc	fsr1h,w,c
 26948  014650  6EDA               	movwf	fsr2h,c
 26949  014652  0E00               	movlw	0
 26950  014654  6EDF               	movwf	indf2,c
 26951  014656  D018               	goto	l7730
 26952  014658                     l7728:
 26953  014658  0E00               	movlw	0
 26954  01465A  6E09               	movwf	(btemp+8)^0,c
 26955  01465C  0E00               	movlw	0
 26956  01465E  6E0A               	movwf	(btemp+9)^0,c
 26957  014660  0E00               	movlw	0
 26958  014662  6E0B               	movwf	(btemp+10)^0,c
 26959  014664  0E00               	movlw	0
 26960  014666  6E0C               	movwf	(btemp+11)^0,c
 26961                           
 26962                           ;stkvar	_b @ sp[(-4)+-4]
 26963  014668  0EF8               	movlw	-8
 26964  01466A  0060  F027  FFE3   	movff	btemp+8,plusw1
 26965  014670  0EF9               	movlw	-7
 26966  014672  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26967  014678  0EFA               	movlw	-6
 26968  01467A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26969  014680  0EFB               	movlw	-5
 26970  014682  0060  F033  FFE3   	movff	btemp+11,plusw1
 26971  014688                     l7730:
 26972                           
 26973                           ;stkvar	_a @ sp[(-4)+-8]
 26974  014688  0EF7               	movlw	247
 26975  01468A  24E1               	addwf	fsr1l,w,c
 26976  01468C  6ED9               	movwf	fsr2l,c
 26977  01468E  0EFF               	movlw	255
 26978  014690  20E2               	addwfc	fsr1h,w,c
 26979  014692  6EDA               	movwf	fsr2h,c
 26980  014694  50DF               	movf	indf2,w,c
 26981  014696  6E0C               	movwf	(btemp+11)^0,c
 26982  014698  0E80               	movlw	128
 26983  01469A  160C               	andwf	(btemp+11)^0,f,c
 26984                           
 26985                           ;stkvar	_aexp @ sp[(-4)+2]
 26986  01469C  0EFE               	movlw	-2
 26987  01469E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26988                           
 26989                           ;stkvar	_signs @ sp[(-4)+3]
 26990                           ;stkvar	_aexp @ sp[(-4)+2]
 26991  0146A4  50E1               	movf	fsr1l,w,c
 26992  0146A6  0FFE               	addlw	-2
 26993  0146A8  6ED9               	movwf	fsr2l,c
 26994  0146AA  50E2               	movf	fsr1h,w,c
 26995  0146AC  6EDA               	movwf	fsr2h,c
 26996  0146AE  0EFF               	movlw	255
 26997  0146B0  22DA               	addwfc	fsr2h,f,c
 26998  0146B2  0EFF               	movlw	-1
 26999  0146B4  50E3               	movf	plusw1,w,c
 27000  0146B6  18DE               	xorwf	postinc2,w,c
 27001  0146B8  B4D8               	btfsc	status,2,c
 27002  0146BA  D002               	goto	l7736
 27003                           
 27004                           ;stkvar	_signs @ sp[(-4)+3]
 27005  0146BC  0EFF               	movlw	-1
 27006  0146BE  8CE3               	bsf	plusw1,6,c
 27007  0146C0                     l7736:
 27008                           
 27009                           ;stkvar	_a @ sp[(-4)+-8]
 27010  0146C0  0EF7               	movlw	247
 27011  0146C2  24E1               	addwf	fsr1l,w,c
 27012  0146C4  6ED9               	movwf	fsr2l,c
 27013  0146C6  0EFF               	movlw	255
 27014  0146C8  20E2               	addwfc	fsr1h,w,c
 27015  0146CA  6EDA               	movwf	fsr2h,c
 27016  0146CC  50DF               	movf	indf2,w,c
 27017  0146CE  6E0C               	movwf	(btemp+11)^0,c
 27018  0146D0  90D8               	bcf	status,0,c
 27019  0146D2  340C               	rlcf	(btemp+11)^0,w,c
 27020  0146D4  6E0B               	movwf	(btemp+10)^0,c
 27021                           
 27022                           ;stkvar	_aexp @ sp[(-4)+2]
 27023  0146D6  0EFE               	movlw	-2
 27024  0146D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27025                           
 27026                           ;stkvar	_a @ sp[(-4)+-8]
 27027  0146DE  0EF6               	movlw	246
 27028  0146E0  24E1               	addwf	fsr1l,w,c
 27029  0146E2  6ED9               	movwf	fsr2l,c
 27030  0146E4  0EFF               	movlw	255
 27031  0146E6  20E2               	addwfc	fsr1h,w,c
 27032  0146E8  6EDA               	movwf	fsr2h,c
 27033  0146EA  AEDF               	btfss	indf2,7,c
 27034  0146EC  D002               	goto	l7742
 27035                           
 27036                           ;stkvar	_aexp @ sp[(-4)+2]
 27037  0146EE  0EFE               	movlw	-2
 27038  0146F0  80E3               	bsf	plusw1,0,c
 27039  0146F2                     l7742:
 27040                           
 27041                           ;stkvar	_aexp @ sp[(-4)+2]
 27042  0146F2  0EFE               	movlw	-2
 27043  0146F4  50E3               	movf	plusw1,w,c
 27044  0146F6  B4D8               	btfsc	status,2,c
 27045  0146F8  D027               	goto	l7752
 27046                           
 27047                           ;stkvar	_aexp @ sp[(-4)+2]
 27048  0146FA  0EFE               	movlw	-2
 27049  0146FC  28E3               	incf	plusw1,w,c
 27050  0146FE  A4D8               	btfss	status,2,c
 27051  014700  D018               	goto	l7748
 27052  014702  0E00               	movlw	0
 27053  014704  6E09               	movwf	(btemp+8)^0,c
 27054  014706  0E00               	movlw	0
 27055  014708  6E0A               	movwf	(btemp+9)^0,c
 27056  01470A  0E00               	movlw	0
 27057  01470C  6E0B               	movwf	(btemp+10)^0,c
 27058  01470E  0E00               	movlw	0
 27059  014710  6E0C               	movwf	(btemp+11)^0,c
 27060                           
 27061                           ;stkvar	_a @ sp[(-4)+-8]
 27062  014712  0EF4               	movlw	-12
 27063  014714  0060  F027  FFE3   	movff	btemp+8,plusw1
 27064  01471A  0EF5               	movlw	-11
 27065  01471C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27066  014722  0EF6               	movlw	-10
 27067  014724  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27068  01472A  0EF7               	movlw	-9
 27069  01472C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27070  014732                     l7748:
 27071                           
 27072                           ;stkvar	_a @ sp[(-4)+-8]
 27073  014732  0EF6               	movlw	-10
 27074  014734  8EE3               	bsf	plusw1,7,c
 27075                           
 27076                           ;stkvar	_a @ sp[(-4)+-8]
 27077  014736  0EF7               	movlw	247
 27078  014738  24E1               	addwf	fsr1l,w,c
 27079  01473A  6ED9               	movwf	fsr2l,c
 27080  01473C  0EFF               	movlw	255
 27081  01473E  20E2               	addwfc	fsr1h,w,c
 27082  014740  6EDA               	movwf	fsr2h,c
 27083  014742  0E00               	movlw	0
 27084  014744  6EDF               	movwf	indf2,c
 27085  014746  D018               	goto	l7754
 27086  014748                     l7752:
 27087  014748  0E00               	movlw	0
 27088  01474A  6E09               	movwf	(btemp+8)^0,c
 27089  01474C  0E00               	movlw	0
 27090  01474E  6E0A               	movwf	(btemp+9)^0,c
 27091  014750  0E00               	movlw	0
 27092  014752  6E0B               	movwf	(btemp+10)^0,c
 27093  014754  0E00               	movlw	0
 27094  014756  6E0C               	movwf	(btemp+11)^0,c
 27095                           
 27096                           ;stkvar	_a @ sp[(-4)+-8]
 27097  014758  0EF4               	movlw	-12
 27098  01475A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27099  014760  0EF5               	movlw	-11
 27100  014762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27101  014768  0EF6               	movlw	-10
 27102  01476A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27103  014770  0EF7               	movlw	-9
 27104  014772  0060  F033  FFE3   	movff	btemp+11,plusw1
 27105  014778                     l7754:
 27106                           
 27107                           ;stkvar	_bexp @ sp[(-4)+1]
 27108                           ;stkvar	_aexp @ sp[(-4)+2]
 27109  014778  50E1               	movf	fsr1l,w,c
 27110  01477A  0FFE               	addlw	-2
 27111  01477C  6ED9               	movwf	fsr2l,c
 27112  01477E  50E2               	movf	fsr1h,w,c
 27113  014780  6EDA               	movwf	fsr2h,c
 27114  014782  0EFF               	movlw	255
 27115  014784  22DA               	addwfc	fsr2h,f,c
 27116  014786  0EFD               	movlw	-3
 27117  014788  50E3               	movf	plusw1,w,c
 27118  01478A  5CDE               	subwf	postinc2,w,c
 27119  01478C  B0D8               	btfsc	status,0,c
 27120  01478E  D0A4               	goto	l7790
 27121                           
 27122                           ;stkvar	_signs @ sp[(-4)+3]
 27123  014790  0EFF               	movlw	-1
 27124  014792  ACE3               	btfss	plusw1,6,c
 27125  014794  D002               	goto	l7760
 27126                           
 27127                           ;stkvar	_signs @ sp[(-4)+3]
 27128  014796  0EFF               	movlw	-1
 27129  014798  7EE3               	btg	plusw1,7,c
 27130  01479A                     l7760:
 27131                           
 27132                           ;stkvar	_bexp @ sp[(-4)+1]
 27133                           ;stkvar	_grs @ sp[(-4)+0]
 27134  01479A  0EFD               	movlw	-3
 27135  01479C  006F FF8C  F001    	movff	plusw1,btemp
 27136  0147A2  0EFC               	movlw	-4
 27137  0147A4  0060  F007  FFE3   	movff	btemp,plusw1
 27138                           
 27139                           ;stkvar	_aexp @ sp[(-4)+2]
 27140                           ;stkvar	_bexp @ sp[(-4)+1]
 27141  0147AA  0EFE               	movlw	-2
 27142  0147AC  006F FF8C  F001    	movff	plusw1,btemp
 27143  0147B2  0EFD               	movlw	-3
 27144  0147B4  0060  F007  FFE3   	movff	btemp,plusw1
 27145                           
 27146                           ;stkvar	_grs @ sp[(-4)+0]
 27147                           ;stkvar	_aexp @ sp[(-4)+2]
 27148  0147BA  0EFC               	movlw	-4
 27149  0147BC  006F FF8C  F001    	movff	plusw1,btemp
 27150  0147C2  0EFE               	movlw	-2
 27151  0147C4  0060  F007  FFE3   	movff	btemp,plusw1
 27152                           
 27153                           ;stkvar	_b @ sp[(-4)+-4]
 27154                           ;stkvar	_grs @ sp[(-4)+0]
 27155  0147CA  0EF8               	movlw	-8
 27156  0147CC  006F FF8C  F001    	movff	plusw1,btemp
 27157  0147D2  0EFC               	movlw	-4
 27158  0147D4  0060  F007  FFE3   	movff	btemp,plusw1
 27159                           
 27160                           ;stkvar	_a @ sp[(-4)+-8]
 27161                           ;stkvar	_b @ sp[(-4)+-4]
 27162  0147DA  0EF4               	movlw	-12
 27163  0147DC  006F FF8C  F001    	movff	plusw1,btemp
 27164  0147E2  0EF8               	movlw	-8
 27165  0147E4  0060  F007  FFE3   	movff	btemp,plusw1
 27166                           
 27167                           ;stkvar	_grs @ sp[(-4)+0]
 27168                           ;stkvar	_a @ sp[(-4)+-8]
 27169  0147EA  0EFC               	movlw	-4
 27170  0147EC  006F FF8C  F001    	movff	plusw1,btemp
 27171  0147F2  0EF4               	movlw	-12
 27172  0147F4  0060  F007  FFE3   	movff	btemp,plusw1
 27173                           
 27174                           ;stkvar	_b @ sp[(-4)+-4]
 27175  0147FA  0EF9               	movlw	249
 27176  0147FC  24E1               	addwf	fsr1l,w,c
 27177  0147FE  6ED9               	movwf	fsr2l,c
 27178  014800  0EFF               	movlw	255
 27179  014802  20E2               	addwfc	fsr1h,w,c
 27180  014804  6EDA               	movwf	fsr2h,c
 27181  014806  50DF               	movf	indf2,w,c
 27182  014808  6E0C               	movwf	(btemp+11)^0,c
 27183                           
 27184                           ;stkvar	_grs @ sp[(-4)+0]
 27185  01480A  0EFC               	movlw	-4
 27186  01480C  0060  F033  FFE3   	movff	btemp+11,plusw1
 27187                           
 27188                           ;stkvar	_a @ sp[(-4)+-8]
 27189  014812  0EF5               	movlw	245
 27190  014814  24E1               	addwf	fsr1l,w,c
 27191  014816  6ED9               	movwf	fsr2l,c
 27192  014818  0EFF               	movlw	255
 27193  01481A  20E2               	addwfc	fsr1h,w,c
 27194  01481C  6EDA               	movwf	fsr2h,c
 27195                           
 27196                           ;stkvar	_b @ sp[(-4)+-4]
 27197  01481E  0EF9               	movlw	249
 27198  014820  24E1               	addwf	fsr1l,w,c
 27199  014822  6EE9               	movwf	fsr0l,c
 27200  014824  0EFF               	movlw	255
 27201  014826  20E2               	addwfc	fsr1h,w,c
 27202  014828  6EEA               	movwf	fsr0h,c
 27203  01482A  006F FF7F FFEF     	movff	indf2,indf0
 27204                           
 27205                           ;stkvar	_grs @ sp[(-4)+0]
 27206                           ;stkvar	_a @ sp[(-4)+-8]
 27207  014830  0EF5               	movlw	245
 27208  014832  24E1               	addwf	fsr1l,w,c
 27209  014834  6ED9               	movwf	fsr2l,c
 27210  014836  0EFF               	movlw	255
 27211  014838  20E2               	addwfc	fsr1h,w,c
 27212  01483A  6EDA               	movwf	fsr2h,c
 27213  01483C  0EFC               	movlw	-4
 27214  01483E  006F FF8F FFDF     	movff	plusw1,indf2
 27215                           
 27216                           ;stkvar	_b @ sp[(-4)+-4]
 27217  014844  0EFA               	movlw	250
 27218  014846  24E1               	addwf	fsr1l,w,c
 27219  014848  6ED9               	movwf	fsr2l,c
 27220  01484A  0EFF               	movlw	255
 27221  01484C  20E2               	addwfc	fsr1h,w,c
 27222  01484E  6EDA               	movwf	fsr2h,c
 27223  014850  50DF               	movf	indf2,w,c
 27224  014852  6E0C               	movwf	(btemp+11)^0,c
 27225                           
 27226                           ;stkvar	_grs @ sp[(-4)+0]
 27227  014854  0EFC               	movlw	-4
 27228  014856  0060  F033  FFE3   	movff	btemp+11,plusw1
 27229                           
 27230                           ;stkvar	_a @ sp[(-4)+-8]
 27231  01485C  0EF6               	movlw	246
 27232  01485E  24E1               	addwf	fsr1l,w,c
 27233  014860  6ED9               	movwf	fsr2l,c
 27234  014862  0EFF               	movlw	255
 27235  014864  20E2               	addwfc	fsr1h,w,c
 27236  014866  6EDA               	movwf	fsr2h,c
 27237                           
 27238                           ;stkvar	_b @ sp[(-4)+-4]
 27239  014868  0EFA               	movlw	250
 27240  01486A  24E1               	addwf	fsr1l,w,c
 27241  01486C  6EE9               	movwf	fsr0l,c
 27242  01486E  0EFF               	movlw	255
 27243  014870  20E2               	addwfc	fsr1h,w,c
 27244  014872  6EEA               	movwf	fsr0h,c
 27245  014874  006F FF7F FFEF     	movff	indf2,indf0
 27246                           
 27247                           ;stkvar	_grs @ sp[(-4)+0]
 27248                           ;stkvar	_a @ sp[(-4)+-8]
 27249  01487A  0EF6               	movlw	246
 27250  01487C  24E1               	addwf	fsr1l,w,c
 27251  01487E  6ED9               	movwf	fsr2l,c
 27252  014880  0EFF               	movlw	255
 27253  014882  20E2               	addwfc	fsr1h,w,c
 27254  014884  6EDA               	movwf	fsr2h,c
 27255  014886  0EFC               	movlw	-4
 27256  014888  006F FF8F FFDF     	movff	plusw1,indf2
 27257                           
 27258                           ;stkvar	_b @ sp[(-4)+-4]
 27259  01488E  0EFB               	movlw	251
 27260  014890  24E1               	addwf	fsr1l,w,c
 27261  014892  6ED9               	movwf	fsr2l,c
 27262  014894  0EFF               	movlw	255
 27263  014896  20E2               	addwfc	fsr1h,w,c
 27264  014898  6EDA               	movwf	fsr2h,c
 27265  01489A  50DF               	movf	indf2,w,c
 27266  01489C  6E0C               	movwf	(btemp+11)^0,c
 27267                           
 27268                           ;stkvar	_grs @ sp[(-4)+0]
 27269  01489E  0EFC               	movlw	-4
 27270  0148A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27271                           
 27272                           ;stkvar	_a @ sp[(-4)+-8]
 27273  0148A6  0EF7               	movlw	247
 27274  0148A8  24E1               	addwf	fsr1l,w,c
 27275  0148AA  6ED9               	movwf	fsr2l,c
 27276  0148AC  0EFF               	movlw	255
 27277  0148AE  20E2               	addwfc	fsr1h,w,c
 27278  0148B0  6EDA               	movwf	fsr2h,c
 27279                           
 27280                           ;stkvar	_b @ sp[(-4)+-4]
 27281  0148B2  0EFB               	movlw	251
 27282  0148B4  24E1               	addwf	fsr1l,w,c
 27283  0148B6  6EE9               	movwf	fsr0l,c
 27284  0148B8  0EFF               	movlw	255
 27285  0148BA  20E2               	addwfc	fsr1h,w,c
 27286  0148BC  6EEA               	movwf	fsr0h,c
 27287  0148BE  006F FF7F FFEF     	movff	indf2,indf0
 27288                           
 27289                           ;stkvar	_grs @ sp[(-4)+0]
 27290                           ;stkvar	_a @ sp[(-4)+-8]
 27291  0148C4  0EF7               	movlw	247
 27292  0148C6  24E1               	addwf	fsr1l,w,c
 27293  0148C8  6ED9               	movwf	fsr2l,c
 27294  0148CA  0EFF               	movlw	255
 27295  0148CC  20E2               	addwfc	fsr1h,w,c
 27296  0148CE  6EDA               	movwf	fsr2h,c
 27297  0148D0  0EFC               	movlw	-4
 27298  0148D2  006F FF8F FFDF     	movff	plusw1,indf2
 27299  0148D8                     l7790:
 27300                           
 27301                           ;stkvar	_grs @ sp[(-4)+0]
 27302  0148D8  0EFC               	movlw	-4
 27303  0148DA  6AE3               	clrf	plusw1,c
 27304                           
 27305                           ;stkvar	_aexp @ sp[(-4)+2]
 27306  0148DC  0EFE               	movlw	-2
 27307  0148DE  50E3               	movf	plusw1,w,c
 27308  0148E0  6E0B               	movwf	(btemp+10)^0,c
 27309  0148E2  6A0C               	clrf	(btemp+11)^0,c
 27310                           
 27311                           ;stkvar	_bexp @ sp[(-4)+1]
 27312  0148E4  0EFD               	movlw	-3
 27313  0148E6  50E3               	movf	plusw1,w,c
 27314  0148E8  5E0B               	subwf	(btemp+10)^0,f,c
 27315  0148EA  0E00               	movlw	0
 27316  0148EC  5A0C               	subwfb	(btemp+11)^0,f,c
 27317  0148EE  BE0C               	btfsc	(btemp+11)^0,7,c
 27318  0148F0  D062               	goto	l7814
 27319  0148F2  500C               	movf	(btemp+11)^0,w,c
 27320  0148F4  E104               	bnz	u5540
 27321  0148F6  0E1A               	movlw	26
 27322  0148F8  5C0B               	subwf	(btemp+10)^0,w,c
 27323  0148FA  A0D8               	btfss	status,0,c
 27324  0148FC  D05C               	goto	l7814
 27325  0148FE                     u5540:
 27326                           
 27327                           ;stkvar	_b @ sp[(-4)+-4]
 27328  0148FE  0EF8               	movlw	-8
 27329  014900  50E3               	movf	plusw1,w,c
 27330  014902  E10A               	bnz	u5551
 27331  014904  0EF9               	movlw	-7
 27332  014906  50E3               	movf	plusw1,w,c
 27333  014908  E107               	bnz	u5551
 27334  01490A  0EFA               	movlw	-6
 27335  01490C  50E3               	movf	plusw1,w,c
 27336  01490E  E104               	bnz	u5551
 27337  014910  0EFB               	movlw	-5
 27338  014912  50E3               	movf	plusw1,w,c
 27339  014914  B4D8               	btfsc	status,2,c
 27340  014916  D003               	goto	u5550
 27341  014918                     u5551:
 27342  014918  6A0C               	clrf	(btemp+11)^0,c
 27343  01491A  2A0C               	incf	(btemp+11)^0,f,c
 27344  01491C  D001               	goto	u5568
 27345  01491E                     u5550:
 27346  01491E  6A0C               	clrf	(btemp+11)^0,c
 27347  014920                     u5568:
 27348                           
 27349                           ;stkvar	_grs @ sp[(-4)+0]
 27350  014920  0EFC               	movlw	-4
 27351  014922  0060  F033  FFE3   	movff	btemp+11,plusw1
 27352                           
 27353                           ;stkvar	_b @ sp[(-4)+-4]
 27354  014928  0EF8               	movlw	-8
 27355  01492A  6AE3               	clrf	plusw1,c
 27356  01492C  0EF9               	movlw	-7
 27357  01492E  6AE3               	clrf	plusw1,c
 27358  014930  0EFA               	movlw	-6
 27359  014932  6AE3               	clrf	plusw1,c
 27360  014934  0EFB               	movlw	-5
 27361  014936  6AE3               	clrf	plusw1,c
 27362                           
 27363                           ;stkvar	_aexp @ sp[(-4)+2]
 27364                           ;stkvar	_bexp @ sp[(-4)+1]
 27365  014938  0EFE               	movlw	-2
 27366  01493A  006F FF8C  F001    	movff	plusw1,btemp
 27367  014940  0EFD               	movlw	-3
 27368  014942  0060  F007  FFE3   	movff	btemp,plusw1
 27369  014948  D042               	goto	u5600
 27370  01494A                     l7800:
 27371                           
 27372                           ;stkvar	_grs @ sp[(-4)+0]
 27373  01494A  0EFC               	movlw	-4
 27374  01494C  A0E3               	btfss	plusw1,0,c
 27375  01494E  D00D               	goto	l7804
 27376                           
 27377                           ;stkvar	_grs @ sp[(-4)+0]
 27378  014950  0EFC               	movlw	-4
 27379  014952  006F FF8C  F00C    	movff	plusw1,btemp+11
 27380  014958  90D8               	bcf	status,0,c
 27381  01495A  320C               	rrcf	(btemp+11)^0,f,c
 27382  01495C  0E01               	movlw	1
 27383  01495E  120C               	iorwf	(btemp+11)^0,f,c
 27384                           
 27385                           ;stkvar	_grs @ sp[(-4)+0]
 27386  014960  0EFC               	movlw	-4
 27387  014962  0060  F033  FFE3   	movff	btemp+11,plusw1
 27388  014968  D009               	goto	l7806
 27389  01496A                     l7804:
 27390                           
 27391                           ;stkvar	_grs @ sp[(-4)+0]
 27392  01496A  50E1               	movf	fsr1l,w,c
 27393  01496C  0FFC               	addlw	-4
 27394  01496E  6ED9               	movwf	fsr2l,c
 27395  014970  50E2               	movf	fsr1h,w,c
 27396  014972  6EDA               	movwf	fsr2h,c
 27397  014974  0EFF               	movlw	255
 27398  014976  22DA               	addwfc	fsr2h,f,c
 27399  014978  90D8               	bcf	status,0,c
 27400  01497A  32DF               	rrcf	indf2,f,c
 27401  01497C                     l7806:
 27402                           
 27403                           ;stkvar	_b @ sp[(-4)+-4]
 27404  01497C  0EF8               	movlw	-8
 27405  01497E  A0E3               	btfss	plusw1,0,c
 27406  014980  D002               	goto	l7810
 27407                           
 27408                           ;stkvar	_grs @ sp[(-4)+0]
 27409  014982  0EFC               	movlw	-4
 27410  014984  8EE3               	bsf	plusw1,7,c
 27411  014986                     l7810:
 27412  014986  0E01               	movlw	1
 27413  014988  6E0C               	movwf	(btemp+11)^0,c
 27414                           
 27415                           ;stkvar	_b @ sp[(-4)+-4]
 27416  01498A  50E1               	movf	fsr1l,w,c
 27417  01498C  0FF8               	addlw	-8
 27418  01498E  6ED9               	movwf	fsr2l,c
 27419  014990  50E2               	movf	fsr1h,w,c
 27420  014992  6EDA               	movwf	fsr2h,c
 27421  014994  0EFF               	movlw	255
 27422  014996  22DA               	addwfc	fsr2h,f,c
 27423  014998  280C               	incf	(btemp+11)^0,w,c
 27424  01499A  52DE               	movf	postinc2,f,c
 27425  01499C  D008               	goto	u5590
 27426  01499E                     u5595:
 27427  01499E  52DE               	movf	postinc2,f,c
 27428  0149A0  90D8               	bcf	status,0,c
 27429  0149A2  BEDC               	btfsc	preinc2,7,c
 27430  0149A4  80D8               	bsf	status,0,c
 27431  0149A6  32DD               	rrcf	postdec2,f,c
 27432  0149A8  32DD               	rrcf	postdec2,f,c
 27433  0149AA  32DD               	rrcf	postdec2,f,c
 27434  0149AC  32DE               	rrcf	postinc2,f,c
 27435  0149AE                     u5590:
 27436  0149AE  2EE8               	decfsz	wreg,f,c
 27437  0149B0  D7F6               	goto	u5595
 27438                           
 27439                           ;stkvar	_bexp @ sp[(-4)+1]
 27440  0149B2  0EFD               	movlw	-3
 27441  0149B4  2AE3               	incf	plusw1,f,c
 27442  0149B6                     l7814:
 27443                           
 27444                           ;stkvar	_aexp @ sp[(-4)+2]
 27445                           ;stkvar	_bexp @ sp[(-4)+1]
 27446  0149B6  50E1               	movf	fsr1l,w,c
 27447  0149B8  0FFD               	addlw	-3
 27448  0149BA  6ED9               	movwf	fsr2l,c
 27449  0149BC  50E2               	movf	fsr1h,w,c
 27450  0149BE  6EDA               	movwf	fsr2h,c
 27451  0149C0  0EFF               	movlw	255
 27452  0149C2  22DA               	addwfc	fsr2h,f,c
 27453  0149C4  0EFE               	movlw	-2
 27454  0149C6  50E3               	movf	plusw1,w,c
 27455  0149C8  5CDE               	subwf	postinc2,w,c
 27456  0149CA  A0D8               	btfss	status,0,c
 27457  0149CC  D7BE               	goto	l7800
 27458  0149CE                     u5600:
 27459                           
 27460                           ;stkvar	_signs @ sp[(-4)+3]
 27461  0149CE  0EFF               	movlw	-1
 27462  0149D0  BCE3               	btfsc	plusw1,6,c
 27463  0149D2  D066               	goto	l7842
 27464                           
 27465                           ;stkvar	_bexp @ sp[(-4)+1]
 27466  0149D4  0EFD               	movlw	-3
 27467  0149D6  50E3               	movf	plusw1,w,c
 27468  0149D8  B4D8               	btfsc	status,2,c
 27469  0149DA  D0F2               	goto	u5700
 27470                           
 27471                           ;stkvar	_a @ sp[(-4)+-8]
 27472                           ;stkvar	_b @ sp[(-4)+-4]
 27473  0149DC  0EF8               	movlw	-8
 27474  0149DE  50E3               	movf	plusw1,w,c
 27475  0149E0  6E01               	movwf	btemp^0,c
 27476  0149E2  0EF4               	movlw	-12
 27477  0149E4  50E3               	movf	plusw1,w,c
 27478  0149E6  2601               	addwf	btemp^0,f,c
 27479  0149E8  0EF8               	movlw	-8
 27480  0149EA  0060  F007  FFE3   	movff	btemp,plusw1
 27481  0149F0  0EF9               	movlw	-7
 27482  0149F2  50E3               	movf	plusw1,w,c
 27483  0149F4  6E01               	movwf	btemp^0,c
 27484  0149F6  0EF5               	movlw	-11
 27485  0149F8  50E3               	movf	plusw1,w,c
 27486  0149FA  2201               	addwfc	btemp^0,f,c
 27487  0149FC  0EF9               	movlw	-7
 27488  0149FE  0060  F007  FFE3   	movff	btemp,plusw1
 27489  014A04  0EFA               	movlw	-6
 27490  014A06  50E3               	movf	plusw1,w,c
 27491  014A08  6E01               	movwf	btemp^0,c
 27492  014A0A  0EF6               	movlw	-10
 27493  014A0C  50E3               	movf	plusw1,w,c
 27494  014A0E  2201               	addwfc	btemp^0,f,c
 27495  014A10  0EFA               	movlw	-6
 27496  014A12  0060  F007  FFE3   	movff	btemp,plusw1
 27497  014A18  0EFB               	movlw	-5
 27498  014A1A  50E3               	movf	plusw1,w,c
 27499  014A1C  6E01               	movwf	btemp^0,c
 27500  014A1E  0EF7               	movlw	-9
 27501  014A20  50E3               	movf	plusw1,w,c
 27502  014A22  2201               	addwfc	btemp^0,f,c
 27503  014A24  0EFB               	movlw	-5
 27504  014A26  0060  F007  FFE3   	movff	btemp,plusw1
 27505                           
 27506                           ;stkvar	_b @ sp[(-4)+-4]
 27507  014A2C  0EFB               	movlw	-5
 27508  014A2E  A0E3               	btfss	plusw1,0,c
 27509  014A30  D101               	goto	u5740
 27510                           
 27511                           ;stkvar	_grs @ sp[(-4)+0]
 27512  014A32  0EFC               	movlw	-4
 27513  014A34  A0E3               	btfss	plusw1,0,c
 27514  014A36  D00D               	goto	l7832
 27515                           
 27516                           ;stkvar	_grs @ sp[(-4)+0]
 27517  014A38  0EFC               	movlw	-4
 27518  014A3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27519  014A40  90D8               	bcf	status,0,c
 27520  014A42  320C               	rrcf	(btemp+11)^0,f,c
 27521  014A44  0E01               	movlw	1
 27522  014A46  120C               	iorwf	(btemp+11)^0,f,c
 27523                           
 27524                           ;stkvar	_grs @ sp[(-4)+0]
 27525  014A48  0EFC               	movlw	-4
 27526  014A4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27527  014A50  D009               	goto	l7834
 27528  014A52                     l7832:
 27529                           
 27530                           ;stkvar	_grs @ sp[(-4)+0]
 27531  014A52  50E1               	movf	fsr1l,w,c
 27532  014A54  0FFC               	addlw	-4
 27533  014A56  6ED9               	movwf	fsr2l,c
 27534  014A58  50E2               	movf	fsr1h,w,c
 27535  014A5A  6EDA               	movwf	fsr2h,c
 27536  014A5C  0EFF               	movlw	255
 27537  014A5E  22DA               	addwfc	fsr2h,f,c
 27538  014A60  90D8               	bcf	status,0,c
 27539  014A62  32DF               	rrcf	indf2,f,c
 27540  014A64                     l7834:
 27541                           
 27542                           ;stkvar	_b @ sp[(-4)+-4]
 27543  014A64  0EF8               	movlw	-8
 27544  014A66  A0E3               	btfss	plusw1,0,c
 27545  014A68  D002               	goto	l7838
 27546                           
 27547                           ;stkvar	_grs @ sp[(-4)+0]
 27548  014A6A  0EFC               	movlw	-4
 27549  014A6C  8EE3               	bsf	plusw1,7,c
 27550  014A6E                     l7838:
 27551  014A6E  0E01               	movlw	1
 27552  014A70  6E0C               	movwf	(btemp+11)^0,c
 27553                           
 27554                           ;stkvar	_b @ sp[(-4)+-4]
 27555  014A72  50E1               	movf	fsr1l,w,c
 27556  014A74  0FF8               	addlw	-8
 27557  014A76  6ED9               	movwf	fsr2l,c
 27558  014A78  50E2               	movf	fsr1h,w,c
 27559  014A7A  6EDA               	movwf	fsr2h,c
 27560  014A7C  0EFF               	movlw	255
 27561  014A7E  22DA               	addwfc	fsr2h,f,c
 27562  014A80  280C               	incf	(btemp+11)^0,w,c
 27563  014A82  52DE               	movf	postinc2,f,c
 27564  014A84  D008               	goto	u5660
 27565  014A86                     u5665:
 27566  014A86  52DE               	movf	postinc2,f,c
 27567  014A88  90D8               	bcf	status,0,c
 27568  014A8A  BEDC               	btfsc	preinc2,7,c
 27569  014A8C  80D8               	bsf	status,0,c
 27570  014A8E  32DD               	rrcf	postdec2,f,c
 27571  014A90  32DD               	rrcf	postdec2,f,c
 27572  014A92  32DD               	rrcf	postdec2,f,c
 27573  014A94  32DE               	rrcf	postinc2,f,c
 27574  014A96                     u5660:
 27575  014A96  2EE8               	decfsz	wreg,f,c
 27576  014A98  D7F6               	goto	u5665
 27577                           
 27578                           ;stkvar	_bexp @ sp[(-4)+1]
 27579  014A9A  0EFD               	movlw	-3
 27580  014A9C  2AE3               	incf	plusw1,f,c
 27581  014A9E  D0CA               	goto	u5740
 27582  014AA0                     l7842:
 27583                           
 27584                           ;stkvar	_a @ sp[(-4)+-8]
 27585                           ;stkvar	_b @ sp[(-4)+-4]
 27586  014AA0  50E1               	movf	fsr1l,w,c
 27587  014AA2  0FF8               	addlw	-8
 27588  014AA4  6ED9               	movwf	fsr2l,c
 27589  014AA6  50E2               	movf	fsr1h,w,c
 27590  014AA8  6EDA               	movwf	fsr2h,c
 27591  014AAA  0EFF               	movlw	255
 27592  014AAC  22DA               	addwfc	fsr2h,f,c
 27593  014AAE  0EF4               	movlw	-12
 27594  014AB0  50E3               	movf	plusw1,w,c
 27595  014AB2  5CDE               	subwf	postinc2,w,c
 27596  014AB4  0EF5               	movlw	-11
 27597  014AB6  50E3               	movf	plusw1,w,c
 27598  014AB8  58DE               	subwfb	postinc2,w,c
 27599  014ABA  0EF6               	movlw	-10
 27600  014ABC  50E3               	movf	plusw1,w,c
 27601  014ABE  58DE               	subwfb	postinc2,w,c
 27602  014AC0  50DE               	movf	postinc2,w,c
 27603  014AC2  0A80               	xorlw	128
 27604  014AC4  6E01               	movwf	btemp^0,c
 27605  014AC6  0EF7               	movlw	-9
 27606  014AC8  50E3               	movf	plusw1,w,c
 27607  014ACA  0A80               	xorlw	128
 27608  014ACC  5801               	subwfb	btemp^0,w,c
 27609  014ACE  B0D8               	btfsc	status,0,c
 27610  014AD0  D053               	goto	l7854
 27611                           
 27612                           ;stkvar	_b @ sp[(-4)+-4]
 27613                           ;stkvar	_a @ sp[(-4)+-8]
 27614  014AD2  0EF4               	movlw	-12
 27615  014AD4  006F FF8C  F009    	movff	plusw1,btemp+8
 27616  014ADA  0EF5               	movlw	-11
 27617  014ADC  006F FF8C  F00A    	movff	plusw1,btemp+9
 27618  014AE2  0EF6               	movlw	-10
 27619  014AE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 27620  014AEA  0EF7               	movlw	-9
 27621  014AEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27622  014AF2  0EF8               	movlw	-8
 27623  014AF4  50E3               	movf	plusw1,w,c
 27624  014AF6  5E09               	subwf	(btemp+8)^0,f,c
 27625  014AF8  0EF9               	movlw	-7
 27626  014AFA  50E3               	movf	plusw1,w,c
 27627  014AFC  5A0A               	subwfb	(btemp+9)^0,f,c
 27628  014AFE  0EFA               	movlw	-6
 27629  014B00  50E3               	movf	plusw1,w,c
 27630  014B02  5A0B               	subwfb	(btemp+10)^0,f,c
 27631  014B04  0EFB               	movlw	-5
 27632  014B06  50E3               	movf	plusw1,w,c
 27633  014B08  5A0C               	subwfb	(btemp+11)^0,f,c
 27634  014B0A  0EFF               	movlw	255
 27635  014B0C  2409               	addwf	(btemp+8)^0,w,c
 27636  014B0E  6E05               	movwf	(btemp+4)^0,c
 27637  014B10  0EFF               	movlw	255
 27638  014B12  200A               	addwfc	(btemp+9)^0,w,c
 27639  014B14  6E06               	movwf	(btemp+5)^0,c
 27640  014B16  0EFF               	movlw	255
 27641  014B18  200B               	addwfc	(btemp+10)^0,w,c
 27642  014B1A  6E07               	movwf	(btemp+6)^0,c
 27643  014B1C  0EFF               	movlw	255
 27644  014B1E  200C               	addwfc	(btemp+11)^0,w,c
 27645  014B20  6E08               	movwf	(btemp+7)^0,c
 27646                           
 27647                           ;stkvar	_b @ sp[(-4)+-4]
 27648  014B22  0EF8               	movlw	-8
 27649  014B24  0060  F017  FFE3   	movff	btemp+4,plusw1
 27650  014B2A  0EF9               	movlw	-7
 27651  014B2C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27652  014B32  0EFA               	movlw	-6
 27653  014B34  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27654  014B3A  0EFB               	movlw	-5
 27655  014B3C  0060  F023  FFE3   	movff	btemp+7,plusw1
 27656                           
 27657                           ;stkvar	_signs @ sp[(-4)+3]
 27658  014B42  0EFF               	movlw	-1
 27659  014B44  7EE3               	btg	plusw1,7,c
 27660                           
 27661                           ;stkvar	_grs @ sp[(-4)+0]
 27662  014B46  0EFC               	movlw	-4
 27663  014B48  50E3               	movf	plusw1,w,c
 27664  014B4A  0800               	sublw	0
 27665  014B4C  6E0C               	movwf	(btemp+11)^0,c
 27666                           
 27667                           ;stkvar	_grs @ sp[(-4)+0]
 27668  014B4E  0EFC               	movlw	-4
 27669  014B50  0060  F033  FFE3   	movff	btemp+11,plusw1
 27670                           
 27671                           ;stkvar	_grs @ sp[(-4)+0]
 27672  014B56  0EFC               	movlw	-4
 27673  014B58  50E3               	movf	plusw1,w,c
 27674  014B5A  A4D8               	btfss	status,2,c
 27675  014B5C  D020               	goto	l7856
 27676                           
 27677                           ;stkvar	_b @ sp[(-4)+-4]
 27678  014B5E  50E1               	movf	fsr1l,w,c
 27679  014B60  0FF8               	addlw	-8
 27680  014B62  6ED9               	movwf	fsr2l,c
 27681  014B64  50E2               	movf	fsr1h,w,c
 27682  014B66  6EDA               	movwf	fsr2h,c
 27683  014B68  0EFF               	movlw	255
 27684  014B6A  22DA               	addwfc	fsr2h,f,c
 27685  014B6C  2ADE               	incf	postinc2,f,c
 27686  014B6E  0E00               	movlw	0
 27687  014B70  22DE               	addwfc	postinc2,f,c
 27688  014B72  22DE               	addwfc	postinc2,f,c
 27689  014B74  22DE               	addwfc	postinc2,f,c
 27690  014B76  D013               	goto	l7856
 27691  014B78                     l7854:
 27692                           
 27693                           ;stkvar	_a @ sp[(-4)+-8]
 27694                           ;stkvar	_b @ sp[(-4)+-4]
 27695  014B78  50E1               	movf	fsr1l,w,c
 27696  014B7A  0FF8               	addlw	-8
 27697  014B7C  6ED9               	movwf	fsr2l,c
 27698  014B7E  50E2               	movf	fsr1h,w,c
 27699  014B80  6EDA               	movwf	fsr2h,c
 27700  014B82  0EFF               	movlw	255
 27701  014B84  22DA               	addwfc	fsr2h,f,c
 27702  014B86  0EF4               	movlw	-12
 27703  014B88  50E3               	movf	plusw1,w,c
 27704  014B8A  5EDE               	subwf	postinc2,f,c
 27705  014B8C  0EF5               	movlw	-11
 27706  014B8E  50E3               	movf	plusw1,w,c
 27707  014B90  5ADE               	subwfb	postinc2,f,c
 27708  014B92  0EF6               	movlw	-10
 27709  014B94  50E3               	movf	plusw1,w,c
 27710  014B96  5ADE               	subwfb	postinc2,f,c
 27711  014B98  0EF7               	movlw	-9
 27712  014B9A  50E3               	movf	plusw1,w,c
 27713  014B9C  5ADE               	subwfb	postinc2,f,c
 27714  014B9E                     l7856:
 27715                           
 27716                           ;stkvar	_b @ sp[(-4)+-4]
 27717  014B9E  0EF8               	movlw	-8
 27718  014BA0  50E3               	movf	plusw1,w,c
 27719  014BA2  E145               	bnz	l7878
 27720  014BA4  0EF9               	movlw	-7
 27721  014BA6  50E3               	movf	plusw1,w,c
 27722  014BA8  E142               	bnz	l7878
 27723  014BAA  0EFA               	movlw	-6
 27724  014BAC  50E3               	movf	plusw1,w,c
 27725  014BAE  E13F               	bnz	l7878
 27726  014BB0  0EFB               	movlw	-5
 27727  014BB2  50E3               	movf	plusw1,w,c
 27728  014BB4  A4D8               	btfss	status,2,c
 27729  014BB6  D03B               	goto	l7878
 27730                           
 27731                           ;stkvar	_grs @ sp[(-4)+0]
 27732  014BB8  0EFC               	movlw	-4
 27733  014BBA  50E3               	movf	plusw1,w,c
 27734  014BBC  A4D8               	btfss	status,2,c
 27735  014BBE  D037               	goto	l7878
 27736  014BC0                     u5700:
 27737  014BC0  0E00               	movlw	0
 27738  014BC2  6E01               	movwf	btemp^0,c
 27739  014BC4  0E00               	movlw	0
 27740  014BC6  6E02               	movwf	(btemp+1)^0,c
 27741  014BC8  0E00               	movlw	0
 27742  014BCA  6E03               	movwf	(btemp+2)^0,c
 27743  014BCC  0E00               	movlw	0
 27744  014BCE  6E04               	movwf	(btemp+3)^0,c
 27745  014BD0  D0C6               	goto	l2932
 27746  014BD2                     l7864:
 27747                           
 27748                           ;stkvar	_b @ sp[(-4)+-4]
 27749  014BD2  90D8               	bcf	status,0,c
 27750  014BD4  0EF8               	movlw	-8
 27751  014BD6  36E3               	rlcf	plusw1,f,c
 27752  014BD8  0EF9               	movlw	-7
 27753  014BDA  36E3               	rlcf	plusw1,f,c
 27754  014BDC  0EFA               	movlw	-6
 27755  014BDE  36E3               	rlcf	plusw1,f,c
 27756  014BE0  0EFB               	movlw	-5
 27757  014BE2  36E3               	rlcf	plusw1,f,c
 27758                           
 27759                           ;stkvar	_grs @ sp[(-4)+0]
 27760  014BE4  0EFC               	movlw	-4
 27761  014BE6  AEE3               	btfss	plusw1,7,c
 27762  014BE8  D002               	goto	l2944
 27763                           
 27764                           ;stkvar	_b @ sp[(-4)+-4]
 27765  014BEA  0EF8               	movlw	-8
 27766  014BEC  80E3               	bsf	plusw1,0,c
 27767  014BEE                     l2944:
 27768                           
 27769                           ;stkvar	_grs @ sp[(-4)+0]
 27770  014BEE  0EFC               	movlw	-4
 27771  014BF0  A0E3               	btfss	plusw1,0,c
 27772  014BF2  D00E               	goto	l7872
 27773                           
 27774                           ;stkvar	_grs @ sp[(-4)+0]
 27775  014BF4  0EFC               	movlw	-4
 27776  014BF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 27777  014BFC  90D8               	bcf	status,0,c
 27778  014BFE  340C               	rlcf	(btemp+11)^0,w,c
 27779  014C00  6E0B               	movwf	(btemp+10)^0,c
 27780  014C02  0E01               	movlw	1
 27781  014C04  120B               	iorwf	(btemp+10)^0,f,c
 27782                           
 27783                           ;stkvar	_grs @ sp[(-4)+0]
 27784  014C06  0EFC               	movlw	-4
 27785  014C08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27786  014C0E  D009               	goto	l7874
 27787  014C10                     l7872:
 27788                           
 27789                           ;stkvar	_grs @ sp[(-4)+0]
 27790  014C10  50E1               	movf	fsr1l,w,c
 27791  014C12  0FFC               	addlw	-4
 27792  014C14  6ED9               	movwf	fsr2l,c
 27793  014C16  50E2               	movf	fsr1h,w,c
 27794  014C18  6EDA               	movwf	fsr2h,c
 27795  014C1A  0EFF               	movlw	255
 27796  014C1C  22DA               	addwfc	fsr2h,f,c
 27797  014C1E  90D8               	bcf	status,0,c
 27798  014C20  36DF               	rlcf	indf2,f,c
 27799  014C22                     l7874:
 27800                           
 27801                           ;stkvar	_bexp @ sp[(-4)+1]
 27802  014C22  0EFD               	movlw	-3
 27803  014C24  50E3               	movf	plusw1,w,c
 27804  014C26  B4D8               	btfsc	status,2,c
 27805  014C28  D002               	goto	l7878
 27806                           
 27807                           ;stkvar	_bexp @ sp[(-4)+1]
 27808  014C2A  0EFD               	movlw	-3
 27809  014C2C  06E3               	decf	plusw1,f,c
 27810  014C2E                     l7878:
 27811                           
 27812                           ;stkvar	_b @ sp[(-4)+-4]
 27813  014C2E  0EFA               	movlw	-6
 27814  014C30  AEE3               	btfss	plusw1,7,c
 27815  014C32  D7CF               	goto	l7864
 27816  014C34                     u5740:
 27817                           
 27818                           ;stkvar	_aexp @ sp[(-4)+2]
 27819  014C34  0EFE               	movlw	-2
 27820  014C36  6AE3               	clrf	plusw1,c
 27821                           
 27822                           ;stkvar	_grs @ sp[(-4)+0]
 27823  014C38  0EFC               	movlw	-4
 27824  014C3A  AEE3               	btfss	plusw1,7,c
 27825  014C3C  D00F               	goto	l7892
 27826                           
 27827                           ;stkvar	_grs @ sp[(-4)+0]
 27828  014C3E  0EFC               	movlw	-4
 27829  014C40  006F FF8C  F00C    	movff	plusw1,btemp+11
 27830  014C46  0E7F               	movlw	127
 27831  014C48  160C               	andwf	(btemp+11)^0,f,c
 27832  014C4A  B4D8               	btfsc	status,2,c
 27833  014C4C  D004               	goto	l7888
 27834  014C4E                     u5760:
 27835                           
 27836                           ;stkvar	_aexp @ sp[(-4)+2]
 27837  014C4E  0EFE               	movlw	-2
 27838  014C50  6AE3               	clrf	plusw1,c
 27839  014C52  2AE3               	incf	plusw1,f,c
 27840  014C54  D003               	goto	l7892
 27841  014C56                     l7888:
 27842                           
 27843                           ;stkvar	_b @ sp[(-4)+-4]
 27844  014C56  0EF8               	movlw	-8
 27845  014C58  B0E3               	btfsc	plusw1,0,c
 27846  014C5A  D7F9               	goto	u5760
 27847  014C5C                     l7892:
 27848                           
 27849                           ;stkvar	_aexp @ sp[(-4)+2]
 27850  014C5C  0EFE               	movlw	-2
 27851  014C5E  50E3               	movf	plusw1,w,c
 27852  014C60  B4D8               	btfsc	status,2,c
 27853  014C62  D02B               	goto	l7904
 27854                           
 27855                           ;stkvar	_b @ sp[(-4)+-4]
 27856  014C64  50E1               	movf	fsr1l,w,c
 27857  014C66  0FF8               	addlw	-8
 27858  014C68  6ED9               	movwf	fsr2l,c
 27859  014C6A  50E2               	movf	fsr1h,w,c
 27860  014C6C  6EDA               	movwf	fsr2h,c
 27861  014C6E  0EFF               	movlw	255
 27862  014C70  22DA               	addwfc	fsr2h,f,c
 27863  014C72  2ADE               	incf	postinc2,f,c
 27864  014C74  0E00               	movlw	0
 27865  014C76  22DE               	addwfc	postinc2,f,c
 27866  014C78  22DE               	addwfc	postinc2,f,c
 27867  014C7A  22DE               	addwfc	postinc2,f,c
 27868                           
 27869                           ;stkvar	_b @ sp[(-4)+-4]
 27870  014C7C  0EFB               	movlw	-5
 27871  014C7E  A0E3               	btfss	plusw1,0,c
 27872  014C80  D01C               	goto	l7904
 27873  014C82  0E01               	movlw	1
 27874  014C84  6E0C               	movwf	(btemp+11)^0,c
 27875                           
 27876                           ;stkvar	_b @ sp[(-4)+-4]
 27877  014C86  50E1               	movf	fsr1l,w,c
 27878  014C88  0FF8               	addlw	-8
 27879  014C8A  6ED9               	movwf	fsr2l,c
 27880  014C8C  50E2               	movf	fsr1h,w,c
 27881  014C8E  6EDA               	movwf	fsr2h,c
 27882  014C90  0EFF               	movlw	255
 27883  014C92  22DA               	addwfc	fsr2h,f,c
 27884  014C94  280C               	incf	(btemp+11)^0,w,c
 27885  014C96  52DE               	movf	postinc2,f,c
 27886  014C98  D008               	goto	u5800
 27887  014C9A                     u5805:
 27888  014C9A  52DE               	movf	postinc2,f,c
 27889  014C9C  90D8               	bcf	status,0,c
 27890  014C9E  BEDC               	btfsc	preinc2,7,c
 27891  014CA0  80D8               	bsf	status,0,c
 27892  014CA2  32DD               	rrcf	postdec2,f,c
 27893  014CA4  32DD               	rrcf	postdec2,f,c
 27894  014CA6  32DD               	rrcf	postdec2,f,c
 27895  014CA8  32DE               	rrcf	postinc2,f,c
 27896  014CAA                     u5800:
 27897  014CAA  2EE8               	decfsz	wreg,f,c
 27898  014CAC  D7F6               	goto	u5805
 27899                           
 27900                           ;stkvar	_bexp @ sp[(-4)+1]
 27901  014CAE  0EFD               	movlw	-3
 27902  014CB0  28E3               	incf	plusw1,w,c
 27903  014CB2  B4D8               	btfsc	status,2,c
 27904  014CB4  D002               	goto	l7904
 27905                           
 27906                           ;stkvar	_bexp @ sp[(-4)+1]
 27907  014CB6  0EFD               	movlw	-3
 27908  014CB8  2AE3               	incf	plusw1,f,c
 27909  014CBA                     l7904:
 27910                           
 27911                           ;stkvar	_bexp @ sp[(-4)+1]
 27912  014CBA  0EFD               	movlw	-3
 27913  014CBC  28E3               	incf	plusw1,w,c
 27914  014CBE  B4D8               	btfsc	status,2,c
 27915  014CC0  D004               	goto	u5830
 27916                           
 27917                           ;stkvar	_bexp @ sp[(-4)+1]
 27918  014CC2  0EFD               	movlw	-3
 27919  014CC4  50E3               	movf	plusw1,w,c
 27920  014CC6  A4D8               	btfss	status,2,c
 27921  014CC8  D00E               	goto	l7914
 27922  014CCA                     u5830:
 27923                           
 27924                           ;stkvar	_b @ sp[(-4)+-4]
 27925  014CCA  0EF8               	movlw	-8
 27926  014CCC  6AE3               	clrf	plusw1,c
 27927  014CCE  0EF9               	movlw	-7
 27928  014CD0  6AE3               	clrf	plusw1,c
 27929  014CD2  0EFA               	movlw	-6
 27930  014CD4  6AE3               	clrf	plusw1,c
 27931  014CD6  0EFB               	movlw	-5
 27932  014CD8  6AE3               	clrf	plusw1,c
 27933                           
 27934                           ;stkvar	_bexp @ sp[(-4)+1]
 27935  014CDA  0EFD               	movlw	-3
 27936  014CDC  50E3               	movf	plusw1,w,c
 27937  014CDE  A4D8               	btfss	status,2,c
 27938  014CE0  D002               	goto	l7914
 27939                           
 27940                           ;stkvar	_signs @ sp[(-4)+3]
 27941  014CE2  0EFF               	movlw	-1
 27942  014CE4  6AE3               	clrf	plusw1,c
 27943  014CE6                     l7914:
 27944                           
 27945                           ;stkvar	_bexp @ sp[(-4)+1]
 27946  014CE6  0EFD               	movlw	-3
 27947  014CE8  A0E3               	btfss	plusw1,0,c
 27948  014CEA  D009               	goto	l7918
 27949                           
 27950                           ;stkvar	_b @ sp[(-4)+-4]
 27951  014CEC  0EFA               	movlw	250
 27952  014CEE  24E1               	addwf	fsr1l,w,c
 27953  014CF0  6ED9               	movwf	fsr2l,c
 27954  014CF2  0EFF               	movlw	255
 27955  014CF4  20E2               	addwfc	fsr1h,w,c
 27956  014CF6  6EDA               	movwf	fsr2h,c
 27957  014CF8  0E00               	movlw	0
 27958  014CFA  8EDB               	bsf	plusw2,7,c
 27959  014CFC  D008               	goto	l7920
 27960  014CFE                     l7918:
 27961                           
 27962                           ;stkvar	_b @ sp[(-4)+-4]
 27963  014CFE  0EFA               	movlw	250
 27964  014D00  24E1               	addwf	fsr1l,w,c
 27965  014D02  6ED9               	movwf	fsr2l,c
 27966  014D04  0EFF               	movlw	255
 27967  014D06  20E2               	addwfc	fsr1h,w,c
 27968  014D08  6EDA               	movwf	fsr2h,c
 27969  014D0A  0E7F               	movlw	127
 27970  014D0C  16DF               	andwf	indf2,f,c
 27971  014D0E                     l7920:
 27972                           
 27973                           ;stkvar	_b @ sp[(-4)+-4]
 27974  014D0E  0EFB               	movlw	251
 27975  014D10  24E1               	addwf	fsr1l,w,c
 27976  014D12  6ED9               	movwf	fsr2l,c
 27977  014D14  0EFF               	movlw	255
 27978  014D16  20E2               	addwfc	fsr1h,w,c
 27979  014D18  6EDA               	movwf	fsr2h,c
 27980                           
 27981                           ;stkvar	_bexp @ sp[(-4)+1]
 27982  014D1A  0EFD               	movlw	-3
 27983  014D1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 27984  014D22  90D8               	bcf	status,0,c
 27985  014D24  300C               	rrcf	(btemp+11)^0,w,c
 27986  014D26  6EDF               	movwf	indf2,c
 27987                           
 27988                           ;stkvar	_signs @ sp[(-4)+3]
 27989  014D28  0EFF               	movlw	-1
 27990  014D2A  AEE3               	btfss	plusw1,7,c
 27991  014D2C  D008               	goto	l7926
 27992                           
 27993                           ;stkvar	_b @ sp[(-4)+-4]
 27994  014D2E  0EFB               	movlw	251
 27995  014D30  24E1               	addwf	fsr1l,w,c
 27996  014D32  6ED9               	movwf	fsr2l,c
 27997  014D34  0EFF               	movlw	255
 27998  014D36  20E2               	addwfc	fsr1h,w,c
 27999  014D38  6EDA               	movwf	fsr2h,c
 28000  014D3A  0E00               	movlw	0
 28001  014D3C  8EDB               	bsf	plusw2,7,c
 28002  014D3E                     l7926:
 28003                           
 28004                           ;stkvar	_b @ sp[(-4)+-4]
 28005  014D3E  0EF8               	movlw	-8
 28006  014D40  006F FF8C  F001    	movff	plusw1,btemp
 28007  014D46  0EF9               	movlw	-7
 28008  014D48  006F FF8C  F002    	movff	plusw1,btemp+1
 28009  014D4E  0EFA               	movlw	-6
 28010  014D50  006F FF8C  F003    	movff	plusw1,btemp+2
 28011  014D56  0EFB               	movlw	-5
 28012  014D58  006F FF8C  F004    	movff	plusw1,btemp+3
 28013  014D5E                     l2932:
 28014                           
 28015                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28016  014D5E  0EF4               	movlw	244
 28017  014D60  26E1               	addwf	fsr1l,f,c
 28018  014D62  0EFF               	movlw	255
 28019  014D64  22E2               	addwfc	fsr1h,f,c
 28020  014D66  0012               	return		;funcret
 28021  014D68                     __end_of___fladd:
 28022                           	opt callstack 0
 28023                           
 28024 ;; *************** function ___flmul *****************
 28025 ;; Defined at:
 28026 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28027 ;; Parameters:    Size  Location     Type
 28028 ;;  b               4  [STACK] unsigned char 
 28029 ;;  a               4  [STACK] unsigned char 
 28030 ;; Auto vars:     Size  Location     Type
 28031 ;;  prod            4  [STACK] struct .
 28032 ;;  grs             4  [STACK] unsigned long 
 28033 ;;  temp            2  [STACK] struct .
 28034 ;;  bexp            1  [STACK] unsigned char 
 28035 ;;  aexp            1  [STACK] unsigned char 
 28036 ;;  sign            1  [STACK] unsigned char 
 28037 ;; Return value:  Size  Location     Type
 28038 ;;                  4  [STACK] unsigned char 
 28039 ;; Registers used:
 28040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28041 ;; Tracked objects:
 28042 ;;		On entry : 0/1
 28043 ;;		On exit  : 0/0
 28044 ;;		Unchanged: 0/0
 28045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28050 ;;Total ram usage:        0 bytes
 28051 ;; Hardware stack levels used:    1
 28052 ;; Hardware stack levels required when called:   15
 28053 ;; This function calls:
 28054 ;;		Nothing
 28055 ;; This function is called by:
 28056 ;;		_conv_raw_result
 28057 ;;		_lp_filter
 28058 ;;		_calc_model_data
 28059 ;;		_calc_bsoc
 28060 ;;		_init_bsoc
 28061 ;;		_efgtoa
 28062 ;; This function uses a reentrant model
 28063 ;;
 28064                           
 28065                           	psect	text108
 28066  013D82                     __ptext108:
 28067                           	opt callstack 0
 28068  013D82                     ___flmul:
 28069                           	opt callstack 0
 28070                           
 28071                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28072  013D82  0E0D               	movlw	13
 28073  013D84  26E1               	addwf	fsr1l,f,c
 28074  013D86  0E00               	movlw	0
 28075  013D88  22E2               	addwfc	fsr1h,f,c
 28076                           
 28077                           ;stkvar	_b @ sp[(-13)+-4]
 28078                           
 28079                           ;incstack = 0
 28080 ;; hardware stack exceeded
 28081  013D8A  0EF2               	movlw	242
 28082  013D8C  24E1               	addwf	fsr1l,w,c
 28083  013D8E  6ED9               	movwf	fsr2l,c
 28084  013D90  0EFF               	movlw	255
 28085  013D92  20E2               	addwfc	fsr1h,w,c
 28086  013D94  6EDA               	movwf	fsr2h,c
 28087  013D96  50DF               	movf	indf2,w,c
 28088  013D98  6E0C               	movwf	(btemp+11)^0,c
 28089  013D9A  0E80               	movlw	128
 28090  013D9C  160C               	andwf	(btemp+11)^0,f,c
 28091                           
 28092                           ;stkvar	_sign @ sp[(-13)+12]
 28093  013D9E  0EFF               	movlw	-1
 28094  013DA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28095                           
 28096                           ;stkvar	_b @ sp[(-13)+-4]
 28097  013DA6  0EF2               	movlw	242
 28098  013DA8  24E1               	addwf	fsr1l,w,c
 28099  013DAA  6ED9               	movwf	fsr2l,c
 28100  013DAC  0EFF               	movlw	255
 28101  013DAE  20E2               	addwfc	fsr1h,w,c
 28102  013DB0  6EDA               	movwf	fsr2h,c
 28103  013DB2  50DF               	movf	indf2,w,c
 28104  013DB4  6E0C               	movwf	(btemp+11)^0,c
 28105  013DB6  90D8               	bcf	status,0,c
 28106  013DB8  340C               	rlcf	(btemp+11)^0,w,c
 28107  013DBA  6E0B               	movwf	(btemp+10)^0,c
 28108                           
 28109                           ;stkvar	_bexp @ sp[(-13)+10]
 28110  013DBC  0EFD               	movlw	-3
 28111  013DBE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28112                           
 28113                           ;stkvar	_b @ sp[(-13)+-4]
 28114  013DC4  0EF1               	movlw	241
 28115  013DC6  24E1               	addwf	fsr1l,w,c
 28116  013DC8  6ED9               	movwf	fsr2l,c
 28117  013DCA  0EFF               	movlw	255
 28118  013DCC  20E2               	addwfc	fsr1h,w,c
 28119  013DCE  6EDA               	movwf	fsr2h,c
 28120  013DD0  AEDF               	btfss	indf2,7,c
 28121  013DD2  D002               	goto	l8352
 28122                           
 28123                           ;stkvar	_bexp @ sp[(-13)+10]
 28124  013DD4  0EFD               	movlw	-3
 28125  013DD6  80E3               	bsf	plusw1,0,c
 28126  013DD8                     l8352:
 28127                           
 28128                           ;stkvar	_bexp @ sp[(-13)+10]
 28129  013DD8  0EFD               	movlw	-3
 28130  013DDA  50E3               	movf	plusw1,w,c
 28131  013DDC  B4D8               	btfsc	status,2,c
 28132  013DDE  D01F               	goto	l8360
 28133                           
 28134                           ;stkvar	_bexp @ sp[(-13)+10]
 28135  013DE0  0EFD               	movlw	-3
 28136  013DE2  28E3               	incf	plusw1,w,c
 28137  013DE4  A4D8               	btfss	status,2,c
 28138  013DE6  D018               	goto	l8358
 28139  013DE8  0E00               	movlw	0
 28140  013DEA  6E09               	movwf	(btemp+8)^0,c
 28141  013DEC  0E00               	movlw	0
 28142  013DEE  6E0A               	movwf	(btemp+9)^0,c
 28143  013DF0  0E00               	movlw	0
 28144  013DF2  6E0B               	movwf	(btemp+10)^0,c
 28145  013DF4  0E00               	movlw	0
 28146  013DF6  6E0C               	movwf	(btemp+11)^0,c
 28147                           
 28148                           ;stkvar	_b @ sp[(-13)+-4]
 28149  013DF8  0EEF               	movlw	-17
 28150  013DFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 28151  013E00  0EF0               	movlw	-16
 28152  013E02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28153  013E08  0EF1               	movlw	-15
 28154  013E0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28155  013E10  0EF2               	movlw	-14
 28156  013E12  0060  F033  FFE3   	movff	btemp+11,plusw1
 28157  013E18                     l8358:
 28158                           
 28159                           ;stkvar	_b @ sp[(-13)+-4]
 28160  013E18  0EF1               	movlw	-15
 28161  013E1A  8EE3               	bsf	plusw1,7,c
 28162  013E1C  D018               	goto	l8362
 28163  013E1E                     l8360:
 28164  013E1E  0E00               	movlw	0
 28165  013E20  6E09               	movwf	(btemp+8)^0,c
 28166  013E22  0E00               	movlw	0
 28167  013E24  6E0A               	movwf	(btemp+9)^0,c
 28168  013E26  0E00               	movlw	0
 28169  013E28  6E0B               	movwf	(btemp+10)^0,c
 28170  013E2A  0E00               	movlw	0
 28171  013E2C  6E0C               	movwf	(btemp+11)^0,c
 28172                           
 28173                           ;stkvar	_b @ sp[(-13)+-4]
 28174  013E2E  0EEF               	movlw	-17
 28175  013E30  0060  F027  FFE3   	movff	btemp+8,plusw1
 28176  013E36  0EF0               	movlw	-16
 28177  013E38  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28178  013E3E  0EF1               	movlw	-15
 28179  013E40  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28180  013E46  0EF2               	movlw	-14
 28181  013E48  0060  F033  FFE3   	movff	btemp+11,plusw1
 28182  013E4E                     l8362:
 28183                           
 28184                           ;stkvar	_a @ sp[(-13)+-8]
 28185  013E4E  0EEE               	movlw	238
 28186  013E50  24E1               	addwf	fsr1l,w,c
 28187  013E52  6ED9               	movwf	fsr2l,c
 28188  013E54  0EFF               	movlw	255
 28189  013E56  20E2               	addwfc	fsr1h,w,c
 28190  013E58  6EDA               	movwf	fsr2h,c
 28191  013E5A  50DF               	movf	indf2,w,c
 28192  013E5C  6E0C               	movwf	(btemp+11)^0,c
 28193  013E5E  0E80               	movlw	128
 28194  013E60  160C               	andwf	(btemp+11)^0,f,c
 28195                           
 28196                           ;stkvar	_sign @ sp[(-13)+12]
 28197  013E62  50E1               	movf	fsr1l,w,c
 28198  013E64  0FFF               	addlw	-1
 28199  013E66  6ED9               	movwf	fsr2l,c
 28200  013E68  50E2               	movf	fsr1h,w,c
 28201  013E6A  6EDA               	movwf	fsr2h,c
 28202  013E6C  0EFF               	movlw	255
 28203  013E6E  22DA               	addwfc	fsr2h,f,c
 28204  013E70  500C               	movf	(btemp+11)^0,w,c
 28205  013E72  1ADF               	xorwf	indf2,f,c
 28206                           
 28207                           ;stkvar	_a @ sp[(-13)+-8]
 28208  013E74  0EEE               	movlw	238
 28209  013E76  24E1               	addwf	fsr1l,w,c
 28210  013E78  6ED9               	movwf	fsr2l,c
 28211  013E7A  0EFF               	movlw	255
 28212  013E7C  20E2               	addwfc	fsr1h,w,c
 28213  013E7E  6EDA               	movwf	fsr2h,c
 28214  013E80  50DF               	movf	indf2,w,c
 28215  013E82  6E0C               	movwf	(btemp+11)^0,c
 28216  013E84  90D8               	bcf	status,0,c
 28217  013E86  340C               	rlcf	(btemp+11)^0,w,c
 28218  013E88  6E0B               	movwf	(btemp+10)^0,c
 28219                           
 28220                           ;stkvar	_aexp @ sp[(-13)+11]
 28221  013E8A  0EFE               	movlw	-2
 28222  013E8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28223                           
 28224                           ;stkvar	_a @ sp[(-13)+-8]
 28225  013E92  0EED               	movlw	237
 28226  013E94  24E1               	addwf	fsr1l,w,c
 28227  013E96  6ED9               	movwf	fsr2l,c
 28228  013E98  0EFF               	movlw	255
 28229  013E9A  20E2               	addwfc	fsr1h,w,c
 28230  013E9C  6EDA               	movwf	fsr2h,c
 28231  013E9E  AEDF               	btfss	indf2,7,c
 28232  013EA0  D002               	goto	l8370
 28233                           
 28234                           ;stkvar	_aexp @ sp[(-13)+11]
 28235  013EA2  0EFE               	movlw	-2
 28236  013EA4  80E3               	bsf	plusw1,0,c
 28237  013EA6                     l8370:
 28238                           
 28239                           ;stkvar	_aexp @ sp[(-13)+11]
 28240  013EA6  0EFE               	movlw	-2
 28241  013EA8  50E3               	movf	plusw1,w,c
 28242  013EAA  B4D8               	btfsc	status,2,c
 28243  013EAC  D01F               	goto	l8378
 28244                           
 28245                           ;stkvar	_aexp @ sp[(-13)+11]
 28246  013EAE  0EFE               	movlw	-2
 28247  013EB0  28E3               	incf	plusw1,w,c
 28248  013EB2  A4D8               	btfss	status,2,c
 28249  013EB4  D018               	goto	l8376
 28250  013EB6  0E00               	movlw	0
 28251  013EB8  6E09               	movwf	(btemp+8)^0,c
 28252  013EBA  0E00               	movlw	0
 28253  013EBC  6E0A               	movwf	(btemp+9)^0,c
 28254  013EBE  0E00               	movlw	0
 28255  013EC0  6E0B               	movwf	(btemp+10)^0,c
 28256  013EC2  0E00               	movlw	0
 28257  013EC4  6E0C               	movwf	(btemp+11)^0,c
 28258                           
 28259                           ;stkvar	_a @ sp[(-13)+-8]
 28260  013EC6  0EEB               	movlw	-21
 28261  013EC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 28262  013ECE  0EEC               	movlw	-20
 28263  013ED0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28264  013ED6  0EED               	movlw	-19
 28265  013ED8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28266  013EDE  0EEE               	movlw	-18
 28267  013EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28268  013EE6                     l8376:
 28269                           
 28270                           ;stkvar	_a @ sp[(-13)+-8]
 28271  013EE6  0EED               	movlw	-19
 28272  013EE8  8EE3               	bsf	plusw1,7,c
 28273  013EEA  D018               	goto	l8380
 28274  013EEC                     l8378:
 28275  013EEC  0E00               	movlw	0
 28276  013EEE  6E09               	movwf	(btemp+8)^0,c
 28277  013EF0  0E00               	movlw	0
 28278  013EF2  6E0A               	movwf	(btemp+9)^0,c
 28279  013EF4  0E00               	movlw	0
 28280  013EF6  6E0B               	movwf	(btemp+10)^0,c
 28281  013EF8  0E00               	movlw	0
 28282  013EFA  6E0C               	movwf	(btemp+11)^0,c
 28283                           
 28284                           ;stkvar	_a @ sp[(-13)+-8]
 28285  013EFC  0EEB               	movlw	-21
 28286  013EFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 28287  013F04  0EEC               	movlw	-20
 28288  013F06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28289  013F0C  0EED               	movlw	-19
 28290  013F0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28291  013F14  0EEE               	movlw	-18
 28292  013F16  0060  F033  FFE3   	movff	btemp+11,plusw1
 28293  013F1C                     l8380:
 28294                           
 28295                           ;stkvar	_aexp @ sp[(-13)+11]
 28296  013F1C  0EFE               	movlw	-2
 28297  013F1E  50E3               	movf	plusw1,w,c
 28298  013F20  B4D8               	btfsc	status,2,c
 28299  013F22  D004               	goto	u6820
 28300                           
 28301                           ;stkvar	_bexp @ sp[(-13)+10]
 28302  013F24  0EFD               	movlw	-3
 28303  013F26  50E3               	movf	plusw1,w,c
 28304  013F28  A4D8               	btfss	status,2,c
 28305  013F2A  D009               	goto	l8388
 28306  013F2C                     u6820:
 28307  013F2C  0E00               	movlw	0
 28308  013F2E  6E01               	movwf	btemp^0,c
 28309  013F30  0E00               	movlw	0
 28310  013F32  6E02               	movwf	(btemp+1)^0,c
 28311  013F34  0E00               	movlw	0
 28312  013F36  6E03               	movwf	(btemp+2)^0,c
 28313  013F38  0E00               	movlw	0
 28314  013F3A  6E04               	movwf	(btemp+3)^0,c
 28315  013F3C  D332               	goto	l3013
 28316  013F3E                     l8388:
 28317                           
 28318                           ;stkvar	_b @ sp[(-13)+-4]
 28319  013F3E  0EEF               	movlw	-17
 28320  013F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 28321                           
 28322                           ;stkvar	_a @ sp[(-13)+-8]
 28323  013F46  0EED               	movlw	237
 28324  013F48  24E1               	addwf	fsr1l,w,c
 28325  013F4A  6ED9               	movwf	fsr2l,c
 28326  013F4C  0EFF               	movlw	255
 28327  013F4E  20E2               	addwfc	fsr1h,w,c
 28328  013F50  6EDA               	movwf	fsr2h,c
 28329  013F52  50DF               	movf	indf2,w,c
 28330  013F54  020C               	mulwf	(btemp+11)^0,c
 28331                           
 28332                           ;stkvar	_temp @ sp[(-13)+8]
 28333  013F56  0EFB               	movlw	-5
 28334  013F58  006F FFCF FFE3     	movff	prodl,plusw1
 28335  013F5E  0EFC               	movlw	-4
 28336  013F60  006F FFD3 FFE3     	movff	prodh,plusw1
 28337                           
 28338                           ;stkvar	_temp @ sp[(-13)+8]
 28339  013F66  0EFB               	movlw	-5
 28340  013F68  006F FF8C  F00C    	movff	plusw1,btemp+11
 28341  013F6E  0060  F030  F005   	movff	btemp+11,btemp+4
 28342  013F74  6A06               	clrf	(btemp+5)^0,c
 28343  013F76  6A07               	clrf	(btemp+6)^0,c
 28344  013F78  6A08               	clrf	(btemp+7)^0,c
 28345                           
 28346                           ;stkvar	_grs @ sp[(-13)+4]
 28347  013F7A  0EF7               	movlw	-9
 28348  013F7C  0060  F017  FFE3   	movff	btemp+4,plusw1
 28349  013F82  0EF8               	movlw	-8
 28350  013F84  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28351  013F8A  0EF9               	movlw	-7
 28352  013F8C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28353  013F92  0EFA               	movlw	-6
 28354  013F94  0060  F023  FFE3   	movff	btemp+7,plusw1
 28355                           
 28356                           ;stkvar	_temp @ sp[(-13)+8]
 28357  013F9A  0EFC               	movlw	252
 28358  013F9C  24E1               	addwf	fsr1l,w,c
 28359  013F9E  6ED9               	movwf	fsr2l,c
 28360  013FA0  0EFF               	movlw	255
 28361  013FA2  20E2               	addwfc	fsr1h,w,c
 28362  013FA4  6EDA               	movwf	fsr2h,c
 28363  013FA6  50DF               	movf	indf2,w,c
 28364  013FA8  6E0C               	movwf	(btemp+11)^0,c
 28365  013FAA  0060  F030  F005   	movff	btemp+11,btemp+4
 28366  013FB0  6A06               	clrf	(btemp+5)^0,c
 28367  013FB2  6A07               	clrf	(btemp+6)^0,c
 28368  013FB4  6A08               	clrf	(btemp+7)^0,c
 28369                           
 28370                           ;stkvar	_prod @ sp[(-13)+0]
 28371  013FB6  0EF3               	movlw	-13
 28372  013FB8  0060  F017  FFE3   	movff	btemp+4,plusw1
 28373  013FBE  0EF4               	movlw	-12
 28374  013FC0  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28375  013FC6  0EF5               	movlw	-11
 28376  013FC8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28377  013FCE  0EF6               	movlw	-10
 28378  013FD0  0060  F023  FFE3   	movff	btemp+7,plusw1
 28379                           
 28380                           ;stkvar	_b @ sp[(-13)+-4]
 28381  013FD6  0EF0               	movlw	240
 28382  013FD8  24E1               	addwf	fsr1l,w,c
 28383  013FDA  6ED9               	movwf	fsr2l,c
 28384  013FDC  0EFF               	movlw	255
 28385  013FDE  20E2               	addwfc	fsr1h,w,c
 28386  013FE0  6EDA               	movwf	fsr2h,c
 28387  013FE2  50DF               	movf	indf2,w,c
 28388  013FE4  6E0C               	movwf	(btemp+11)^0,c
 28389                           
 28390                           ;stkvar	_a @ sp[(-13)+-8]
 28391  013FE6  0EEC               	movlw	236
 28392  013FE8  24E1               	addwf	fsr1l,w,c
 28393  013FEA  6ED9               	movwf	fsr2l,c
 28394  013FEC  0EFF               	movlw	255
 28395  013FEE  20E2               	addwfc	fsr1h,w,c
 28396  013FF0  6EDA               	movwf	fsr2h,c
 28397  013FF2  50DF               	movf	indf2,w,c
 28398  013FF4  020C               	mulwf	(btemp+11)^0,c
 28399                           
 28400                           ;stkvar	_temp @ sp[(-13)+8]
 28401  013FF6  0EFB               	movlw	-5
 28402  013FF8  006F FFCF FFE3     	movff	prodl,plusw1
 28403  013FFE  0EFC               	movlw	-4
 28404  014000  006F FFD3 FFE3     	movff	prodh,plusw1
 28405                           
 28406                           ;stkvar	_grs @ sp[(-13)+4]
 28407  014006  50E1               	movf	fsr1l,w,c
 28408  014008  0FF7               	addlw	-9
 28409  01400A  6ED9               	movwf	fsr2l,c
 28410  01400C  50E2               	movf	fsr1h,w,c
 28411  01400E  6EDA               	movwf	fsr2h,c
 28412  014010  0EFF               	movlw	255
 28413  014012  22DA               	addwfc	fsr2h,f,c
 28414                           
 28415                           ;stkvar	_temp @ sp[(-13)+8]
 28416  014014  0EFB               	movlw	-5
 28417  014016  50E3               	movf	plusw1,w,c
 28418  014018  26DE               	addwf	postinc2,f,c
 28419  01401A  0E00               	movlw	0
 28420  01401C  22DE               	addwfc	postinc2,f,c
 28421  01401E  22DE               	addwfc	postinc2,f,c
 28422  014020  22DE               	addwfc	postinc2,f,c
 28423                           
 28424                           ;stkvar	_prod @ sp[(-13)+0]
 28425  014022  50E1               	movf	fsr1l,w,c
 28426  014024  0FF3               	addlw	-13
 28427  014026  6ED9               	movwf	fsr2l,c
 28428  014028  50E2               	movf	fsr1h,w,c
 28429  01402A  6EDA               	movwf	fsr2h,c
 28430  01402C  0EFF               	movlw	255
 28431  01402E  22DA               	addwfc	fsr2h,f,c
 28432                           
 28433                           ;stkvar	_temp @ sp[(-13)+8]
 28434  014030  0EFC               	movlw	252
 28435  014032  24E1               	addwf	fsr1l,w,c
 28436  014034  6EE9               	movwf	fsr0l,c
 28437  014036  0EFF               	movlw	255
 28438  014038  20E2               	addwfc	fsr1h,w,c
 28439  01403A  6EEA               	movwf	fsr0h,c
 28440  01403C  50EF               	movf	indf0,w,c
 28441  01403E  26DE               	addwf	postinc2,f,c
 28442  014040  0E00               	movlw	0
 28443  014042  22DE               	addwfc	postinc2,f,c
 28444  014044  22DE               	addwfc	postinc2,f,c
 28445  014046  22DE               	addwfc	postinc2,f,c
 28446                           
 28447                           ;stkvar	_b @ sp[(-13)+-4]
 28448  014048  0EF1               	movlw	241
 28449  01404A  24E1               	addwf	fsr1l,w,c
 28450  01404C  6ED9               	movwf	fsr2l,c
 28451  01404E  0EFF               	movlw	255
 28452  014050  20E2               	addwfc	fsr1h,w,c
 28453  014052  6EDA               	movwf	fsr2h,c
 28454  014054  50DF               	movf	indf2,w,c
 28455  014056  6E0C               	movwf	(btemp+11)^0,c
 28456                           
 28457                           ;stkvar	_a @ sp[(-13)+-8]
 28458  014058  0EEB               	movlw	-21
 28459  01405A  50E3               	movf	plusw1,w,c
 28460  01405C  020C               	mulwf	(btemp+11)^0,c
 28461                           
 28462                           ;stkvar	_temp @ sp[(-13)+8]
 28463  01405E  0EFB               	movlw	-5
 28464  014060  006F FFCF FFE3     	movff	prodl,plusw1
 28465  014066  0EFC               	movlw	-4
 28466  014068  006F FFD3 FFE3     	movff	prodh,plusw1
 28467                           
 28468                           ;stkvar	_grs @ sp[(-13)+4]
 28469  01406E  50E1               	movf	fsr1l,w,c
 28470  014070  0FF7               	addlw	-9
 28471  014072  6ED9               	movwf	fsr2l,c
 28472  014074  50E2               	movf	fsr1h,w,c
 28473  014076  6EDA               	movwf	fsr2h,c
 28474  014078  0EFF               	movlw	255
 28475  01407A  22DA               	addwfc	fsr2h,f,c
 28476                           
 28477                           ;stkvar	_temp @ sp[(-13)+8]
 28478  01407C  0EFB               	movlw	-5
 28479  01407E  50E3               	movf	plusw1,w,c
 28480  014080  26DE               	addwf	postinc2,f,c
 28481  014082  0E00               	movlw	0
 28482  014084  22DE               	addwfc	postinc2,f,c
 28483  014086  22DE               	addwfc	postinc2,f,c
 28484  014088  22DE               	addwfc	postinc2,f,c
 28485                           
 28486                           ;stkvar	_prod @ sp[(-13)+0]
 28487  01408A  50E1               	movf	fsr1l,w,c
 28488  01408C  0FF3               	addlw	-13
 28489  01408E  6ED9               	movwf	fsr2l,c
 28490  014090  50E2               	movf	fsr1h,w,c
 28491  014092  6EDA               	movwf	fsr2h,c
 28492  014094  0EFF               	movlw	255
 28493  014096  22DA               	addwfc	fsr2h,f,c
 28494                           
 28495                           ;stkvar	_temp @ sp[(-13)+8]
 28496  014098  0EFC               	movlw	252
 28497  01409A  24E1               	addwf	fsr1l,w,c
 28498  01409C  6EE9               	movwf	fsr0l,c
 28499  01409E  0EFF               	movlw	255
 28500  0140A0  20E2               	addwfc	fsr1h,w,c
 28501  0140A2  6EEA               	movwf	fsr0h,c
 28502  0140A4  50EF               	movf	indf0,w,c
 28503  0140A6  26DE               	addwf	postinc2,f,c
 28504  0140A8  0E00               	movlw	0
 28505  0140AA  22DE               	addwfc	postinc2,f,c
 28506  0140AC  22DE               	addwfc	postinc2,f,c
 28507  0140AE  22DE               	addwfc	postinc2,f,c
 28508                           
 28509                           ;stkvar	_grs @ sp[(-13)+4]
 28510  0140B0  50E1               	movf	fsr1l,w,c
 28511  0140B2  0FF7               	addlw	-9
 28512  0140B4  6ED9               	movwf	fsr2l,c
 28513  0140B6  50E2               	movf	fsr1h,w,c
 28514  0140B8  6EDA               	movwf	fsr2h,c
 28515  0140BA  0EFF               	movlw	255
 28516  0140BC  22DA               	addwfc	fsr2h,f,c
 28517  0140BE  0E08               	movlw	8
 28518  0140C0                     u6835:
 28519  0140C0  90D8               	bcf	status,0,c
 28520  0140C2  36DE               	rlcf	postinc2,f,c
 28521  0140C4  36DE               	rlcf	postinc2,f,c
 28522  0140C6  36DE               	rlcf	postinc2,f,c
 28523  0140C8  36DD               	rlcf	postdec2,f,c
 28524  0140CA  52DD               	movf	postdec2,f,c
 28525  0140CC  52DD               	movf	postdec2,f,c
 28526  0140CE  2EE8               	decfsz	wreg,f,c
 28527  0140D0  D7F7               	goto	u6835
 28528                           
 28529                           ;stkvar	_b @ sp[(-13)+-4]
 28530  0140D2  0EF0               	movlw	240
 28531  0140D4  24E1               	addwf	fsr1l,w,c
 28532  0140D6  6ED9               	movwf	fsr2l,c
 28533  0140D8  0EFF               	movlw	255
 28534  0140DA  20E2               	addwfc	fsr1h,w,c
 28535  0140DC  6EDA               	movwf	fsr2h,c
 28536  0140DE  50DF               	movf	indf2,w,c
 28537  0140E0  6E0C               	movwf	(btemp+11)^0,c
 28538                           
 28539                           ;stkvar	_a @ sp[(-13)+-8]
 28540  0140E2  0EEB               	movlw	-21
 28541  0140E4  50E3               	movf	plusw1,w,c
 28542  0140E6  020C               	mulwf	(btemp+11)^0,c
 28543                           
 28544                           ;stkvar	_temp @ sp[(-13)+8]
 28545  0140E8  0EFB               	movlw	-5
 28546  0140EA  006F FFCF FFE3     	movff	prodl,plusw1
 28547  0140F0  0EFC               	movlw	-4
 28548  0140F2  006F FFD3 FFE3     	movff	prodh,plusw1
 28549                           
 28550                           ;stkvar	_temp @ sp[(-13)+8]
 28551  0140F8  0EFB               	movlw	-5
 28552  0140FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28553  014100  0EFC               	movlw	-4
 28554  014102  006F FF8C  F00C    	movff	plusw1,btemp+11
 28555                           
 28556                           ;stkvar	_grs @ sp[(-13)+4]
 28557  014108  50E1               	movf	fsr1l,w,c
 28558  01410A  0FF7               	addlw	-9
 28559  01410C  6ED9               	movwf	fsr2l,c
 28560  01410E  50E2               	movf	fsr1h,w,c
 28561  014110  6EDA               	movwf	fsr2h,c
 28562  014112  0EFF               	movlw	255
 28563  014114  22DA               	addwfc	fsr2h,f,c
 28564  014116  500B               	movf	(btemp+10)^0,w,c
 28565  014118  26DE               	addwf	postinc2,f,c
 28566  01411A  500C               	movf	(btemp+11)^0,w,c
 28567  01411C  22DE               	addwfc	postinc2,f,c
 28568  01411E  0E00               	movlw	0
 28569  014120  22DE               	addwfc	postinc2,f,c
 28570  014122  22DE               	addwfc	postinc2,f,c
 28571                           
 28572                           ;stkvar	_b @ sp[(-13)+-4]
 28573  014124  0EEF               	movlw	-17
 28574  014126  006F FF8C  F00C    	movff	plusw1,btemp+11
 28575                           
 28576                           ;stkvar	_a @ sp[(-13)+-8]
 28577  01412C  0EEC               	movlw	236
 28578  01412E  24E1               	addwf	fsr1l,w,c
 28579  014130  6ED9               	movwf	fsr2l,c
 28580  014132  0EFF               	movlw	255
 28581  014134  20E2               	addwfc	fsr1h,w,c
 28582  014136  6EDA               	movwf	fsr2h,c
 28583  014138  50DF               	movf	indf2,w,c
 28584  01413A  020C               	mulwf	(btemp+11)^0,c
 28585                           
 28586                           ;stkvar	_temp @ sp[(-13)+8]
 28587  01413C  0EFB               	movlw	-5
 28588  01413E  006F FFCF FFE3     	movff	prodl,plusw1
 28589  014144  0EFC               	movlw	-4
 28590  014146  006F FFD3 FFE3     	movff	prodh,plusw1
 28591                           
 28592                           ;stkvar	_temp @ sp[(-13)+8]
 28593  01414C  0EFB               	movlw	-5
 28594  01414E  006F FF8C  F00B    	movff	plusw1,btemp+10
 28595  014154  0EFC               	movlw	-4
 28596  014156  006F FF8C  F00C    	movff	plusw1,btemp+11
 28597                           
 28598                           ;stkvar	_grs @ sp[(-13)+4]
 28599  01415C  50E1               	movf	fsr1l,w,c
 28600  01415E  0FF7               	addlw	-9
 28601  014160  6ED9               	movwf	fsr2l,c
 28602  014162  50E2               	movf	fsr1h,w,c
 28603  014164  6EDA               	movwf	fsr2h,c
 28604  014166  0EFF               	movlw	255
 28605  014168  22DA               	addwfc	fsr2h,f,c
 28606  01416A  500B               	movf	(btemp+10)^0,w,c
 28607  01416C  26DE               	addwf	postinc2,f,c
 28608  01416E  500C               	movf	(btemp+11)^0,w,c
 28609  014170  22DE               	addwfc	postinc2,f,c
 28610  014172  0E00               	movlw	0
 28611  014174  22DE               	addwfc	postinc2,f,c
 28612  014176  22DE               	addwfc	postinc2,f,c
 28613                           
 28614                           ;stkvar	_grs @ sp[(-13)+4]
 28615  014178  50E1               	movf	fsr1l,w,c
 28616  01417A  0FF7               	addlw	-9
 28617  01417C  6ED9               	movwf	fsr2l,c
 28618  01417E  50E2               	movf	fsr1h,w,c
 28619  014180  6EDA               	movwf	fsr2h,c
 28620  014182  0EFF               	movlw	255
 28621  014184  22DA               	addwfc	fsr2h,f,c
 28622  014186  0E08               	movlw	8
 28623  014188                     u6845:
 28624  014188  90D8               	bcf	status,0,c
 28625  01418A  36DE               	rlcf	postinc2,f,c
 28626  01418C  36DE               	rlcf	postinc2,f,c
 28627  01418E  36DE               	rlcf	postinc2,f,c
 28628  014190  36DD               	rlcf	postdec2,f,c
 28629  014192  52DD               	movf	postdec2,f,c
 28630  014194  52DD               	movf	postdec2,f,c
 28631  014196  2EE8               	decfsz	wreg,f,c
 28632  014198  D7F7               	goto	u6845
 28633                           
 28634                           ;stkvar	_b @ sp[(-13)+-4]
 28635  01419A  0EEF               	movlw	-17
 28636  01419C  006F FF8C  F00C    	movff	plusw1,btemp+11
 28637                           
 28638                           ;stkvar	_a @ sp[(-13)+-8]
 28639  0141A2  0EEB               	movlw	-21
 28640  0141A4  50E3               	movf	plusw1,w,c
 28641  0141A6  020C               	mulwf	(btemp+11)^0,c
 28642                           
 28643                           ;stkvar	_temp @ sp[(-13)+8]
 28644  0141A8  0EFB               	movlw	-5
 28645  0141AA  006F FFCF FFE3     	movff	prodl,plusw1
 28646  0141B0  0EFC               	movlw	-4
 28647  0141B2  006F FFD3 FFE3     	movff	prodh,plusw1
 28648                           
 28649                           ;stkvar	_temp @ sp[(-13)+8]
 28650  0141B8  0EFB               	movlw	-5
 28651  0141BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 28652  0141C0  0EFC               	movlw	-4
 28653  0141C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 28654                           
 28655                           ;stkvar	_grs @ sp[(-13)+4]
 28656  0141C8  50E1               	movf	fsr1l,w,c
 28657  0141CA  0FF7               	addlw	-9
 28658  0141CC  6ED9               	movwf	fsr2l,c
 28659  0141CE  50E2               	movf	fsr1h,w,c
 28660  0141D0  6EDA               	movwf	fsr2h,c
 28661  0141D2  0EFF               	movlw	255
 28662  0141D4  22DA               	addwfc	fsr2h,f,c
 28663  0141D6  500B               	movf	(btemp+10)^0,w,c
 28664  0141D8  26DE               	addwf	postinc2,f,c
 28665  0141DA  500C               	movf	(btemp+11)^0,w,c
 28666  0141DC  22DE               	addwfc	postinc2,f,c
 28667  0141DE  0E00               	movlw	0
 28668  0141E0  22DE               	addwfc	postinc2,f,c
 28669  0141E2  22DE               	addwfc	postinc2,f,c
 28670                           
 28671                           ;stkvar	_b @ sp[(-13)+-4]
 28672  0141E4  0EF0               	movlw	240
 28673  0141E6  24E1               	addwf	fsr1l,w,c
 28674  0141E8  6ED9               	movwf	fsr2l,c
 28675  0141EA  0EFF               	movlw	255
 28676  0141EC  20E2               	addwfc	fsr1h,w,c
 28677  0141EE  6EDA               	movwf	fsr2h,c
 28678  0141F0  50DF               	movf	indf2,w,c
 28679  0141F2  6E0C               	movwf	(btemp+11)^0,c
 28680                           
 28681                           ;stkvar	_a @ sp[(-13)+-8]
 28682  0141F4  0EED               	movlw	237
 28683  0141F6  24E1               	addwf	fsr1l,w,c
 28684  0141F8  6ED9               	movwf	fsr2l,c
 28685  0141FA  0EFF               	movlw	255
 28686  0141FC  20E2               	addwfc	fsr1h,w,c
 28687  0141FE  6EDA               	movwf	fsr2h,c
 28688  014200  50DF               	movf	indf2,w,c
 28689  014202  020C               	mulwf	(btemp+11)^0,c
 28690                           
 28691                           ;stkvar	_temp @ sp[(-13)+8]
 28692  014204  0EFB               	movlw	-5
 28693  014206  006F FFCF FFE3     	movff	prodl,plusw1
 28694  01420C  0EFC               	movlw	-4
 28695  01420E  006F FFD3 FFE3     	movff	prodh,plusw1
 28696                           
 28697                           ;stkvar	_temp @ sp[(-13)+8]
 28698  014214  0EFB               	movlw	-5
 28699  014216  006F FF8C  F00B    	movff	plusw1,btemp+10
 28700  01421C  0EFC               	movlw	-4
 28701  01421E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28702                           
 28703                           ;stkvar	_prod @ sp[(-13)+0]
 28704  014224  50E1               	movf	fsr1l,w,c
 28705  014226  0FF3               	addlw	-13
 28706  014228  6ED9               	movwf	fsr2l,c
 28707  01422A  50E2               	movf	fsr1h,w,c
 28708  01422C  6EDA               	movwf	fsr2h,c
 28709  01422E  0EFF               	movlw	255
 28710  014230  22DA               	addwfc	fsr2h,f,c
 28711  014232  500B               	movf	(btemp+10)^0,w,c
 28712  014234  26DE               	addwf	postinc2,f,c
 28713  014236  500C               	movf	(btemp+11)^0,w,c
 28714  014238  22DE               	addwfc	postinc2,f,c
 28715  01423A  0E00               	movlw	0
 28716  01423C  22DE               	addwfc	postinc2,f,c
 28717  01423E  22DE               	addwfc	postinc2,f,c
 28718                           
 28719                           ;stkvar	_b @ sp[(-13)+-4]
 28720  014240  0EF1               	movlw	241
 28721  014242  24E1               	addwf	fsr1l,w,c
 28722  014244  6ED9               	movwf	fsr2l,c
 28723  014246  0EFF               	movlw	255
 28724  014248  20E2               	addwfc	fsr1h,w,c
 28725  01424A  6EDA               	movwf	fsr2h,c
 28726  01424C  50DF               	movf	indf2,w,c
 28727  01424E  6E0C               	movwf	(btemp+11)^0,c
 28728                           
 28729                           ;stkvar	_a @ sp[(-13)+-8]
 28730  014250  0EEC               	movlw	236
 28731  014252  24E1               	addwf	fsr1l,w,c
 28732  014254  6ED9               	movwf	fsr2l,c
 28733  014256  0EFF               	movlw	255
 28734  014258  20E2               	addwfc	fsr1h,w,c
 28735  01425A  6EDA               	movwf	fsr2h,c
 28736  01425C  50DF               	movf	indf2,w,c
 28737  01425E  020C               	mulwf	(btemp+11)^0,c
 28738                           
 28739                           ;stkvar	_temp @ sp[(-13)+8]
 28740  014260  0EFB               	movlw	-5
 28741  014262  006F FFCF FFE3     	movff	prodl,plusw1
 28742  014268  0EFC               	movlw	-4
 28743  01426A  006F FFD3 FFE3     	movff	prodh,plusw1
 28744                           
 28745                           ;stkvar	_temp @ sp[(-13)+8]
 28746  014270  0EFB               	movlw	-5
 28747  014272  006F FF8C  F00B    	movff	plusw1,btemp+10
 28748  014278  0EFC               	movlw	-4
 28749  01427A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28750                           
 28751                           ;stkvar	_prod @ sp[(-13)+0]
 28752  014280  50E1               	movf	fsr1l,w,c
 28753  014282  0FF3               	addlw	-13
 28754  014284  6ED9               	movwf	fsr2l,c
 28755  014286  50E2               	movf	fsr1h,w,c
 28756  014288  6EDA               	movwf	fsr2h,c
 28757  01428A  0EFF               	movlw	255
 28758  01428C  22DA               	addwfc	fsr2h,f,c
 28759  01428E  500B               	movf	(btemp+10)^0,w,c
 28760  014290  26DE               	addwf	postinc2,f,c
 28761  014292  500C               	movf	(btemp+11)^0,w,c
 28762  014294  22DE               	addwfc	postinc2,f,c
 28763  014296  0E00               	movlw	0
 28764  014298  22DE               	addwfc	postinc2,f,c
 28765  01429A  22DE               	addwfc	postinc2,f,c
 28766                           
 28767                           ;stkvar	_b @ sp[(-13)+-4]
 28768  01429C  0EF1               	movlw	241
 28769  01429E  24E1               	addwf	fsr1l,w,c
 28770  0142A0  6ED9               	movwf	fsr2l,c
 28771  0142A2  0EFF               	movlw	255
 28772  0142A4  20E2               	addwfc	fsr1h,w,c
 28773  0142A6  6EDA               	movwf	fsr2h,c
 28774  0142A8  50DF               	movf	indf2,w,c
 28775  0142AA  6E0C               	movwf	(btemp+11)^0,c
 28776                           
 28777                           ;stkvar	_a @ sp[(-13)+-8]
 28778  0142AC  0EED               	movlw	237
 28779  0142AE  24E1               	addwf	fsr1l,w,c
 28780  0142B0  6ED9               	movwf	fsr2l,c
 28781  0142B2  0EFF               	movlw	255
 28782  0142B4  20E2               	addwfc	fsr1h,w,c
 28783  0142B6  6EDA               	movwf	fsr2h,c
 28784  0142B8  50DF               	movf	indf2,w,c
 28785  0142BA  020C               	mulwf	(btemp+11)^0,c
 28786                           
 28787                           ;stkvar	_temp @ sp[(-13)+8]
 28788  0142BC  0EFB               	movlw	-5
 28789  0142BE  006F FFCF FFE3     	movff	prodl,plusw1
 28790  0142C4  0EFC               	movlw	-4
 28791  0142C6  006F FFD3 FFE3     	movff	prodh,plusw1
 28792                           
 28793                           ;stkvar	_temp @ sp[(-13)+8]
 28794  0142CC  0EFB               	movlw	-5
 28795  0142CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28796  0142D4  0EFC               	movlw	-4
 28797  0142D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28798  0142DC  500B               	movf	(btemp+10)^0,w,c
 28799  0142DE  6E05               	movwf	(btemp+4)^0,c
 28800  0142E0  500C               	movf	(btemp+11)^0,w,c
 28801  0142E2  6E06               	movwf	(btemp+5)^0,c
 28802  0142E4  6A07               	clrf	(btemp+6)^0,c
 28803  0142E6  6A08               	clrf	(btemp+7)^0,c
 28804  0142E8  0060  F01C  F008   	movff	btemp+6,btemp+7
 28805  0142EE  0060  F018  F007   	movff	btemp+5,btemp+6
 28806  0142F4  0060  F014  F006   	movff	btemp+4,btemp+5
 28807  0142FA  6A05               	clrf	(btemp+4)^0,c
 28808                           
 28809                           ;stkvar	_prod @ sp[(-13)+0]
 28810  0142FC  50E1               	movf	fsr1l,w,c
 28811  0142FE  0FF3               	addlw	-13
 28812  014300  6ED9               	movwf	fsr2l,c
 28813  014302  50E2               	movf	fsr1h,w,c
 28814  014304  6EDA               	movwf	fsr2h,c
 28815  014306  0EFF               	movlw	255
 28816  014308  22DA               	addwfc	fsr2h,f,c
 28817  01430A  5005               	movf	(btemp+4)^0,w,c
 28818  01430C  26DE               	addwf	postinc2,f,c
 28819  01430E  5006               	movf	(btemp+5)^0,w,c
 28820  014310  22DE               	addwfc	postinc2,f,c
 28821  014312  5007               	movf	(btemp+6)^0,w,c
 28822  014314  22DE               	addwfc	postinc2,f,c
 28823  014316  5008               	movf	(btemp+7)^0,w,c
 28824  014318  22DE               	addwfc	postinc2,f,c
 28825                           
 28826                           ;stkvar	_prod @ sp[(-13)+0]
 28827  01431A  50E1               	movf	fsr1l,w,c
 28828  01431C  0FF3               	addlw	-13
 28829  01431E  6ED9               	movwf	fsr2l,c
 28830  014320  50E2               	movf	fsr1h,w,c
 28831  014322  6EDA               	movwf	fsr2h,c
 28832  014324  0EFF               	movlw	255
 28833  014326  22DA               	addwfc	fsr2h,f,c
 28834                           
 28835                           ;stkvar	_grs @ sp[(-13)+4]
 28836  014328  0EFA               	movlw	250
 28837  01432A  24E1               	addwf	fsr1l,w,c
 28838  01432C  6EE9               	movwf	fsr0l,c
 28839  01432E  0EFF               	movlw	255
 28840  014330  20E2               	addwfc	fsr1h,w,c
 28841  014332  6EEA               	movwf	fsr0h,c
 28842  014334  50EF               	movf	indf0,w,c
 28843  014336  26DE               	addwf	postinc2,f,c
 28844  014338  0E00               	movlw	0
 28845  01433A  22DE               	addwfc	postinc2,f,c
 28846  01433C  22DE               	addwfc	postinc2,f,c
 28847  01433E  22DE               	addwfc	postinc2,f,c
 28848                           
 28849                           ;stkvar	_grs @ sp[(-13)+4]
 28850  014340  50E1               	movf	fsr1l,w,c
 28851  014342  0FF7               	addlw	-9
 28852  014344  6ED9               	movwf	fsr2l,c
 28853  014346  50E2               	movf	fsr1h,w,c
 28854  014348  6EDA               	movwf	fsr2h,c
 28855  01434A  0EFF               	movlw	255
 28856  01434C  22DA               	addwfc	fsr2h,f,c
 28857  01434E  0E08               	movlw	8
 28858  014350                     u6855:
 28859  014350  90D8               	bcf	status,0,c
 28860  014352  36DE               	rlcf	postinc2,f,c
 28861  014354  36DE               	rlcf	postinc2,f,c
 28862  014356  36DE               	rlcf	postinc2,f,c
 28863  014358  36DD               	rlcf	postdec2,f,c
 28864  01435A  52DD               	movf	postdec2,f,c
 28865  01435C  52DD               	movf	postdec2,f,c
 28866  01435E  2EE8               	decfsz	wreg,f,c
 28867  014360  D7F7               	goto	u6855
 28868  014362  0E82               	movlw	130
 28869  014364  6E0B               	movwf	(btemp+10)^0,c
 28870  014366  0EFF               	movlw	255
 28871  014368  6E0C               	movwf	(btemp+11)^0,c
 28872                           
 28873                           ;stkvar	_bexp @ sp[(-13)+10]
 28874  01436A  0EFD               	movlw	-3
 28875  01436C  50E3               	movf	plusw1,w,c
 28876  01436E  6E09               	movwf	(btemp+8)^0,c
 28877  014370  6A0A               	clrf	(btemp+9)^0,c
 28878                           
 28879                           ;stkvar	_aexp @ sp[(-13)+11]
 28880  014372  0EFE               	movlw	-2
 28881  014374  50E3               	movf	plusw1,w,c
 28882  014376  2609               	addwf	(btemp+8)^0,f,c
 28883  014378  0E00               	movlw	0
 28884  01437A  220A               	addwfc	(btemp+9)^0,f,c
 28885  01437C  500B               	movf	(btemp+10)^0,w,c
 28886  01437E  2609               	addwf	(btemp+8)^0,f,c
 28887  014380  500C               	movf	(btemp+11)^0,w,c
 28888  014382  220A               	addwfc	(btemp+9)^0,f,c
 28889                           
 28890                           ;stkvar	_temp @ sp[(-13)+8]
 28891  014384  0EFB               	movlw	-5
 28892  014386  0060  F027  FFE3   	movff	btemp+8,plusw1
 28893  01438C  0EFC               	movlw	-4
 28894  01438E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28895  014394  D021               	goto	l8450
 28896  014396                     l8440:
 28897                           
 28898                           ;stkvar	_prod @ sp[(-13)+0]
 28899  014396  90D8               	bcf	status,0,c
 28900  014398  0EF3               	movlw	-13
 28901  01439A  36E3               	rlcf	plusw1,f,c
 28902  01439C  0EF4               	movlw	-12
 28903  01439E  36E3               	rlcf	plusw1,f,c
 28904  0143A0  0EF5               	movlw	-11
 28905  0143A2  36E3               	rlcf	plusw1,f,c
 28906  0143A4  0EF6               	movlw	-10
 28907  0143A6  36E3               	rlcf	plusw1,f,c
 28908                           
 28909                           ;stkvar	_grs @ sp[(-13)+4]
 28910  0143A8  0EFA               	movlw	-6
 28911  0143AA  AEE3               	btfss	plusw1,7,c
 28912  0143AC  D002               	goto	l8446
 28913                           
 28914                           ;stkvar	_prod @ sp[(-13)+0]
 28915  0143AE  0EF3               	movlw	-13
 28916  0143B0  80E3               	bsf	plusw1,0,c
 28917  0143B2                     l8446:
 28918                           
 28919                           ;stkvar	_grs @ sp[(-13)+4]
 28920  0143B2  90D8               	bcf	status,0,c
 28921  0143B4  0EF7               	movlw	-9
 28922  0143B6  36E3               	rlcf	plusw1,f,c
 28923  0143B8  0EF8               	movlw	-8
 28924  0143BA  36E3               	rlcf	plusw1,f,c
 28925  0143BC  0EF9               	movlw	-7
 28926  0143BE  36E3               	rlcf	plusw1,f,c
 28927  0143C0  0EFA               	movlw	-6
 28928  0143C2  36E3               	rlcf	plusw1,f,c
 28929                           
 28930                           ;stkvar	_temp @ sp[(-13)+8]
 28931  0143C4  50E1               	movf	fsr1l,w,c
 28932  0143C6  0FFB               	addlw	-5
 28933  0143C8  6ED9               	movwf	fsr2l,c
 28934  0143CA  50E2               	movf	fsr1h,w,c
 28935  0143CC  6EDA               	movwf	fsr2h,c
 28936  0143CE  0EFF               	movlw	255
 28937  0143D0  22DA               	addwfc	fsr2h,f,c
 28938  0143D2  06DE               	decf	postinc2,f,c
 28939  0143D4  0E00               	movlw	0
 28940  0143D6  5ADD               	subwfb	postdec2,f,c
 28941  0143D8                     l8450:
 28942                           
 28943                           ;stkvar	_prod @ sp[(-13)+0]
 28944  0143D8  0EF5               	movlw	-11
 28945  0143DA  AEE3               	btfss	plusw1,7,c
 28946  0143DC  D7DC               	goto	l8440
 28947                           
 28948                           ;stkvar	_aexp @ sp[(-13)+11]
 28949  0143DE  0EFE               	movlw	-2
 28950  0143E0  6AE3               	clrf	plusw1,c
 28951                           
 28952                           ;stkvar	_grs @ sp[(-13)+4]
 28953  0143E2  0EFA               	movlw	-6
 28954  0143E4  AEE3               	btfss	plusw1,7,c
 28955  0143E6  D020               	goto	l8464
 28956                           
 28957                           ;stkvar	_grs @ sp[(-13)+4]
 28958  0143E8  50E1               	movf	fsr1l,w,c
 28959  0143EA  0FF7               	addlw	-9
 28960  0143EC  6ED9               	movwf	fsr2l,c
 28961  0143EE  50E2               	movf	fsr1h,w,c
 28962  0143F0  6EDA               	movwf	fsr2h,c
 28963  0143F2  0EFF               	movlw	255
 28964  0143F4  22DA               	addwfc	fsr2h,f,c
 28965  0143F6  0EFF               	movlw	255
 28966  0143F8  14DE               	andwf	postinc2,w,c
 28967  0143FA  6E09               	movwf	(btemp+8)^0,c
 28968  0143FC  0EFF               	movlw	255
 28969  0143FE  14DE               	andwf	postinc2,w,c
 28970  014400  6E0A               	movwf	(btemp+9)^0,c
 28971  014402  0EFF               	movlw	255
 28972  014404  14DE               	andwf	postinc2,w,c
 28973  014406  6E0B               	movwf	(btemp+10)^0,c
 28974  014408  0E7F               	movlw	127
 28975  01440A  14DE               	andwf	postinc2,w,c
 28976  01440C  6E0C               	movwf	(btemp+11)^0,c
 28977  01440E  5009               	movf	(btemp+8)^0,w,c
 28978  014410  100A               	iorwf	(btemp+9)^0,w,c
 28979  014412  100B               	iorwf	(btemp+10)^0,w,c
 28980  014414  100C               	iorwf	(btemp+11)^0,w,c
 28981  014416  B4D8               	btfsc	status,2,c
 28982  014418  D004               	goto	l8460
 28983  01441A                     u6890:
 28984                           
 28985                           ;stkvar	_aexp @ sp[(-13)+11]
 28986  01441A  0EFE               	movlw	-2
 28987  01441C  6AE3               	clrf	plusw1,c
 28988  01441E  2AE3               	incf	plusw1,f,c
 28989  014420  D003               	goto	l8464
 28990  014422                     l8460:
 28991                           
 28992                           ;stkvar	_prod @ sp[(-13)+0]
 28993  014422  0EF3               	movlw	-13
 28994  014424  B0E3               	btfsc	plusw1,0,c
 28995  014426  D7F9               	goto	u6890
 28996  014428                     l8464:
 28997                           
 28998                           ;stkvar	_aexp @ sp[(-13)+11]
 28999  014428  0EFE               	movlw	-2
 29000  01442A  50E3               	movf	plusw1,w,c
 29001  01442C  B4D8               	btfsc	status,2,c
 29002  01442E  D036               	goto	l8474
 29003                           
 29004                           ;stkvar	_prod @ sp[(-13)+0]
 29005  014430  50E1               	movf	fsr1l,w,c
 29006  014432  0FF3               	addlw	-13
 29007  014434  6ED9               	movwf	fsr2l,c
 29008  014436  50E2               	movf	fsr1h,w,c
 29009  014438  6EDA               	movwf	fsr2h,c
 29010  01443A  0EFF               	movlw	255
 29011  01443C  22DA               	addwfc	fsr2h,f,c
 29012  01443E  2ADE               	incf	postinc2,f,c
 29013  014440  0E00               	movlw	0
 29014  014442  22DE               	addwfc	postinc2,f,c
 29015  014444  22DE               	addwfc	postinc2,f,c
 29016  014446  22DE               	addwfc	postinc2,f,c
 29017                           
 29018                           ;stkvar	_prod @ sp[(-13)+0]
 29019  014448  0EF6               	movlw	-10
 29020  01444A  A0E3               	btfss	plusw1,0,c
 29021  01444C  D027               	goto	l8474
 29022  01444E  0E01               	movlw	1
 29023  014450  6E0C               	movwf	(btemp+11)^0,c
 29024                           
 29025                           ;stkvar	_prod @ sp[(-13)+0]
 29026  014452  50E1               	movf	fsr1l,w,c
 29027  014454  0FF3               	addlw	-13
 29028  014456  6ED9               	movwf	fsr2l,c
 29029  014458  50E2               	movf	fsr1h,w,c
 29030  01445A  6EDA               	movwf	fsr2h,c
 29031  01445C  0EFF               	movlw	255
 29032  01445E  22DA               	addwfc	fsr2h,f,c
 29033  014460  280C               	incf	(btemp+11)^0,w,c
 29034  014462  52DE               	movf	postinc2,f,c
 29035  014464  D008               	goto	u6930
 29036  014466                     u6935:
 29037  014466  52DE               	movf	postinc2,f,c
 29038  014468  90D8               	bcf	status,0,c
 29039  01446A  BEDC               	btfsc	preinc2,7,c
 29040  01446C  80D8               	bsf	status,0,c
 29041  01446E  32DD               	rrcf	postdec2,f,c
 29042  014470  32DD               	rrcf	postdec2,f,c
 29043  014472  32DD               	rrcf	postdec2,f,c
 29044  014474  32DE               	rrcf	postinc2,f,c
 29045  014476                     u6930:
 29046  014476  2EE8               	decfsz	wreg,f,c
 29047  014478  D7F6               	goto	u6935
 29048                           
 29049                           ;stkvar	_temp @ sp[(-13)+8]
 29050  01447A  0EFB               	movlw	-5
 29051  01447C  50E3               	movf	plusw1,w,c
 29052  01447E  0F01               	addlw	1
 29053  014480  6E01               	movwf	btemp^0,c
 29054  014482  0EFB               	movlw	-5
 29055  014484  0060  F007  FFE3   	movff	btemp,plusw1
 29056  01448A  6A01               	clrf	btemp^0,c
 29057  01448C  0EFC               	movlw	-4
 29058  01448E  50E3               	movf	plusw1,w,c
 29059  014490  2001               	addwfc	btemp^0,w,c
 29060  014492  6E01               	movwf	btemp^0,c
 29061  014494  0EFC               	movlw	-4
 29062  014496  0060  F007  FFE3   	movff	btemp,plusw1
 29063  01449C                     l8474:
 29064                           
 29065                           ;stkvar	_temp @ sp[(-13)+8]
 29066  01449C  0EFC               	movlw	-4
 29067  01449E  BEE3               	btfsc	plusw1,7,c
 29068  0144A0  D020               	goto	l8478
 29069  0144A2  0EFC               	movlw	-4
 29070  0144A4  50E3               	movf	plusw1,w,c
 29071  0144A6  E104               	bnz	u6940
 29072  0144A8  0EFB               	movlw	-5
 29073  0144AA  28E3               	incf	plusw1,w,c
 29074  0144AC  A0D8               	btfss	status,0,c
 29075  0144AE  D019               	goto	l8478
 29076  0144B0                     u6940:
 29077  0144B0  0E00               	movlw	0
 29078  0144B2  6E09               	movwf	(btemp+8)^0,c
 29079  0144B4  0E00               	movlw	0
 29080  0144B6  6E0A               	movwf	(btemp+9)^0,c
 29081  0144B8  0E80               	movlw	128
 29082  0144BA  6E0B               	movwf	(btemp+10)^0,c
 29083  0144BC  0E7F               	movlw	127
 29084  0144BE  6E0C               	movwf	(btemp+11)^0,c
 29085                           
 29086                           ;stkvar	_prod @ sp[(-13)+0]
 29087  0144C0  0EF3               	movlw	-13
 29088  0144C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 29089  0144C8  0EF4               	movlw	-12
 29090  0144CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29091  0144D0  0EF5               	movlw	-11
 29092  0144D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29093  0144D8  0EF6               	movlw	-10
 29094  0144DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29095  0144E0  D044               	goto	l8494
 29096  0144E2                     l8478:
 29097                           
 29098                           ;stkvar	_temp @ sp[(-13)+8]
 29099  0144E2  0EFC               	movlw	-4
 29100  0144E4  BEE3               	btfsc	plusw1,7,c
 29101  0144E6  D007               	goto	u6950
 29102  0144E8  0EFC               	movlw	-4
 29103  0144EA  50E3               	movf	plusw1,w,c
 29104  0144EC  E10F               	bnz	l8484
 29105  0144EE  0EFB               	movlw	-5
 29106  0144F0  04E3               	decf	plusw1,w,c
 29107  0144F2  B0D8               	btfsc	status,0,c
 29108  0144F4  D00B               	goto	l8484
 29109  0144F6                     u6950:
 29110                           
 29111                           ;stkvar	_prod @ sp[(-13)+0]
 29112  0144F6  0EF3               	movlw	-13
 29113  0144F8  6AE3               	clrf	plusw1,c
 29114  0144FA  0EF4               	movlw	-12
 29115  0144FC  6AE3               	clrf	plusw1,c
 29116  0144FE  0EF5               	movlw	-11
 29117  014500  6AE3               	clrf	plusw1,c
 29118  014502  0EF6               	movlw	-10
 29119  014504  6AE3               	clrf	plusw1,c
 29120                           
 29121                           ;stkvar	_sign @ sp[(-13)+12]
 29122  014506  0EFF               	movlw	-1
 29123  014508  6AE3               	clrf	plusw1,c
 29124  01450A  D02F               	goto	l8494
 29125  01450C                     l8484:
 29126                           
 29127                           ;stkvar	_temp @ sp[(-13)+8]
 29128                           ;stkvar	_bexp @ sp[(-13)+10]
 29129  01450C  0EFB               	movlw	-5
 29130  01450E  006F FF8C  F001    	movff	plusw1,btemp
 29131  014514  0EFD               	movlw	-3
 29132  014516  0060  F007  FFE3   	movff	btemp,plusw1
 29133                           
 29134                           ;stkvar	_prod @ sp[(-13)+0]
 29135  01451C  50E1               	movf	fsr1l,w,c
 29136  01451E  0FF3               	addlw	-13
 29137  014520  6ED9               	movwf	fsr2l,c
 29138  014522  50E2               	movf	fsr1h,w,c
 29139  014524  6EDA               	movwf	fsr2h,c
 29140  014526  0EFF               	movlw	255
 29141  014528  22DA               	addwfc	fsr2h,f,c
 29142  01452A  0EFF               	movlw	255
 29143  01452C  16DE               	andwf	postinc2,f,c
 29144  01452E  0EFF               	movlw	255
 29145  014530  16DE               	andwf	postinc2,f,c
 29146  014532  0E7F               	movlw	127
 29147  014534  16DE               	andwf	postinc2,f,c
 29148  014536  0E00               	movlw	0
 29149  014538  16DE               	andwf	postinc2,f,c
 29150                           
 29151                           ;stkvar	_bexp @ sp[(-13)+10]
 29152  01453A  0EFD               	movlw	-3
 29153  01453C  A0E3               	btfss	plusw1,0,c
 29154  01453E  D008               	goto	l8492
 29155                           
 29156                           ;stkvar	_prod @ sp[(-13)+0]
 29157  014540  0EF5               	movlw	245
 29158  014542  24E1               	addwf	fsr1l,w,c
 29159  014544  6ED9               	movwf	fsr2l,c
 29160  014546  0EFF               	movlw	255
 29161  014548  20E2               	addwfc	fsr1h,w,c
 29162  01454A  6EDA               	movwf	fsr2h,c
 29163  01454C  0E00               	movlw	0
 29164  01454E  8EDB               	bsf	plusw2,7,c
 29165  014550                     l8492:
 29166                           
 29167                           ;stkvar	_prod @ sp[(-13)+0]
 29168  014550  0EF6               	movlw	246
 29169  014552  24E1               	addwf	fsr1l,w,c
 29170  014554  6ED9               	movwf	fsr2l,c
 29171  014556  0EFF               	movlw	255
 29172  014558  20E2               	addwfc	fsr1h,w,c
 29173  01455A  6EDA               	movwf	fsr2h,c
 29174                           
 29175                           ;stkvar	_bexp @ sp[(-13)+10]
 29176  01455C  0EFD               	movlw	-3
 29177  01455E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29178  014564  90D8               	bcf	status,0,c
 29179  014566  300C               	rrcf	(btemp+11)^0,w,c
 29180  014568  6EDF               	movwf	indf2,c
 29181  01456A                     l8494:
 29182                           
 29183                           ;stkvar	_sign @ sp[(-13)+12]
 29184  01456A  0EFF               	movlw	-1
 29185  01456C  006F FF8C  F00C    	movff	plusw1,btemp+11
 29186                           
 29187                           ;stkvar	_prod @ sp[(-13)+0]
 29188  014572  0EF6               	movlw	246
 29189  014574  24E1               	addwf	fsr1l,w,c
 29190  014576  6ED9               	movwf	fsr2l,c
 29191  014578  0EFF               	movlw	255
 29192  01457A  20E2               	addwfc	fsr1h,w,c
 29193  01457C  6EDA               	movwf	fsr2h,c
 29194  01457E  500C               	movf	(btemp+11)^0,w,c
 29195  014580  12DF               	iorwf	indf2,f,c
 29196                           
 29197                           ;stkvar	_prod @ sp[(-13)+0]
 29198  014582  0EF3               	movlw	-13
 29199  014584  006F FF8C  F001    	movff	plusw1,btemp
 29200  01458A  0EF4               	movlw	-12
 29201  01458C  006F FF8C  F002    	movff	plusw1,btemp+1
 29202  014592  0EF5               	movlw	-11
 29203  014594  006F FF8C  F003    	movff	plusw1,btemp+2
 29204  01459A  0EF6               	movlw	-10
 29205  01459C  006F FF8C  F004    	movff	plusw1,btemp+3
 29206  0145A2                     l3013:
 29207                           
 29208                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29209  0145A2  0EEB               	movlw	235
 29210  0145A4  26E1               	addwf	fsr1l,f,c
 29211  0145A6  0EFF               	movlw	255
 29212  0145A8  22E2               	addwfc	fsr1h,f,c
 29213  0145AA  0012               	return		;funcret
 29214  0145AC                     __end_of___flmul:
 29215                           	opt callstack 0
 29216                           
 29217 ;; *************** function _SYSTEM_Initialize *****************
 29218 ;; Defined at:
 29219 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29220 ;; Parameters:    Size  Location     Type
 29221 ;;		None
 29222 ;; Auto vars:     Size  Location     Type
 29223 ;;		None
 29224 ;; Return value:  Size  Location     Type
 29225 ;;                  1  [STACK] void 
 29226 ;; Registers used:
 29227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29228 ;; Tracked objects:
 29229 ;;		On entry : 0/0
 29230 ;;		On exit  : 3F/3C
 29231 ;;		Unchanged: 0/0
 29232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29237 ;;Total ram usage:        0 bytes
 29238 ;; Hardware stack levels used:    1
 29239 ;; Hardware stack levels required when called:   17
 29240 ;; This function calls:
 29241 ;;		_ADCC_Initialize
 29242 ;;		_CLKREF_Initialize
 29243 ;;		_DMA1_Initialize
 29244 ;;		_DMA2_Initialize
 29245 ;;		_EXT_INT_Initialize
 29246 ;;		_FVR_Initialize
 29247 ;;		_INTERRUPT_Initialize
 29248 ;;		_OSCILLATOR_Initialize
 29249 ;;		_PIN_MANAGER_Initialize
 29250 ;;		_PMD_Initialize
 29251 ;;		_PWM8_Initialize
 29252 ;;		_SPI1_Initialize
 29253 ;;		_TMR2_Initialize
 29254 ;;		_TMR3_Initialize
 29255 ;;		_TMR5_Initialize
 29256 ;;		_TMR6_Initialize
 29257 ;;		_UART1_Initialize
 29258 ;;		_UART2_Initialize
 29259 ;; This function is called by:
 29260 ;;		_main
 29261 ;; This function uses a reentrant model
 29262 ;;
 29263                           
 29264                           	psect	text109
 29265  01B3CE                     __ptext109:
 29266                           	opt callstack 0
 29267  01B3CE                     _SYSTEM_Initialize:
 29268                           	opt callstack 13
 29269                           
 29270                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29271                           
 29272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29273                           ;incstack = 0
 29274  01B3CE  ECCB  F0D7         	call	_INTERRUPT_Initialize	;wreg free
 29275                           
 29276                           ; BSR set to: 57
 29277                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29278  01B3D2  EC10  F0E0         	call	_PMD_Initialize	;wreg free
 29279                           
 29280                           ; BSR set to: 57
 29281                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29282  01B3D6  EC55  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 29283                           
 29284                           ; BSR set to: 58
 29285                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29286  01B3DA  EC05  F0E0         	call	_OSCILLATOR_Initialize	;wreg free
 29287                           
 29288                           ; BSR set to: 57
 29289                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29290  01B3DE  EC9B  F0E0         	call	_FVR_Initialize	;wreg free
 29291                           
 29292                           ; BSR set to: 62
 29293                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29294  01B3E2  EC60  F0D7         	call	_ADCC_Initialize	;wreg free
 29295                           
 29296                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29297  01B3E6  ECE3  F0DF         	call	_TMR2_Initialize	;wreg free
 29298                           
 29299                           ; BSR set to: 57
 29300                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29301  01B3EA  ECFA  F0DF         	call	_PWM8_Initialize	;wreg free
 29302                           
 29303                           ; BSR set to: 63
 29304                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29305  01B3EE  EC8F  F0DC         	call	_EXT_INT_Initialize	;wreg free
 29306                           
 29307                           ; BSR set to: 57
 29308                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29309  01B3F2  EC62  F0DD         	call	_TMR6_Initialize	;wreg free
 29310                           
 29311                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29312  01B3F6  EC78  F0DA         	call	_TMR3_Initialize	;wreg free
 29313                           
 29314                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29315  01B3FA  EC54  F0DA         	call	_TMR5_Initialize	;wreg free
 29316                           
 29317                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29318  01B3FE  EC30  F0DA         	call	_UART1_Initialize	;wreg free
 29319                           
 29320                           ; BSR set to: 57
 29321                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29322  01B402  EC92  F0D8         	call	_UART2_Initialize	;wreg free
 29323                           
 29324                           ; BSR set to: 57
 29325                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29326  01B406  ECEF  F0DF         	call	_SPI1_Initialize	;wreg free
 29327                           
 29328                           ; BSR set to: 61
 29329                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29330  01B40A  EC1C  F0D9         	call	_DMA2_Initialize	;wreg free
 29331                           
 29332                           ; BSR set to: 59
 29333                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29334  01B40E  EC2B  F0D7         	call	_DMA1_Initialize	;wreg free
 29335                           
 29336                           ; BSR set to: 59
 29337                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29338  01B412  EC6F  F0E0         	call	_CLKREF_Initialize	;wreg free
 29339                           
 29340                           ; BSR set to: 60
 29341                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29342  01B416  0012               	return		;funcret
 29343  01B418                     __end_of_SYSTEM_Initialize:
 29344                           	opt callstack 0
 29345                           
 29346 ;; *************** function _UART2_Initialize *****************
 29347 ;; Defined at:
 29348 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29349 ;; Parameters:    Size  Location     Type
 29350 ;;		None
 29351 ;; Auto vars:     Size  Location     Type
 29352 ;;		None
 29353 ;; Return value:  Size  Location     Type
 29354 ;;                  1  [STACK] void 
 29355 ;; Registers used:
 29356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29357 ;; Tracked objects:
 29358 ;;		On entry : 3F/39
 29359 ;;		On exit  : 3F/39
 29360 ;;		Unchanged: 0/0
 29361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29366 ;;Total ram usage:        0 bytes
 29367 ;; Hardware stack levels used:    1
 29368 ;; Hardware stack levels required when called:   16
 29369 ;; This function calls:
 29370 ;;		_UART2_SetRxInterruptHandler
 29371 ;;		_UART2_SetTxInterruptHandler
 29372 ;; This function is called by:
 29373 ;;		_SYSTEM_Initialize
 29374 ;; This function uses a reentrant model
 29375 ;;
 29376                           
 29377                           	psect	text110
 29378  01B124                     __ptext110:
 29379                           	opt callstack 0
 29380  01B124                     _UART2_Initialize:
 29381                           	opt callstack 13
 29382                           
 29383                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29384                           
 29385                           ; BSR set to: 60
 29386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29387                           ;incstack = 0
 29388  01B124  0139               	movlb	57	; () banked
 29389  01B126  9596               	bcf	150,2,b	;volatile
 29390                           
 29391                           ; BSR set to: 57
 29392                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29393  01B128  0EA8               	movlw	low _UART2_Receive_ISR
 29394  01B12A  6EE6               	movwf	postinc1,c
 29395  01B12C  0EBE               	movlw	high _UART2_Receive_ISR
 29396  01B12E  6EE6               	movwf	postinc1,c
 29397  01B130  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29398  01B132  6EE6               	movwf	postinc1,c
 29399  01B134  ECB3  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29400                           
 29401                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29402  01B138  0139               	movlb	57	; () banked
 29403  01B13A  9796               	bcf	150,3,b	;volatile
 29404                           
 29405                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29406  01B13C  0E98               	movlw	low _UART2_Transmit_ISR
 29407  01B13E  6EE6               	movwf	postinc1,c
 29408  01B140  0EBA               	movlw	high _UART2_Transmit_ISR
 29409  01B142  6EE6               	movwf	postinc1,c
 29410  01B144  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29411  01B146  6EE6               	movwf	postinc1,c
 29412  01B148  EC9F  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29413                           
 29414                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29415  01B14C  013D               	movlb	61	; () banked
 29416  01B14E  6BD4               	clrf	212,b	;volatile
 29417                           
 29418                           ; BSR set to: 61
 29419                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29420  01B150  6BD6               	clrf	214,b	;volatile
 29421                           
 29422                           ; BSR set to: 61
 29423                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29424  01B152  6BD8               	clrf	216,b	;volatile
 29425                           
 29426                           ; BSR set to: 61
 29427                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29428  01B154  0EB0               	movlw	176
 29429  01B156  6FDA               	movwf	218,b	;volatile
 29430                           
 29431                           ; BSR set to: 61
 29432                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29433  01B158  0E80               	movlw	128
 29434  01B15A  6FDB               	movwf	219,b	;volatile
 29435                           
 29436                           ; BSR set to: 61
 29437                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29438  01B15C  6BDC               	clrf	220,b	;volatile
 29439                           
 29440                           ; BSR set to: 61
 29441                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29442  01B15E  0E82               	movlw	130
 29443  01B160  6FDD               	movwf	221,b	;volatile
 29444                           
 29445                           ; BSR set to: 61
 29446                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29447  01B162  0E06               	movlw	6
 29448  01B164  6FDE               	movwf	222,b	;volatile
 29449                           
 29450                           ; BSR set to: 61
 29451                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29452  01B166  6BDF               	clrf	223,b	;volatile
 29453                           
 29454                           ; BSR set to: 61
 29455                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29456  01B168  6BE0               	clrf	224,b	;volatile
 29457                           
 29458                           ; BSR set to: 61
 29459                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29460  01B16A  6BE1               	clrf	225,b	;volatile
 29461                           
 29462                           ; BSR set to: 61
 29463                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29464  01B16C  6BE2               	clrf	226,b	;volatile
 29465                           
 29466                           ; BSR set to: 61
 29467                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29468  01B16E  0100               	movlb	0	; () banked
 29469  01B170  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29470                           
 29471                           ; BSR set to: 0
 29472                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29473  01B172  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29474                           
 29475                           ; BSR set to: 0
 29476                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29477  01B174  0E40               	movlw	64
 29478  01B176  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29479                           
 29480                           ; BSR set to: 0
 29481                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29482  01B178  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29483                           
 29484                           ; BSR set to: 0
 29485                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29486  01B17A  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29487                           
 29488                           ; BSR set to: 0
 29489                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29490  01B17C  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29491                           
 29492                           ; BSR set to: 0
 29493                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29494  01B17E  0139               	movlb	57	; () banked
 29495  01B180  8596               	bsf	150,2,b	;volatile
 29496                           
 29497                           ; BSR set to: 57
 29498                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29499  01B182  0012               	return		;funcret
 29500  01B184                     __end_of_UART2_Initialize:
 29501                           	opt callstack 0
 29502                           
 29503 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29504 ;; Defined at:
 29505 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29506 ;; Parameters:    Size  Location     Type
 29507 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29508 ;;		 -> UART2_Transmit_ISR(1), 
 29509 ;; Auto vars:     Size  Location     Type
 29510 ;;		None
 29511 ;; Return value:  Size  Location     Type
 29512 ;;                  1  [STACK] void 
 29513 ;; Registers used:
 29514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29515 ;; Tracked objects:
 29516 ;;		On entry : 3F/39
 29517 ;;		On exit  : 0/0
 29518 ;;		Unchanged: 0/0
 29519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29524 ;;Total ram usage:        0 bytes
 29525 ;; Hardware stack levels used:    1
 29526 ;; Hardware stack levels required when called:   15
 29527 ;; This function calls:
 29528 ;;		Nothing
 29529 ;; This function is called by:
 29530 ;;		_UART2_Initialize
 29531 ;; This function uses a reentrant model
 29532 ;;
 29533                           
 29534                           	psect	text111
 29535  01BB3E                     __ptext111:
 29536                           	opt callstack 0
 29537  01BB3E                     _UART2_SetTxInterruptHandler:
 29538                           	opt callstack 13
 29539                           
 29540                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29541                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29542                           
 29543                           ; BSR set to: 57
 29544                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29545                           ;incstack = 0
 29546  01BB3E  50E1               	movf	fsr1l,w,c
 29547  01BB40  0FFD               	addlw	-3
 29548  01BB42  6ED9               	movwf	fsr2l,c
 29549  01BB44  50E2               	movf	fsr1h,w,c
 29550  01BB46  6EDA               	movwf	fsr2h,c
 29551  01BB48  0EFF               	movlw	255
 29552  01BB4A  22DA               	addwfc	fsr2h,f,c
 29553  01BB4C  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29554  01BB52  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29555  01BB58  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29556                           
 29557                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29558  01BB5E  52E5               	movf	postdec1,f,c
 29559  01BB60  52E5               	movf	postdec1,f,c
 29560  01BB62  52E5               	movf	postdec1,f,c
 29561  01BB64  0012               	return		;funcret
 29562  01BB66                     __end_of_UART2_SetTxInterruptHandler:
 29563                           	opt callstack 0
 29564                           
 29565 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29566 ;; Defined at:
 29567 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29568 ;; Parameters:    Size  Location     Type
 29569 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29570 ;;		 -> UART2_Receive_ISR(1), 
 29571 ;; Auto vars:     Size  Location     Type
 29572 ;;		None
 29573 ;; Return value:  Size  Location     Type
 29574 ;;                  1  [STACK] void 
 29575 ;; Registers used:
 29576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29577 ;; Tracked objects:
 29578 ;;		On entry : 3F/39
 29579 ;;		On exit  : 0/0
 29580 ;;		Unchanged: 0/0
 29581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29586 ;;Total ram usage:        0 bytes
 29587 ;; Hardware stack levels used:    1
 29588 ;; Hardware stack levels required when called:   15
 29589 ;; This function calls:
 29590 ;;		Nothing
 29591 ;; This function is called by:
 29592 ;;		_UART2_Initialize
 29593 ;; This function uses a reentrant model
 29594 ;;
 29595                           
 29596                           	psect	text112
 29597  01BB66                     __ptext112:
 29598                           	opt callstack 0
 29599  01BB66                     _UART2_SetRxInterruptHandler:
 29600                           	opt callstack 13
 29601                           
 29602                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29603                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29604                           
 29605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29606                           ;incstack = 0
 29607  01BB66  50E1               	movf	fsr1l,w,c
 29608  01BB68  0FFD               	addlw	-3
 29609  01BB6A  6ED9               	movwf	fsr2l,c
 29610  01BB6C  50E2               	movf	fsr1h,w,c
 29611  01BB6E  6EDA               	movwf	fsr2h,c
 29612  01BB70  0EFF               	movlw	255
 29613  01BB72  22DA               	addwfc	fsr2h,f,c
 29614  01BB74  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29615  01BB7A  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29616  01BB80  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29617                           
 29618                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29619  01BB86  52E5               	movf	postdec1,f,c
 29620  01BB88  52E5               	movf	postdec1,f,c
 29621  01BB8A  52E5               	movf	postdec1,f,c
 29622  01BB8C  0012               	return		;funcret
 29623  01BB8E                     __end_of_UART2_SetRxInterruptHandler:
 29624                           	opt callstack 0
 29625                           
 29626 ;; *************** function _UART1_Initialize *****************
 29627 ;; Defined at:
 29628 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29629 ;; Parameters:    Size  Location     Type
 29630 ;;		None
 29631 ;; Auto vars:     Size  Location     Type
 29632 ;;		None
 29633 ;; Return value:  Size  Location     Type
 29634 ;;                  1  [STACK] void 
 29635 ;; Registers used:
 29636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29637 ;; Tracked objects:
 29638 ;;		On entry : 0/39
 29639 ;;		On exit  : 3F/39
 29640 ;;		Unchanged: 0/0
 29641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29646 ;;Total ram usage:        0 bytes
 29647 ;; Hardware stack levels used:    1
 29648 ;; Hardware stack levels required when called:   16
 29649 ;; This function calls:
 29650 ;;		_UART1_SetRxInterruptHandler
 29651 ;; This function is called by:
 29652 ;;		_SYSTEM_Initialize
 29653 ;; This function uses a reentrant model
 29654 ;;
 29655                           
 29656                           	psect	text113
 29657  01B460                     __ptext113:
 29658                           	opt callstack 0
 29659  01B460                     _UART1_Initialize:
 29660                           	opt callstack 13
 29661                           
 29662                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29663                           
 29664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29665                           ;incstack = 0
 29666  01B460  0139               	movlb	57	; () banked
 29667  01B462  9793               	bcf	147,3,b	;volatile
 29668                           
 29669                           ; BSR set to: 57
 29670                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29671  01B464  0E40               	movlw	low _UART1_Receive_ISR
 29672  01B466  6EE6               	movwf	postinc1,c
 29673  01B468  0EBF               	movlw	high _UART1_Receive_ISR
 29674  01B46A  6EE6               	movwf	postinc1,c
 29675  01B46C  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29676  01B46E  6EE6               	movwf	postinc1,c
 29677  01B470  ECC7  F0DD         	call	_UART1_SetRxInterruptHandler	;wreg free
 29678                           
 29679                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29680  01B474  013D               	movlb	61	; () banked
 29681  01B476  6BEC               	clrf	236,b	;volatile
 29682                           
 29683                           ; BSR set to: 61
 29684                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29685  01B478  6BED               	clrf	237,b	;volatile
 29686                           
 29687                           ; BSR set to: 61
 29688                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29689  01B47A  6BEE               	clrf	238,b	;volatile
 29690                           
 29691                           ; BSR set to: 61
 29692                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29693  01B47C  6BEF               	clrf	239,b	;volatile
 29694                           
 29695                           ; BSR set to: 61
 29696                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29697  01B47E  6BF0               	clrf	240,b	;volatile
 29698                           
 29699                           ; BSR set to: 61
 29700                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29701  01B480  6BF1               	clrf	241,b	;volatile
 29702                           
 29703                           ; BSR set to: 61
 29704                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29705  01B482  0EB0               	movlw	176
 29706  01B484  6FF2               	movwf	242,b	;volatile
 29707                           
 29708                           ; BSR set to: 61
 29709                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29710  01B486  0E80               	movlw	128
 29711  01B488  6FF3               	movwf	243,b	;volatile
 29712                           
 29713                           ; BSR set to: 61
 29714                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29715  01B48A  6BF4               	clrf	244,b	;volatile
 29716                           
 29717                           ; BSR set to: 61
 29718                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29719  01B48C  0E8A               	movlw	138
 29720  01B48E  6FF5               	movwf	245,b	;volatile
 29721                           
 29722                           ; BSR set to: 61
 29723                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29724  01B490  6BF6               	clrf	246,b	;volatile
 29725                           
 29726                           ; BSR set to: 61
 29727                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29728  01B492  6BF7               	clrf	247,b	;volatile
 29729                           
 29730                           ; BSR set to: 61
 29731                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29732  01B494  6BF8               	clrf	248,b	;volatile
 29733                           
 29734                           ; BSR set to: 61
 29735                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29736  01B496  6BF9               	clrf	249,b	;volatile
 29737                           
 29738                           ; BSR set to: 61
 29739                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29740  01B498  6BFA               	clrf	250,b	;volatile
 29741                           
 29742                           ; BSR set to: 61
 29743                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29744  01B49A  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29745                           
 29746                           ; BSR set to: 61
 29747                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29748  01B49C  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29749                           
 29750                           ; BSR set to: 61
 29751                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29752  01B49E  0100               	movlb	0	; () banked
 29753  01B4A0  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29754                           
 29755                           ; BSR set to: 0
 29756                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29757  01B4A2  0139               	movlb	57	; () banked
 29758  01B4A4  8793               	bsf	147,3,b	;volatile
 29759                           
 29760                           ; BSR set to: 57
 29761                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29762  01B4A6  0012               	return		;funcret
 29763  01B4A8                     __end_of_UART1_Initialize:
 29764                           	opt callstack 0
 29765                           
 29766 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29767 ;; Defined at:
 29768 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29769 ;; Parameters:    Size  Location     Type
 29770 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29771 ;;		 -> UART1_Receive_ISR(1), 
 29772 ;; Auto vars:     Size  Location     Type
 29773 ;;		None
 29774 ;; Return value:  Size  Location     Type
 29775 ;;                  1  [STACK] void 
 29776 ;; Registers used:
 29777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29778 ;; Tracked objects:
 29779 ;;		On entry : 3F/39
 29780 ;;		On exit  : 0/0
 29781 ;;		Unchanged: 0/0
 29782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29787 ;;Total ram usage:        0 bytes
 29788 ;; Hardware stack levels used:    1
 29789 ;; Hardware stack levels required when called:   15
 29790 ;; This function calls:
 29791 ;;		Nothing
 29792 ;; This function is called by:
 29793 ;;		_UART1_Initialize
 29794 ;; This function uses a reentrant model
 29795 ;;
 29796                           
 29797                           	psect	text114
 29798  01BB8E                     __ptext114:
 29799                           	opt callstack 0
 29800  01BB8E                     _UART1_SetRxInterruptHandler:
 29801                           	opt callstack 13
 29802                           
 29803                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29804                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29805                           
 29806                           ; BSR set to: 57
 29807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29808                           ;incstack = 0
 29809  01BB8E  50E1               	movf	fsr1l,w,c
 29810  01BB90  0FFD               	addlw	-3
 29811  01BB92  6ED9               	movwf	fsr2l,c
 29812  01BB94  50E2               	movf	fsr1h,w,c
 29813  01BB96  6EDA               	movwf	fsr2h,c
 29814  01BB98  0EFF               	movlw	255
 29815  01BB9A  22DA               	addwfc	fsr2h,f,c
 29816  01BB9C  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29817  01BBA2  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29818  01BBA8  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29819                           
 29820                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29821  01BBAE  52E5               	movf	postdec1,f,c
 29822  01BBB0  52E5               	movf	postdec1,f,c
 29823  01BBB2  52E5               	movf	postdec1,f,c
 29824  01BBB4  0012               	return		;funcret
 29825  01BBB6                     __end_of_UART1_SetRxInterruptHandler:
 29826                           	opt callstack 0
 29827                           
 29828 ;; *************** function _TMR6_Initialize *****************
 29829 ;; Defined at:
 29830 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29831 ;; Parameters:    Size  Location     Type
 29832 ;;		None
 29833 ;; Auto vars:     Size  Location     Type
 29834 ;;		None
 29835 ;; Return value:  Size  Location     Type
 29836 ;;                  1  [STACK] void 
 29837 ;; Registers used:
 29838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29839 ;; Tracked objects:
 29840 ;;		On entry : 3F/39
 29841 ;;		On exit  : 0/0
 29842 ;;		Unchanged: 0/0
 29843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29848 ;;Total ram usage:        0 bytes
 29849 ;; Hardware stack levels used:    1
 29850 ;; Hardware stack levels required when called:   16
 29851 ;; This function calls:
 29852 ;;		_TMR6_SetInterruptHandler
 29853 ;; This function is called by:
 29854 ;;		_SYSTEM_Initialize
 29855 ;; This function uses a reentrant model
 29856 ;;
 29857                           
 29858                           	psect	text115
 29859  01BAC4                     __ptext115:
 29860                           	opt callstack 0
 29861  01BAC4                     _TMR6_Initialize:
 29862                           	opt callstack 13
 29863                           
 29864                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29865                           
 29866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29867                           ;incstack = 0
 29868  01BAC4  0E01               	movlw	1
 29869  01BAC6  6E96               	movwf	150,c	;volatile
 29870                           
 29871                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29872  01BAC8  6A95               	clrf	149,c	;volatile
 29873                           
 29874                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29875  01BACA  6A97               	clrf	151,c	;volatile
 29876                           
 29877                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29878  01BACC  0E7C               	movlw	124
 29879  01BACE  6E93               	movwf	147,c	;volatile
 29880                           
 29881                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29882  01BAD0  6A92               	clrf	146,c	;volatile
 29883                           
 29884                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29885  01BAD2  0139               	movlb	57	; () banked
 29886  01BAD4  91A9               	bcf	169,0,b	;volatile
 29887                           
 29888                           ; BSR set to: 57
 29889                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29890  01BAD6  8199               	bsf	153,0,b	;volatile
 29891                           
 29892                           ; BSR set to: 57
 29893                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29894  01BAD8  0E36               	movlw	low _TMR6_DefaultInterruptHandler
 29895  01BADA  6EE6               	movwf	postinc1,c
 29896  01BADC  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29897  01BADE  6EE6               	movwf	postinc1,c
 29898  01BAE0  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29899  01BAE2  6EE6               	movwf	postinc1,c
 29900  01BAE4  ECDB  F0DD         	call	_TMR6_SetInterruptHandler	;wreg free
 29901                           
 29902                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29903  01BAE8  0EE0               	movlw	224
 29904  01BAEA  6E94               	movwf	148,c	;volatile
 29905                           
 29906                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29907  01BAEC  0012               	return		;funcret
 29908  01BAEE                     __end_of_TMR6_Initialize:
 29909                           	opt callstack 0
 29910                           
 29911 ;; *************** function _TMR6_SetInterruptHandler *****************
 29912 ;; Defined at:
 29913 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29914 ;; Parameters:    Size  Location     Type
 29915 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29916 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29917 ;; Auto vars:     Size  Location     Type
 29918 ;;		None
 29919 ;; Return value:  Size  Location     Type
 29920 ;;                  1  [STACK] void 
 29921 ;; Registers used:
 29922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29923 ;; Tracked objects:
 29924 ;;		On entry : 3F/39
 29925 ;;		On exit  : 0/0
 29926 ;;		Unchanged: 0/0
 29927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29932 ;;Total ram usage:        0 bytes
 29933 ;; Hardware stack levels used:    1
 29934 ;; Hardware stack levels required when called:   15
 29935 ;; This function calls:
 29936 ;;		Nothing
 29937 ;; This function is called by:
 29938 ;;		_TMR6_Initialize
 29939 ;; This function uses a reentrant model
 29940 ;;
 29941                           
 29942                           	psect	text116
 29943  01BBB6                     __ptext116:
 29944                           	opt callstack 0
 29945  01BBB6                     _TMR6_SetInterruptHandler:
 29946                           	opt callstack 13
 29947                           
 29948                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29949                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29950                           
 29951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29952                           ;incstack = 0
 29953  01BBB6  50E1               	movf	fsr1l,w,c
 29954  01BBB8  0FFD               	addlw	-3
 29955  01BBBA  6ED9               	movwf	fsr2l,c
 29956  01BBBC  50E2               	movf	fsr1h,w,c
 29957  01BBBE  6EDA               	movwf	fsr2h,c
 29958  01BBC0  0EFF               	movlw	255
 29959  01BBC2  22DA               	addwfc	fsr2h,f,c
 29960  01BBC4  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29961  01BBCA  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29962  01BBD0  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29963                           
 29964                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29965  01BBD6  52E5               	movf	postdec1,f,c
 29966  01BBD8  52E5               	movf	postdec1,f,c
 29967  01BBDA  52E5               	movf	postdec1,f,c
 29968  01BBDC  0012               	return		;funcret
 29969  01BBDE                     __end_of_TMR6_SetInterruptHandler:
 29970                           	opt callstack 0
 29971                           
 29972 ;; *************** function _TMR5_Initialize *****************
 29973 ;; Defined at:
 29974 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29975 ;; Parameters:    Size  Location     Type
 29976 ;;		None
 29977 ;; Auto vars:     Size  Location     Type
 29978 ;;		None
 29979 ;; Return value:  Size  Location     Type
 29980 ;;                  1  [STACK] void 
 29981 ;; Registers used:
 29982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29983 ;; Tracked objects:
 29984 ;;		On entry : 0/39
 29985 ;;		On exit  : 0/0
 29986 ;;		Unchanged: 0/0
 29987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29992 ;;Total ram usage:        0 bytes
 29993 ;; Hardware stack levels used:    1
 29994 ;; Hardware stack levels required when called:   16
 29995 ;; This function calls:
 29996 ;;		_TMR5_SetInterruptHandler
 29997 ;; This function is called by:
 29998 ;;		_SYSTEM_Initialize
 29999 ;; This function uses a reentrant model
 30000 ;;
 30001                           
 30002                           	psect	text117
 30003  01B4A8                     __ptext117:
 30004                           	opt callstack 0
 30005  01B4A8                     _TMR5_Initialize:
 30006                           	opt callstack 13
 30007                           
 30008                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30009                           
 30010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30011                           ;incstack = 0
 30012  01B4A8  6A9B               	clrf	155,c	;volatile
 30013                           
 30014                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30015  01B4AA  6A9C               	clrf	156,c	;volatile
 30016                           
 30017                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30018  01B4AC  0E01               	movlw	1
 30019  01B4AE  6E9D               	movwf	157,c	;volatile
 30020                           
 30021                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30022  01B4B0  0E63               	movlw	99
 30023  01B4B2  6E99               	movwf	153,c	;volatile
 30024                           
 30025                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30026  01B4B4  0EC0               	movlw	192
 30027  01B4B6  6E98               	movwf	152,c	;volatile
 30028                           
 30029                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30030  01B4B8  5098               	movf	152,w,c	;volatile
 30031  01B4BA  006F FE64  F001    	movff	16281,btemp	;volatile
 30032  01B4C0  6A02               	clrf	(btemp+1)^0,c
 30033  01B4C2  0060  F004  F002   	movff	btemp,btemp+1
 30034  01B4C8  6A01               	clrf	btemp^0,c
 30035  01B4CA  1001               	iorwf	btemp^0,w,c
 30036  01B4CC  0100               	movlb	0	; () banked
 30037  01B4CE  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30038  01B4D0  5002               	movf	(btemp+1)^0,w,c
 30039  01B4D2  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30040                           
 30041                           ; BSR set to: 0
 30042                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30043  01B4D4  0139               	movlb	57	; () banked
 30044  01B4D6  9DA8               	bcf	168,6,b	;volatile
 30045                           
 30046                           ; BSR set to: 57
 30047                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30048  01B4D8  8D98               	bsf	152,6,b	;volatile
 30049                           
 30050                           ; BSR set to: 57
 30051                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30052  01B4DA  0E7C               	movlw	low _TMR5_DefaultInterruptHandler
 30053  01B4DC  6EE6               	movwf	postinc1,c
 30054  01B4DE  0EB8               	movlw	high _TMR5_DefaultInterruptHandler
 30055  01B4E0  6EE6               	movwf	postinc1,c
 30056  01B4E2  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30057  01B4E4  6EE6               	movwf	postinc1,c
 30058  01B4E6  ECEF  F0DD         	call	_TMR5_SetInterruptHandler	;wreg free
 30059                           
 30060                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30061  01B4EA  0E31               	movlw	49
 30062  01B4EC  6E9A               	movwf	154,c	;volatile
 30063                           
 30064                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30065  01B4EE  0012               	return		;funcret
 30066  01B4F0                     __end_of_TMR5_Initialize:
 30067                           	opt callstack 0
 30068                           
 30069 ;; *************** function _TMR5_SetInterruptHandler *****************
 30070 ;; Defined at:
 30071 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30072 ;; Parameters:    Size  Location     Type
 30073 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30074 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30075 ;; Auto vars:     Size  Location     Type
 30076 ;;		None
 30077 ;; Return value:  Size  Location     Type
 30078 ;;                  1  [STACK] void 
 30079 ;; Registers used:
 30080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30081 ;; Tracked objects:
 30082 ;;		On entry : 3F/39
 30083 ;;		On exit  : 0/0
 30084 ;;		Unchanged: 0/0
 30085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30090 ;;Total ram usage:        0 bytes
 30091 ;; Hardware stack levels used:    1
 30092 ;; Hardware stack levels required when called:   15
 30093 ;; This function calls:
 30094 ;;		Nothing
 30095 ;; This function is called by:
 30096 ;;		_TMR5_Initialize
 30097 ;; This function uses a reentrant model
 30098 ;;
 30099                           
 30100                           	psect	text118
 30101  01BBDE                     __ptext118:
 30102                           	opt callstack 0
 30103  01BBDE                     _TMR5_SetInterruptHandler:
 30104                           	opt callstack 13
 30105                           
 30106                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30107                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30108                           
 30109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30110                           ;incstack = 0
 30111  01BBDE  50E1               	movf	fsr1l,w,c
 30112  01BBE0  0FFD               	addlw	-3
 30113  01BBE2  6ED9               	movwf	fsr2l,c
 30114  01BBE4  50E2               	movf	fsr1h,w,c
 30115  01BBE6  6EDA               	movwf	fsr2h,c
 30116  01BBE8  0EFF               	movlw	255
 30117  01BBEA  22DA               	addwfc	fsr2h,f,c
 30118  01BBEC  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 30119  01BBF2  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 30120  01BBF8  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 30121                           
 30122                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30123  01BBFE  52E5               	movf	postdec1,f,c
 30124  01BC00  52E5               	movf	postdec1,f,c
 30125  01BC02  52E5               	movf	postdec1,f,c
 30126  01BC04  0012               	return		;funcret
 30127  01BC06                     __end_of_TMR5_SetInterruptHandler:
 30128                           	opt callstack 0
 30129                           
 30130 ;; *************** function _TMR3_Initialize *****************
 30131 ;; Defined at:
 30132 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30133 ;; Parameters:    Size  Location     Type
 30134 ;;		None
 30135 ;; Auto vars:     Size  Location     Type
 30136 ;;		None
 30137 ;; Return value:  Size  Location     Type
 30138 ;;                  1  [STACK] void 
 30139 ;; Registers used:
 30140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30141 ;; Tracked objects:
 30142 ;;		On entry : 0/39
 30143 ;;		On exit  : 0/0
 30144 ;;		Unchanged: 0/0
 30145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30150 ;;Total ram usage:        0 bytes
 30151 ;; Hardware stack levels used:    1
 30152 ;; Hardware stack levels required when called:   16
 30153 ;; This function calls:
 30154 ;;		_TMR3_SetInterruptHandler
 30155 ;; This function is called by:
 30156 ;;		_SYSTEM_Initialize
 30157 ;; This function uses a reentrant model
 30158 ;;
 30159                           
 30160                           	psect	text119
 30161  01B4F0                     __ptext119:
 30162                           	opt callstack 0
 30163  01B4F0                     _TMR3_Initialize:
 30164                           	opt callstack 13
 30165                           
 30166                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30167                           
 30168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30169                           ;incstack = 0
 30170  01B4F0  6AA7               	clrf	167,c	;volatile
 30171                           
 30172                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30173  01B4F2  6AA8               	clrf	168,c	;volatile
 30174                           
 30175                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30176  01B4F4  0E01               	movlw	1
 30177  01B4F6  6EA9               	movwf	169,c	;volatile
 30178                           
 30179                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30180  01B4F8  0E3C               	movlw	60
 30181  01B4FA  6EA5               	movwf	165,c	;volatile
 30182                           
 30183                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30184  01B4FC  0EB0               	movlw	176
 30185  01B4FE  6EA4               	movwf	164,c	;volatile
 30186                           
 30187                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30188  01B500  50A4               	movf	164,w,c	;volatile
 30189  01B502  006F FE94  F001    	movff	16293,btemp	;volatile
 30190  01B508  6A02               	clrf	(btemp+1)^0,c
 30191  01B50A  0060  F004  F002   	movff	btemp,btemp+1
 30192  01B510  6A01               	clrf	btemp^0,c
 30193  01B512  1001               	iorwf	btemp^0,w,c
 30194  01B514  0100               	movlb	0	; () banked
 30195  01B516  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30196  01B518  5002               	movf	(btemp+1)^0,w,c
 30197  01B51A  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30198                           
 30199                           ; BSR set to: 0
 30200                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30201  01B51C  0139               	movlb	57	; () banked
 30202  01B51E  9DA6               	bcf	166,6,b	;volatile
 30203                           
 30204                           ; BSR set to: 57
 30205                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30206  01B520  8D96               	bsf	150,6,b	;volatile
 30207                           
 30208                           ; BSR set to: 57
 30209                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30210  01B522  0E60               	movlw	low _TMR3_DefaultInterruptHandler
 30211  01B524  6EE6               	movwf	postinc1,c
 30212  01B526  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 30213  01B528  6EE6               	movwf	postinc1,c
 30214  01B52A  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30215  01B52C  6EE6               	movwf	postinc1,c
 30216  01B52E  EC03  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
 30217                           
 30218                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30219  01B532  0E31               	movlw	49
 30220  01B534  6EA6               	movwf	166,c	;volatile
 30221                           
 30222                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30223  01B536  0012               	return		;funcret
 30224  01B538                     __end_of_TMR3_Initialize:
 30225                           	opt callstack 0
 30226                           
 30227 ;; *************** function _TMR3_SetInterruptHandler *****************
 30228 ;; Defined at:
 30229 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30230 ;; Parameters:    Size  Location     Type
 30231 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30232 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30233 ;; Auto vars:     Size  Location     Type
 30234 ;;		None
 30235 ;; Return value:  Size  Location     Type
 30236 ;;                  1  [STACK] void 
 30237 ;; Registers used:
 30238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30239 ;; Tracked objects:
 30240 ;;		On entry : 0/1
 30241 ;;		On exit  : 0/0
 30242 ;;		Unchanged: 0/0
 30243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30248 ;;Total ram usage:        0 bytes
 30249 ;; Hardware stack levels used:    1
 30250 ;; Hardware stack levels required when called:   15
 30251 ;; This function calls:
 30252 ;;		Nothing
 30253 ;; This function is called by:
 30254 ;;		_TMR3_Initialize
 30255 ;;		_init_bsoc
 30256 ;; This function uses a reentrant model
 30257 ;;
 30258                           
 30259                           	psect	text120
 30260  01BC06                     __ptext120:
 30261                           	opt callstack 0
 30262  01BC06                     _TMR3_SetInterruptHandler:
 30263                           	opt callstack 14
 30264                           
 30265                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30266                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30267                           
 30268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30269                           ;incstack = 0
 30270  01BC06  50E1               	movf	fsr1l,w,c
 30271  01BC08  0FFD               	addlw	-3
 30272  01BC0A  6ED9               	movwf	fsr2l,c
 30273  01BC0C  50E2               	movf	fsr1h,w,c
 30274  01BC0E  6EDA               	movwf	fsr2h,c
 30275  01BC10  0EFF               	movlw	255
 30276  01BC12  22DA               	addwfc	fsr2h,f,c
 30277  01BC14  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 30278  01BC1A  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 30279  01BC20  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 30280                           
 30281                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30282  01BC26  52E5               	movf	postdec1,f,c
 30283  01BC28  52E5               	movf	postdec1,f,c
 30284  01BC2A  52E5               	movf	postdec1,f,c
 30285  01BC2C  0012               	return		;funcret
 30286  01BC2E                     __end_of_TMR3_SetInterruptHandler:
 30287                           	opt callstack 0
 30288                           
 30289 ;; *************** function _TMR2_Initialize *****************
 30290 ;; Defined at:
 30291 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30292 ;; Parameters:    Size  Location     Type
 30293 ;;		None
 30294 ;; Auto vars:     Size  Location     Type
 30295 ;;		None
 30296 ;; Return value:  Size  Location     Type
 30297 ;;                  1  [STACK] void 
 30298 ;; Registers used:
 30299 ;;		wreg, status,2
 30300 ;; Tracked objects:
 30301 ;;		On entry : 0/3E
 30302 ;;		On exit  : 3F/39
 30303 ;;		Unchanged: 0/0
 30304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30309 ;;Total ram usage:        0 bytes
 30310 ;; Hardware stack levels used:    1
 30311 ;; Hardware stack levels required when called:   15
 30312 ;; This function calls:
 30313 ;;		Nothing
 30314 ;; This function is called by:
 30315 ;;		_SYSTEM_Initialize
 30316 ;; This function uses a reentrant model
 30317 ;;
 30318                           
 30319                           	psect	text121
 30320  01BFC6                     __ptext121:
 30321                           	opt callstack 0
 30322  01BFC6                     _TMR2_Initialize:
 30323                           	opt callstack 14
 30324                           
 30325                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30326                           
 30327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30328                           ;incstack = 0
 30329  01BFC6  0E01               	movlw	1
 30330  01BFC8  6EAE               	movwf	174,c	;volatile
 30331                           
 30332                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30333  01BFCA  6AAD               	clrf	173,c	;volatile
 30334                           
 30335                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30336  01BFCC  6AAF               	clrf	175,c	;volatile
 30337                           
 30338                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30339  01BFCE  0E63               	movlw	99
 30340  01BFD0  6EAB               	movwf	171,c	;volatile
 30341                           
 30342                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30343  01BFD2  6AAA               	clrf	170,c	;volatile
 30344                           
 30345                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30346  01BFD4  0139               	movlb	57	; () banked
 30347  01BFD6  95A4               	bcf	164,2,b	;volatile
 30348                           
 30349                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30350  01BFD8  0EC0               	movlw	192
 30351  01BFDA  6EAC               	movwf	172,c	;volatile
 30352                           
 30353                           ; BSR set to: 57
 30354                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30355  01BFDC  0012               	return		;funcret
 30356  01BFDE                     __end_of_TMR2_Initialize:
 30357                           	opt callstack 0
 30358                           
 30359 ;; *************** function _SPI1_Initialize *****************
 30360 ;; Defined at:
 30361 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30362 ;; Parameters:    Size  Location     Type
 30363 ;;		None
 30364 ;; Auto vars:     Size  Location     Type
 30365 ;;		None
 30366 ;; Return value:  Size  Location     Type
 30367 ;;                  1  [STACK] void 
 30368 ;; Registers used:
 30369 ;;		wreg, status,2
 30370 ;; Tracked objects:
 30371 ;;		On entry : 3F/39
 30372 ;;		On exit  : 3F/3D
 30373 ;;		Unchanged: 0/0
 30374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30379 ;;Total ram usage:        0 bytes
 30380 ;; Hardware stack levels used:    1
 30381 ;; Hardware stack levels required when called:   15
 30382 ;; This function calls:
 30383 ;;		Nothing
 30384 ;; This function is called by:
 30385 ;;		_SYSTEM_Initialize
 30386 ;; This function uses a reentrant model
 30387 ;;
 30388                           
 30389                           	psect	text122
 30390  01BFDE                     __ptext122:
 30391                           	opt callstack 0
 30392  01BFDE                     _SPI1_Initialize:
 30393                           	opt callstack 14
 30394                           
 30395                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30396                           
 30397                           ; BSR set to: 57
 30398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30399                           ;incstack = 0
 30400  01BFDE  0E40               	movlw	64
 30401  01BFE0  013D               	movlb	61	; () banked
 30402  01BFE2  6F15               	movwf	21,b	;volatile
 30403                           
 30404                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30405  01BFE4  0E03               	movlw	3
 30406  01BFE6  6F16               	movwf	22,b	;volatile
 30407                           
 30408                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30409  01BFE8  0E4F               	movlw	79
 30410  01BFEA  6F19               	movwf	25,b	;volatile
 30411                           
 30412                           ; BSR set to: 61
 30413                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30414  01BFEC  6B1C               	clrf	28,b	;volatile
 30415                           
 30416                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30417  01BFEE  0E83               	movlw	131
 30418  01BFF0  6F14               	movwf	20,b	;volatile
 30419                           
 30420                           ; BSR set to: 61
 30421                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30422  01BFF2  0012               	return		;funcret
 30423  01BFF4                     __end_of_SPI1_Initialize:
 30424                           	opt callstack 0
 30425                           
 30426 ;; *************** function _PWM8_Initialize *****************
 30427 ;; Defined at:
 30428 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30429 ;; Parameters:    Size  Location     Type
 30430 ;;		None
 30431 ;; Auto vars:     Size  Location     Type
 30432 ;;		None
 30433 ;; Return value:  Size  Location     Type
 30434 ;;                  1  [STACK] void 
 30435 ;; Registers used:
 30436 ;;		wreg, status,2
 30437 ;; Tracked objects:
 30438 ;;		On entry : 3F/39
 30439 ;;		On exit  : 3F/3F
 30440 ;;		Unchanged: 0/0
 30441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30446 ;;Total ram usage:        0 bytes
 30447 ;; Hardware stack levels used:    1
 30448 ;; Hardware stack levels required when called:   15
 30449 ;; This function calls:
 30450 ;;		Nothing
 30451 ;; This function is called by:
 30452 ;;		_SYSTEM_Initialize
 30453 ;; This function uses a reentrant model
 30454 ;;
 30455                           
 30456                           	psect	text123
 30457  01BFF4                     __ptext123:
 30458                           	opt callstack 0
 30459  01BFF4                     _PWM8_Initialize:
 30460                           	opt callstack 14
 30461                           
 30462                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30463                           
 30464                           ; BSR set to: 61
 30465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30466                           ;incstack = 0
 30467  01BFF4  0E80               	movlw	128
 30468  01BFF6  6E62               	movwf	98,c	;volatile
 30469                           
 30470                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30471  01BFF8  6A61               	clrf	97,c	;volatile
 30472                           
 30473                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30474  01BFFA  0E40               	movlw	64
 30475  01BFFC  6E60               	movwf	96,c	;volatile
 30476                           
 30477                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30478  01BFFE  013F               	movlb	63	; () banked
 30479  01C000  515F               	movf	95,w,b	;volatile
 30480  01C002  0B3F               	andlw	-193
 30481  01C004  0940               	iorlw	64
 30482  01C006  6F5F               	movwf	95,b	;volatile
 30483                           
 30484                           ; BSR set to: 63
 30485                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30486  01C008  0012               	return		;funcret
 30487  01C00A                     __end_of_PWM8_Initialize:
 30488                           	opt callstack 0
 30489                           
 30490 ;; *************** function _PMD_Initialize *****************
 30491 ;; Defined at:
 30492 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30493 ;; Parameters:    Size  Location     Type
 30494 ;;		None
 30495 ;; Auto vars:     Size  Location     Type
 30496 ;;		None
 30497 ;; Return value:  Size  Location     Type
 30498 ;;                  1  [STACK] void 
 30499 ;; Registers used:
 30500 ;;		None
 30501 ;; Tracked objects:
 30502 ;;		On entry : 3F/39
 30503 ;;		On exit  : 3F/39
 30504 ;;		Unchanged: 0/0
 30505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30510 ;;Total ram usage:        0 bytes
 30511 ;; Hardware stack levels used:    1
 30512 ;; Hardware stack levels required when called:   15
 30513 ;; This function calls:
 30514 ;;		Nothing
 30515 ;; This function is called by:
 30516 ;;		_SYSTEM_Initialize
 30517 ;; This function uses a reentrant model
 30518 ;;
 30519                           
 30520                           	psect	text124
 30521  01C020                     __ptext124:
 30522                           	opt callstack 0
 30523  01C020                     _PMD_Initialize:
 30524                           	opt callstack 14
 30525                           
 30526                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30527                           
 30528                           ; BSR set to: 63
 30529                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30530                           ;incstack = 0
 30531  01C020  0139               	movlb	57	; () banked
 30532  01C022  6BC0               	clrf	192,b	;volatile
 30533                           
 30534                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30535  01C024  6BC1               	clrf	193,b	;volatile
 30536                           
 30537                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30538  01C026  6BC2               	clrf	194,b	;volatile
 30539                           
 30540                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30541  01C028  6BC3               	clrf	195,b	;volatile
 30542                           
 30543                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30544  01C02A  6BC4               	clrf	196,b	;volatile
 30545                           
 30546                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30547  01C02C  6BC5               	clrf	197,b	;volatile
 30548                           
 30549                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30550  01C02E  6BC6               	clrf	198,b	;volatile
 30551                           
 30552                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30553  01C030  6BC7               	clrf	199,b	;volatile
 30554                           
 30555                           ; BSR set to: 57
 30556                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30557  01C032  0012               	return		;funcret
 30558  01C034                     __end_of_PMD_Initialize:
 30559                           	opt callstack 0
 30560                           
 30561 ;; *************** function _PIN_MANAGER_Initialize *****************
 30562 ;; Defined at:
 30563 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30564 ;; Parameters:    Size  Location     Type
 30565 ;;		None
 30566 ;; Auto vars:     Size  Location     Type
 30567 ;;		None
 30568 ;; Return value:  Size  Location     Type
 30569 ;;                  1  [STACK] void 
 30570 ;; Registers used:
 30571 ;;		wreg, status,2
 30572 ;; Tracked objects:
 30573 ;;		On entry : 3F/39
 30574 ;;		On exit  : 3F/3A
 30575 ;;		Unchanged: 0/0
 30576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30581 ;;Total ram usage:        0 bytes
 30582 ;; Hardware stack levels used:    1
 30583 ;; Hardware stack levels required when called:   15
 30584 ;; This function calls:
 30585 ;;		Nothing
 30586 ;; This function is called by:
 30587 ;;		_SYSTEM_Initialize
 30588 ;; This function uses a reentrant model
 30589 ;;
 30590                           
 30591                           	psect	text125
 30592  01AAAA                     __ptext125:
 30593                           	opt callstack 0
 30594  01AAAA                     _PIN_MANAGER_Initialize:
 30595                           	opt callstack 14
 30596                           
 30597                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30598                           
 30599                           ; BSR set to: 57
 30600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30601                           ;incstack = 0
 30602  01AAAA  0E07               	movlw	7
 30603  01AAAC  6EBE               	movwf	190,c	;volatile
 30604                           
 30605                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 30606  01AAAE  6ABD               	clrf	189,c	;volatile
 30607                           
 30608                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30609  01AAB0  6ABA               	clrf	186,c	;volatile
 30610                           
 30611                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 30612  01AAB2  0E23               	movlw	35
 30613  01AAB4  6EBF               	movwf	191,c	;volatile
 30614                           
 30615                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30616  01AAB6  6ABB               	clrf	187,c	;volatile
 30617                           
 30618                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30619  01AAB8  0E07               	movlw	7
 30620  01AABA  6EBC               	movwf	188,c	;volatile
 30621                           
 30622                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30623  01AABC  6AC6               	clrf	198,c	;volatile
 30624                           
 30625                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 30626  01AABE  0E0C               	movlw	12
 30627  01AAC0  6EC7               	movwf	199,c	;volatile
 30628                           
 30629                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30630  01AAC2  68C2               	setf	194,c	;volatile
 30631                           
 30632                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30633  01AAC4  0EBF               	movlw	191
 30634  01AAC6  6EC3               	movwf	195,c	;volatile
 30635                           
 30636                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30637  01AAC8  0E90               	movlw	144
 30638  01AACA  6EC4               	movwf	196,c	;volatile
 30639                           
 30640                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30641  01AACC  0E0C               	movlw	12
 30642  01AACE  6EC5               	movwf	197,c	;volatile
 30643                           
 30644                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30645  01AAD0  013A               	movlb	58	; () banked
 30646  01AAD2  6B70               	clrf	112,b	;volatile
 30647                           
 30648                           ; BSR set to: 58
 30649                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30650  01AAD4  6B60               	clrf	96,b	;volatile
 30651                           
 30652                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30653  01AAD6  0E3C               	movlw	60
 30654  01AAD8  6F50               	movwf	80,b	;volatile
 30655                           
 30656                           ; BSR set to: 58
 30657                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30658  01AADA  6B80               	clrf	128,b	;volatile
 30659                           
 30660                           ; BSR set to: 58
 30661                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30662  01AADC  6B90               	clrf	144,b	;volatile
 30663                           
 30664                           ; BSR set to: 58
 30665                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30666  01AADE  6940               	setf	64,b	;volatile
 30667                           
 30668                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30669  01AAE0  0E0C               	movlw	12
 30670  01AAE2  6F71               	movwf	113,b	;volatile
 30671                           
 30672                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 30673  01AAE4  0E0C               	movlw	12
 30674  01AAE6  6F91               	movwf	145,b	;volatile
 30675                           
 30676                           ; BSR set to: 58
 30677                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30678  01AAE8  6B81               	clrf	129,b	;volatile
 30679                           
 30680                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30681  01AAEA  0E83               	movlw	131
 30682  01AAEC  6F51               	movwf	81,b	;volatile
 30683                           
 30684                           ; BSR set to: 58
 30685                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30686  01AAEE  6B41               	clrf	65,b	;volatile
 30687                           
 30688                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30689  01AAF0  0E97               	movlw	151
 30690  01AAF2  6F61               	movwf	97,b	;volatile
 30691                           
 30692                           ; BSR set to: 58
 30693                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30694  01AAF4  6B82               	clrf	130,b	;volatile
 30695                           
 30696                           ; BSR set to: 58
 30697                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30698  01AAF6  6B92               	clrf	146,b	;volatile
 30699                           
 30700                           ; BSR set to: 58
 30701                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30702  01AAF8  6B42               	clrf	66,b	;volatile
 30703                           
 30704                           ; BSR set to: 58
 30705                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30706  01AAFA  6B52               	clrf	82,b	;volatile
 30707                           
 30708                           ; BSR set to: 58
 30709                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30710  01AAFC  6B62               	clrf	98,b	;volatile
 30711                           
 30712                           ; BSR set to: 58
 30713                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30714  01AAFE  6B72               	clrf	114,b	;volatile
 30715                           
 30716                           ; BSR set to: 58
 30717                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30718  01AB00  6943               	setf	67,b	;volatile
 30719                           
 30720                           ; BSR set to: 58
 30721                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30722  01AB02  6953               	setf	83,b	;volatile
 30723                           
 30724                           ; BSR set to: 58
 30725                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30726  01AB04  6963               	setf	99,b	;volatile
 30727                           
 30728                           ; BSR set to: 58
 30729                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30730  01AB06  6973               	setf	115,b	;volatile
 30731                           
 30732                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30733  01AB08  0E07               	movlw	7
 30734  01AB0A  6F83               	movwf	131,b	;volatile
 30735                           
 30736                           ; BSR set to: 58
 30737                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30738  01AB0C  6993               	setf	147,b	;volatile
 30739                           
 30740                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30741  01AB0E  0E0F               	movlw	15
 30742  01AB10  6FE8               	movwf	232,b	;volatile
 30743                           
 30744                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30745  01AB12  0E13               	movlw	19
 30746  01AB14  6FDE               	movwf	222,b	;volatile
 30747                           
 30748                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30749  01AB16  0E16               	movlw	22
 30750  01AB18  6F0E               	movwf	14,b	;volatile
 30751                           
 30752                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30753  01AB1A  0E1E               	movlw	30
 30754  01AB1C  6F13               	movwf	19,b	;volatile
 30755                           
 30756                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30757  01AB1E  0E08               	movlw	8
 30758  01AB20  6FC0               	movwf	192,b	;volatile
 30759                           
 30760                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30761  01AB22  0E10               	movlw	16
 30762  01AB24  6F19               	movwf	25,b	;volatile
 30763                           
 30764                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30765  01AB26  0E09               	movlw	9
 30766  01AB28  6FC1               	movwf	193,b	;volatile
 30767                           
 30768                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30769  01AB2A  0E1F               	movlw	31
 30770  01AB2C  6F15               	movwf	21,b	;volatile
 30771                           
 30772                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30773  01AB2E  0E13               	movlw	19
 30774  01AB30  6F16               	movwf	22,b	;volatile
 30775                           
 30776                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30777  01AB32  0E17               	movlw	23
 30778  01AB34  6FE5               	movwf	229,b	;volatile
 30779                           
 30780                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30781  01AB36  0E14               	movlw	20
 30782  01AB38  6FDF               	movwf	223,b	;volatile
 30783                           
 30784                           ; BSR set to: 58
 30785                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30786  01AB3A  0012               	return		;funcret
 30787  01AB3C                     __end_of_PIN_MANAGER_Initialize:
 30788                           	opt callstack 0
 30789                           
 30790 ;; *************** function _OSCILLATOR_Initialize *****************
 30791 ;; Defined at:
 30792 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30793 ;; Parameters:    Size  Location     Type
 30794 ;;		None
 30795 ;; Auto vars:     Size  Location     Type
 30796 ;;		None
 30797 ;; Return value:  Size  Location     Type
 30798 ;;                  1  [STACK] void 
 30799 ;; Registers used:
 30800 ;;		wreg, status,2
 30801 ;; Tracked objects:
 30802 ;;		On entry : 3F/3A
 30803 ;;		On exit  : 3F/39
 30804 ;;		Unchanged: 0/0
 30805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30810 ;;Total ram usage:        0 bytes
 30811 ;; Hardware stack levels used:    1
 30812 ;; Hardware stack levels required when called:   15
 30813 ;; This function calls:
 30814 ;;		Nothing
 30815 ;; This function is called by:
 30816 ;;		_SYSTEM_Initialize
 30817 ;; This function uses a reentrant model
 30818 ;;
 30819                           
 30820                           	psect	text126
 30821  01C00A                     __ptext126:
 30822                           	opt callstack 0
 30823  01C00A                     _OSCILLATOR_Initialize:
 30824                           	opt callstack 14
 30825                           
 30826                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30827                           
 30828                           ; BSR set to: 58
 30829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30830                           ;incstack = 0
 30831  01C00A  0E20               	movlw	32
 30832  01C00C  0139               	movlb	57	; () banked
 30833  01C00E  6FD9               	movwf	217,b	;volatile
 30834                           
 30835                           ; BSR set to: 57
 30836                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30837  01C010  6BDB               	clrf	219,b	;volatile
 30838                           
 30839                           ; BSR set to: 57
 30840                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30841  01C012  6BDD               	clrf	221,b	;volatile
 30842                           
 30843                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30844  01C014  0E02               	movlw	2
 30845  01C016  6FDF               	movwf	223,b	;volatile
 30846                           
 30847                           ; BSR set to: 57
 30848                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30849  01C018  6BDE               	clrf	222,b	;volatile
 30850  01C01A                     l169:
 30851                           
 30852                           ; BSR set to: 57
 30853                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30854  01C01A  B1DC               	btfsc	220,0,b	;volatile
 30855  01C01C  0012               	return	
 30856  01C01E  D7FD               	goto	l169
 30857  01C020                     __end_of_OSCILLATOR_Initialize:
 30858                           	opt callstack 0
 30859                           
 30860 ;; *************** function _INTERRUPT_Initialize *****************
 30861 ;; Defined at:
 30862 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30863 ;; Parameters:    Size  Location     Type
 30864 ;;		None
 30865 ;; Auto vars:     Size  Location     Type
 30866 ;;  state           1  [STACK] _Bool 
 30867 ;; Return value:  Size  Location     Type
 30868 ;;                  1  [STACK] void 
 30869 ;; Registers used:
 30870 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30871 ;; Tracked objects:
 30872 ;;		On entry : 0/0
 30873 ;;		On exit  : 3F/39
 30874 ;;		Unchanged: 0/0
 30875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30880 ;;Total ram usage:        0 bytes
 30881 ;; Hardware stack levels used:    1
 30882 ;; Hardware stack levels required when called:   15
 30883 ;; This function calls:
 30884 ;;		Nothing
 30885 ;; This function is called by:
 30886 ;;		_SYSTEM_Initialize
 30887 ;; This function uses a reentrant model
 30888 ;;
 30889                           
 30890                           	psect	text127
 30891  01AF96                     __ptext127:
 30892                           	opt callstack 0
 30893  01AF96                     _INTERRUPT_Initialize:
 30894                           	opt callstack 0
 30895                           
 30896                           ; BSR set to: 57
 30897                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30898  01AF96  52E6               	movf	postinc1,f,c
 30899                           
 30900                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30901                           
 30902                           ;incstack = 0
 30903  01AF98  8AD2               	bsf	210,5,c	;volatile
 30904                           
 30905                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30906  01AF9A  AED2               	btfss	16338,7,c	;volatile
 30907  01AF9C  D003               	goto	u9410
 30908  01AF9E  6A0C               	clrf	(btemp+11)^0,c
 30909  01AFA0  2A0C               	incf	(btemp+11)^0,f,c
 30910  01AFA2  D001               	goto	u9428
 30911  01AFA4                     u9410:
 30912  01AFA4  6A0C               	clrf	(btemp+11)^0,c
 30913  01AFA6                     u9428:
 30914                           
 30915                           ;stkvar	_state @ sp[(-1)+0]
 30916  01AFA6  0EFF               	movlw	-1
 30917  01AFA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30918                           
 30919                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30920  01AFAE  9ED2               	bcf	16338,7,c	;volatile
 30921                           
 30922                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30923  01AFB0  0E55               	movlw	85
 30924  01AFB2  6ED4               	movwf	212,c	;volatile
 30925                           
 30926                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30927  01AFB4  0EAA               	movlw	170
 30928  01AFB6  6ED4               	movwf	212,c	;volatile
 30929                           
 30930                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30931  01AFB8  90D4               	bcf	212,0,c	;volatile
 30932                           
 30933                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30934  01AFBA  0138               	movlb	56	; () banked
 30935  01AFBC  6B9F               	clrf	159,b	;volatile
 30936                           
 30937                           ; BSR set to: 56
 30938                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30939  01AFBE  6B9E               	clrf	158,b	;volatile
 30940                           
 30941                           ; BSR set to: 56
 30942                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30943  01AFC0  0E08               	movlw	8
 30944  01AFC2  6F9D               	movwf	157,b	;volatile
 30945                           
 30946                           ; BSR set to: 56
 30947                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30948  01AFC4  0E55               	movlw	85
 30949  01AFC6  6ED4               	movwf	212,c	;volatile
 30950                           
 30951                           ; BSR set to: 56
 30952                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30953  01AFC8  0EAA               	movlw	170
 30954  01AFCA  6ED4               	movwf	212,c	;volatile
 30955                           
 30956                           ; BSR set to: 56
 30957                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30958  01AFCC  80D4               	bsf	212,0,c	;volatile
 30959                           
 30960                           ; BSR set to: 56
 30961                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30962                           ;stkvar	_state @ sp[(-1)+0]
 30963  01AFCE  0EFF               	movlw	-1
 30964  01AFD0  B0E3               	btfsc	plusw1,0,c
 30965  01AFD2  D002               	bra	u9435
 30966  01AFD4  9ED2               	bcf	16338,7,c	;volatile
 30967  01AFD6  D001               	bra	u9436
 30968  01AFD8                     u9435:
 30969  01AFD8  8ED2               	bsf	16338,7,c	;volatile
 30970  01AFDA                     u9436:
 30971                           
 30972                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30973  01AFDA  0139               	movlb	57	; () banked
 30974  01AFDC  8782               	bsf	130,3,b	;volatile
 30975                           
 30976                           ; BSR set to: 57
 30977                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30978  01AFDE  8382               	bsf	130,1,b	;volatile
 30979                           
 30980                           ; BSR set to: 57
 30981                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30982  01AFE0  8182               	bsf	130,0,b	;volatile
 30983                           
 30984                           ; BSR set to: 57
 30985                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30986  01AFE2  8582               	bsf	130,2,b	;volatile
 30987                           
 30988                           ; BSR set to: 57
 30989                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30990  01AFE4  8786               	bsf	134,3,b	;volatile
 30991                           
 30992                           ; BSR set to: 57
 30993                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30994  01AFE6  8586               	bsf	134,2,b	;volatile
 30995                           
 30996                           ; BSR set to: 57
 30997                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30998  01AFE8  8783               	bsf	131,3,b	;volatile
 30999                           
 31000                           ; BSR set to: 57
 31001                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31002  01AFEA  8181               	bsf	129,0,b	;volatile
 31003                           
 31004                           ; BSR set to: 57
 31005                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31006  01AFEC  9185               	bcf	133,0,b	;volatile
 31007                           
 31008                           ; BSR set to: 57
 31009                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31010  01AFEE  8189               	bsf	137,0,b	;volatile
 31011                           
 31012                           ; BSR set to: 57
 31013                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31014  01AFF0  9D88               	bcf	136,6,b	;volatile
 31015                           
 31016                           ; BSR set to: 57
 31017                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 31018  01AFF2  9D86               	bcf	134,6,b	;volatile
 31019                           
 31020                           ; BSR set to: 57
 31021                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 31022  01AFF4  8581               	bsf	129,2,b	;volatile
 31023                           
 31024                           ; BSR set to: 57
 31025                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 31026  01AFF6  8781               	bsf	129,3,b	;volatile
 31027                           
 31028                           ; BSR set to: 57
 31029                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31030  01AFF8  52E5               	movf	postdec1,f,c
 31031  01AFFA  0012               	return		;funcret
 31032  01AFFC                     __end_of_INTERRUPT_Initialize:
 31033                           	opt callstack 0
 31034                           
 31035 ;; *************** function _FVR_Initialize *****************
 31036 ;; Defined at:
 31037 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31038 ;; Parameters:    Size  Location     Type
 31039 ;;		None
 31040 ;; Auto vars:     Size  Location     Type
 31041 ;;		None
 31042 ;; Return value:  Size  Location     Type
 31043 ;;                  1  [STACK] void 
 31044 ;; Registers used:
 31045 ;;		wreg, status,2
 31046 ;; Tracked objects:
 31047 ;;		On entry : 3F/39
 31048 ;;		On exit  : 3F/3E
 31049 ;;		Unchanged: 0/0
 31050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31055 ;;Total ram usage:        0 bytes
 31056 ;; Hardware stack levels used:    1
 31057 ;; Hardware stack levels required when called:   15
 31058 ;; This function calls:
 31059 ;;		Nothing
 31060 ;; This function is called by:
 31061 ;;		_SYSTEM_Initialize
 31062 ;; This function uses a reentrant model
 31063 ;;
 31064                           
 31065                           	psect	text128
 31066  01C136                     __ptext128:
 31067                           	opt callstack 0
 31068  01C136                     _FVR_Initialize:
 31069                           	opt callstack 14
 31070                           
 31071                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31072                           
 31073                           ; BSR set to: 57
 31074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31075                           ;incstack = 0
 31076  01C136  0EAF               	movlw	175
 31077  01C138  013E               	movlb	62	; () banked
 31078  01C13A  6FC1               	movwf	193,b	;volatile
 31079                           
 31080                           ; BSR set to: 62
 31081                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31082  01C13C  0012               	return		;funcret
 31083  01C13E                     __end_of_FVR_Initialize:
 31084                           	opt callstack 0
 31085                           
 31086 ;; *************** function _EXT_INT_Initialize *****************
 31087 ;; Defined at:
 31088 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31089 ;; Parameters:    Size  Location     Type
 31090 ;;		None
 31091 ;; Auto vars:     Size  Location     Type
 31092 ;;		None
 31093 ;; Return value:  Size  Location     Type
 31094 ;;                  1  [STACK] void 
 31095 ;; Registers used:
 31096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31097 ;; Tracked objects:
 31098 ;;		On entry : 3F/3F
 31099 ;;		On exit  : 3F/39
 31100 ;;		Unchanged: 0/0
 31101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31106 ;;Total ram usage:        0 bytes
 31107 ;; Hardware stack levels used:    1
 31108 ;; Hardware stack levels required when called:   16
 31109 ;; This function calls:
 31110 ;;		_INT0_SetInterruptHandler
 31111 ;;		_INT1_SetInterruptHandler
 31112 ;; This function is called by:
 31113 ;;		_SYSTEM_Initialize
 31114 ;; This function uses a reentrant model
 31115 ;;
 31116                           
 31117                           	psect	text129
 31118  01B91E                     __ptext129:
 31119                           	opt callstack 0
 31120  01B91E                     _EXT_INT_Initialize:
 31121                           	opt callstack 13
 31122                           
 31123                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31124                           
 31125                           ; BSR set to: 62
 31126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31127                           ;incstack = 0
 31128  01B91E  0139               	movlb	57	; () banked
 31129  01B920  91A1               	bcf	161,0,b	;volatile
 31130                           
 31131                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31132  01B922  90D2               	bcf	210,0,c	;volatile
 31133                           
 31134                           ; BSR set to: 57
 31135                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31136  01B924  0E62               	movlw	low _INT0_DefaultInterruptHandler
 31137  01B926  6EE6               	movwf	postinc1,c
 31138  01B928  0EC1               	movlw	high _INT0_DefaultInterruptHandler
 31139  01B92A  6EE6               	movwf	postinc1,c
 31140  01B92C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31141  01B92E  6EE6               	movwf	postinc1,c
 31142  01B930  EC2B  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 31143                           
 31144                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31145  01B934  0139               	movlb	57	; () banked
 31146  01B936  8191               	bsf	145,0,b	;volatile
 31147                           
 31148                           ; BSR set to: 57
 31149                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31150  01B938  91A5               	bcf	165,0,b	;volatile
 31151                           
 31152                           ; BSR set to: 57
 31153                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31154  01B93A  92D2               	bcf	210,1,c	;volatile
 31155                           
 31156                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31157  01B93C  0E5E               	movlw	low _INT1_DefaultInterruptHandler
 31158  01B93E  6EE6               	movwf	postinc1,c
 31159  01B940  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 31160  01B942  6EE6               	movwf	postinc1,c
 31161  01B944  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31162  01B946  6EE6               	movwf	postinc1,c
 31163  01B948  EC17  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
 31164                           
 31165                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31166  01B94C  0139               	movlb	57	; () banked
 31167  01B94E  8195               	bsf	149,0,b	;volatile
 31168                           
 31169                           ; BSR set to: 57
 31170                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31171  01B950  0012               	return		;funcret
 31172  01B952                     __end_of_EXT_INT_Initialize:
 31173                           	opt callstack 0
 31174                           
 31175 ;; *************** function _INT1_SetInterruptHandler *****************
 31176 ;; Defined at:
 31177 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31178 ;; Parameters:    Size  Location     Type
 31179 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31180 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31181 ;; Auto vars:     Size  Location     Type
 31182 ;;		None
 31183 ;; Return value:  Size  Location     Type
 31184 ;;                  1  [STACK] void 
 31185 ;; Registers used:
 31186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31187 ;; Tracked objects:
 31188 ;;		On entry : 3F/39
 31189 ;;		On exit  : 0/0
 31190 ;;		Unchanged: 0/0
 31191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31196 ;;Total ram usage:        0 bytes
 31197 ;; Hardware stack levels used:    1
 31198 ;; Hardware stack levels required when called:   15
 31199 ;; This function calls:
 31200 ;;		Nothing
 31201 ;; This function is called by:
 31202 ;;		_EXT_INT_Initialize
 31203 ;;		_start_switch_handler
 31204 ;; This function uses a reentrant model
 31205 ;;
 31206                           
 31207                           	psect	text130
 31208  01BC2E                     __ptext130:
 31209                           	opt callstack 0
 31210  01BC2E                     _INT1_SetInterruptHandler:
 31211                           	opt callstack 14
 31212                           
 31213                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31214                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31215                           
 31216                           ; BSR set to: 57
 31217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31218                           ;incstack = 0
 31219  01BC2E  50E1               	movf	fsr1l,w,c
 31220  01BC30  0FFD               	addlw	-3
 31221  01BC32  6ED9               	movwf	fsr2l,c
 31222  01BC34  50E2               	movf	fsr1h,w,c
 31223  01BC36  6EDA               	movwf	fsr2h,c
 31224  01BC38  0EFF               	movlw	255
 31225  01BC3A  22DA               	addwfc	fsr2h,f,c
 31226  01BC3C  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 31227  01BC42  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 31228  01BC48  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 31229                           
 31230                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31231  01BC4E  52E5               	movf	postdec1,f,c
 31232  01BC50  52E5               	movf	postdec1,f,c
 31233  01BC52  52E5               	movf	postdec1,f,c
 31234  01BC54  0012               	return		;funcret
 31235  01BC56                     __end_of_INT1_SetInterruptHandler:
 31236                           	opt callstack 0
 31237                           
 31238 ;; *************** function _INT0_SetInterruptHandler *****************
 31239 ;; Defined at:
 31240 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31241 ;; Parameters:    Size  Location     Type
 31242 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31243 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31244 ;; Auto vars:     Size  Location     Type
 31245 ;;		None
 31246 ;; Return value:  Size  Location     Type
 31247 ;;                  1  [STACK] void 
 31248 ;; Registers used:
 31249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31250 ;; Tracked objects:
 31251 ;;		On entry : 3F/39
 31252 ;;		On exit  : 0/0
 31253 ;;		Unchanged: 0/0
 31254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31259 ;;Total ram usage:        0 bytes
 31260 ;; Hardware stack levels used:    1
 31261 ;; Hardware stack levels required when called:   15
 31262 ;; This function calls:
 31263 ;;		Nothing
 31264 ;; This function is called by:
 31265 ;;		_EXT_INT_Initialize
 31266 ;; This function uses a reentrant model
 31267 ;;
 31268                           
 31269                           	psect	text131
 31270  01BC56                     __ptext131:
 31271                           	opt callstack 0
 31272  01BC56                     _INT0_SetInterruptHandler:
 31273                           	opt callstack 13
 31274                           
 31275                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31276                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31277                           
 31278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31279                           ;incstack = 0
 31280  01BC56  50E1               	movf	fsr1l,w,c
 31281  01BC58  0FFD               	addlw	-3
 31282  01BC5A  6ED9               	movwf	fsr2l,c
 31283  01BC5C  50E2               	movf	fsr1h,w,c
 31284  01BC5E  6EDA               	movwf	fsr2h,c
 31285  01BC60  0EFF               	movlw	255
 31286  01BC62  22DA               	addwfc	fsr2h,f,c
 31287  01BC64  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 31288  01BC6A  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 31289  01BC70  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 31290                           
 31291                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31292  01BC76  52E5               	movf	postdec1,f,c
 31293  01BC78  52E5               	movf	postdec1,f,c
 31294  01BC7A  52E5               	movf	postdec1,f,c
 31295  01BC7C  0012               	return		;funcret
 31296  01BC7E                     __end_of_INT0_SetInterruptHandler:
 31297                           	opt callstack 0
 31298                           
 31299 ;; *************** function _DMA2_Initialize *****************
 31300 ;; Defined at:
 31301 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31302 ;; Parameters:    Size  Location     Type
 31303 ;;		None
 31304 ;; Auto vars:     Size  Location     Type
 31305 ;;		None
 31306 ;; Return value:  Size  Location     Type
 31307 ;;                  1  [STACK] void 
 31308 ;; Registers used:
 31309 ;;		wreg, status,2
 31310 ;; Tracked objects:
 31311 ;;		On entry : 3F/3D
 31312 ;;		On exit  : 3F/3B
 31313 ;;		Unchanged: 0/0
 31314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31319 ;;Total ram usage:        0 bytes
 31320 ;; Hardware stack levels used:    1
 31321 ;; Hardware stack levels required when called:   15
 31322 ;; This function calls:
 31323 ;;		Nothing
 31324 ;; This function is called by:
 31325 ;;		_SYSTEM_Initialize
 31326 ;; This function uses a reentrant model
 31327 ;;
 31328                           
 31329                           	psect	text132
 31330  01B238                     __ptext132:
 31331                           	opt callstack 0
 31332  01B238                     _DMA2_Initialize:
 31333                           	opt callstack 14
 31334                           
 31335                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31336                           
 31337                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31338                           ;incstack = 0
 31339  01B238  0E00               	movlw	0
 31340  01B23A  013B               	movlb	59	; () banked
 31341  01B23C  6FD9               	movwf	217,b	;volatile
 31342  01B23E  0E10               	movlw	16
 31343  01B240  6FDA               	movwf	218,b	;volatile
 31344  01B242  0E00               	movlw	0
 31345  01B244  6FDB               	movwf	219,b	;volatile
 31346                           
 31347                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31348  01B246  0E3F               	movlw	63
 31349  01B248  6FD1               	movwf	209,b	;volatile
 31350  01B24A  0EBB               	movlw	187
 31351  01B24C  6FD0               	movwf	208,b	;volatile
 31352                           
 31353                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31354  01B24E  0E03               	movlw	3
 31355  01B250  6FDD               	movwf	221,b	;volatile
 31356                           
 31357                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31358  01B252  0E00               	movlw	0
 31359  01B254  6FD8               	movwf	216,b	;volatile
 31360  01B256  0E01               	movlw	1
 31361  01B258  6FD7               	movwf	215,b	;volatile
 31362                           
 31363                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31364  01B25A  0E00               	movlw	0
 31365  01B25C  6FCF               	movwf	207,b	;volatile
 31366  01B25E  0E01               	movlw	1
 31367  01B260  6FCE               	movwf	206,b	;volatile
 31368                           
 31369                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31370  01B262  0E1C               	movlw	28
 31371  01B264  6FDF               	movwf	223,b	;volatile
 31372                           
 31373                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31374  01B266  0E3D               	movlw	61
 31375  01B268  6FDE               	movwf	222,b	;volatile
 31376                           
 31377                           ; BSR set to: 59
 31378                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31379  01B26A  0139               	movlb	57	; () banked
 31380  01B26C  97A5               	bcf	165,3,b	;volatile
 31381                           
 31382                           ; BSR set to: 57
 31383                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31384  01B26E  95A5               	bcf	165,2,b	;volatile
 31385                           
 31386                           ; BSR set to: 57
 31387                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31388  01B270  9BA5               	bcf	165,5,b	;volatile
 31389                           
 31390                           ; BSR set to: 57
 31391                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31392  01B272  99A5               	bcf	165,4,b	;volatile
 31393                           
 31394                           ; BSR set to: 57
 31395                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31396  01B274  9795               	bcf	149,3,b	;volatile
 31397                           
 31398                           ; BSR set to: 57
 31399                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31400  01B276  9595               	bcf	149,2,b	;volatile
 31401                           
 31402                           ; BSR set to: 57
 31403                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31404  01B278  9B95               	bcf	149,5,b	;volatile
 31405                           
 31406                           ; BSR set to: 57
 31407                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31408  01B27A  9995               	bcf	149,4,b	;volatile
 31409  01B27C  9ED2               	bcf	16338,7,c	;# 
 31410  01B27E  0139               	banksel	14831	;# 
 31411  01B280  0E55               	movlw	85	;# 
 31412  01B282  6FEF               	movwf	14831,b	;# 
 31413  01B284  0EAA               	movlw	170	;# 
 31414  01B286  6FEF               	movwf	14831,b	;# 
 31415  01B288  81EF               	bsf	14831,0,b	;# 
 31416  01B28A  8ED2               	bsf	16338,7,c	;# 
 31417                           
 31418                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31419  01B28C  013B               	movlb	59	; () banked
 31420  01B28E  6BDC               	clrf	220,b	;volatile
 31421                           
 31422                           ; BSR set to: 59
 31423                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31424  01B290  0012               	return		;funcret
 31425  01B292                     __end_of_DMA2_Initialize:
 31426                           	opt callstack 0
 31427                           
 31428 ;; *************** function _DMA1_Initialize *****************
 31429 ;; Defined at:
 31430 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31431 ;; Parameters:    Size  Location     Type
 31432 ;;		None
 31433 ;; Auto vars:     Size  Location     Type
 31434 ;;		None
 31435 ;; Return value:  Size  Location     Type
 31436 ;;                  1  [STACK] void 
 31437 ;; Registers used:
 31438 ;;		wreg, status,2
 31439 ;; Tracked objects:
 31440 ;;		On entry : 3F/3B
 31441 ;;		On exit  : 3F/3B
 31442 ;;		Unchanged: 0/0
 31443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31448 ;;Total ram usage:        0 bytes
 31449 ;; Hardware stack levels used:    1
 31450 ;; Hardware stack levels required when called:   15
 31451 ;; This function calls:
 31452 ;;		Nothing
 31453 ;; This function is called by:
 31454 ;;		_SYSTEM_Initialize
 31455 ;; This function uses a reentrant model
 31456 ;;
 31457                           
 31458                           	psect	text133
 31459  01AE56                     __ptext133:
 31460                           	opt callstack 0
 31461  01AE56                     _DMA1_Initialize:
 31462                           	opt callstack 14
 31463                           
 31464                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31465                           
 31466                           ; BSR set to: 59
 31467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31468                           ;incstack = 0
 31469  01AE56  0E00               	movlw	0
 31470  01AE58  013B               	movlb	59	; () banked
 31471  01AE5A  6FF9               	movwf	249,b	;volatile
 31472  01AE5C  0E10               	movlw	16
 31473  01AE5E  6FFA               	movwf	250,b	;volatile
 31474  01AE60  0E00               	movlw	0
 31475  01AE62  6FFB               	movwf	251,b	;volatile
 31476                           
 31477                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31478  01AE64  0E3D               	movlw	61
 31479  01AE66  6FF1               	movwf	241,b	;volatile
 31480  01AE68  0E11               	movlw	17
 31481  01AE6A  6FF0               	movwf	240,b	;volatile
 31482                           
 31483                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31484  01AE6C  0E03               	movlw	3
 31485  01AE6E  6FFD               	movwf	253,b	;volatile
 31486                           
 31487                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31488  01AE70  0E00               	movlw	0
 31489  01AE72  6FF8               	movwf	248,b	;volatile
 31490  01AE74  0E01               	movlw	1
 31491  01AE76  6FF7               	movwf	247,b	;volatile
 31492                           
 31493                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31494  01AE78  0E00               	movlw	0
 31495  01AE7A  6FEF               	movwf	239,b	;volatile
 31496  01AE7C  0E01               	movlw	1
 31497  01AE7E  6FEE               	movwf	238,b	;volatile
 31498                           
 31499                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31500  01AE80  0E15               	movlw	21
 31501  01AE82  6FFF               	movwf	255,b	;volatile
 31502                           
 31503                           ; BSR set to: 59
 31504                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31505  01AE84  6BFE               	clrf	254,b	;volatile
 31506                           
 31507                           ; BSR set to: 59
 31508                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31509  01AE86  0139               	movlb	57	; () banked
 31510  01AE88  93A2               	bcf	162,1,b	;volatile
 31511                           
 31512                           ; BSR set to: 57
 31513                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31514  01AE8A  91A2               	bcf	162,0,b	;volatile
 31515                           
 31516                           ; BSR set to: 57
 31517                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31518  01AE8C  97A2               	bcf	162,3,b	;volatile
 31519                           
 31520                           ; BSR set to: 57
 31521                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31522  01AE8E  95A2               	bcf	162,2,b	;volatile
 31523                           
 31524                           ; BSR set to: 57
 31525                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31526  01AE90  8392               	bsf	146,1,b	;volatile
 31527                           
 31528                           ; BSR set to: 57
 31529                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31530  01AE92  8192               	bsf	146,0,b	;volatile
 31531                           
 31532                           ; BSR set to: 57
 31533                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31534  01AE94  8792               	bsf	146,3,b	;volatile
 31535                           
 31536                           ; BSR set to: 57
 31537                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31538  01AE96  8592               	bsf	146,2,b	;volatile
 31539                           
 31540                           ; BSR set to: 57
 31541                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31542  01AE98  6BF1               	clrf	241,b	;volatile
 31543                           
 31544                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31545  01AE9A  0E01               	movlw	1
 31546  01AE9C  6FF2               	movwf	242,b	;volatile
 31547                           
 31548                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31549  01AE9E  0E04               	movlw	4
 31550  01AEA0  6FF3               	movwf	243,b	;volatile
 31551                           
 31552                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31553  01AEA2  0E02               	movlw	2
 31554  01AEA4  6FF4               	movwf	244,b	;volatile
 31555                           
 31556                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31557  01AEA6  0E03               	movlw	3
 31558  01AEA8  6FF7               	movwf	247,b	;volatile
 31559  01AEAA  9ED2               	bcf	16338,7,c	;# 
 31560  01AEAC  0139               	banksel	14831	;# 
 31561  01AEAE  0E55               	movlw	85	;# 
 31562  01AEB0  6FEF               	movwf	14831,b	;# 
 31563  01AEB2  0EAA               	movlw	170	;# 
 31564  01AEB4  6FEF               	movwf	14831,b	;# 
 31565  01AEB6  81EF               	bsf	14831,0,b	;# 
 31566  01AEB8  8ED2               	bsf	16338,7,c	;# 
 31567                           
 31568                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31569  01AEBA  013B               	movlb	59	; () banked
 31570  01AEBC  6BFC               	clrf	252,b	;volatile
 31571                           
 31572                           ; BSR set to: 59
 31573                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31574  01AEBE  0012               	return		;funcret
 31575  01AEC0                     __end_of_DMA1_Initialize:
 31576                           	opt callstack 0
 31577                           
 31578 ;; *************** function _CLKREF_Initialize *****************
 31579 ;; Defined at:
 31580 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31581 ;; Parameters:    Size  Location     Type
 31582 ;;		None
 31583 ;; Auto vars:     Size  Location     Type
 31584 ;;		None
 31585 ;; Return value:  Size  Location     Type
 31586 ;;                  1  [STACK] void 
 31587 ;; Registers used:
 31588 ;;		wreg, status,2
 31589 ;; Tracked objects:
 31590 ;;		On entry : 3F/3B
 31591 ;;		On exit  : 3F/3C
 31592 ;;		Unchanged: 0/0
 31593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31598 ;;Total ram usage:        0 bytes
 31599 ;; Hardware stack levels used:    1
 31600 ;; Hardware stack levels required when called:   15
 31601 ;; This function calls:
 31602 ;;		Nothing
 31603 ;; This function is called by:
 31604 ;;		_SYSTEM_Initialize
 31605 ;; This function uses a reentrant model
 31606 ;;
 31607                           
 31608                           	psect	text134
 31609  01C0DE                     __ptext134:
 31610                           	opt callstack 0
 31611  01C0DE                     _CLKREF_Initialize:
 31612                           	opt callstack 14
 31613                           
 31614                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31615                           
 31616                           ; BSR set to: 59
 31617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31618                           ;incstack = 0
 31619  01C0DE  013C               	movlb	60	; () banked
 31620  01C0E0  6BE6               	clrf	230,b	;volatile
 31621                           
 31622                           ; BSR set to: 60
 31623                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31624  01C0E2  0E94               	movlw	148
 31625  01C0E4  6FE5               	movwf	229,b	;volatile
 31626                           
 31627                           ; BSR set to: 60
 31628                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31629  01C0E6  0012               	return		;funcret
 31630  01C0E8                     __end_of_CLKREF_Initialize:
 31631                           	opt callstack 0
 31632                           
 31633 ;; *************** function _ADCC_Initialize *****************
 31634 ;; Defined at:
 31635 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31636 ;; Parameters:    Size  Location     Type
 31637 ;;		None
 31638 ;; Auto vars:     Size  Location     Type
 31639 ;;		None
 31640 ;; Return value:  Size  Location     Type
 31641 ;;                  1  [STACK] void 
 31642 ;; Registers used:
 31643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31644 ;; Tracked objects:
 31645 ;;		On entry : 3F/3E
 31646 ;;		On exit  : 0/0
 31647 ;;		Unchanged: 0/0
 31648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31653 ;;Total ram usage:        0 bytes
 31654 ;; Hardware stack levels used:    1
 31655 ;; Hardware stack levels required when called:   16
 31656 ;; This function calls:
 31657 ;;		_ADCC_SetADIInterruptHandler
 31658 ;;		_ADCC_SetADTIInterruptHandler
 31659 ;; This function is called by:
 31660 ;;		_SYSTEM_Initialize
 31661 ;; This function uses a reentrant model
 31662 ;;
 31663                           
 31664                           	psect	text135
 31665  01AEC0                     __ptext135:
 31666                           	opt callstack 0
 31667  01AEC0                     _ADCC_Initialize:
 31668                           	opt callstack 13
 31669                           
 31670                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31671                           
 31672                           ; BSR set to: 60
 31673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31674                           ;incstack = 0
 31675  01AEC0  013E               	movlb	62	; () banked
 31676  01AEC2  6BDE               	clrf	222,b	;volatile
 31677                           
 31678                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31679  01AEC4  6BDF               	clrf	223,b	;volatile
 31680                           
 31681                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31682  01AEC6  6BE0               	clrf	224,b	;volatile
 31683                           
 31684                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31685  01AEC8  6BE1               	clrf	225,b	;volatile
 31686                           
 31687                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31688  01AECA  6BE4               	clrf	228,b	;volatile
 31689                           
 31690                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31691  01AECC  6BE5               	clrf	229,b	;volatile
 31692                           
 31693                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31694  01AECE  6BEA               	clrf	234,b	;volatile
 31695                           
 31696                           ; BSR set to: 62
 31697                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31698  01AED0  0E40               	movlw	64
 31699  01AED2  6FEC               	movwf	236,b	;volatile
 31700                           
 31701                           ; BSR set to: 62
 31702                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31703  01AED4  6BF1               	clrf	241,b	;volatile
 31704                           
 31705                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31706  01AED6  0E20               	movlw	32
 31707  01AED8  6FF3               	movwf	243,b	;volatile
 31708                           
 31709                           ; BSR set to: 62
 31710                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31711  01AEDA  6BF4               	clrf	244,b	;volatile
 31712                           
 31713                           ; BSR set to: 62
 31714                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31715  01AEDC  6BF5               	clrf	245,b	;volatile
 31716                           
 31717                           ; BSR set to: 62
 31718                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31719  01AEDE  6BF6               	clrf	246,b	;volatile
 31720                           
 31721                           ; BSR set to: 62
 31722                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31723  01AEE0  6BF7               	clrf	247,b	;volatile
 31724                           
 31725                           ; BSR set to: 62
 31726                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31727  01AEE2  6BF9               	clrf	249,b	;volatile
 31728                           
 31729                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31730  01AEE4  0E5B               	movlw	91
 31731  01AEE6  6FFA               	movwf	250,b	;volatile
 31732                           
 31733                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31734  01AEE8  0E27               	movlw	39
 31735  01AEEA  6FFB               	movwf	251,b	;volatile
 31736                           
 31737                           ; BSR set to: 62
 31738                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31739  01AEEC  6BFC               	clrf	252,b	;volatile
 31740                           
 31741                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31742  01AEEE  0E02               	movlw	2
 31743  01AEF0  6FFD               	movwf	253,b	;volatile
 31744                           
 31745                           ; BSR set to: 62
 31746                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31747  01AEF2  6BFE               	clrf	254,b	;volatile
 31748                           
 31749                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31750  01AEF4  0E07               	movlw	7
 31751  01AEF6  6FFF               	movwf	255,b	;volatile
 31752                           
 31753                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31754  01AEF8  0E84               	movlw	132
 31755  01AEFA  6FF8               	movwf	248,b	;volatile
 31756                           
 31757                           ; BSR set to: 62
 31758                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31759  01AEFC  0139               	movlb	57	; () banked
 31760  01AEFE  95A1               	bcf	161,2,b	;volatile
 31761                           
 31762                           ; BSR set to: 57
 31763                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31764  01AF00  8591               	bsf	145,2,b	;volatile
 31765                           
 31766                           ; BSR set to: 57
 31767                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31768  01AF02  0E64               	movlw	low _ADCC_DefaultInterruptHandler
 31769  01AF04  6EE6               	movwf	postinc1,c
 31770  01AF06  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31771  01AF08  6EE6               	movwf	postinc1,c
 31772  01AF0A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31773  01AF0C  6EE6               	movwf	postinc1,c
 31774  01AF0E  EC53  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31775                           
 31776                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31777  01AF12  0139               	movlb	57	; () banked
 31778  01AF14  97A1               	bcf	161,3,b	;volatile
 31779                           
 31780                           ; BSR set to: 57
 31781                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31782  01AF16  8791               	bsf	145,3,b	;volatile
 31783                           
 31784                           ; BSR set to: 57
 31785                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31786  01AF18  0E64               	movlw	low _ADCC_DefaultInterruptHandler
 31787  01AF1A  6EE6               	movwf	postinc1,c
 31788  01AF1C  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31789  01AF1E  6EE6               	movwf	postinc1,c
 31790  01AF20  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31791  01AF22  6EE6               	movwf	postinc1,c
 31792  01AF24  EC3F  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31793                           
 31794                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31795  01AF28  0012               	return		;funcret
 31796  01AF2A                     __end_of_ADCC_Initialize:
 31797                           	opt callstack 0
 31798                           
 31799 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31800 ;; Defined at:
 31801 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31802 ;; Parameters:    Size  Location     Type
 31803 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31804 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31805 ;; Auto vars:     Size  Location     Type
 31806 ;;		None
 31807 ;; Return value:  Size  Location     Type
 31808 ;;                  1  [STACK] void 
 31809 ;; Registers used:
 31810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31811 ;; Tracked objects:
 31812 ;;		On entry : 0/1
 31813 ;;		On exit  : 0/0
 31814 ;;		Unchanged: 0/0
 31815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31820 ;;Total ram usage:        0 bytes
 31821 ;; Hardware stack levels used:    1
 31822 ;; Hardware stack levels required when called:   15
 31823 ;; This function calls:
 31824 ;;		Nothing
 31825 ;; This function is called by:
 31826 ;;		_ADCC_Initialize
 31827 ;;		_start_adc_scan
 31828 ;; This function uses a reentrant model
 31829 ;;
 31830                           
 31831                           	psect	text136
 31832  01BC7E                     __ptext136:
 31833                           	opt callstack 0
 31834  01BC7E                     _ADCC_SetADTIInterruptHandler:
 31835                           	opt callstack 14
 31836                           
 31837                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31838                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31839                           
 31840                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31841                           ;incstack = 0
 31842  01BC7E  50E1               	movf	fsr1l,w,c
 31843  01BC80  0FFD               	addlw	-3
 31844  01BC82  6ED9               	movwf	fsr2l,c
 31845  01BC84  50E2               	movf	fsr1h,w,c
 31846  01BC86  6EDA               	movwf	fsr2h,c
 31847  01BC88  0EFF               	movlw	255
 31848  01BC8A  22DA               	addwfc	fsr2h,f,c
 31849  01BC8C  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31850  01BC92  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31851  01BC98  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31852                           
 31853                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31854  01BC9E  52E5               	movf	postdec1,f,c
 31855  01BCA0  52E5               	movf	postdec1,f,c
 31856  01BCA2  52E5               	movf	postdec1,f,c
 31857  01BCA4  0012               	return		;funcret
 31858  01BCA6                     __end_of_ADCC_SetADTIInterruptHandler:
 31859                           	opt callstack 0
 31860                           
 31861 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31862 ;; Defined at:
 31863 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31864 ;; Parameters:    Size  Location     Type
 31865 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31866 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31867 ;; Auto vars:     Size  Location     Type
 31868 ;;		None
 31869 ;; Return value:  Size  Location     Type
 31870 ;;                  1  [STACK] void 
 31871 ;; Registers used:
 31872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31873 ;; Tracked objects:
 31874 ;;		On entry : 7/1
 31875 ;;		On exit  : 0/0
 31876 ;;		Unchanged: 0/0
 31877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31882 ;;Total ram usage:        0 bytes
 31883 ;; Hardware stack levels used:    1
 31884 ;; Hardware stack levels required when called:   15
 31885 ;; This function calls:
 31886 ;;		Nothing
 31887 ;; This function is called by:
 31888 ;;		_ADCC_Initialize
 31889 ;;		_start_adc_scan
 31890 ;; This function uses a reentrant model
 31891 ;;
 31892                           
 31893                           	psect	text137
 31894  01BCA6                     __ptext137:
 31895                           	opt callstack 0
 31896  01BCA6                     _ADCC_SetADIInterruptHandler:
 31897                           	opt callstack 14
 31898                           
 31899                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31900                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31901                           
 31902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31903                           ;incstack = 0
 31904  01BCA6  50E1               	movf	fsr1l,w,c
 31905  01BCA8  0FFD               	addlw	-3
 31906  01BCAA  6ED9               	movwf	fsr2l,c
 31907  01BCAC  50E2               	movf	fsr1h,w,c
 31908  01BCAE  6EDA               	movwf	fsr2h,c
 31909  01BCB0  0EFF               	movlw	255
 31910  01BCB2  22DA               	addwfc	fsr2h,f,c
 31911  01BCB4  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31912  01BCBA  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31913  01BCC0  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31914                           
 31915                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31916  01BCC6  52E5               	movf	postdec1,f,c
 31917  01BCC8  52E5               	movf	postdec1,f,c
 31918  01BCCA  52E5               	movf	postdec1,f,c
 31919  01BCCC  0012               	return		;funcret
 31920  01BCCE                     __end_of_ADCC_SetADIInterruptHandler:
 31921                           	opt callstack 0
 31922                           
 31923 ;; *************** function _INT1_ISR *****************
 31924 ;; Defined at:
 31925 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31926 ;; Parameters:    Size  Location     Type
 31927 ;;		None
 31928 ;; Auto vars:     Size  Location     Type
 31929 ;;		None
 31930 ;; Return value:  Size  Location     Type
 31931 ;;                  1    wreg      void 
 31932 ;; Registers used:
 31933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31934 ;; Tracked objects:
 31935 ;;		On entry : 0/0
 31936 ;;		On exit  : 0/0
 31937 ;;		Unchanged: 0/0
 31938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31941 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31943 ;;Total ram usage:        4 bytes
 31944 ;; Hardware stack levels used:    1
 31945 ;; Hardware stack levels required when called:    5
 31946 ;; This function calls:
 31947 ;;		_INT1_CallBack
 31948 ;; This function is called by:
 31949 ;;		Interrupt level 1
 31950 ;; This function uses a non-reentrant model
 31951 ;;
 31952                           
 31953                           	psect	text138
 31954  01B7CC                     __ptext138:
 31955                           	opt callstack 0
 31956  01B7CC                     _INT1_ISR:
 31957                           	opt callstack 11
 31958                           
 31959                           ;incstack = 0
 31960  01B7CC  006F FF60  F027    	movff	status,??_INT1_ISR
 31961  01B7D2  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31962  01B7D8  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31963  01B7DE  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31964  01B7E4  EE16  F0AF         	lfsr	1,___intlo_sp
 31965                           
 31966                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31967  01B7E8  0139               	movlb	57	; () banked
 31968  01B7EA  91A5               	bcf	165,0,b	;volatile
 31969                           
 31970                           ; BSR set to: 57
 31971                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31972  01B7EC  ECC8  F0DE         	call	_INT1_CallBack	;wreg free
 31973  01B7F0  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31974  01B7F6  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31975  01B7FC  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31976  01B802  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31977  01B808  0011               	retfie		f
 31978  01B80A                     __end_of_INT1_ISR:
 31979                           	opt callstack 0
 31980                           
 31981 ;; *************** function _INT1_CallBack *****************
 31982 ;; Defined at:
 31983 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31984 ;; Parameters:    Size  Location     Type
 31985 ;;		None
 31986 ;; Auto vars:     Size  Location     Type
 31987 ;;		None
 31988 ;; Return value:  Size  Location     Type
 31989 ;;                  1  [STACK] void 
 31990 ;; Registers used:
 31991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31992 ;; Tracked objects:
 31993 ;;		On entry : 3F/39
 31994 ;;		On exit  : 0/0
 31995 ;;		Unchanged: 0/0
 31996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32001 ;;Total ram usage:        0 bytes
 32002 ;; Hardware stack levels used:    1
 32003 ;; Hardware stack levels required when called:    4
 32004 ;; This function calls:
 32005 ;;		Absolute function
 32006 ;;		_INT1_DefaultInterruptHandler
 32007 ;;		_switch_handler
 32008 ;; This function is called by:
 32009 ;;		_INT1_ISR
 32010 ;; This function uses a reentrant model
 32011 ;;
 32012                           
 32013                           	psect	text139
 32014  01BD90                     __ptext139:
 32015                           	opt callstack 0
 32016  01BD90                     _INT1_CallBack:
 32017                           	opt callstack 11
 32018                           
 32019                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32020                           
 32021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32022                           ;incstack = 0
 32023  01BD90  0100               	movlb	0	; () banked
 32024  01BD92  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32025  01BD94  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32026  01BD96  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32027  01BD98  B4D8               	btfsc	status,2,c
 32028  01BD9A  0012               	return	
 32029                           
 32030                           ; BSR set to: 0
 32031                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32032  01BD9C  D801               	call	u995_28
 32033  01BD9E  0012               	return	
 32034  01BDA0                     u995_28:
 32035  01BDA0  0005               	push	
 32036  01BDA2  6EFA               	movwf	pclath,c
 32037  01BDA4  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32038  01BDA6  6EFD               	movwf	tosl,c
 32039  01BDA8  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32040  01BDAA  6EFE               	movwf	tosh,c
 32041  01BDAC  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32042  01BDAE  6EFF               	movwf	tosu,c
 32043  01BDB0  50FA               	movf	pclath,w,c
 32044  01BDB2  0012               	return		;indir
 32045  01BDB4                     __end_of_INT1_CallBack:
 32046                           	opt callstack 0
 32047                           
 32048 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32049 ;; Defined at:
 32050 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32051 ;; Parameters:    Size  Location     Type
 32052 ;;		None
 32053 ;; Auto vars:     Size  Location     Type
 32054 ;;		None
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  1  [STACK] void 
 32057 ;; Registers used:
 32058 ;;		None
 32059 ;; Tracked objects:
 32060 ;;		On entry : 3F/0
 32061 ;;		On exit  : 0/0
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32068 ;;Total ram usage:        0 bytes
 32069 ;; Hardware stack levels used:    1
 32070 ;; Hardware stack levels required when called:    3
 32071 ;; This function calls:
 32072 ;;		Nothing
 32073 ;; This function is called by:
 32074 ;;		_EXT_INT_Initialize
 32075 ;;		_INT1_CallBack
 32076 ;; This function uses a reentrant model
 32077 ;;
 32078                           
 32079                           	psect	text140
 32080  01C15E                     __ptext140:
 32081                           	opt callstack 0
 32082  01C15E                     _INT1_DefaultInterruptHandler:
 32083                           	opt callstack 11
 32084                           
 32085                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32086                           
 32087                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32088                           ;incstack = 0
 32089  01C15E  0012               	return		;funcret
 32090  01C160                     __end_of_INT1_DefaultInterruptHandler:
 32091                           	opt callstack 0
 32092                           
 32093 ;; *************** function _switch_handler *****************
 32094 ;; Defined at:
 32095 ;;		line 58 in file "dio.c"
 32096 ;; Parameters:    Size  Location     Type
 32097 ;;		None
 32098 ;; Auto vars:     Size  Location     Type
 32099 ;;  i               1  [STACK] unsigned char 
 32100 ;;  sw_value        1  [STACK] unsigned char 
 32101 ;; Return value:  Size  Location     Type
 32102 ;;                  1  [STACK] void 
 32103 ;; Registers used:
 32104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32105 ;; Tracked objects:
 32106 ;;		On entry : 3F/0
 32107 ;;		On exit  : 0/0
 32108 ;;		Unchanged: 0/0
 32109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;Total ram usage:        0 bytes
 32115 ;; Hardware stack levels used:    1
 32116 ;; Hardware stack levels required when called:    3
 32117 ;; This function calls:
 32118 ;;		Nothing
 32119 ;; This function is called by:
 32120 ;;		_start_switch_handler
 32121 ;;		_INT1_CallBack
 32122 ;; This function uses a reentrant model
 32123 ;;
 32124                           
 32125                           	psect	text141
 32126  01953C                     __ptext141:
 32127                           	opt callstack 0
 32128  01953C                     _switch_handler:
 32129                           	opt callstack 0
 32130                           
 32131                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32132  01953C  52E6               	movf	postinc1,f,c
 32133  01953E  52E6               	movf	postinc1,f,c
 32134                           
 32135                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32136                           ;stkvar	_i @ sp[(-2)+0]
 32137                           
 32138                           ;incstack = 0
 32139  019540  0EFE               	movlw	-2
 32140  019542  6AE3               	clrf	plusw1,c
 32141  019544  9ABF               	bcf	191,5,c	;volatile
 32142                           
 32143                           ;dio.c: 72:  __nop();
 32144  019546  F000               	nop	
 32145                           
 32146                           ;dio.c: 73:  __nop();
 32147  019548  F000               	nop	
 32148                           
 32149                           ;dio.c: 74:  __nop();
 32150  01954A  F000               	nop	
 32151                           
 32152                           ;dio.c: 75:  __nop();
 32153  01954C  F000               	nop	
 32154                           
 32155                           ;dio.c: 76:  __nop();
 32156  01954E  F000               	nop	
 32157                           
 32158                           ;dio.c: 77:  __nop();
 32159  019550  F000               	nop	
 32160  019552  D013               	goto	l10544
 32161  019554                     l10532:
 32162                           
 32163                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 32164  019554  A6CF               	btfss	207,3,c	;volatile
 32165  019556  D00B               	goto	u964_20
 32166  019558  D007               	goto	u964_21
 32167  01955A                     u963_28:
 32168                           
 32169                           ;stkvar	_sw_value @ sp[(-2)+1]
 32170  01955A  0EFF               	movlw	-1
 32171  01955C  0060  F033  FFE3   	movff	btemp+11,plusw1
 32172                           
 32173                           ;dio.c: 83:    break;
 32174  019562  D021               	goto	l10546
 32175  019564                     l10534:
 32176                           
 32177                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 32178  019564  A4CF               	btfss	207,2,c	;volatile
 32179  019566  D003               	goto	u964_20
 32180  019568                     u964_21:
 32181  019568  6A0C               	clrf	(btemp+11)^0,c
 32182  01956A  2A0C               	incf	(btemp+11)^0,f,c
 32183  01956C  D7F6               	goto	u963_28
 32184  01956E                     u964_20:
 32185  01956E  6A0C               	clrf	(btemp+11)^0,c
 32186  019570  D7F4               	goto	u963_28
 32187  019572                     l10536:
 32188                           
 32189                           ;dio.c: 88:    sw_value = 1;
 32190                           ;stkvar	_sw_value @ sp[(-2)+1]
 32191  019572  0EFF               	movlw	-1
 32192  019574  6AE3               	clrf	plusw1,c
 32193  019576  2AE3               	incf	plusw1,f,c
 32194                           
 32195                           ;dio.c: 89:    break;
 32196  019578  D016               	goto	l10546
 32197  01957A                     l10544:
 32198                           
 32199                           ;stkvar	_i @ sp[(-2)+0]
 32200  01957A  0EFE               	movlw	-2
 32201  01957C  50E3               	movf	plusw1,w,c
 32202  01957E  6E0B               	movwf	(btemp+10)^0,c
 32203  019580  6A0C               	clrf	(btemp+11)^0,c
 32204                           
 32205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32206                           ; Switch size 1, requested type "simple"
 32207                           ; Number of cases is 1, Range of values is 0 to 0
 32208                           ; switch strategies available:
 32209                           ; Name         Instructions Cycles
 32210                           ; simple_byte            4     3 (average)
 32211                           ;	Chosen strategy is simple_byte
 32212  019582  500C               	movf	(btemp+11)^0,w,c
 32213  019584  0A00               	xorlw	0	; case 0
 32214  019586  A4D8               	btfss	status,2,c
 32215  019588  D7F4               	goto	l10536
 32216                           
 32217                           ; Switch size 1, requested type "simple"
 32218                           ; Number of cases is 4, Range of values is 0 to 3
 32219                           ; switch strategies available:
 32220                           ; Name         Instructions Cycles
 32221                           ; simple_byte           13     7 (average)
 32222                           ;	Chosen strategy is simple_byte
 32223  01958A  500B               	movf	(btemp+10)^0,w,c
 32224  01958C  0A00               	xorlw	0	; case 0
 32225  01958E  B4D8               	btfsc	status,2,c
 32226  019590  D7F0               	goto	l10536
 32227  019592  0A01               	xorlw	1	; case 1
 32228  019594  B4D8               	btfsc	status,2,c
 32229  019596  D7ED               	goto	l10536
 32230  019598  0A03               	xorlw	3	; case 2
 32231  01959A  B4D8               	btfsc	status,2,c
 32232  01959C  D7E3               	goto	l10534
 32233  01959E  0A01               	xorlw	1	; case 3
 32234  0195A0  B4D8               	btfsc	status,2,c
 32235  0195A2  D7D8               	goto	l10532
 32236  0195A4  D7E6               	goto	l10536
 32237  0195A6                     l10546:
 32238                           
 32239                           ;dio.c: 99:   if (sw_value) {
 32240                           ;stkvar	_sw_value @ sp[(-2)+1]
 32241  0195A6  0EFF               	movlw	-1
 32242  0195A8  50E3               	movf	plusw1,w,c
 32243  0195AA  B4D8               	btfsc	status,2,c
 32244  0195AC  D018               	goto	l10552
 32245                           
 32246                           ;dio.c: 100:    if (S.button[i].sw == SW_ON) {
 32247                           ;stkvar	_i @ sp[(-2)+0]
 32248  0195AE  0EFE               	movlw	-2
 32249  0195B0  50E3               	movf	plusw1,w,c
 32250  0195B2  0D05               	mullw	5
 32251  0195B4  0E54               	movlw	low _S
 32252  0195B6  24F3               	addwf	243,w,c
 32253  0195B8  6ED9               	movwf	fsr2l,c
 32254  0195BA  0E02               	movlw	high _S
 32255  0195BC  20F4               	addwfc	prodh,w,c
 32256  0195BE  6EDA               	movwf	fsr2h,c
 32257  0195C0  04DE               	decf	postinc2,w,c
 32258  0195C2  A4D8               	btfss	status,2,c
 32259  0195C4  D049               	goto	l10560
 32260                           
 32261                           ;dio.c: 101:     S.button[i].sw = SW_OFF;
 32262                           ;stkvar	_i @ sp[(-2)+0]
 32263  0195C6  0EFE               	movlw	-2
 32264  0195C8  50E3               	movf	plusw1,w,c
 32265  0195CA  0D05               	mullw	5
 32266  0195CC  0E54               	movlw	low _S
 32267  0195CE  24F3               	addwf	243,w,c
 32268  0195D0  6ED9               	movwf	fsr2l,c
 32269  0195D2  0E02               	movlw	high _S
 32270  0195D4  20F4               	addwfc	prodh,w,c
 32271  0195D6  6EDA               	movwf	fsr2h,c
 32272  0195D8  0E00               	movlw	0
 32273  0195DA  6EDF               	movwf	indf2,c
 32274  0195DC  D03D               	goto	l10560
 32275  0195DE                     l10552:
 32276                           
 32277                           ;dio.c: 104:    if (S.button[i].sw == SW_OFF) {
 32278                           ;stkvar	_i @ sp[(-2)+0]
 32279  0195DE  0EFE               	movlw	-2
 32280  0195E0  50E3               	movf	plusw1,w,c
 32281  0195E2  0D05               	mullw	5
 32282  0195E4  0E54               	movlw	low _S
 32283  0195E6  24F3               	addwf	243,w,c
 32284  0195E8  6ED9               	movwf	fsr2l,c
 32285  0195EA  0E02               	movlw	high _S
 32286  0195EC  20F4               	addwfc	prodh,w,c
 32287  0195EE  6EDA               	movwf	fsr2h,c
 32288  0195F0  50DF               	movf	indf2,w,c
 32289  0195F2  A4D8               	btfss	status,2,c
 32290  0195F4  D031               	goto	l10560
 32291                           
 32292                           ;dio.c: 105:     S.button[i].sw = SW_ON;
 32293                           ;stkvar	_i @ sp[(-2)+0]
 32294  0195F6  0EFE               	movlw	-2
 32295  0195F8  50E3               	movf	plusw1,w,c
 32296  0195FA  0D05               	mullw	5
 32297  0195FC  0E54               	movlw	low _S
 32298  0195FE  24F3               	addwf	243,w,c
 32299  019600  6ED9               	movwf	fsr2l,c
 32300  019602  0E02               	movlw	high _S
 32301  019604  20F4               	addwfc	prodh,w,c
 32302  019606  6EDA               	movwf	fsr2h,c
 32303  019608  0E01               	movlw	1
 32304  01960A  6EDF               	movwf	indf2,c
 32305                           
 32306                           ;dio.c: 106:     S.button[i].count = V.timerint_count;
 32307  01960C  EE20  F1EB         	lfsr	2,_V+187	;volatile
 32308                           
 32309                           ;stkvar	_i @ sp[(-2)+0]
 32310  019610  0EFE               	movlw	-2
 32311  019612  50E3               	movf	plusw1,w,c
 32312  019614  0D05               	mullw	5
 32313  019616  0E55               	movlw	low (_S+1)
 32314  019618  24F3               	addwf	243,w,c
 32315  01961A  6EE9               	movwf	fsr0l,c
 32316  01961C  0E02               	movlw	high (_S+1)
 32317  01961E  20F4               	addwfc	prodh,w,c
 32318  019620  6EEA               	movwf	fsr0h,c
 32319  019622  006F FF7B FFEE     	movff	postinc2,postinc0
 32320  019628  006F FF7B FFEE     	movff	postinc2,postinc0
 32321  01962E  006F FF7B FFEE     	movff	postinc2,postinc0
 32322  019634  006F FF7B FFEE     	movff	postinc2,postinc0
 32323                           
 32324                           ;dio.c: 107:     S.sw_bitmap |= 1 << i;
 32325                           ;stkvar	_i @ sp[(-2)+0]
 32326  01963A  0EFE               	movlw	-2
 32327  01963C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32328  019642  0E01               	movlw	1
 32329  019644  6E0B               	movwf	(btemp+10)^0,c
 32330  019646  2A0C               	incf	(btemp+11)^0,f,c
 32331  019648  D002               	goto	u968_24
 32332  01964A                     u968_25:
 32333  01964A  90D8               	bcf	status,0,c
 32334  01964C  360B               	rlcf	(btemp+10)^0,f,c
 32335  01964E                     u968_24:
 32336  01964E  2E0C               	decfsz	(btemp+11)^0,f,c
 32337  019650  D7FC               	goto	u968_25
 32338  019652  500B               	movf	(btemp+10)^0,w,c
 32339  019654  0102               	movlb	2	; () banked
 32340  019656  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32341  019658                     l10560:
 32342                           
 32343                           ;dio.c: 110:  } while (++i < 4);
 32344                           ;stkvar	_i @ sp[(-2)+0]
 32345  019658  0EFE               	movlw	-2
 32346  01965A  2AE3               	incf	plusw1,f,c
 32347  01965C  0EFE               	movlw	-2
 32348  01965E  006F FF8C  F001    	movff	plusw1,btemp
 32349  019664  0E03               	movlw	3
 32350  019666  6401               	cpfsgt	btemp^0,c
 32351  019668  D788               	goto	l10544
 32352                           
 32353                           ;dio.c: 119:  do { LATFbits.LATF5 = 1; } while(0);
 32354  01966A  8ABF               	bsf	191,5,c	;volatile
 32355                           
 32356                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32357  01966C  52E5               	movf	postdec1,f,c
 32358  01966E  52E5               	movf	postdec1,f,c
 32359  019670  0012               	return		;funcret
 32360  019672                     __end_of_switch_handler:
 32361                           	opt callstack 0
 32362                           
 32363 ;; *************** function _TMR5_ISR *****************
 32364 ;; Defined at:
 32365 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32366 ;; Parameters:    Size  Location     Type
 32367 ;;		None
 32368 ;; Auto vars:     Size  Location     Type
 32369 ;;		None
 32370 ;; Return value:  Size  Location     Type
 32371 ;;                  1    wreg      void 
 32372 ;; Registers used:
 32373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32374 ;; Tracked objects:
 32375 ;;		On entry : 0/0
 32376 ;;		On exit  : 3F/0
 32377 ;;		Unchanged: 0/0
 32378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32381 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32382 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32383 ;;Total ram usage:       15 bytes
 32384 ;; Hardware stack levels used:    1
 32385 ;; Hardware stack levels required when called:    9
 32386 ;; This function calls:
 32387 ;;		_TMR5_CallBack
 32388 ;;		_TMR5_WriteTimer
 32389 ;; This function is called by:
 32390 ;;		Interrupt level 1
 32391 ;; This function uses a non-reentrant model
 32392 ;;
 32393                           
 32394                           	psect	text142
 32395  01A0CC                     __ptext142:
 32396                           	opt callstack 0
 32397  01A0CC                     _TMR5_ISR:
 32398                           	opt callstack 7
 32399                           
 32400                           ;incstack = 0
 32401  01A0CC  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32402  01A0D2  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32403  01A0D8  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32404  01A0DE  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32405  01A0E4  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32406  01A0EA  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32407  01A0F0  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32408  01A0F6  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32409  01A0FC  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32410  01A102  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32411  01A108  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32412  01A10E  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32413  01A114  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32414  01A11A  EE16  F0AF         	lfsr	1,___intlo_sp
 32415                           
 32416                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32417  01A11E  0139               	movlb	57	; () banked
 32418  01A120  9DA8               	bcf	168,6,b	;volatile
 32419                           
 32420                           ; BSR set to: 57
 32421                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32422  01A122  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32423  01A128  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32424  01A12E  ECA5  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32425                           
 32426                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32427  01A132  0101               	movlb	1	; () banked
 32428  01A134  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32429  01A136  6E2B               	movwf	??_TMR5_ISR^0,c
 32430  01A138  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32431  01A13A  0E05               	movlw	5
 32432  01A13C  262B               	addwf	??_TMR5_ISR^0,f,c
 32433  01A13E  0E00               	movlw	0
 32434  01A140  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32435  01A142  0100               	movlb	0	; () banked
 32436  01A144  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32437  01A146  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32438  01A148  502B               	movf	??_TMR5_ISR^0,w,c
 32439  01A14A  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32440  01A14C  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32441  01A14E  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32442  01A150  A0D8               	btfss	status,0,c
 32443  01A152  D005               	goto	i1l1019
 32444                           
 32445                           ; BSR set to: 0
 32446                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32447  01A154  ECDA  F0DE         	call	_TMR5_CallBack	;wreg free
 32448                           
 32449                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32450  01A158  0100               	movlb	0	; () banked
 32451  01A15A  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32452  01A15C  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32453  01A15E                     i1l1019:
 32454                           
 32455                           ; BSR set to: 0
 32456  01A15E  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32457  01A164  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32458  01A16A  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32459  01A170  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32460  01A176  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32461  01A17C  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32462  01A182  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32463  01A188  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32464  01A18E  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32465  01A194  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32466  01A19A  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32467  01A1A0  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32468  01A1A6  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32469  01A1AC  0011               	retfie		f
 32470  01A1AE                     __end_of_TMR5_ISR:
 32471                           	opt callstack 0
 32472                           
 32473 ;; *************** function _TMR5_WriteTimer *****************
 32474 ;; Defined at:
 32475 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32476 ;; Parameters:    Size  Location     Type
 32477 ;;  timerVal        2  [STACK] unsigned short 
 32478 ;; Auto vars:     Size  Location     Type
 32479 ;;		None
 32480 ;; Return value:  Size  Location     Type
 32481 ;;                  1  [STACK] void 
 32482 ;; Registers used:
 32483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32484 ;; Tracked objects:
 32485 ;;		On entry : 3F/39
 32486 ;;		On exit  : 0/0
 32487 ;;		Unchanged: 0/0
 32488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32493 ;;Total ram usage:        0 bytes
 32494 ;; Hardware stack levels used:    1
 32495 ;; Hardware stack levels required when called:    3
 32496 ;; This function calls:
 32497 ;;		Nothing
 32498 ;; This function is called by:
 32499 ;;		_TMR5_ISR
 32500 ;; This function uses a reentrant model
 32501 ;;
 32502                           
 32503                           	psect	text143
 32504  01B74A                     __ptext143:
 32505                           	opt callstack 0
 32506  01B74A                     _TMR5_WriteTimer:
 32507                           	opt callstack 12
 32508                           
 32509                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32510                           
 32511                           ; BSR set to: 0
 32512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32513                           ;incstack = 0
 32514  01B74A  A49A               	btfss	154,2,c	;volatile
 32515  01B74C  D00F               	goto	l10764
 32516                           
 32517                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32518  01B74E  909A               	bcf	154,0,c	;volatile
 32519                           
 32520                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32521                           ;stkvar	_timerVal @ sp[(0)+-2]
 32522  01B750  0EFF               	movlw	255
 32523  01B752  24E1               	addwf	fsr1l,w,c
 32524  01B754  6ED9               	movwf	fsr2l,c
 32525  01B756  0EFF               	movlw	255
 32526  01B758  20E2               	addwfc	fsr1h,w,c
 32527  01B75A  6EDA               	movwf	fsr2h,c
 32528  01B75C  50DF               	movf	indf2,w,c
 32529  01B75E  6E99               	movwf	153,c	;volatile
 32530                           
 32531                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32532                           ;stkvar	_timerVal @ sp[(0)+-2]
 32533  01B760  0EFE               	movlw	-2
 32534  01B762  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32535                           
 32536                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32537  01B768  809A               	bsf	154,0,c	;volatile
 32538                           
 32539                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32540  01B76A  D00C               	goto	l1002
 32541  01B76C                     l10764:
 32542                           
 32543                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32544                           ;stkvar	_timerVal @ sp[(0)+-2]
 32545  01B76C  0EFF               	movlw	255
 32546  01B76E  24E1               	addwf	fsr1l,w,c
 32547  01B770  6ED9               	movwf	fsr2l,c
 32548  01B772  0EFF               	movlw	255
 32549  01B774  20E2               	addwfc	fsr1h,w,c
 32550  01B776  6EDA               	movwf	fsr2h,c
 32551  01B778  50DF               	movf	indf2,w,c
 32552  01B77A  6E99               	movwf	153,c	;volatile
 32553                           
 32554                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32555                           ;stkvar	_timerVal @ sp[(0)+-2]
 32556  01B77C  0EFE               	movlw	-2
 32557  01B77E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32558  01B784                     l1002:
 32559                           
 32560                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32561  01B784  52E5               	movf	postdec1,f,c
 32562  01B786  52E5               	movf	postdec1,f,c
 32563  01B788  0012               	return		;funcret
 32564  01B78A                     __end_of_TMR5_WriteTimer:
 32565                           	opt callstack 0
 32566                           
 32567 ;; *************** function _TMR5_CallBack *****************
 32568 ;; Defined at:
 32569 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32570 ;; Parameters:    Size  Location     Type
 32571 ;;		None
 32572 ;; Auto vars:     Size  Location     Type
 32573 ;;		None
 32574 ;; Return value:  Size  Location     Type
 32575 ;;                  1  [STACK] void 
 32576 ;; Registers used:
 32577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32578 ;; Tracked objects:
 32579 ;;		On entry : 3F/0
 32580 ;;		On exit  : 0/0
 32581 ;;		Unchanged: 0/0
 32582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32587 ;;Total ram usage:        0 bytes
 32588 ;; Hardware stack levels used:    1
 32589 ;; Hardware stack levels required when called:    8
 32590 ;; This function calls:
 32591 ;;		Absolute function
 32592 ;;		_TMR5_DefaultInterruptHandler
 32593 ;; This function is called by:
 32594 ;;		_TMR5_ISR
 32595 ;; This function uses a reentrant model
 32596 ;;
 32597                           
 32598                           	psect	text144
 32599  01BDB4                     __ptext144:
 32600                           	opt callstack 0
 32601  01BDB4                     _TMR5_CallBack:
 32602                           	opt callstack 7
 32603                           
 32604                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32605                           
 32606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32607                           ;incstack = 0
 32608  01BDB4  0100               	movlb	0	; () banked
 32609  01BDB6  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32610  01BDB8  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32611  01BDBA  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32612  01BDBC  B4D8               	btfsc	status,2,c
 32613  01BDBE  0012               	return	
 32614                           
 32615                           ; BSR set to: 0
 32616                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32617  01BDC0  D801               	call	u1004_28
 32618  01BDC2  0012               	return	
 32619  01BDC4                     u1004_28:
 32620  01BDC4  0005               	push	
 32621  01BDC6  6EFA               	movwf	pclath,c
 32622  01BDC8  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32623  01BDCA  6EFD               	movwf	tosl,c
 32624  01BDCC  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32625  01BDCE  6EFE               	movwf	tosh,c
 32626  01BDD0  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32627  01BDD2  6EFF               	movwf	tosu,c
 32628  01BDD4  50FA               	movf	pclath,w,c
 32629  01BDD6  0012               	return		;indir
 32630  01BDD8                     __end_of_TMR5_CallBack:
 32631                           	opt callstack 0
 32632                           
 32633 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32634 ;; Defined at:
 32635 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32636 ;; Parameters:    Size  Location     Type
 32637 ;;		None
 32638 ;; Auto vars:     Size  Location     Type
 32639 ;;		None
 32640 ;; Return value:  Size  Location     Type
 32641 ;;                  1  [STACK] void 
 32642 ;; Registers used:
 32643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32644 ;; Tracked objects:
 32645 ;;		On entry : 3F/0
 32646 ;;		On exit  : 0/0
 32647 ;;		Unchanged: 0/0
 32648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32653 ;;Total ram usage:        0 bytes
 32654 ;; Hardware stack levels used:    1
 32655 ;; Hardware stack levels required when called:    7
 32656 ;; This function calls:
 32657 ;;		_check_day_time
 32658 ;; This function is called by:
 32659 ;;		_TMR5_Initialize
 32660 ;;		_TMR5_CallBack
 32661 ;; This function uses a reentrant model
 32662 ;;
 32663                           
 32664                           	psect	text145
 32665  01B87C                     __ptext145:
 32666                           	opt callstack 0
 32667  01B87C                     _TMR5_DefaultInterruptHandler:
 32668                           	opt callstack 7
 32669                           
 32670                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32671                           
 32672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32673                           ;incstack = 0
 32674  01B87C  A0BE               	btfss	190,0,c	;volatile
 32675  01B87E  D002               	goto	u947_20
 32676  01B880  0E01               	movlw	1
 32677  01B882  D001               	goto	u947_26
 32678  01B884                     u947_20:
 32679  01B884  0E00               	movlw	0
 32680  01B886                     u947_26:
 32681  01B886  0AFF               	xorlw	255
 32682  01B888  6E0C               	movwf	(btemp+11)^0,c
 32683  01B88A  50BE               	movf	190,w,c	;volatile
 32684  01B88C  180C               	xorwf	(btemp+11)^0,w,c
 32685  01B88E  0BFE               	andlw	-2
 32686  01B890  180C               	xorwf	(btemp+11)^0,w,c
 32687  01B892  6EBE               	movwf	190,c	;volatile
 32688                           
 32689                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32690  01B894  0E01               	movlw	1
 32691  01B896  0101               	movlb	1	; () banked
 32692  01B898  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32693  01B89A  0E00               	movlw	0
 32694  01B89C  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32695  01B89E  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32696  01B8A0  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32697                           
 32698                           ; BSR set to: 1
 32699                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32700  01B8A2  0E01               	movlw	1
 32701  01B8A4  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32702  01B8A6  0E00               	movlw	0
 32703  01B8A8  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32704  01B8AA  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32705  01B8AC  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32706                           
 32707                           ; BSR set to: 1
 32708                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32709  01B8AE  EC1D  F0C4         	call	_check_day_time	;wreg free
 32710                           
 32711                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32712  01B8B2  0012               	return		;funcret
 32713  01B8B4                     __end_of_TMR5_DefaultInterruptHandler:
 32714                           	opt callstack 0
 32715                           
 32716 ;; *************** function _check_day_time *****************
 32717 ;; Defined at:
 32718 ;;		line 165 in file "mbmc.c"
 32719 ;; Parameters:    Size  Location     Type
 32720 ;;		None
 32721 ;; Auto vars:     Size  Location     Type
 32722 ;;  light           4  [STACK] float 
 32723 ;; Return value:  Size  Location     Type
 32724 ;;                  1  [STACK] _Bool 
 32725 ;; Registers used:
 32726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32727 ;; Tracked objects:
 32728 ;;		On entry : 3F/1
 32729 ;;		On exit  : 0/0
 32730 ;;		Unchanged: 0/0
 32731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32736 ;;Total ram usage:        0 bytes
 32737 ;; Hardware stack levels used:    1
 32738 ;; Hardware stack levels required when called:    6
 32739 ;; This function calls:
 32740 ;;		___flge
 32741 ;;		_conv_raw_result
 32742 ;;		_get_ac_charger_relay
 32743 ;;		_set_ac_charger_relay
 32744 ;; This function is called by:
 32745 ;;		_TMR5_DefaultInterruptHandler
 32746 ;; This function uses a reentrant model
 32747 ;;
 32748                           
 32749                           	psect	text146
 32750  01883A                     __ptext146:
 32751                           	opt callstack 0
 32752  01883A                     _check_day_time:
 32753                           	opt callstack 0
 32754                           
 32755                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32756  01883A  52E6               	movf	postinc1,f,c
 32757  01883C  52E6               	movf	postinc1,f,c
 32758  01883E  52E6               	movf	postinc1,f,c
 32759  018840  52E6               	movf	postinc1,f,c
 32760                           
 32761                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32762                           
 32763                           ;incstack = 0
 32764  018842  0E00               	movlw	0
 32765  018844  6EE6               	movwf	postinc1,c
 32766  018846  0E0D               	movlw	13
 32767  018848  6EE6               	movwf	postinc1,c
 32768  01884A  EC71  F0A9         	call	_conv_raw_result	;wreg free
 32769                           
 32770                           ;stkvar	_light @ sp[(-4)+0]
 32771  01884E  0EFC               	movlw	-4
 32772  018850  0060  F007  FFE3   	movff	btemp,plusw1
 32773  018856  0EFD               	movlw	-3
 32774  018858  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32775  01885E  0EFE               	movlw	-2
 32776  018860  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32777  018866  0EFF               	movlw	-1
 32778  018868  0060  F013  FFE3   	movff	btemp+3,plusw1
 32779                           
 32780                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32781  01886E  2A42               	incf	check_day_time@day_delay^0,f,c
 32782  018870  0442               	decf	check_day_time@day_delay^0,w,c
 32783  018872  A4D8               	btfss	status,2,c
 32784  018874  D0A9               	goto	l1896
 32785  018876  0101               	movlb	1	; () banked
 32786  018878  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32787  01887A  B4D8               	btfsc	status,2,c
 32788  01887C  D0A5               	goto	l1896
 32789                           
 32790                           ; BSR set to: 1
 32791                           ;mbmc.c: 173:   if (C.soc > 15) {
 32792  01887E  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32793  018882  0E01               	movlw	1
 32794  018884  50DB               	movf	plusw2,w,c
 32795  018886  E104               	bnz	u926_20
 32796  018888  0E10               	movlw	16
 32797  01888A  5CDE               	subwf	postinc2,w,c
 32798  01888C  A0D8               	btfss	status,0,c
 32799  01888E  D073               	goto	l9848
 32800  018890                     u926_20:
 32801                           
 32802                           ; BSR set to: 1
 32803                           ;mbmc.c: 174:    if (!C.day) {
 32804  018890  EE22  F021         	lfsr	2,_C+290	;volatile
 32805  018894  50DF               	movf	indf2,w,c
 32806  018896  A4D8               	btfss	status,2,c
 32807  018898  D035               	goto	l9836
 32808                           
 32809                           ; BSR set to: 1
 32810                           ;mbmc.c: 175:     if (light > 22.0) {
 32811                           ;stkvar	_light @ sp[(-4)+0]
 32812  01889A  0EFC               	movlw	-4
 32813  01889C  006F FF8F FFE6     	movff	plusw1,postinc1
 32814  0188A2  006F FF8F FFE6     	movff	plusw1,postinc1
 32815  0188A8  006F FF8F FFE6     	movff	plusw1,postinc1
 32816  0188AE  006F FF8F FFE6     	movff	plusw1,postinc1
 32817  0188B4  0E00               	movlw	0
 32818  0188B6  6EE6               	movwf	postinc1,c
 32819  0188B8  0E00               	movlw	0
 32820  0188BA  6EE6               	movwf	postinc1,c
 32821  0188BC  0EB0               	movlw	176
 32822  0188BE  6EE6               	movwf	postinc1,c
 32823  0188C0  0E41               	movlw	65
 32824  0188C2  6EE6               	movwf	postinc1,c
 32825  0188C4  ECF4  F0C7         	call	___flge	;wreg free
 32826  0188C8  B001               	btfsc	btemp& (0+255),0,c
 32827  0188CA  D07E               	goto	l1896
 32828                           
 32829                           ;mbmc.c: 176:      C.day = 1;
 32830  0188CC  0E01               	movlw	1
 32831  0188CE  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32832                           
 32833                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32834  0188D4  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32835  0188D8  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32836  0188DE  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32837  0188E4  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32838  0188EA  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32839                           
 32840                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32841  0188F0  EC58  F0E0         	call	_get_ac_charger_relay	;wreg free
 32842  0188F4  5001               	movf	btemp^0,w,c
 32843  0188F6  B4D8               	btfsc	status,2,c
 32844  0188F8  D06B               	goto	l1892
 32845                           
 32846                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32847  0188FA  0E00               	movlw	0
 32848  0188FC  6EE6               	movwf	postinc1,c
 32849  0188FE  EC3B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32850  018902  D066               	goto	l1892
 32851  018904                     l9836:
 32852                           
 32853                           ; BSR set to: 1
 32854                           ;mbmc.c: 184:     if (light < 12.0) {
 32855  018904  0E00               	movlw	0
 32856  018906  6EE6               	movwf	postinc1,c
 32857  018908  0E00               	movlw	0
 32858  01890A  6EE6               	movwf	postinc1,c
 32859  01890C  0E40               	movlw	64
 32860  01890E  6EE6               	movwf	postinc1,c
 32861  018910  0E41               	movlw	65
 32862  018912  6EE6               	movwf	postinc1,c
 32863                           
 32864                           ;stkvar	_light @ sp[(-8)+0]
 32865  018914  0EF8               	movlw	-8
 32866  018916  006F FF8F FFE6     	movff	plusw1,postinc1
 32867  01891C  006F FF8F FFE6     	movff	plusw1,postinc1
 32868  018922  006F FF8F FFE6     	movff	plusw1,postinc1
 32869  018928  006F FF8F FFE6     	movff	plusw1,postinc1
 32870  01892E  ECF4  F0C7         	call	___flge	;wreg free
 32871  018932  B001               	btfsc	btemp& (0+255),0,c
 32872  018934  D049               	goto	l1896
 32873                           
 32874                           ;mbmc.c: 185:      C.day = 0;
 32875  018936  0E00               	movlw	0
 32876  018938  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32877                           
 32878                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32879  01893E  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32880  018942  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32881  018948  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32882  01894E  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32883  018954  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32884                           
 32885                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32886  01895A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32887  01895E  0E01               	movlw	1
 32888  018960  50DB               	movf	plusw2,w,c
 32889  018962  E136               	bnz	l1892
 32890  018964  0E28               	movlw	40
 32891  018966  5CDE               	subwf	postinc2,w,c
 32892  018968  B0D8               	btfsc	status,0,c
 32893  01896A  D032               	goto	l1892
 32894                           
 32895                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32896  01896C  0E01               	movlw	1
 32897  01896E  6EE6               	movwf	postinc1,c
 32898  018970  EC3B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32899  018974  D02D               	goto	l1892
 32900  018976                     l9848:
 32901                           
 32902                           ; BSR set to: 1
 32903                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32904  018976  EE21  F377         	lfsr	2,_C+120	;volatile
 32905  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
 32906  018980  006F FF7B FFE6     	movff	postinc2,postinc1
 32907  018986  006F FF7B FFE6     	movff	postinc2,postinc1
 32908  01898C  006F FF7B FFE6     	movff	postinc2,postinc1
 32909  018992  EE21  F37B         	lfsr	2,_C+124	;volatile
 32910  018996  006F FF7B FFE6     	movff	postinc2,postinc1
 32911  01899C  006F FF7B FFE6     	movff	postinc2,postinc1
 32912  0189A2  006F FF7B FFE6     	movff	postinc2,postinc1
 32913  0189A8  006F FF7B FFE6     	movff	postinc2,postinc1
 32914  0189AE  ECF4  F0C7         	call	___flge	;wreg free
 32915  0189B2  B001               	btfsc	btemp& (0+255),0,c
 32916  0189B4  D009               	goto	l1896
 32917                           
 32918                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32919  0189B6  EC58  F0E0         	call	_get_ac_charger_relay	;wreg free
 32920  0189BA  5001               	movf	btemp^0,w,c
 32921  0189BC  A4D8               	btfss	status,2,c
 32922  0189BE  D004               	goto	l1896
 32923                           
 32924                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32925  0189C0  0E01               	movlw	1
 32926  0189C2  6EE6               	movwf	postinc1,c
 32927  0189C4  EC3B  F0E0         	call	_set_ac_charger_relay	;wreg free
 32928  0189C8                     l1896:
 32929                           
 32930                           ;mbmc.c: 204:  if (day_delay >= 240)
 32931  0189C8  0EEF               	movlw	239
 32932  0189CA  6442               	cpfsgt	check_day_time@day_delay^0,c
 32933  0189CC  D001               	goto	l1892
 32934                           
 32935                           ;mbmc.c: 205:   day_delay = 0;
 32936  0189CE  6A42               	clrf	check_day_time@day_delay^0,c
 32937  0189D0                     l1892:
 32938                           
 32939                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32940  0189D0  52E5               	movf	postdec1,f,c
 32941  0189D2  52E5               	movf	postdec1,f,c
 32942  0189D4  52E5               	movf	postdec1,f,c
 32943  0189D6  52E5               	movf	postdec1,f,c
 32944  0189D8  0012               	return		;funcret
 32945  0189DA                     __end_of_check_day_time:
 32946                           	opt callstack 0
 32947                           
 32948 ;; *************** function _set_ac_charger_relay *****************
 32949 ;; Defined at:
 32950 ;;		line 135 in file "mbmc.c"
 32951 ;; Parameters:    Size  Location     Type
 32952 ;;  mode            1  [STACK] const _Bool 
 32953 ;; Auto vars:     Size  Location     Type
 32954 ;;		None
 32955 ;; Return value:  Size  Location     Type
 32956 ;;                  1  [STACK] void 
 32957 ;; Registers used:
 32958 ;;		wreg, fsr1l, fsr1h
 32959 ;; Tracked objects:
 32960 ;;		On entry : 0/1
 32961 ;;		On exit  : 0/0
 32962 ;;		Unchanged: 0/0
 32963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32968 ;;Total ram usage:        0 bytes
 32969 ;; Hardware stack levels used:    1
 32970 ;; Hardware stack levels required when called:    3
 32971 ;; This function calls:
 32972 ;;		Nothing
 32973 ;; This function is called by:
 32974 ;;		_check_day_time
 32975 ;; This function uses a reentrant model
 32976 ;;
 32977                           
 32978                           	psect	text147
 32979  01C076                     __ptext147:
 32980                           	opt callstack 0
 32981  01C076                     _set_ac_charger_relay:
 32982                           	opt callstack 9
 32983                           
 32984                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 32985                           ;stkvar	_mode @ sp[(0)+-1]
 32986                           
 32987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32988                           ;incstack = 0
 32989  01C076  0EFF               	movlw	-1
 32990  01C078  B0E3               	btfsc	plusw1,0,c
 32991  01C07A  D002               	bra	u921_25
 32992  01C07C  9CBD               	bcf	189,6,c	;volatile
 32993  01C07E  D001               	bra	u921_26
 32994  01C080                     u921_25:
 32995  01C080  8CBD               	bsf	189,6,c	;volatile
 32996  01C082                     u921_26:
 32997                           
 32998                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 32999  01C082  52E5               	movf	postdec1,f,c
 33000  01C084  0012               	return		;funcret
 33001  01C086                     __end_of_set_ac_charger_relay:
 33002                           	opt callstack 0
 33003                           
 33004 ;; *************** function _get_ac_charger_relay *****************
 33005 ;; Defined at:
 33006 ;;		line 140 in file "mbmc.c"
 33007 ;; Parameters:    Size  Location     Type
 33008 ;;		None
 33009 ;; Auto vars:     Size  Location     Type
 33010 ;;		None
 33011 ;; Return value:  Size  Location     Type
 33012 ;;                  1  [STACK] _Bool 
 33013 ;; Registers used:
 33014 ;;		btemp
 33015 ;; Tracked objects:
 33016 ;;		On entry : 0/1
 33017 ;;		On exit  : 0/0
 33018 ;;		Unchanged: 0/0
 33019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33024 ;;Total ram usage:        0 bytes
 33025 ;; Hardware stack levels used:    1
 33026 ;; Hardware stack levels required when called:    3
 33027 ;; This function calls:
 33028 ;;		Nothing
 33029 ;; This function is called by:
 33030 ;;		_check_day_time
 33031 ;;		_calc_bsoc
 33032 ;; This function uses a reentrant model
 33033 ;;
 33034                           
 33035                           	psect	text148
 33036  01C0B0                     __ptext148:
 33037                           	opt callstack 0
 33038  01C0B0                     _get_ac_charger_relay:
 33039                           	opt callstack 10
 33040                           
 33041                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33042                           
 33043                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33044                           ;incstack = 0
 33045  01C0B0  ACBD               	btfss	189,6,c	;volatile
 33046  01C0B2  D003               	goto	u940_20
 33047  01C0B4  6A01               	clrf	btemp^0,c
 33048  01C0B6  2A01               	incf	btemp^0,f,c
 33049  01C0B8  0012               	return	
 33050  01C0BA                     u940_20:
 33051  01C0BA  6A01               	clrf	btemp^0,c
 33052                           
 33053                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33054  01C0BC  0012               	return		;funcret
 33055  01C0BE                     __end_of_get_ac_charger_relay:
 33056                           	opt callstack 0
 33057                           
 33058 ;; *************** function _TMR3_ISR *****************
 33059 ;; Defined at:
 33060 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33061 ;; Parameters:    Size  Location     Type
 33062 ;;		None
 33063 ;; Auto vars:     Size  Location     Type
 33064 ;;		None
 33065 ;; Return value:  Size  Location     Type
 33066 ;;                  1    wreg      void 
 33067 ;; Registers used:
 33068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33069 ;; Tracked objects:
 33070 ;;		On entry : 0/0
 33071 ;;		On exit  : 3F/0
 33072 ;;		Unchanged: 0/0
 33073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33076 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33077 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33078 ;;Total ram usage:       25 bytes
 33079 ;; Hardware stack levels used:    1
 33080 ;; Hardware stack levels required when called:   14
 33081 ;; This function calls:
 33082 ;;		_TMR3_CallBack
 33083 ;;		_TMR3_WriteTimer
 33084 ;; This function is called by:
 33085 ;;		Interrupt level 1
 33086 ;; This function uses a non-reentrant model
 33087 ;;
 33088                           
 33089                           	psect	text149
 33090  01914C                     __ptext149:
 33091                           	opt callstack 0
 33092  01914C                     _TMR3_ISR:
 33093                           	opt callstack 2
 33094                           
 33095                           ;incstack = 0
 33096  01914C  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 33097  019152  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 33098  019158  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 33099  01915E  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 33100  019164  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 33101  01916A  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 33102  019170  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 33103  019176  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 33104  01917C  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 33105  019182  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 33106  019188  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 33107  01918E  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 33108  019194  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 33109  01919A  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 33110  0191A0  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 33111  0191A6  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 33112  0191AC  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 33113  0191B2  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 33114  0191B8  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 33115  0191BE  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 33116  0191C4  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 33117  0191CA  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 33118  0191D0  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 33119  0191D6  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 33120  0191DC  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 33121  0191E2  EE16  F0AF         	lfsr	1,___intlo_sp
 33122                           
 33123                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33124  0191E6  0139               	movlb	57	; () banked
 33125  0191E8  9DA6               	bcf	166,6,b	;volatile
 33126                           
 33127                           ; BSR set to: 57
 33128                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33129  0191EA  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 33130  0191F0  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33131  0191F6  ECC5  F0DB         	call	_TMR3_WriteTimer	;wreg free
 33132                           
 33133                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33134  0191FA  0100               	movlb	0	; () banked
 33135  0191FC  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33136  0191FE  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33137  019200  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33138  019202  E104               	bnz	i1u1252_20
 33139  019204  0E28               	movlw	40
 33140  019206  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33141  019208  A0D8               	btfss	status,0,c
 33142  01920A  D005               	goto	i1l1207
 33143  01920C                     i1u1252_20:
 33144                           
 33145                           ; BSR set to: 0
 33146                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33147  01920C  ECEC  F0DE         	call	_TMR3_CallBack	;wreg free
 33148                           
 33149                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33150  019210  0100               	movlb	0	; () banked
 33151  019212  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33152  019214  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33153  019216                     i1l1207:
 33154                           
 33155                           ; BSR set to: 0
 33156  019216  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 33157  01921C  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 33158  019222  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 33159  019228  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 33160  01922E  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 33161  019234  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 33162  01923A  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 33163  019240  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 33164  019246  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33165  01924C  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33166  019252  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33167  019258  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 33168  01925E  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 33169  019264  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 33170  01926A  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 33171  019270  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 33172  019276  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 33173  01927C  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 33174  019282  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 33175  019288  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 33176  01928E  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 33177  019294  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33178  01929A  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33179  0192A0  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33180  0192A6  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 33181  0192AC  0011               	retfie		f
 33182  0192AE                     __end_of_TMR3_ISR:
 33183                           	opt callstack 0
 33184                           
 33185 ;; *************** function _TMR3_WriteTimer *****************
 33186 ;; Defined at:
 33187 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33188 ;; Parameters:    Size  Location     Type
 33189 ;;  timerVal        2  [STACK] unsigned short 
 33190 ;; Auto vars:     Size  Location     Type
 33191 ;;		None
 33192 ;; Return value:  Size  Location     Type
 33193 ;;                  1  [STACK] void 
 33194 ;; Registers used:
 33195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33196 ;; Tracked objects:
 33197 ;;		On entry : 3F/39
 33198 ;;		On exit  : 0/0
 33199 ;;		Unchanged: 0/0
 33200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33205 ;;Total ram usage:        0 bytes
 33206 ;; Hardware stack levels used:    1
 33207 ;; Hardware stack levels required when called:    3
 33208 ;; This function calls:
 33209 ;;		Nothing
 33210 ;; This function is called by:
 33211 ;;		_TMR3_ISR
 33212 ;; This function uses a reentrant model
 33213 ;;
 33214                           
 33215                           	psect	text150
 33216  01B78A                     __ptext150:
 33217                           	opt callstack 0
 33218  01B78A                     _TMR3_WriteTimer:
 33219                           	opt callstack 12
 33220                           
 33221                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33222                           
 33223                           ; BSR set to: 0
 33224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33225                           ;incstack = 0
 33226  01B78A  A4A6               	btfss	166,2,c	;volatile
 33227  01B78C  D00F               	goto	l10782
 33228                           
 33229                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33230  01B78E  90A6               	bcf	166,0,c	;volatile
 33231                           
 33232                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33233                           ;stkvar	_timerVal @ sp[(0)+-2]
 33234  01B790  0EFF               	movlw	255
 33235  01B792  24E1               	addwf	fsr1l,w,c
 33236  01B794  6ED9               	movwf	fsr2l,c
 33237  01B796  0EFF               	movlw	255
 33238  01B798  20E2               	addwfc	fsr1h,w,c
 33239  01B79A  6EDA               	movwf	fsr2h,c
 33240  01B79C  50DF               	movf	indf2,w,c
 33241  01B79E  6EA5               	movwf	165,c	;volatile
 33242                           
 33243                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33244                           ;stkvar	_timerVal @ sp[(0)+-2]
 33245  01B7A0  0EFE               	movlw	-2
 33246  01B7A2  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33247                           
 33248                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33249  01B7A8  80A6               	bsf	166,0,c	;volatile
 33250                           
 33251                           ;mcc_generated_files/tmr3.c: 141:     }
 33252  01B7AA  D00C               	goto	l1190
 33253  01B7AC                     l10782:
 33254                           
 33255                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33256                           ;stkvar	_timerVal @ sp[(0)+-2]
 33257  01B7AC  0EFF               	movlw	255
 33258  01B7AE  24E1               	addwf	fsr1l,w,c
 33259  01B7B0  6ED9               	movwf	fsr2l,c
 33260  01B7B2  0EFF               	movlw	255
 33261  01B7B4  20E2               	addwfc	fsr1h,w,c
 33262  01B7B6  6EDA               	movwf	fsr2h,c
 33263  01B7B8  50DF               	movf	indf2,w,c
 33264  01B7BA  6EA5               	movwf	165,c	;volatile
 33265                           
 33266                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33267                           ;stkvar	_timerVal @ sp[(0)+-2]
 33268  01B7BC  0EFE               	movlw	-2
 33269  01B7BE  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33270  01B7C4                     l1190:
 33271                           
 33272                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33273  01B7C4  52E5               	movf	postdec1,f,c
 33274  01B7C6  52E5               	movf	postdec1,f,c
 33275  01B7C8  0012               	return		;funcret
 33276  01B7CA                     __end_of_TMR3_WriteTimer:
 33277                           	opt callstack 0
 33278                           
 33279 ;; *************** function _TMR3_CallBack *****************
 33280 ;; Defined at:
 33281 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33282 ;; Parameters:    Size  Location     Type
 33283 ;;		None
 33284 ;; Auto vars:     Size  Location     Type
 33285 ;;		None
 33286 ;; Return value:  Size  Location     Type
 33287 ;;                  1  [STACK] void 
 33288 ;; Registers used:
 33289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33290 ;; Tracked objects:
 33291 ;;		On entry : 3F/0
 33292 ;;		On exit  : 0/0
 33293 ;;		Unchanged: 0/0
 33294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33299 ;;Total ram usage:        0 bytes
 33300 ;; Hardware stack levels used:    1
 33301 ;; Hardware stack levels required when called:   13
 33302 ;; This function calls:
 33303 ;;		Absolute function
 33304 ;;		_TMR3_DefaultInterruptHandler
 33305 ;;		_calc_bsoc
 33306 ;; This function is called by:
 33307 ;;		_TMR3_ISR
 33308 ;; This function uses a reentrant model
 33309 ;;
 33310                           
 33311                           	psect	text151
 33312  01BDD8                     __ptext151:
 33313                           	opt callstack 0
 33314  01BDD8                     _TMR3_CallBack:
 33315                           	opt callstack 2
 33316                           
 33317                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33318                           
 33319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33320                           ;incstack = 0
 33321  01BDD8  0100               	movlb	0	; () banked
 33322  01BDDA  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33323  01BDDC  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33324  01BDDE  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33325  01BDE0  B4D8               	btfsc	status,2,c
 33326  01BDE2  0012               	return	
 33327                           
 33328                           ; BSR set to: 0
 33329                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33330  01BDE4  D801               	call	u1243_28
 33331  01BDE6  0012               	return	
 33332  01BDE8                     u1243_28:
 33333  01BDE8  0005               	push	
 33334  01BDEA  6EFA               	movwf	pclath,c
 33335  01BDEC  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33336  01BDEE  6EFD               	movwf	tosl,c
 33337  01BDF0  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33338  01BDF2  6EFE               	movwf	tosh,c
 33339  01BDF4  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33340  01BDF6  6EFF               	movwf	tosu,c
 33341  01BDF8  50FA               	movf	pclath,w,c
 33342  01BDFA  0012               	return		;indir
 33343  01BDFC                     __end_of_TMR3_CallBack:
 33344                           	opt callstack 0
 33345                           
 33346 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33347 ;; Defined at:
 33348 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33349 ;; Parameters:    Size  Location     Type
 33350 ;;		None
 33351 ;; Auto vars:     Size  Location     Type
 33352 ;;		None
 33353 ;; Return value:  Size  Location     Type
 33354 ;;                  1  [STACK] void 
 33355 ;; Registers used:
 33356 ;;		None
 33357 ;; Tracked objects:
 33358 ;;		On entry : 3F/0
 33359 ;;		On exit  : 0/0
 33360 ;;		Unchanged: 0/0
 33361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33366 ;;Total ram usage:        0 bytes
 33367 ;; Hardware stack levels used:    1
 33368 ;; Hardware stack levels required when called:    3
 33369 ;; This function calls:
 33370 ;;		Nothing
 33371 ;; This function is called by:
 33372 ;;		_TMR3_Initialize
 33373 ;;		_TMR3_CallBack
 33374 ;; This function uses a reentrant model
 33375 ;;
 33376                           
 33377                           	psect	text152
 33378  01C160                     __ptext152:
 33379                           	opt callstack 0
 33380  01C160                     _TMR3_DefaultInterruptHandler:
 33381                           	opt callstack 11
 33382                           
 33383                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33384                           
 33385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33386                           ;incstack = 0
 33387  01C160  0012               	return		;funcret
 33388  01C162                     __end_of_TMR3_DefaultInterruptHandler:
 33389                           	opt callstack 0
 33390                           
 33391 ;; *************** function _calc_bsoc *****************
 33392 ;; Defined at:
 33393 ;;		line 39 in file "bsoc.c"
 33394 ;; Parameters:    Size  Location     Type
 33395 ;;		None
 33396 ;; Auto vars:     Size  Location     Type
 33397 ;;  adj             4  [STACK] float 
 33398 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33399 ;;		 -> port_data(512), 
 33400 ;; Return value:  Size  Location     Type
 33401 ;;                  1  [STACK] void 
 33402 ;; Registers used:
 33403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33404 ;; Tracked objects:
 33405 ;;		On entry : 3F/0
 33406 ;;		On exit  : 5/1
 33407 ;;		Unchanged: 0/0
 33408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33413 ;;Total ram usage:        0 bytes
 33414 ;; Hardware stack levels used:    1
 33415 ;; Hardware stack levels required when called:   12
 33416 ;; This function calls:
 33417 ;;		_StartTimer
 33418 ;;		___asfladd
 33419 ;;		___fldiv
 33420 ;;		___flge
 33421 ;;		___flmul
 33422 ;;		___flneg
 33423 ;;		___fltol
 33424 ;;		_fabsf
 33425 ;;		_get_ac_charger_relay
 33426 ;;		_port_data_dma_ptr
 33427 ;;		_send_port_data_dma
 33428 ;;		_sprintf
 33429 ;;		_strlen
 33430 ;; This function is called by:
 33431 ;;		_init_bsoc
 33432 ;;		_TMR3_CallBack
 33433 ;; This function uses a reentrant model
 33434 ;;
 33435                           
 33436                           	psect	text153
 33437  01334C                     __ptext153:
 33438                           	opt callstack 0
 33439  01334C                     _calc_bsoc:
 33440                           	opt callstack 0
 33441                           
 33442                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33443  01334C  0E06               	movlw	6
 33444  01334E  26E1               	addwf	fsr1l,f,c
 33445  013350  0E00               	movlw	0
 33446  013352  22E2               	addwfc	fsr1h,f,c
 33447                           
 33448                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33449                           
 33450                           ;incstack = 0
 33451  013354  0E00               	movlw	0
 33452  013356  6E09               	movwf	(btemp+8)^0,c
 33453  013358  0E00               	movlw	0
 33454  01335A  6E0A               	movwf	(btemp+9)^0,c
 33455  01335C  0E80               	movlw	128
 33456  01335E  6E0B               	movwf	(btemp+10)^0,c
 33457  013360  0E3F               	movlw	63
 33458  013362  6E0C               	movwf	(btemp+11)^0,c
 33459                           
 33460                           ;stkvar	_adj @ sp[(-6)+0]
 33461  013364  0EFA               	movlw	-6
 33462  013366  0060  F027  FFE3   	movff	btemp+8,plusw1
 33463  01336C  0EFB               	movlw	-5
 33464  01336E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33465  013374  0EFC               	movlw	-4
 33466  013376  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33467  01337C  0EFD               	movlw	-3
 33468  01337E  0060  F033  FFE3   	movff	btemp+11,plusw1
 33469  013384  82BE               	bsf	190,1,c	;volatile
 33470                           
 33471                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33472  013386  0E00               	movlw	0
 33473  013388  6EE6               	movwf	postinc1,c
 33474  01338A  0E00               	movlw	0
 33475  01338C  6EE6               	movwf	postinc1,c
 33476  01338E  0E61               	movlw	97
 33477  013390  6EE6               	movwf	postinc1,c
 33478  013392  0E45               	movlw	69
 33479  013394  6EE6               	movwf	postinc1,c
 33480  013396  EE21  F343         	lfsr	2,_C+68	;volatile
 33481  01339A  006F FF7B FFE6     	movff	postinc2,postinc1
 33482  0133A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33483  0133A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33484  0133AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33485  0133B2  ECB4  F0A6         	call	___fldiv	;wreg free
 33486  0133B6  0060  F007  FFE6   	movff	btemp,postinc1
 33487  0133BC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33488  0133C2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33489  0133C8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33490  0133CE  0E8F               	movlw	low (_C+144)
 33491  0133D0  6EE6               	movwf	postinc1,c
 33492  0133D2  0E07               	movlw	high (_C+144)
 33493  0133D4  6EE6               	movwf	postinc1,c
 33494  0133D6  ECEF  F0D6         	call	___asfladd	;wreg free
 33495                           
 33496                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33497  0133DA  EE21  F38F         	lfsr	2,_C+144	;volatile
 33498  0133DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33499  0133E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33500  0133EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33501  0133F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33502  0133F6  EE21  F38B         	lfsr	2,_C+140	;volatile
 33503  0133FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33504  013400  006F FF7B FFE6     	movff	postinc2,postinc1
 33505  013406  006F FF7B FFE6     	movff	postinc2,postinc1
 33506  01340C  006F FF7B FFE6     	movff	postinc2,postinc1
 33507  013412  ECF4  F0C7         	call	___flge	;wreg free
 33508  013416  B001               	btfsc	btemp& (0+255),0,c
 33509  013418  D00E               	goto	l12818
 33510                           
 33511                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33512  01341A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33513  01341E  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33514  013424  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33515  01342A  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33516  013430  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33517  013436                     l12818:
 33518                           
 33519                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33520  013436  0ECD               	movlw	205
 33521  013438  6EE6               	movwf	postinc1,c
 33522  01343A  0ECC               	movlw	204
 33523  01343C  6EE6               	movwf	postinc1,c
 33524  01343E  0ECC               	movlw	204
 33525  013440  6EE6               	movwf	postinc1,c
 33526  013442  0E3D               	movlw	61
 33527  013444  6EE6               	movwf	postinc1,c
 33528  013446  EE21  F38F         	lfsr	2,_C+144	;volatile
 33529  01344A  006F FF7B FFE6     	movff	postinc2,postinc1
 33530  013450  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  013456  006F FF7B FFE6     	movff	postinc2,postinc1
 33532  01345C  006F FF7B FFE6     	movff	postinc2,postinc1
 33533  013462  ECF4  F0C7         	call	___flge	;wreg free
 33534  013466  B001               	btfsc	btemp& (0+255),0,c
 33535  013468  D010               	goto	l12822
 33536                           
 33537                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33538  01346A  0ECD               	movlw	205
 33539  01346C  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33540  013472  0ECC               	movlw	204
 33541  013474  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33542  01347A  0ECC               	movlw	204
 33543  01347C  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33544  013482  0E3D               	movlw	61
 33545  013484  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33546  01348A                     l12822:
 33547                           
 33548                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33549  01348A  EE21  F343         	lfsr	2,_C+68	;volatile
 33550  01348E  006F FF7B FFE6     	movff	postinc2,postinc1
 33551  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 33552  01349A  006F FF7B FFE6     	movff	postinc2,postinc1
 33553  0134A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  0134A6  0E0A               	movlw	10
 33555  0134A8  6EE6               	movwf	postinc1,c
 33556  0134AA  0ED7               	movlw	215
 33557  0134AC  6EE6               	movwf	postinc1,c
 33558  0134AE  0E23               	movlw	35
 33559  0134B0  6EE6               	movwf	postinc1,c
 33560  0134B2  0E3C               	movlw	60
 33561  0134B4  6EE6               	movwf	postinc1,c
 33562  0134B6  ECF4  F0C7         	call	___flge	;wreg free
 33563  0134BA  B001               	btfsc	btemp& (0+255),0,c
 33564  0134BC  D01C               	goto	l12826
 33565                           
 33566                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33567  0134BE  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33568  0134C4  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33569  0134CA  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33570  0134D0  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33571                           
 33572                           ;stkvar	_adj @ sp[(-6)+0]
 33573  0134D6  0EFA               	movlw	-6
 33574  0134D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 33575  0134DE  0EFB               	movlw	-5
 33576  0134E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33577  0134E6  0EFC               	movlw	-4
 33578  0134E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33579  0134EE  0EFD               	movlw	-3
 33580  0134F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 33581  0134F6                     l12826:
 33582                           
 33583                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33584  0134F6  0E0A               	movlw	10
 33585  0134F8  6EE6               	movwf	postinc1,c
 33586  0134FA  0ED7               	movlw	215
 33587  0134FC  6EE6               	movwf	postinc1,c
 33588  0134FE  0E23               	movlw	35
 33589  013500  6EE6               	movwf	postinc1,c
 33590  013502  0E3C               	movlw	60
 33591  013504  6EE6               	movwf	postinc1,c
 33592  013506  EE21  F343         	lfsr	2,_C+68	;volatile
 33593  01350A  006F FF7B FFE6     	movff	postinc2,postinc1
 33594  013510  006F FF7B FFE6     	movff	postinc2,postinc1
 33595  013516  006F FF7B FFE6     	movff	postinc2,postinc1
 33596  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 33597  013522  ECF4  F0C7         	call	___flge	;wreg free
 33598  013526  B001               	btfsc	btemp& (0+255),0,c
 33599  013528  D01C               	goto	l12830
 33600                           
 33601                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33602  01352A  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33603  013530  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33604  013536  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33605  01353C  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33606                           
 33607                           ;stkvar	_adj @ sp[(-6)+0]
 33608  013542  0EFA               	movlw	-6
 33609  013544  0060  F027  FFE3   	movff	btemp+8,plusw1
 33610  01354A  0EFB               	movlw	-5
 33611  01354C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33612  013552  0EFC               	movlw	-4
 33613  013554  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33614  01355A  0EFD               	movlw	-3
 33615  01355C  0060  F033  FFE3   	movff	btemp+11,plusw1
 33616  013562                     l12830:
 33617                           
 33618                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33619  013562  0E00               	movlw	0
 33620  013564  6EE6               	movwf	postinc1,c
 33621  013566  0E00               	movlw	0
 33622  013568  6EE6               	movwf	postinc1,c
 33623  01356A  0E61               	movlw	97
 33624  01356C  6EE6               	movwf	postinc1,c
 33625  01356E  0E45               	movlw	69
 33626  013570  6EE6               	movwf	postinc1,c
 33627                           
 33628                           ;stkvar	_adj @ sp[(-10)+0]
 33629  013572  0EF6               	movlw	-10
 33630  013574  006F FF8F FFE6     	movff	plusw1,postinc1
 33631  01357A  006F FF8F FFE6     	movff	plusw1,postinc1
 33632  013580  006F FF8F FFE6     	movff	plusw1,postinc1
 33633  013586  006F FF8F FFE6     	movff	plusw1,postinc1
 33634  01358C  EE21  F343         	lfsr	2,_C+68	;volatile
 33635  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 33636  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 33637  01359C  006F FF7B FFE6     	movff	postinc2,postinc1
 33638  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
 33639  0135A8  ECC1  F09E         	call	___flmul	;wreg free
 33640  0135AC  0060  F007  FFE6   	movff	btemp,postinc1
 33641  0135B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33642  0135B8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33643  0135BE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33644  0135C4  ECB4  F0A6         	call	___fldiv	;wreg free
 33645  0135C8  0060  F007  FFE6   	movff	btemp,postinc1
 33646  0135CE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33647  0135D4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33648  0135DA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33649  0135E0  0E8F               	movlw	low (_C+144)
 33650  0135E2  6EE6               	movwf	postinc1,c
 33651  0135E4  0E07               	movlw	high (_C+144)
 33652  0135E6  6EE6               	movwf	postinc1,c
 33653  0135E8  ECEF  F0D6         	call	___asfladd	;wreg free
 33654                           
 33655                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 33656  0135EC  EE21  F38F         	lfsr	2,_C+144	;volatile
 33657  0135F0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33658  0135F6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33659  0135FC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33660  013602  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33661                           
 33662                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 33663  013608  EE21  F39B         	lfsr	2,_C+156	;volatile
 33664  01360C  006F FF7B FFE6     	movff	postinc2,postinc1
 33665  013612  006F FF7B FFE6     	movff	postinc2,postinc1
 33666  013618  006F FF7B FFE6     	movff	postinc2,postinc1
 33667  01361E  006F FF7B FFE6     	movff	postinc2,postinc1
 33668  013624  EE21  F38B         	lfsr	2,_C+140	;volatile
 33669  013628  006F FF7B FFE6     	movff	postinc2,postinc1
 33670  01362E  006F FF7B FFE6     	movff	postinc2,postinc1
 33671  013634  006F FF7B FFE6     	movff	postinc2,postinc1
 33672  01363A  006F FF7B FFE6     	movff	postinc2,postinc1
 33673  013640  ECF4  F0C7         	call	___flge	;wreg free
 33674  013644  B001               	btfsc	btemp& (0+255),0,c
 33675  013646  D00E               	goto	l12838
 33676                           
 33677                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 33678  013648  EE21  F38B         	lfsr	2,_C+140	;volatile
 33679  01364C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33680  013652  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33681  013658  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33682  01365E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33683  013664                     l12838:
 33684                           
 33685                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 33686  013664  0ECD               	movlw	205
 33687  013666  6EE6               	movwf	postinc1,c
 33688  013668  0ECC               	movlw	204
 33689  01366A  6EE6               	movwf	postinc1,c
 33690  01366C  0ECC               	movlw	204
 33691  01366E  6EE6               	movwf	postinc1,c
 33692  013670  0E3D               	movlw	61
 33693  013672  6EE6               	movwf	postinc1,c
 33694  013674  EE21  F39B         	lfsr	2,_C+156	;volatile
 33695  013678  006F FF7B FFE6     	movff	postinc2,postinc1
 33696  01367E  006F FF7B FFE6     	movff	postinc2,postinc1
 33697  013684  006F FF7B FFE6     	movff	postinc2,postinc1
 33698  01368A  006F FF7B FFE6     	movff	postinc2,postinc1
 33699  013690  ECF4  F0C7         	call	___flge	;wreg free
 33700  013694  B001               	btfsc	btemp& (0+255),0,c
 33701  013696  D010               	goto	l12842
 33702                           
 33703                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 33704  013698  0ECD               	movlw	205
 33705  01369A  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33706  0136A0  0ECC               	movlw	204
 33707  0136A2  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33708  0136A8  0ECC               	movlw	204
 33709  0136AA  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33710  0136B0  0E3D               	movlw	61
 33711  0136B2  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33712  0136B8                     l12842:
 33713                           
 33714                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 33715  0136B8  0E00               	movlw	0
 33716  0136BA  6EE6               	movwf	postinc1,c
 33717  0136BC  0E00               	movlw	0
 33718  0136BE  6EE6               	movwf	postinc1,c
 33719  0136C0  0E61               	movlw	97
 33720  0136C2  6EE6               	movwf	postinc1,c
 33721  0136C4  0E45               	movlw	69
 33722  0136C6  6EE6               	movwf	postinc1,c
 33723  0136C8  EE21  F347         	lfsr	2,_C+72	;volatile
 33724  0136CC  006F FF7B FFE6     	movff	postinc2,postinc1
 33725  0136D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33726  0136D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33727  0136DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33728  0136E4  ECB4  F0A6         	call	___fldiv	;wreg free
 33729  0136E8  0060  F007  FFE6   	movff	btemp,postinc1
 33730  0136EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33731  0136F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33732  0136FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 33733  013700  0E93               	movlw	low (_C+148)
 33734  013702  6EE6               	movwf	postinc1,c
 33735  013704  0E07               	movlw	high (_C+148)
 33736  013706  6EE6               	movwf	postinc1,c
 33737  013708  ECEF  F0D6         	call	___asfladd	;wreg free
 33738                           
 33739                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 33740  01370C  0E00               	movlw	0
 33741  01370E  6EE6               	movwf	postinc1,c
 33742  013710  0E00               	movlw	0
 33743  013712  6EE6               	movwf	postinc1,c
 33744  013714  0E61               	movlw	97
 33745  013716  6EE6               	movwf	postinc1,c
 33746  013718  0E45               	movlw	69
 33747  01371A  6EE6               	movwf	postinc1,c
 33748  01371C  EE21  F37B         	lfsr	2,_C+124	;volatile
 33749  013720  006F FF7B FFE6     	movff	postinc2,postinc1
 33750  013726  006F FF7B FFE6     	movff	postinc2,postinc1
 33751  01372C  006F FF7B FFE6     	movff	postinc2,postinc1
 33752  013732  006F FF7B FFE6     	movff	postinc2,postinc1
 33753  013738  ECB4  F0A6         	call	___fldiv	;wreg free
 33754  01373C  0060  F007  FFE6   	movff	btemp,postinc1
 33755  013742  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33756  013748  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33757  01374E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33758  013754  0EA7               	movlw	low (_C+168)
 33759  013756  6EE6               	movwf	postinc1,c
 33760  013758  0E07               	movlw	high (_C+168)
 33761  01375A  6EE6               	movwf	postinc1,c
 33762  01375C  ECEF  F0D6         	call	___asfladd	;wreg free
 33763                           
 33764                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 33765  013760  0E00               	movlw	0
 33766  013762  6EE6               	movwf	postinc1,c
 33767  013764  0E00               	movlw	0
 33768  013766  6EE6               	movwf	postinc1,c
 33769  013768  0E61               	movlw	97
 33770  01376A  6EE6               	movwf	postinc1,c
 33771  01376C  0E45               	movlw	69
 33772  01376E  6EE6               	movwf	postinc1,c
 33773  013770  EE21  F377         	lfsr	2,_C+120	;volatile
 33774  013774  006F FF7B FFE6     	movff	postinc2,postinc1
 33775  01377A  006F FF7B FFE6     	movff	postinc2,postinc1
 33776  013780  006F FF7B FFE6     	movff	postinc2,postinc1
 33777  013786  006F FF7B FFE6     	movff	postinc2,postinc1
 33778  01378C  ECB4  F0A6         	call	___fldiv	;wreg free
 33779  013790  0060  F007  FFE6   	movff	btemp,postinc1
 33780  013796  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33781  01379C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33782  0137A2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33783  0137A8  0EAB               	movlw	low (_C+172)
 33784  0137AA  6EE6               	movwf	postinc1,c
 33785  0137AC  0E07               	movlw	high (_C+172)
 33786  0137AE  6EE6               	movwf	postinc1,c
 33787  0137B0  ECEF  F0D6         	call	___asfladd	;wreg free
 33788                           
 33789                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 33790  0137B4  0E00               	movlw	0
 33791  0137B6  6EE6               	movwf	postinc1,c
 33792  0137B8  0E00               	movlw	0
 33793  0137BA  6EE6               	movwf	postinc1,c
 33794  0137BC  0E61               	movlw	97
 33795  0137BE  6EE6               	movwf	postinc1,c
 33796  0137C0  0E45               	movlw	69
 33797  0137C2  6EE6               	movwf	postinc1,c
 33798  0137C4  EE21  F373         	lfsr	2,_C+116	;volatile
 33799  0137C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33800  0137CE  006F FF7B FFE6     	movff	postinc2,postinc1
 33801  0137D4  006F FF7B FFE6     	movff	postinc2,postinc1
 33802  0137DA  006F FF7B FFE6     	movff	postinc2,postinc1
 33803  0137E0  ECB4  F0A6         	call	___fldiv	;wreg free
 33804  0137E4  0060  F007  FFE6   	movff	btemp,postinc1
 33805  0137EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33806  0137F0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33807  0137F6  0060  F013  FFE6   	movff	btemp+3,postinc1
 33808  0137FC  0EAF               	movlw	low (_C+176)
 33809  0137FE  6EE6               	movwf	postinc1,c
 33810  013800  0E07               	movlw	high (_C+176)
 33811  013802  6EE6               	movwf	postinc1,c
 33812  013804  ECEF  F0D6         	call	___asfladd	;wreg free
 33813                           
 33814                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 33815  013808  EE21  F37F         	lfsr	2,_C+128	;volatile
 33816  01380C  006F FF7B FFE6     	movff	postinc2,postinc1
 33817  013812  006F FF7B FFE6     	movff	postinc2,postinc1
 33818  013818  006F FF7B FFE6     	movff	postinc2,postinc1
 33819  01381E  006F FF7B FFE6     	movff	postinc2,postinc1
 33820  013824  0E00               	movlw	0
 33821  013826  6EE6               	movwf	postinc1,c
 33822  013828  0E00               	movlw	0
 33823  01382A  6EE6               	movwf	postinc1,c
 33824  01382C  0E00               	movlw	0
 33825  01382E  6EE6               	movwf	postinc1,c
 33826  013830  0E00               	movlw	0
 33827  013832  6EE6               	movwf	postinc1,c
 33828  013834  ECF4  F0C7         	call	___flge	;wreg free
 33829  013838  B001               	btfsc	btemp& (0+255),0,c
 33830  01383A  D02A               	goto	l12848
 33831                           
 33832                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 33833  01383C  0E00               	movlw	0
 33834  01383E  6EE6               	movwf	postinc1,c
 33835  013840  0E00               	movlw	0
 33836  013842  6EE6               	movwf	postinc1,c
 33837  013844  0E61               	movlw	97
 33838  013846  6EE6               	movwf	postinc1,c
 33839  013848  0E45               	movlw	69
 33840  01384A  6EE6               	movwf	postinc1,c
 33841  01384C  EE21  F37F         	lfsr	2,_C+128	;volatile
 33842  013850  006F FF7B FFE6     	movff	postinc2,postinc1
 33843  013856  006F FF7B FFE6     	movff	postinc2,postinc1
 33844  01385C  006F FF7B FFE6     	movff	postinc2,postinc1
 33845  013862  006F FF7B FFE6     	movff	postinc2,postinc1
 33846  013868  ECB4  F0A6         	call	___fldiv	;wreg free
 33847  01386C  0060  F007  FFE6   	movff	btemp,postinc1
 33848  013872  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33849  013878  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33850  01387E  0060  F013  FFE6   	movff	btemp+3,postinc1
 33851  013884  0E9F               	movlw	low (_C+160)
 33852  013886  6EE6               	movwf	postinc1,c
 33853  013888  0E07               	movlw	high (_C+160)
 33854  01388A  6EE6               	movwf	postinc1,c
 33855  01388C  ECEF  F0D6         	call	___asfladd	;wreg free
 33856  013890                     l12848:
 33857                           
 33858                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 33859  013890  EE21  F37F         	lfsr	2,_C+128	;volatile
 33860  013894  0E03               	movlw	3
 33861  013896  AEDB               	btfss	plusw2,7,c
 33862  013898  D038               	goto	l12852
 33863                           
 33864                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33865  01389A  0E00               	movlw	0
 33866  01389C  6EE6               	movwf	postinc1,c
 33867  01389E  0E00               	movlw	0
 33868  0138A0  6EE6               	movwf	postinc1,c
 33869  0138A2  0E61               	movlw	97
 33870  0138A4  6EE6               	movwf	postinc1,c
 33871  0138A6  0E45               	movlw	69
 33872  0138A8  6EE6               	movwf	postinc1,c
 33873  0138AA  EE21  F37F         	lfsr	2,_C+128	;volatile
 33874  0138AE  006F FF7B FFE6     	movff	postinc2,postinc1
 33875  0138B4  006F FF7B FFE6     	movff	postinc2,postinc1
 33876  0138BA  006F FF7B FFE6     	movff	postinc2,postinc1
 33877  0138C0  006F FF7B FFE6     	movff	postinc2,postinc1
 33878  0138C6  ECB4  F0A6         	call	___fldiv	;wreg free
 33879  0138CA  0060  F007  FFE6   	movff	btemp,postinc1
 33880  0138D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33881  0138D6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33882  0138DC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33883  0138E2  ECC6  F0D2         	call	_fabsf	;wreg free
 33884  0138E6  0060  F007  FFE6   	movff	btemp,postinc1
 33885  0138EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33886  0138F2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33887  0138F8  0060  F013  FFE6   	movff	btemp+3,postinc1
 33888  0138FE  0EA3               	movlw	low (_C+164)
 33889  013900  6EE6               	movwf	postinc1,c
 33890  013902  0E07               	movlw	high (_C+164)
 33891  013904  6EE6               	movwf	postinc1,c
 33892  013906  ECEF  F0D6         	call	___asfladd	;wreg free
 33893  01390A                     l12852:
 33894                           
 33895                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33896  01390A  0E00               	movlw	0
 33897  01390C  6EE6               	movwf	postinc1,c
 33898  01390E  0E00               	movlw	0
 33899  013910  6EE6               	movwf	postinc1,c
 33900  013912  0EC8               	movlw	200
 33901  013914  6EE6               	movwf	postinc1,c
 33902  013916  0E42               	movlw	66
 33903  013918  6EE6               	movwf	postinc1,c
 33904  01391A  EE21  F38B         	lfsr	2,_C+140	;volatile
 33905  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 33906  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 33907  01392A  006F FF7B FFE6     	movff	postinc2,postinc1
 33908  013930  006F FF7B FFE6     	movff	postinc2,postinc1
 33909  013936  EE21  F39B         	lfsr	2,_C+156	;volatile
 33910  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 33911  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 33912  013946  006F FF7B FFE6     	movff	postinc2,postinc1
 33913  01394C  006F FF7B FFE6     	movff	postinc2,postinc1
 33914  013952  ECB4  F0A6         	call	___fldiv	;wreg free
 33915  013956  0060  F007  FFE6   	movff	btemp,postinc1
 33916  01395C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33917  013962  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33918  013968  0060  F013  FFE6   	movff	btemp+3,postinc1
 33919  01396E  ECC1  F09E         	call	___flmul	;wreg free
 33920  013972  0060  F007  FFE6   	movff	btemp,postinc1
 33921  013978  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33922  01397E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33923  013984  0060  F013  FFE6   	movff	btemp+3,postinc1
 33924  01398A  EC3B  F0C7         	call	___fltol	;wreg free
 33925  01398E  0060  F004  F00B   	movff	btemp,btemp+10
 33926  013994  0060  F008  F00C   	movff	btemp+1,btemp+11
 33927  01399A  0E01               	movlw	1
 33928  01399C  260B               	addwf	(btemp+10)^0,f,c
 33929  01399E  0E00               	movlw	0
 33930  0139A0  220C               	addwfc	(btemp+11)^0,f,c
 33931  0139A2  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33932  0139A8  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33933                           
 33934                           ;bsoc.c: 76:  if (C.soc > 100)
 33935  0139AE  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33936  0139B2  0E01               	movlw	1
 33937  0139B4  50DB               	movf	plusw2,w,c
 33938  0139B6  E104               	bnz	u1236_20
 33939  0139B8  0E65               	movlw	101
 33940  0139BA  5CDE               	subwf	postinc2,w,c
 33941  0139BC  A0D8               	btfss	status,0,c
 33942  0139BE  D008               	goto	l12858
 33943  0139C0                     u1236_20:
 33944                           
 33945                           ;bsoc.c: 77:   C.soc = 100;
 33946  0139C0  0E64               	movlw	100
 33947  0139C2  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33948  0139C8  0E00               	movlw	0
 33949  0139CA  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33950  0139D0                     l12858:
 33951                           
 33952                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 33953  0139D0  EE21  F343         	lfsr	2,_C+68	;volatile
 33954  0139D4  0E03               	movlw	3
 33955  0139D6  AEDB               	btfss	plusw2,7,c
 33956  0139D8  D047               	goto	l2033
 33957                           
 33958                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33959  0139DA  EE21  F343         	lfsr	2,_C+68	;volatile
 33960  0139DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33961  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33962  0139EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33963  0139F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33964  0139F6  EE21  F39B         	lfsr	2,_C+156	;volatile
 33965  0139FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33966  013A00  006F FF7B FFE6     	movff	postinc2,postinc1
 33967  013A06  006F FF7B FFE6     	movff	postinc2,postinc1
 33968  013A0C  006F FF7B FFE6     	movff	postinc2,postinc1
 33969  013A12  ECB4  F0A6         	call	___fldiv	;wreg free
 33970  013A16  0060  F007  FFE6   	movff	btemp,postinc1
 33971  013A1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33972  013A22  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33973  013A28  0060  F013  FFE6   	movff	btemp+3,postinc1
 33974  013A2E  EC0C  F0DA         	call	___flneg	;wreg free
 33975  013A32  0060  F007  FFE6   	movff	btemp,postinc1
 33976  013A38  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33977  013A3E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33978  013A44  0060  F013  FFE6   	movff	btemp+3,postinc1
 33979  013A4A  EC3B  F0C7         	call	___fltol	;wreg free
 33980  013A4E  0060  F004  F00B   	movff	btemp,btemp+10
 33981  013A54  0060  F008  F00C   	movff	btemp+1,btemp+11
 33982  013A5A  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 33983  013A60  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 33984                           
 33985                           ;bsoc.c: 81:  } else {
 33986  013A66  D008               	goto	l12862
 33987  013A68                     l2033:
 33988                           
 33989                           ;bsoc.c: 82:   C.runtime = 120;
 33990  013A68  0E78               	movlw	120
 33991  013A6A  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 33992  013A70  0E00               	movlw	0
 33993  013A72  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 33994  013A78                     l12862:
 33995                           
 33996                           ;bsoc.c: 84:  if (C.runtime > 120)
 33997  013A78  EE21  F3B3         	lfsr	2,_C+180	;volatile
 33998  013A7C  0E01               	movlw	1
 33999  013A7E  50DB               	movf	plusw2,w,c
 34000  013A80  E104               	bnz	u1238_20
 34001  013A82  0E79               	movlw	121
 34002  013A84  5CDE               	subwf	postinc2,w,c
 34003  013A86  A0D8               	btfss	status,0,c
 34004  013A88  D008               	goto	l12866
 34005  013A8A                     u1238_20:
 34006                           
 34007                           ;bsoc.c: 85:   C.runtime = 120;
 34008  013A8A  0E78               	movlw	120
 34009  013A8C  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34010  013A92  0E00               	movlw	0
 34011  013A94  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34012  013A9A                     l12866:
 34013                           
 34014                           ;bsoc.c: 87:  V.lowint_count++;
 34015  013A9A  0E01               	movlw	1
 34016  013A9C  0101               	movlb	1	; () banked
 34017  013A9E  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 34018  013AA0  0E00               	movlw	0
 34019  013AA2  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34020  013AA4  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34021  013AA6  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34022                           
 34023                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 34024  013AA8  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 34025  013AAA  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 34026  013AAC  A4D8               	btfss	status,2,c
 34027  013AAE  D15B               	goto	l12878
 34028                           
 34029                           ; BSR set to: 1
 34030  013AB0  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 34031  013AB2  B4D8               	btfsc	status,2,c
 34032  013AB4  D158               	goto	l12878
 34033                           
 34034                           ; BSR set to: 1
 34035                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 34036  013AB6  EC74  F0E0         	call	_port_data_dma_ptr	;wreg free
 34037                           
 34038                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34039  013ABA  0EFF               	movlw	-1
 34040  013ABC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34041  013AC2  0EFE               	movlw	-2
 34042  013AC4  0060  F007  FFE3   	movff	btemp,plusw1
 34043                           
 34044                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34045  013ACA  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34046  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 34047  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34048  013ADA  006F FF7B FFE6     	movff	postinc2,postinc1
 34049  013AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 34050  013AE6  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34051  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34052  013AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34053  013AF6  006F FF7B FFE6     	movff	postinc2,postinc1
 34054  013AFC  006F FF7B FFE6     	movff	postinc2,postinc1
 34055  013B02  EE21  F39B         	lfsr	2,_C+156	;volatile
 34056  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 34057  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34058  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 34059  013B18  006F FF7B FFE6     	movff	postinc2,postinc1
 34060  013B1E  EE22  F026         	lfsr	2,_C+295	;volatile
 34061  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34062  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34063  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 34064  013B34  006F FF7B FFE6     	movff	postinc2,postinc1
 34065  013B3A  EE22  F022         	lfsr	2,_C+291	;volatile
 34066  013B3E  006F FF7B FFE6     	movff	postinc2,postinc1
 34067  013B44  006F FF7B FFE6     	movff	postinc2,postinc1
 34068  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 34069  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 34070  013B56  EE22  F021         	lfsr	2,_C+290	;volatile
 34071  013B5A  50DF               	movf	indf2,w,c
 34072  013B5C  6EE6               	movwf	postinc1,c
 34073  013B5E  0E00               	movlw	0
 34074  013B60  6EE6               	movwf	postinc1,c
 34075  013B62  EC58  F0E0         	call	_get_ac_charger_relay	;wreg free
 34076  013B66  5001               	movf	btemp^0,w,c
 34077  013B68  6EE6               	movwf	postinc1,c
 34078  013B6A  0E00               	movlw	0
 34079  013B6C  6EE6               	movwf	postinc1,c
 34080  013B6E  EE21  F367         	lfsr	2,_C+104	;volatile
 34081  013B72  006F FF7B FFE6     	movff	postinc2,postinc1
 34082  013B78  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  013B7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  013B84  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  013B8A  EE21  F387         	lfsr	2,_C+136	;volatile
 34086  013B8E  006F FF7B FFE6     	movff	postinc2,postinc1
 34087  013B94  006F FF7B FFE6     	movff	postinc2,postinc1
 34088  013B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34089  013BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34090  013BA6  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34091  013BAA  006F FF78  F00B    	movff	postinc2,btemp+10
 34092  013BB0  006F FF74  F00C    	movff	postdec2,btemp+11
 34093  013BB6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34094  013BBC  0060  F033  FFE6   	movff	btemp+11,postinc1
 34095  013BC2  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34096  013BC6  006F FF78  F00B    	movff	postinc2,btemp+10
 34097  013BCC  006F FF74  F00C    	movff	postdec2,btemp+11
 34098  013BD2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34099  013BD8  0060  F033  FFE6   	movff	btemp+11,postinc1
 34100  013BDE  EE21  F393         	lfsr	2,_C+148	;volatile
 34101  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34102  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34103  013BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 34104  013BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 34105  013BFA  EE21  F38F         	lfsr	2,_C+144	;volatile
 34106  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 34107  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 34108  013C0A  006F FF7B FFE6     	movff	postinc2,postinc1
 34109  013C10  006F FF7B FFE6     	movff	postinc2,postinc1
 34110  013C16  EE21  F377         	lfsr	2,_C+120	;volatile
 34111  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34112  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34113  013C26  006F FF7B FFE6     	movff	postinc2,postinc1
 34114  013C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 34115  013C32  EE21  F373         	lfsr	2,_C+116	;volatile
 34116  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34117  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34118  013C42  006F FF7B FFE6     	movff	postinc2,postinc1
 34119  013C48  006F FF7B FFE6     	movff	postinc2,postinc1
 34120  013C4E  EE21  F37B         	lfsr	2,_C+124	;volatile
 34121  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34122  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34123  013C5E  006F FF7B FFE6     	movff	postinc2,postinc1
 34124  013C64  006F FF7B FFE6     	movff	postinc2,postinc1
 34125  013C6A  EE21  F37F         	lfsr	2,_C+128	;volatile
 34126  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34127  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34128  013C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 34129  013C80  006F FF7B FFE6     	movff	postinc2,postinc1
 34130  013C86  EE21  F363         	lfsr	2,_C+100	;volatile
 34131  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34132  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34133  013C96  006F FF7B FFE6     	movff	postinc2,postinc1
 34134  013C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 34135  013CA2  EE21  F34B         	lfsr	2,_C+76	;volatile
 34136  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34138  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34139  013CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34140  013CBE  EE21  F34F         	lfsr	2,_C+80	;volatile
 34141  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34142  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34143  013CCE  006F FF7B FFE6     	movff	postinc2,postinc1
 34144  013CD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34145  013CDA  EE21  F353         	lfsr	2,_C+84	;volatile
 34146  013CDE  006F FF7B FFE6     	movff	postinc2,postinc1
 34147  013CE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34148  013CEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34149  013CF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34150  013CF6  0060  F6C7  FFE6   	movff	_V+129,postinc1
 34151  013CFC  0060  F6CB  FFE6   	movff	_V+130,postinc1
 34152  013D02  0060  F6CF  FFE6   	movff	_V+131,postinc1
 34153  013D08  0060  F6D3  FFE6   	movff	_V+132,postinc1
 34154  013D0E  0E31               	movlw	49
 34155  013D10  6EE6               	movwf	postinc1,c
 34156  013D12  0E00               	movlw	0
 34157  013D14  6EE6               	movwf	postinc1,c
 34158  013D16  0ED7               	movlw	low STR_64
 34159  013D18  6EE6               	movwf	postinc1,c
 34160  013D1A  0EFB               	movlw	high STR_64
 34161  013D1C  6EE6               	movwf	postinc1,c
 34162                           
 34163                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34164  013D1E  0EAA               	movlw	-86
 34165  013D20  006F FF8F FFE6     	movff	plusw1,postinc1
 34166  013D26  006F FF8F FFE6     	movff	plusw1,postinc1
 34167  013D2C  0E56               	movlw	86
 34168  013D2E  6EE6               	movwf	postinc1,c
 34169  013D30  EC00  F0CE         	call	_sprintf	;wreg free
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;bsoc.c: 97:   StartTimer(TMR_DISPLAY, 125);
 34173  013D34  0E7D               	movlw	125
 34174  013D36  6EE6               	movwf	postinc1,c
 34175  013D38  0E00               	movlw	0
 34176  013D3A  6EE6               	movwf	postinc1,c
 34177  013D3C  0E0A               	movlw	10
 34178  013D3E  6EE6               	movwf	postinc1,c
 34179  013D40  EC65  F0DB         	call	_StartTimer	;wreg free
 34180                           
 34181                           ;bsoc.c: 98:   send_port_data_dma(strlen((char*) log_ptr));
 34182                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34183  013D44  0EFE               	movlw	-2
 34184  013D46  006F FF8F FFE6     	movff	plusw1,postinc1
 34185  013D4C  006F FF8F FFE6     	movff	plusw1,postinc1
 34186  013D52  EC6F  F0D4         	call	_strlen	;wreg free
 34187  013D56  0060  F007  FFE6   	movff	btemp,postinc1
 34188  013D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34189  013D62  EC72  F0D9         	call	_send_port_data_dma	;wreg free
 34190  013D66                     l12878:
 34191                           
 34192                           ;bsoc.c: 100:  if (log_update_wait >= 10)
 34193  013D66  0E09               	movlw	9
 34194  013D68  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34195  013D6A  D001               	goto	l2037
 34196                           
 34197                           ;bsoc.c: 101:   log_update_wait = 0;
 34198  013D6C  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 34199  013D6E                     l2037:
 34200                           
 34201                           ;bsoc.c: 103:  C.update = 0;
 34202  013D6E  0E00               	movlw	0
 34203  013D70  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34204                           
 34205                           ;bsoc.c: 105:  do { LATEbits.LATE1 = 0; } while(0);
 34206  013D76  92BE               	bcf	190,1,c	;volatile
 34207                           
 34208                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34209  013D78  0EFA               	movlw	250
 34210  013D7A  26E1               	addwf	fsr1l,f,c
 34211  013D7C  0EFF               	movlw	255
 34212  013D7E  22E2               	addwfc	fsr1h,f,c
 34213  013D80  0012               	return		;funcret
 34214  013D82                     __end_of_calc_bsoc:
 34215                           	opt callstack 0
 34216                           
 34217 ;; *************** function _send_port_data_dma *****************
 34218 ;; Defined at:
 34219 ;;		line 398 in file "eadog.c"
 34220 ;; Parameters:    Size  Location     Type
 34221 ;;  dsize           2  [STACK] unsigned short 
 34222 ;; Auto vars:     Size  Location     Type
 34223 ;;		None
 34224 ;; Return value:  Size  Location     Type
 34225 ;;                  1  [STACK] void 
 34226 ;; Registers used:
 34227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34228 ;; Tracked objects:
 34229 ;;		On entry : 0/0
 34230 ;;		On exit  : 3F/3B
 34231 ;;		Unchanged: 0/0
 34232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34237 ;;Total ram usage:        0 bytes
 34238 ;; Hardware stack levels used:    1
 34239 ;; Hardware stack levels required when called:    3
 34240 ;; This function calls:
 34241 ;;		Nothing
 34242 ;; This function is called by:
 34243 ;;		_calc_bsoc
 34244 ;; This function uses a reentrant model
 34245 ;;
 34246                           
 34247                           	psect	text154
 34248  01B2E4                     __ptext154:
 34249                           	opt callstack 0
 34250  01B2E4                     _send_port_data_dma:
 34251                           	opt callstack 10
 34252                           
 34253                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 34254                           ;stkvar	_dsize @ sp[(0)+-2]
 34255                           
 34256                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34257                           ;incstack = 0
 34258  01B2E4  0EFE               	movlw	-2
 34259  01B2E6  04E3               	decf	plusw1,w,c
 34260  01B2E8  0EFF               	movlw	-1
 34261  01B2EA  006F FF8C  F001    	movff	plusw1,btemp
 34262  01B2F0  0E02               	movlw	2
 34263  01B2F2  5A01               	subwfb	btemp^0,f,c
 34264  01B2F4  A0D8               	btfss	status,0,c
 34265  01B2F6  D00C               	goto	l9958
 34266                           
 34267                           ;eadog.c: 401:   dsize = 512;
 34268  01B2F8  0E00               	movlw	0
 34269  01B2FA  6E0B               	movwf	(btemp+10)^0,c
 34270  01B2FC  0E02               	movlw	2
 34271  01B2FE  6E0C               	movwf	(btemp+11)^0,c
 34272                           
 34273                           ;stkvar	_dsize @ sp[(0)+-2]
 34274  01B300  0EFE               	movlw	-2
 34275  01B302  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34276  01B308  0EFF               	movlw	-1
 34277  01B30A  0060  F033  FFE3   	movff	btemp+11,plusw1
 34278  01B310                     l9958:
 34279                           
 34280                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 34281  01B310  013B               	movlb	59	; () banked
 34282  01B312  9FDC               	bcf	220,7,b	;volatile
 34283                           
 34284                           ; BSR set to: 59
 34285                           ;eadog.c: 404:  DMA2SSZ = dsize;
 34286                           ;stkvar	_dsize @ sp[(0)+-2]
 34287  01B314  0EFE               	movlw	-2
 34288  01B316  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34289  01B31C  0EFF               	movlw	-1
 34290  01B31E  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34291                           
 34292                           ; BSR set to: 59
 34293                           ;eadog.c: 405:  DMA2DSZ = 1;
 34294  01B324  0E00               	movlw	0
 34295  01B326  6FCF               	movwf	207,b	;volatile
 34296  01B328  0E01               	movlw	1
 34297  01B32A  6FCE               	movwf	206,b	;volatile
 34298                           
 34299                           ; BSR set to: 59
 34300                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 34301  01B32C  8FDC               	bsf	220,7,b	;volatile
 34302                           
 34303                           ; BSR set to: 59
 34304                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 34305  01B32E  8DDC               	bsf	220,6,b	;volatile
 34306                           
 34307                           ; BSR set to: 59
 34308                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34309  01B330  52E5               	movf	postdec1,f,c
 34310  01B332  52E5               	movf	postdec1,f,c
 34311  01B334  0012               	return		;funcret
 34312  01B336                     __end_of_send_port_data_dma:
 34313                           	opt callstack 0
 34314                           
 34315 ;; *************** function _port_data_dma_ptr *****************
 34316 ;; Defined at:
 34317 ;;		line 413 in file "eadog.c"
 34318 ;; Parameters:    Size  Location     Type
 34319 ;;		None
 34320 ;; Auto vars:     Size  Location     Type
 34321 ;;		None
 34322 ;; Return value:  Size  Location     Type
 34323 ;;                  2  [STACK] PTR unsigned char 
 34324 ;; Registers used:
 34325 ;;		wreg, status,2, status,0, btemp, btemp+1
 34326 ;; Tracked objects:
 34327 ;;		On entry : 3F/1
 34328 ;;		On exit  : 0/0
 34329 ;;		Unchanged: 0/0
 34330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34335 ;;Total ram usage:        0 bytes
 34336 ;; Hardware stack levels used:    1
 34337 ;; Hardware stack levels required when called:    3
 34338 ;; This function calls:
 34339 ;;		Nothing
 34340 ;; This function is called by:
 34341 ;;		_calc_bsoc
 34342 ;; This function uses a reentrant model
 34343 ;;
 34344                           
 34345                           	psect	text155
 34346  01C0E8                     __ptext155:
 34347                           	opt callstack 0
 34348  01C0E8                     _port_data_dma_ptr:
 34349                           	opt callstack 10
 34350                           
 34351                           ;eadog.c: 415:  return port_data;
 34352                           
 34353                           ; BSR set to: 59
 34354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34355                           ;incstack = 0
 34356  01C0E8  0EFF               	movlw	low _port_data
 34357  01C0EA  6E01               	movwf	btemp^0,c
 34358  01C0EC  0E04               	movlw	high _port_data
 34359  01C0EE  6E02               	movwf	(btemp+1)^0,c
 34360                           
 34361                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34362  01C0F0  0012               	return		;funcret
 34363  01C0F2                     __end_of_port_data_dma_ptr:
 34364                           	opt callstack 0
 34365                           
 34366 ;; *************** function ___asfladd *****************
 34367 ;; Defined at:
 34368 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34369 ;; Parameters:    Size  Location     Type
 34370 ;;  f1p             2  [STACK] PTR 
 34371 ;;		 -> C(299), 
 34372 ;;  f2              4  [STACK] PTR 
 34373 ;; Auto vars:     Size  Location     Type
 34374 ;;		None
 34375 ;; Return value:  Size  Location     Type
 34376 ;;                  4  [STACK] PTR 
 34377 ;; Registers used:
 34378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34379 ;; Tracked objects:
 34380 ;;		On entry : 0/0
 34381 ;;		On exit  : 0/0
 34382 ;;		Unchanged: 0/0
 34383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34388 ;;Total ram usage:        0 bytes
 34389 ;; Hardware stack levels used:    1
 34390 ;; Hardware stack levels required when called:    4
 34391 ;; This function calls:
 34392 ;;		___fladd
 34393 ;; This function is called by:
 34394 ;;		_calc_bsoc
 34395 ;; This function uses a reentrant model
 34396 ;;
 34397                           
 34398                           	psect	text156
 34399  01ADDE                     __ptext156:
 34400                           	opt callstack 0
 34401  01ADDE                     ___asfladd:
 34402                           	opt callstack 9
 34403                           
 34404                           ;	Return value of ___asfladd is never used
 34405                           ;stkvar	_f2 @ sp[(0)+-6]
 34406                           
 34407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34408                           ;incstack = 0
 34409  01ADDE  0EFA               	movlw	-6
 34410  01ADE0  006F FF8F FFE6     	movff	plusw1,postinc1
 34411  01ADE6  006F FF8F FFE6     	movff	plusw1,postinc1
 34412  01ADEC  006F FF8F FFE6     	movff	plusw1,postinc1
 34413  01ADF2  006F FF8F FFE6     	movff	plusw1,postinc1
 34414                           
 34415                           ;stkvar	_f1p @ sp[(-4)+-2]
 34416  01ADF8  0EFA               	movlw	-6
 34417  01ADFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 34418  01AE00  0EFB               	movlw	-5
 34419  01AE02  006F FF8F FFDA     	movff	plusw1,fsr2h
 34420  01AE08  006F FF7B FFE6     	movff	postinc2,postinc1
 34421  01AE0E  006F FF7B FFE6     	movff	postinc2,postinc1
 34422  01AE14  006F FF7B FFE6     	movff	postinc2,postinc1
 34423  01AE1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34424  01AE20  ECD6  F0A2         	call	___fladd	;wreg free
 34425                           
 34426                           ;stkvar	_f1p @ sp[(0)+-2]
 34427  01AE24  0EFE               	movlw	-2
 34428  01AE26  006F FF8F FFD9     	movff	plusw1,fsr2l
 34429  01AE2C  0EFF               	movlw	-1
 34430  01AE2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 34431  01AE34  0060  F007  FFDE   	movff	btemp,postinc2
 34432  01AE3A  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34433  01AE40  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34434  01AE46  0060  F013  FFDE   	movff	btemp+3,postinc2
 34435                           
 34436                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34437  01AE4C  0EFA               	movlw	250
 34438  01AE4E  26E1               	addwf	fsr1l,f,c
 34439  01AE50  0EFF               	movlw	255
 34440  01AE52  22E2               	addwfc	fsr1h,f,c
 34441  01AE54  0012               	return		;funcret
 34442  01AE56                     __end_of___asfladd:
 34443                           	opt callstack 0
 34444                           
 34445 ;; *************** function _INT0_ISR *****************
 34446 ;; Defined at:
 34447 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34448 ;; Parameters:    Size  Location     Type
 34449 ;;		None
 34450 ;; Auto vars:     Size  Location     Type
 34451 ;;		None
 34452 ;; Return value:  Size  Location     Type
 34453 ;;                  1    wreg      void 
 34454 ;; Registers used:
 34455 ;;		wreg, status,2, status,0, pclath, tosl
 34456 ;; Tracked objects:
 34457 ;;		On entry : 0/0
 34458 ;;		On exit  : 0/0
 34459 ;;		Unchanged: 0/0
 34460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34465 ;;Total ram usage:        0 bytes
 34466 ;; Hardware stack levels used:    1
 34467 ;; Hardware stack levels required when called:    2
 34468 ;; This function calls:
 34469 ;;		_INT0_CallBack
 34470 ;; This function is called by:
 34471 ;;		Interrupt level 2
 34472 ;; This function uses a non-reentrant model
 34473 ;;
 34474                           
 34475                           	psect	text157
 34476  01C0C0                     __ptext157:
 34477                           	opt callstack 0
 34478  01C0C0                     _INT0_ISR:
 34479                           	opt callstack 2
 34480                           
 34481                           ;incstack = 0
 34482  01C0C0  EE14  F15E         	lfsr	1,___inthi_sp
 34483                           
 34484                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34485  01C0C4  0139               	movlb	57	; () banked
 34486  01C0C6  91A1               	bcf	161,0,b	;volatile
 34487                           
 34488                           ; BSR set to: 57
 34489                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34490  01C0C8  ECFE  F0DE         	call	_INT0_CallBack	;wreg free
 34491  01C0CC  0011               	retfie		f
 34492  01C0CE                     __end_of_INT0_ISR:
 34493                           	opt callstack 0
 34494                           
 34495 ;; *************** function _INT0_CallBack *****************
 34496 ;; Defined at:
 34497 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34498 ;; Parameters:    Size  Location     Type
 34499 ;;		None
 34500 ;; Auto vars:     Size  Location     Type
 34501 ;;		None
 34502 ;; Return value:  Size  Location     Type
 34503 ;;                  1  [STACK] void 
 34504 ;; Registers used:
 34505 ;;		wreg, status,2, status,0, pclath, tosl
 34506 ;; Tracked objects:
 34507 ;;		On entry : 3F/39
 34508 ;;		On exit  : 0/0
 34509 ;;		Unchanged: 0/0
 34510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34515 ;;Total ram usage:        0 bytes
 34516 ;; Hardware stack levels used:    1
 34517 ;; Hardware stack levels required when called:    1
 34518 ;; This function calls:
 34519 ;;		Absolute function
 34520 ;;		_INT0_DefaultInterruptHandler
 34521 ;; This function is called by:
 34522 ;;		_INT0_ISR
 34523 ;; This function uses a reentrant model
 34524 ;;
 34525                           
 34526                           	psect	text158
 34527  01BDFC                     __ptext158:
 34528                           	opt callstack 0
 34529  01BDFC                     _INT0_CallBack:
 34530                           	opt callstack 2
 34531                           
 34532                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34533                           
 34534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34535                           ;incstack = 0
 34536  01BDFC  0100               	movlb	0	; () banked
 34537  01BDFE  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34538  01BE00  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34539  01BE02  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34540  01BE04  B4D8               	btfsc	status,2,c
 34541  01BE06  0012               	return	
 34542                           
 34543                           ; BSR set to: 0
 34544                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34545  01BE08  D801               	call	u993_48
 34546  01BE0A  0012               	return	
 34547  01BE0C                     u993_48:
 34548  01BE0C  0005               	push	
 34549  01BE0E  6EFA               	movwf	pclath,c
 34550  01BE10  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34551  01BE12  6EFD               	movwf	tosl,c
 34552  01BE14  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34553  01BE16  6EFE               	movwf	tosh,c
 34554  01BE18  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34555  01BE1A  6EFF               	movwf	tosu,c
 34556  01BE1C  50FA               	movf	pclath,w,c
 34557  01BE1E  0012               	return		;indir
 34558  01BE20                     __end_of_INT0_CallBack:
 34559                           	opt callstack 0
 34560                           
 34561 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34562 ;; Defined at:
 34563 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34564 ;; Parameters:    Size  Location     Type
 34565 ;;		None
 34566 ;; Auto vars:     Size  Location     Type
 34567 ;;		None
 34568 ;; Return value:  Size  Location     Type
 34569 ;;                  1  [STACK] void 
 34570 ;; Registers used:
 34571 ;;		None
 34572 ;; Tracked objects:
 34573 ;;		On entry : 3F/0
 34574 ;;		On exit  : 0/0
 34575 ;;		Unchanged: 0/0
 34576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34581 ;;Total ram usage:        0 bytes
 34582 ;; Hardware stack levels used:    1
 34583 ;; This function calls:
 34584 ;;		Nothing
 34585 ;; This function is called by:
 34586 ;;		_EXT_INT_Initialize
 34587 ;;		_INT0_CallBack
 34588 ;; This function uses a reentrant model
 34589 ;;
 34590                           
 34591                           	psect	text159
 34592  01C162                     __ptext159:
 34593                           	opt callstack 0
 34594  01C162                     _INT0_DefaultInterruptHandler:
 34595                           	opt callstack 2
 34596                           
 34597                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34598                           
 34599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34600                           ;incstack = 0
 34601  01C162  0012               	return		;funcret
 34602  01C164                     __end_of_INT0_DefaultInterruptHandler:
 34603                           	opt callstack 0
 34604                           
 34605 ;; *************** function _Default_ISR *****************
 34606 ;; Defined at:
 34607 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34608 ;; Parameters:    Size  Location     Type
 34609 ;;		None
 34610 ;; Auto vars:     Size  Location     Type
 34611 ;;		None
 34612 ;; Return value:  Size  Location     Type
 34613 ;;                  1    wreg      void 
 34614 ;; Registers used:
 34615 ;;		None
 34616 ;; Tracked objects:
 34617 ;;		On entry : 0/0
 34618 ;;		On exit  : 0/0
 34619 ;;		Unchanged: 0/0
 34620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34625 ;;Total ram usage:        0 bytes
 34626 ;; Hardware stack levels used:    1
 34627 ;; This function calls:
 34628 ;;		Nothing
 34629 ;; This function is called by:
 34630 ;;		Interrupt level 2
 34631 ;; This function uses a non-reentrant model
 34632 ;;
 34633                           
 34634                           	psect	text160
 34635  01C158                     __ptext160:
 34636                           	opt callstack 0
 34637  01C158                     _Default_ISR:
 34638                           	opt callstack 4
 34639                           
 34640                           ;incstack = 0
 34641  01C158  EE14  F15E         	lfsr	1,___inthi_sp
 34642  01C15C  0011               	retfie		f
 34643  01C15E                     __end_of_Default_ISR:
 34644                           	opt callstack 0
 34645                           
 34646 ;; *************** function _ADCC_ISR *****************
 34647 ;; Defined at:
 34648 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34649 ;; Parameters:    Size  Location     Type
 34650 ;;		None
 34651 ;; Auto vars:     Size  Location     Type
 34652 ;;		None
 34653 ;; Return value:  Size  Location     Type
 34654 ;;                  1    wreg      void 
 34655 ;; Registers used:
 34656 ;;		wreg, status,2, status,0, pclath, tosl
 34657 ;; Tracked objects:
 34658 ;;		On entry : 0/0
 34659 ;;		On exit  : 0/0
 34660 ;;		Unchanged: 0/0
 34661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34666 ;;Total ram usage:        0 bytes
 34667 ;; Hardware stack levels used:    1
 34668 ;; Hardware stack levels required when called:    1
 34669 ;; This function calls:
 34670 ;;		Absolute function
 34671 ;;		_ADCC_DefaultInterruptHandler
 34672 ;;		_adc_int_handler
 34673 ;; This function is called by:
 34674 ;;		Interrupt level 2
 34675 ;; This function uses a non-reentrant model
 34676 ;;
 34677                           
 34678                           	psect	text161
 34679  01BA6C                     __ptext161:
 34680                           	opt callstack 0
 34681  01BA6C                     _ADCC_ISR:
 34682                           	opt callstack 3
 34683                           
 34684                           ;incstack = 0
 34685  01BA6C  EE14  F15E         	lfsr	1,___inthi_sp
 34686                           
 34687                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34688  01BA70  0139               	movlb	57	; () banked
 34689  01BA72  95A1               	bcf	161,2,b	;volatile
 34690                           
 34691                           ; BSR set to: 57
 34692                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34693  01BA74  0100               	movlb	0	; () banked
 34694  01BA76  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34695  01BA78  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34696  01BA7A  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34697  01BA7C  B4D8               	btfsc	status,2,c
 34698  01BA7E  0011               	retfie		f
 34699                           
 34700                           ; BSR set to: 0
 34701                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34702  01BA80  D801               	call	i2u1036_48
 34703  01BA82  0011               	retfie		f
 34704  01BA84                     i2u1036_48:
 34705  01BA84  0005               	push	
 34706  01BA86  6EFA               	movwf	pclath,c
 34707  01BA88  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34708  01BA8A  6EFD               	movwf	tosl,c
 34709  01BA8C  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34710  01BA8E  6EFE               	movwf	tosh,c
 34711  01BA90  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34712  01BA92  6EFF               	movwf	tosu,c
 34713  01BA94  50FA               	movf	pclath,w,c
 34714  01BA96  0012               	return		;indir
 34715  01BA98                     __end_of_ADCC_ISR:
 34716                           	opt callstack 0
 34717                           
 34718 ;; *************** function _adc_int_t_handler *****************
 34719 ;; Defined at:
 34720 ;;		line 146 in file "daq.c"
 34721 ;; Parameters:    Size  Location     Type
 34722 ;;		None
 34723 ;; Auto vars:     Size  Location     Type
 34724 ;;		None
 34725 ;; Return value:  Size  Location     Type
 34726 ;;                  1  [STACK] void 
 34727 ;; Registers used:
 34728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34729 ;; Tracked objects:
 34730 ;;		On entry : 3F/0
 34731 ;;		On exit  : 0/0
 34732 ;;		Unchanged: 0/0
 34733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34738 ;;Total ram usage:        0 bytes
 34739 ;; Hardware stack levels used:    1
 34740 ;; Hardware stack levels required when called:    1
 34741 ;; This function calls:
 34742 ;;		_ADCC_DischargeSampleCapacitor
 34743 ;;		_ADCC_StartConversion
 34744 ;; This function is called by:
 34745 ;;		_start_adc_scan
 34746 ;;		_ADCC_ThresholdISR
 34747 ;; This function uses a reentrant model
 34748 ;;
 34749                           
 34750                           	psect	text162
 34751  01AD5C                     __ptext162:
 34752                           	opt callstack 0
 34753  01AD5C                     _adc_int_t_handler:
 34754                           	opt callstack 2
 34755                           
 34756                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34757                           
 34758                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34759                           ;incstack = 0
 34760  01AD5C  013E               	movlb	62	; () banked
 34761  01AD5E  51E6               	movf	230,w,b	;volatile
 34762  01AD60  006F FB9C  F001    	movff	16103,btemp	;volatile
 34763  01AD66  6A02               	clrf	(btemp+1)^0,c
 34764  01AD68  0060  F004  F002   	movff	btemp,btemp+1
 34765  01AD6E  6A01               	clrf	btemp^0,c
 34766  01AD70  2601               	addwf	btemp^0,f,c
 34767  01AD72  0E00               	movlw	0
 34768  01AD74  2202               	addwfc	(btemp+1)^0,f,c
 34769  01AD76  0101               	movlb	1	; () banked
 34770  01AD78  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34771  01AD7A  0D02               	mullw	2
 34772  01AD7C  0E00               	movlw	low _R
 34773  01AD7E  24F3               	addwf	243,w,c
 34774  01AD80  6ED9               	movwf	fsr2l,c
 34775  01AD82  0E01               	movlw	high _R
 34776  01AD84  20F4               	addwfc	prodh,w,c
 34777  01AD86  6EDA               	movwf	fsr2h,c
 34778  01AD88  0060  F007  FFDE   	movff	btemp,postinc2
 34779  01AD8E  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34780  01AD94                     l11152:
 34781                           
 34782                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34783  01AD94  0101               	movlb	1	; () banked
 34784  01AD96  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34785  01AD98  0E0D               	movlw	13
 34786  01AD9A  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34787  01AD9C  D003               	goto	l11158
 34788                           
 34789                           ; BSR set to: 1
 34790                           ;daq.c: 154:    R.done = 1;
 34791  01AD9E  0E01               	movlw	1
 34792  01ADA0  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34793  01ADA2  0012               	return	
 34794  01ADA4                     l11158:
 34795                           
 34796                           ; BSR set to: 1
 34797                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34798  01ADA4  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34799  01ADAA  EE20  F12D         	lfsr	2,_R+45	;volatile
 34800  01ADAE  006F FF78  F009    	movff	postinc2,btemp+8
 34801  01ADB4  006F FF74  F00A    	movff	postdec2,btemp+9
 34802  01ADBA  2A0C               	incf	(btemp+11)^0,f,c
 34803  01ADBC  D003               	goto	u1033_44
 34804  01ADBE                     u1033_45:
 34805  01ADBE  90D8               	bcf	status,0,c
 34806  01ADC0  320A               	rrcf	(btemp+9)^0,f,c
 34807  01ADC2  3209               	rrcf	(btemp+8)^0,f,c
 34808  01ADC4                     u1033_44:
 34809  01ADC4  2E0C               	decfsz	(btemp+11)^0,f,c
 34810  01ADC6  D7FB               	goto	u1033_45
 34811  01ADC8  A009               	btfss	(btemp+8)^0,0,c
 34812  01ADCA  D7E4               	goto	l11152
 34813                           
 34814                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34815  01ADCC  EC8B  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34816                           
 34817                           ; BSR set to: 62
 34818                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34819  01ADD0  0101               	movlb	1	; () banked
 34820  01ADD2  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34821  01ADD4  0B0F               	andlw	15
 34822  01ADD6  6EE6               	movwf	postinc1,c
 34823  01ADD8  EC1A  F0E0         	call	_ADCC_StartConversion	;wreg free
 34824                           
 34825                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34826  01ADDC  0012               	return		;funcret
 34827  01ADDE                     __end_of_adc_int_t_handler:
 34828                           	opt callstack 0
 34829                           
 34830 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34831 ;; Defined at:
 34832 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34833 ;; Parameters:    Size  Location     Type
 34834 ;;		None
 34835 ;; Auto vars:     Size  Location     Type
 34836 ;;		None
 34837 ;; Return value:  Size  Location     Type
 34838 ;;                  1  [STACK] void 
 34839 ;; Registers used:
 34840 ;;		None
 34841 ;; Tracked objects:
 34842 ;;		On entry : 3F/0
 34843 ;;		On exit  : 0/0
 34844 ;;		Unchanged: 0/0
 34845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34850 ;;Total ram usage:        0 bytes
 34851 ;; Hardware stack levels used:    1
 34852 ;; This function calls:
 34853 ;;		Nothing
 34854 ;; This function is called by:
 34855 ;;		_ADCC_Initialize
 34856 ;;		_ADCC_ISR
 34857 ;;		_ADCC_ThresholdISR
 34858 ;; This function uses a reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text163
 34862  01C164                     __ptext163:
 34863                           	opt callstack 0
 34864  01C164                     _ADCC_DefaultInterruptHandler:
 34865                           	opt callstack 3
 34866                           
 34867                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34868                           
 34869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34870                           ;incstack = 0
 34871  01C164  0012               	return		;funcret
 34872  01C166                     __end_of_ADCC_DefaultInterruptHandler:
 34873                           	opt callstack 0
 34874                           
 34875 ;; *************** function _adc_int_handler *****************
 34876 ;; Defined at:
 34877 ;;		line 136 in file "daq.c"
 34878 ;; Parameters:    Size  Location     Type
 34879 ;;		None
 34880 ;; Auto vars:     Size  Location     Type
 34881 ;;		None
 34882 ;; Return value:  Size  Location     Type
 34883 ;;                  1  [STACK] void 
 34884 ;; Registers used:
 34885 ;;		None
 34886 ;; Tracked objects:
 34887 ;;		On entry : 3F/0
 34888 ;;		On exit  : 0/0
 34889 ;;		Unchanged: 0/0
 34890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34895 ;;Total ram usage:        0 bytes
 34896 ;; Hardware stack levels used:    1
 34897 ;; This function calls:
 34898 ;;		Nothing
 34899 ;; This function is called by:
 34900 ;;		_start_adc_scan
 34901 ;;		_ADCC_ISR
 34902 ;; This function uses a reentrant model
 34903 ;;
 34904                           
 34905                           	psect	text164
 34906  01C166                     __ptext164:
 34907                           	opt callstack 0
 34908  01C166                     _adc_int_handler:
 34909                           	opt callstack 3
 34910                           
 34911                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34912                           
 34913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34914                           ;incstack = 0
 34915  01C166  0012               	return		;funcret
 34916  01C168                     __end_of_adc_int_handler:
 34917                           	opt callstack 0
 34918                           
 34919 ;; *************** function _ADCC_ThresholdISR *****************
 34920 ;; Defined at:
 34921 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34922 ;; Parameters:    Size  Location     Type
 34923 ;;		None
 34924 ;; Auto vars:     Size  Location     Type
 34925 ;;		None
 34926 ;; Return value:  Size  Location     Type
 34927 ;;                  1    wreg      void 
 34928 ;; Registers used:
 34929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34930 ;; Tracked objects:
 34931 ;;		On entry : 0/0
 34932 ;;		On exit  : 0/0
 34933 ;;		Unchanged: 0/0
 34934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34937 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34939 ;;Total ram usage:        5 bytes
 34940 ;; Hardware stack levels used:    1
 34941 ;; Hardware stack levels required when called:    2
 34942 ;; This function calls:
 34943 ;;		Absolute function
 34944 ;;		_ADCC_DefaultInterruptHandler
 34945 ;;		_adc_int_t_handler
 34946 ;; This function is called by:
 34947 ;;		Interrupt level 2
 34948 ;; This function uses a non-reentrant model
 34949 ;;
 34950                           
 34951                           	psect	text165
 34952  01AF2C                     __ptext165:
 34953                           	opt callstack 0
 34954  01AF2C                     _ADCC_ThresholdISR:
 34955                           	opt callstack 2
 34956                           
 34957                           ;incstack = 0
 34958  01AF2C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34959  01AF32  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34960  01AF38  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34961  01AF3E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34962  01AF44  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34963  01AF4A  EE14  F15E         	lfsr	1,___inthi_sp
 34964                           
 34965                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34966  01AF4E  0139               	movlb	57	; () banked
 34967  01AF50  97A1               	bcf	161,3,b	;volatile
 34968                           
 34969                           ; BSR set to: 57
 34970                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34971  01AF52  0100               	movlb	0	; () banked
 34972  01AF54  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34973  01AF56  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34974  01AF58  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34975  01AF5A  B4D8               	btfsc	status,2,c
 34976  01AF5C  D00C               	goto	i2u1038_49
 34977                           
 34978                           ; BSR set to: 0
 34979                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34980  01AF5E  D801               	call	i2u1038_48
 34981  01AF60  D00A               	goto	i2u1038_49
 34982  01AF62                     i2u1038_48:
 34983  01AF62  0005               	push	
 34984  01AF64  6EFA               	movwf	pclath,c
 34985  01AF66  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34986  01AF68  6EFD               	movwf	tosl,c
 34987  01AF6A  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34988  01AF6C  6EFE               	movwf	tosh,c
 34989  01AF6E  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34990  01AF70  6EFF               	movwf	tosu,c
 34991  01AF72  50FA               	movf	pclath,w,c
 34992  01AF74  0012               	return		;indir
 34993  01AF76                     i2u1038_49:
 34994  01AF76  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 34995  01AF7C  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 34996  01AF82  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 34997  01AF88  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 34998  01AF8E  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 34999  01AF94  0011               	retfie		f
 35000  01AF96                     __end_of_ADCC_ThresholdISR:
 35001                           	opt callstack 0
 35002                           
 35003 ;; *************** function _UART1_rx_vect_isr *****************
 35004 ;; Defined at:
 35005 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35006 ;; Parameters:    Size  Location     Type
 35007 ;;		None
 35008 ;; Auto vars:     Size  Location     Type
 35009 ;;		None
 35010 ;; Return value:  Size  Location     Type
 35011 ;;                  1    wreg      void 
 35012 ;; Registers used:
 35013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35014 ;; Tracked objects:
 35015 ;;		On entry : 0/0
 35016 ;;		On exit  : 0/0
 35017 ;;		Unchanged: 0/0
 35018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35023 ;;Total ram usage:        0 bytes
 35024 ;; Hardware stack levels used:    1
 35025 ;; Hardware stack levels required when called:    1
 35026 ;; This function calls:
 35027 ;;		Absolute function
 35028 ;;		_UART1_Receive_ISR
 35029 ;; This function is called by:
 35030 ;;		Interrupt level 2
 35031 ;; This function uses a non-reentrant model
 35032 ;;
 35033                           
 35034                           	psect	text166
 35035  01BCD0                     __ptext166:
 35036                           	opt callstack 0
 35037  01BCD0                     _UART1_rx_vect_isr:
 35038                           	opt callstack 3
 35039                           
 35040                           ;incstack = 0
 35041  01BCD0  EE14  F15E         	lfsr	1,___inthi_sp
 35042                           
 35043                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35044  01BCD4  0100               	movlb	0	; () banked
 35045  01BCD6  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35046  01BCD8  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35047  01BCDA  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35048  01BCDC  B4D8               	btfsc	status,2,c
 35049  01BCDE  0011               	retfie		f
 35050                           
 35051                           ; BSR set to: 0
 35052                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35053  01BCE0  D801               	call	i2u1040_48
 35054  01BCE2  0011               	retfie		f
 35055  01BCE4                     i2u1040_48:
 35056  01BCE4  0005               	push	
 35057  01BCE6  6EFA               	movwf	pclath,c
 35058  01BCE8  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35059  01BCEA  6EFD               	movwf	tosl,c
 35060  01BCEC  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35061  01BCEE  6EFE               	movwf	tosh,c
 35062  01BCF0  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35063  01BCF2  6EFF               	movwf	tosu,c
 35064  01BCF4  50FA               	movf	pclath,w,c
 35065  01BCF6  0012               	return		;indir
 35066  01BCF8                     __end_of_UART1_rx_vect_isr:
 35067                           	opt callstack 0
 35068                           
 35069 ;; *************** function _UART1_Receive_ISR *****************
 35070 ;; Defined at:
 35071 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35072 ;; Parameters:    Size  Location     Type
 35073 ;;		None
 35074 ;; Auto vars:     Size  Location     Type
 35075 ;;		None
 35076 ;; Return value:  Size  Location     Type
 35077 ;;                  1  [STACK] void 
 35078 ;; Registers used:
 35079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35080 ;; Tracked objects:
 35081 ;;		On entry : 3F/0
 35082 ;;		On exit  : 3F/0
 35083 ;;		Unchanged: 0/0
 35084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35089 ;;Total ram usage:        0 bytes
 35090 ;; Hardware stack levels used:    1
 35091 ;; This function calls:
 35092 ;;		Nothing
 35093 ;; This function is called by:
 35094 ;;		_UART1_Initialize
 35095 ;;		_UART1_rx_vect_isr
 35096 ;; This function uses a reentrant model
 35097 ;;
 35098                           
 35099                           	psect	text167
 35100  01BF40                     __ptext167:
 35101                           	opt callstack 0
 35102  01BF40                     _UART1_Receive_ISR:
 35103                           	opt callstack 3
 35104                           
 35105                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35106                           
 35107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35108                           ;incstack = 0
 35109  01BF40  5047               	movf	_uart1RxHead^0,w,c
 35110  01BF42  0F6C               	addlw	low _uart1RxBuffer
 35111  01BF44  6ED9               	movwf	fsr2l,c
 35112  01BF46  6ADA               	clrf	fsr2h,c
 35113  01BF48  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35114  01BF4E  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35115                           
 35116                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35117  01BF50  0E07               	movlw	7
 35118  01BF52  6447               	cpfsgt	_uart1RxHead^0,c
 35119  01BF54  D001               	goto	l10726
 35120                           
 35121                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35122  01BF56  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35123  01BF58                     l10726:
 35124                           
 35125                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35126  01BF58  0100               	movlb	0	; () banked
 35127  01BF5A  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35128                           
 35129                           ; BSR set to: 0
 35130                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35131  01BF5C  0012               	return		;funcret
 35132  01BF5E                     __end_of_UART1_Receive_ISR:
 35133                           	opt callstack 0
 35134                           
 35135 ;; *************** function _UART2_tx_vect_isr *****************
 35136 ;; Defined at:
 35137 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35138 ;; Parameters:    Size  Location     Type
 35139 ;;		None
 35140 ;; Auto vars:     Size  Location     Type
 35141 ;;		None
 35142 ;; Return value:  Size  Location     Type
 35143 ;;                  1    wreg      void 
 35144 ;; Registers used:
 35145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35146 ;; Tracked objects:
 35147 ;;		On entry : 0/0
 35148 ;;		On exit  : 0/0
 35149 ;;		Unchanged: 0/0
 35150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35155 ;;Total ram usage:        0 bytes
 35156 ;; Hardware stack levels used:    1
 35157 ;; Hardware stack levels required when called:    1
 35158 ;; This function calls:
 35159 ;;		Absolute function
 35160 ;;		_UART2_Transmit_ISR
 35161 ;; This function is called by:
 35162 ;;		Interrupt level 2
 35163 ;; This function uses a non-reentrant model
 35164 ;;
 35165                           
 35166                           	psect	text168
 35167  01BCF8                     __ptext168:
 35168                           	opt callstack 0
 35169  01BCF8                     _UART2_tx_vect_isr:
 35170                           	opt callstack 3
 35171                           
 35172                           ; BSR set to: 0
 35173                           ;incstack = 0
 35174  01BCF8  EE14  F15E         	lfsr	1,___inthi_sp
 35175                           
 35176                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35177  01BCFC  0100               	movlb	0	; () banked
 35178  01BCFE  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35179  01BD00  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35180  01BD02  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35181  01BD04  B4D8               	btfsc	status,2,c
 35182  01BD06  0011               	retfie		f
 35183                           
 35184                           ; BSR set to: 0
 35185                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35186  01BD08  D801               	call	i2u1042_48
 35187  01BD0A  0011               	retfie		f
 35188  01BD0C                     i2u1042_48:
 35189  01BD0C  0005               	push	
 35190  01BD0E  6EFA               	movwf	pclath,c
 35191  01BD10  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35192  01BD12  6EFD               	movwf	tosl,c
 35193  01BD14  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35194  01BD16  6EFE               	movwf	tosh,c
 35195  01BD18  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35196  01BD1A  6EFF               	movwf	tosu,c
 35197  01BD1C  50FA               	movf	pclath,w,c
 35198  01BD1E  0012               	return		;indir
 35199  01BD20                     __end_of_UART2_tx_vect_isr:
 35200                           	opt callstack 0
 35201                           
 35202 ;; *************** function _UART2_Transmit_ISR *****************
 35203 ;; Defined at:
 35204 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35205 ;; Parameters:    Size  Location     Type
 35206 ;;		None
 35207 ;; Auto vars:     Size  Location     Type
 35208 ;;		None
 35209 ;; Return value:  Size  Location     Type
 35210 ;;                  1  [STACK] void 
 35211 ;; Registers used:
 35212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35213 ;; Tracked objects:
 35214 ;;		On entry : 3F/0
 35215 ;;		On exit  : 3B/39
 35216 ;;		Unchanged: 0/0
 35217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35222 ;;Total ram usage:        0 bytes
 35223 ;; Hardware stack levels used:    1
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_UART2_Initialize
 35228 ;;		_UART2_tx_vect_isr
 35229 ;; This function uses a reentrant model
 35230 ;;
 35231                           
 35232                           	psect	text169
 35233  01BA98                     __ptext169:
 35234                           	opt callstack 0
 35235  01BA98                     _UART2_Transmit_ISR:
 35236                           	opt callstack 3
 35237                           
 35238                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35239                           
 35240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35241                           ;incstack = 0
 35242  01BA98  0E40               	movlw	64
 35243  01BA9A  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 35244  01BA9C  D010               	goto	l673
 35245                           
 35246                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35247  01BA9E  0E00               	movlw	low _uart2TxBuffer
 35248  01BAA0  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 35249  01BAA2  6ED9               	movwf	fsr2l,c
 35250  01BAA4  6ADA               	clrf	fsr2h,c
 35251  01BAA6  0E03               	movlw	high _uart2TxBuffer
 35252  01BAA8  22DA               	addwfc	fsr2h,f,c
 35253  01BAAA  50DF               	movf	indf2,w,c
 35254  01BAAC  013D               	movlb	61	; () banked
 35255  01BAAE  6FD2               	movwf	210,b	;volatile
 35256                           
 35257                           ; BSR set to: 61
 35258  01BAB0  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 35259                           
 35260                           ; BSR set to: 61
 35261                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35262  01BAB2  0E3F               	movlw	63
 35263  01BAB4  6445               	cpfsgt	_uart2TxTail^0,c
 35264  01BAB6  D001               	goto	l10738
 35265                           
 35266                           ; BSR set to: 61
 35267                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35268  01BAB8  6A45               	clrf	_uart2TxTail^0,c	;volatile
 35269  01BABA                     l10738:
 35270                           
 35271                           ; BSR set to: 61
 35272                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35273  01BABA  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35274                           
 35275                           ;mcc_generated_files/uart2.c: 224:     }
 35276  01BABC  0012               	return	
 35277  01BABE                     l673:
 35278                           
 35279                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35280  01BABE  0139               	movlb	57	; () banked
 35281  01BAC0  9796               	bcf	150,3,b	;volatile
 35282                           
 35283                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35284  01BAC2  0012               	return		;funcret
 35285  01BAC4                     __end_of_UART2_Transmit_ISR:
 35286                           	opt callstack 0
 35287                           
 35288 ;; *************** function _UART2_rx_vect_isr *****************
 35289 ;; Defined at:
 35290 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35291 ;; Parameters:    Size  Location     Type
 35292 ;;		None
 35293 ;; Auto vars:     Size  Location     Type
 35294 ;;		None
 35295 ;; Return value:  Size  Location     Type
 35296 ;;                  1    wreg      void 
 35297 ;; Registers used:
 35298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35299 ;; Tracked objects:
 35300 ;;		On entry : 0/0
 35301 ;;		On exit  : 0/0
 35302 ;;		Unchanged: 0/0
 35303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35308 ;;Total ram usage:        0 bytes
 35309 ;; Hardware stack levels used:    1
 35310 ;; Hardware stack levels required when called:    1
 35311 ;; This function calls:
 35312 ;;		Absolute function
 35313 ;;		_UART2_Receive_ISR
 35314 ;; This function is called by:
 35315 ;;		Interrupt level 2
 35316 ;; This function uses a non-reentrant model
 35317 ;;
 35318                           
 35319                           	psect	text170
 35320  01BD20                     __ptext170:
 35321                           	opt callstack 0
 35322  01BD20                     _UART2_rx_vect_isr:
 35323                           	opt callstack 3
 35324                           
 35325                           ;incstack = 0
 35326  01BD20  EE14  F15E         	lfsr	1,___inthi_sp
 35327                           
 35328                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35329  01BD24  0100               	movlb	0	; () banked
 35330  01BD26  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35331  01BD28  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35332  01BD2A  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35333  01BD2C  B4D8               	btfsc	status,2,c
 35334  01BD2E  0011               	retfie		f
 35335                           
 35336                           ; BSR set to: 0
 35337                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35338  01BD30  D801               	call	i2u1044_48
 35339  01BD32  0011               	retfie		f
 35340  01BD34                     i2u1044_48:
 35341  01BD34  0005               	push	
 35342  01BD36  6EFA               	movwf	pclath,c
 35343  01BD38  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35344  01BD3A  6EFD               	movwf	tosl,c
 35345  01BD3C  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35346  01BD3E  6EFE               	movwf	tosh,c
 35347  01BD40  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35348  01BD42  6EFF               	movwf	tosu,c
 35349  01BD44  50FA               	movf	pclath,w,c
 35350  01BD46  0012               	return		;indir
 35351  01BD48                     __end_of_UART2_rx_vect_isr:
 35352                           	opt callstack 0
 35353                           
 35354 ;; *************** function _UART2_Receive_ISR *****************
 35355 ;; Defined at:
 35356 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35357 ;; Parameters:    Size  Location     Type
 35358 ;;		None
 35359 ;; Auto vars:     Size  Location     Type
 35360 ;;		None
 35361 ;; Return value:  Size  Location     Type
 35362 ;;                  1  [STACK] void 
 35363 ;; Registers used:
 35364 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35365 ;; Tracked objects:
 35366 ;;		On entry : 3F/0
 35367 ;;		On exit  : 3F/0
 35368 ;;		Unchanged: 0/0
 35369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35374 ;;Total ram usage:        0 bytes
 35375 ;; Hardware stack levels used:    1
 35376 ;; This function calls:
 35377 ;;		Nothing
 35378 ;; This function is called by:
 35379 ;;		_UART2_Initialize
 35380 ;;		_UART2_rx_vect_isr
 35381 ;; This function uses a reentrant model
 35382 ;;
 35383                           
 35384                           	psect	text171
 35385  01BEA8                     __ptext171:
 35386                           	opt callstack 0
 35387  01BEA8                     _UART2_Receive_ISR:
 35388                           	opt callstack 3
 35389                           
 35390                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35391                           
 35392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35393                           ;incstack = 0
 35394  01BEA8  0E00               	movlw	low _uart2RxBuffer
 35395  01BEAA  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35396  01BEAC  6ED9               	movwf	fsr2l,c
 35397  01BEAE  6ADA               	clrf	fsr2h,c
 35398  01BEB0  0E04               	movlw	high _uart2RxBuffer
 35399  01BEB2  22DA               	addwfc	fsr2h,f,c
 35400  01BEB4  006F F743 FFDF     	movff	15824,indf2	;volatile
 35401  01BEBA  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35402                           
 35403                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35404  01BEBC  2843               	incf	_uart2RxHead^0,w,c
 35405  01BEBE  B4D8               	btfsc	status,2,c
 35406                           
 35407                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35408  01BEC0  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35409                           
 35410                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35411  01BEC2  0100               	movlb	0	; () banked
 35412  01BEC4  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35413                           
 35414                           ; BSR set to: 0
 35415                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35416  01BEC6  0012               	return		;funcret
 35417  01BEC8                     __end_of_UART2_Receive_ISR:
 35418                           	opt callstack 0
 35419                           
 35420 ;; *************** function _TMR6_ISR *****************
 35421 ;; Defined at:
 35422 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;		None
 35425 ;; Auto vars:     Size  Location     Type
 35426 ;;		None
 35427 ;; Return value:  Size  Location     Type
 35428 ;;                  1    wreg      void 
 35429 ;; Registers used:
 35430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35431 ;; Tracked objects:
 35432 ;;		On entry : 0/0
 35433 ;;		On exit  : 0/0
 35434 ;;		Unchanged: 0/0
 35435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35440 ;;Total ram usage:        1 bytes
 35441 ;; Hardware stack levels used:    1
 35442 ;; Hardware stack levels required when called:    2
 35443 ;; This function calls:
 35444 ;;		_TMR6_CallBack
 35445 ;; This function is called by:
 35446 ;;		Interrupt level 2
 35447 ;; This function uses a non-reentrant model
 35448 ;;
 35449                           
 35450                           	psect	text172
 35451  01BF94                     __ptext172:
 35452                           	opt callstack 0
 35453  01BF94                     _TMR6_ISR:
 35454                           	opt callstack 2
 35455                           
 35456                           ; BSR set to: 0
 35457                           ;incstack = 0
 35458  01BF94  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35459  01BF9A  EE14  F15E         	lfsr	1,___inthi_sp
 35460                           
 35461                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35462  01BF9E  0139               	movlb	57	; () banked
 35463  01BFA0  91A9               	bcf	169,0,b	;volatile
 35464                           
 35465                           ; BSR set to: 57
 35466                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35467  01BFA2  EC10  F0DF         	call	_TMR6_CallBack	;wreg free
 35468  01BFA6  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35469  01BFAC  0011               	retfie		f
 35470  01BFAE                     __end_of_TMR6_ISR:
 35471                           	opt callstack 0
 35472                           
 35473 ;; *************** function _TMR6_CallBack *****************
 35474 ;; Defined at:
 35475 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35476 ;; Parameters:    Size  Location     Type
 35477 ;;		None
 35478 ;; Auto vars:     Size  Location     Type
 35479 ;;		None
 35480 ;; Return value:  Size  Location     Type
 35481 ;;                  1  [STACK] void 
 35482 ;; Registers used:
 35483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35484 ;; Tracked objects:
 35485 ;;		On entry : 3F/39
 35486 ;;		On exit  : 0/0
 35487 ;;		Unchanged: 0/0
 35488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35493 ;;Total ram usage:        0 bytes
 35494 ;; Hardware stack levels used:    1
 35495 ;; Hardware stack levels required when called:    1
 35496 ;; This function calls:
 35497 ;;		Absolute function
 35498 ;;		_TMR6_DefaultInterruptHandler
 35499 ;; This function is called by:
 35500 ;;		_TMR6_ISR
 35501 ;; This function uses a reentrant model
 35502 ;;
 35503                           
 35504                           	psect	text173
 35505  01BE20                     __ptext173:
 35506                           	opt callstack 0
 35507  01BE20                     _TMR6_CallBack:
 35508                           	opt callstack 2
 35509                           
 35510                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35511                           
 35512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35513                           ;incstack = 0
 35514  01BE20  0100               	movlb	0	; () banked
 35515  01BE22  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35516  01BE24  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35517  01BE26  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35518  01BE28  B4D8               	btfsc	status,2,c
 35519  01BE2A  0012               	return	
 35520                           
 35521                           ; BSR set to: 0
 35522                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35523  01BE2C  D801               	call	u1001_48
 35524  01BE2E  0012               	return	
 35525  01BE30                     u1001_48:
 35526  01BE30  0005               	push	
 35527  01BE32  6EFA               	movwf	pclath,c
 35528  01BE34  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35529  01BE36  6EFD               	movwf	tosl,c
 35530  01BE38  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35531  01BE3A  6EFE               	movwf	tosh,c
 35532  01BE3C  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35533  01BE3E  6EFF               	movwf	tosu,c
 35534  01BE40  50FA               	movf	pclath,w,c
 35535  01BE42  0012               	return		;indir
 35536  01BE44                     __end_of_TMR6_CallBack:
 35537                           	opt callstack 0
 35538                           
 35539 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35540 ;; Defined at:
 35541 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35542 ;; Parameters:    Size  Location     Type
 35543 ;;		None
 35544 ;; Auto vars:     Size  Location     Type
 35545 ;;  i               1  [STACK] unsigned char 
 35546 ;; Return value:  Size  Location     Type
 35547 ;;                  1  [STACK] void 
 35548 ;; Registers used:
 35549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35550 ;; Tracked objects:
 35551 ;;		On entry : 3F/0
 35552 ;;		On exit  : 0/0
 35553 ;;		Unchanged: 0/0
 35554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35559 ;;Total ram usage:        0 bytes
 35560 ;; Hardware stack levels used:    1
 35561 ;; This function calls:
 35562 ;;		Nothing
 35563 ;; This function is called by:
 35564 ;;		_TMR6_Initialize
 35565 ;;		_TMR6_CallBack
 35566 ;; This function uses a reentrant model
 35567 ;;
 35568                           
 35569                           	psect	text174
 35570  01B336                     __ptext174:
 35571                           	opt callstack 0
 35572  01B336                     _TMR6_DefaultInterruptHandler:
 35573                           	opt callstack 0
 35574                           
 35575                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35576  01B336  52E6               	movf	postinc1,f,c
 35577                           
 35578                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35579                           ;stkvar	_i @ sp[(-1)+0]
 35580                           
 35581                           ;incstack = 0
 35582  01B338  0EFF               	movlw	-1
 35583  01B33A  6AE3               	clrf	plusw1,c
 35584  01B33C                     l10348:
 35585                           
 35586                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35587                           ;stkvar	_i @ sp[(-1)+0]
 35588  01B33C  0EFF               	movlw	-1
 35589  01B33E  50E3               	movf	plusw1,w,c
 35590  01B340  0D02               	mullw	2
 35591  01B342  0E7D               	movlw	low _tickCount
 35592  01B344  24F3               	addwf	243,w,c
 35593  01B346  6ED9               	movwf	fsr2l,c
 35594  01B348  0E02               	movlw	high _tickCount
 35595  01B34A  20F4               	addwfc	prodh,w,c
 35596  01B34C  6EDA               	movwf	fsr2h,c
 35597  01B34E  50DE               	movf	postinc2,w,c
 35598  01B350  10DE               	iorwf	postinc2,w,c
 35599  01B352  B4D8               	btfsc	status,2,c
 35600  01B354  D00C               	goto	l10352
 35601                           
 35602                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35603                           ;stkvar	_i @ sp[(-1)+0]
 35604  01B356  0EFF               	movlw	-1
 35605  01B358  50E3               	movf	plusw1,w,c
 35606  01B35A  0D02               	mullw	2
 35607  01B35C  0E7D               	movlw	low _tickCount
 35608  01B35E  24F3               	addwf	243,w,c
 35609  01B360  6ED9               	movwf	fsr2l,c
 35610  01B362  0E02               	movlw	high _tickCount
 35611  01B364  20F4               	addwfc	prodh,w,c
 35612  01B366  6EDA               	movwf	fsr2h,c
 35613  01B368  06DE               	decf	postinc2,f,c
 35614  01B36A  0E00               	movlw	0
 35615  01B36C  5ADD               	subwfb	postdec2,f,c
 35616  01B36E                     l10352:
 35617                           
 35618                           ;mcc_generated_files/tmr6.c: 207:  }
 35619                           ;stkvar	_i @ sp[(-1)+0]
 35620  01B36E  0EFF               	movlw	-1
 35621  01B370  2AE3               	incf	plusw1,f,c
 35622                           
 35623                           ;stkvar	_i @ sp[(-1)+0]
 35624  01B372  0EFF               	movlw	-1
 35625  01B374  006F FF8C  F001    	movff	plusw1,btemp
 35626  01B37A  0E0C               	movlw	12
 35627  01B37C  6401               	cpfsgt	btemp^0,c
 35628  01B37E  D7DE               	goto	l10348
 35629                           
 35630                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35631  01B380  52E5               	movf	postdec1,f,c
 35632  01B382  0012               	return		;funcret
 35633  01B384                     __end_of_TMR6_DefaultInterruptHandler:
 35634                           	opt callstack 0
 35635                           
 35636 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35637 ;; Defined at:
 35638 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35639 ;; Parameters:    Size  Location     Type
 35640 ;;		None
 35641 ;; Auto vars:     Size  Location     Type
 35642 ;;		None
 35643 ;; Return value:  Size  Location     Type
 35644 ;;                  1    wreg      void 
 35645 ;; Registers used:
 35646 ;;		None
 35647 ;; Tracked objects:
 35648 ;;		On entry : 0/0
 35649 ;;		On exit  : 3F/0
 35650 ;;		Unchanged: 0/0
 35651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35656 ;;Total ram usage:        0 bytes
 35657 ;; Hardware stack levels used:    1
 35658 ;; This function calls:
 35659 ;;		Nothing
 35660 ;; This function is called by:
 35661 ;;		Interrupt level 2
 35662 ;; This function uses a non-reentrant model
 35663 ;;
 35664                           
 35665                           	psect	text175
 35666  01C0D0                     __ptext175:
 35667                           	opt callstack 0
 35668  01C0D0                     _DMA1_DMASCNT_ISR:
 35669                           	opt callstack 4
 35670                           
 35671                           ;incstack = 0
 35672  01C0D0  EE14  F15E         	lfsr	1,___inthi_sp
 35673                           
 35674                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35675  01C0D4  0139               	movlb	57	; () banked
 35676  01C0D6  91A2               	bcf	162,0,b	;volatile
 35677                           
 35678                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35679  01C0D8  0100               	movlb	0	; () banked
 35680  01C0DA  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35681                           
 35682                           ; BSR set to: 0
 35683  01C0DC  0011               	retfie		f
 35684  01C0DE                     __end_of_DMA1_DMASCNT_ISR:
 35685                           	opt callstack 0
 35686                           
 35687 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35688 ;; Defined at:
 35689 ;;		line 133 in file "mcc_generated_files/dma1.c"
 35690 ;; Parameters:    Size  Location     Type
 35691 ;;		None
 35692 ;; Auto vars:     Size  Location     Type
 35693 ;;		None
 35694 ;; Return value:  Size  Location     Type
 35695 ;;                  1    wreg      void 
 35696 ;; Registers used:
 35697 ;;		None
 35698 ;; Tracked objects:
 35699 ;;		On entry : 0/0
 35700 ;;		On exit  : 3F/39
 35701 ;;		Unchanged: 0/0
 35702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35707 ;;Total ram usage:        0 bytes
 35708 ;; Hardware stack levels used:    1
 35709 ;; This function calls:
 35710 ;;		Nothing
 35711 ;; This function is called by:
 35712 ;;		Interrupt level 2
 35713 ;; This function uses a non-reentrant model
 35714 ;;
 35715                           
 35716                           	psect	text176
 35717  01C0F4                     __ptext176:
 35718                           	opt callstack 0
 35719  01C0F4                     _DMA1_DMADCNT_ISR:
 35720                           	opt callstack 4
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;incstack = 0
 35724  01C0F4  EE14  F15E         	lfsr	1,___inthi_sp
 35725                           
 35726                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 35727  01C0F8  0139               	movlb	57	; () banked
 35728  01C0FA  93A2               	bcf	162,1,b	;volatile
 35729                           
 35730                           ; BSR set to: 57
 35731  01C0FC  0011               	retfie		f
 35732  01C0FE                     __end_of_DMA1_DMADCNT_ISR:
 35733                           	opt callstack 0
 35734                           
 35735 ;; *************** function _DMA1_DMAA_ISR *****************
 35736 ;; Defined at:
 35737 ;;		line 143 in file "mcc_generated_files/dma1.c"
 35738 ;; Parameters:    Size  Location     Type
 35739 ;;		None
 35740 ;; Auto vars:     Size  Location     Type
 35741 ;;		None
 35742 ;; Return value:  Size  Location     Type
 35743 ;;                  1    wreg      void 
 35744 ;; Registers used:
 35745 ;;		None
 35746 ;; Tracked objects:
 35747 ;;		On entry : 0/0
 35748 ;;		On exit  : 3F/39
 35749 ;;		Unchanged: 0/0
 35750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35755 ;;Total ram usage:        0 bytes
 35756 ;; Hardware stack levels used:    1
 35757 ;; This function calls:
 35758 ;;		Nothing
 35759 ;; This function is called by:
 35760 ;;		Interrupt level 2
 35761 ;; This function uses a non-reentrant model
 35762 ;;
 35763                           
 35764                           	psect	text177
 35765  01C100                     __ptext177:
 35766                           	opt callstack 0
 35767  01C100                     _DMA1_DMAA_ISR:
 35768                           	opt callstack 4
 35769                           
 35770                           ; BSR set to: 57
 35771                           ;incstack = 0
 35772  01C100  EE14  F15E         	lfsr	1,___inthi_sp
 35773                           
 35774                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 35775  01C104  0139               	movlb	57	; () banked
 35776  01C106  97A2               	bcf	162,3,b	;volatile
 35777                           
 35778                           ; BSR set to: 57
 35779  01C108  0011               	retfie		f
 35780  01C10A                     __end_of_DMA1_DMAA_ISR:
 35781                           	opt callstack 0
 35782                           
 35783 ;; *************** function _DMA1_DMAOR_ISR *****************
 35784 ;; Defined at:
 35785 ;;		line 154 in file "mcc_generated_files/dma1.c"
 35786 ;; Parameters:    Size  Location     Type
 35787 ;;		None
 35788 ;; Auto vars:     Size  Location     Type
 35789 ;;		None
 35790 ;; Return value:  Size  Location     Type
 35791 ;;                  1    wreg      void 
 35792 ;; Registers used:
 35793 ;;		None
 35794 ;; Tracked objects:
 35795 ;;		On entry : 0/0
 35796 ;;		On exit  : 3F/39
 35797 ;;		Unchanged: 0/0
 35798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35803 ;;Total ram usage:        0 bytes
 35804 ;; Hardware stack levels used:    1
 35805 ;; This function calls:
 35806 ;;		Nothing
 35807 ;; This function is called by:
 35808 ;;		Interrupt level 2
 35809 ;; This function uses a non-reentrant model
 35810 ;;
 35811                           
 35812                           	psect	text178
 35813  01C10C                     __ptext178:
 35814                           	opt callstack 0
 35815  01C10C                     _DMA1_DMAOR_ISR:
 35816                           	opt callstack 4
 35817                           
 35818                           ; BSR set to: 57
 35819                           ;incstack = 0
 35820  01C10C  EE14  F15E         	lfsr	1,___inthi_sp
 35821                           
 35822                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 35823  01C110  0139               	movlb	57	; () banked
 35824  01C112  95A2               	bcf	162,2,b	;volatile
 35825                           
 35826                           ; BSR set to: 57
 35827  01C114  0011               	retfie		f
 35828  01C116                     __end_of_DMA1_DMAOR_ISR:
 35829                           	opt callstack 0
 35830                           
 35831                           ;
 35832                           ; Interrupt Vector Table @ 0x8
 35833                           ;
 35834                           
 35835                           	psect	ivt0x8
 35836  000008                     __pivt0x8:
 35837                           	opt callstack 0
 35838  000008                     ivt0x8_base:
 35839                           	opt callstack 0
 35840                           
 35841                           ; Vector 0 : SWINT
 35842  000008  7056               	dw	_Default_ISR shr (0+2)
 35843                           
 35844                           ; Vector 1 : HLVD
 35845  00000A  7056               	dw	_Default_ISR shr (0+2)
 35846                           
 35847                           ; Vector 2 : OSF
 35848  00000C  7056               	dw	_Default_ISR shr (0+2)
 35849                           
 35850                           ; Vector 3 : CSW
 35851  00000E  7056               	dw	_Default_ISR shr (0+2)
 35852                           
 35853                           ; Vector 4 : NVM
 35854  000010  7056               	dw	_Default_ISR shr (0+2)
 35855                           
 35856                           ; Vector 5 : SCAN
 35857  000012  7056               	dw	_Default_ISR shr (0+2)
 35858                           
 35859                           ; Vector 6 : CRC
 35860  000014  7056               	dw	_Default_ISR shr (0+2)
 35861                           
 35862                           ; Vector 7 : IOC
 35863  000016  7056               	dw	_Default_ISR shr (0+2)
 35864                           
 35865                           ; Vector 8 : INT0
 35866  000018  7030               	dw	_INT0_ISR shr (0+2)
 35867                           
 35868                           ; Vector 9 : ZCD
 35869  00001A  7056               	dw	_Default_ISR shr (0+2)
 35870                           
 35871                           ; Vector 10 : AD
 35872  00001C  6E9B               	dw	_ADCC_ISR shr (0+2)
 35873                           
 35874                           ; Vector 11 : ADT
 35875  00001E  6BCB               	dw	_ADCC_ThresholdISR shr (0+2)
 35876                           
 35877                           ; Vector 12 : CMP1
 35878  000020  7056               	dw	_Default_ISR shr (0+2)
 35879                           
 35880                           ; Vector 13 : SMT1
 35881  000022  7056               	dw	_Default_ISR shr (0+2)
 35882                           
 35883                           ; Vector 14 : SMT1PRA
 35884  000024  7056               	dw	_Default_ISR shr (0+2)
 35885                           
 35886                           ; Vector 15 : SMT1PRW
 35887  000026  7056               	dw	_Default_ISR shr (0+2)
 35888                           
 35889                           ; Vector 16 : DMA1SCNT
 35890  000028  7034               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35891                           
 35892                           ; Vector 17 : DMA1DCNT
 35893  00002A  703D               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35894                           
 35895                           ; Vector 18 : DMA1OR
 35896  00002C  7043               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35897                           
 35898                           ; Vector 19 : DMA1A
 35899  00002E  7040               	dw	_DMA1_DMAA_ISR shr (0+2)
 35900                           
 35901                           ; Vector 20 : SPI1RX
 35902  000030  7056               	dw	_Default_ISR shr (0+2)
 35903                           
 35904                           ; Vector 21 : SPI1TX
 35905  000032  7056               	dw	_Default_ISR shr (0+2)
 35906                           
 35907                           ; Vector 22 : SPI1
 35908  000034  7056               	dw	_Default_ISR shr (0+2)
 35909                           
 35910                           ; Vector 23 : I2C1RX
 35911  000036  7056               	dw	_Default_ISR shr (0+2)
 35912                           
 35913                           ; Vector 24 : I2C1TX
 35914  000038  7056               	dw	_Default_ISR shr (0+2)
 35915                           
 35916                           ; Vector 25 : I2C1
 35917  00003A  7056               	dw	_Default_ISR shr (0+2)
 35918                           
 35919                           ; Vector 26 : I2C1E
 35920  00003C  7056               	dw	_Default_ISR shr (0+2)
 35921                           
 35922                           ; Vector 27 : U1RX
 35923  00003E  6F34               	dw	_UART1_rx_vect_isr shr (0+2)
 35924                           
 35925                           ; Vector 28 : U1TX
 35926  000040  7056               	dw	_Default_ISR shr (0+2)
 35927                           
 35928                           ; Vector 29 : U1E
 35929  000042  7056               	dw	_Default_ISR shr (0+2)
 35930                           
 35931                           ; Vector 30 : U1
 35932  000044  7056               	dw	_Default_ISR shr (0+2)
 35933                           
 35934                           ; Vector 31 : TMR0
 35935  000046  7056               	dw	_Default_ISR shr (0+2)
 35936                           
 35937                           ; Vector 32 : TMR1
 35938  000048  7056               	dw	_Default_ISR shr (0+2)
 35939                           
 35940                           ; Vector 33 : TMR1G
 35941  00004A  7056               	dw	_Default_ISR shr (0+2)
 35942                           
 35943                           ; Vector 34 : TMR2
 35944  00004C  7056               	dw	_Default_ISR shr (0+2)
 35945                           
 35946                           ; Vector 35 : CCP1
 35947  00004E  7056               	dw	_Default_ISR shr (0+2)
 35948                           
 35949                           ; Vector 36 : Undefined
 35950  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35951                           
 35952                           ; Vector 37 : NCO1
 35953  000052  7056               	dw	_Default_ISR shr (0+2)
 35954                           
 35955                           ; Vector 38 : CWG1
 35956  000054  7056               	dw	_Default_ISR shr (0+2)
 35957                           
 35958                           ; Vector 39 : CLC1
 35959  000056  7056               	dw	_Default_ISR shr (0+2)
 35960                           
 35961                           ; Vector 40 : INT1
 35962  000058  6DF3               	dw	_INT1_ISR shr (0+2)
 35963                           
 35964                           ; Vector 41 : CMP2
 35965  00005A  7056               	dw	_Default_ISR shr (0+2)
 35966                           
 35967                           ; Vector 42 : DMA2SCNT
 35968  00005C  7056               	dw	_Default_ISR shr (0+2)
 35969                           
 35970                           ; Vector 43 : DMA2DCNT
 35971  00005E  7056               	dw	_Default_ISR shr (0+2)
 35972                           
 35973                           ; Vector 44 : DMA2OR
 35974  000060  7056               	dw	_Default_ISR shr (0+2)
 35975                           
 35976                           ; Vector 45 : DMA2A
 35977  000062  7056               	dw	_Default_ISR shr (0+2)
 35978                           
 35979                           ; Vector 46 : I2C2RX
 35980  000064  7056               	dw	_Default_ISR shr (0+2)
 35981                           
 35982                           ; Vector 47 : I2C2TX
 35983  000066  7056               	dw	_Default_ISR shr (0+2)
 35984                           
 35985                           ; Vector 48 : I2C2
 35986  000068  7056               	dw	_Default_ISR shr (0+2)
 35987                           
 35988                           ; Vector 49 : I2C2E
 35989  00006A  7056               	dw	_Default_ISR shr (0+2)
 35990                           
 35991                           ; Vector 50 : U2RX
 35992  00006C  6F48               	dw	_UART2_rx_vect_isr shr (0+2)
 35993                           
 35994                           ; Vector 51 : U2TX
 35995  00006E  6F3E               	dw	_UART2_tx_vect_isr shr (0+2)
 35996                           
 35997                           ; Vector 52 : U2E
 35998  000070  7056               	dw	_Default_ISR shr (0+2)
 35999                           
 36000                           ; Vector 53 : U2
 36001  000072  7056               	dw	_Default_ISR shr (0+2)
 36002                           
 36003                           ; Vector 54 : TMR3
 36004  000074  6453               	dw	_TMR3_ISR shr (0+2)
 36005                           
 36006                           ; Vector 55 : TMR3G
 36007  000076  7056               	dw	_Default_ISR shr (0+2)
 36008                           
 36009                           ; Vector 56 : TMR4
 36010  000078  7056               	dw	_Default_ISR shr (0+2)
 36011                           
 36012                           ; Vector 57 : CCP2
 36013  00007A  7056               	dw	_Default_ISR shr (0+2)
 36014                           
 36015                           ; Vector 58 : Undefined
 36016  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36017                           
 36018                           ; Vector 59 : CWG2
 36019  00007E  7056               	dw	_Default_ISR shr (0+2)
 36020                           
 36021                           ; Vector 60 : CLC2
 36022  000080  7056               	dw	_Default_ISR shr (0+2)
 36023                           
 36024                           ; Vector 61 : INT2
 36025  000082  7056               	dw	_Default_ISR shr (0+2)
 36026                           
 36027                           ; Vector 62 : Undefined
 36028  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36029                           
 36030                           ; Vector 63 : Undefined
 36031  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36032                           
 36033                           ; Vector 64 : Undefined
 36034  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36035                           
 36036                           ; Vector 65 : Undefined
 36037  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36038                           
 36039                           ; Vector 66 : Undefined
 36040  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36041                           
 36042                           ; Vector 67 : Undefined
 36043  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36044                           
 36045                           ; Vector 68 : Undefined
 36046  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36047                           
 36048                           ; Vector 69 : Undefined
 36049  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36050                           
 36051                           ; Vector 70 : TMR5
 36052  000094  6833               	dw	_TMR5_ISR shr (0+2)
 36053                           
 36054                           ; Vector 71 : TMR5G
 36055  000096  7056               	dw	_Default_ISR shr (0+2)
 36056                           
 36057                           ; Vector 72 : TMR6
 36058  000098  6FE5               	dw	_TMR6_ISR shr (0+2)
 36059                           
 36060                           ; Vector 73 : CCP3
 36061  00009A  7056               	dw	_Default_ISR shr (0+2)
 36062                           
 36063                           ; Vector 74 : CWG3
 36064  00009C  7056               	dw	_Default_ISR shr (0+2)
 36065                           
 36066                           ; Vector 75 : CLC3
 36067  00009E  7056               	dw	_Default_ISR shr (0+2)
 36068                           
 36069                           ; Vector 76 : Undefined
 36070  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36071                           
 36072                           ; Vector 77 : Undefined
 36073  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36074                           
 36075                           ; Vector 78 : Undefined
 36076  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36077                           
 36078                           ; Vector 79 : Undefined
 36079  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36080                           
 36081                           ; Vector 80 : CCP4
 36082  0000A8  7056               	dw	_Default_ISR shr (0+2)
 36083                           
 36084                           ; Vector 81 : CLC4
 36085  0000AA  7056               	dw	_Default_ISR shr (0+2)
 36086  0000AC                     ivt0x8_undefint:
 36087                           	opt callstack 0
 36088  0000AC  00FF               	reset	
 36089                           
 36090                           	psect	text179
 36091  000000                     __ptext179:
 36092                           	opt callstack 0
 36093                           
 36094                           	psect	rparam
 36095  0000                     
 36096                           	psect	temp
 36097  000001                     btemp:
 36098                           	opt callstack 0
 36099  000001                     	ds	32
 36100  0000                     wtemp0	set	btemp
 36101  0000                     wtemp1	set	btemp+2
 36102  0000                     wtemp2	set	btemp+4
 36103  0000                     wtemp3	set	btemp+6
 36104  0000                     wtemp4	set	btemp+8
 36105  0000                     wtemp5	set	btemp+10
 36106  0000                     wtemp8	set	btemp+1
 36107  0000                     ttemp0	set	btemp
 36108  0000                     ttemp1	set	btemp+3
 36109  0000                     ttemp2	set	btemp+6
 36110  0000                     ttemp3	set	btemp+9
 36111  0000                     ttemp5	set	btemp+1
 36112  0000                     ttemp6	set	btemp+4
 36113  0000                     ttemp7	set	btemp+8
 36114  0000                     ltemp0	set	btemp
 36115  0000                     ltemp1	set	btemp+4
 36116  0000                     ltemp2	set	btemp+8
 36117  0000                     lltemp0	set	btemp
 36118  0000                     lltemp1	set	btemp+8
 36119  0000                     lltemp2	set	btemp+16
 36120  0000                     lltemp3	set	btemp+24
 36121                           tosu	equ	0x3FFF
 36122                           tosh	equ	0x3FFE
 36123                           tosl	equ	0x3FFD
 36124                           stkptr	equ	0x3FFC
 36125                           pclatu	equ	0x3FFB
 36126                           pclath	equ	0x3FFA
 36127                           pcl	equ	0x3FF9
 36128                           tblptru	equ	0x3FF8
 36129                           tblptrh	equ	0x3FF7
 36130                           tblptrl	equ	0x3FF6
 36131                           tablat	equ	0x3FF5
 36132                           prodh	equ	0x3FF4
 36133                           prodl	equ	0x3FF3
 36134                           indf0	equ	0x3FEF
 36135                           postinc0	equ	0x3FEE
 36136                           postdec0	equ	0x3FED
 36137                           preinc0	equ	0x3FEC
 36138                           plusw0	equ	0x3FEB
 36139                           fsr0h	equ	0x3FEA
 36140                           fsr0l	equ	0x3FE9
 36141                           wreg	equ	0x3FE8
 36142                           indf1	equ	0x3FE7
 36143                           postinc1	equ	0x3FE6
 36144                           postdec1	equ	0x3FE5
 36145                           preinc1	equ	0x3FE4
 36146                           plusw1	equ	0x3FE3
 36147                           fsr1h	equ	0x3FE2
 36148                           fsr1l	equ	0x3FE1
 36149                           bsr	equ	0x3FE0
 36150                           indf2	equ	0x3FDF
 36151                           postinc2	equ	0x3FDE
 36152                           postdec2	equ	0x3FDD
 36153                           preinc2	equ	0x3FDC
 36154                           plusw2	equ	0x3FDB
 36155                           fsr2h	equ	0x3FDA
 36156                           fsr2l	equ	0x3FD9
 36157                           status	equ	0x3FD8


Data Sizes:
    Strings     1064
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), 
		 -> STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), 
		 -> STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[22]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[23]), STR_34(CODE[23]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6155_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[22]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[23]), STR_34(CODE[23]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), 
		 -> STR_25(CODE[22]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4592tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  477873
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10397
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 17 00:26:00 2020

                     _SPI1_Exchange8bit BEC8                __end_of_set_display_info BF40  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FABB                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BC06            __end_of_start_switch_handler BEA8  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FBC3                  __end_of_FVR_Initialize C13E  
                        _check_day_time 883A                             __CFG_LVP$ON 000000  
                                   l169 C01A                                     l807 BED6  
                                   l673 BABE                                     _GIE 01FE97  
                                   _abs B538                                     _pad 99DC  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize BFC6  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BDFC  
                     _update_adc_result B80A                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack BD90  
                          __CFG_ZCD$OFF 000000                                    l1002 B784  
                                  l2033 3A68                                    l1340 18FE  
                                  l1324 12A2                                    l2037 3D6E  
                                  l3013 45A2                                    l1190 B7C4  
                                  l1350 19A0                                    l1342 1904  
                                  l2223 066A                                    l2312 6106  
                                  l1360 1BA6                                    l1361 1DD0  
                                  l2138 9A38                                    l3115 7BB8  
                                  l1603 B8CC                         _timer3ReloadVal 00C4  
                                  l3053 8674                                    l2158 58D4  
                                  l2238 0B1A                                    l1366 2360  
                                  l2079 740C                                    l2194 123A  
                                  l2362 3342                                    l1459 B1E8  
                                  l3084 B578                                    l3076 8B66  
                                  l2276 74FA                                    l1662 B860  
                                  l1719 BF3C                                    l1671 831A  
                                  l1832 8830                                    l1584 A788  
                                  l3184 98BA                                    l1672 8476  
                                  l2297 682C                                    l3451 825E  
                                  l1588 AAA2                                    l1781 57F0  
                                  l2654 A410                    _ADCC_StartConversion C034  
                                  l1679 9BFC                                    l2665 9140  
                                  l2658 906C                                    l3466 AD52  
                                  l1892 89D0                                    l2932 4D5E  
                                  l2692 8FDE                                    l1958 ABC8  
                                  l3479 ACCE                                    l1967 9E08  
                                  l1879 9FFA                                    l1896 89C8  
                                  l2944 4BEE                                    l8002 B568  
                                  l8020 8B08                                    l8100 ACBE  
                                  l8016 8B04                                    l2977 52D8  
                                  l8202 4DFE                                    l8122 7784  
                                  l8026 8B5E                                    l8140 789C  
                                  l8116 7730                                    l8044 AD42  
                                  l8302 519E                                    l8222 4EDC  
                                  l8206 4E14                                    l8240 4F9A  
                                  l8216 4E9C                                    l8208 4E44  
                                  l8128 77CA                                    l8160 7E66  
                                  l8072 66B8                                    l8322 5254  
                                  l8306 51A4                                    l8234 4F60  
                                  l8226 4EF2                                    l8082 67BE  
                                  l8074 6708                                    l8058 659A  
                                  l8316 5218                                    l8228 4F22  
                                  l8334 52AC                                    l8078 6750  
                                  l8440 4396                                    l8360 3E1E  
                                  l8352 3DD8                                    l7800 494A  
                                  l8336 52BC                                    l8328 5284  
                                  l8248 4FB4                                    l8176 7F9A  
                                  l8168 7EEE                                    l8520 92E8  
                                  l8450 43D8                                    l8370 3EA6  
                                  l8362 3E4E                                    l7810 4986  
                                  l7730 4688                                    l8610 902A  
                                  l8282 5112                                    l8274 50E0  
                                  l8266 507A                                    l8258 5044  
                                  l9330 7A2A                                    l9314 7968  
                                  l8514 92D2                                    l8602 A40E  
                                  l8460 4422                                    l8380 3F1C  
                                  l7804 496A                                    l7724 4642  
                                  l8620 9108                                    l8292 5154  
                                  l8268 508C                                    l8276 50E4  
                                  l8196 4DBE                                    l9340 7B0C  
                                  l9332 7A42                                    l9324 79FE  
                                  l9316 798A                                    l8540 93AE  
                                  l8446 43B2                                    l8358 3E18  
                                  l7806 497C                                    l7814 49B6  
                                  l7742 46F2                                    l7718 4602  
                                  l9350 7BA8                                    l9334 7A66  
                                  l8526 9308                                    l8710 9436  
                                  l8464 4428                                    l8376 3EE6  
                                  l7920 4D0E                                    l7904 4CBA  
                                  l7832 4A52                                    l7760 479A  
                                  l7752 4748                                    l7736 46C0  
                                  l7728 4658                                    l8616 90BA  
                                  l8288 512E                                    l9336 7AA4  
                                  l8560 98E4                                    l8474 449C  
                                  l8378 3EEC                                    l7914 4CE6  
                                  l7834 4A64                                    l7842 4AA0  
                                  l7754 4778                                    l7690 A904  
                                  l8492 4550                                    l8484 450C  
                                  l8388 3F3E                                    l7748 4732  
                                  l8628 913E                                    l7692 A926  
                                  l8548 93E2                                    l8564 98F6  
                                  l8636 B436                                    l8494 456A  
                                  l8478 44E2                                    l7926 4D3E  
                                  l7918 4CFE                                    l7854 4B78  
                                  l7838 4A6E                                    l7790 48D8  
                                  l8734 B2D4                                    l8670 8F76  
                                  l8662 8F4A                                    l8646 8EC8  
                                  l9366 80D0                                    l8718 94E2  
                                  l7872 4C10                                    l7864 4BD2  
                                  l7856 4B9E                                    l9632 8530  
                                  l9624 84C4                                    l9704 55A6  
                                  l8568 990E                                    l8672 8F8C  
                                  l8664 8F66                                    l9368 813C  
                                  l7874 4C22                                    l9634 853E  
                                  l9722 57BE                                    l9730 57D0  
                                  l8586 99C2                                    l8578 998E  
                                  l8594 A398                                    l7892 4C5C  
                                  l9644 85A0                                    l9636 8554  
                                  l9716 5722                                    l9708 5642  
                                  l7878 4C2E                                    l9646 85BE  
                                  l9638 8572                                    l8598 A3DA  
                                  l8686 8D44                                    l7888 4C56  
                                  l9656 85F2                                    l9648 85D4  
                                  l9666 8654                                    l9682 5314  
                                  l8698 8E16                                    l9836 8904  
                                  l9692 5466                                    l9676 52E4  
                                  l9748 BB36                                    l9924 BA52  
                                  STR_1 FF1E                                    l9848 8976  
                                  l9696 5574                                    STR_2 FF09  
                                  STR_3 FFD2                                    l9866 B8D6  
                                  STR_4 FECA                                    STR_5 FEA0  
                                  STR_6 FEA0                                    STR_7 FEA0  
                                  l9958 B310                                    STR_8 FEB5  
                                  STR_9 FC84                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6110 6532                                    u5400 A954  
                                  u7000 9334                                    u6040 8B56  
                                  u6120 657E                                    u6050 8B58  
                                  u6210 B5FC                                    _T6PR 003F93  
                                  u6035 8B38                                    u6115 6528  
                                  u7020 93CE                                    u6220 B5FE  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u6310 7780                                    u5430 B9D6  
                                  u6230 AC7C                                    _PMD2 0039C2  
                                  u5407 A946                                    _PMD3 0039C3  
                                  u5600 49CE                                    u7200 8EA8  
                                  u6160 665E                                    u5440 B9D8  
                                  u6080 AD00                                    u6240 AC7E  
                                  _PMD4 0039C4                                    u6321 778A  
                                  u6145 65B8                                    _PMD5 0039C5  
                                  u6330 77C4                                    u6410 7E60  
                                  u7130 A40A                                    u7210 8EBC  
                                  u6146 65BE                                    u6090 AD02  
                                  _PMD6 0039C6                                    u6147 65CC  
                                  _PMD7 0039C7                                    u5700 4BC0  
                                  u5540 48FE                                    u6260 BA06  
                                  u6340 77F6                                    u7220 8EF6  
                                  u6180 6736                                    u7205 8E9E  
                                  u6165 6654                                    u7301 8D04  
                                  u5550 491E                                    u6270 BA08  
                                  u6430 7EB6                                    u7070 993A  
                                  u7310 8D3E                                    u5551 4918  
                                  u5800 4CAA                                    u6360 78D4  
                                  u6440 7EE8                                    u7320 8D70  
                                  u7225 8EEC                                    u6185 672C  
                                  u7410 B2B0                                    u6290 772A  
                                  u6450 7F1A                                    u7090 99AE  
                                  u5740 4C34                                    u5660 4A96  
                                  u7420 B2D0                                    u6380 7926  
                                  u7340 8E4E                                    u5805 4C9A  
                                  u5830 4CCA                                    u5590 49AE  
                                  u6710 51F2                                    u6630 510C  
                                  u9030 85E8                                    u6470 7FD2  
                                  u7190 B432                                    u7270 8F94  
                                  u5760 4C4E                                    u5568 4920  
                                  u6720 522C                                    u7360 9430  
                                  u5665 4A86                                    u6730 5268  
                                  u9114 5350                                    u6490 8024  
                                  u7290 8FBE                                    u7370 9462  
                                  u5595 499E                                    u6715 51E2  
                                  u9115 534A                                    u6820 3F2C  
                                  u6670 5196                                    u9134 558E  
                                  u7390 951A                                    u5870 B9A6  
                                  u9135 5588                                    u8520 79FA  
                                  u5880 B9A8                                    u9410 AFA4  
                                  u6930 4476                                    u9154 565C  
                                  u9074 52FE                                    u6835 40C0  
                                  u9155 5656                                    u9075 52F8  
                                  u6940 44B0                                    u9180 5686  
                                  u8540 7B52                                    u5980 B54C  
                                  u6845 4188                                    u6950 44F6  
                                  u9174 567E                                    u9094 532E  
                                  u8550 7B54                                    u5990 8A88  
                                  u8630 8204                                    u6935 4466  
                                  u6855 4350                                    u9175 5678  
                                  u9095 5328                                    u8640 8232  
                                  u6890 441A                                    u9530 8694  
                                  u9435 AFD8                                    u9355 B638  
                                  u5995 8A7E                                    u8635 81FE  
                                  u9436 AFDA                                    u9428 AFA6  
                                  u9620 BE72                                    u8637 81F0  
                                  u8590 816A                                    u9710 AB6E  
                                  u8647 8224                                    u9626 BE74  
                                  _PLLR 01CEE0                                    u9740 ABB4  
                                  u8597 815C                                    u9485 C060  
                                  u9486 C062                                    u9495 C050  
                                  u9496 C052                                    u9728 AB70  
                                  u9758 ABB6                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BA98  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FBD3                                    _cp_l FBCF  
                                  _atoi 794E                                    _ctoa ABCC  
                                  _main 1244                                    _dtoa 57F6  
                                  _nanf B0C2                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FB4B                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 7410                                    btemp 0001  
                                  _utoa 67E8                                    _xtoa 60C2  
                __end_of_check_adc_scan C126                           ___fpclassifyf 89DA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BEE6               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B4F0             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BCD0                            ___param_bank 000000  
                __end_of_check_day_time 89DA                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C0CE                        __end_of_INT1_ISR B80A  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A790  
         __end_of_OSCILLATOR_Initialize C020                                   l11002 A518  
                                 l12002 00AC                                   l10420 86E2  
                                 l10412 86B6                                   l12100 0594  
                                 l11052 9D16                                   l11046 60B4  
                                 l12110 0602                                   l12014 00F0  
                                 l12022 0146                                   l10352 B36E  
                                 l11152 AD94                                   l10424 86F6  
                                 l12032 01EA                                   l12040 0258  
                                 l10504 B82A                                   l11064 9D72  
                                 l12130 06F0                                   l12050 02FC  
                                 l12034 0216                                   l11074 9DE2  
                                 l10348 B33C                                   l10532 9554  
                                 l11092 B742                                   l12204 0D24  
                                 l12212 0D90                                   l12220 0EA2  
                                 l12108 05F6                                   l12036 022C  
                                 l13100 146E                                   l11158 ADA4  
                                 l10534 9564                                   l10462 B876  
                                 l12126 06B8                                   l12070 0406  
                                 l10560 9658                                   l10552 95DE  
                                 l10536 9572                                   l10544 957A  
                                 l12232 0F3A                                   l12160 0A48  
                                 l12136 077A                                   l12072 0470  
                                 l12320 7530                                   l12304 747C  
                                 l13200 19B2                                   l10546 95A6  
                                 l12170 0B34                                   l12146 0926  
                                 l12066 0396                                   l12058 032A  
                                 l12402 6130                                   l13050 12BC  
                                 l13042 1284                                   l12092 057C  
                                 l12076 04D2                                   l12324 756C  
                                 l10572 AB82                                   l13212 1AB2  
                                 l13044 128C                                   l10726 BF58  
                                 l12246 0FD6                                   l12094 058E  
                                 l12342 768E                                   l12334 7626  
                                 l10662 A42C                                   l12248 0FF0  
                                 l12184 0C32                                   l12168 0B12  
                                 l12088 0554                                   l12328 759C  
                                 l12432 62C2                                   l12416 61CC  
                                 l12408 616C                                   l12440 6348  
                                 l12520 2654                                   l10920 716A  
                                 l13224 1FF2                                   l13240 2214  
                                 l13048 12AA                                   l10738 BABA  
                                 l12258 1092                                   l12338 7652  
                                 l12602 2D36                                   l10922 716E  
                                 l10666 A4A8                                   l13170 1936  
                                 l13146 16D6                                   l10764 B76C  
                                 l12284 119A                                   l12268 10E2  
                                 l12196 0CBA                                   l12364 6878  
                                 l12356 681C                                   l12612 2DE4  
                                 l12516 2604                                   l10932 71AA  
                                 l13228 2054                                   PRLOCK 0039EF  
                                 l10782 B7AC                                   l11814 97D0  
                                 l11830 A9CE                                   l12374 6A6E  
                                 l12622 2F06                                   l12518 263E  
                                 l10918 715A                                   l13254 2266  
                                 l13238 21E8                                   l13190 1990  
                                 l13182 196A                                   l13158 17B0  
                                 l12456 6432                                   l12632 2FBC  
                                 l12536 27B8                                   l10944 71FC  
                                 l10928 719E                                   l13168 1908  
                                 l10882 8CD0                                   l11826 A990  
                                 l12570 2AEA                                   l12554 293C  
                                 l12546 2850                                   l12714 A666  
                                 l10938 71D4                                   l10890 A016  
                                 l13282 2310                                   l13274 22DA  
                                 l13258 228A                                   l11916 ABEA  
                                 l12396 60F6                                   l12660 3270  
                                 l12716 A6A8                                   l11852 6FAA  
                                 l12740 A79C                                   l10964 727C  
                                 l10956 7256                                   l10948 7208  
                                 l13276 22F2                                   l13268 22C8  
                                 l12830 3562                                   l12822 348A  
                                 l11918 AC16                                   l11950 590E  
                                 l11942 58C4                                   l12670 32CE  
                                 l12646 3138                                   l12582 2BD6  
                                 l12558 2990                                   l12494 2482  
                                 l11846 6EEC                                   l12742 A7A6  
                                 l12750 A7BC                                   l13286 2336  
                                 l12496 24BC                                   l12744 A7B4  
                                 l12752 A7E8                                   l10896 A0BC  
                                 l13296 238C                                   l12842 36B8  
                                 l12826 34F6                                   l12818 3436  
                                 l11882 9A30                                   l11954 592C  
                                 l12666 32CA                                   l12578 2BA2  
                                 l12498 24D2                                   l11866 70C2  
                                 l11858 7014                                   l12738 A794  
                                 l10986 73D4                                   l12852 390A  
                                 l11892 9AC8                                   l11884 9A42  
                                 l11964 5B3E                                   l12676 32EE  
                                 l10988 73FC                                   l12862 3A78  
                                 l12838 3664                                   l11878 9A08  
                                 l12694 A890                                   l12774 9B14  
                                 l10998 A4DA                                   l12848 3890  
                                 l11888 9A7E                                   l11984 5BF0  
                                 l12866 3A9A                                   l12858 39D0  
                                 l11898 A2CA                                   l11988 5C2C  
                                 l12980 82EA                                   l12878 3D66  
                                 l12994 8412                         __end_of___aodiv 794E  
                          _Volts_to_SOC A41A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D68  
                                 _ADCLK 003EFF                         __end_of___aomod 8048  
                                 _ADPCH 003EF1                         __end_of___fldiv 52E2  
                                 _ADREF 003EFD                         __end_of___awdiv 93FC  
                       __end_of___flneg B460                                   STR_10 FD56  
                                 STR_11 FE32                                   STR_12 FEDF  
                                 STR_21 FF83                                   STR_13 FEF4  
                                 STR_14 FF48                                   STR_30 FE5E  
                                 STR_22 FE1C                                   STR_15 FF33  
                                 STR_23 FE06                                   STR_31 FD6C  
                                 STR_40 FE8A                                   STR_24 FDF0  
                                 STR_32 FD82                                   STR_16 FD40  
                                 STR_41 FE8A                                   STR_25 FDDA  
                                 STR_33 FD98                                   STR_17 FC50  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FE8A                                   STR_26 FDC4  
                                 STR_34 FCE4                                   STR_18 FC6A  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FDAE  
                                 STR_35 FD29                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FE74  
                                 STR_36 FCCD                         __end_of___awmod 99DC  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FE48                                   STR_37 FCB6  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FCFB                                   STR_54 FC9E  
                                 STR_63 FC4F                                   STR_47 FF5D  
                                 STR_39 FD12                                   STR_48 FF5D  
                                 STR_56 FF70                                   STR_64 FBD7  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 45AC  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub B5C4                         __end_of___fltol 8FE8  
                                 u11000 5BAC                                   u11010 5BB0  
                                 u11100 0194                                   u11030 5BC6  
                                 u11110 0196                                   u12010 269C  
                                 u11220 0562                                   u11140 02A6  
                                 u12100 2A18                                   u12020 269E  
                                 u11150 02A8                                   u11070 00DA  
                                 u12030 26C4                                   u12200 3010  
                                 u11250 05C6                                   u12130 2C90  
                       __end_of___lodiv 8E76                                   u12220 31C0  
                                 u12140 2C92                                   u10710 97C4  
                                 u11190 050E                                   u11520 10B8  
                                 u11360 0A18                                   u12080 28A4  
                                 u12240 A870                                   u10730 9840  
                                 u11290 0648                                   _U1P1H 003DED  
                                 u10900 5828                                   u11540 116E  
                                 u11460 0EE4                                   u11620 7592  
                                 u12500 8462                                   _U1P2H 003DEF  
                                 u11550 1170                                   u11630 75D8  
                                 u12510 8464                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u11711 6AB0  
                                 _T3CLK 003FA9                                   u10920 5898  
                                 u10840 A344                                   u11720 6AC6  
                                 u11800 6218                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11721 6AC4  
                                 u11730 6ADA                                   u11810 621A  
                                 _U1P3L 003DF0                                   u10940 58AA  
                                 u11660 76B4                                   u11740 6ADE  
                                 u11900 63BE                                   u12700 2282  
                                 u11637 75CA                                   u11910 63C2  
                                 u11830 6278                                   u10790 7136  
                                 _U2P1L 003DD4                                   u10847 A336  
                                 u10960 58FA                                   u11680 6802  
                                 u11840 627A                                   u11760 60DC  
                                 u12560 1588                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u10970 5B52  
                                 u10890 5826                                   u12706 2284  
                                 _U2P3L 003DD8                                   u11860 6344  
                                 u12580 17DE                                   u10981 5B82  
                                 u10990 5B98                                   u11870 6364  
                                 u11790 61C4                                   u10991 5B96  
                                 _T5CLK 003F9D                                   u11960 251A  
                                 u12680 2256                         __end_of___lomod 953C  
                                 u11881 6394                                   u11865 6326  
                                 u11890 63AA                                   u11970 251C  
                                 u12690 2270                                   u11891 63A8  
                                 u11980 2542                                   _T2HLT 003FAD  
                                 u12686 2258                                   u12696 2272  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B844  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C158                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 92AE  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A1AE                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR BFAE                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A58C  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C0BE                                   _fputc 97A0  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha B608  
                                 _fputs A980                         __end_of_isdigit BA12  
                       __end_of_ivln2_h FBCF                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B8EA                                   _width 003A  
                                 _putch BF7A            __end_of_set_ac_charger_relay C086  
                       __end_of_islower B9B2                         __end_of_isspace B2E4  
              _INT1_SetInterruptHandler BC2E                         __end_of_isupper B9E2  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BBB6             _UART1_SetRxInterruptHandler BB8E  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9D0A  
                       __end_of_tolower AD5C                         __end_of_strncmp 8268  
                       __end_of_toupper ACD8               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BCF8                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B4A8                   __end_of_ringBufS_init BB16  
                       __initialization A1AE                       _UART2_rx_vect_isr BD20  
                          __end_of_cp_h FBD7                            __end_of_cp_l FBD3  
                          __end_of_atoi 7BC2                            __end_of_ctoa AC54  
                          __end_of_main 23A0                            __end_of_dtoa 5C76  
                          __end_of_nanf B124                            __end_of_spin FBC3  
                          __end_of_stoa 76CE                            __end_of_utoa 6B28  
                          __end_of_xtoa 647C                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize BFDE  
                 __end_of_send_lcd_data BD6C                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B74A                _TMR5_SetInterruptHandler BBDE  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr C0E8  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BAC4  
                       _PWM8_Initialize BFF4                        _UART1_Initialize B460  
                     _UART2_tx_vect_isr BCF8                      _UART2_Transmit_ISR BA98  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan AFFC  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B608  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A15E                                  _RB6PPS 003A0E  
                                i1l1207 9216                    _start_switch_handler BE88  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B538                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C0A2  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u921_25 C080                                  u921_26 C082  
                                u940_20 C0BA                                  u926_20 8890  
                                u947_20 B884                                  u947_26 B886  
                                u964_20 956E                                  u963_28 955A  
                                u964_21 9568                    __size_of_hid_display 0102  
                                u968_24 964E                                  u968_25 964A  
                                u993_48 BE0C                                  u995_28 BDA0  
                      __end_of___xxtofl 867E   __end_of_ADCC_DischargeSampleCapacitor C11E  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor C116  
              __end_of_send_lcd_cmd_dma BF04                         _TMR3_WriteTimer B78A  
                   ??_UART2_tx_vect_isr 0026               __end_of_UART2_rx_vect_isr BD48  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize C0DE  
                      _UART2_Initialize B124                                  _WaitMs B8B4  
                       _conv_raw_result 52E2                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 8FE8  
                                ___fleq A356                       _ADCC_ThresholdISR AF2C  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush AA18  
                                _efgtoa 0000                                  _floorf 647C  
                    ?_ADCC_ThresholdISR 0021                                  _memset 6E54  
                  __size_of_help_button 0038                                  clear_0 A220  
                                clear_1 A234                                  clear_2 A246  
                                clear_3 A252                                  clear_4 A25E  
                                clear_5 A26A               __end_of_port_data_dma_ptr C0F2  
                                _printf B060                      _eaDogM_WriteString A838  
                                _strcpy A282                               ?_ADCC_ISR 0021  
                                _strlen A8DE                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 04FF                         _ADCC_Initialize AEC0  
                        _PMD_Initialize C020              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr BD20                                  lltemp0 0001  
                                lltemp1 0009                                  lltemp2 0011  
                                lltemp3 0019                     ??_ADCC_ThresholdISR 0021  
                __end_of_start_adc_scan B060                            __mediumconst F9EA  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay B238  
                      __end_of_spinners A0CC                        __end_of_vfprintf A6E6  
                            _StartTimer B6CA                      __size_of___asfladd 0078  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize B4F0  
                     _SYSTEM_Initialize B3CE                              __accesstop 0060  
               __end_of__initialization A27C                               ?_INT0_ISR 0021  
                             ?_INT1_ISR 0021                    __end_of_display_help C136  
                  __end_of_display_info C12E               __end_of_CLKREF_Initialize C0E8  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer B74A                   _set_temp_display_help C066  
                      _clear_hid_pflags BD6C                   __end_of_TMR3_CallBack BDFC  
             __end_of_ADCC_ThresholdISR AF96                      __size_of_calc_bsoc 0A36  
                __end_of_ringBufS_flush AAAA                          __pcstackCOMRAM 0021  
                            ___inthi_sp 115E                              ___intlo_sp 18AF  
                          __pidataBANK0 C086                            __pidataBANK1 9E0C  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf A63A  
                             ?_TMR3_ISR 0021                               ?_TMR5_ISR 0021  
                             ?_TMR6_ISR 0021                          ivt0x8_undefint 00AC  
                         __end_of_fputc 98C4                           __end_of_fputs AA18  
                  _get_ac_charger_relay C0B0                           __end_of_srand B91E  
                 __end_of_TMR5_CallBack BDD8                           __end_of_putch BF94  
                  _set_ac_charger_relay C076                 __end_of_PWM8_Initialize C00A  
               __end_of_TMR6_Initialize BAEE                       _adc_int_t_handler AD5C  
                __end_of_PMD_Initialize C034                              __end_of_bp FBCB  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack BE44  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0041  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR C100  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan C13E  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize B418  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer B7CA                              __pbssBANK0 0060  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              _check_help 8268  
               __end_of_conv_raw_result 57F6                      __size_of_esr_check 02D0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone BB3E  
                      _DMA1_DMADCNT_ISR C0F4                      __size_of_init_bsoc 0246  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma B952  
                 __end_of_wait_lcd_done BF7A        __end_of_TMR3_SetInterruptHandler BC2E  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler BBDE  
                            ??_TMR3_ISR 00D7                 __end_of_ADCC_Initialize AF2A  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler ADDE  
                            ??_TMR6_ISR 0026                       __end_of___asfladd AE56  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler BCA6   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler BC7E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR BF40                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan C144  
                               u1001_48 BE30                                 u1004_28 BDC4  
                               u1033_44 ADC4                                 u1033_45 ADBE  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C0D0  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 u1236_20 39C0  
                               u1243_28 BDE8                                 _U2ERRIE 003DE2  
                               u1238_20 3A8A                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D82  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BA40  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B78A  
               __size_of_switch_handler 0136                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C066              __end_of_set_load_relay_two C056  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8B70                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim BFAE                                 __Lparam 0000  
              __end_of_UART1_Initialize B4A8                       __end_of_hid_input ABCC  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 76CE  
                               ___fladd 45AC                                 ___aomod 7E08  
                               ___fldiv 4D68                                 ___awdiv 92AE  
                               ___flneg B418                                 ___awmod 98C4  
                               ___flmul 3D82                                 ___flsub B57E  
                               ___fltol 8E76                                 ___lodiv 8CF6  
                               ___lomod 93FC               __end_of_UART1_Receive_ISR BF5E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 9FE6                                 __pcinit A1AE  
              __end_of_mode_lamp_bright C0B0                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C094  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B184                                 __ptext2 BE88  
                               __ptext3 B8EA                                 __ptext4 9FE6  
                               __ptext5 B952                                 __ptext6 9EFC  
                               __ptext7 BD48                                 __ptext8 B64A  
                               __ptext9 B68A                       __end_of_esr_check 7410  
                     _UART2_Receive_ISR BEA8                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C00A  
                          __size_of_abs 0046                                 us650999 8036  
                               us740999 952C                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E08                                 _isalpha B5C4  
                               us639999 7938                                 us735999 8E60  
                               _isdigit B9E2                                 _ivln2_h FBCB  
                             _T3CONbits 003FA6                                 _mode_sw 00CA  
                     __end_of_lp_filter 883A                                 _islower B982  
                               _isspace B292                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize B184  
                               _isupper B9B2              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9C00                                 _tolower ACD8  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 8048  
                               _toupper AC54                    end_of_initialization A27C  
             __size_of_convert_adc_data 00B8                      _check_enter_button B70A  
                             i1u1252_20 920C     __end_of_UART2_SetRxInterruptHandler BB8E  
           _UART2_SetRxInterruptHandler BB66                               i2u1040_48 BCE4  
                             i2u1042_48 BD0C                               i2u1044_48 BD34  
                             i2u1036_48 BA84                               i2u1038_48 AF62  
                             i2u1038_49 AF76                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BF22                       __end_of_vfpfcnvrt 334C  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C150  
             __end_of_UART2_Receive_ISR BEC8                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C156                _TMR3_SetInterruptHandler BC06  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BBB6  
                          _display_help C12E                   _TMR5_InterruptHandler 00A5  
                          _display_info C126    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BD90                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BCCE             _ADCC_SetADIInterruptHandler BCA6  
                            _update_lcd 9AF0                         _calc_model_data 5C76  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B184                         _DMA1_Initialize AE56  
                            _start_bsoc BE66                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize BFDE                   __end_of_get_vterm_ptr BA40  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B8EA            __end_of_INTERRUPT_Initialize AFFC  
                            _vterm_dump 9672                          __end_of___flge 914A  
                        __end_of___fleq A41A    __end_of_INT0_DefaultInterruptHandler C164  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C162  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B238  
                         __pidataBIGRAM 6B28                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67E8             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7140  
                        __end_of_printf B0C2                __end_of_DMA1_DMADCNT_ISR C0FE  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BE20  
                        __end_of_strcpy A356                          __end_of_strlen A980  
                   start_initialization A1AE    __end_of_TMR5_DefaultInterruptHandler B8B4  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B87C  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs B57E  
                 __end_of_INT1_CallBack BDB4               __size_of_set_display_info 001E  
                           __end_of_pad 9AF0                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B6CA                          _switch_handler 953C  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B70  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C0DE  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C10C  
                   __end_of_hid_display 9E0C              __end_of_send_port_data_dma B336  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BB16  
                         _ringBufS_init BAEE                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B952  
               __end_of_calc_model_data 60C2                           _send_lcd_data BD48  
                   __end_of_help_button B87C         __end_of_eaDogM_WriteStringAtPos A838  
                   __end_of_BVSOC_TABLE FABB                               ___asfladd ADDE  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize AEC0                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BC7E  
                         __pcstackBANK0 00D7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 9672  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize BFF4  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FB4B                        _convert_adc_data A4D4  
                             _calc_bsoc 334C               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9EFC                  __end_of_DMA1_DMAOR_ISR C116  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B292                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize AAAA                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C14A                           __pmediumconst F9EA  
                             __ptext100 4D68                               __ptext101 8FE8  
                             __ptext110 B124                               __ptext102 5C76  
                             __ptext111 BB3E                               __ptext103 C150  
                             __ptext120 BC06                               __ptext112 BB66  
                             __ptext104 BE66                               __ptext121 BFC6  
                             __ptext113 B460                               __ptext105 867E  
                             __ptext130 BC2E                               __ptext122 BFDE  
                             __ptext114 BB8E                               __ptext106 B57E  
                             __ptext131 BC56                               __ptext123 BFF4  
                             __ptext115 BAC4                               __ptext107 45AC  
                             __ptext140 C15E                               __ptext132 B238  
                             __ptext124 C020                               __ptext116 BBB6  
                             __ptext108 3D82                               __ptext141 953C  
                             __ptext133 AE56                               __ptext125 AAAA  
                             __ptext117 B4A8                               __ptext109 B3CE  
                             __ptext150 B78A                               __ptext142 A0CC  
                             __ptext134 C0DE                               __ptext126 C00A  
                             __ptext118 BBDE                               __ptext151 BDD8  
                             __ptext143 B74A                               __ptext135 AEC0  
                             __ptext127 AF96                               __ptext119 B4F0  
                             __ptext160 C158                               __ptext152 C160  
                             __ptext144 BDB4                               __ptext136 BC7E  
                             __ptext128 C136                               __ptext161 BA6C  
                             __ptext153 334C                               __ptext145 B87C  
                             __ptext137 BCA6                               __ptext129 B91E  
                             __ptext170 BD20                               __ptext162 AD5C  
                             __ptext154 B2E4                               __ptext146 883A  
                             __ptext138 B7CC                               __ptext171 BEA8  
                             __ptext163 C164                               __ptext155 C0E8  
                             __ptext147 C076                               __ptext139 BD90  
                             __ptext172 BF94                               __ptext164 C166  
                             __ptext156 ADDE                               __ptext148 C0B0  
                             __ptext173 BE20                               __ptext165 AF2C  
                             __ptext157 C0C0                               __ptext149 914C  
                             __ptext174 B336                               __ptext166 BCD0  
                             __ptext158 BDFC                               __ptext175 C0D0  
                             __ptext167 BF40                               __ptext159 C162  
                             __ptext176 C0F4                               __ptext168 BCF8  
                             __ptext177 C100                               __ptext169 BA98  
                             __ptext178 C10C                               __ptext179 0000  
                             _hid_input AB3C                      __end_of_StartTimer B70A  
                    _set_load_relay_one C056                      _set_load_relay_two C046  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BA6C  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7140                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 7BC2  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 867E                             _hid_display 9D0A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize AF96                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C0C0                                _INT1_ISR B7CC  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BDD8  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BF04  
                   __size_of_update_lcd 0110                             _help_button B844  
                              _TMR3_ISR 914C                             _BVSOC_TABLE F9EB  
                              _TMR5_ISR A0CC                                _TMR6_ISR BF94  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 23A0                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BDB4  
                            _ADCON0bits 003EF8                      __end_of_check_help 847A  
                             _start_lcd C14A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack BE20  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C150                        _set_display_info BF22  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A1C2  
                             copy_data1 A1E8                               copy_data2 A20A  
              _INT0_SetInterruptHandler BC56                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BB66             _UART2_SetTxInterruptHandler BB3E  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00A8  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BF5E                            _send_lcd_cmd B68A  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C166                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BA6C  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C10A  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 847A  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C0A2  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BEC8                                __ptext11 BAEE  
                              __ptext20 C034                                __ptext12 7BC2  
                              __ptext21 C116                                __ptext13 A41A  
                              __ptext30 9672                                __ptext22 C13E  
                              __ptext14 9D0A                                __ptext31 9C00  
                              __ptext23 C11E                                __ptext15 AB3C  
                              __ptext40 A838                                __ptext32 BA12  
                              __ptext24 C046                                __ptext16 BA40  
                              __ptext41 C144                                __ptext33 B8B4  
                              __ptext25 C056                                __ptext17 7140  
                              __ptext50 B982                                __ptext42 C14A  
                              __ptext34 9AF0                                __ptext26 C094  
                              __ptext18 B80A                                __ptext51 B5C4  
                              __ptext43 AA18                                __ptext35 A790  
                              __ptext27 A4D4                                __ptext19 AFFC  
                              __ptext60 A282                                __ptext52 67E8  
                              __ptext44 6E54                                __ptext36 BEE6  
                              __ptext28 BD6C                                __ptext61 647C  
                              __ptext53 93FC                                __ptext45 B060  
                              __ptext37 BF5E                                __ptext29 8268  
                              __ptext70 7E08                                __ptext62 89DA  
                              __ptext54 8CF6                                __ptext46 A63A  
                              __ptext38 B1DE                                __ptext71 76CE  
                              __ptext63 8E76                                __ptext55 8048  
                              __ptext47 23A0                                __ptext39 B384  
                              __ptext80 B292                                __ptext72 ABCC  
                              __ptext64 B418                                __ptext56 7410  
                              __ptext48 60C2                                __ptext81 B9E2  
                              __ptext73 99DC                                __ptext65 A356  
                              __ptext57 0000                                __ptext49 AC54  
                              __ptext90 B6CA                                __ptext82 BF04  
                              __ptext74 A8DE                                __ptext66 98C4  
                              __ptext58 ACD8                                __ptext91 C126  
                              __ptext83 C066                                __ptext75 A980  
                              __ptext67 92AE                                __ptext59 B9B2  
                              __ptext92 C12E                                __ptext84 BF22  
                              __ptext76 97A0                                __ptext68 57F6  
                              __ptext93 B70A                                __ptext85 BFAE  
                              __ptext77 BF7A                                __ptext69 B538  
                              __ptext94 8B70                                __ptext86 C0A2  
                              __ptext78 A6E6                                __ptext95 A58C  
                              __ptext87 B608                                __ptext79 794E  
                              __ptext96 52E2                                __ptext88 B844  
                              __ptext97 B0C2                                __ptext89 BB16  
                              __ptext98 BE44                                __ptext99 847A  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1157999 7422  
                              us1088999 5810                                us1169999 684E  
                              us1178999 6142                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A6E6  
                  __end_of_Volts_to_SOC A4D4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 115C  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma B982                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C046                                _spi_link 0060  
                              _wdtdelay B1DE              __end_of_UART2_Transmit_ISR BAC4  
                              _spinners 9FE6                                _vfprintf A63A  
              __end_of_convert_adc_data A58C              __end_of_PWM8_LoadDutyValue B64A  
  __end_of_TMR3_DefaultInterruptHandler C162   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C160    __end_of_INT1_DefaultInterruptHandler C160  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C15E  
                    _send_port_data_dma B2E4                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BE44                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C144  
                    _EXT_INT_Initialize B91E    __end_of_TMR6_DefaultInterruptHandler B384  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B336  
                     _send_lcd_data_dma B384    __end_of_ADCC_DefaultInterruptHandler C166  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C164  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B64A          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C076                   __end_of_calc_ror_data 8CF6  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A8DE  
                 __end_of_mode_lamp_dim BFC6                 __end_of_adc_int_handler C168  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9C00                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B1DE                      __end_of_start_bsoc BE88  
                        _FVR_Initialize C136                  __end_of_get_raw_result BE66  
                      _send_lcd_cmd_dma BEE6                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler BC56  
             __size_of_UART1_Initialize 0048               __end_of_send_lcd_data_dma B3CE  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B68A  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C15E  
        __end_of_PIN_MANAGER_Initialize AB3C               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 97A0                 _eaDogM_WriteStringAtPos A790  
                         _get_vterm_ptr BA12                          _check_adc_scan C11E  
             __size_of_UART2_Initialize 0060  
