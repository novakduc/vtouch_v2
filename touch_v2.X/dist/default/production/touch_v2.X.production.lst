

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 19:39:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=2
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=2
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=2
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1,inline
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=4,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=4,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=4,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1,group=1
   227                           	psect	text204,global,reloc=4,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=4,class=CODE,delta=1
   231                           	psect	text208,global,reloc=4,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1
   235                           	psect	text212,global,reloc=4,class=CODE,delta=1
   236                           	psect	text213,global,reloc=4,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=4,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=4,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=4,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=4,class=CODE,delta=1
   246                           	psect	text223,global,reloc=4,class=CODE,delta=1
   247                           	psect	text224,global,reloc=4,class=CODE,delta=1
   248                           	psect	text225,global,reloc=4,class=CODE,delta=1
   249                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   250                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   251                           	psect	text226,global,reloc=4,class=CODE,delta=1
   252                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   253                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   254  0000                     
   255                           ; Version 2.10
   256                           ; Generated 31/07/2019 GMT
   257                           ; 
   258                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   259                           ; All rights reserved.
   260                           ; 
   261                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   262                           ; 
   263                           ; Redistribution and use in source and binary forms, with or without modification, are
   264                           ; permitted provided that the following conditions are met:
   265                           ; 
   266                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   267                           ;        conditions and the following disclaimer.
   268                           ; 
   269                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   270                           ;        of conditions and the following disclaimer in the documentation and/or other
   271                           ;        materials provided with the distribution.
   272                           ; 
   273                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   274                           ;        software without specific prior written permission.
   275                           ; 
   276                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   277                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   278                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   279                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   280                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   281                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   282                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   283                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   284                           ; 
   285                           ; 
   286                           ; Code-generator required, PIC18F57K42 Definitions
   287                           ; 
   288                           ; SFR Addresses
   289  0000                     
   290 ;;_main$4041	offset	0
   291 ;;_main$4037	offset	2
   292 ;;_i_esr	offset	4
   293 ;;_esr_temp	offset	6
   294 ;;_i_esr	offset	10
   295 ;;_shape	offset	12
   296 ;;_inp_index	offset	13
   297 ;;_k	offset	14
   298 ;;_j	offset	15
   299 ;;_i	offset	16
   300 ;;_mode	offset	17
   301 ;;_i_ror	offset	18
   302 ;;_mode	offset=-1 (param)
   303 ;;_hist	offset=-3 (param)
   304 ;;_s	offset=-2 (param)
   305 ;;_t	offset=-8 (param)
   306 ;;_voltage	offset=-4 (param)
   307 ;;_voltage	offset=-4 (param)
   308 ;;_voltage	offset=-4 (param)
   309 ;;_set	offset=-1 (param)
   310 ;;_x	offset	0
   311 ;;_r_cal_ptr	offset	2
   312 ;;_y	offset	4
   313 ;;_crcVal_save	offset	6
   314 ;;_bAdd	offset=-2 (param)
   315 ;;_esr_rescale	offset	0
   316 ;;_data	offset=-1 (param)
   317 ;;_cmd	offset=-1 (param)
   318 ;;_cmd	offset=-1 (param)
   319 ;;_delay	offset=-4 (param)
   320 ;;_data	offset=-1 (param)
   321 ;;__this	offset=-2 (param)
   322 ;;_soc	offset	0
   323 ;;_slot	offset	2
   324 ;;_cvoltage	offset=-4 (param)
   325 ;;_h	offset=-2 (param)
   326 ;;_h	offset=-2 (param)
   327 ;;_fsm	offset=-1 (param)
   328 ;;_mode	offset=-1 (param)
   329 ;;_mode	offset=-1 (param)
   330 ;;_cmd	offset=-1 (param)
   331 ;;_t	offset=-8 (param)
   332 ;;_t	offset=-1 (param)
   333 ;;_t	offset=-1 (param)
   334 ;;_tm	offset=-3 (param)
   335 ;;_y	offset	0
   336 ;;_t1	offset	8
   337 ;;_t0	offset	16
   338 ;;_t	offset=-8 (param)
   339 ;;_local	offset=-10 (param)
   340 ;;_isdst	offset=-12 (param)
   341 ;;_offset	offset=-14 (param)
   342 ;;_oppoff	offset=-16 (param)
   343 ;;_zonename	offset=-18 (param)
   344 ;;_t	offset=-8 (param)
   345 ;;_local	offset=-10 (param)
   346 ;;_alt	offset=-12 (param)
   347 ;;_z	offset=-2 (param)
   348 ;;_days	offset	0
   349 ;;_wday	offset	2
   350 ;;_t	offset	4
   351 ;;_is_leap	offset	12
   352 ;;_n	offset	14
   353 ;;_x	offset	16
   354 ;;_m	offset	18
   355 ;;_d	offset	20
   356 ;;_rule	offset=-6 (param)
   357 ;;_year	offset=-8 (param)
   358 ;;_m	offset=-2 (param)
   359 ;;_is_leap	offset=-4 (param)
   360 ;;_y	offset	0
   361 ;;_leaps	offset	2
   362 ;;_rem	offset	4
   363 ;;F5	offset	6
   364 ;;_centuries	offset	8
   365 ;;_leaps	offset	10
   366 ;;_cycles	offset	12
   367 ;;_year	offset=-8 (param)
   368 ;;_is_leap	offset=-10 (param)
   369 ;;_t	offset	0
   370 ;;_month	offset=-2 (param)
   371 ;;_is_leap	offset=-4 (param)
   372 ;;_s	offset	0
   373 ;;_r	offset	0
   374 ;;_p	offset=-2 (param)
   375 ;;_rule	offset=-4 (param)
   376 ;;_off	offset	0
   377 ;;_neg	offset	2
   378 ;;_p	offset=-2 (param)
   379 ;;_x	offset	0
   380 ;;_p	offset=-2 (param)
   381 ;;_i	offset	0
   382 ;;_d	offset=-2 (param)
   383 ;;_p	offset=-4 (param)
   384 ;;___secs_to_tm$7627	offset	0
   385 ;;_years	offset	1
   386 ;;_days	offset	9
   387 ;;_secs	offset	17
   388 ;;_remdays	offset	25
   389 ;;_q_cycles	offset	29
   390 ;;_c_cycles	offset	33
   391 ;;_remyears	offset	37
   392 ;;_remsecs	offset	41
   393 ;;_qc_cycles	offset	45
   394 ;;_months	offset	49
   395 ;;_leap	offset	51
   396 ;;_yday	offset	53
   397 ;;_wday	offset	55
   398 ;;_t	offset=-8 (param)
   399 ;;_tm	offset=-10 (param)
   400 ;;_product	offset	0
   401 ;;_multiplier	offset=-8 (param)
   402 ;;_multiplicand	offset=-16 (param)
   403 ;;_product	offset	0
   404 ;;_multiplier	offset=-4 (param)
   405 ;;_multiplicand	offset=-8 (param)
   406 ;;_sign	offset	0
   407 ;;_counter	offset	1
   408 ;;_dividend	offset=-4 (param)
   409 ;;_divisor	offset=-8 (param)
   410 ;;_quotient	offset	0
   411 ;;_sign	offset	4
   412 ;;_counter	offset	5
   413 ;;_dividend	offset=-4 (param)
   414 ;;_divisor	offset=-8 (param)
   415 ;;_cp	offset	0
   416 ;;_s	offset	2
   417 ;;_tim	offset=-2 (param)
   418 ;;_cp	offset=-2 (param)
   419 ;;_i	offset=-3 (param)
   420 ;;_cl	offset=-4 (param)
   421 ;;_ct	offset=-5 (param)
   422 ;;_rem	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-1 (param)
   425 ;;_divisor	offset=-2 (param)
   426 ;;_cp	offset	0
   427 ;;_cb	offset	4
   428 ;;_x	offset	8
   429 ;;_x	offset	0
   430 ;;_r_cal_ptr	offset	2
   431 ;;_y	offset	4
   432 ;;_crcVal	offset	6
   433 ;;_GIEBitValue	offset	0
   434 ;;_bAdd	offset=-2 (param)
   435 ;;_bData	offset=-3 (param)
   436 ;;_result	offset	0
   437 ;;_mask	offset	2
   438 ;;_reverse	offset=-1 (param)
   439 ;;_xorValue	offset=-3 (param)
   440 ;;_mask	offset	0
   441 ;;_reverse	offset	2
   442 ;;_crc	offset=-2 (param)
   443 ;;_data	offset=-1 (param)
   444 ;;_channel	offset=-1 (param)
   445 ;;_c	offset	0
   446 ;;_shape	offset=-1 (param)
   447 ;;_reset	offset=-2 (param)
   448 ;;_i	offset=-1 (param)
   449 ;;_mode	offset=-1 (param)
   450 ;;_cb	offset=-3 (param)
   451 ;;_cp	offset=-5 (param)
   452 ;;_value	offset=-2 (param)
   453 ;;_window	offset=-4 (param)
   454 ;;_standard	offset=-6 (param)
   455 ;;_i	offset	0
   456 ;;_h	offset=-2 (param)
   457 ;;_flipper	offset=-1 (param)
   458 ;;_f	offset	0
   459 ;;_ap	offset	6
   460 ;;_s	offset=-3 (param)
   461 ;;_fmt	offset=-5 (param)
   462 ;;_line	offset=-1 (param)
   463 ;;_vterm	offset=-2 (param)
   464 ;;_numMilliseconds	offset=-2 (param)
   465 ;;_vterm	offset=-1 (param)
   466 ;;_row	offset	0
   467 ;;_r	offset=-1 (param)
   468 ;;_c	offset=-2 (param)
   469 ;;_strPtr	offset=-4 (param)
   470 ;;_strPtr	offset=-1 (param)
   471 ;;_strPtr	offset=-1 (param)
   472 ;;_strPtr	offset=-2 (param)
   473 ;;__this	offset=-2 (param)
   474 ;;_clearBuffer	offset=-3 (param)
   475 ;;_s	offset	0
   476 ;;_k	offset	2
   477 ;;_dest	offset=-2 (param)
   478 ;;_c	offset=-4 (param)
   479 ;;_n	offset=-6 (param)
   480 ;;_ap	offset	0
   481 ;;_fmt	offset=-3 (param)
   482 ;;_cfmt	offset	0
   483 ;;_fp	offset=-2 (param)
   484 ;;_fmt	offset=-4 (param)
   485 ;;_ap	offset=-6 (param)
   486 ;;_vfpfcnvrt$6668	offset	0
   487 ;;_vfpfcnvrt$6679	offset	2
   488 ;;_vfpfcnvrt$6667	offset	4
   489 ;;_llu	offset	6
   490 ;;_ll	offset	14
   491 ;;_f	offset	22
   492 ;;_ct	offset	26
   493 ;;_cp	offset	29
   494 ;;_c	offset	31
   495 ;;_fp	offset=-2 (param)
   496 ;;_fmt	offset=-4 (param)
   497 ;;_ap	offset=-6 (param)
   498 ;;_xtoa$6653	offset	0
   499 ;;_xtoa$6652	offset	2
   500 ;;_n	offset	4
   501 ;;_c	offset	12
   502 ;;_i	offset	14
   503 ;;_w	offset	16
   504 ;;_p	offset	18
   505 ;;_fp	offset=-2 (param)
   506 ;;_d	offset=-10 (param)
   507 ;;_x	offset=-11 (param)
   508 ;;_toupper$7594	offset	0
   509 ;;_c	offset=-2 (param)
   510 ;;_c	offset=-2 (param)
   511 ;;_c	offset=-2 (param)
   512 ;;_n	offset	0
   513 ;;_i	offset	8
   514 ;;_w	offset	10
   515 ;;_p	offset	12
   516 ;;_fp	offset=-2 (param)
   517 ;;_d	offset=-10 (param)
   518 ;;_counter	offset	0
   519 ;;_dividend	offset=-8 (param)
   520 ;;_divisor	offset=-16 (param)
   521 ;;_quotient	offset	0
   522 ;;_counter	offset	8
   523 ;;_dividend	offset=-8 (param)
   524 ;;_divisor	offset=-16 (param)
   525 ;;_r	offset	0
   526 ;;_l	offset	2
   527 ;;__l	offset=-2 (param)
   528 ;;__r	offset=-4 (param)
   529 ;;_n	offset=-6 (param)
   530 ;;_nuls	offset	0
   531 ;;_l	offset	7
   532 ;;_p	offset	9
   533 ;;_cp	offset	11
   534 ;;_w	offset	13
   535 ;;_i	offset	15
   536 ;;_fp	offset=-2 (param)
   537 ;;_s	offset=-4 (param)
   538 ;;_efgtoa$6625	offset	0
   539 ;;_efgtoa$6624	offset	2
   540 ;;_efgtoa$6623	offset	4
   541 ;;_efgtoa$6619	offset	6
   542 ;;_efgtoa$6615	offset	8
   543 ;;_efgtoa$6614	offset	10
   544 ;;_u	offset	12
   545 ;;_g	offset	16
   546 ;;_l	offset	20
   547 ;;_h	offset	24
   548 ;;_ou	offset	28
   549 ;;_n	offset	32
   550 ;;_e	offset	34
   551 ;;_i	offset	36
   552 ;;_w	offset	38
   553 ;;_p	offset	40
   554 ;;_sign	offset	42
   555 ;;_d	offset	44
   556 ;;_ne	offset	46
   557 ;;_m	offset	48
   558 ;;_pp	offset	50
   559 ;;_t	offset	52
   560 ;;_mode	offset	54
   561 ;;_nmode	offset	55
   562 ;;_fp	offset=-2 (param)
   563 ;;_f	offset=-6 (param)
   564 ;;_c	offset=-7 (param)
   565 ;;_tolower$7579	offset	0
   566 ;;_c	offset=-2 (param)
   567 ;;_c	offset=-2 (param)
   568 ;;_d	offset	0
   569 ;;_s	offset	2
   570 ;;_dest	offset=-2 (param)
   571 ;;_src	offset=-4 (param)
   572 ;;_u	offset	0
   573 ;;_m	offset	4
   574 ;;_e	offset	8
   575 ;;_x	offset=-4 (param)
   576 ;;_u	offset	0
   577 ;;_e	offset	4
   578 ;;_x	offset=-4 (param)
   579 ;;_exp1	offset	0
   580 ;;_sign1	offset	1
   581 ;;_f1	offset=-4 (param)
   582 ;;_f1	offset=-4 (param)
   583 ;;_ff1	offset=-4 (param)
   584 ;;_ff2	offset=-8 (param)
   585 ;;_sign	offset	0
   586 ;;_counter	offset	1
   587 ;;_dividend	offset=-2 (param)
   588 ;;_divisor	offset=-4 (param)
   589 ;;_quotient	offset	0
   590 ;;_sign	offset	2
   591 ;;_counter	offset	3
   592 ;;_dividend	offset=-2 (param)
   593 ;;_divisor	offset=-4 (param)
   594 ;;_dtoa$6591	offset	0
   595 ;;_n	offset	2
   596 ;;_i	offset	10
   597 ;;_s	offset	12
   598 ;;_w	offset	14
   599 ;;_p	offset	16
   600 ;;_fp	offset=-2 (param)
   601 ;;_d	offset=-10 (param)
   602 ;;_a	offset=-2 (param)
   603 ;;_sign	offset	0
   604 ;;_counter	offset	1
   605 ;;_dividend	offset=-8 (param)
   606 ;;_divisor	offset=-16 (param)
   607 ;;_quotient	offset	0
   608 ;;_sign	offset	8
   609 ;;_counter	offset	9
   610 ;;_dividend	offset=-8 (param)
   611 ;;_divisor	offset=-16 (param)
   612 ;;_w	offset	0
   613 ;;_fp	offset=-2 (param)
   614 ;;_c	offset=-3 (param)
   615 ;;_w	offset	0
   616 ;;_i	offset	2
   617 ;;_fp	offset=-2 (param)
   618 ;;_buf	offset=-4 (param)
   619 ;;_p	offset=-6 (param)
   620 ;;_a	offset	0
   621 ;;_s	offset=-2 (param)
   622 ;;_i	offset	0
   623 ;;_c	offset	2
   624 ;;_s	offset=-2 (param)
   625 ;;_fp	offset=-4 (param)
   626 ;;_c	offset=-2 (param)
   627 ;;_fp	offset=-4 (param)
   628 ;;_c	offset=-1 (param)
   629 ;;__this	offset=-2 (param)
   630 ;;_c	offset=-3 (param)
   631 ;;_atoi$7211	offset	0
   632 ;;_atoi$7209	offset	2
   633 ;;_atoi$7210	offset	4
   634 ;;_n	offset	5
   635 ;;_neg	offset	7
   636 ;;_s	offset=-2 (param)
   637 ;;_isspace$7260	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_vterm	offset=-1 (param)
   641 ;;_new_response_info	offset=-1 (param)
   642 ;;_new_response_info	offset=-1 (param)
   643 ;;_level	offset=-2 (param)
   644 ;;_dutyValue	offset=-2 (param)
   645 ;;_timer	offset=-1 (param)
   646 ;;_timer	offset=-1 (param)
   647 ;;_count	offset=-3 (param)
   648 ;;_h	offset=-2 (param)
   649 ;;_u	offset	0
   650 ;;_x	offset=-4 (param)
   651 ;;_chan	offset=-1 (param)
   652 ;;_to_what	offset=-2 (param)
   653 ;;_u	offset	0
   654 ;;_s	offset=-2 (param)
   655 ;;_index	offset=-1 (param)
   656 ;;_arg	offset	0
   657 ;;_exp	offset	4
   658 ;;_sign	offset=-1 (param)
   659 ;;_val	offset=-5 (param)
   660 ;;_grs	offset	0
   661 ;;_rem	offset	4
   662 ;;_new_exp	offset	8
   663 ;;_aexp	offset	10
   664 ;;_bexp	offset	11
   665 ;;_sign	offset	12
   666 ;;_b	offset=-4 (param)
   667 ;;_a	offset=-8 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_lp_speed	offset	0
   671 ;;_new	offset=-4 (param)
   672 ;;_bn	offset=-5 (param)
   673 ;;_slow	offset=-6 (param)
   674 ;;_b	offset=-4 (param)
   675 ;;_a	offset=-8 (param)
   676 ;;_grs	offset	0
   677 ;;_bexp	offset	1
   678 ;;_aexp	offset	2
   679 ;;_signs	offset	3
   680 ;;_b	offset=-4 (param)
   681 ;;_a	offset=-8 (param)
   682 ;;_prod	offset	0
   683 ;;_grs	offset	4
   684 ;;_temp	offset	8
   685 ;;_bexp	offset	10
   686 ;;_aexp	offset	11
   687 ;;_sign	offset	12
   688 ;;_b	offset=-4 (param)
   689 ;;_a	offset=-8 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_InterruptHandler	offset=-3 (param)
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_state	offset	0
   697 ;;_InterruptHandler	offset=-3 (param)
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_seed	offset	0
   700 ;;_poly	offset	2
   701 ;;_InterruptHandler	offset=-3 (param)
   702 ;;_InterruptHandler	offset=-3 (param)
   703 ;;_i	offset	0
   704 ;;_sw_value	offset	1
   705 ;;_timerVal	offset=-2 (param)
   706 ;;_light	offset	0
   707 ;;_t	offset=-8 (param)
   708 ;;_mode	offset=-1 (param)
   709 ;;_chan	offset=-1 (param)
   710 ;;_to_what	offset=-2 (param)
   711 ;;_u	offset	0
   712 ;;_s	offset=-2 (param)
   713 ;;_index	offset=-1 (param)
   714 ;;_arg	offset	0
   715 ;;_exp	offset	4
   716 ;;_sign	offset=-1 (param)
   717 ;;_val	offset=-5 (param)
   718 ;;_b	offset=-4 (param)
   719 ;;_a	offset=-8 (param)
   720 ;;_grs	offset	0
   721 ;;_bexp	offset	1
   722 ;;_aexp	offset	2
   723 ;;_signs	offset	3
   724 ;;_b	offset=-4 (param)
   725 ;;_a	offset=-8 (param)
   726 ;;_prod	offset	0
   727 ;;_grs	offset	4
   728 ;;_temp	offset	8
   729 ;;_bexp	offset	10
   730 ;;_aexp	offset	11
   731 ;;_sign	offset	12
   732 ;;_b	offset=-4 (param)
   733 ;;_a	offset=-8 (param)
   734 ;;_grs	offset	0
   735 ;;_rem	offset	4
   736 ;;_new_exp	offset	8
   737 ;;_aexp	offset	10
   738 ;;_bexp	offset	11
   739 ;;_sign	offset	12
   740 ;;_b	offset=-4 (param)
   741 ;;_a	offset=-8 (param)
   742 ;;_ff1	offset=-4 (param)
   743 ;;_ff2	offset=-8 (param)
   744 ;;_timerVal	offset=-2 (param)
   745 ;;_adj	offset	0
   746 ;;_log_ptr	offset	4
   747 ;;_f	offset	0
   748 ;;_ap	offset	6
   749 ;;_s	offset=-3 (param)
   750 ;;_fmt	offset=-5 (param)
   751 ;;_cfmt	offset	0
   752 ;;_fp	offset=-2 (param)
   753 ;;_fmt	offset=-4 (param)
   754 ;;_ap	offset=-6 (param)
   755 ;;_vfpfcnvrt$6668	offset	0
   756 ;;_vfpfcnvrt$6679	offset	2
   757 ;;_vfpfcnvrt$6667	offset	4
   758 ;;_llu	offset	6
   759 ;;_ll	offset	14
   760 ;;_f	offset	22
   761 ;;_ct	offset	26
   762 ;;_cp	offset	29
   763 ;;_c	offset	31
   764 ;;_fp	offset=-2 (param)
   765 ;;_fmt	offset=-4 (param)
   766 ;;_ap	offset=-6 (param)
   767 ;;_xtoa$6653	offset	0
   768 ;;_xtoa$6652	offset	2
   769 ;;_n	offset	4
   770 ;;_c	offset	12
   771 ;;_i	offset	14
   772 ;;_w	offset	16
   773 ;;_p	offset	18
   774 ;;_fp	offset=-2 (param)
   775 ;;_d	offset=-10 (param)
   776 ;;_x	offset=-11 (param)
   777 ;;_toupper$7594	offset	0
   778 ;;_c	offset=-2 (param)
   779 ;;_c	offset=-2 (param)
   780 ;;_c	offset=-2 (param)
   781 ;;_n	offset	0
   782 ;;_i	offset	8
   783 ;;_w	offset	10
   784 ;;_p	offset	12
   785 ;;_fp	offset=-2 (param)
   786 ;;_d	offset=-10 (param)
   787 ;;_counter	offset	0
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_quotient	offset	0
   791 ;;_counter	offset	8
   792 ;;_dividend	offset=-8 (param)
   793 ;;_divisor	offset=-16 (param)
   794 ;;_r	offset	0
   795 ;;_l	offset	2
   796 ;;__l	offset=-2 (param)
   797 ;;__r	offset=-4 (param)
   798 ;;_n	offset=-6 (param)
   799 ;;_nuls	offset	0
   800 ;;_l	offset	7
   801 ;;_p	offset	9
   802 ;;_cp	offset	11
   803 ;;_w	offset	13
   804 ;;_i	offset	15
   805 ;;_fp	offset=-2 (param)
   806 ;;_s	offset=-4 (param)
   807 ;;_efgtoa$6625	offset	0
   808 ;;_efgtoa$6624	offset	2
   809 ;;_efgtoa$6623	offset	4
   810 ;;_efgtoa$6619	offset	6
   811 ;;_efgtoa$6615	offset	8
   812 ;;_efgtoa$6614	offset	10
   813 ;;_u	offset	12
   814 ;;_g	offset	16
   815 ;;_l	offset	20
   816 ;;_h	offset	24
   817 ;;_ou	offset	28
   818 ;;_n	offset	32
   819 ;;_e	offset	34
   820 ;;_i	offset	36
   821 ;;_w	offset	38
   822 ;;_p	offset	40
   823 ;;_sign	offset	42
   824 ;;_d	offset	44
   825 ;;_ne	offset	46
   826 ;;_m	offset	48
   827 ;;_pp	offset	50
   828 ;;_t	offset	52
   829 ;;_mode	offset	54
   830 ;;_nmode	offset	55
   831 ;;_fp	offset=-2 (param)
   832 ;;_f	offset=-6 (param)
   833 ;;_c	offset=-7 (param)
   834 ;;_tolower$7579	offset	0
   835 ;;_c	offset=-2 (param)
   836 ;;_c	offset=-2 (param)
   837 ;;_d	offset	0
   838 ;;_s	offset	2
   839 ;;_dest	offset=-2 (param)
   840 ;;_src	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_m	offset	4
   843 ;;_e	offset	8
   844 ;;_x	offset=-4 (param)
   845 ;;_u	offset	0
   846 ;;_e	offset	4
   847 ;;_x	offset=-4 (param)
   848 ;;_exp1	offset	0
   849 ;;_sign1	offset	1
   850 ;;_f1	offset=-4 (param)
   851 ;;_f1	offset=-4 (param)
   852 ;;_ff1	offset=-4 (param)
   853 ;;_ff2	offset=-8 (param)
   854 ;;_sign	offset	0
   855 ;;_counter	offset	1
   856 ;;_dividend	offset=-2 (param)
   857 ;;_divisor	offset=-4 (param)
   858 ;;_quotient	offset	0
   859 ;;_sign	offset	2
   860 ;;_counter	offset	3
   861 ;;_dividend	offset=-2 (param)
   862 ;;_divisor	offset=-4 (param)
   863 ;;_dtoa$6591	offset	0
   864 ;;_n	offset	2
   865 ;;_i	offset	10
   866 ;;_s	offset	12
   867 ;;_w	offset	14
   868 ;;_p	offset	16
   869 ;;_fp	offset=-2 (param)
   870 ;;_d	offset=-10 (param)
   871 ;;_a	offset=-2 (param)
   872 ;;_sign	offset	0
   873 ;;_counter	offset	1
   874 ;;_dividend	offset=-8 (param)
   875 ;;_divisor	offset=-16 (param)
   876 ;;_quotient	offset	0
   877 ;;_sign	offset	8
   878 ;;_counter	offset	9
   879 ;;_dividend	offset=-8 (param)
   880 ;;_divisor	offset=-16 (param)
   881 ;;_w	offset	0
   882 ;;_fp	offset=-2 (param)
   883 ;;_c	offset=-3 (param)
   884 ;;_w	offset	0
   885 ;;_i	offset	2
   886 ;;_fp	offset=-2 (param)
   887 ;;_buf	offset=-4 (param)
   888 ;;_p	offset=-6 (param)
   889 ;;_a	offset	0
   890 ;;_s	offset=-2 (param)
   891 ;;_i	offset	0
   892 ;;_c	offset	2
   893 ;;_s	offset=-2 (param)
   894 ;;_fp	offset=-4 (param)
   895 ;;_c	offset=-2 (param)
   896 ;;_fp	offset=-4 (param)
   897 ;;_c	offset=-1 (param)
   898 ;;__this	offset=-2 (param)
   899 ;;_c	offset=-3 (param)
   900 ;;_atoi$7211	offset	0
   901 ;;_atoi$7209	offset	2
   902 ;;_atoi$7210	offset	4
   903 ;;_n	offset	5
   904 ;;_neg	offset	7
   905 ;;_s	offset=-2 (param)
   906 ;;_isspace$7260	offset	0
   907 ;;_c	offset=-2 (param)
   908 ;;_c	offset=-2 (param)
   909 ;;_dsize	offset=-2 (param)
   910 ;;_u	offset	0
   911 ;;_x	offset=-4 (param)
   912 ;;_f1p	offset=-2 (param)
   913 ;;_f2	offset=-6 (param)
   914 ;;_timer	offset=-1 (param)
   915 ;;_count	offset=-3 (param)
   916 ;;_channel	offset=-1 (param)
   917 ;;_i	offset	0
   918                           
   919                           	psect	idataBIGRAM
   920  017D06                     __pidataBIGRAM:
   921                           	opt callstack 0
   922                           
   923                           ;initializer for _D
   924  017D06  20                 	db	32
   925  017D07  00                 	db	0
   926  017D08  00                 	db	0
   927  017D09  00                 	db	0
   928  017D0A  00                 	db	0
   929  017D0B  00                 	db	0
   930  017D0C  00                 	db	0
   931  017D0D  00                 	db	0
   932  017D0E  00                 	db	0
   933  017D0F  00                 	db	0
   934  017D10  00                 	db	0
   935  017D11  00                 	db	0
   936  017D12  00                 	db	0
   937  017D13  00                 	db	0
   938  017D14  00                 	db	0
   939  017D15  00                 	db	0
   940  017D16  00                 	db	0
   941  017D17  00                 	db	0
   942  017D18  00                 	db	0
   943  017D19  00                 	db	0
   944  017D1A  00                 	db	0
   945  017D1B  00                 	db	0
   946  017D1C  00                 	db	0
   947  017D1D  00                 	db	0
   948  017D1E  00                 	db	0
   949  017D1F  00                 	db	0
   950  017D20  00                 	db	0
   951  017D21  00                 	db	0
   952  017D22  00                 	db	0
   953  017D23  00                 	db	0
   954  017D24  00                 	db	0
   955  017D25  00                 	db	0
   956  017D26  00                 	db	0
   957  017D27  00                 	db	0
   958  017D28  00                 	db	0
   959  017D29  00                 	db	0
   960  017D2A  00                 	db	0
   961  017D2B  00                 	db	0
   962  017D2C  00                 	db	0
   963  017D2D  00                 	db	0
   964  017D2E  00                 	db	0
   965  017D2F  00                 	db	0
   966  017D30  00                 	db	0
   967  017D31  00                 	db	0
   968  017D32  00                 	db	0
   969  017D33  00                 	db	0
   970  017D34  00                 	db	0
   971  017D35  00                 	db	0
   972  017D36  00                 	db	0
   973  017D37  00                 	db	0
   974  017D38  00                 	db	0
   975  017D39  00                 	db	0
   976  017D3A  00                 	db	0
   977  017D3B  00                 	db	0
   978  017D3C  00                 	db	0
   979  017D3D  00                 	db	0
   980  017D3E  00                 	db	0
   981  017D3F  00                 	db	0
   982  017D40  00                 	db	0
   983  017D41  00                 	db	0
   984  017D42  00                 	db	0
   985  017D43  00                 	db	0
   986  017D44  00                 	db	0
   987  017D45  00                 	db	0
   988  017D46  00                 	db	0
   989  017D47  00                 	db	0
   990  017D48  00                 	db	0
   991  017D49  00                 	db	0
   992  017D4A  00                 	db	0
   993  017D4B  00                 	db	0
   994  017D4C  00                 	db	0
   995  017D4D  00                 	db	0
   996  017D4E  00                 	db	0
   997  017D4F  00                 	db	0
   998  017D50  00                 	db	0
   999  017D51  00                 	db	0
  1000  017D52  00                 	db	0
  1001  017D53  00                 	db	0
  1002  017D54  00                 	db	0
  1003  017D55  00                 	db	0
  1004  017D56  00                 	db	0
  1005  017D57  00                 	db	0
  1006  017D58  00                 	db	0
  1007  017D59  00                 	db	0
  1008  017D5A  00                 	db	0
  1009  017D5B  00                 	db	0
  1010  017D5C  00                 	db	0
  1011  017D5D  00                 	db	0
  1012  017D5E  00                 	db	0
  1013  017D5F  00                 	db	0
  1014  017D60  00                 	db	0
  1015  017D61  00                 	db	0
  1016  017D62  00                 	db	0
  1017  017D63  00                 	db	0
  1018  017D64  00                 	db	0
  1019  017D65  00                 	db	0
  1020  017D66  00                 	db	0
  1021  017D67  00                 	db	0
  1022  017D68  00                 	db	0
  1023  017D69  00                 	db	0
  1024  017D6A  00                 	db	0
  1025  017D6B  00                 	db	0
  1026  017D6C  00                 	db	0
  1027  017D6D  00                 	db	0
  1028  017D6E  00                 	db	0
  1029  017D6F  00                 	db	0
  1030  017D70  00                 	db	0
  1031  017D71  00                 	db	0
  1032  017D72  00                 	db	0
  1033  017D73  00                 	db	0
  1034  017D74  00                 	db	0
  1035  017D75  00                 	db	0
  1036  017D76  00                 	db	0
  1037  017D77  00                 	db	0
  1038  017D78  00                 	db	0
  1039  017D79  00                 	db	0
  1040  017D7A  00                 	db	0
  1041  017D7B  00                 	db	0
  1042  017D7C  00                 	db	0
  1043  017D7D  00                 	db	0
  1044  017D7E  00                 	db	0
  1045  017D7F  00                 	db	0
  1046  017D80  00                 	db	0
  1047  017D81  00                 	db	0
  1048  017D82  00                 	db	0
  1049  017D83  00                 	db	0
  1050  017D84  00                 	db	0
  1051  017D85  00                 	db	0
  1052  017D86  00                 	db	0
  1053  017D87  00                 	db	0
  1054  017D88  00                 	db	0
  1055  017D89  00                 	db	0
  1056  017D8A  00                 	db	0
  1057  017D8B  00                 	db	0
  1058  017D8C  00                 	db	0
  1059  017D8D  00                 	db	0
  1060  017D8E  00                 	db	0
  1061  017D8F  00                 	db	0
  1062  017D90  00                 	db	0
  1063  017D91  00                 	db	0
  1064  017D92  00                 	db	0
  1065  017D93  00                 	db	0
  1066  017D94  00                 	db	0
  1067  017D95  00                 	db	0
  1068  017D96  00                 	db	0
  1069  017D97  00                 	db	0
  1070  017D98  00                 	db	0
  1071  017D99  00                 	db	0
  1072  017D9A  00                 	db	0
  1073  017D9B  00                 	db	0
  1074  017D9C  00                 	db	0
  1075  017D9D  00                 	db	0
  1076  017D9E  00                 	db	0
  1077  017D9F  00                 	db	0
  1078  017DA0  00                 	db	0
  1079  017DA1  00                 	db	0
  1080  017DA2  00                 	db	0
  1081  017DA3  00                 	db	0
  1082  017DA4  00                 	db	0
  1083  017DA5  00                 	db	0
  1084  017DA6  00                 	db	0
  1085  017DA7  00                 	db	0
  1086  017DA8  00                 	db	0
  1087  017DA9  00                 	db	0
  1088  017DAA  00                 	db	0
  1089  017DAB  00                 	db	0
  1090  017DAC  00                 	db	0
  1091  017DAD  00                 	db	0
  1092  017DAE  00                 	db	0
  1093  017DAF  00                 	db	0
  1094  017DB0  00                 	db	0
  1095  017DB1  00                 	db	0
  1096  017DB2  00                 	db	0
  1097  017DB3  00                 	db	0
  1098  017DB4  00                 	db	0
  1099  017DB5  00                 	db	0
  1100  017DB6  00                 	db	0
  1101  017DB7  00                 	db	0
  1102  017DB8  00                 	db	0
  1103  017DB9  00                 	db	0
  1104  017DBA  00                 	db	0
  1105  017DBB  00                 	db	0
  1106  017DBC  00                 	db	0
  1107  017DBD  00                 	db	0
  1108  017DBE  00                 	db	0
  1109  017DBF  00                 	db	0
  1110  017DC0  00                 	db	0
  1111  017DC1  00                 	db	0
  1112  017DC2  00                 	db	0
  1113  017DC3  00                 	db	0
  1114  017DC4  00                 	db	0
  1115  017DC5  00                 	db	0
  1116  017DC6  00                 	db	0
  1117  017DC7  00                 	db	0
  1118  017DC8  00                 	db	0
  1119  017DC9  00                 	db	0
  1120  017DCA  00                 	db	0
  1121  017DCB  00                 	db	0
  1122  017DCC  00                 	db	0
  1123  017DCD  00                 	db	0
  1124  017DCE  00                 	db	0
  1125  017DCF  00                 	db	0
  1126  017DD0  00                 	db	0
  1127  017DD1  00                 	db	0
  1128  017DD2  00                 	db	0
  1129  017DD3  00                 	db	0
  1130  017DD4  00                 	db	0
  1131  017DD5  00                 	db	0
  1132  017DD6  00                 	db	0
  1133  017DD7  00                 	db	0
  1134  017DD8  00                 	db	0
  1135  017DD9  00                 	db	0
  1136  017DDA  00                 	db	0
  1137  017DDB  00                 	db	0
  1138  017DDC  00                 	db	0
  1139  017DDD  00                 	db	0
  1140  017DDE  00                 	db	0
  1141  017DDF  00                 	db	0
  1142  017DE0  00                 	db	0
  1143  017DE1  00                 	db	0
  1144  017DE2  00                 	db	0
  1145  017DE3  00                 	db	0
  1146  017DE4  00                 	db	0
  1147  017DE5  00                 	db	0
  1148  017DE6  00                 	db	0
  1149  017DE7  00                 	db	0
  1150  017DE8  00                 	db	0
  1151  017DE9  00                 	db	0
  1152  017DEA  00                 	db	0
  1153  017DEB  00                 	db	0
  1154  017DEC  00                 	db	0
  1155  017DED  00                 	db	0
  1156  017DEE  00                 	db	0
  1157  017DEF  00                 	db	0
  1158  017DF0  00                 	db	0
  1159  017DF1  00                 	db	0
  1160  017DF2  00                 	db	0
  1161  017DF3  00                 	db	0
  1162  017DF4  00                 	db	0
  1163  017DF5  00                 	db	0
  1164  017DF6  00                 	db	0
  1165  017DF7  00                 	db	0
  1166  017DF8  00                 	db	0
  1167  017DF9  00                 	db	0
  1168  017DFA  00                 	db	0
  1169  017DFB  00                 	db	0
  1170  017DFC  00                 	db	0
  1171  017DFD  00                 	db	0
  1172  017DFE  00                 	db	0
  1173  017DFF  00                 	db	0
  1174  017E00  00                 	db	0
  1175  017E01  00                 	db	0
  1176  017E02  00                 	db	0
  1177  017E03  00                 	db	0
  1178  017E04  00                 	db	0
  1179  017E05  00                 	db	0
  1180  017E06  00                 	db	0
  1181  017E07  00                 	db	0
  1182  017E08  00                 	db	0
  1183  017E09  00                 	db	0
  1184  017E0A  00                 	db	0
  1185  017E0B  00                 	db	0
  1186  017E0C  00                 	db	0
  1187  017E0D  00                 	db	0
  1188  017E0E  00                 	db	0
  1189  017E0F  00                 	db	0
  1190  017E10  00                 	db	0
  1191  017E11  00                 	db	0
  1192  017E12  00                 	db	0
  1193  017E13  00                 	db	0
  1194  017E14  00                 	db	0
  1195  017E15  00                 	db	0
  1196  017E16  00                 	db	0
  1197  017E17  00                 	db	0
  1198  017E18  00                 	db	0
  1199  017E19  00                 	db	0
  1200  017E1A  00                 	db	0
  1201  017E1B  00                 	db	0
  1202  017E1C  00                 	db	0
  1203  017E1D  00                 	db	0
  1204  017E1E  00                 	db	0
  1205  017E1F  00                 	db	0
  1206  017E20  00                 	db	0
  1207  017E21  00                 	db	0
  1208  017E22  00                 	db	0
  1209  017E23  00                 	db	0
  1210  017E24  00                 	db	0
  1211  017E25  00                 	db	0
  1212  017E26  00                 	db	0
  1213  017E27  00                 	db	0
  1214  017E28  00                 	db	0
  1215  017E29  00                 	db	0
  1216  017E2A  00                 	db	0
  1217  017E2B  00                 	db	0
  1218  017E2C  00                 	db	0
  1219  017E2D  00                 	db	0
  1220  017E2E  00                 	db	0
  1221  017E2F  00                 	db	0
  1222  017E30  00                 	db	0
  1223  017E31  00                 	db	0
  1224  017E32  00                 	db	0
  1225  017E33  00                 	db	0
  1226  017E34  00                 	db	0
  1227  017E35  00                 	db	0
  1228  017E36  00                 	db	0
  1229  017E37  00                 	db	0
  1230  017E38  00                 	db	0
  1231  017E39  00                 	db	0
  1232  017E3A  00                 	db	0
  1233  017E3B  00                 	db	0
  1234  017E3C  00                 	db	0
  1235  017E3D  00                 	db	0
  1236  017E3E  00                 	db	0
  1237  017E3F  00                 	db	0
  1238  017E40  00                 	db	0
  1239  017E41  00                 	db	0
  1240  017E42  00                 	db	0
  1241  017E43  00                 	db	0
  1242  017E44  00                 	db	0
  1243  017E45  00                 	db	0
  1244  017E46  00                 	db	0
  1245  017E47  00                 	db	0
  1246  017E48  00                 	db	0
  1247  017E49  00                 	db	0
  1248  017E4A  00                 	db	0
  1249  017E4B  00                 	db	0
  1250  017E4C  00                 	db	0
  1251  017E4D  00                 	db	0
  1252  017E4E  00                 	db	0
  1253  017E4F  00                 	db	0
  1254  017E50  00                 	db	0
  1255  017E51  00                 	db	0
  1256  017E52  00                 	db	0
  1257  017E53  00                 	db	0
  1258  017E54  00                 	db	0
  1259  017E55  00                 	db	0
  1260  017E56  00                 	db	0
  1261  017E57  00                 	db	0
  1262  017E58  00                 	db	0
  1263  017E59  00                 	db	0
  1264  017E5A  00                 	db	0
  1265  017E5B  00                 	db	0
  1266  017E5C  00                 	db	0
  1267  017E5D  00                 	db	0
  1268  017E5E  00                 	db	0
  1269  017E5F  00                 	db	0
  1270  017E60  00                 	db	0
  1271  017E61  00                 	db	0
  1272  017E62  00                 	db	0
  1273  017E63  00                 	db	0
  1274  017E64  00                 	db	0
  1275  017E65  00                 	db	0
  1276  017E66  00                 	db	0
  1277  017E67  00                 	db	0
  1278  017E68  00                 	db	0
  1279  017E69  00                 	db	0
  1280  017E6A  00                 	db	0
  1281  017E6B  00                 	db	0
  1282  017E6C  00                 	db	0
  1283  017E6D  00                 	db	0
  1284  017E6E  00                 	db	0
  1285  017E6F  00                 	db	0
  1286  017E70  00                 	db	0
  1287  017E71  00                 	db	0
  1288  017E72  00                 	db	0
  1289  017E73  00                 	db	0
  1290  017E74  00                 	db	0
  1291  017E75  00                 	db	0
  1292  017E76  00                 	db	0
  1293  017E77  00                 	db	0
  1294  017E78  00                 	db	0
  1295  017E79  00                 	db	0
  1296  017E7A  00                 	db	0
  1297  017E7B  00                 	db	0
  1298  017E7C  00                 	db	0
  1299  017E7D  00                 	db	0
  1300  017E7E  00                 	db	0
  1301  017E7F  00                 	db	0
  1302  017E80  00                 	db	0
  1303  017E81  00                 	db	0
  1304  017E82  00                 	db	0
  1305  017E83  00                 	db	0
  1306  017E84  00                 	db	0
  1307  017E85  00                 	db	0
  1308  017E86  00                 	db	0
  1309  017E87  00                 	db	0
  1310  017E88  00                 	db	0
  1311  017E89  00                 	db	0
  1312  017E8A  00                 	db	0
  1313  017E8B  00                 	db	0
  1314  017E8C  00                 	db	0
  1315  017E8D  00                 	db	0
  1316  017E8E  00                 	db	0
  1317  017E8F  00                 	db	0
  1318  017E90  00                 	db	0
  1319  017E91  00                 	db	0
  1320  017E92  00                 	db	0
  1321  017E93  00                 	db	0
  1322  017E94  00                 	db	0
  1323  017E95  00                 	db	0
  1324  017E96  00                 	db	0
  1325  017E97  00                 	db	0
  1326  017E98  00                 	db	0
  1327  017E99  00                 	db	0
  1328  017E9A  00                 	db	0
  1329  017E9B  00                 	db	0
  1330  017E9C  00                 	db	0
  1331  017E9D  00                 	db	0
  1332  017E9E  00                 	db	0
  1333  017E9F  00                 	db	0
  1334  017EA0  00                 	db	0
  1335  017EA1  00                 	db	0
  1336  017EA2  00                 	db	0
  1337  017EA3  00                 	db	0
  1338  017EA4  00                 	db	0
  1339  017EA5  00                 	db	0
  1340  017EA6  00                 	db	0
  1341  017EA7  00                 	db	0
  1342  017EA8  00                 	db	0
  1343  017EA9  00                 	db	0
  1344  017EAA  00                 	db	0
  1345  017EAB  00                 	db	0
  1346  017EAC  00                 	db	0
  1347  017EAD  00                 	db	0
  1348  017EAE  00                 	db	0
  1349  017EAF  00                 	db	0
  1350  017EB0  00                 	db	0
  1351  017EB1  00                 	db	0
  1352  017EB2  00                 	db	0
  1353  017EB3  00                 	db	0
  1354  017EB4  00                 	db	0
  1355  017EB5  00                 	db	0
  1356  017EB6  00                 	db	0
  1357  017EB7  00                 	db	0
  1358  017EB8  00                 	db	0
  1359  017EB9  00                 	db	0
  1360  017EBA  00                 	db	0
  1361  017EBB  00                 	db	0
  1362  017EBC  00                 	db	0
  1363  017EBD  00                 	db	0
  1364  017EBE  00                 	db	0
  1365  017EBF  00                 	db	0
  1366  017EC0  00                 	db	0
  1367  017EC1  00                 	db	0
  1368  017EC2  00                 	db	0
  1369  017EC3  00                 	db	0
  1370  017EC4  00                 	db	0
  1371  017EC5  00                 	db	0
  1372  017EC6  00                 	db	0
  1373  017EC7  00                 	db	0
  1374  017EC8  00                 	db	0
  1375  017EC9  00                 	db	0
  1376  017ECA  00                 	db	0
  1377  017ECB  00                 	db	0
  1378  017ECC  00                 	db	0
  1379  017ECD  00                 	db	0
  1380  017ECE  00                 	db	0
  1381  017ECF  00                 	db	0
  1382  017ED0  00                 	db	0
  1383  017ED1  00                 	db	0
  1384  017ED2  00                 	db	0
  1385  017ED3  00                 	db	0
  1386  017ED4  00                 	db	0
  1387  017ED5  00                 	db	0
  1388  017ED6  00                 	db	0
  1389  017ED7  00                 	db	0
  1390  017ED8  00                 	db	0
  1391  017ED9  00                 	db	0
  1392  017EDA  00                 	db	0
  1393  017EDB  00                 	db	0
  1394  017EDC  00                 	db	0
  1395  017EDD  00                 	db	0
  1396  017EDE  00                 	db	0
  1397  017EDF  00                 	db	0
  1398  017EE0  00                 	db	0
  1399  017EE1  00                 	db	0
  1400  017EE2  00                 	db	0
  1401  017EE3  00                 	db	0
  1402  017EE4  00                 	db	0
  1403  017EE5  00                 	db	0
  1404  017EE6  00                 	db	0
  1405  017EE7  00                 	db	0
  1406  017EE8  00                 	db	0
  1407  017EE9  00                 	db	0
  1408  017EEA  00                 	db	0
  1409  017EEB  00                 	db	0
  1410  017EEC  00                 	db	0
  1411  017EED  00                 	db	0
  1412  017EEE  00                 	db	0
  1413  017EEF  00                 	db	0
  1414  017EF0  00                 	db	0
  1415  017EF1  00                 	db	0
  1416  017EF2  00                 	db	0
  1417  017EF3  00                 	db	0
  1418  017EF4  00                 	db	0
  1419  017EF5  00                 	db	0
  1420  017EF6  00                 	db	0
  1421  017EF7  00                 	db	0
  1422  017EF8  00                 	db	0
  1423  017EF9  00                 	db	0
  1424  017EFA  00                 	db	0
  1425  017EFB  00                 	db	0
  1426  017EFC  00                 	db	0
  1427  017EFD  00                 	db	0
  1428  017EFE  00                 	db	0
  1429  017EFF  00                 	db	0
  1430  017F00  00                 	db	0
  1431  017F01  00                 	db	0
  1432  017F02  00                 	db	0
  1433  017F03  00                 	db	0
  1434  017F04  00                 	db	0
  1435  017F05  00                 	db	0
  1436  017F06  00                 	db	0
  1437  017F07  00                 	db	0
  1438  017F08  00                 	db	0
  1439  017F09  00                 	db	0
  1440  017F0A  00                 	db	0
  1441  017F0B  00                 	db	0
  1442  017F0C  00                 	db	0
  1443  017F0D  00                 	db	0
  1444  017F0E  00                 	db	0
  1445  017F0F  00                 	db	0
  1446  017F10  00                 	db	0
  1447  017F11  00                 	db	0
  1448  017F12  00                 	db	0
  1449  017F13  00                 	db	0
  1450  017F14  00                 	db	0
  1451  017F15  00                 	db	0
  1452  017F16  00                 	db	0
  1453  017F17  00                 	db	0
  1454  017F18  00                 	db	0
  1455  017F19  00                 	db	0
  1456  017F1A  00                 	db	0
  1457  017F1B  00                 	db	0
  1458  017F1C  00                 	db	0
  1459  017F1D  00                 	db	0
  1460  017F1E  00                 	db	0
  1461  017F1F  00                 	db	0
  1462  017F20  00                 	db	0
  1463  017F21  00                 	db	0
  1464  017F22  00                 	db	0
  1465  017F23  00                 	db	0
  1466  017F24  00                 	db	0
  1467  017F25  00                 	db	0
  1468  017F26  00                 	db	0
  1469  017F27  00                 	db	0
  1470  017F28  00                 	db	0
  1471  017F29  00                 	db	0
  1472  017F2A  00                 	db	0
  1473  017F2B  00                 	db	0
  1474  017F2C  00                 	db	0
  1475  017F2D  00                 	db	0
  1476  017F2E  00                 	db	0
  1477  017F2F  00                 	db	0
  1478  017F30  00                 	db	0
  1479  017F31  00                 	db	0
  1480  017F32  00                 	db	0
  1481  017F33  00                 	db	0
  1482  017F34  00                 	db	0
  1483  017F35  00                 	db	0
  1484  017F36  00                 	db	0
  1485  017F37  00                 	db	0
  1486  017F38  00                 	db	0
  1487  017F39  00                 	db	0
  1488  017F3A  00                 	db	0
  1489  017F3B  00                 	db	0
  1490  017F3C  00                 	db	0
  1491  017F3D  00                 	db	0
  1492  017F3E  00                 	db	0
  1493  017F3F  00                 	db	0
  1494  017F40  00                 	db	0
  1495  017F41  00                 	db	0
  1496  017F42  00                 	db	0
  1497  017F43  00                 	db	0
  1498  017F44  00                 	db	0
  1499  017F45  00                 	db	0
  1500  017F46  00                 	db	0
  1501  017F47  00                 	db	0
  1502  017F48  00                 	db	0
  1503  017F49  00                 	db	0
  1504  017F4A  00                 	db	0
  1505  017F4B  00                 	db	0
  1506  017F4C  00                 	db	0
  1507  017F4D  00                 	db	0
  1508  017F4E  00                 	db	0
  1509  017F4F  00                 	db	0
  1510  017F50  00                 	db	0
  1511  017F51  00                 	db	0
  1512  017F52  00                 	db	0
  1513  017F53  00                 	db	0
  1514  017F54  00                 	db	0
  1515  017F55  00                 	db	0
  1516  017F56  00                 	db	0
  1517  017F57  00                 	db	0
  1518  017F58  00                 	db	0
  1519  017F59  00                 	db	0
  1520  017F5A  00                 	db	0
  1521  017F5B  00                 	db	0
  1522  017F5C  00                 	db	0
  1523  017F5D  00                 	db	0
  1524  017F5E  00                 	db	0
  1525  017F5F  00                 	db	0
  1526  017F60  00                 	db	0
  1527  017F61  00                 	db	0
  1528  017F62  00                 	db	0
  1529  017F63  00                 	db	0
  1530  017F64  00                 	db	0
  1531  017F65  00                 	db	0
  1532  017F66  00                 	db	0
  1533  017F67  00                 	db	0
  1534  017F68  00                 	db	0
  1535  017F69  00                 	db	0
  1536  017F6A  00                 	db	0
  1537  017F6B  00                 	db	0
  1538  017F6C  00                 	db	0
  1539  017F6D  00                 	db	0
  1540  017F6E  00                 	db	0
  1541  017F6F  00                 	db	0
  1542  017F70  00                 	db	0
  1543  017F71  00                 	db	0
  1544  017F72  00                 	db	0
  1545  017F73  00                 	db	0
  1546  017F74  00                 	db	0
  1547  017F75  00                 	db	0
  1548  017F76  00                 	db	0
  1549  017F77  00                 	db	0
  1550  017F78  00                 	db	0
  1551  017F79  00                 	db	0
  1552  017F7A  00                 	db	0
  1553  017F7B  00                 	db	0
  1554  017F7C  00                 	db	0
  1555  017F7D  00                 	db	0
  1556  017F7E  00                 	db	0
  1557  017F7F  00                 	db	0
  1558  017F80  00                 	db	0
  1559  017F81  00                 	db	0
  1560  017F82  00                 	db	0
  1561  017F83  00                 	db	0
  1562  017F84  00                 	db	0
  1563  017F85  00                 	db	0
  1564  017F86  00                 	db	0
  1565  017F87  00                 	db	0
  1566                           
  1567                           ;initializer for _port_data
  1568  017F88  FF                 	db	255
  1569  017F89  00                 	db	0
  1570  017F8A  FF                 	db	255
  1571  017F8B  00                 	db	0
  1572  017F8C  FF                 	db	255
  1573  017F8D  00                 	db	0
  1574  017F8E  FF                 	db	255
  1575  017F8F  00                 	db	0
  1576  017F90  FF                 	db	255
  1577  017F91  00                 	db	0
  1578  017F92  FF                 	db	255
  1579  017F93  00                 	db	0
  1580  017F94  FF                 	db	255
  1581  017F95  00                 	db	0
  1582  017F96  FF                 	db	255
  1583  017F97  00                 	db	0
  1584  017F98  00                 	db	0
  1585  017F99  00                 	db	0
  1586  017F9A  00                 	db	0
  1587  017F9B  00                 	db	0
  1588  017F9C  00                 	db	0
  1589  017F9D  00                 	db	0
  1590  017F9E  00                 	db	0
  1591  017F9F  00                 	db	0
  1592  017FA0  00                 	db	0
  1593  017FA1  00                 	db	0
  1594  017FA2  00                 	db	0
  1595  017FA3  00                 	db	0
  1596  017FA4  00                 	db	0
  1597  017FA5  00                 	db	0
  1598  017FA6  00                 	db	0
  1599  017FA7  00                 	db	0
  1600  017FA8  00                 	db	0
  1601  017FA9  00                 	db	0
  1602  017FAA  00                 	db	0
  1603  017FAB  00                 	db	0
  1604  017FAC  00                 	db	0
  1605  017FAD  00                 	db	0
  1606  017FAE  00                 	db	0
  1607  017FAF  00                 	db	0
  1608  017FB0  00                 	db	0
  1609  017FB1  00                 	db	0
  1610  017FB2  00                 	db	0
  1611  017FB3  00                 	db	0
  1612  017FB4  00                 	db	0
  1613  017FB5  00                 	db	0
  1614  017FB6  00                 	db	0
  1615  017FB7  00                 	db	0
  1616  017FB8  00                 	db	0
  1617  017FB9  00                 	db	0
  1618  017FBA  00                 	db	0
  1619  017FBB  00                 	db	0
  1620  017FBC  00                 	db	0
  1621  017FBD  00                 	db	0
  1622  017FBE  00                 	db	0
  1623  017FBF  00                 	db	0
  1624  017FC0  00                 	db	0
  1625  017FC1  00                 	db	0
  1626  017FC2  00                 	db	0
  1627  017FC3  00                 	db	0
  1628  017FC4  00                 	db	0
  1629  017FC5  00                 	db	0
  1630  017FC6  00                 	db	0
  1631  017FC7  00                 	db	0
  1632  017FC8  00                 	db	0
  1633  017FC9  00                 	db	0
  1634  017FCA  00                 	db	0
  1635  017FCB  00                 	db	0
  1636  017FCC  00                 	db	0
  1637  017FCD  00                 	db	0
  1638  017FCE  00                 	db	0
  1639  017FCF  00                 	db	0
  1640  017FD0  00                 	db	0
  1641  017FD1  00                 	db	0
  1642  017FD2  00                 	db	0
  1643  017FD3  00                 	db	0
  1644  017FD4  00                 	db	0
  1645  017FD5  00                 	db	0
  1646  017FD6  00                 	db	0
  1647  017FD7  00                 	db	0
  1648  017FD8  00                 	db	0
  1649  017FD9  00                 	db	0
  1650  017FDA  00                 	db	0
  1651  017FDB  00                 	db	0
  1652  017FDC  00                 	db	0
  1653  017FDD  00                 	db	0
  1654  017FDE  00                 	db	0
  1655  017FDF  00                 	db	0
  1656  017FE0  00                 	db	0
  1657  017FE1  00                 	db	0
  1658  017FE2  00                 	db	0
  1659  017FE3  00                 	db	0
  1660  017FE4  00                 	db	0
  1661  017FE5  00                 	db	0
  1662  017FE6  00                 	db	0
  1663  017FE7  00                 	db	0
  1664  017FE8  00                 	db	0
  1665  017FE9  00                 	db	0
  1666  017FEA  00                 	db	0
  1667  017FEB  00                 	db	0
  1668  017FEC  00                 	db	0
  1669  017FED  00                 	db	0
  1670  017FEE  00                 	db	0
  1671  017FEF  00                 	db	0
  1672  017FF0  00                 	db	0
  1673  017FF1  00                 	db	0
  1674  017FF2  00                 	db	0
  1675  017FF3  00                 	db	0
  1676  017FF4  00                 	db	0
  1677  017FF5  00                 	db	0
  1678  017FF6  00                 	db	0
  1679  017FF7  00                 	db	0
  1680  017FF8  00                 	db	0
  1681  017FF9  00                 	db	0
  1682  017FFA  00                 	db	0
  1683  017FFB  00                 	db	0
  1684  017FFC  00                 	db	0
  1685  017FFD  00                 	db	0
  1686  017FFE  00                 	db	0
  1687  017FFF  00                 	db	0
  1688  018000  00                 	db	0
  1689  018001  00                 	db	0
  1690  018002  00                 	db	0
  1691  018003  00                 	db	0
  1692  018004  00                 	db	0
  1693  018005  00                 	db	0
  1694  018006  00                 	db	0
  1695  018007  00                 	db	0
  1696  018008  00                 	db	0
  1697  018009  00                 	db	0
  1698  01800A  00                 	db	0
  1699  01800B  00                 	db	0
  1700  01800C  00                 	db	0
  1701  01800D  00                 	db	0
  1702  01800E  00                 	db	0
  1703  01800F  00                 	db	0
  1704  018010  00                 	db	0
  1705  018011  00                 	db	0
  1706  018012  00                 	db	0
  1707  018013  00                 	db	0
  1708  018014  00                 	db	0
  1709  018015  00                 	db	0
  1710  018016  00                 	db	0
  1711  018017  00                 	db	0
  1712  018018  00                 	db	0
  1713  018019  00                 	db	0
  1714  01801A  00                 	db	0
  1715  01801B  00                 	db	0
  1716  01801C  00                 	db	0
  1717  01801D  00                 	db	0
  1718  01801E  00                 	db	0
  1719  01801F  00                 	db	0
  1720  018020  00                 	db	0
  1721  018021  00                 	db	0
  1722  018022  00                 	db	0
  1723  018023  00                 	db	0
  1724  018024  00                 	db	0
  1725  018025  00                 	db	0
  1726  018026  00                 	db	0
  1727  018027  00                 	db	0
  1728  018028  00                 	db	0
  1729  018029  00                 	db	0
  1730  01802A  00                 	db	0
  1731  01802B  00                 	db	0
  1732  01802C  00                 	db	0
  1733  01802D  00                 	db	0
  1734  01802E  00                 	db	0
  1735  01802F  00                 	db	0
  1736  018030  00                 	db	0
  1737  018031  00                 	db	0
  1738  018032  00                 	db	0
  1739  018033  00                 	db	0
  1740  018034  00                 	db	0
  1741  018035  00                 	db	0
  1742  018036  00                 	db	0
  1743  018037  00                 	db	0
  1744  018038  00                 	db	0
  1745  018039  00                 	db	0
  1746  01803A  00                 	db	0
  1747  01803B  00                 	db	0
  1748  01803C  00                 	db	0
  1749  01803D  00                 	db	0
  1750  01803E  00                 	db	0
  1751  01803F  00                 	db	0
  1752  018040  00                 	db	0
  1753  018041  00                 	db	0
  1754  018042  00                 	db	0
  1755  018043  00                 	db	0
  1756  018044  00                 	db	0
  1757  018045  00                 	db	0
  1758  018046  00                 	db	0
  1759  018047  00                 	db	0
  1760  018048  00                 	db	0
  1761  018049  00                 	db	0
  1762  01804A  00                 	db	0
  1763  01804B  00                 	db	0
  1764  01804C  00                 	db	0
  1765  01804D  00                 	db	0
  1766  01804E  00                 	db	0
  1767  01804F  00                 	db	0
  1768  018050  00                 	db	0
  1769  018051  00                 	db	0
  1770  018052  00                 	db	0
  1771  018053  00                 	db	0
  1772  018054  00                 	db	0
  1773  018055  00                 	db	0
  1774  018056  00                 	db	0
  1775  018057  00                 	db	0
  1776  018058  00                 	db	0
  1777  018059  00                 	db	0
  1778  01805A  00                 	db	0
  1779  01805B  00                 	db	0
  1780  01805C  00                 	db	0
  1781  01805D  00                 	db	0
  1782  01805E  00                 	db	0
  1783  01805F  00                 	db	0
  1784  018060  00                 	db	0
  1785  018061  00                 	db	0
  1786  018062  00                 	db	0
  1787  018063  00                 	db	0
  1788  018064  00                 	db	0
  1789  018065  00                 	db	0
  1790  018066  00                 	db	0
  1791  018067  00                 	db	0
  1792  018068  00                 	db	0
  1793  018069  00                 	db	0
  1794  01806A  00                 	db	0
  1795  01806B  00                 	db	0
  1796  01806C  00                 	db	0
  1797  01806D  00                 	db	0
  1798  01806E  00                 	db	0
  1799  01806F  00                 	db	0
  1800  018070  00                 	db	0
  1801  018071  00                 	db	0
  1802  018072  00                 	db	0
  1803  018073  00                 	db	0
  1804  018074  00                 	db	0
  1805  018075  00                 	db	0
  1806  018076  00                 	db	0
  1807  018077  00                 	db	0
  1808  018078  00                 	db	0
  1809  018079  00                 	db	0
  1810  01807A  00                 	db	0
  1811  01807B  00                 	db	0
  1812  01807C  00                 	db	0
  1813  01807D  00                 	db	0
  1814  01807E  00                 	db	0
  1815  01807F  00                 	db	0
  1816  018080  00                 	db	0
  1817  018081  00                 	db	0
  1818  018082  00                 	db	0
  1819  018083  00                 	db	0
  1820  018084  00                 	db	0
  1821  018085  00                 	db	0
  1822  018086  00                 	db	0
  1823  018087  00                 	db	0
  1824  018088  00                 	db	0
  1825  018089  00                 	db	0
  1826  01808A  00                 	db	0
  1827  01808B  00                 	db	0
  1828  01808C  00                 	db	0
  1829  01808D  00                 	db	0
  1830  01808E  00                 	db	0
  1831  01808F  00                 	db	0
  1832  018090  00                 	db	0
  1833  018091  00                 	db	0
  1834  018092  00                 	db	0
  1835  018093  00                 	db	0
  1836  018094  00                 	db	0
  1837  018095  00                 	db	0
  1838  018096  00                 	db	0
  1839  018097  00                 	db	0
  1840  018098  00                 	db	0
  1841  018099  00                 	db	0
  1842  01809A  00                 	db	0
  1843  01809B  00                 	db	0
  1844  01809C  00                 	db	0
  1845  01809D  00                 	db	0
  1846  01809E  00                 	db	0
  1847  01809F  00                 	db	0
  1848  0180A0  00                 	db	0
  1849  0180A1  00                 	db	0
  1850  0180A2  00                 	db	0
  1851  0180A3  00                 	db	0
  1852  0180A4  00                 	db	0
  1853  0180A5  00                 	db	0
  1854  0180A6  00                 	db	0
  1855  0180A7  00                 	db	0
  1856  0180A8  00                 	db	0
  1857  0180A9  00                 	db	0
  1858  0180AA  00                 	db	0
  1859  0180AB  00                 	db	0
  1860  0180AC  00                 	db	0
  1861  0180AD  00                 	db	0
  1862  0180AE  00                 	db	0
  1863  0180AF  00                 	db	0
  1864  0180B0  00                 	db	0
  1865  0180B1  00                 	db	0
  1866  0180B2  00                 	db	0
  1867  0180B3  00                 	db	0
  1868  0180B4  00                 	db	0
  1869  0180B5  00                 	db	0
  1870  0180B6  00                 	db	0
  1871  0180B7  00                 	db	0
  1872  0180B8  00                 	db	0
  1873  0180B9  00                 	db	0
  1874  0180BA  00                 	db	0
  1875  0180BB  00                 	db	0
  1876  0180BC  00                 	db	0
  1877  0180BD  00                 	db	0
  1878  0180BE  00                 	db	0
  1879  0180BF  00                 	db	0
  1880  0180C0  00                 	db	0
  1881  0180C1  00                 	db	0
  1882  0180C2  00                 	db	0
  1883  0180C3  00                 	db	0
  1884  0180C4  00                 	db	0
  1885  0180C5  00                 	db	0
  1886  0180C6  00                 	db	0
  1887  0180C7  00                 	db	0
  1888  0180C8  00                 	db	0
  1889  0180C9  00                 	db	0
  1890  0180CA  00                 	db	0
  1891  0180CB  00                 	db	0
  1892  0180CC  00                 	db	0
  1893  0180CD  00                 	db	0
  1894  0180CE  00                 	db	0
  1895  0180CF  00                 	db	0
  1896  0180D0  00                 	db	0
  1897  0180D1  00                 	db	0
  1898  0180D2  00                 	db	0
  1899  0180D3  00                 	db	0
  1900  0180D4  00                 	db	0
  1901  0180D5  00                 	db	0
  1902  0180D6  00                 	db	0
  1903  0180D7  00                 	db	0
  1904  0180D8  00                 	db	0
  1905  0180D9  00                 	db	0
  1906  0180DA  00                 	db	0
  1907  0180DB  00                 	db	0
  1908  0180DC  00                 	db	0
  1909  0180DD  00                 	db	0
  1910  0180DE  00                 	db	0
  1911  0180DF  00                 	db	0
  1912  0180E0  00                 	db	0
  1913  0180E1  00                 	db	0
  1914  0180E2  00                 	db	0
  1915  0180E3  00                 	db	0
  1916  0180E4  00                 	db	0
  1917  0180E5  00                 	db	0
  1918  0180E6  00                 	db	0
  1919  0180E7  00                 	db	0
  1920  0180E8  00                 	db	0
  1921  0180E9  00                 	db	0
  1922  0180EA  00                 	db	0
  1923  0180EB  00                 	db	0
  1924  0180EC  00                 	db	0
  1925  0180ED  00                 	db	0
  1926  0180EE  00                 	db	0
  1927  0180EF  00                 	db	0
  1928  0180F0  00                 	db	0
  1929  0180F1  00                 	db	0
  1930  0180F2  00                 	db	0
  1931  0180F3  00                 	db	0
  1932  0180F4  00                 	db	0
  1933  0180F5  00                 	db	0
  1934  0180F6  00                 	db	0
  1935  0180F7  00                 	db	0
  1936  0180F8  00                 	db	0
  1937  0180F9  00                 	db	0
  1938  0180FA  00                 	db	0
  1939  0180FB  00                 	db	0
  1940  0180FC  00                 	db	0
  1941  0180FD  00                 	db	0
  1942  0180FE  00                 	db	0
  1943  0180FF  00                 	db	0
  1944  018100  00                 	db	0
  1945  018101  00                 	db	0
  1946  018102  00                 	db	0
  1947  018103  00                 	db	0
  1948  018104  00                 	db	0
  1949  018105  00                 	db	0
  1950  018106  00                 	db	0
  1951  018107  00                 	db	0
  1952  018108  00                 	db	0
  1953  018109  00                 	db	0
  1954  01810A  00                 	db	0
  1955  01810B  00                 	db	0
  1956  01810C  00                 	db	0
  1957  01810D  00                 	db	0
  1958  01810E  00                 	db	0
  1959  01810F  00                 	db	0
  1960  018110  00                 	db	0
  1961  018111  00                 	db	0
  1962  018112  00                 	db	0
  1963  018113  00                 	db	0
  1964  018114  00                 	db	0
  1965  018115  00                 	db	0
  1966  018116  00                 	db	0
  1967  018117  00                 	db	0
  1968  018118  00                 	db	0
  1969  018119  00                 	db	0
  1970  01811A  00                 	db	0
  1971  01811B  00                 	db	0
  1972  01811C  00                 	db	0
  1973  01811D  00                 	db	0
  1974  01811E  00                 	db	0
  1975  01811F  00                 	db	0
  1976  018120  00                 	db	0
  1977  018121  00                 	db	0
  1978  018122  00                 	db	0
  1979  018123  00                 	db	0
  1980  018124  00                 	db	0
  1981  018125  00                 	db	0
  1982  018126  00                 	db	0
  1983  018127  00                 	db	0
  1984  018128  00                 	db	0
  1985  018129  00                 	db	0
  1986  01812A  00                 	db	0
  1987  01812B  00                 	db	0
  1988  01812C  00                 	db	0
  1989  01812D  00                 	db	0
  1990  01812E  00                 	db	0
  1991  01812F  00                 	db	0
  1992  018130  00                 	db	0
  1993  018131  00                 	db	0
  1994  018132  00                 	db	0
  1995  018133  00                 	db	0
  1996  018134  00                 	db	0
  1997  018135  00                 	db	0
  1998  018136  00                 	db	0
  1999  018137  00                 	db	0
  2000  018138  00                 	db	0
  2001  018139  00                 	db	0
  2002  01813A  00                 	db	0
  2003  01813B  00                 	db	0
  2004  01813C  00                 	db	0
  2005  01813D  00                 	db	0
  2006  01813E  00                 	db	0
  2007  01813F  00                 	db	0
  2008  018140  00                 	db	0
  2009  018141  00                 	db	0
  2010  018142  00                 	db	0
  2011  018143  00                 	db	0
  2012  018144  00                 	db	0
  2013  018145  00                 	db	0
  2014  018146  00                 	db	0
  2015  018147  00                 	db	0
  2016  018148  00                 	db	0
  2017  018149  00                 	db	0
  2018  01814A  00                 	db	0
  2019  01814B  00                 	db	0
  2020  01814C  00                 	db	0
  2021  01814D  00                 	db	0
  2022  01814E  00                 	db	0
  2023  01814F  00                 	db	0
  2024  018150  00                 	db	0
  2025  018151  00                 	db	0
  2026  018152  00                 	db	0
  2027  018153  00                 	db	0
  2028  018154  00                 	db	0
  2029  018155  00                 	db	0
  2030  018156  00                 	db	0
  2031  018157  00                 	db	0
  2032  018158  00                 	db	0
  2033  018159  00                 	db	0
  2034  01815A  00                 	db	0
  2035  01815B  00                 	db	0
  2036  01815C  00                 	db	0
  2037  01815D  00                 	db	0
  2038  01815E  00                 	db	0
  2039  01815F  00                 	db	0
  2040  018160  00                 	db	0
  2041  018161  00                 	db	0
  2042  018162  00                 	db	0
  2043  018163  00                 	db	0
  2044  018164  00                 	db	0
  2045  018165  00                 	db	0
  2046  018166  00                 	db	0
  2047  018167  00                 	db	0
  2048  018168  00                 	db	0
  2049  018169  00                 	db	0
  2050  01816A  00                 	db	0
  2051  01816B  00                 	db	0
  2052  01816C  00                 	db	0
  2053  01816D  00                 	db	0
  2054  01816E  00                 	db	0
  2055  01816F  00                 	db	0
  2056  018170  00                 	db	0
  2057  018171  00                 	db	0
  2058  018172  00                 	db	0
  2059  018173  00                 	db	0
  2060  018174  00                 	db	0
  2061  018175  00                 	db	0
  2062  018176  00                 	db	0
  2063  018177  00                 	db	0
  2064  018178  00                 	db	0
  2065  018179  00                 	db	0
  2066  01817A  00                 	db	0
  2067  01817B  00                 	db	0
  2068  01817C  00                 	db	0
  2069  01817D  00                 	db	0
  2070  01817E  00                 	db	0
  2071  01817F  00                 	db	0
  2072  018180  00                 	db	0
  2073  018181  00                 	db	0
  2074  018182  00                 	db	0
  2075  018183  00                 	db	0
  2076  018184  00                 	db	0
  2077  018185  00                 	db	0
  2078  018186  00                 	db	0
  2079  018187  00                 	db	0
  2080                           
  2081                           ;initializer for _C
  2082  018188  0000               	dw	0
  2083  01818A  0000               	dw	0
  2084  01818C  0000               	dw	0
  2085  01818E  0000               	dw	0
  2086  018190  0000               	dw	0
  2087  018192  0000               	dw	0
  2088  018194  0000               	dw	0
  2089  018196  0000               	dw	0
  2090  018198  0000               	dw	0
  2091  01819A  0000               	dw	0
  2092  01819C  0000               	dw	0
  2093  01819E  0000               	dw	0
  2094  0181A0  0000               	dw	0
  2095  0181A2  0000               	dw	0
  2096  0181A4  0000               	dw	0
  2097  0181A6  0000               	dw	0
  2098  0181A8  0000               	dw	0
  2099  0181AA  0000               	dw	0
  2100  0181AC  0000               	dw	0
  2101  0181AE  0000               	dw	0
  2102  0181B0  0000               	dw	0
  2103  0181B2  0000               	dw	0
  2104  0181B4  0000               	dw	0
  2105  0181B6  0000               	dw	0
  2106  0181B8  0000               	dw	0
  2107  0181BA  0000               	dw	0
  2108  0181BC  0000               	dw	0
  2109  0181BE  0000               	dw	0
  2110  0181C0  0000               	dw	0
  2111  0181C2  0000               	dw	0
  2112  0181C4  0000               	dw	0
  2113  0181C6  0000               	dw	0
  2114  0181C8  0000               	dw	0
  2115  0181CA  0000               	dw	0
  2116  0181CC  0000               	dw	0
  2117  0181CE  0000               	dw	0
  2118  0181D0  0000               	dw	0
  2119  0181D2  0000               	dw	0
  2120  0181D4  0000               	dw	0
  2121  0181D6  0000               	dw	0
  2122  0181D8  0000               	dw	0
  2123  0181DA  0000               	dw	0
  2124  0181DC  0000               	dw	0
  2125  0181DE  0000               	dw	0
  2126  0181E0  0000               	dw	0
  2127  0181E2  0000               	dw	0
  2128  0181E4  0000               	dw	0
  2129  0181E6  0000               	dw	0
  2130  0181E8  0000               	dw	0
  2131  0181EA  0000               	dw	0
  2132  0181EC  0000               	dw	0
  2133  0181EE  0000               	dw	0
  2134  0181F0  0000               	dw	0
  2135  0181F2  0000               	dw	0
  2136  0181F4  0000               	dw	0
  2137  0181F6  0000               	dw	0
  2138  0181F8  0000               	dw	0
  2139  0181FA  0000               	dw	0
  2140  0181FC  0000               	dw	0
  2141  0181FE  0000               	dw	0
  2142  018200  0000               	dw	0
  2143  018202  0000               	dw	0
  2144  018204  0000               	dw	0
  2145  018206  0000               	dw	0
  2146  018208  0000               	dw	0
  2147  01820A  0000               	dw	0
  2148  01820C  0000               	dw	0
  2149  01820E  0000               	dw	0
  2150  018210  0000               	dw	0
  2151  018212  0000               	dw	0
  2152  018214  0000               	dw	0
  2153  018216  42FA               	dw	17146
  2154  018218  0000               	dw	0
  2155  01821A  0000               	dw	0
  2156  01821C  0000               	dw	0
  2157  01821E  0000               	dw	0
  2158  018220  0000               	dw	0
  2159  018222  0000               	dw	0
  2160  018224  0000               	dw	0
  2161  018226  0000               	dw	0
  2162  018228  0000               	dw	0
  2163  01822A  0000               	dw	0
  2164  01822C  0000               	dw	0
  2165  01822E  0000               	dw	0
  2166  018230  0000               	dw	0
  2167  018232  0000               	dw	0
  2168  018234  0000               	dw	0
  2169  018236  0000               	dw	0
  2170  018238  0000               	dw	0
  2171  01823A  0000               	dw	0
  2172  01823C  0000               	dw	0
  2173  01823E  0000               	dw	0
  2174  018240  00                 	db	0
  2175  018241  0000               	dw	0
  2176  018243  0000               	dw	0
  2177  018245  0000               	dw	0
  2178  018247  0000               	dw	0
  2179  018249  0000               	dw	0
  2180  01824B  0000               	dw	0
  2181  01824D  0000               	dw	0
  2182  01824F  0000               	dw	0
  2183  018251  0000               	dw	0
  2184  018253  0000               	dw	0
  2185  018255  0000               	dw	0
  2186  018257  0000               	dw	0
  2187  018259  0000               	dw	0
  2188  01825B  3F80               	dw	16256
  2189  01825D  0000               	dw	0
  2190  01825F  3F80               	dw	16256
  2191  018261  0000               	dw	0
  2192  018263  0000               	dw	0
  2193  018265  0000               	dw	0
  2194  018267  0000               	dw	0
  2195  018269  0000               	dw	0
  2196  01826B  0000               	dw	0
  2197  01826D  0000               	dw	0
  2198  01826F  0000               	dw	0
  2199  018271  0000               	dw	0
  2200  018273  0000               	dw	0
  2201  018275  0000               	dw	0
  2202  018277  0000               	dw	0
  2203  018279  0000               	dw	0
  2204  01827B  0000               	dw	0
  2205  01827D  0000               	dw	0
  2206  01827F  3A98               	dw	15000
  2207  018281  0000               	dw	0
  2208  018283  00                 	db	0
  2209  018284  00                 	db	0
  2210  018285  00                 	db	0
  2211  018286  00                 	db	0
  2212  018287  0000               	dw	0
  2213  018289  0000               	dw	0
  2214  01828B  0000               	dw	0
  2215  01828D  0000               	dw	0
  2216  01828F  0000               	dw	0
  2217  018291  0000               	dw	0
  2218  018293  0000               	dw	0
  2219  018295  0000               	dw	0
  2220  018297  0000               	dw	0
  2221  018299  0000               	dw	0
  2222  01829B  0000               	dw	0
  2223  01829D  0000               	dw	0
  2224  01829F  0000               	dw	0
  2225  0182A1  01                 	db	1
  2226  0182A2  0000               	dw	0
  2227  0182A4  0000               	dw	0
  2228  0182A6  0000               	dw	0
  2229  0182A8  0000               	dw	0
  2230  0182AA  0000               	dw	0
  2231  0182AC  0000               	dw	0
  2232  0182AE  0000               	dw	0
  2233  0182B0  0000               	dw	0
  2234  0182B2  0000               	dw	0
  2235  0182B4  0000               	dw	0
  2236  0182B6  01                 	db	1
  2237  0182B7  00                 	db	0
  2238  0182B8  0000               	dw	0
  2239  0182BA  0000               	dw	0
  2240  0182BC  0000               	dw	0
  2241  0182BE  0000               	dw	0
  2242  0182C0  0000               	dw	0
  2243  0182C2  0000               	dw	0
  2244  0182C4  0000               	dw	0
  2245  0182C6  0000               	dw	0
  2246                           
  2247                           	psect	idataBANK1
  2248  000E22                     __pidataBANK1:
  2249                           	opt callstack 0
  2250                           
  2251                           ;initializer for _R
  2252  000E22  0000               	dw	0
  2253  000E24  0000               	dw	0
  2254  000E26  0000               	dw	0
  2255  000E28  0000               	dw	0
  2256  000E2A  0000               	dw	0
  2257  000E2C  0000               	dw	0
  2258  000E2E  0000               	dw	0
  2259  000E30  0000               	dw	0
  2260  000E32  0000               	dw	0
  2261  000E34  0000               	dw	0
  2262  000E36  0000               	dw	0
  2263  000E38  0000               	dw	0
  2264  000E3A  0000               	dw	0
  2265  000E3C  0000               	dw	0
  2266  000E3E  0000               	dw	0
  2267  000E40  0000               	dw	0
  2268  000E42  0000               	dw	0
  2269  000E44  0000               	dw	0
  2270  000E46  0000               	dw	0
  2271  000E48  0F62               	dw	3938
  2272  000E4A  0FA4               	dw	4004
  2273  000E4C  89A0               	dw	35232
  2274  000E4E  3DB0               	dw	15792
  2275  000E50  DEA4               	dw	56996
  2276  000E52  3D13               	dw	15635
  2277  000E54  00                 	db	0
  2278  000E55  0000               	dw	0
  2279  000E57  00                 	db	0
  2280  000E58  0000               	dw	0
  2281  000E5A  0000               	dw	0
  2282  000E5C  0000               	dw	0
  2283  000E5E  0000               	dw	0
  2284  000E60  0000               	dw	0
  2285  000E62  0000               	dw	0
  2286  000E64  0000               	dw	0
  2287  000E66  0000               	dw	0
  2288  000E68  0000               	dw	0
  2289  000E6A  0000               	dw	0
  2290  000E6C  0000               	dw	0
  2291  000E6E  0000               	dw	0
  2292  000E70  0000               	dw	0
  2293  000E72  0000               	dw	0
  2294  000E74  0000               	dw	0
  2295  000E76  0000               	dw	0
  2296  000E78  0000               	dw	0
  2297  000E7A  0000               	dw	0
  2298  000E7C  0000               	dw	0
  2299  000E7E  0000               	dw	0
  2300  000E80  0000               	dw	0
  2301  000E82  0000               	dw	0
  2302  000E84  0000               	dw	0
  2303  000E86  0000               	dw	0
  2304  000E88  0000               	dw	0
  2305  000E8A  0000               	dw	0
  2306  000E8C  0000               	dw	0
  2307  000E8E  0000               	dw	0
  2308  000E90  0000               	dw	0
  2309  000E92  0000               	dw	0
  2310  000E94  0000               	dw	0
  2311  000E96  0000               	dw	0
  2312  000E98  0000               	dw	0
  2313  000E9A  0000               	dw	0
  2314  000E9C  0000               	dw	0
  2315  000E9E  0000               	dw	0
  2316  000EA0  0000               	dw	0
  2317  000EA2  0000               	dw	0
  2318  000EA4  0000               	dw	0
  2319  000EA6  0000               	dw	0
  2320  000EA8  0000               	dw	0
  2321  000EAA  0000               	dw	0
  2322  000EAC  0000               	dw	0
  2323  000EAE  0000               	dw	0
  2324  000EB0  0000               	dw	0
  2325  000EB2  0000               	dw	0
  2326  000EB4  0000               	dw	0
  2327  000EB6  0000               	dw	0
  2328  000EB8  00                 	db	0
  2329  000EB9  00                 	db	0
  2330  000EBA  1957               	dw	6487
  2331  000EBC  42                 	db	66
  2332                           
  2333                           ;initializer for _H
  2334  000EBD  00                 	db	0
  2335  000EBE  00                 	db	0
  2336  000EBF  01                 	db	1
  2337  000EC0  00                 	db	0
  2338  000EC1  01                 	db	1
  2339  000EC2  00                 	db	0
  2340  000EC3  01                 	db	1
  2341  000EC4  00                 	db	0
  2342  000EC5  00                 	db	0
  2343                           
  2344                           	psect	idataBANK2
  2345  000894                     __pidataBANK2:
  2346                           	opt callstack 0
  2347                           
  2348                           ;initializer for stoa@F1166
  2349  000894  28                 	db	40
  2350  000895  6E                 	db	110
  2351  000896  75                 	db	117
  2352  000897  6C                 	db	108
  2353  000898  6C                 	db	108
  2354  000899  29                 	db	41
  2355  00089A  00                 	db	0
  2356                           
  2357                           ;initializer for _V
  2358  00089B  00                 	db	0
  2359  00089C  00                 	db	0
  2360  00089D  00                 	db	0
  2361  00089E  00                 	db	0
  2362  00089F  00                 	db	0
  2363  0008A0  00                 	db	0
  2364  0008A1  00                 	db	0
  2365  0008A2  00                 	db	0
  2366  0008A3  00                 	db	0
  2367  0008A4  00                 	db	0
  2368  0008A5  00                 	db	0
  2369  0008A6  00                 	db	0
  2370  0008A7  00                 	db	0
  2371  0008A8  00                 	db	0
  2372  0008A9  00                 	db	0
  2373  0008AA  00                 	db	0
  2374  0008AB  00                 	db	0
  2375  0008AC  00                 	db	0
  2376  0008AD  00                 	db	0
  2377  0008AE  00                 	db	0
  2378  0008AF  00                 	db	0
  2379  0008B0  00                 	db	0
  2380  0008B1  00                 	db	0
  2381  0008B2  00                 	db	0
  2382  0008B3  00                 	db	0
  2383  0008B4  00                 	db	0
  2384  0008B5  00                 	db	0
  2385  0008B6  00                 	db	0
  2386  0008B7  00                 	db	0
  2387  0008B8  00                 	db	0
  2388  0008B9  00                 	db	0
  2389  0008BA  00                 	db	0
  2390  0008BB  00                 	db	0
  2391  0008BC  00                 	db	0
  2392  0008BD  00                 	db	0
  2393  0008BE  00                 	db	0
  2394  0008BF  00                 	db	0
  2395  0008C0  00                 	db	0
  2396  0008C1  00                 	db	0
  2397  0008C2  00                 	db	0
  2398  0008C3  00                 	db	0
  2399  0008C4  00                 	db	0
  2400  0008C5  00                 	db	0
  2401  0008C6  00                 	db	0
  2402  0008C7  00                 	db	0
  2403  0008C8  00                 	db	0
  2404  0008C9  00                 	db	0
  2405  0008CA  00                 	db	0
  2406  0008CB  00                 	db	0
  2407  0008CC  00                 	db	0
  2408  0008CD  00                 	db	0
  2409  0008CE  00                 	db	0
  2410  0008CF  00                 	db	0
  2411  0008D0  00                 	db	0
  2412  0008D1  00                 	db	0
  2413  0008D2  00                 	db	0
  2414  0008D3  00                 	db	0
  2415  0008D4  00                 	db	0
  2416  0008D5  00                 	db	0
  2417  0008D6  00                 	db	0
  2418  0008D7  00                 	db	0
  2419  0008D8  00                 	db	0
  2420  0008D9  00                 	db	0
  2421  0008DA  00                 	db	0
  2422  0008DB  00                 	db	0
  2423  0008DC  00                 	db	0
  2424  0008DD  00                 	db	0
  2425  0008DE  00                 	db	0
  2426  0008DF  00                 	db	0
  2427  0008E0  00                 	db	0
  2428  0008E1  00                 	db	0
  2429  0008E2  00                 	db	0
  2430  0008E3  00                 	db	0
  2431  0008E4  00                 	db	0
  2432  0008E5  00                 	db	0
  2433  0008E6  00                 	db	0
  2434  0008E7  00                 	db	0
  2435  0008E8  00                 	db	0
  2436  0008E9  00                 	db	0
  2437  0008EA  00                 	db	0
  2438  0008EB  00                 	db	0
  2439  0008EC  00                 	db	0
  2440  0008ED  00                 	db	0
  2441  0008EE  00                 	db	0
  2442  0008EF  00                 	db	0
  2443  0008F0  00                 	db	0
  2444  0008F1  00                 	db	0
  2445  0008F2  00                 	db	0
  2446  0008F3  00                 	db	0
  2447  0008F4  00                 	db	0
  2448  0008F5  00                 	db	0
  2449  0008F6  00                 	db	0
  2450  0008F7  00                 	db	0
  2451  0008F8  00                 	db	0
  2452  0008F9  00                 	db	0
  2453  0008FA  00                 	db	0
  2454  0008FB  00                 	db	0
  2455  0008FC  00                 	db	0
  2456  0008FD  00                 	db	0
  2457  0008FE  00                 	db	0
  2458  0008FF  00                 	db	0
  2459  000900  00                 	db	0
  2460  000901  00                 	db	0
  2461  000902  00                 	db	0
  2462  000903  00                 	db	0
  2463  000904  00                 	db	0
  2464  000905  00                 	db	0
  2465  000906  00                 	db	0
  2466  000907  00                 	db	0
  2467  000908  00                 	db	0
  2468  000909  00                 	db	0
  2469  00090A  00                 	db	0
  2470  00090B  00                 	db	0
  2471  00090C  00                 	db	0
  2472  00090D  00                 	db	0
  2473  00090E  00                 	db	0
  2474  00090F  00                 	db	0
  2475  000910  00                 	db	0
  2476  000911  00                 	db	0
  2477  000912  00                 	db	0
  2478  000913  00                 	db	0
  2479  000914  00                 	db	0
  2480  000915  00                 	db	0
  2481  000916  00                 	db	0
  2482  000917  00                 	db	0
  2483  000918  00                 	db	0
  2484  000919  00                 	db	0
  2485  00091A  00                 	db	0
  2486  00091B  00                 	db	0
  2487  00091C  879E               	dw	34718
  2488  00091E  5E4C               	dw	24140
  2489  000920  00                 	db	0
  2490  000921  00                 	db	0
  2491  000922  00                 	db	0
  2492  000923  00                 	db	0
  2493  000924  00                 	db	0
  2494  000925  00                 	db	0
  2495  000926  00                 	db	0
  2496  000927  0000               	dw	0
  2497  000929  0000               	dw	0
  2498  00092B  0000               	dw	0
  2499  00092D  0000               	dw	0
  2500  00092F  0000               	dw	0
  2501  000931  0000               	dw	0
  2502  000933  00                 	db	0
  2503  000934  00                 	db	0
  2504  000935  00                 	db	0
  2505  000936  00                 	db	0
  2506  000937  00                 	db	0
  2507  000938  00                 	db	0
  2508  000939  00                 	db	0
  2509  00093A  00                 	db	0
  2510  00093B  00                 	db	0
  2511  00093C  00                 	db	0
  2512  00093D  00                 	db	0
  2513  00093E  0000               	dw	0
  2514  000940  0000               	dw	0
  2515  000942  2D                 	db	45
  2516  000943  00                 	db	0
  2517  000944  00                 	db	0
  2518  000945  00                 	db	0
  2519  000946  00                 	db	0
  2520  000947  00                 	db	0
  2521  000948  0000               	dw	0
  2522  00094A  0000               	dw	0
  2523  00094C  0000               	dw	0
  2524  00094E  0000               	dw	0
  2525                           
  2526                           	psect	mediumconst
  2527  00F7AA                     __pmediumconst:
  2528                           	opt callstack 0
  2529  00F7AA  00                 	db	0
  2530  00F7AB                     _BVSOC_TABLE:
  2531                           	opt callstack 0
  2532  00F7AB  59D8               	dw	23000
  2533  00F7AD  0000               	dw	0
  2534  00F7AF  0005               	dw	5
  2535  00F7B1  0000               	dw	0
  2536  00F7B3  5B68               	dw	23400
  2537  00F7B5  0000               	dw	0
  2538  00F7B7  000A               	dw	10
  2539  00F7B9  0000               	dw	0
  2540  00F7BB  5C30               	dw	23600
  2541  00F7BD  0000               	dw	0
  2542  00F7BF  0014               	dw	20
  2543  00F7C1  0000               	dw	0
  2544  00F7C3  5E38               	dw	24120
  2545  00F7C5  0000               	dw	0
  2546  00F7C7  0019               	dw	25
  2547  00F7C9  0000               	dw	0
  2548  00F7CB  5E88               	dw	24200
  2549  00F7CD  0000               	dw	0
  2550  00F7CF  001E               	dw	30
  2551  00F7D1  0000               	dw	0
  2552  00F7D3  5F78               	dw	24440
  2553  00F7D5  0000               	dw	0
  2554  00F7D7  0028               	dw	40
  2555  00F7D9  0000               	dw	0
  2556  00F7DB  5FDC               	dw	24540
  2557  00F7DD  0000               	dw	0
  2558  00F7DF  002D               	dw	45
  2559  00F7E1  0000               	dw	0
  2560  00F7E3  6018               	dw	24600
  2561  00F7E5  0000               	dw	0
  2562  00F7E7  0032               	dw	50
  2563  00F7E9  0000               	dw	0
  2564  00F7EB  6046               	dw	24646
  2565  00F7ED  0000               	dw	0
  2566  00F7EF  0035               	dw	53
  2567  00F7F1  0000               	dw	0
  2568  00F7F3  607C               	dw	24700
  2569  00F7F5  0000               	dw	0
  2570  00F7F7  0037               	dw	55
  2571  00F7F9  0000               	dw	0
  2572  00F7FB  60AE               	dw	24750
  2573  00F7FD  0000               	dw	0
  2574  00F7FF  0039               	dw	57
  2575  00F801  0000               	dw	0
  2576  00F803  60E0               	dw	24800
  2577  00F805  0000               	dw	0
  2578  00F807  003C               	dw	60
  2579  00F809  0000               	dw	0
  2580  00F80B  6112               	dw	24850
  2581  00F80D  0000               	dw	0
  2582  00F80F  003F               	dw	63
  2583  00F811  0000               	dw	0
  2584  00F813  615D               	dw	24925
  2585  00F815  0000               	dw	0
  2586  00F817  0043               	dw	67
  2587  00F819  0000               	dw	0
  2588  00F81B  61A8               	dw	25000
  2589  00F81D  0000               	dw	0
  2590  00F81F  0046               	dw	70
  2591  00F821  0000               	dw	0
  2592  00F823  61BC               	dw	25020
  2593  00F825  0000               	dw	0
  2594  00F827  0048               	dw	72
  2595  00F829  0000               	dw	0
  2596  00F82B  61D0               	dw	25040
  2597  00F82D  0000               	dw	0
  2598  00F82F  004B               	dw	75
  2599  00F831  0000               	dw	0
  2600  00F833  61DA               	dw	25050
  2601  00F835  0000               	dw	0
  2602  00F837  0050               	dw	80
  2603  00F839  0000               	dw	0
  2604  00F83B  61E4               	dw	25060
  2605  00F83D  0000               	dw	0
  2606  00F83F  0055               	dw	85
  2607  00F841  0000               	dw	0
  2608  00F843  61F8               	dw	25080
  2609  00F845  0000               	dw	0
  2610  00F847  005A               	dw	90
  2611  00F849  0000               	dw	0
  2612  00F84B  6208               	dw	25096
  2613  00F84D  0000               	dw	0
  2614  00F84F  005C               	dw	92
  2615  00F851  0000               	dw	0
  2616  00F853  6222               	dw	25122
  2617  00F855  0000               	dw	0
  2618  00F857  005D               	dw	93
  2619  00F859  0000               	dw	0
  2620  00F85B  6234               	dw	25140
  2621  00F85D  0000               	dw	0
  2622  00F85F  005F               	dw	95
  2623  00F861  0000               	dw	0
  2624  00F863  6248               	dw	25160
  2625  00F865  0000               	dw	0
  2626  00F867  0061               	dw	97
  2627  00F869  0000               	dw	0
  2628  00F86B  625C               	dw	25180
  2629  00F86D  0000               	dw	0
  2630  00F86F  0064               	dw	100
  2631  00F871  0000               	dw	0
  2632  00F873  6784               	dw	26500
  2633  00F875  0000               	dw	0
  2634  00F877  0062               	dw	98
  2635  00F879  0000               	dw	0
  2636  00F87B                     __end_of_BVSOC_TABLE:
  2637                           	opt callstack 0
  2638  00F87B                     ___month_to_secs@secs_through_month:
  2639                           	opt callstack 0
  2640  00F87B  0000               	dw	0
  2641  00F87D  0000               	dw	0
  2642  00F87F  DE80               	dw	56960
  2643  00F881  0028               	dw	40
  2644  00F883  C880               	dw	51328
  2645  00F885  004D               	dw	77
  2646  00F887  A700               	dw	42752
  2647  00F889  0076               	dw	118
  2648  00F88B  3400               	dw	13312
  2649  00F88D  009E               	dw	158
  2650  00F88F  1280               	dw	4736
  2651  00F891  00C7               	dw	199
  2652  00F893  9F80               	dw	40832
  2653  00F895  00EE               	dw	238
  2654  00F897  7E00               	dw	32256
  2655  00F899  0117               	dw	279
  2656  00F89B  5C80               	dw	23680
  2657  00F89D  0140               	dw	320
  2658  00F89F  E980               	dw	59776
  2659  00F8A1  0167               	dw	359
  2660  00F8A3  C800               	dw	51200
  2661  00F8A5  0190               	dw	400
  2662  00F8A7  5500               	dw	21760
  2663  00F8A9  01B8               	dw	440
  2664  00F8AB                     __end_of___month_to_secs@secs_through_month:
  2665                           	opt callstack 0
  2666  00F8AB                     ___secs_to_tm@days_in_month:
  2667                           	opt callstack 0
  2668  00F8AB  1F                 	db	31
  2669  00F8AC  1E                 	db	30
  2670  00F8AD  1F                 	db	31
  2671  00F8AE  1E                 	db	30
  2672  00F8AF  1F                 	db	31
  2673  00F8B0  1F                 	db	31
  2674  00F8B1  1E                 	db	30
  2675  00F8B2  1F                 	db	31
  2676  00F8B3  1E                 	db	30
  2677  00F8B4  1F                 	db	31
  2678  00F8B5  1F                 	db	31
  2679  00F8B6  1D                 	db	29
  2680  00F8B7                     __end_of___secs_to_tm@days_in_month:
  2681                           	opt callstack 0
  2682  00F8B7                     _T:
  2683                           	opt callstack 0
  2684  00F8B7  63                 	db	99
  2685  00F8B8  6F                 	db	111
  2686  00F8B9  6D                 	db	109
  2687  00F8BA  6D                 	db	109
  2688  00F8BB  61                 	db	97
  2689  00F8BC  6E                 	db	110
  2690  00F8BD  64                 	db	100
  2691  00F8BE  73                 	db	115
  2692  00F8BF  20                 	db	32
  2693  00F8C0  31                 	db	49
  2694  00F8C1  00                 	db	0
  2695  00F8C2  00                 	db	0
  2696  00F8C3  00                 	db	0
  2697  00F8C4  00                 	db	0
  2698  00F8C5  00                 	db	0
  2699  00F8C6  00                 	db	0
  2700  00F8C7  00                 	db	0
  2701  00F8C8  00                 	db	0
  2702  00F8C9  00                 	db	0
  2703  00F8CA  00                 	db	0
  2704  00F8CB  00                 	db	0
  2705  00F8CC  00                 	db	0
  2706  00F8CD  64                 	db	100
  2707  00F8CE  69                 	db	105
  2708  00F8CF  73                 	db	115
  2709  00F8D0  70                 	db	112
  2710  00F8D1  6C                 	db	108
  2711  00F8D2  61                 	db	97
  2712  00F8D3  79                 	db	121
  2713  00F8D4  73                 	db	115
  2714  00F8D5  20                 	db	32
  2715  00F8D6  31                 	db	49
  2716  00F8D7  00                 	db	0
  2717  00F8D8  00                 	db	0
  2718  00F8D9  00                 	db	0
  2719  00F8DA  00                 	db	0
  2720  00F8DB  00                 	db	0
  2721  00F8DC  00                 	db	0
  2722  00F8DD  00                 	db	0
  2723  00F8DE  00                 	db	0
  2724  00F8DF  00                 	db	0
  2725  00F8E0  00                 	db	0
  2726  00F8E1  00                 	db	0
  2727  00F8E2  00                 	db	0
  2728  00F8E3  63                 	db	99
  2729  00F8E4  6F                 	db	111
  2730  00F8E5  6D                 	db	109
  2731  00F8E6  6D                 	db	109
  2732  00F8E7  61                 	db	97
  2733  00F8E8  6E                 	db	110
  2734  00F8E9  64                 	db	100
  2735  00F8EA  73                 	db	115
  2736  00F8EB  20                 	db	32
  2737  00F8EC  32                 	db	50
  2738  00F8ED  00                 	db	0
  2739  00F8EE  00                 	db	0
  2740  00F8EF  00                 	db	0
  2741  00F8F0  00                 	db	0
  2742  00F8F1  00                 	db	0
  2743  00F8F2  00                 	db	0
  2744  00F8F3  00                 	db	0
  2745  00F8F4  00                 	db	0
  2746  00F8F5  00                 	db	0
  2747  00F8F6  00                 	db	0
  2748  00F8F7  00                 	db	0
  2749  00F8F8  00                 	db	0
  2750  00F8F9  64                 	db	100
  2751  00F8FA  69                 	db	105
  2752  00F8FB  73                 	db	115
  2753  00F8FC  70                 	db	112
  2754  00F8FD  6C                 	db	108
  2755  00F8FE  61                 	db	97
  2756  00F8FF  79                 	db	121
  2757  00F900  73                 	db	115
  2758  00F901  20                 	db	32
  2759  00F902  32                 	db	50
  2760  00F903  00                 	db	0
  2761  00F904  00                 	db	0
  2762  00F905  00                 	db	0
  2763  00F906  00                 	db	0
  2764  00F907  00                 	db	0
  2765  00F908  00                 	db	0
  2766  00F909  00                 	db	0
  2767  00F90A  00                 	db	0
  2768  00F90B  00                 	db	0
  2769  00F90C  00                 	db	0
  2770  00F90D  00                 	db	0
  2771  00F90E  00                 	db	0
  2772  00F90F  63                 	db	99
  2773  00F910  6F                 	db	111
  2774  00F911  6D                 	db	109
  2775  00F912  6D                 	db	109
  2776  00F913  61                 	db	97
  2777  00F914  6E                 	db	110
  2778  00F915  64                 	db	100
  2779  00F916  73                 	db	115
  2780  00F917  20                 	db	32
  2781  00F918  33                 	db	51
  2782  00F919  00                 	db	0
  2783  00F91A  00                 	db	0
  2784  00F91B  00                 	db	0
  2785  00F91C  00                 	db	0
  2786  00F91D  00                 	db	0
  2787  00F91E  00                 	db	0
  2788  00F91F  00                 	db	0
  2789  00F920  00                 	db	0
  2790  00F921  00                 	db	0
  2791  00F922  00                 	db	0
  2792  00F923  00                 	db	0
  2793  00F924  00                 	db	0
  2794  00F925  64                 	db	100
  2795  00F926  69                 	db	105
  2796  00F927  73                 	db	115
  2797  00F928  70                 	db	112
  2798  00F929  6C                 	db	108
  2799  00F92A  61                 	db	97
  2800  00F92B  79                 	db	121
  2801  00F92C  73                 	db	115
  2802  00F92D  20                 	db	32
  2803  00F92E  33                 	db	51
  2804  00F92F  00                 	db	0
  2805  00F930  00                 	db	0
  2806  00F931  00                 	db	0
  2807  00F932  00                 	db	0
  2808  00F933  00                 	db	0
  2809  00F934  00                 	db	0
  2810  00F935  00                 	db	0
  2811  00F936  00                 	db	0
  2812  00F937  00                 	db	0
  2813  00F938  00                 	db	0
  2814  00F939  00                 	db	0
  2815  00F93A  00                 	db	0
  2816  00F93B  63                 	db	99
  2817  00F93C  6F                 	db	111
  2818  00F93D  6D                 	db	109
  2819  00F93E  6D                 	db	109
  2820  00F93F  61                 	db	97
  2821  00F940  6E                 	db	110
  2822  00F941  64                 	db	100
  2823  00F942  73                 	db	115
  2824  00F943  20                 	db	32
  2825  00F944  34                 	db	52
  2826  00F945  00                 	db	0
  2827  00F946  00                 	db	0
  2828  00F947  00                 	db	0
  2829  00F948  00                 	db	0
  2830  00F949  00                 	db	0
  2831  00F94A  00                 	db	0
  2832  00F94B  00                 	db	0
  2833  00F94C  00                 	db	0
  2834  00F94D  00                 	db	0
  2835  00F94E  00                 	db	0
  2836  00F94F  00                 	db	0
  2837  00F950  00                 	db	0
  2838  00F951  64                 	db	100
  2839  00F952  69                 	db	105
  2840  00F953  73                 	db	115
  2841  00F954  70                 	db	112
  2842  00F955  6C                 	db	108
  2843  00F956  61                 	db	97
  2844  00F957  79                 	db	121
  2845  00F958  73                 	db	115
  2846  00F959  20                 	db	32
  2847  00F95A  34                 	db	52
  2848  00F95B  00                 	db	0
  2849  00F95C  00                 	db	0
  2850  00F95D  00                 	db	0
  2851  00F95E  00                 	db	0
  2852  00F95F  00                 	db	0
  2853  00F960  00                 	db	0
  2854  00F961  00                 	db	0
  2855  00F962  00                 	db	0
  2856  00F963  00                 	db	0
  2857  00F964  00                 	db	0
  2858  00F965  00                 	db	0
  2859  00F966  00                 	db	0
  2860  00F967                     __end_of_T:
  2861                           	opt callstack 0
  2862  00F967                     _spin:
  2863                           	opt callstack 0
  2864  00F967  7C                 	db	124
  2865  00F968  7C                 	db	124
  2866  00F969  2F                 	db	47
  2867  00F96A  2F                 	db	47
  2868  00F96B  2D                 	db	45
  2869  00F96C  2D                 	db	45
  2870  00F96D  00                 	db	0
  2871  00F96E  00                 	db	0
  2872  00F96F  00                 	db	0
  2873  00F970  00                 	db	0
  2874  00F971  00                 	db	0
  2875  00F972  00                 	db	0
  2876  00F973  00                 	db	0
  2877  00F974  00                 	db	0
  2878  00F975  00                 	db	0
  2879  00F976  00                 	db	0
  2880  00F977  00                 	db	0
  2881  00F978  00                 	db	0
  2882  00F979  00                 	db	0
  2883  00F97A  00                 	db	0
  2884  00F97B  7C                 	db	124
  2885  00F97C  7C                 	db	124
  2886  00F97D  2F                 	db	47
  2887  00F97E  2F                 	db	47
  2888  00F97F  2D                 	db	45
  2889  00F980  2D                 	db	45
  2890  00F981  5C                 	db	92
  2891  00F982  5C                 	db	92
  2892  00F983  00                 	db	0
  2893  00F984  00                 	db	0
  2894  00F985  00                 	db	0
  2895  00F986  00                 	db	0
  2896  00F987  00                 	db	0
  2897  00F988  00                 	db	0
  2898  00F989  00                 	db	0
  2899  00F98A  00                 	db	0
  2900  00F98B  00                 	db	0
  2901  00F98C  00                 	db	0
  2902  00F98D  00                 	db	0
  2903  00F98E  00                 	db	0
  2904  00F98F  4F                 	db	79
  2905  00F990  4F                 	db	79
  2906  00F991  4F                 	db	79
  2907  00F992  4F                 	db	79
  2908  00F993  4F                 	db	79
  2909  00F994  4F                 	db	79
  2910  00F995  2D                 	db	45
  2911  00F996  2D                 	db	45
  2912  00F997  5F                 	db	95
  2913  00F998  5F                 	db	95
  2914  00F999  2D                 	db	45
  2915  00F99A  00                 	db	0
  2916  00F99B  00                 	db	0
  2917  00F99C  00                 	db	0
  2918  00F99D  00                 	db	0
  2919  00F99E  00                 	db	0
  2920  00F99F  00                 	db	0
  2921  00F9A0  00                 	db	0
  2922  00F9A1  00                 	db	0
  2923  00F9A2  00                 	db	0
  2924  00F9A3  76                 	db	118
  2925  00F9A4  76                 	db	118
  2926  00F9A5  3C                 	db	60
  2927  00F9A6  3C                 	db	60
  2928  00F9A7  5E                 	db	94
  2929  00F9A8  5E                 	db	94
  2930  00F9A9  3E                 	db	62
  2931  00F9AA  3E                 	db	62
  2932  00F9AB  00                 	db	0
  2933  00F9AC  00                 	db	0
  2934  00F9AD  00                 	db	0
  2935  00F9AE  00                 	db	0
  2936  00F9AF  00                 	db	0
  2937  00F9B0  00                 	db	0
  2938  00F9B1  00                 	db	0
  2939  00F9B2  00                 	db	0
  2940  00F9B3  00                 	db	0
  2941  00F9B4  00                 	db	0
  2942  00F9B5  00                 	db	0
  2943  00F9B6  00                 	db	0
  2944  00F9B7  2E                 	db	46
  2945  00F9B8  2E                 	db	46
  2946  00F9B9  2A                 	db	42
  2947  00F9BA  2A                 	db	42
  2948  00F9BB  78                 	db	120
  2949  00F9BC  23                 	db	35
  2950  00F9BD  78                 	db	120
  2951  00F9BE  23                 	db	35
  2952  00F9BF  58                 	db	88
  2953  00F9C0  58                 	db	88
  2954  00F9C1  7C                 	db	124
  2955  00F9C2  7C                 	db	124
  2956  00F9C3  2D                 	db	45
  2957  00F9C4  2D                 	db	45
  2958  00F9C5  00                 	db	0
  2959  00F9C6  00                 	db	0
  2960  00F9C7  00                 	db	0
  2961  00F9C8  00                 	db	0
  2962  00F9C9  00                 	db	0
  2963  00F9CA  00                 	db	0
  2964  00F9CB  2E                 	db	46
  2965  00F9CC  2E                 	db	46
  2966  00F9CD  6F                 	db	111
  2967  00F9CE  6F                 	db	111
  2968  00F9CF  4F                 	db	79
  2969  00F9D0  4F                 	db	79
  2970  00F9D1  6F                 	db	111
  2971  00F9D2  6F                 	db	111
  2972  00F9D3  00                 	db	0
  2973  00F9D4  00                 	db	0
  2974  00F9D5  00                 	db	0
  2975  00F9D6  00                 	db	0
  2976  00F9D7  00                 	db	0
  2977  00F9D8  00                 	db	0
  2978  00F9D9  00                 	db	0
  2979  00F9DA  00                 	db	0
  2980  00F9DB  00                 	db	0
  2981  00F9DC  00                 	db	0
  2982  00F9DD  00                 	db	0
  2983  00F9DE  00                 	db	0
  2984  00F9DF                     __end_of_spin:
  2985                           	opt callstack 0
  2986  00F9DF  0000               	dw	0
  2987  00F9E1  3F80               	dw	16256
  2988  00F9E3  0000               	dw	0
  2989  00F9E5  3FC0               	dw	16320
  2990  00F9E7                     __end_of_bp:
  2991                           	opt callstack 0
  2992  00F9E7                     ___gmt:
  2993                           	opt callstack 0
  2994  00F9E7  47                 	db	71
  2995  00F9E8  4D                 	db	77
  2996  00F9E9  54                 	db	84
  2997  00F9EA  00                 	db	0
  2998  00F9EB                     __end_of___gmt:
  2999                           	opt callstack 0
  3000  00F9EB  AA00               	dw	43520
  3001  00F9ED  3FB8               	dw	16312
  3002  00F9EF                     __end_of_ivln2_h:
  3003                           	opt callstack 0
  3004  00F9EF  23C6               	dw	9158
  3005  00F9F1  B8F6               	dw	47350
  3006  00F9F3                     __end_of_cp_l:
  3007                           	opt callstack 0
  3008  00F9F3  4000               	dw	16384
  3009  00F9F5  3F76               	dw	16246
  3010  00F9F7                     __end_of_cp_h:
  3011                           	opt callstack 0
  3012  0000                     _IVTADL	set	14493
  3013  0000                     _IVTADH	set	14494
  3014  0000                     _IVTADU	set	14495
  3015  0000                     _CRCDATH	set	14689
  3016  0000                     _CRCDATL	set	14688
  3017  0000                     _CRCCON0bits	set	14696
  3018  0000                     _CRCCON1bits	set	14697
  3019  0000                     _CRCXORL	set	14694
  3020  0000                     _CRCXORH	set	14695
  3021  0000                     _SCANTRIG	set	14717
  3022  0000                     _SCANHADRL	set	14713
  3023  0000                     _SCANHADRH	set	14714
  3024  0000                     _SCANHADRU	set	14715
  3025  0000                     _SCANLADRL	set	14710
  3026  0000                     _SCANLADRH	set	14711
  3027  0000                     _SCANLADRU	set	14712
  3028  0000                     _SCANCON0	set	14716
  3029  0000                     _CRCACCH	set	14691
  3030  0000                     _CRCACCL	set	14690
  3031  0000                     _CRCCON1	set	14697
  3032  0000                     _CRCCON0	set	14696
  3033  0000                     _PIR6bits	set	14758
  3034  0000                     _PIR4bits	set	14756
  3035  0000                     _PIE8bits	set	14744
  3036  0000                     _PIR8bits	set	14760
  3037  0000                     _PIR0bits	set	14752
  3038  0000                     _NVMCON2	set	14822
  3039  0000                     _NVMDAT	set	14819
  3040  0000                     _NVMADRL	set	14816
  3041  0000                     _NVMADRH	set	14817
  3042  0000                     _NVMCON1bits	set	14821
  3043  0000                     _SCANPR	set	14839
  3044  0000                     _DMA2PR	set	14836
  3045  0000                     _DMA1PR	set	14835
  3046  0000                     _MAINPR	set	14834
  3047  0000                     _ISRPR	set	14833
  3048  0000                     _PIE2bits	set	14738
  3049  0000                     _PIR2bits	set	14754
  3050  0000                     _PIE9bits	set	14745
  3051  0000                     _PIR9bits	set	14761
  3052  0000                     _PIE6bits	set	14742
  3053  0000                     _PIE3bits	set	14739
  3054  0000                     _PMD7	set	14791
  3055  0000                     _PMD6	set	14790
  3056  0000                     _PMD5	set	14789
  3057  0000                     _PMD4	set	14788
  3058  0000                     _PMD3	set	14787
  3059  0000                     _PMD2	set	14786
  3060  0000                     _PMD1	set	14785
  3061  0000                     _PMD0	set	14784
  3062  0000                     _OSCTUNE	set	14814
  3063  0000                     _OSCFRQ	set	14815
  3064  0000                     _OSCEN	set	14813
  3065  0000                     _OSCCON3	set	14811
  3066  0000                     _OSCCON1	set	14809
  3067  0000                     _IPR8bits	set	14728
  3068  0000                     _IPR9bits	set	14729
  3069  0000                     _IPR5bits	set	14725
  3070  0000                     _IPR1bits	set	14721
  3071  0000                     _IPR3bits	set	14723
  3072  0000                     _IPR6bits	set	14726
  3073  0000                     _IPR2bits	set	14722
  3074  0000                     _PIE5bits	set	14741
  3075  0000                     _PIE1bits	set	14737
  3076  0000                     _PIR5bits	set	14757
  3077  0000                     _PIR1bits	set	14753
  3078  0000                     _PLLR	set	118496
  3079  0000                     _SPI1SDIPPS	set	15071
  3080  0000                     _U1RXPPS	set	15077
  3081  0000                     _RC6PPS	set	14870
  3082  0000                     _RC5PPS	set	14869
  3083  0000                     _INT1PPS	set	15041
  3084  0000                     _RD1PPS	set	14873
  3085  0000                     _INT0PPS	set	15040
  3086  0000                     _RC3PPS	set	14867
  3087  0000                     _RB6PPS	set	14862
  3088  0000                     _SPI1SCKPPS	set	15070
  3089  0000                     _U2RXPPS	set	15080
  3090  0000                     _SLRCONF	set	14995
  3091  0000                     _SLRCONE	set	14979
  3092  0000                     _SLRCOND	set	14963
  3093  0000                     _SLRCONC	set	14947
  3094  0000                     _SLRCONB	set	14931
  3095  0000                     _SLRCONA	set	14915
  3096  0000                     _ODCOND	set	14962
  3097  0000                     _ODCONC	set	14946
  3098  0000                     _ODCONB	set	14930
  3099  0000                     _ODCONA	set	14914
  3100  0000                     _ODCONF	set	14994
  3101  0000                     _ODCONE	set	14978
  3102  0000                     _WPUC	set	14945
  3103  0000                     _WPUA	set	14913
  3104  0000                     _WPUB	set	14929
  3105  0000                     _WPUE	set	14977
  3106  0000                     _WPUF	set	14993
  3107  0000                     _WPUD	set	14961
  3108  0000                     _ANSELA	set	14912
  3109  0000                     _ANSELF	set	14992
  3110  0000                     _ANSELE	set	14976
  3111  0000                     _ANSELB	set	14928
  3112  0000                     _ANSELC	set	14944
  3113  0000                     _ANSELD	set	14960
  3114  0000                     _DMA2SSA	set	15321
  3115  0000                     _DMA1SSA	set	15353
  3116  0000                     _DMA2DSZ	set	15310
  3117  0000                     _DMA2SSZ	set	15319
  3118  0000                     _DMA2DSA	set	15312
  3119  0000                     _DMA1DSZ	set	15342
  3120  0000                     _DMA1SSZ	set	15351
  3121  0000                     _DMA1DSA	set	15344
  3122  0000                     _DMA2CON0bits	set	15324
  3123  0000                     _DMA2CON1bits	set	15325
  3124  0000                     _DMA1CON0bits	set	15356
  3125  0000                     _DMA1CON1bits	set	15357
  3126  0000                     _DMA2CON0	set	15324
  3127  0000                     _DMA2AIRQ	set	15326
  3128  0000                     _DMA2SIRQ	set	15327
  3129  0000                     _DMA2CON1	set	15325
  3130  0000                     _DMA1CON0	set	15356
  3131  0000                     _DMA1AIRQ	set	15358
  3132  0000                     _DMA1SIRQ	set	15359
  3133  0000                     _DMA1CON1	set	15357
  3134  0000                     _CLKRCON	set	15589
  3135  0000                     _CLKRCLK	set	15590
  3136  0000                     _SPI1CON1bits	set	15637
  3137  0000                     _SPI1STATUSbits	set	15639
  3138  0000                     _SPI1INTFbits	set	15642
  3139  0000                     _SPI1CON0bits	set	15636
  3140  0000                     _SPI1RXB	set	15632
  3141  0000                     _SPI1TXB	set	15633
  3142  0000                     _SPI1TCNTL	set	15634
  3143  0000                     _SPI1CON0	set	15636
  3144  0000                     _SPI1CLK	set	15644
  3145  0000                     _SPI1BAUD	set	15641
  3146  0000                     _SPI1CON2	set	15638
  3147  0000                     _SPI1CON1	set	15637
  3148  0000                     _U2RXB	set	15824
  3149  0000                     _U2TXB	set	15826
  3150  0000                     _U2ERRIE	set	15842
  3151  0000                     _U2ERRIR	set	15841
  3152  0000                     _U2UIR	set	15840
  3153  0000                     _U2FIFO	set	15839
  3154  0000                     _U2BRGH	set	15838
  3155  0000                     _U2BRGL	set	15837
  3156  0000                     _U2CON2	set	15836
  3157  0000                     _U2CON1	set	15835
  3158  0000                     _U2CON0	set	15834
  3159  0000                     _U2P3L	set	15832
  3160  0000                     _U2P2L	set	15830
  3161  0000                     _U2P1L	set	15828
  3162  0000                     _U1RXB	set	15848
  3163  0000                     _U1ERRIE	set	15866
  3164  0000                     _U1ERRIR	set	15865
  3165  0000                     _U1UIR	set	15864
  3166  0000                     _U1FIFO	set	15863
  3167  0000                     _U1BRGH	set	15862
  3168  0000                     _U1BRGL	set	15861
  3169  0000                     _U1CON2	set	15860
  3170  0000                     _U1CON1	set	15859
  3171  0000                     _U1CON0	set	15858
  3172  0000                     _U1P3H	set	15857
  3173  0000                     _U1P3L	set	15856
  3174  0000                     _U1P2H	set	15855
  3175  0000                     _U1P2L	set	15854
  3176  0000                     _U1P1H	set	15853
  3177  0000                     _U1P1L	set	15852
  3178  0000                     _FVRCON	set	16065
  3179  0000                     _ADFLTRL	set	16102
  3180  0000                     _ADFLTRH	set	16103
  3181  0000                     _ADCON0bits	set	16120
  3182  0000                     _ADCON0	set	16120
  3183  0000                     _ADCLK	set	16127
  3184  0000                     _ADACT	set	16126
  3185  0000                     _ADREF	set	16125
  3186  0000                     _ADSTAT	set	16124
  3187  0000                     _ADCON3	set	16123
  3188  0000                     _ADCON2	set	16122
  3189  0000                     _ADCON1	set	16121
  3190  0000                     _ADPREH	set	16119
  3191  0000                     _ADPREL	set	16118
  3192  0000                     _ADCAP	set	16117
  3193  0000                     _ADACQH	set	16116
  3194  0000                     _ADACQL	set	16115
  3195  0000                     _ADPCH	set	16113
  3196  0000                     _ADRPT	set	16108
  3197  0000                     _ADACCU	set	16106
  3198  0000                     _ADSTPTH	set	16101
  3199  0000                     _ADSTPTL	set	16100
  3200  0000                     _ADUTHH	set	16097
  3201  0000                     _ADUTHL	set	16096
  3202  0000                     _ADLTHH	set	16095
  3203  0000                     _ADLTHL	set	16094
  3204  0000                     _CCPTMRS1bits	set	16223
  3205  0000                     _PORTDbits	set	16333
  3206  0000                     _PORTFbits	set	16335
  3207  0000                     _LATFbits	set	16319
  3208  0000                     _LATCbits	set	16316
  3209  0000                     _LATDbits	set	16317
  3210  0000                     _PORTBbits	set	16331
  3211  0000                     _T3CONbits	set	16294
  3212  0000                     _T3CON	set	16294
  3213  0000                     _TMR3L	set	16292
  3214  0000                     _TMR3H	set	16293
  3215  0000                     _T3CLK	set	16297
  3216  0000                     _T3GATE	set	16296
  3217  0000                     _T3GCON	set	16295
  3218  0000                     _T2CON	set	16300
  3219  0000                     _T2TMR	set	16298
  3220  0000                     _T2PR	set	16299
  3221  0000                     _T2RST	set	16303
  3222  0000                     _T2HLT	set	16301
  3223  0000                     _T2CLKCON	set	16302
  3224  0000                     _PWM8DCL	set	16224
  3225  0000                     _PWM8DCH	set	16225
  3226  0000                     _PWM8CON	set	16226
  3227  0000                     _LATEbits	set	16318
  3228  0000                     _T5CONbits	set	16282
  3229  0000                     _T5CON	set	16282
  3230  0000                     _TMR5L	set	16280
  3231  0000                     _TMR5H	set	16281
  3232  0000                     _T5CLK	set	16285
  3233  0000                     _T5GATE	set	16284
  3234  0000                     _T5GCON	set	16283
  3235  0000                     _T6CON	set	16276
  3236  0000                     _T6TMR	set	16274
  3237  0000                     _T6PR	set	16275
  3238  0000                     _T6RST	set	16279
  3239  0000                     _T6HLT	set	16277
  3240  0000                     _T6CLKCON	set	16278
  3241  0000                     _TRISD	set	16325
  3242  0000                     _TRISC	set	16324
  3243  0000                     _TRISB	set	16323
  3244  0000                     _TRISA	set	16322
  3245  0000                     _TRISF	set	16327
  3246  0000                     _TRISE	set	16326
  3247  0000                     _LATC	set	16316
  3248  0000                     _LATB	set	16315
  3249  0000                     _LATF	set	16319
  3250  0000                     _LATA	set	16314
  3251  0000                     _LATD	set	16317
  3252  0000                     _LATE	set	16318
  3253  0000                     _IVTLOCKbits	set	16340
  3254  0000                     _IVTLOCK	set	16340
  3255  0000                     _INTCON0bits	set	16338
  3256  0000                     _GIE	set	130711
  3257  00F9F7                     STR_95:
  3258                           
  3259                           ; BSR set to: 57
  3260  00F9F7  20                 	db	32
  3261  00F9F8  25                 	db	37
  3262  00F9F9  63                 	db	99	;'c'
  3263  00F9FA  20                 	db	32
  3264  00F9FB  2C                 	db	44
  3265  00F9FC  25                 	db	37
  3266  00F9FD  6C                 	db	108	;'l'
  3267  00F9FE  75                 	db	117	;'u'
  3268  00F9FF  2C                 	db	44
  3269  00FA00  25                 	db	37
  3270  00FA01  34                 	db	52	;'4'
  3271  00FA02  2E                 	db	46
  3272  00FA03  34                 	db	52	;'4'
  3273  00FA04  66                 	db	102	;'f'
  3274  00FA05  2C                 	db	44
  3275  00FA06  25                 	db	37
  3276  00FA07  34                 	db	52	;'4'
  3277  00FA08  2E                 	db	46
  3278  00FA09  34                 	db	52	;'4'
  3279  00FA0A  66                 	db	102	;'f'
  3280  00FA0B  2C                 	db	44
  3281  00FA0C  25                 	db	37
  3282  00FA0D  34                 	db	52	;'4'
  3283  00FA0E  2E                 	db	46
  3284  00FA0F  34                 	db	52	;'4'
  3285  00FA10  66                 	db	102	;'f'
  3286  00FA11  2C                 	db	44
  3287  00FA12  25                 	db	37
  3288  00FA13  34                 	db	52	;'4'
  3289  00FA14  2E                 	db	46
  3290  00FA15  34                 	db	52	;'4'
  3291  00FA16  66                 	db	102	;'f'
  3292  00FA17  2C                 	db	44
  3293  00FA18  25                 	db	37
  3294  00FA19  34                 	db	52	;'4'
  3295  00FA1A  2E                 	db	46
  3296  00FA1B  34                 	db	52	;'4'
  3297  00FA1C  66                 	db	102	;'f'
  3298  00FA1D  2C                 	db	44
  3299  00FA1E  25                 	db	37
  3300  00FA1F  34                 	db	52	;'4'
  3301  00FA20  2E                 	db	46
  3302  00FA21  33                 	db	51	;'3'
  3303  00FA22  66                 	db	102	;'f'
  3304  00FA23  2C                 	db	44
  3305  00FA24  25                 	db	37
  3306  00FA25  34                 	db	52	;'4'
  3307  00FA26  2E                 	db	46
  3308  00FA27  33                 	db	51	;'3'
  3309  00FA28  66                 	db	102	;'f'
  3310  00FA29  2C                 	db	44
  3311  00FA2A  25                 	db	37
  3312  00FA2B  34                 	db	52	;'4'
  3313  00FA2C  2E                 	db	46
  3314  00FA2D  33                 	db	51	;'3'
  3315  00FA2E  66                 	db	102	;'f'
  3316  00FA2F  2C                 	db	44
  3317  00FA30  25                 	db	37
  3318  00FA31  34                 	db	52	;'4'
  3319  00FA32  2E                 	db	46
  3320  00FA33  33                 	db	51	;'3'
  3321  00FA34  66                 	db	102	;'f'
  3322  00FA35  2C                 	db	44
  3323  00FA36  25                 	db	37
  3324  00FA37  34                 	db	52	;'4'
  3325  00FA38  2E                 	db	46
  3326  00FA39  33                 	db	51	;'3'
  3327  00FA3A  66                 	db	102	;'f'
  3328  00FA3B  2C                 	db	44
  3329  00FA3C  25                 	db	37
  3330  00FA3D  34                 	db	52	;'4'
  3331  00FA3E  2E                 	db	46
  3332  00FA3F  33                 	db	51	;'3'
  3333  00FA40  66                 	db	102	;'f'
  3334  00FA41  2C                 	db	44
  3335  00FA42  25                 	db	37
  3336  00FA43  64                 	db	100	;'d'
  3337  00FA44  2C                 	db	44
  3338  00FA45  25                 	db	37
  3339  00FA46  64                 	db	100	;'d'
  3340  00FA47  2C                 	db	44
  3341  00FA48  25                 	db	37
  3342  00FA49  32                 	db	50	;'2'
  3343  00FA4A  2E                 	db	46
  3344  00FA4B  36                 	db	54	;'6'
  3345  00FA4C  66                 	db	102	;'f'
  3346  00FA4D  2C                 	db	44
  3347  00FA4E  25                 	db	37
  3348  00FA4F  34                 	db	52	;'4'
  3349  00FA50  2E                 	db	46
  3350  00FA51  33                 	db	51	;'3'
  3351  00FA52  66                 	db	102	;'f'
  3352  00FA53  2C                 	db	44
  3353  00FA54  25                 	db	37
  3354  00FA55  64                 	db	100	;'d'
  3355  00FA56  2C                 	db	44
  3356  00FA57  25                 	db	37
  3357  00FA58  64                 	db	100	;'d'
  3358  00FA59  2C                 	db	44
  3359  00FA5A  25                 	db	37
  3360  00FA5B  6C                 	db	108	;'l'
  3361  00FA5C  75                 	db	117	;'u'
  3362  00FA5D  2C                 	db	44
  3363  00FA5E  25                 	db	37
  3364  00FA5F  6C                 	db	108	;'l'
  3365  00FA60  75                 	db	117	;'u'
  3366  00FA61  2C                 	db	44
  3367  00FA62  25                 	db	37
  3368  00FA63  34                 	db	52	;'4'
  3369  00FA64  2E                 	db	46
  3370  00FA65  33                 	db	51	;'3'
  3371  00FA66  66                 	db	102	;'f'
  3372  00FA67  2C                 	db	44
  3373  00FA68  25                 	db	37
  3374  00FA69  34                 	db	52	;'4'
  3375  00FA6A  2E                 	db	46
  3376  00FA6B  33                 	db	51	;'3'
  3377  00FA6C  66                 	db	102	;'f'
  3378  00FA6D  2C                 	db	44
  3379  00FA6E  25                 	db	37
  3380  00FA6F  34                 	db	52	;'4'
  3381  00FA70  2E                 	db	46
  3382  00FA71  33                 	db	51	;'3'
  3383  00FA72  66                 	db	102	;'f'
  3384  00FA73  0D                 	db	13
  3385  00FA74  0A                 	db	10
  3386  00FA75  00                 	db	0
  3387  00FA76                     STR_133:
  3388                           
  3389                           ; BSR set to: 57
  3390  00FA76  4A                 	db	74	;'J'
  3391  00FA77  61                 	db	97	;'a'
  3392  00FA78  6E                 	db	110	;'n'
  3393  00FA79  46                 	db	70	;'F'
  3394  00FA7A  65                 	db	101	;'e'
  3395  00FA7B  62                 	db	98	;'b'
  3396  00FA7C  4D                 	db	77	;'M'
  3397  00FA7D  61                 	db	97	;'a'
  3398  00FA7E  72                 	db	114	;'r'
  3399  00FA7F  41                 	db	65	;'A'
  3400  00FA80  70                 	db	112	;'p'
  3401  00FA81  72                 	db	114	;'r'
  3402  00FA82  4D                 	db	77	;'M'
  3403  00FA83  61                 	db	97	;'a'
  3404  00FA84  79                 	db	121	;'y'
  3405  00FA85  4A                 	db	74	;'J'
  3406  00FA86  75                 	db	117	;'u'
  3407  00FA87  6E                 	db	110	;'n'
  3408  00FA88  4A                 	db	74	;'J'
  3409  00FA89  75                 	db	117	;'u'
  3410  00FA8A  6C                 	db	108	;'l'
  3411  00FA8B  41                 	db	65	;'A'
  3412  00FA8C  75                 	db	117	;'u'
  3413  00FA8D  67                 	db	103	;'g'
  3414  00FA8E  53                 	db	83	;'S'
  3415  00FA8F  65                 	db	101	;'e'
  3416  00FA90  70                 	db	112	;'p'
  3417  00FA91  4F                 	db	79	;'O'
  3418  00FA92  63                 	db	99	;'c'
  3419  00FA93  74                 	db	116	;'t'
  3420  00FA94  4E                 	db	78	;'N'
  3421  00FA95  6F                 	db	111	;'o'
  3422  00FA96  76                 	db	118	;'v'
  3423  00FA97  44                 	db	68	;'D'
  3424  00FA98  65                 	db	101	;'e'
  3425  00FA99  63                 	db	99	;'c'
  3426  00FA9A  00                 	db	0
  3427  00FA9B                     STR_50:
  3428                           
  3429                           ; BSR set to: 57
  3430  00FA9B  53                 	db	83	;'S'
  3431  00FA9C  25                 	db	37
  3432  00FA9D  63                 	db	99	;'c'
  3433  00FA9E  43                 	db	67	;'C'
  3434  00FA9F  20                 	db	32
  3435  00FAA0  25                 	db	37
  3436  00FAA1  64                 	db	100	;'d'
  3437  00FAA2  20                 	db	32
  3438  00FAA3  52                 	db	82	;'R'
  3439  00FAA4  55                 	db	85	;'U'
  3440  00FAA5  4E                 	db	78	;'N'
  3441  00FAA6  20                 	db	32
  3442  00FAA7  25                 	db	37
  3443  00FAA8  64                 	db	100	;'d'
  3444  00FAA9  20                 	db	32
  3445  00FAAA  56                 	db	86	;'V'
  3446  00FAAB  25                 	db	37
  3447  00FAAC  32                 	db	50	;'2'
  3448  00FAAD  2E                 	db	46
  3449  00FAAE  32                 	db	50	;'2'
  3450  00FAAF  66                 	db	102	;'f'
  3451  00FAB0  20                 	db	32
  3452  00FAB1  20                 	db	32
  3453  00FAB2  20                 	db	32
  3454  00FAB3  20                 	db	32
  3455  00FAB4  20                 	db	32
  3456  00FAB5  20                 	db	32
  3457  00FAB6  20                 	db	32
  3458  00FAB7  20                 	db	32
  3459  00FAB8  00                 	db	0
  3460  00FAB9                     STR_70:
  3461                           
  3462                           ; BSR set to: 57
  3463  00FAB9  25                 	db	37
  3464  00FABA  64                 	db	100	;'d'
  3465  00FABB  20                 	db	32
  3466  00FABC  25                 	db	37
  3467  00FABD  64                 	db	100	;'d'
  3468  00FABE  20                 	db	32
  3469  00FABF  25                 	db	37
  3470  00FAC0  64                 	db	100	;'d'
  3471  00FAC1  20                 	db	32
  3472  00FAC2  25                 	db	37
  3473  00FAC3  64                 	db	100	;'d'
  3474  00FAC4  20                 	db	32
  3475  00FAC5  20                 	db	32
  3476  00FAC6  20                 	db	32
  3477  00FAC7  20                 	db	32
  3478  00FAC8  20                 	db	32
  3479  00FAC9  20                 	db	32
  3480  00FACA  20                 	db	32
  3481  00FACB  20                 	db	32
  3482  00FACC  20                 	db	32
  3483  00FACD  20                 	db	32
  3484  00FACE  20                 	db	32
  3485  00FACF  20                 	db	32
  3486  00FAD0  20                 	db	32
  3487  00FAD1  20                 	db	32
  3488  00FAD2  20                 	db	32
  3489  00FAD3  20                 	db	32
  3490  00FAD4  00                 	db	0
  3491  00FAD5                     STR_26:
  3492                           
  3493                           ; BSR set to: 57
  3494  00FAD5  52                 	db	82	;'R'
  3495  00FAD6  31                 	db	49	;'1'
  3496  00FAD7  20                 	db	32
  3497  00FAD8  25                 	db	37
  3498  00FAD9  32                 	db	50	;'2'
  3499  00FADA  2E                 	db	46
  3500  00FADB  33                 	db	51	;'3'
  3501  00FADC  66                 	db	102	;'f'
  3502  00FADD  20                 	db	32
  3503  00FADE  25                 	db	37
  3504  00FADF  33                 	db	51	;'3'
  3505  00FAE0  2E                 	db	46
  3506  00FAE1  34                 	db	52	;'4'
  3507  00FAE2  66                 	db	102	;'f'
  3508  00FAE3  20                 	db	32
  3509  00FAE4  20                 	db	32
  3510  00FAE5  20                 	db	32
  3511  00FAE6  20                 	db	32
  3512  00FAE7  20                 	db	32
  3513  00FAE8  20                 	db	32
  3514  00FAE9  20                 	db	32
  3515  00FAEA  20                 	db	32
  3516  00FAEB  20                 	db	32
  3517  00FAEC  20                 	db	32
  3518  00FAED  20                 	db	32
  3519  00FAEE  20                 	db	32
  3520  00FAEF  00                 	db	0
  3521  00FAF0                     STR_27:
  3522                           
  3523                           ; BSR set to: 57
  3524  00FAF0  52                 	db	82	;'R'
  3525  00FAF1  32                 	db	50	;'2'
  3526  00FAF2  20                 	db	32
  3527  00FAF3  25                 	db	37
  3528  00FAF4  32                 	db	50	;'2'
  3529  00FAF5  2E                 	db	46
  3530  00FAF6  33                 	db	51	;'3'
  3531  00FAF7  66                 	db	102	;'f'
  3532  00FAF8  20                 	db	32
  3533  00FAF9  25                 	db	37
  3534  00FAFA  33                 	db	51	;'3'
  3535  00FAFB  2E                 	db	46
  3536  00FAFC  34                 	db	52	;'4'
  3537  00FAFD  66                 	db	102	;'f'
  3538  00FAFE  20                 	db	32
  3539  00FAFF  20                 	db	32
  3540  00FB00  20                 	db	32
  3541  00FB01  20                 	db	32
  3542  00FB02  20                 	db	32
  3543  00FB03  20                 	db	32
  3544  00FB04  20                 	db	32
  3545  00FB05  20                 	db	32
  3546  00FB06  20                 	db	32
  3547  00FB07  20                 	db	32
  3548  00FB08  20                 	db	32
  3549  00FB09  20                 	db	32
  3550  00FB0A  00                 	db	0
  3551  00FB0B                     
  3552                           ; BSR set to: 57
  3553  00FB0B  20                 	db	32
  3554  00FB0C  4D                 	db	77	;'M'
  3555  00FB0D  65                 	db	101	;'e'
  3556  00FB0E  73                 	db	115	;'s'
  3557  00FB0F  67                 	db	103	;'g'
  3558  00FB10  20                 	db	32
  3559  00FB11  25                 	db	37
  3560  00FB12  64                 	db	100	;'d'
  3561  00FB13  20                 	db	32
  3562  00FB14  53                 	db	83	;'S'
  3563  00FB15  74                 	db	116	;'t'
  3564  00FB16  61                 	db	97	;'a'
  3565  00FB17  63                 	db	99	;'c'
  3566  00FB18  6B                 	db	107	;'k'
  3567  00FB19  20                 	db	32
  3568  00FB1A  25                 	db	37
  3569  00FB1B  64                 	db	100	;'d'
  3570  00FB1C  20                 	db	32
  3571  00FB1D  20                 	db	32
  3572  00FB1E  20                 	db	32
  3573  00FB1F  20                 	db	32
  3574  00FB20  20                 	db	32
  3575  00FB21  20                 	db	32
  3576  00FB22  20                 	db	32
  3577  00FB23  20                 	db	32
  3578  00FB24  00                 	db	0
  3579  00FB25                     STR_17:
  3580                           
  3581                           ; BSR set to: 57
  3582  00FB25  53                 	db	83	;'S'
  3583  00FB26  20                 	db	32
  3584  00FB27  53                 	db	83	;'S'
  3585  00FB28  25                 	db	37
  3586  00FB29  63                 	db	99	;'c'
  3587  00FB2A  43                 	db	67	;'C'
  3588  00FB2B  20                 	db	32
  3589  00FB2C  25                 	db	37
  3590  00FB2D  64                 	db	100	;'d'
  3591  00FB2E  20                 	db	32
  3592  00FB2F  25                 	db	37
  3593  00FB30  32                 	db	50	;'2'
  3594  00FB31  2E                 	db	46
  3595  00FB32  34                 	db	52	;'4'
  3596  00FB33  66                 	db	102	;'f'
  3597  00FB34  20                 	db	32
  3598  00FB35  20                 	db	32
  3599  00FB36  20                 	db	32
  3600  00FB37  20                 	db	32
  3601  00FB38  20                 	db	32
  3602  00FB39  20                 	db	32
  3603  00FB3A  20                 	db	32
  3604  00FB3B  20                 	db	32
  3605  00FB3C  20                 	db	32
  3606  00FB3D  20                 	db	32
  3607  00FB3E  00                 	db	0
  3608  00FB3F                     STR_51:
  3609                           
  3610                           ; BSR set to: 57
  3611  00FB3F  45                 	db	69	;'E'
  3612  00FB40  53                 	db	83	;'S'
  3613  00FB41  52                 	db	82	;'R'
  3614  00FB42  20                 	db	32
  3615  00FB43  20                 	db	32
  3616  00FB44  25                 	db	37
  3617  00FB45  32                 	db	50	;'2'
  3618  00FB46  2E                 	db	46
  3619  00FB47  36                 	db	54	;'6'
  3620  00FB48  66                 	db	102	;'f'
  3621  00FB49  20                 	db	32
  3622  00FB4A  20                 	db	32
  3623  00FB4B  20                 	db	32
  3624  00FB4C  20                 	db	32
  3625  00FB4D  20                 	db	32
  3626  00FB4E  20                 	db	32
  3627  00FB4F  20                 	db	32
  3628  00FB50  20                 	db	32
  3629  00FB51  20                 	db	32
  3630  00FB52  20                 	db	32
  3631  00FB53  20                 	db	32
  3632  00FB54  20                 	db	32
  3633  00FB55  20                 	db	32
  3634  00FB56  00                 	db	0
  3635  00FB57                     STR_48:
  3636                           
  3637                           ; BSR set to: 57
  3638  00FB57  42                 	db	66	;'B'
  3639  00FB58  41                 	db	65	;'A'
  3640  00FB59  54                 	db	84	;'T'
  3641  00FB5A  54                 	db	84	;'T'
  3642  00FB5B  20                 	db	32
  3643  00FB5C  50                 	db	80	;'P'
  3644  00FB5D  57                 	db	87	;'W'
  3645  00FB5E  52                 	db	82	;'R'
  3646  00FB5F  20                 	db	32
  3647  00FB60  25                 	db	37
  3648  00FB61  33                 	db	51	;'3'
  3649  00FB62  2E                 	db	46
  3650  00FB63  32                 	db	50	;'2'
  3651  00FB64  66                 	db	102	;'f'
  3652  00FB65  20                 	db	32
  3653  00FB66  20                 	db	32
  3654  00FB67  20                 	db	32
  3655  00FB68  20                 	db	32
  3656  00FB69  20                 	db	32
  3657  00FB6A  20                 	db	32
  3658  00FB6B  20                 	db	32
  3659  00FB6C  20                 	db	32
  3660  00FB6D  20                 	db	32
  3661  00FB6E  00                 	db	0
  3662  00FB6F                     STR_52:
  3663                           
  3664                           ; BSR set to: 57
  3665  00FB6F  52                 	db	82	;'R'
  3666  00FB70  31                 	db	49	;'1'
  3667  00FB71  20                 	db	32
  3668  00FB72  25                 	db	37
  3669  00FB73  32                 	db	50	;'2'
  3670  00FB74  2E                 	db	46
  3671  00FB75  33                 	db	51	;'3'
  3672  00FB76  66                 	db	102	;'f'
  3673  00FB77  20                 	db	32
  3674  00FB78  25                 	db	37
  3675  00FB79  33                 	db	51	;'3'
  3676  00FB7A  2E                 	db	46
  3677  00FB7B  34                 	db	52	;'4'
  3678  00FB7C  66                 	db	102	;'f'
  3679  00FB7D  20                 	db	32
  3680  00FB7E  20                 	db	32
  3681  00FB7F  20                 	db	32
  3682  00FB80  20                 	db	32
  3683  00FB81  20                 	db	32
  3684  00FB82  20                 	db	32
  3685  00FB83  20                 	db	32
  3686  00FB84  20                 	db	32
  3687  00FB85  20                 	db	32
  3688  00FB86  00                 	db	0
  3689  00FB87                     STR_53:
  3690                           
  3691                           ; BSR set to: 57
  3692  00FB87  52                 	db	82	;'R'
  3693  00FB88  32                 	db	50	;'2'
  3694  00FB89  20                 	db	32
  3695  00FB8A  25                 	db	37
  3696  00FB8B  32                 	db	50	;'2'
  3697  00FB8C  2E                 	db	46
  3698  00FB8D  33                 	db	51	;'3'
  3699  00FB8E  66                 	db	102	;'f'
  3700  00FB8F  20                 	db	32
  3701  00FB90  25                 	db	37
  3702  00FB91  33                 	db	51	;'3'
  3703  00FB92  2E                 	db	46
  3704  00FB93  34                 	db	52	;'4'
  3705  00FB94  66                 	db	102	;'f'
  3706  00FB95  20                 	db	32
  3707  00FB96  20                 	db	32
  3708  00FB97  20                 	db	32
  3709  00FB98  20                 	db	32
  3710  00FB99  20                 	db	32
  3711  00FB9A  20                 	db	32
  3712  00FB9B  20                 	db	32
  3713  00FB9C  20                 	db	32
  3714  00FB9D  20                 	db	32
  3715  00FB9E  00                 	db	0
  3716  00FB9F                     STR_49:
  3717                           
  3718                           ; BSR set to: 57
  3719  00FB9F  42                 	db	66	;'B'
  3720  00FBA0  41                 	db	65	;'A'
  3721  00FBA1  48                 	db	72	;'H'
  3722  00FBA2  20                 	db	32
  3723  00FBA3  25                 	db	37
  3724  00FBA4  33                 	db	51	;'3'
  3725  00FBA5  2E                 	db	46
  3726  00FBA6  32                 	db	50	;'2'
  3727  00FBA7  66                 	db	102	;'f'
  3728  00FBA8  20                 	db	32
  3729  00FBA9  50                 	db	80	;'P'
  3730  00FBAA  25                 	db	37
  3731  00FBAB  33                 	db	51	;'3'
  3732  00FBAC  2E                 	db	46
  3733  00FBAD  32                 	db	50	;'2'
  3734  00FBAE  66                 	db	102	;'f'
  3735  00FBAF  20                 	db	32
  3736  00FBB0  20                 	db	32
  3737  00FBB1  20                 	db	32
  3738  00FBB2  20                 	db	32
  3739  00FBB3  20                 	db	32
  3740  00FBB4  20                 	db	32
  3741  00FBB5  20                 	db	32
  3742  00FBB6  00                 	db	0
  3743  00FBB7                     STR_20:
  3744                           
  3745                           ; BSR set to: 57
  3746  00FBB7  20                 	db	32
  3747  00FBB8  20                 	db	32
  3748  00FBB9  20                 	db	32
  3749  00FBBA  20                 	db	32
  3750  00FBBB  20                 	db	32
  3751  00FBBC  20                 	db	32
  3752  00FBBD  20                 	db	32
  3753  00FBBE  20                 	db	32
  3754  00FBBF  20                 	db	32
  3755  00FBC0  20                 	db	32
  3756  00FBC1  20                 	db	32
  3757  00FBC2  20                 	db	32
  3758  00FBC3  20                 	db	32
  3759  00FBC4  20                 	db	32
  3760  00FBC5  20                 	db	32
  3761  00FBC6  20                 	db	32
  3762  00FBC7  20                 	db	32
  3763  00FBC8  20                 	db	32
  3764  00FBC9  20                 	db	32
  3765  00FBCA  20                 	db	32
  3766  00FBCB  20                 	db	32
  3767  00FBCC  20                 	db	32
  3768  00FBCD  00                 	db	0
  3769  00FBCE                     STR_25:
  3770                           
  3771                           ; BSR set to: 57
  3772  00FBCE  45                 	db	69	;'E'
  3773  00FBCF  53                 	db	83	;'S'
  3774  00FBD0  52                 	db	82	;'R'
  3775  00FBD1  20                 	db	32
  3776  00FBD2  20                 	db	32
  3777  00FBD3  25                 	db	37
  3778  00FBD4  32                 	db	50	;'2'
  3779  00FBD5  2E                 	db	46
  3780  00FBD6  36                 	db	54	;'6'
  3781  00FBD7  66                 	db	102	;'f'
  3782  00FBD8  20                 	db	32
  3783  00FBD9  20                 	db	32
  3784  00FBDA  20                 	db	32
  3785  00FBDB  20                 	db	32
  3786  00FBDC  20                 	db	32
  3787  00FBDD  20                 	db	32
  3788  00FBDE  20                 	db	32
  3789  00FBDF  20                 	db	32
  3790  00FBE0  20                 	db	32
  3791  00FBE1  20                 	db	32
  3792  00FBE2  20                 	db	32
  3793  00FBE3  20                 	db	32
  3794  00FBE4  00                 	db	0
  3795  00FBE5                     STR_18:
  3796                           
  3797                           ; BSR set to: 57
  3798  00FBE5  53                 	db	83	;'S'
  3799  00FBE6  74                 	db	116	;'t'
  3800  00FBE7  61                 	db	97	;'a'
  3801  00FBE8  74                 	db	116	;'t'
  3802  00FBE9  69                 	db	105	;'i'
  3803  00FBEA  63                 	db	99	;'c'
  3804  00FBEB  20                 	db	32
  3805  00FBEC  53                 	db	83	;'S'
  3806  00FBED  4F                 	db	79	;'O'
  3807  00FBEE  43                 	db	67	;'C'
  3808  00FBEF  20                 	db	32
  3809  00FBF0  25                 	db	37
  3810  00FBF1  64                 	db	100	;'d'
  3811  00FBF2  20                 	db	32
  3812  00FBF3  20                 	db	32
  3813  00FBF4  20                 	db	32
  3814  00FBF5  20                 	db	32
  3815  00FBF6  20                 	db	32
  3816  00FBF7  20                 	db	32
  3817  00FBF8  20                 	db	32
  3818  00FBF9  20                 	db	32
  3819  00FBFA  20                 	db	32
  3820  00FBFB  00                 	db	0
  3821  00FBFC                     STR_45:
  3822                           
  3823                           ; BSR set to: 57
  3824  00FBFC  42                 	db	66	;'B'
  3825  00FBFD  41                 	db	65	;'A'
  3826  00FBFE  54                 	db	84	;'T'
  3827  00FBFF  20                 	db	32
  3828  00FC00  49                 	db	73	;'I'
  3829  00FC01  57                 	db	87	;'W'
  3830  00FC02  48                 	db	72	;'H'
  3831  00FC03  20                 	db	32
  3832  00FC04  25                 	db	37
  3833  00FC05  34                 	db	52	;'4'
  3834  00FC06  2E                 	db	46
  3835  00FC07  31                 	db	49	;'1'
  3836  00FC08  66                 	db	102	;'f'
  3837  00FC09  20                 	db	32
  3838  00FC0A  20                 	db	32
  3839  00FC0B  20                 	db	32
  3840  00FC0C  20                 	db	32
  3841  00FC0D  20                 	db	32
  3842  00FC0E  20                 	db	32
  3843  00FC0F  20                 	db	32
  3844  00FC10  20                 	db	32
  3845  00FC11  20                 	db	32
  3846  00FC12  00                 	db	0
  3847  00FC13                     STR_46:
  3848                           
  3849                           ; BSR set to: 57
  3850  00FC13  42                 	db	66	;'B'
  3851  00FC14  41                 	db	65	;'A'
  3852  00FC15  54                 	db	84	;'T'
  3853  00FC16  20                 	db	32
  3854  00FC17  4F                 	db	79	;'O'
  3855  00FC18  57                 	db	87	;'W'
  3856  00FC19  48                 	db	72	;'H'
  3857  00FC1A  20                 	db	32
  3858  00FC1B  25                 	db	37
  3859  00FC1C  34                 	db	52	;'4'
  3860  00FC1D  2E                 	db	46
  3861  00FC1E  31                 	db	49	;'1'
  3862  00FC1F  66                 	db	102	;'f'
  3863  00FC20  20                 	db	32
  3864  00FC21  20                 	db	32
  3865  00FC22  20                 	db	32
  3866  00FC23  20                 	db	32
  3867  00FC24  20                 	db	32
  3868  00FC25  20                 	db	32
  3869  00FC26  20                 	db	32
  3870  00FC27  20                 	db	32
  3871  00FC28  20                 	db	32
  3872  00FC29  00                 	db	0
  3873  00FC2A                     STR_47:
  3874                           
  3875                           ; BSR set to: 57
  3876  00FC2A  42                 	db	66	;'B'
  3877  00FC2B  41                 	db	65	;'A'
  3878  00FC2C  54                 	db	84	;'T'
  3879  00FC2D  20                 	db	32
  3880  00FC2E  54                 	db	84	;'T'
  3881  00FC2F  57                 	db	87	;'W'
  3882  00FC30  48                 	db	72	;'H'
  3883  00FC31  20                 	db	32
  3884  00FC32  25                 	db	37
  3885  00FC33  34                 	db	52	;'4'
  3886  00FC34  2E                 	db	46
  3887  00FC35  31                 	db	49	;'1'
  3888  00FC36  66                 	db	102	;'f'
  3889  00FC37  20                 	db	32
  3890  00FC38  20                 	db	32
  3891  00FC39  20                 	db	32
  3892  00FC3A  20                 	db	32
  3893  00FC3B  20                 	db	32
  3894  00FC3C  20                 	db	32
  3895  00FC3D  20                 	db	32
  3896  00FC3E  20                 	db	32
  3897  00FC3F  20                 	db	32
  3898  00FC40  00                 	db	0
  3899  00FC41                     STR_41:
  3900                           
  3901                           ; BSR set to: 57
  3902  00FC41  49                 	db	73	;'I'
  3903  00FC42  4E                 	db	78	;'N'
  3904  00FC43  56                 	db	86	;'V'
  3905  00FC44  20                 	db	32
  3906  00FC45  20                 	db	32
  3907  00FC46  57                 	db	87	;'W'
  3908  00FC47  48                 	db	72	;'H'
  3909  00FC48  20                 	db	32
  3910  00FC49  25                 	db	37
  3911  00FC4A  33                 	db	51	;'3'
  3912  00FC4B  2E                 	db	46
  3913  00FC4C  32                 	db	50	;'2'
  3914  00FC4D  66                 	db	102	;'f'
  3915  00FC4E  20                 	db	32
  3916  00FC4F  20                 	db	32
  3917  00FC50  20                 	db	32
  3918  00FC51  20                 	db	32
  3919  00FC52  20                 	db	32
  3920  00FC53  20                 	db	32
  3921  00FC54  20                 	db	32
  3922  00FC55  20                 	db	32
  3923  00FC56  20                 	db	32
  3924  00FC57  00                 	db	0
  3925  00FC58                     STR_40:
  3926                           
  3927                           ; BSR set to: 57
  3928  00FC58  4C                 	db	76	;'L'
  3929  00FC59  4F                 	db	79	;'O'
  3930  00FC5A  41                 	db	65	;'A'
  3931  00FC5B  44                 	db	68	;'D'
  3932  00FC5C  20                 	db	32
  3933  00FC5D  57                 	db	87	;'W'
  3934  00FC5E  48                 	db	72	;'H'
  3935  00FC5F  20                 	db	32
  3936  00FC60  25                 	db	37
  3937  00FC61  33                 	db	51	;'3'
  3938  00FC62  2E                 	db	46
  3939  00FC63  32                 	db	50	;'2'
  3940  00FC64  66                 	db	102	;'f'
  3941  00FC65  20                 	db	32
  3942  00FC66  20                 	db	32
  3943  00FC67  20                 	db	32
  3944  00FC68  20                 	db	32
  3945  00FC69  20                 	db	32
  3946  00FC6A  20                 	db	32
  3947  00FC6B  20                 	db	32
  3948  00FC6C  20                 	db	32
  3949  00FC6D  20                 	db	32
  3950  00FC6E  00                 	db	0
  3951  00FC6F                     STR_39:
  3952                           
  3953                           ; BSR set to: 57
  3954  00FC6F  50                 	db	80	;'P'
  3955  00FC70  56                 	db	86	;'V'
  3956  00FC71  20                 	db	32
  3957  00FC72  25                 	db	37
  3958  00FC73  63                 	db	99	;'c'
  3959  00FC74  20                 	db	32
  3960  00FC75  57                 	db	87	;'W'
  3961  00FC76  48                 	db	72	;'H'
  3962  00FC77  20                 	db	32
  3963  00FC78  25                 	db	37
  3964  00FC79  33                 	db	51	;'3'
  3965  00FC7A  2E                 	db	46
  3966  00FC7B  32                 	db	50	;'2'
  3967  00FC7C  66                 	db	102	;'f'
  3968  00FC7D  20                 	db	32
  3969  00FC7E  20                 	db	32
  3970  00FC7F  20                 	db	32
  3971  00FC80  20                 	db	32
  3972  00FC81  20                 	db	32
  3973  00FC82  20                 	db	32
  3974  00FC83  20                 	db	32
  3975  00FC84  20                 	db	32
  3976  00FC85  00                 	db	0
  3977  00FC86                     STR_38:
  3978                           
  3979                           ; BSR set to: 57
  3980  00FC86  49                 	db	73	;'I'
  3981  00FC87  4E                 	db	78	;'N'
  3982  00FC88  56                 	db	86	;'V'
  3983  00FC89  20                 	db	32
  3984  00FC8A  20                 	db	32
  3985  00FC8B  50                 	db	80	;'P'
  3986  00FC8C  57                 	db	87	;'W'
  3987  00FC8D  52                 	db	82	;'R'
  3988  00FC8E  20                 	db	32
  3989  00FC8F  25                 	db	37
  3990  00FC90  33                 	db	51	;'3'
  3991  00FC91  2E                 	db	46
  3992  00FC92  32                 	db	50	;'2'
  3993  00FC93  66                 	db	102	;'f'
  3994  00FC94  20                 	db	32
  3995  00FC95  20                 	db	32
  3996  00FC96  20                 	db	32
  3997  00FC97  20                 	db	32
  3998  00FC98  20                 	db	32
  3999  00FC99  20                 	db	32
  4000  00FC9A  20                 	db	32
  4001  00FC9B  20                 	db	32
  4002  00FC9C  00                 	db	0
  4003  00FC9D                     STR_37:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FC9D  4C                 	db	76	;'L'
  4007  00FC9E  4F                 	db	79	;'O'
  4008  00FC9F  41                 	db	65	;'A'
  4009  00FCA0  44                 	db	68	;'D'
  4010  00FCA1  20                 	db	32
  4011  00FCA2  50                 	db	80	;'P'
  4012  00FCA3  57                 	db	87	;'W'
  4013  00FCA4  52                 	db	82	;'R'
  4014  00FCA5  20                 	db	32
  4015  00FCA6  25                 	db	37
  4016  00FCA7  33                 	db	51	;'3'
  4017  00FCA8  2E                 	db	46
  4018  00FCA9  32                 	db	50	;'2'
  4019  00FCAA  66                 	db	102	;'f'
  4020  00FCAB  20                 	db	32
  4021  00FCAC  20                 	db	32
  4022  00FCAD  20                 	db	32
  4023  00FCAE  20                 	db	32
  4024  00FCAF  20                 	db	32
  4025  00FCB0  20                 	db	32
  4026  00FCB1  20                 	db	32
  4027  00FCB2  20                 	db	32
  4028  00FCB3  00                 	db	0
  4029  00FCB4                     STR_36:
  4030                           
  4031                           ; BSR set to: 57
  4032  00FCB4  50                 	db	80	;'P'
  4033  00FCB5  56                 	db	86	;'V'
  4034  00FCB6  20                 	db	32
  4035  00FCB7  25                 	db	37
  4036  00FCB8  63                 	db	99	;'c'
  4037  00FCB9  20                 	db	32
  4038  00FCBA  50                 	db	80	;'P'
  4039  00FCBB  57                 	db	87	;'W'
  4040  00FCBC  52                 	db	82	;'R'
  4041  00FCBD  20                 	db	32
  4042  00FCBE  25                 	db	37
  4043  00FCBF  33                 	db	51	;'3'
  4044  00FCC0  2E                 	db	46
  4045  00FCC1  32                 	db	50	;'2'
  4046  00FCC2  66                 	db	102	;'f'
  4047  00FCC3  20                 	db	32
  4048  00FCC4  20                 	db	32
  4049  00FCC5  20                 	db	32
  4050  00FCC6  20                 	db	32
  4051  00FCC7  20                 	db	32
  4052  00FCC8  20                 	db	32
  4053  00FCC9  20                 	db	32
  4054  00FCCA  00                 	db	0
  4055  00FCCB                     STR_19:
  4056                           
  4057                           ; BSR set to: 57
  4058  00FCCB  42                 	db	66	;'B'
  4059  00FCCC  61                 	db	97	;'a'
  4060  00FCCD  74                 	db	116	;'t'
  4061  00FCCE  74                 	db	116	;'t'
  4062  00FCCF  65                 	db	101	;'e'
  4063  00FCD0  72                 	db	114	;'r'
  4064  00FCD1  79                 	db	121	;'y'
  4065  00FCD2  20                 	db	32
  4066  00FCD3  41                 	db	65	;'A'
  4067  00FCD4  68                 	db	104	;'h'
  4068  00FCD5  20                 	db	32
  4069  00FCD6  25                 	db	37
  4070  00FCD7  33                 	db	51	;'3'
  4071  00FCD8  2E                 	db	46
  4072  00FCD9  32                 	db	50	;'2'
  4073  00FCDA  66                 	db	102	;'f'
  4074  00FCDB  20                 	db	32
  4075  00FCDC  20                 	db	32
  4076  00FCDD  20                 	db	32
  4077  00FCDE  20                 	db	32
  4078  00FCDF  20                 	db	32
  4079  00FCE0  20                 	db	32
  4080  00FCE1  00                 	db	0
  4081  00FCE2                     STR_43:
  4082                           
  4083                           ; BSR set to: 57
  4084  00FCE2  42                 	db	66	;'B'
  4085  00FCE3  56                 	db	86	;'V'
  4086  00FCE4  20                 	db	32
  4087  00FCE5  25                 	db	37
  4088  00FCE6  32                 	db	50	;'2'
  4089  00FCE7  2E                 	db	46
  4090  00FCE8  32                 	db	50	;'2'
  4091  00FCE9  66                 	db	102	;'f'
  4092  00FCEA  20                 	db	32
  4093  00FCEB  42                 	db	66	;'B'
  4094  00FCEC  41                 	db	65	;'A'
  4095  00FCED  20                 	db	32
  4096  00FCEE  25                 	db	37
  4097  00FCEF  32                 	db	50	;'2'
  4098  00FCF0  2E                 	db	46
  4099  00FCF1  32                 	db	50	;'2'
  4100  00FCF2  66                 	db	102	;'f'
  4101  00FCF3  20                 	db	32
  4102  00FCF4  20                 	db	32
  4103  00FCF5  20                 	db	32
  4104  00FCF6  20                 	db	32
  4105  00FCF7  20                 	db	32
  4106  00FCF8  00                 	db	0
  4107  00FCF9                     STR_44:
  4108                           
  4109                           ; BSR set to: 57
  4110  00FCF9  43                 	db	67	;'C'
  4111  00FCFA  56                 	db	86	;'V'
  4112  00FCFB  20                 	db	32
  4113  00FCFC  25                 	db	37
  4114  00FCFD  32                 	db	50	;'2'
  4115  00FCFE  2E                 	db	46
  4116  00FCFF  32                 	db	50	;'2'
  4117  00FD00  66                 	db	102	;'f'
  4118  00FD01  20                 	db	32
  4119  00FD02  4C                 	db	76	;'L'
  4120  00FD03  41                 	db	65	;'A'
  4121  00FD04  20                 	db	32
  4122  00FD05  25                 	db	37
  4123  00FD06  32                 	db	50	;'2'
  4124  00FD07  2E                 	db	46
  4125  00FD08  32                 	db	50	;'2'
  4126  00FD09  66                 	db	102	;'f'
  4127  00FD0A  20                 	db	32
  4128  00FD0B  20                 	db	32
  4129  00FD0C  20                 	db	32
  4130  00FD0D  20                 	db	32
  4131  00FD0E  20                 	db	32
  4132  00FD0F  00                 	db	0
  4133  00FD10                     STR_42:
  4134                           
  4135                           ; BSR set to: 57
  4136  00FD10  50                 	db	80	;'P'
  4137  00FD11  56                 	db	86	;'V'
  4138  00FD12  20                 	db	32
  4139  00FD13  25                 	db	37
  4140  00FD14  32                 	db	50	;'2'
  4141  00FD15  2E                 	db	46
  4142  00FD16  32                 	db	50	;'2'
  4143  00FD17  66                 	db	102	;'f'
  4144  00FD18  20                 	db	32
  4145  00FD19  50                 	db	80	;'P'
  4146  00FD1A  41                 	db	65	;'A'
  4147  00FD1B  20                 	db	32
  4148  00FD1C  25                 	db	37
  4149  00FD1D  32                 	db	50	;'2'
  4150  00FD1E  2E                 	db	46
  4151  00FD1F  32                 	db	50	;'2'
  4152  00FD20  66                 	db	102	;'f'
  4153  00FD21  20                 	db	32
  4154  00FD22  20                 	db	32
  4155  00FD23  20                 	db	32
  4156  00FD24  20                 	db	32
  4157  00FD25  20                 	db	32
  4158  00FD26  00                 	db	0
  4159  00FD27                     STR_132:
  4160                           
  4161                           ; BSR set to: 57
  4162  00FD27  53                 	db	83	;'S'
  4163  00FD28  75                 	db	117	;'u'
  4164  00FD29  6E                 	db	110	;'n'
  4165  00FD2A  4D                 	db	77	;'M'
  4166  00FD2B  6F                 	db	111	;'o'
  4167  00FD2C  6E                 	db	110	;'n'
  4168  00FD2D  54                 	db	84	;'T'
  4169  00FD2E  75                 	db	117	;'u'
  4170  00FD2F  65                 	db	101	;'e'
  4171  00FD30  57                 	db	87	;'W'
  4172  00FD31  65                 	db	101	;'e'
  4173  00FD32  64                 	db	100	;'d'
  4174  00FD33  54                 	db	84	;'T'
  4175  00FD34  68                 	db	104	;'h'
  4176  00FD35  75                 	db	117	;'u'
  4177  00FD36  46                 	db	70	;'F'
  4178  00FD37  72                 	db	114	;'r'
  4179  00FD38  69                 	db	105	;'i'
  4180  00FD39  53                 	db	83	;'S'
  4181  00FD3A  61                 	db	97	;'a'
  4182  00FD3B  74                 	db	116	;'t'
  4183  00FD3C  00                 	db	0
  4184  00FD3D                     STR_62:
  4185                           
  4186                           ; BSR set to: 57
  4187  00FD3D  20                 	db	32
  4188  00FD3E  25                 	db	37
  4189  00FD3F  64                 	db	100	;'d'
  4190  00FD40  20                 	db	32
  4191  00FD41  25                 	db	37
  4192  00FD42  64                 	db	100	;'d'
  4193  00FD43  20                 	db	32
  4194  00FD44  20                 	db	32
  4195  00FD45  20                 	db	32
  4196  00FD46  20                 	db	32
  4197  00FD47  20                 	db	32
  4198  00FD48  20                 	db	32
  4199  00FD49  20                 	db	32
  4200  00FD4A  20                 	db	32
  4201  00FD4B  20                 	db	32
  4202  00FD4C  20                 	db	32
  4203  00FD4D  20                 	db	32
  4204  00FD4E  20                 	db	32
  4205  00FD4F  20                 	db	32
  4206  00FD50  20                 	db	32
  4207  00FD51  20                 	db	32
  4208  00FD52  00                 	db	0
  4209  00FD53                     STR_65:
  4210                           
  4211                           ; BSR set to: 57
  4212  00FD53  20                 	db	32
  4213  00FD54  25                 	db	37
  4214  00FD55  6C                 	db	108	;'l'
  4215  00FD56  64                 	db	100	;'d'
  4216  00FD57  20                 	db	32
  4217  00FD58  25                 	db	37
  4218  00FD59  6C                 	db	108	;'l'
  4219  00FD5A  64                 	db	100	;'d'
  4220  00FD5B  20                 	db	32
  4221  00FD5C  20                 	db	32
  4222  00FD5D  20                 	db	32
  4223  00FD5E  20                 	db	32
  4224  00FD5F  20                 	db	32
  4225  00FD60  20                 	db	32
  4226  00FD61  20                 	db	32
  4227  00FD62  20                 	db	32
  4228  00FD63  20                 	db	32
  4229  00FD64  20                 	db	32
  4230  00FD65  20                 	db	32
  4231  00FD66  20                 	db	32
  4232  00FD67  20                 	db	32
  4233  00FD68  00                 	db	0
  4234  00FD69                     STR_16:
  4235                           
  4236                           ; BSR set to: 57
  4237  00FD69  42                 	db	66	;'B'
  4238  00FD6A  56                 	db	86	;'V'
  4239  00FD6B  20                 	db	32
  4240  00FD6C  25                 	db	37
  4241  00FD6D  32                 	db	50	;'2'
  4242  00FD6E  2E                 	db	46
  4243  00FD6F  34                 	db	52	;'4'
  4244  00FD70  66                 	db	102	;'f'
  4245  00FD71  20                 	db	32
  4246  00FD72  20                 	db	32
  4247  00FD73  20                 	db	32
  4248  00FD74  20                 	db	32
  4249  00FD75  20                 	db	32
  4250  00FD76  20                 	db	32
  4251  00FD77  20                 	db	32
  4252  00FD78  20                 	db	32
  4253  00FD79  20                 	db	32
  4254  00FD7A  20                 	db	32
  4255  00FD7B  20                 	db	32
  4256  00FD7C  20                 	db	32
  4257  00FD7D  20                 	db	32
  4258  00FD7E  00                 	db	0
  4259  00FD7F                     STR_31:
  4260                           
  4261                           ; BSR set to: 57
  4262  00FD7F  54                 	db	84	;'T'
  4263  00FD80  6F                 	db	111	;'o'
  4264  00FD81  20                 	db	32
  4265  00FD82  45                 	db	69	;'E'
  4266  00FD83  45                 	db	69	;'E'
  4267  00FD84  50                 	db	80	;'P'
  4268  00FD85  52                 	db	82	;'R'
  4269  00FD86  4F                 	db	79	;'O'
  4270  00FD87  4D                 	db	77	;'M'
  4271  00FD88  20                 	db	32
  4272  00FD89  20                 	db	32
  4273  00FD8A  20                 	db	32
  4274  00FD8B  20                 	db	32
  4275  00FD8C  20                 	db	32
  4276  00FD8D  20                 	db	32
  4277  00FD8E  20                 	db	32
  4278  00FD8F  20                 	db	32
  4279  00FD90  20                 	db	32
  4280  00FD91  20                 	db	32
  4281  00FD92  20                 	db	32
  4282  00FD93  20                 	db	32
  4283  00FD94  00                 	db	0
  4284  00FD95                     STR_21:
  4285                           
  4286                           ; BSR set to: 57
  4287  00FD95  42                 	db	66	;'B'
  4288  00FD96  61                 	db	97	;'a'
  4289  00FD97  74                 	db	116	;'t'
  4290  00FD98  74                 	db	116	;'t'
  4291  00FD99  65                 	db	101	;'e'
  4292  00FD9A  72                 	db	114	;'r'
  4293  00FD9B  79                 	db	121	;'y'
  4294  00FD9C  20                 	db	32
  4295  00FD9D  45                 	db	69	;'E'
  4296  00FD9E  53                 	db	83	;'S'
  4297  00FD9F  52                 	db	82	;'R'
  4298  00FDA0  20                 	db	32
  4299  00FDA1  20                 	db	32
  4300  00FDA2  20                 	db	32
  4301  00FDA3  20                 	db	32
  4302  00FDA4  20                 	db	32
  4303  00FDA5  20                 	db	32
  4304  00FDA6  20                 	db	32
  4305  00FDA7  20                 	db	32
  4306  00FDA8  20                 	db	32
  4307  00FDA9  20                 	db	32
  4308  00FDAA  00                 	db	0
  4309  00FDAB                     STR_22:
  4310                           
  4311                           ; BSR set to: 57
  4312  00FDAB  43                 	db	67	;'C'
  4313  00FDAC  61                 	db	97	;'a'
  4314  00FDAD  6C                 	db	108	;'l'
  4315  00FDAE  63                 	db	99	;'c'
  4316  00FDAF  75                 	db	117	;'u'
  4317  00FDB0  6C                 	db	108	;'l'
  4318  00FDB1  61                 	db	97	;'a'
  4319  00FDB2  74                 	db	116	;'t'
  4320  00FDB3  69                 	db	105	;'i'
  4321  00FDB4  6F                 	db	111	;'o'
  4322  00FDB5  6E                 	db	110	;'n'
  4323  00FDB6  20                 	db	32
  4324  00FDB7  20                 	db	32
  4325  00FDB8  20                 	db	32
  4326  00FDB9  20                 	db	32
  4327  00FDBA  20                 	db	32
  4328  00FDBB  20                 	db	32
  4329  00FDBC  20                 	db	32
  4330  00FDBD  20                 	db	32
  4331  00FDBE  20                 	db	32
  4332  00FDBF  20                 	db	32
  4333  00FDC0  00                 	db	0
  4334  00FDC1                     STR_59:
  4335                           
  4336                           ; BSR set to: 57
  4337  00FDC1  43                 	db	67	;'C'
  4338  00FDC2  61                 	db	97	;'a'
  4339  00FDC3  6C                 	db	108	;'l'
  4340  00FDC4  69                 	db	105	;'i'
  4341  00FDC5  62                 	db	98	;'b'
  4342  00FDC6  72                 	db	114	;'r'
  4343  00FDC7  61                 	db	97	;'a'
  4344  00FDC8  74                 	db	116	;'t'
  4345  00FDC9  69                 	db	105	;'i'
  4346  00FDCA  6F                 	db	111	;'o'
  4347  00FDCB  6E                 	db	110	;'n'
  4348  00FDCC  20                 	db	32
  4349  00FDCD  20                 	db	32
  4350  00FDCE  20                 	db	32
  4351  00FDCF  20                 	db	32
  4352  00FDD0  20                 	db	32
  4353  00FDD1  20                 	db	32
  4354  00FDD2  20                 	db	32
  4355  00FDD3  20                 	db	32
  4356  00FDD4  20                 	db	32
  4357  00FDD5  20                 	db	32
  4358  00FDD6  00                 	db	0
  4359  00FDD7                     STR_58:
  4360                           
  4361                           ; BSR set to: 57
  4362  00FDD7  53                 	db	83	;'S'
  4363  00FDD8  65                 	db	101	;'e'
  4364  00FDD9  6E                 	db	110	;'n'
  4365  00FDDA  73                 	db	115	;'s'
  4366  00FDDB  6F                 	db	111	;'o'
  4367  00FDDC  72                 	db	114	;'r'
  4368  00FDDD  20                 	db	32
  4369  00FDDE  5A                 	db	90	;'Z'
  4370  00FDDF  65                 	db	101	;'e'
  4371  00FDE0  72                 	db	114	;'r'
  4372  00FDE1  6F                 	db	111	;'o'
  4373  00FDE2  20                 	db	32
  4374  00FDE3  20                 	db	32
  4375  00FDE4  20                 	db	32
  4376  00FDE5  20                 	db	32
  4377  00FDE6  20                 	db	32
  4378  00FDE7  20                 	db	32
  4379  00FDE8  20                 	db	32
  4380  00FDE9  20                 	db	32
  4381  00FDEA  20                 	db	32
  4382  00FDEB  20                 	db	32
  4383  00FDEC  00                 	db	0
  4384  00FDED                     STR_66:
  4385                           
  4386                           ; BSR set to: 57
  4387  00FDED  5A                 	db	90	;'Z'
  4388  00FDEE  65                 	db	101	;'e'
  4389  00FDEF  72                 	db	114	;'r'
  4390  00FDF0  6F                 	db	111	;'o'
  4391  00FDF1  20                 	db	32
  4392  00FDF2  43                 	db	67	;'C'
  4393  00FDF3  61                 	db	97	;'a'
  4394  00FDF4  6C                 	db	108	;'l'
  4395  00FDF5  20                 	db	32
  4396  00FDF6  53                 	db	83	;'S'
  4397  00FDF7  65                 	db	101	;'e'
  4398  00FDF8  74                 	db	116	;'t'
  4399  00FDF9  20                 	db	32
  4400  00FDFA  20                 	db	32
  4401  00FDFB  20                 	db	32
  4402  00FDFC  20                 	db	32
  4403  00FDFD  20                 	db	32
  4404  00FDFE  20                 	db	32
  4405  00FDFF  20                 	db	32
  4406  00FE00  20                 	db	32
  4407  00FE01  20                 	db	32
  4408  00FE02  00                 	db	0
  4409  00FE03                     STR_57:
  4410                           
  4411                           ; BSR set to: 57
  4412  00FE03  42                 	db	66	;'B'
  4413  00FE04  61                 	db	97	;'a'
  4414  00FE05  74                 	db	116	;'t'
  4415  00FE06  74                 	db	116	;'t'
  4416  00FE07  65                 	db	101	;'e'
  4417  00FE08  72                 	db	114	;'r'
  4418  00FE09  79                 	db	121	;'y'
  4419  00FE0A  20                 	db	32
  4420  00FE0B  61                 	db	97	;'a'
  4421  00FE0C  6E                 	db	110	;'n'
  4422  00FE0D  64                 	db	100	;'d'
  4423  00FE0E  20                 	db	32
  4424  00FE0F  50                 	db	80	;'P'
  4425  00FE10  56                 	db	86	;'V'
  4426  00FE11  20                 	db	32
  4427  00FE12  20                 	db	32
  4428  00FE13  20                 	db	32
  4429  00FE14  20                 	db	32
  4430  00FE15  20                 	db	32
  4431  00FE16  20                 	db	32
  4432  00FE17  20                 	db	32
  4433  00FE18  00                 	db	0
  4434  00FE19                     STR_24:
  4435                           
  4436                           ; BSR set to: 57
  4437  00FE19  43                 	db	67	;'C'
  4438  00FE1A  68                 	db	104	;'h'
  4439  00FE1B  65                 	db	101	;'e'
  4440  00FE1C  63                 	db	99	;'c'
  4441  00FE1D  6B                 	db	107	;'k'
  4442  00FE1E  69                 	db	105	;'i'
  4443  00FE1F  6E                 	db	110	;'n'
  4444  00FE20  67                 	db	103	;'g'
  4445  00FE21  20                 	db	32
  4446  00FE22  25                 	db	37
  4447  00FE23  63                 	db	99	;'c'
  4448  00FE24  20                 	db	32
  4449  00FE25  25                 	db	37
  4450  00FE26  63                 	db	99	;'c'
  4451  00FE27  20                 	db	32
  4452  00FE28  20                 	db	32
  4453  00FE29  20                 	db	32
  4454  00FE2A  20                 	db	32
  4455  00FE2B  20                 	db	32
  4456  00FE2C  20                 	db	32
  4457  00FE2D  20                 	db	32
  4458  00FE2E  00                 	db	0
  4459  00FE2F                     STR_32:
  4460                           
  4461                           ; BSR set to: 57
  4462  00FE2F  20                 	db	32
  4463  00FE30  54                 	db	84	;'T'
  4464  00FE31  69                 	db	105	;'i'
  4465  00FE32  6D                 	db	109	;'m'
  4466  00FE33  65                 	db	101	;'e'
  4467  00FE34  20                 	db	32
  4468  00FE35  25                 	db	37
  4469  00FE36  6C                 	db	108	;'l'
  4470  00FE37  75                 	db	117	;'u'
  4471  00FE38  2C                 	db	44
  4472  00FE39  20                 	db	32
  4473  00FE3A  25                 	db	37
  4474  00FE3B  6C                 	db	108	;'l'
  4475  00FE3C  75                 	db	117	;'u'
  4476  00FE3D  20                 	db	32
  4477  00FE3E  20                 	db	32
  4478  00FE3F  20                 	db	32
  4479  00FE40  20                 	db	32
  4480  00FE41  20                 	db	32
  4481  00FE42  20                 	db	32
  4482  00FE43  20                 	db	32
  4483  00FE44  00                 	db	0
  4484  00FE45                     STR_61:
  4485                           
  4486                           ; BSR set to: 57
  4487  00FE45  53                 	db	83	;'S'
  4488  00FE46  65                 	db	101	;'e'
  4489  00FE47  6E                 	db	110	;'n'
  4490  00FE48  73                 	db	115	;'s'
  4491  00FE49  6F                 	db	111	;'o'
  4492  00FE4A  72                 	db	114	;'r'
  4493  00FE4B  20                 	db	32
  4494  00FE4C  52                 	db	82	;'R'
  4495  00FE4D  65                 	db	101	;'e'
  4496  00FE4E  61                 	db	97	;'a'
  4497  00FE4F  64                 	db	100	;'d'
  4498  00FE50  69                 	db	105	;'i'
  4499  00FE51  6E                 	db	110	;'n'
  4500  00FE52  67                 	db	103	;'g'
  4501  00FE53  73                 	db	115	;'s'
  4502  00FE54  20                 	db	32
  4503  00FE55  20                 	db	32
  4504  00FE56  20                 	db	32
  4505  00FE57  20                 	db	32
  4506  00FE58  20                 	db	32
  4507  00FE59  20                 	db	32
  4508  00FE5A  00                 	db	0
  4509  00FE5B                     STR_23:
  4510                           
  4511                           ; BSR set to: 57
  4512  00FE5B  43                 	db	67	;'C'
  4513  00FE5C  68                 	db	104	;'h'
  4514  00FE5D  65                 	db	101	;'e'
  4515  00FE5E  63                 	db	99	;'c'
  4516  00FE5F  6B                 	db	107	;'k'
  4517  00FE60  20                 	db	32
  4518  00FE61  33                 	db	51	;'3'
  4519  00FE62  30                 	db	48	;'0'
  4520  00FE63  20                 	db	32
  4521  00FE64  73                 	db	115	;'s'
  4522  00FE65  65                 	db	101	;'e'
  4523  00FE66  63                 	db	99	;'c'
  4524  00FE67  6F                 	db	111	;'o'
  4525  00FE68  6E                 	db	110	;'n'
  4526  00FE69  64                 	db	100	;'d'
  4527  00FE6A  73                 	db	115	;'s'
  4528  00FE6B  20                 	db	32
  4529  00FE6C  20                 	db	32
  4530  00FE6D  20                 	db	32
  4531  00FE6E  20                 	db	32
  4532  00FE6F  20                 	db	32
  4533  00FE70  00                 	db	0
  4534  00FE71                     STR_69:
  4535                           
  4536                           ; BSR set to: 57
  4537  00FE71  5A                 	db	90	;'Z'
  4538  00FE72  65                 	db	101	;'e'
  4539  00FE73  72                 	db	114	;'r'
  4540  00FE74  6F                 	db	111	;'o'
  4541  00FE75  20                 	db	32
  4542  00FE76  4F                 	db	79	;'O'
  4543  00FE77  75                 	db	117	;'u'
  4544  00FE78  74                 	db	116	;'t'
  4545  00FE79  20                 	db	32
  4546  00FE7A  4F                 	db	79	;'O'
  4547  00FE7B  66                 	db	102	;'f'
  4548  00FE7C  20                 	db	32
  4549  00FE7D  52                 	db	82	;'R'
  4550  00FE7E  61                 	db	97	;'a'
  4551  00FE7F  6E                 	db	110	;'n'
  4552  00FE80  67                 	db	103	;'g'
  4553  00FE81  65                 	db	101	;'e'
  4554  00FE82  20                 	db	32
  4555  00FE83  20                 	db	32
  4556  00FE84  20                 	db	32
  4557  00FE85  20                 	db	32
  4558  00FE86  00                 	db	0
  4559  00FE87                     STR_54:
  4560                           
  4561                           ; BSR set to: 57
  4562  00FE87  25                 	db	37
  4563  00FE88  64                 	db	100	;'d'
  4564  00FE89  20                 	db	32
  4565  00FE8A  25                 	db	37
  4566  00FE8B  32                 	db	50	;'2'
  4567  00FE8C  2E                 	db	46
  4568  00FE8D  34                 	db	52	;'4'
  4569  00FE8E  66                 	db	102	;'f'
  4570  00FE8F  2C                 	db	44
  4571  00FE90  20                 	db	32
  4572  00FE91  25                 	db	37
  4573  00FE92  64                 	db	100	;'d'
  4574  00FE93  20                 	db	32
  4575  00FE94  20                 	db	32
  4576  00FE95  54                 	db	84	;'T'
  4577  00FE96  52                 	db	82	;'R'
  4578  00FE97  49                 	db	73	;'I'
  4579  00FE98  4D                 	db	77	;'M'
  4580  00FE99  20                 	db	32
  4581  00FE9A  20                 	db	32
  4582  00FE9B  20                 	db	32
  4583  00FE9C  00                 	db	0
  4584  00FE9D                     STR_63:
  4585                           
  4586                           ; BSR set to: 57
  4587  00FE9D  53                 	db	83	;'S'
  4588  00FE9E  74                 	db	116	;'t'
  4589  00FE9F  61                 	db	97	;'a'
  4590  00FEA0  62                 	db	98	;'b'
  4591  00FEA1  69                 	db	105	;'i'
  4592  00FEA2  6C                 	db	108	;'l'
  4593  00FEA3  69                 	db	105	;'i'
  4594  00FEA4  74                 	db	116	;'t'
  4595  00FEA5  79                 	db	121	;'y'
  4596  00FEA6  20                 	db	32
  4597  00FEA7  63                 	db	99	;'c'
  4598  00FEA8  6C                 	db	108	;'l'
  4599  00FEA9  6F                 	db	111	;'o'
  4600  00FEAA  63                 	db	99	;'c'
  4601  00FEAB  6B                 	db	107	;'k'
  4602  00FEAC  20                 	db	32
  4603  00FEAD  25                 	db	37
  4604  00FEAE  64                 	db	100	;'d'
  4605  00FEAF  20                 	db	32
  4606  00FEB0  20                 	db	32
  4607  00FEB1  20                 	db	32
  4608  00FEB2  00                 	db	0
  4609  00FEB3                     STR_30:
  4610                           
  4611                           ; BSR set to: 57
  4612  00FEB3  48                 	db	72	;'H'
  4613  00FEB4  69                 	db	105	;'i'
  4614  00FEB5  73                 	db	115	;'s'
  4615  00FEB6  74                 	db	116	;'t'
  4616  00FEB7  6F                 	db	111	;'o'
  4617  00FEB8  72                 	db	114	;'r'
  4618  00FEB9  79                 	db	121	;'y'
  4619  00FEBA  20                 	db	32
  4620  00FEBB  44                 	db	68	;'D'
  4621  00FEBC  61                 	db	97	;'a'
  4622  00FEBD  74                 	db	116	;'t'
  4623  00FEBE  61                 	db	97	;'a'
  4624  00FEBF  20                 	db	32
  4625  00FEC0  20                 	db	32
  4626  00FEC1  53                 	db	83	;'S'
  4627  00FEC2  61                 	db	97	;'a'
  4628  00FEC3  76                 	db	118	;'v'
  4629  00FEC4  65                 	db	101	;'e'
  4630  00FEC5  64                 	db	100	;'d'
  4631  00FEC6  20                 	db	32
  4632  00FEC7  20                 	db	32
  4633  00FEC8  00                 	db	0
  4634  00FEC9                     
  4635                           ; BSR set to: 57
  4636  00FEC9  48                 	db	72	;'H'
  4637  00FECA  45                 	db	69	;'E'
  4638  00FECB  4C                 	db	76	;'L'
  4639  00FECC  50                 	db	80	;'P'
  4640  00FECD  20                 	db	32
  4641  00FECE  25                 	db	37
  4642  00FECF  73                 	db	115	;'s'
  4643  00FED0  20                 	db	32
  4644  00FED1  20                 	db	32
  4645  00FED2  20                 	db	32
  4646  00FED3  20                 	db	32
  4647  00FED4  20                 	db	32
  4648  00FED5  20                 	db	32
  4649  00FED6  20                 	db	32
  4650  00FED7  20                 	db	32
  4651  00FED8  20                 	db	32
  4652  00FED9  20                 	db	32
  4653  00FEDA  20                 	db	32
  4654  00FEDB  20                 	db	32
  4655  00FEDC  20                 	db	32
  4656  00FEDD  00                 	db	0
  4657  00FEDE                     
  4658                           ; BSR set to: 57
  4659  00FEDE  44                 	db	68	;'D'
  4660  00FEDF  49                 	db	73	;'I'
  4661  00FEE0  53                 	db	83	;'S'
  4662  00FEE1  50                 	db	80	;'P'
  4663  00FEE2  4C                 	db	76	;'L'
  4664  00FEE3  41                 	db	65	;'A'
  4665  00FEE4  59                 	db	89	;'Y'
  4666  00FEE5  20                 	db	32
  4667  00FEE6  25                 	db	37
  4668  00FEE7  73                 	db	115	;'s'
  4669  00FEE8  20                 	db	32
  4670  00FEE9  20                 	db	32
  4671  00FEEA  20                 	db	32
  4672  00FEEB  20                 	db	32
  4673  00FEEC  20                 	db	32
  4674  00FEED  20                 	db	32
  4675  00FEEE  20                 	db	32
  4676  00FEEF  20                 	db	32
  4677  00FEF0  20                 	db	32
  4678  00FEF1  20                 	db	32
  4679  00FEF2  00                 	db	0
  4680  00FEF3                     STR_4:
  4681                           
  4682                           ; BSR set to: 57
  4683  00FEF3  20                 	db	32
  4684  00FEF4  4E                 	db	78	;'N'
  4685  00FEF5  53                 	db	83	;'S'
  4686  00FEF6  41                 	db	65	;'A'
  4687  00FEF7  53                 	db	83	;'S'
  4688  00FEF8  50                 	db	80	;'P'
  4689  00FEF9  4F                 	db	79	;'O'
  4690  00FEFA  4F                 	db	79	;'O'
  4691  00FEFB  4B                 	db	75	;'K'
  4692  00FEFC  20                 	db	32
  4693  00FEFD  20                 	db	32
  4694  00FEFE  20                 	db	32
  4695  00FEFF  20                 	db	32
  4696  00FF00  20                 	db	32
  4697  00FF01  20                 	db	32
  4698  00FF02  20                 	db	32
  4699  00FF03  20                 	db	32
  4700  00FF04  20                 	db	32
  4701  00FF05  20                 	db	32
  4702  00FF06  20                 	db	32
  4703  00FF07  00                 	db	0
  4704  00FF08                     STR_2:
  4705                           
  4706                           ; BSR set to: 57
  4707  00FF08  20                 	db	32
  4708  00FF09  56                 	db	86	;'V'
  4709  00FF0A  65                 	db	101	;'e'
  4710  00FF0B  72                 	db	114	;'r'
  4711  00FF0C  73                 	db	115	;'s'
  4712  00FF0D  69                 	db	105	;'i'
  4713  00FF0E  6F                 	db	111	;'o'
  4714  00FF0F  6E                 	db	110	;'n'
  4715  00FF10  20                 	db	32
  4716  00FF11  25                 	db	37
  4717  00FF12  73                 	db	115	;'s'
  4718  00FF13  20                 	db	32
  4719  00FF14  20                 	db	32
  4720  00FF15  20                 	db	32
  4721  00FF16  20                 	db	32
  4722  00FF17  20                 	db	32
  4723  00FF18  20                 	db	32
  4724  00FF19  20                 	db	32
  4725  00FF1A  20                 	db	32
  4726  00FF1B  20                 	db	32
  4727  00FF1C  00                 	db	0
  4728  00FF1D                     STR_1:
  4729                           
  4730                           ; BSR set to: 57
  4731  00FF1D  20                 	db	32
  4732  00FF1E  4D                 	db	77	;'M'
  4733  00FF1F  42                 	db	66	;'B'
  4734  00FF20  4D                 	db	77	;'M'
  4735  00FF21  43                 	db	67	;'C'
  4736  00FF22  20                 	db	32
  4737  00FF23  53                 	db	83	;'S'
  4738  00FF24  4F                 	db	79	;'O'
  4739  00FF25  4C                 	db	76	;'L'
  4740  00FF26  41                 	db	65	;'A'
  4741  00FF27  52                 	db	82	;'R'
  4742  00FF28  4D                 	db	77	;'M'
  4743  00FF29  4F                 	db	79	;'O'
  4744  00FF2A  4E                 	db	78	;'N'
  4745  00FF2B  20                 	db	32
  4746  00FF2C  20                 	db	32
  4747  00FF2D  20                 	db	32
  4748  00FF2E  20                 	db	32
  4749  00FF2F  20                 	db	32
  4750  00FF30  20                 	db	32
  4751  00FF31  00                 	db	0
  4752  00FF32                     STR_14:
  4753                           
  4754                           ; BSR set to: 57
  4755  00FF32  52                 	db	82	;'R'
  4756  00FF33  65                 	db	101	;'e'
  4757  00FF34  61                 	db	97	;'a'
  4758  00FF35  64                 	db	100	;'d'
  4759  00FF36  20                 	db	32
  4760  00FF37  45                 	db	69	;'E'
  4761  00FF38  45                 	db	69	;'E'
  4762  00FF39  50                 	db	80	;'P'
  4763  00FF3A  52                 	db	82	;'R'
  4764  00FF3B  4F                 	db	79	;'O'
  4765  00FF3C  4D                 	db	77	;'M'
  4766  00FF3D  20                 	db	32
  4767  00FF3E  44                 	db	68	;'D'
  4768  00FF3F  41                 	db	65	;'A'
  4769  00FF40  54                 	db	84	;'T'
  4770  00FF41  41                 	db	65	;'A'
  4771  00FF42  20                 	db	32
  4772  00FF43  20                 	db	32
  4773  00FF44  20                 	db	32
  4774  00FF45  20                 	db	32
  4775  00FF46  00                 	db	0
  4776  00FF47                     STR_60:
  4777                           
  4778                           ; BSR set to: 57
  4779  00FF47  52                 	db	82	;'R'
  4780  00FF48  65                 	db	101	;'e'
  4781  00FF49  6C                 	db	108	;'l'
  4782  00FF4A  65                 	db	101	;'e'
  4783  00FF4B  61                 	db	97	;'a'
  4784  00FF4C  73                 	db	115	;'s'
  4785  00FF4D  65                 	db	101	;'e'
  4786  00FF4E  20                 	db	32
  4787  00FF4F  62                 	db	98	;'b'
  4788  00FF50  75                 	db	117	;'u'
  4789  00FF51  74                 	db	116	;'t'
  4790  00FF52  74                 	db	116	;'t'
  4791  00FF53  6F                 	db	111	;'o'
  4792  00FF54  6E                 	db	110	;'n'
  4793  00FF55  20                 	db	32
  4794  00FF56  25                 	db	37
  4795  00FF57  63                 	db	99	;'c'
  4796  00FF58  20                 	db	32
  4797  00FF59  20                 	db	32
  4798  00FF5A  20                 	db	32
  4799  00FF5B  00                 	db	0
  4800  00FF5C                     STR_15:
  4801                           
  4802                           ; BSR set to: 57
  4803  00FF5C  49                 	db	73	;'I'
  4804  00FF5D  6E                 	db	110	;'n'
  4805  00FF5E  76                 	db	118	;'v'
  4806  00FF5F  61                 	db	97	;'a'
  4807  00FF60  6C                 	db	108	;'l'
  4808  00FF61  69                 	db	105	;'i'
  4809  00FF62  64                 	db	100	;'d'
  4810  00FF63  20                 	db	32
  4811  00FF64  45                 	db	69	;'E'
  4812  00FF65  45                 	db	69	;'E'
  4813  00FF66  50                 	db	80	;'P'
  4814  00FF67  52                 	db	82	;'R'
  4815  00FF68  4F                 	db	79	;'O'
  4816  00FF69  4D                 	db	77	;'M'
  4817  00FF6A  20                 	db	32
  4818  00FF6B  44                 	db	68	;'D'
  4819  00FF6C  41                 	db	65	;'A'
  4820  00FF6D  54                 	db	84	;'T'
  4821  00FF6E  41                 	db	65	;'A'
  4822  00FF6F  20                 	db	32
  4823  00FF70  00                 	db	0
  4824  00FF71                     STR_77:
  4825                           
  4826                           ; BSR set to: 57
  4827  00FF71  48                 	db	72	;'H'
  4828  00FF72  45                 	db	69	;'E'
  4829  00FF73  4C                 	db	76	;'L'
  4830  00FF74  50                 	db	80	;'P'
  4831  00FF75  20                 	db	32
  4832  00FF76  25                 	db	37
  4833  00FF77  73                 	db	115	;'s'
  4834  00FF78  20                 	db	32
  4835  00FF79  20                 	db	32
  4836  00FF7A  20                 	db	32
  4837  00FF7B  20                 	db	32
  4838  00FF7C  20                 	db	32
  4839  00FF7D  20                 	db	32
  4840  00FF7E  20                 	db	32
  4841  00FF7F  20                 	db	32
  4842  00FF80  20                 	db	32
  4843  00FF81  20                 	db	32
  4844  00FF82  20                 	db	32
  4845  00FF83  00                 	db	0
  4846  00FF84                     
  4847                           ; BSR set to: 57
  4848  00FF84  25                 	db	37
  4849  00FF85  64                 	db	100	;'d'
  4850  00FF86  20                 	db	32
  4851  00FF87  25                 	db	37
  4852  00FF88  32                 	db	50	;'2'
  4853  00FF89  2E                 	db	46
  4854  00FF8A  34                 	db	52	;'4'
  4855  00FF8B  66                 	db	102	;'f'
  4856  00FF8C  2C                 	db	44
  4857  00FF8D  20                 	db	32
  4858  00FF8E  25                 	db	37
  4859  00FF8F  64                 	db	100	;'d'
  4860  00FF90  20                 	db	32
  4861  00FF91  20                 	db	32
  4862  00FF92  20                 	db	32
  4863  00FF93  23                 	db	35
  4864  00FF94  20                 	db	32
  4865  00FF95  00                 	db	0
  4866  00FF96                     STR_33:
  4867                           
  4868                           ; BSR set to: 57
  4869  00FF96  25                 	db	37
  4870  00FF97  64                 	db	100	;'d'
  4871  00FF98  20                 	db	32
  4872  00FF99  25                 	db	37
  4873  00FF9A  32                 	db	50	;'2'
  4874  00FF9B  2E                 	db	46
  4875  00FF9C  34                 	db	52	;'4'
  4876  00FF9D  66                 	db	102	;'f'
  4877  00FF9E  20                 	db	32
  4878  00FF9F  20                 	db	32
  4879  00FFA0  20                 	db	32
  4880  00FFA1  25                 	db	37
  4881  00FFA2  64                 	db	100	;'d'
  4882  00FFA3  20                 	db	32
  4883  00FFA4  20                 	db	32
  4884  00FFA5  20                 	db	32
  4885  00FFA6  00                 	db	0
  4886  00FFA7                     STR_81:
  4887                           
  4888                           ; BSR set to: 57
  4889  00FFA7  76                 	db	118	;'v'
  4890  00FFA8  74                 	db	116	;'t'
  4891  00FFA9  65                 	db	101	;'e'
  4892  00FFAA  72                 	db	114	;'r'
  4893  00FFAB  6D                 	db	109	;'m'
  4894  00FFAC  20                 	db	32
  4895  00FFAD  25                 	db	37
  4896  00FFAE  78                 	db	120	;'x'
  4897  00FFAF  3A                 	db	58	;':'
  4898  00FFB0  25                 	db	37
  4899  00FFB1  78                 	db	120	;'x'
  4900  00FFB2  20                 	db	32
  4901  00FFB3  20                 	db	32
  4902  00FFB4  20                 	db	32
  4903  00FFB5  00                 	db	0
  4904  00FFB6                     STR_75:
  4905                           
  4906                           ; BSR set to: 57
  4907  00FFB6  46                 	db	70	;'F'
  4908  00FFB7  65                 	db	101	;'e'
  4909  00FFB8  62                 	db	98	;'b'
  4910  00FFB9  20                 	db	32
  4911  00FFBA  32                 	db	50	;'2'
  4912  00FFBB  30                 	db	48	;'0'
  4913  00FFBC  20                 	db	32
  4914  00FFBD  32                 	db	50	;'2'
  4915  00FFBE  30                 	db	48	;'0'
  4916  00FFBF  32                 	db	50	;'2'
  4917  00FFC0  30                 	db	48	;'0'
  4918  00FFC1  00                 	db	0
  4919  00FFC2                     STR_79:
  4920                           
  4921                           ; BSR set to: 57
  4922  00FFC2  25                 	db	37
  4923  00FFC3  73                 	db	115	;'s'
  4924  00FFC4  20                 	db	32
  4925  00FFC5  20                 	db	32
  4926  00FFC6  20                 	db	32
  4927  00FFC7  20                 	db	32
  4928  00FFC8  20                 	db	32
  4929  00FFC9  20                 	db	32
  4930  00FFCA  20                 	db	32
  4931  00FFCB  00                 	db	0
  4932  00FFCC                     STR_76:
  4933                           
  4934                           ; BSR set to: 57
  4935  00FFCC  31                 	db	49	;'1'
  4936  00FFCD  30                 	db	48	;'0'
  4937  00FFCE  3A                 	db	58	;':'
  4938  00FFCF  34                 	db	52	;'4'
  4939  00FFD0  36                 	db	54	;'6'
  4940  00FFD1  3A                 	db	58	;':'
  4941  00FFD2  33                 	db	51	;'3'
  4942  00FFD3  34                 	db	52	;'4'
  4943  00FFD4  00                 	db	0
  4944  00FFD5                     STR_3:
  4945                           
  4946                           ; BSR set to: 57
  4947  00FFD5  31                 	db	49	;'1'
  4948  00FFD6  2E                 	db	46
  4949  00FFD7  32                 	db	50	;'2'
  4950  00FFD8  37                 	db	55	;'7'
  4951  00FFD9  00                 	db	0
  4952  00FFDA                     STR_96:
  4953                           
  4954                           ; BSR set to: 57
  4955  00FFDA  49                 	db	73	;'I'
  4956  00FFDB  4E                 	db	78	;'N'
  4957  00FFDC  46                 	db	70	;'F'
  4958  00FFDD  00                 	db	0
  4959  00FFDE                     STR_100:
  4960                           
  4961                           ; BSR set to: 57
  4962  00FFDE  4E                 	db	78	;'N'
  4963  00FFDF  41                 	db	65	;'A'
  4964  00FFE0  4E                 	db	78	;'N'
  4965  00FFE1  00                 	db	0
  4966  00FFE2                     STR_97:
  4967                           
  4968                           ; BSR set to: 57
  4969  00FFE2  69                 	db	105	;'i'
  4970  00FFE3  6E                 	db	110	;'n'
  4971  00FFE4  66                 	db	102	;'f'
  4972  00FFE5  00                 	db	0
  4973  00FFE6                     STR_101:
  4974                           
  4975                           ; BSR set to: 57
  4976  00FFE6  6E                 	db	110	;'n'
  4977  00FFE7  61                 	db	97	;'a'
  4978  00FFE8  6E                 	db	110	;'n'
  4979  00FFE9  00                 	db	0
  4980  00FFEA                     STR_127:
  4981                           
  4982                           ; BSR set to: 57
  4983  00FFEA  6C                 	db	108	;'l'
  4984  00FFEB  58                 	db	88	;'X'
  4985  00FFEC  00                 	db	0
  4986  00FFED                     STR_104:
  4987                           
  4988                           ; BSR set to: 57
  4989  00FFED  6C                 	db	108	;'l'
  4990  00FFEE  64                 	db	100	;'d'
  4991  00FFEF  00                 	db	0
  4992  00FFF0                     STR_113:
  4993                           
  4994                           ; BSR set to: 57
  4995  00FFF0  6C                 	db	108	;'l'
  4996  00FFF1  66                 	db	102	;'f'
  4997  00FFF2  00                 	db	0
  4998  00FFF3                     STR_108:
  4999                           
  5000                           ; BSR set to: 57
  5001  00FFF3  6C                 	db	108	;'l'
  5002  00FFF4  69                 	db	105	;'i'
  5003  00FFF5  00                 	db	0
  5004  00FFF6                     STR_118:
  5005                           
  5006                           ; BSR set to: 57
  5007  00FFF6  6C                 	db	108	;'l'
  5008  00FFF7  75                 	db	117	;'u'
  5009  00FFF8  00                 	db	0
  5010  00FFF9                     STR_123:
  5011                           
  5012                           ; BSR set to: 57
  5013  00FFF9  6C                 	db	108	;'l'
  5014  00FFFA  78                 	db	120	;'x'
  5015  00FFFB  00                 	db	0
  5016  00FFFC                     STR_74:
  5017                           
  5018                           ; BSR set to: 57
  5019  00FFFC  25                 	db	37
  5020  00FFFD  73                 	db	115	;'s'
  5021  00FFFE  00                 	db	0
  5022  0000                     
  5023                           ; #config settings
  5024  00FFFF  00                 	db	0	; dummy byte at the end
  5025  0000                     
  5026                           	psect	cinit
  5027  000474                     __pcinit:
  5028                           	opt callstack 0
  5029  000474                     start_initialization:
  5030                           	opt callstack 0
  5031  000474                     __initialization:
  5032                           	opt callstack 0
  5033                           
  5034                           ; Initialize objects allocated to BIGRAM (1474 bytes)
  5035                           ; load TBLPTR registers with __pidataBIGRAM
  5036  000474  0E06               	movlw	low __pidataBIGRAM
  5037  000476  6EF6               	movwf	tblptrl,c
  5038  000478  0E7D               	movlw	high __pidataBIGRAM
  5039  00047A  6EF7               	movwf	tblptrh,c
  5040  00047C  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  5041  00047E  6EF8               	movwf	tblptru,c
  5042  000480  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  5043  000484  EE21 F1C2          	lfsr	2,1474
  5044  000488                     copy_data0:
  5045  000488  0009               	tblrd		*+
  5046  00048A  006F FFD7 FFEE     	movff	tablat,postinc0
  5047  000490  50DD               	movf	postdec2,w,c
  5048  000492  50D9               	movf	fsr2l,w,c
  5049  000494  E1F9               	bnz	copy_data0
  5050  000496  50DA               	movf	fsr2h,w,c
  5051  000498  E1F7               	bnz	copy_data0
  5052                           
  5053                           ; Initialize objects allocated to BANK2 (188 bytes)
  5054                           ; load TBLPTR registers with __pidataBANK2
  5055  00049A  0E94               	movlw	low __pidataBANK2
  5056  00049C  6EF6               	movwf	tblptrl,c
  5057  00049E  0E08               	movlw	high __pidataBANK2
  5058  0004A0  6EF7               	movwf	tblptrh,c
  5059  0004A2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  5060  0004A4  6EF8               	movwf	tblptru,c
  5061  0004A6  EE00  F200         	lfsr	0,__pdataBANK2
  5062  0004AA  EE20 F0BC          	lfsr	2,188
  5063  0004AE                     copy_data1:
  5064  0004AE  0009               	tblrd		*+
  5065  0004B0  006F FFD7 FFEE     	movff	tablat,postinc0
  5066  0004B6  50DD               	movf	postdec2,w,c
  5067  0004B8  50D9               	movf	fsr2l,w,c
  5068  0004BA  E1F9               	bnz	copy_data1
  5069                           
  5070                           ; Initialize objects allocated to BANK1 (164 bytes)
  5071                           ; load TBLPTR registers with __pidataBANK1
  5072  0004BC  0E22               	movlw	low __pidataBANK1
  5073  0004BE  6EF6               	movwf	tblptrl,c
  5074  0004C0  0E0E               	movlw	high __pidataBANK1
  5075  0004C2  6EF7               	movwf	tblptrh,c
  5076  0004C4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5077  0004C6  6EF8               	movwf	tblptru,c
  5078  0004C8  EE00  F100         	lfsr	0,__pdataBANK1
  5079  0004CC  EE20 F0A4          	lfsr	2,164
  5080  0004D0                     copy_data2:
  5081  0004D0  0009               	tblrd		*+
  5082  0004D2  006F FFD7 FFEE     	movff	tablat,postinc0
  5083  0004D8  50DD               	movf	postdec2,w,c
  5084  0004DA  50D9               	movf	fsr2l,w,c
  5085  0004DC  E1F9               	bnz	copy_data2
  5086                           
  5087                           ; Clear objects allocated to BANK6 (255 bytes)
  5088  0004DE  EE01  F200         	lfsr	0,__pbssBANK6
  5089  0004E2  EE20 F0FF          	lfsr	2,255
  5090  0004E6                     clear_0:
  5091  0004E6  6AEE               	clrf	postinc0,c
  5092  0004E8  50DD               	movf	postdec2,w,c
  5093  0004EA  50D9               	movf	fsr2l,w,c
  5094  0004EC  E1FC               	bnz	clear_0
  5095  0004EE  50DA               	movf	fsr2h,w,c
  5096  0004F0  E1FA               	bnz	clear_0
  5097                           
  5098                           ; Clear objects allocated to BANK5 (134 bytes)
  5099  0004F2  EE01  F100         	lfsr	0,__pbssBANK5
  5100  0004F6  0E86               	movlw	134
  5101  0004F8                     clear_1:
  5102  0004F8  6AEE               	clrf	postinc0,c
  5103  0004FA  06E8               	decf	wreg,f,c
  5104  0004FC  E1FD               	bnz	clear_1
  5105                           
  5106                           ; Clear objects allocated to BANK4 (219 bytes)
  5107  0004FE  EE01  F000         	lfsr	0,__pbssBANK4
  5108  000502  0EDB               	movlw	219
  5109  000504                     clear_2:
  5110  000504  6AEE               	clrf	postinc0,c
  5111  000506  06E8               	decf	wreg,f,c
  5112  000508  E1FD               	bnz	clear_2
  5113                           
  5114                           ; Clear objects allocated to BANK3 (247 bytes)
  5115  00050A  EE00  F300         	lfsr	0,__pbssBANK3
  5116  00050E  0EF7               	movlw	247
  5117  000510                     clear_3:
  5118  000510  6AEE               	clrf	postinc0,c
  5119  000512  06E8               	decf	wreg,f,c
  5120  000514  E1FD               	bnz	clear_3
  5121                           
  5122                           ; Clear objects allocated to BANK2 (42 bytes)
  5123  000516  EE00  F2BC         	lfsr	0,__pbssBANK2
  5124  00051A  0E2A               	movlw	42
  5125  00051C                     clear_4:
  5126  00051C  6AEE               	clrf	postinc0,c
  5127  00051E  06E8               	decf	wreg,f,c
  5128  000520  E1FD               	bnz	clear_4
  5129                           
  5130                           ; Clear objects allocated to BANK1 (89 bytes)
  5131  000522  EE00  F1A4         	lfsr	0,__pbssBANK1
  5132  000526  0E59               	movlw	89
  5133  000528                     clear_5:
  5134  000528  6AEE               	clrf	postinc0,c
  5135  00052A  06E8               	decf	wreg,f,c
  5136  00052C  E1FD               	bnz	clear_5
  5137                           
  5138                           ; Clear objects allocated to BANK0 (133 bytes)
  5139  00052E  EE00  F060         	lfsr	0,__pbssBANK0
  5140  000532  0E85               	movlw	133
  5141  000534                     clear_6:
  5142  000534  6AEE               	clrf	postinc0,c
  5143  000536  06E8               	decf	wreg,f,c
  5144  000538  E1FD               	bnz	clear_6
  5145                           
  5146                           ; Clear objects allocated to COMRAM (14 bytes)
  5147  00053A  EE00  F04A         	lfsr	0,__pbssCOMRAM
  5148  00053E  0E0E               	movlw	14
  5149  000540                     clear_7:
  5150  000540  6AEE               	clrf	postinc0,c
  5151  000542  06E8               	decf	wreg,f,c
  5152  000544  E1FD               	bnz	clear_7
  5153                           
  5154                           ;
  5155                           ; Setup IVTBASE
  5156                           ;
  5157  000546  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  5158  000548  6ED5               	movwf	213,c
  5159  00054A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  5160  00054C  6ED6               	movwf	214,c
  5161  00054E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  5162  000550  6ED7               	movwf	215,c
  5163  000552                     end_of_initialization:
  5164                           	opt callstack 0
  5165  000552                     __end_of__initialization:
  5166                           	opt callstack 0
  5167  000552  0100               	movlb	0
  5168  000554  EF00  F080         	goto	_main	;jump to C main() function
  5169                           
  5170                           	psect	bssCOMRAM
  5171  00004A                     __pbssCOMRAM:
  5172                           	opt callstack 0
  5173  00004A                     _width:
  5174                           	opt callstack 0
  5175  00004A                     	ds	2
  5176  00004C                     _prec:
  5177                           	opt callstack 0
  5178  00004C                     	ds	2
  5179  00004E                     _flags:
  5180                           	opt callstack 0
  5181  00004E                     	ds	2
  5182  000050                     calc_bsoc@log_update_wait:
  5183                           	opt callstack 0
  5184  000050                     	ds	1
  5185  000051                     check_day_time@day_delay:
  5186                           	opt callstack 0
  5187  000051                     	ds	1
  5188  000052                     dac_spi_control@init:
  5189                           	opt callstack 0
  5190  000052                     	ds	1
  5191  000053                     display_history@bwait:
  5192                           	opt callstack 0
  5193  000053                     	ds	1
  5194  000054                     _uart2RxHead:
  5195                           	opt callstack 0
  5196  000054                     	ds	1
  5197  000055                     _uart2TxBufferRemaining:
  5198                           	opt callstack 0
  5199  000055                     	ds	1
  5200  000056                     _uart2TxTail:
  5201                           	opt callstack 0
  5202  000056                     	ds	1
  5203  000057                     _uart1RxHead:
  5204                           	opt callstack 0
  5205  000057                     	ds	1
  5206                           
  5207                           	psect	bssBANK0
  5208  000060                     __pbssBANK0:
  5209                           	opt callstack 0
  5210  000060                     _spi_link:
  5211                           	opt callstack 0
  5212  000060                     	ds	12
  5213  00006C                     ___tzname:
  5214                           	opt callstack 0
  5215  00006C                     	ds	4
  5216  000070                     ___timezone:
  5217                           	opt callstack 0
  5218  000070                     	ds	4
  5219  000074                     floorf@F524:
  5220                           	opt callstack 0
  5221  000074                     	ds	4
  5222  000078                     fabsf@F463:
  5223                           	opt callstack 0
  5224  000078                     	ds	4
  5225  00007C                     ___fpclassifyf@F463:
  5226                           	opt callstack 0
  5227  00007C                     	ds	4
  5228  000080                     calc_ror_data@bcror:
  5229                           	opt callstack 0
  5230  000080                     	ds	4
  5231  000084                     calc_ror_data@bvror:
  5232                           	opt callstack 0
  5233  000084                     	ds	4
  5234  000088                     calc_model_data@bcror:
  5235                           	opt callstack 0
  5236  000088                     	ds	4
  5237  00008C                     calc_model_data@bvror:
  5238                           	opt callstack 0
  5239  00008C                     	ds	4
  5240  000090                     wdtdelay@dcount:
  5241                           	opt callstack 0
  5242  000090                     	ds	4
  5243  000094                     _P:
  5244                           	opt callstack 0
  5245  000094                     	ds	4
  5246  000098                     _TMR3_InterruptHandler:
  5247                           	opt callstack 0
  5248  000098                     	ds	3
  5249  00009B                     _TMR5_InterruptHandler:
  5250                           	opt callstack 0
  5251  00009B                     	ds	3
  5252  00009E                     _TMR6_InterruptHandler:
  5253                           	opt callstack 0
  5254  00009E                     	ds	3
  5255  0000A1                     _ADCC_ADTI_InterruptHandler:
  5256                           	opt callstack 0
  5257  0000A1                     	ds	3
  5258  0000A4                     _ADCC_ADI_InterruptHandler:
  5259                           	opt callstack 0
  5260  0000A4                     	ds	3
  5261  0000A7                     _UART1_RxInterruptHandler:
  5262                           	opt callstack 0
  5263  0000A7                     	ds	3
  5264  0000AA                     _UART2_TxInterruptHandler:
  5265                           	opt callstack 0
  5266  0000AA                     	ds	3
  5267  0000AD                     _UART2_RxInterruptHandler:
  5268                           	opt callstack 0
  5269  0000AD                     	ds	3
  5270  0000B0                     _INT1_InterruptHandler:
  5271                           	opt callstack 0
  5272  0000B0                     	ds	3
  5273  0000B3                     _INT0_InterruptHandler:
  5274                           	opt callstack 0
  5275  0000B3                     	ds	3
  5276  0000B6                     _dst_off:
  5277                           	opt callstack 0
  5278  0000B6                     	ds	2
  5279  0000B8                     ___daylight:
  5280                           	opt callstack 0
  5281  0000B8                     	ds	2
  5282  0000BA                     _nout:
  5283                           	opt callstack 0
  5284  0000BA                     	ds	2
  5285  0000BC                     _t_mbmc:
  5286                           	opt callstack 0
  5287  0000BC                     	ds	2
  5288  0000BE                     TMR3_ISR@CountCallBack:
  5289                           	opt callstack 0
  5290  0000BE                     	ds	2
  5291  0000C0                     _timer3ReloadVal:
  5292                           	opt callstack 0
  5293  0000C0                     	ds	2
  5294  0000C2                     TMR5_ISR@CountCallBack:
  5295                           	opt callstack 0
  5296  0000C2                     	ds	2
  5297  0000C4                     _timer5ReloadVal:
  5298                           	opt callstack 0
  5299  0000C4                     	ds	2
  5300  0000C6                     esr_check@esr_state:
  5301                           	opt callstack 0
  5302  0000C6                     	ds	1
  5303  0000C7                     dac_spi_control@SB:
  5304                           	opt callstack 0
  5305  0000C7                     	ds	1
  5306  0000C8                     dac_spi_control@SC:
  5307                           	opt callstack 0
  5308  0000C8                     	ds	1
  5309  0000C9                     dac_spi_control@S2:
  5310                           	opt callstack 0
  5311  0000C9                     	ds	1
  5312  0000CA                     dac_spi_control@S1:
  5313                           	opt callstack 0
  5314  0000CA                     	ds	1
  5315  0000CB                     dac_spi_control@S0:
  5316                           	opt callstack 0
  5317  0000CB                     	ds	1
  5318  0000CC                     _mode_sw:
  5319                           	opt callstack 0
  5320  0000CC                     	ds	1
  5321  0000CD                     _uart2RxCount:
  5322                           	opt callstack 0
  5323  0000CD                     	ds	1
  5324  0000CE                     _uart2RxTail:
  5325                           	opt callstack 0
  5326  0000CE                     	ds	1
  5327  0000CF                     _uart2TxHead:
  5328                           	opt callstack 0
  5329  0000CF                     	ds	1
  5330  0000D0                     _uart1RxCount:
  5331                           	opt callstack 0
  5332  0000D0                     	ds	1
  5333  0000D1                     _uart1RxTail:
  5334                           	opt callstack 0
  5335  0000D1                     	ds	1
  5336  0000D2                     time@current_time:
  5337                           	opt callstack 0
  5338  0000D2                     	ds	8
  5339  0000DA                     _pclock:
  5340                           	opt callstack 0
  5341  0000DA                     	ds	8
  5342  0000E2                     _crcObj:
  5343                           	opt callstack 0
  5344  0000E2                     	ds	3
  5345                           
  5346                           	psect	bssBANK1
  5347  0001A4                     __pbssBANK1:
  5348                           	opt callstack 0
  5349  0001A4                     _S:
  5350                           	opt callstack 0
  5351  0001A4                     	ds	41
  5352  0001CD                     spinners@s:
  5353                           	opt callstack 0
  5354  0001CD                     	ds	6
  5355  0001D3                     _lock:
  5356                           	opt callstack 0
  5357  0001D3                     	ds	4
  5358  0001D7                     _utctime:
  5359                           	opt callstack 0
  5360  0001D7                     	ds	4
  5361  0001DB                     _r1:
  5362                           	opt callstack 0
  5363  0001DB                     	ds	10
  5364  0001E5                     _r0:
  5365                           	opt callstack 0
  5366  0001E5                     	ds	10
  5367  0001EF                     _dst_name:
  5368                           	opt callstack 0
  5369  0001EF                     	ds	7
  5370  0001F6                     _std_name:
  5371                           	opt callstack 0
  5372  0001F6                     	ds	7
  5373                           
  5374                           	psect	dataBANK1
  5375  000100                     __pdataBANK1:
  5376                           	opt callstack 0
  5377  000100                     _R:
  5378                           	opt callstack 0
  5379  000100                     	ds	155
  5380  00019B                     _H:
  5381                           	opt callstack 0
  5382  00019B                     	ds	9
  5383                           
  5384                           	psect	bssBANK2
  5385  0002BC                     __pbssBANK2:
  5386                           	opt callstack 0
  5387  0002BC                     _tickCount:
  5388                           	opt callstack 0
  5389  0002BC                     	ds	26
  5390  0002D6                     _uart1RxBuffer:
  5391                           	opt callstack 0
  5392  0002D6                     	ds	8
  5393  0002DE                     _seed:
  5394                           	opt callstack 0
  5395  0002DE                     	ds	8
  5396                           
  5397                           	psect	dataBANK2
  5398  000200                     __pdataBANK2:
  5399                           	opt callstack 0
  5400  000200                     stoa@F1166:
  5401                           	opt callstack 0
  5402  000200                     	ds	7
  5403  000207                     _V:
  5404                           	opt callstack 0
  5405  000207                     	ds	181
  5406                           
  5407                           	psect	bssBANK3
  5408  000300                     __pbssBANK3:
  5409                           	opt callstack 0
  5410  000300                     lp_filter@smooth:
  5411                           	opt callstack 0
  5412  000300                     	ds	84
  5413  000354                     _dbuf:
  5414                           	opt callstack 0
  5415  000354                     	ds	80
  5416  0003A4                     	ds	32
  5417  0003C4                     asctime@buf:
  5418                           	opt callstack 0
  5419  0003C4                     	ds	27
  5420  0003DF                     localtime@tm:
  5421                           	opt callstack 0
  5422  0003DF                     	ds	24
  5423                           
  5424                           	psect	bssBANK4
  5425  000400                     __pbssBANK4:
  5426                           	opt callstack 0
  5427  000400                     _uart2TxBuffer:
  5428                           	opt callstack 0
  5429  000400                     	ds	64
  5430  000440                     _r_cal:
  5431                           	opt callstack 0
  5432  000440                     	ds	155
  5433                           
  5434                           	psect	bssBANK5
  5435  000500                     __pbssBANK5:
  5436                           	opt callstack 0
  5437  000500                     _ring_buf2:
  5438                           	opt callstack 0
  5439  000500                     	ds	67
  5440  000543                     _ring_buf1:
  5441                           	opt callstack 0
  5442  000543                     	ds	67
  5443                           
  5444                           	psect	bssBANK6
  5445  000600                     __pbssBANK6:
  5446                           	opt callstack 0
  5447  000600                     _uart2RxBuffer:
  5448                           	opt callstack 0
  5449  000600                     	ds	255
  5450                           
  5451                           	psect	dataBIGRAM
  5452  0006FF                     __pdataBIGRAM:
  5453                           	opt callstack 0
  5454  0006FF                     _D:
  5455                           	opt callstack 0
  5456  0006FF                     	ds	642
  5457  000981                     _port_data:
  5458                           	opt callstack 0
  5459  000981                     	ds	512
  5460  000B81                     _C:
  5461                           	opt callstack 0
  5462  000B81                     	ds	320
  5463                           
  5464                           	psect	cstackBANK0
  5465  0000E5                     __pcstackBANK0:
  5466                           	opt callstack 0
  5467  0000E5                     ??_TMR3_ISR:
  5468                           
  5469                           ; 1 bytes @ 0x0
  5470  0000E5                     	ds	25
  5471                           
  5472                           	psect	cstackCOMRAM
  5473  000001                     __pcstackCOMRAM:
  5474                           	opt callstack 0
  5475  000001                     ??_ADCC_ThresholdISR:
  5476  000001                     
  5477                           ; 1 bytes @ 0x0
  5478  000001                     	ds	5
  5479  000006                     ??_TMR6_ISR:
  5480                           
  5481                           ; 1 bytes @ 0x5
  5482  000006                     	ds	1
  5483  000007                     ??_INT1_ISR:
  5484  000007                     
  5485                           ; 1 bytes @ 0x6
  5486  000007                     	ds	4
  5487  00000B                     ??_TMR5_ISR:
  5488                           
  5489                           ; 1 bytes @ 0xA
  5490  00000B                     	ds	31
  5491                           
  5492 ;;
  5493 ;;Main: autosize = 19, tempsize = 0, incstack = 0, save=0
  5494 ;;
  5495 ;; *************** function _main *****************
  5496 ;; Defined at:
  5497 ;;		line 200 in file "main.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;  i_esr           2  [STACK] unsigned short 
  5502 ;;  esr_temp        4  [STACK] float 
  5503 ;;  i_esr           2  [STACK] unsigned short 
  5504 ;;  shape           1  [STACK] unsigned char 
  5505 ;;  inp_index       1  [STACK] unsigned char 
  5506 ;;  k               1  [STACK] unsigned char 
  5507 ;;  j               1  [STACK] unsigned char 
  5508 ;;  i               1  [STACK] unsigned char 
  5509 ;;  mode            1  [STACK] enum E17179
  5510 ;;  i_ror           1  [STACK] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1  [STACK] void 
  5513 ;; Registers used:
  5514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5524 ;;Total ram usage:        0 bytes
  5525 ;; Hardware stack levels required when called:   28
  5526 ;; This function calls:
  5527 ;;		_SYSTEM_Initialize
  5528 ;;		_StartTimer
  5529 ;;		_TimerDone
  5530 ;;		_WaitMs
  5531 ;;		___fladd
  5532 ;;		___flge
  5533 ;;		___fltol
  5534 ;;		_asctime
  5535 ;;		_calc_model_data
  5536 ;;		_calc_ror_data
  5537 ;;		_check_adc_scan
  5538 ;;		_check_enter_button
  5539 ;;		_check_help
  5540 ;;		_clear_adc_scan
  5541 ;;		_clear_hid_pflags
  5542 ;;		_conv_raw_result
  5543 ;;		_convert_adc_data
  5544 ;;		_current_sensor_cal
  5545 ;;		_display_history
  5546 ;;		_eaDogM_WriteCommand
  5547 ;;		_esr_check
  5548 ;;		_fabsf
  5549 ;;		_get_raw_result
  5550 ;;		_get_switch
  5551 ;;		_get_vterm_ptr
  5552 ;;		_hid_display
  5553 ;;		_init_bsoc
  5554 ;;		_init_display
  5555 ;;		_init_port_dma
  5556 ;;		_load_hist_data
  5557 ;;		_localtime
  5558 ;;		_lp_filter
  5559 ;;		_mode_lamp_dim
  5560 ;;		_read_cal_data
  5561 ;;		_set_dac
  5562 ;;		_set_dac_a
  5563 ;;		_set_dac_b
  5564 ;;		_set_display_info
  5565 ;;		_set_hist_flag
  5566 ;;		_set_load_relay_one
  5567 ;;		_set_load_relay_two
  5568 ;;		_set_time
  5569 ;;		_set_vterm
  5570 ;;		_spinners
  5571 ;;		_sprintf
  5572 ;;		_srand
  5573 ;;		_start_adc_scan
  5574 ;;		_start_switch_handler
  5575 ;;		_static_soc
  5576 ;;		_time
  5577 ;;		_update_cal_data
  5578 ;;		_update_hist_data
  5579 ;;		_update_lcd
  5580 ;;		_wait_lcd_done
  5581 ;;		_write_cal_data
  5582 ;; This function is called by:
  5583 ;;		Startup code after reset
  5584 ;; This function uses a reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text0
  5588  010000                     __ptext0:
  5589                           	opt callstack 0
  5590  010000                     _main:
  5591                           	opt callstack 0
  5592                           
  5593                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5594  010000  0E13               	movlw	19
  5595  010002  26E1               	addwf	fsr1l,f,c
  5596  010004  0E00               	movlw	0
  5597  010006  22E2               	addwfc	fsr1h,f,c
  5598                           
  5599                           ;main.c: 202:  UI_STATES mode;;main.c: 203:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  5600                           ;stkvar	_inp_index @ sp[(-19)+13]
  5601                           
  5602                           ;incstack = 0
  5603  010008  0EFA               	movlw	-6
  5604  01000A  6AE3               	clrf	plusw1,c
  5605                           
  5606                           ;stkvar	_i @ sp[(-19)+16]
  5607  01000C  0EFD               	movlw	-3
  5608  01000E  6AE3               	clrf	plusw1,c
  5609                           
  5610                           ;stkvar	_j @ sp[(-19)+15]
  5611  010010  0EFC               	movlw	-4
  5612  010012  6AE3               	clrf	plusw1,c
  5613  010014  2AE3               	incf	plusw1,f,c
  5614                           
  5615                           ;stkvar	_k @ sp[(-19)+14]
  5616  010016  0EFB               	movlw	-5
  5617  010018  6AE3               	clrf	plusw1,c
  5618  01001A  82E3               	bsf	plusw1,1,c
  5619                           
  5620                           ;main.c: 206:  SYSTEM_Initialize();
  5621  01001C  EC56  F00F         	call	_SYSTEM_Initialize	;wreg free
  5622                           
  5623                           ; BSR set to: 60
  5624                           ;main.c: 209:  (INTCON0bits.GIEH = 1);
  5625  010020  8ED2               	bsf	210,7,c	;volatile
  5626                           
  5627                           ; BSR set to: 60
  5628                           ;main.c: 212:  (INTCON0bits.GIEL = 1);
  5629  010022  8CD2               	bsf	210,6,c	;volatile
  5630                           
  5631                           ; BSR set to: 60
  5632                           ;main.c: 214:  V.ui_state = UI_STATE_INIT;
  5633  010024  0102               	movlb	2	; () banked
  5634  010026  6B07               	clrf	_V& (0+255),b	;volatile
  5635                           
  5636                           ; BSR set to: 2
  5637                           ;main.c: 219:  WaitMs(300);
  5638  010028  0E2C               	movlw	44
  5639  01002A  6EE6               	movwf	postinc1,c
  5640  01002C  0E01               	movlw	1
  5641  01002E  6EE6               	movwf	postinc1,c
  5642  010030  EC12  F012         	call	_WaitMs	;wreg free
  5643                           
  5644                           ;main.c: 220:  if (PORTBbits.RB0) {
  5645  010034  A0CB               	btfss	203,0,c	;volatile
  5646  010036  D004               	goto	l17456
  5647                           
  5648                           ;main.c: 221:   mode = UI_STATE_HOST;
  5649                           ;stkvar	_mode @ sp[(-19)+17]
  5650  010038  0EFE               	movlw	-2
  5651  01003A  6AE3               	clrf	plusw1,c
  5652  01003C  2AE3               	incf	plusw1,f,c
  5653                           
  5654                           ;main.c: 222:  } else {
  5655  01003E  D004               	goto	l17458
  5656  010040                     l17456:
  5657                           
  5658                           ;main.c: 223:   mode = UI_STATE_LOG;
  5659                           ;stkvar	_mode @ sp[(-19)+17]
  5660  010040  0EFE               	movlw	-2
  5661  010042  6AE3               	clrf	plusw1,c
  5662  010044  80E3               	bsf	plusw1,0,c
  5663  010046  82E3               	bsf	plusw1,1,c	;indir
  5664  010048                     l17458:
  5665                           
  5666                           ;main.c: 226:  if (mode == UI_STATE_HOST) {
  5667                           ;stkvar	_mode @ sp[(-19)+17]
  5668  010048  0EFE               	movlw	-2
  5669  01004A  04E3               	decf	plusw1,w,c
  5670  01004C  A4D8               	btfss	status,2,c
  5671  01004E  D007               	goto	l1455
  5672                           
  5673                           ;main.c: 227:   do { LATDbits.LATD0 = 1; } while(0);
  5674  010050  80BD               	bsf	189,0,c	;volatile
  5675                           
  5676                           ;main.c: 228:   V.mode_pwm = 70;
  5677  010052  0E00               	movlw	0
  5678  010054  0102               	movlb	2	; () banked
  5679  010056  6F9A               	movwf	(_V+147)& (0+255),b	;volatile
  5680  010058  0E46               	movlw	70
  5681  01005A  6F99               	movwf	(_V+146)& (0+255),b	;volatile
  5682                           
  5683                           ;main.c: 229:  } else {
  5684  01005C  D004               	goto	l17462
  5685  01005E                     l1455:
  5686  01005E  90BD               	bcf	189,0,c	;volatile
  5687                           
  5688                           ;main.c: 231:   V.mode_pwm = 0;
  5689  010060  0102               	movlb	2	; () banked
  5690  010062  6B99               	clrf	(_V+146)& (0+255),b	;volatile
  5691  010064  6B9A               	clrf	(_V+147)& (0+255),b	;volatile
  5692  010066                     l17462:
  5693                           
  5694                           ; BSR set to: 2
  5695                           ;main.c: 233:  mode_lamp_dim(V.mode_pwm);
  5696  010066  0060  FA67  FFE6   	movff	_V+146,postinc1
  5697  01006C  0060  FA6B  FFE6   	movff	_V+147,postinc1
  5698  010072  ECBF  F015         	call	_mode_lamp_dim	;wreg free
  5699  010076  EFB6  F084         	goto	l17628
  5700  01007A                     l17464:
  5701                           
  5702                           ; BSR set to: 2
  5703                           ;main.c: 241:    init_port_dma();
  5704  01007A  ECAE  F012         	call	_init_port_dma	;wreg free
  5705                           
  5706                           ; BSR set to: 59
  5707                           ;main.c: 243:    init_display();
  5708  01007E  ECC5  F001         	call	_init_display	;wreg free
  5709                           
  5710                           ; BSR set to: 61
  5711                           ;main.c: 244:    eaDogM_WriteCommand(0b00001100);
  5712  010082  0E0C               	movlw	12
  5713  010084  6EE6               	movwf	postinc1,c
  5714  010086  EC47  F016         	call	_eaDogM_WriteCommand	;wreg free
  5715                           
  5716                           ; BSR set to: 61
  5717                           ;main.c: 245:    set_dac();
  5718  01008A  EC61  F005         	call	_set_dac	;wreg free
  5719                           
  5720                           ;main.c: 249:    set_load_relay_one(1);
  5721  01008E  0E01               	movlw	1
  5722  010090  6EE6               	movwf	postinc1,c
  5723  010092  EC27  F016         	call	_set_load_relay_one	;wreg free
  5724                           
  5725                           ;main.c: 250:    set_load_relay_two(1);
  5726  010096  0E01               	movlw	1
  5727  010098  6EE6               	movwf	postinc1,c
  5728  01009A  EC1F  F016         	call	_set_load_relay_two	;wreg free
  5729                           
  5730                           ;main.c: 252:    V.ui_state = mode;
  5731                           ;stkvar	_mode @ sp[(-19)+17]
  5732  01009E  0EFE               	movlw	-2
  5733  0100A0  006F FF8C  F207    	movff	plusw1,_V	;volatile
  5734                           
  5735                           ;main.c: 253:    srand(1957);
  5736  0100A6  0EA5               	movlw	165
  5737  0100A8  6EE6               	movwf	postinc1,c
  5738  0100AA  0E07               	movlw	7
  5739  0100AC  6EE6               	movwf	postinc1,c
  5740  0100AE  EC2D  F012         	call	_srand	;wreg free
  5741                           
  5742                           ; BSR set to: 2
  5743                           ;main.c: 254:    set_vterm(0);
  5744  0100B2  0E00               	movlw	0
  5745  0100B4  6EE6               	movwf	postinc1,c
  5746  0100B6  EC87  F015         	call	_set_vterm	;wreg free
  5747                           
  5748                           ;main.c: 255:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5749  0100BA  0E1D               	movlw	low STR_1
  5750  0100BC  6EE6               	movwf	postinc1,c
  5751  0100BE  0EFF               	movlw	high STR_1
  5752  0100C0  6EE6               	movwf	postinc1,c
  5753  0100C2  0E00               	movlw	0
  5754  0100C4  6EE6               	movwf	postinc1,c
  5755  0100C6  0E00               	movlw	0
  5756  0100C8  6EE6               	movwf	postinc1,c
  5757  0100CA  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5758  0100CE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5759  0100D4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5760  0100DA  0E04               	movlw	4
  5761  0100DC  6EE6               	movwf	postinc1,c
  5762  0100DE  ECE5  F0FE         	call	_sprintf	;wreg free
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;main.c: 256:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.27");
  5766  0100E2  0ED5               	movlw	low STR_3
  5767  0100E4  6EE6               	movwf	postinc1,c
  5768  0100E6  0EFF               	movlw	high STR_3
  5769  0100E8  6EE6               	movwf	postinc1,c
  5770  0100EA  0E08               	movlw	low STR_2
  5771  0100EC  6EE6               	movwf	postinc1,c
  5772  0100EE  0EFF               	movlw	high STR_2
  5773  0100F0  6EE6               	movwf	postinc1,c
  5774  0100F2  0E00               	movlw	0
  5775  0100F4  6EE6               	movwf	postinc1,c
  5776  0100F6  0E01               	movlw	1
  5777  0100F8  6EE6               	movwf	postinc1,c
  5778  0100FA  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5779  0100FE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5780  010104  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5781  01010A  0E06               	movlw	6
  5782  01010C  6EE6               	movwf	postinc1,c
  5783  01010E  ECE5  F0FE         	call	_sprintf	;wreg free
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;main.c: 257:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5787  010112  0EF3               	movlw	low STR_4
  5788  010114  6EE6               	movwf	postinc1,c
  5789  010116  0EFE               	movlw	high STR_4
  5790  010118  6EE6               	movwf	postinc1,c
  5791  01011A  0E00               	movlw	0
  5792  01011C  6EE6               	movwf	postinc1,c
  5793  01011E  0E02               	movlw	2
  5794  010120  6EE6               	movwf	postinc1,c
  5795  010122  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5796  010126  0060  F0AB  FFE6   	movff	btemp,postinc1
  5797  01012C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5798  010132  0E04               	movlw	4
  5799  010134  6EE6               	movwf	postinc1,c
  5800  010136  ECE5  F0FE         	call	_sprintf	;wreg free
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;main.c: 258:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5804  01013A  0EB9               	movlw	low (STR_20+2)
  5805  01013C  6EE6               	movwf	postinc1,c
  5806  01013E  0EFB               	movlw	high (STR_20+2)
  5807  010140  6EE6               	movwf	postinc1,c
  5808  010142  0E00               	movlw	0
  5809  010144  6EE6               	movwf	postinc1,c
  5810  010146  0E03               	movlw	3
  5811  010148  6EE6               	movwf	postinc1,c
  5812  01014A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5813  01014E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5814  010154  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5815  01015A  0E04               	movlw	4
  5816  01015C  6EE6               	movwf	postinc1,c
  5817  01015E  ECE5  F0FE         	call	_sprintf	;wreg free
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 1), "                    ");
  5821  010162  0EB9               	movlw	low (STR_20+2)
  5822  010164  6EE6               	movwf	postinc1,c
  5823  010166  0EFB               	movlw	high (STR_20+2)
  5824  010168  6EE6               	movwf	postinc1,c
  5825  01016A  0E01               	movlw	1
  5826  01016C  6EE6               	movwf	postinc1,c
  5827  01016E  0E00               	movlw	0
  5828  010170  6EE6               	movwf	postinc1,c
  5829  010172  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5830  010176  0060  F0AB  FFE6   	movff	btemp,postinc1
  5831  01017C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5832  010182  0E04               	movlw	4
  5833  010184  6EE6               	movwf	postinc1,c
  5834  010186  ECE5  F0FE         	call	_sprintf	;wreg free
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 1), "                    ");
  5838  01018A  0EB9               	movlw	low (STR_20+2)
  5839  01018C  6EE6               	movwf	postinc1,c
  5840  01018E  0EFB               	movlw	high (STR_20+2)
  5841  010190  6EE6               	movwf	postinc1,c
  5842  010192  0E01               	movlw	1
  5843  010194  6EE6               	movwf	postinc1,c
  5844  010196  0E01               	movlw	1
  5845  010198  6EE6               	movwf	postinc1,c
  5846  01019A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5847  01019E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5848  0101A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5849  0101AA  0E04               	movlw	4
  5850  0101AC  6EE6               	movwf	postinc1,c
  5851  0101AE  ECE5  F0FE         	call	_sprintf	;wreg free
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;main.c: 261:    sprintf(get_vterm_ptr(2, 1), "                    ");
  5855  0101B2  0EB9               	movlw	low (STR_20+2)
  5856  0101B4  6EE6               	movwf	postinc1,c
  5857  0101B6  0EFB               	movlw	high (STR_20+2)
  5858  0101B8  6EE6               	movwf	postinc1,c
  5859  0101BA  0E01               	movlw	1
  5860  0101BC  6EE6               	movwf	postinc1,c
  5861  0101BE  0E02               	movlw	2
  5862  0101C0  6EE6               	movwf	postinc1,c
  5863  0101C2  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5864  0101C6  0060  F0AB  FFE6   	movff	btemp,postinc1
  5865  0101CC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5866  0101D2  0E04               	movlw	4
  5867  0101D4  6EE6               	movwf	postinc1,c
  5868  0101D6  ECE5  F0FE         	call	_sprintf	;wreg free
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;main.c: 262:    sprintf(get_vterm_ptr(3, 1), "                    ");
  5872  0101DA  0EB9               	movlw	low (STR_20+2)
  5873  0101DC  6EE6               	movwf	postinc1,c
  5874  0101DE  0EFB               	movlw	high (STR_20+2)
  5875  0101E0  6EE6               	movwf	postinc1,c
  5876  0101E2  0E01               	movlw	1
  5877  0101E4  6EE6               	movwf	postinc1,c
  5878  0101E6  0E03               	movlw	3
  5879  0101E8  6EE6               	movwf	postinc1,c
  5880  0101EA  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5881  0101EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  5882  0101F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5883  0101FA  0E04               	movlw	4
  5884  0101FC  6EE6               	movwf	postinc1,c
  5885  0101FE  ECE5  F0FE         	call	_sprintf	;wreg free
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;main.c: 263:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5889  010202  0EB9               	movlw	low (STR_20+2)
  5890  010204  6EE6               	movwf	postinc1,c
  5891  010206  0EFB               	movlw	high (STR_20+2)
  5892  010208  6EE6               	movwf	postinc1,c
  5893  01020A  0E02               	movlw	2
  5894  01020C  6EE6               	movwf	postinc1,c
  5895  01020E  0E00               	movlw	0
  5896  010210  6EE6               	movwf	postinc1,c
  5897  010212  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5898  010216  0060  F0AB  FFE6   	movff	btemp,postinc1
  5899  01021C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5900  010222  0E04               	movlw	4
  5901  010224  6EE6               	movwf	postinc1,c
  5902  010226  ECE5  F0FE         	call	_sprintf	;wreg free
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;main.c: 264:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5906  01022A  0EB9               	movlw	low (STR_20+2)
  5907  01022C  6EE6               	movwf	postinc1,c
  5908  01022E  0EFB               	movlw	high (STR_20+2)
  5909  010230  6EE6               	movwf	postinc1,c
  5910  010232  0E02               	movlw	2
  5911  010234  6EE6               	movwf	postinc1,c
  5912  010236  0E01               	movlw	1
  5913  010238  6EE6               	movwf	postinc1,c
  5914  01023A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5915  01023E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5916  010244  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5917  01024A  0E04               	movlw	4
  5918  01024C  6EE6               	movwf	postinc1,c
  5919  01024E  ECE5  F0FE         	call	_sprintf	;wreg free
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;main.c: 265:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5923  010252  0EB9               	movlw	low (STR_20+2)
  5924  010254  6EE6               	movwf	postinc1,c
  5925  010256  0EFB               	movlw	high (STR_20+2)
  5926  010258  6EE6               	movwf	postinc1,c
  5927  01025A  0E02               	movlw	2
  5928  01025C  6EE6               	movwf	postinc1,c
  5929  01025E  0E02               	movlw	2
  5930  010260  6EE6               	movwf	postinc1,c
  5931  010262  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5932  010266  0060  F0AB  FFE6   	movff	btemp,postinc1
  5933  01026C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5934  010272  0E04               	movlw	4
  5935  010274  6EE6               	movwf	postinc1,c
  5936  010276  ECE5  F0FE         	call	_sprintf	;wreg free
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;main.c: 266:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5940  01027A  0EB9               	movlw	low (STR_20+2)
  5941  01027C  6EE6               	movwf	postinc1,c
  5942  01027E  0EFB               	movlw	high (STR_20+2)
  5943  010280  6EE6               	movwf	postinc1,c
  5944  010282  0E02               	movlw	2
  5945  010284  6EE6               	movwf	postinc1,c
  5946  010286  0E03               	movlw	3
  5947  010288  6EE6               	movwf	postinc1,c
  5948  01028A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  5949  01028E  0060  F0AB  FFE6   	movff	btemp,postinc1
  5950  010294  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  5951  01029A  0E04               	movlw	4
  5952  01029C  6EE6               	movwf	postinc1,c
  5953  01029E  ECE5  F0FE         	call	_sprintf	;wreg free
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;main.c: 267:    update_lcd(0);
  5957  0102A2  0E00               	movlw	0
  5958  0102A4  6EE6               	movwf	postinc1,c
  5959  0102A6  EC97  F0F7         	call	_update_lcd	;wreg free
  5960                           
  5961                           ;main.c: 268:    WaitMs(1000);
  5962  0102AA  0EE8               	movlw	232
  5963  0102AC  6EE6               	movwf	postinc1,c
  5964  0102AE  0E03               	movlw	3
  5965  0102B0  6EE6               	movwf	postinc1,c
  5966  0102B2  EC12  F012         	call	_WaitMs	;wreg free
  5967                           
  5968                           ;main.c: 269:    StartTimer(TMR_DISPLAY, 250);
  5969  0102B6  0EFA               	movlw	250
  5970  0102B8  6EE6               	movwf	postinc1,c
  5971  0102BA  0E00               	movlw	0
  5972  0102BC  6EE6               	movwf	postinc1,c
  5973  0102BE  0E0A               	movlw	10
  5974  0102C0  6EE6               	movwf	postinc1,c
  5975  0102C2  EC20  F011         	call	_StartTimer	;wreg free
  5976                           
  5977                           ;main.c: 270:    StartTimer(TMR_ADC, 200);
  5978  0102C6  0EC8               	movlw	200
  5979  0102C8  6EE6               	movwf	postinc1,c
  5980  0102CA  0E00               	movlw	0
  5981  0102CC  6EE6               	movwf	postinc1,c
  5982  0102CE  0E01               	movlw	1
  5983  0102D0  6EE6               	movwf	postinc1,c
  5984  0102D2  EC20  F011         	call	_StartTimer	;wreg free
  5985                           
  5986                           ;main.c: 271:    StartTimer(TMR_INFO, 3000);
  5987  0102D6  0EB8               	movlw	184
  5988  0102D8  6EE6               	movwf	postinc1,c
  5989  0102DA  0E0B               	movlw	11
  5990  0102DC  6EE6               	movwf	postinc1,c
  5991  0102DE  0E07               	movlw	7
  5992  0102E0  6EE6               	movwf	postinc1,c
  5993  0102E2  EC20  F011         	call	_StartTimer	;wreg free
  5994                           
  5995                           ;main.c: 272:    StartTimer(TMR_FLIPPER, 1500);
  5996  0102E6  0EDC               	movlw	220
  5997  0102E8  6EE6               	movwf	postinc1,c
  5998  0102EA  0E05               	movlw	5
  5999  0102EC  6EE6               	movwf	postinc1,c
  6000  0102EE  0E0B               	movlw	11
  6001  0102F0  6EE6               	movwf	postinc1,c
  6002  0102F2  EC20  F011         	call	_StartTimer	;wreg free
  6003                           
  6004                           ;main.c: 273:    StartTimer(TMR_HELPDIS, 3000);
  6005  0102F6  0EB8               	movlw	184
  6006  0102F8  6EE6               	movwf	postinc1,c
  6007  0102FA  0E0B               	movlw	11
  6008  0102FC  6EE6               	movwf	postinc1,c
  6009  0102FE  0E09               	movlw	9
  6010  010300  6EE6               	movwf	postinc1,c
  6011  010302  EC20  F011         	call	_StartTimer	;wreg free
  6012                           
  6013                           ;main.c: 275:    start_adc_scan();
  6014  010306  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6015                           
  6016                           ;main.c: 276:    start_switch_handler();
  6017  01030A  EC49  F015         	call	_start_switch_handler	;wreg free
  6018                           
  6019                           ; BSR set to: 57
  6020                           ;main.c: 277:    WaitMs(1000);
  6021  01030E  0EE8               	movlw	232
  6022  010310  6EE6               	movwf	postinc1,c
  6023  010312  0E03               	movlw	3
  6024  010314  6EE6               	movwf	postinc1,c
  6025  010316  EC12  F012         	call	_WaitMs	;wreg free
  6026                           
  6027                           ;main.c: 282:    if (read_cal_data()) {
  6028  01031A  EC9D  F0ED         	call	_read_cal_data	;wreg free
  6029  01031E  502A               	movf	btemp^0,w,c
  6030  010320  B4D8               	btfsc	status,2,c
  6031  010322  D07C               	goto	l17538
  6032                           
  6033                           ;main.c: 283:     update_cal_data();
  6034  010324  ECD9  F00E         	call	_update_cal_data	;wreg free
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;main.c: 284:     if (update_hist_data(1, &C.hist[0]) && (C.hist[0].pclock > time(((void
      +                          *)0))))
  6038  010328  0E3A               	movlw	low (_C+185)
  6039  01032A  6EE6               	movwf	postinc1,c
  6040  01032C  0E0C               	movlw	high (_C+185)
  6041  01032E  6EE6               	movwf	postinc1,c
  6042  010330  0E01               	movlw	1
  6043  010332  6EE6               	movwf	postinc1,c
  6044  010334  EC03  F00B         	call	_update_hist_data	;wreg free
  6045  010338  502A               	movf	btemp^0,w,c
  6046  01033A  B4D8               	btfsc	status,2,c
  6047  01033C  D05A               	goto	l17536
  6048  01033E  0E00               	movlw	0
  6049  010340  6EE6               	movwf	postinc1,c
  6050  010342  0E00               	movlw	0
  6051  010344  6EE6               	movwf	postinc1,c
  6052  010346  EC23  F00E         	call	_time	;wreg free
  6053  01034A  52E5               	movf	postdec1,f,c
  6054  01034C  006F FF9C  F041    	movff	indf1,btemp+23
  6055  010352  52E5               	movf	postdec1,f,c
  6056  010354  006F FF9C  F040    	movff	indf1,btemp+22
  6057  01035A  52E5               	movf	postdec1,f,c
  6058  01035C  006F FF9C  F03F    	movff	indf1,btemp+21
  6059  010362  52E5               	movf	postdec1,f,c
  6060  010364  006F FF9C  F03E    	movff	indf1,btemp+20
  6061  01036A  52E5               	movf	postdec1,f,c
  6062  01036C  006F FF9C  F03D    	movff	indf1,btemp+19
  6063  010372  52E5               	movf	postdec1,f,c
  6064  010374  006F FF9C  F03C    	movff	indf1,btemp+18
  6065  01037A  52E5               	movf	postdec1,f,c
  6066  01037C  006F FF9C  F03B    	movff	indf1,btemp+17
  6067  010382  52E5               	movf	postdec1,f,c
  6068  010384  006F FF9C  F03A    	movff	indf1,btemp+16
  6069  01038A  EE23  F04A         	lfsr	2,_C+201	;volatile
  6070  01038E  50DE               	movf	postinc2,w,c
  6071  010390  5C3A               	subwf	(btemp+16)^0,w,c
  6072  010392  50DE               	movf	postinc2,w,c
  6073  010394  583B               	subwfb	(btemp+17)^0,w,c
  6074  010396  50DE               	movf	postinc2,w,c
  6075  010398  583C               	subwfb	(btemp+18)^0,w,c
  6076  01039A  50DE               	movf	postinc2,w,c
  6077  01039C  583D               	subwfb	(btemp+19)^0,w,c
  6078  01039E  50DE               	movf	postinc2,w,c
  6079  0103A0  583E               	subwfb	(btemp+20)^0,w,c
  6080  0103A2  50DE               	movf	postinc2,w,c
  6081  0103A4  583F               	subwfb	(btemp+21)^0,w,c
  6082  0103A6  50DE               	movf	postinc2,w,c
  6083  0103A8  5840               	subwfb	(btemp+22)^0,w,c
  6084  0103AA  5041               	movf	(btemp+23)^0,w,c
  6085  0103AC  0A80               	xorlw	128
  6086  0103AE  6E2A               	movwf	btemp^0,c
  6087  0103B0  50DE               	movf	postinc2,w,c
  6088  0103B2  0A80               	xorlw	128
  6089  0103B4  582A               	subwfb	btemp^0,w,c
  6090  0103B6  B0D8               	btfsc	status,0,c
  6091  0103B8  D01C               	goto	l17536
  6092                           
  6093                           ; BSR set to: 57
  6094                           ;main.c: 285:      set_time(C.hist[0].pclock);
  6095  0103BA  EE23  F04A         	lfsr	2,_C+201	;volatile
  6096  0103BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6097  0103C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6098  0103CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6099  0103D0  006F FF7B FFE6     	movff	postinc2,postinc1
  6100  0103D6  006F FF7B FFE6     	movff	postinc2,postinc1
  6101  0103DC  006F FF7B FFE6     	movff	postinc2,postinc1
  6102  0103E2  006F FF7B FFE6     	movff	postinc2,postinc1
  6103  0103E8  006F FF7B FFE6     	movff	postinc2,postinc1
  6104  0103EE  ECE5  F0FF         	call	_set_time	;wreg free
  6105  0103F2                     l17536:
  6106                           
  6107                           ;main.c: 287:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  6108  0103F2  0E32               	movlw	low STR_14
  6109  0103F4  6EE6               	movwf	postinc1,c
  6110  0103F6  0EFF               	movlw	high STR_14
  6111  0103F8  6EE6               	movwf	postinc1,c
  6112  0103FA  0E00               	movlw	0
  6113  0103FC  6EE6               	movwf	postinc1,c
  6114  0103FE  0E02               	movlw	2
  6115  010400  6EE6               	movwf	postinc1,c
  6116  010402  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6117  010406  0060  F0AB  FFE6   	movff	btemp,postinc1
  6118  01040C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6119  010412  0E04               	movlw	4
  6120  010414  6EE6               	movwf	postinc1,c
  6121  010416  ECE5  F0FE         	call	_sprintf	;wreg free
  6122                           
  6123                           ;main.c: 288:    } else {
  6124  01041A  D014               	goto	l1462
  6125  01041C                     l17538:
  6126                           
  6127                           ;main.c: 289:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  6128  01041C  0E5C               	movlw	low STR_15
  6129  01041E  6EE6               	movwf	postinc1,c
  6130  010420  0EFF               	movlw	high STR_15
  6131  010422  6EE6               	movwf	postinc1,c
  6132  010424  0E00               	movlw	0
  6133  010426  6EE6               	movwf	postinc1,c
  6134  010428  0E02               	movlw	2
  6135  01042A  6EE6               	movwf	postinc1,c
  6136  01042C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6137  010430  0060  F0AB  FFE6   	movff	btemp,postinc1
  6138  010436  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6139  01043C  0E04               	movlw	4
  6140  01043E  6EE6               	movwf	postinc1,c
  6141  010440  ECE5  F0FE         	call	_sprintf	;wreg free
  6142  010444                     l1462:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;main.c: 291:    update_lcd(0);
  6146  010444  0E00               	movlw	0
  6147  010446  6EE6               	movwf	postinc1,c
  6148  010448  EC97  F0F7         	call	_update_lcd	;wreg free
  6149                           
  6150                           ;main.c: 292:    WaitMs(2000);
  6151  01044C  0ED0               	movlw	208
  6152  01044E  6EE6               	movwf	postinc1,c
  6153  010450  0E07               	movlw	7
  6154  010452  6EE6               	movwf	postinc1,c
  6155  010454  EC12  F012         	call	_WaitMs	;wreg free
  6156                           
  6157                           ;main.c: 294:    i_ror = 1;
  6158                           ;stkvar	_i_ror @ sp[(-19)+18]
  6159  010458  0EFF               	movlw	-1
  6160  01045A  6AE3               	clrf	plusw1,c
  6161  01045C  2AE3               	incf	plusw1,f,c
  6162  01045E                     l17544:
  6163                           
  6164                           ;main.c: 296:     calc_ror_data();
  6165  01045E  EC8D  F0F2         	call	_calc_ror_data	;wreg free
  6166                           
  6167                           ;main.c: 297:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f             ", conv_raw_result(
      +                          V_BAT, CONV));
  6168  010462  0E00               	movlw	0
  6169  010464  6EE6               	movwf	postinc1,c
  6170  010466  0E04               	movlw	4
  6171  010468  6EE6               	movwf	postinc1,c
  6172  01046A  ECAC  F0C6         	call	_conv_raw_result	;wreg free
  6173  01046E  0060  F0AB  FFE6   	movff	btemp,postinc1
  6174  010474  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6175  01047A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6176  010480  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6177  010486  0E69               	movlw	low STR_16
  6178  010488  6EE6               	movwf	postinc1,c
  6179  01048A  0EFD               	movlw	high STR_16
  6180  01048C  6EE6               	movwf	postinc1,c
  6181  01048E  0E00               	movlw	0
  6182  010490  6EE6               	movwf	postinc1,c
  6183  010492  0E01               	movlw	1
  6184  010494  6EE6               	movwf	postinc1,c
  6185  010496  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6186  01049A  0060  F0AB  FFE6   	movff	btemp,postinc1
  6187  0104A0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6188  0104A6  0E08               	movlw	8
  6189  0104A8  6EE6               	movwf	postinc1,c
  6190  0104AA  ECE5  F0FE         	call	_sprintf	;wreg free
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;main.c: 298:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  6194  0104AE  EE22  F3ED         	lfsr	2,_C+108	;volatile
  6195  0104B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6196  0104B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6197  0104BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6198  0104C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6199                           
  6200                           ;stkvar	_i_ror @ sp[(-23)+18]
  6201  0104CA  0EFB               	movlw	-5
  6202  0104CC  50E3               	movf	plusw1,w,c
  6203  0104CE  6EE6               	movwf	postinc1,c
  6204  0104D0  0E00               	movlw	0
  6205  0104D2  6EE6               	movwf	postinc1,c
  6206  0104D4  0E00               	movlw	0
  6207  0104D6  6EE6               	movwf	postinc1,c
  6208  0104D8  0E05               	movlw	5
  6209  0104DA  6EE6               	movwf	postinc1,c
  6210  0104DC  EC5B  F000         	call	_spinners	;wreg free
  6211  0104E0  502A               	movf	btemp^0,w,c
  6212  0104E2  6EE6               	movwf	postinc1,c
  6213  0104E4  0E00               	movlw	0
  6214  0104E6  6EE6               	movwf	postinc1,c
  6215  0104E8  0E25               	movlw	low STR_17
  6216  0104EA  6EE6               	movwf	postinc1,c
  6217  0104EC  0EFB               	movlw	high STR_17
  6218  0104EE  6EE6               	movwf	postinc1,c
  6219  0104F0  0E00               	movlw	0
  6220  0104F2  6EE6               	movwf	postinc1,c
  6221  0104F4  0E02               	movlw	2
  6222  0104F6  6EE6               	movwf	postinc1,c
  6223  0104F8  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6224  0104FC  0060  F0AB  FFE6   	movff	btemp,postinc1
  6225  010502  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6226  010508  0E0C               	movlw	12
  6227  01050A  6EE6               	movwf	postinc1,c
  6228  01050C  ECE5  F0FE         	call	_sprintf	;wreg free
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;main.c: 299:     update_lcd(0);
  6232  010510  0E00               	movlw	0
  6233  010512  6EE6               	movwf	postinc1,c
  6234  010514  EC97  F0F7         	call	_update_lcd	;wreg free
  6235                           
  6236                           ;main.c: 300:     clear_adc_scan();
  6237  010518  ECA9  F016         	call	_clear_adc_scan	;wreg free
  6238                           
  6239                           ; BSR set to: 1
  6240                           ;main.c: 301:     start_adc_scan();
  6241  01051C  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6242                           
  6243                           ;main.c: 302:     WaitMs(2000);
  6244  010520  0ED0               	movlw	208
  6245  010522  6EE6               	movwf	postinc1,c
  6246  010524  0E07               	movlw	7
  6247  010526  6EE6               	movwf	postinc1,c
  6248  010528  EC12  F012         	call	_WaitMs	;wreg free
  6249                           
  6250                           ;main.c: 305:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  6251                           ;stkvar	_i_ror @ sp[(-19)+18]
  6252  01052C  0EFF               	movlw	-1
  6253  01052E  006F FF8C  F035    	movff	plusw1,btemp+11
  6254  010534  2A35               	incf	(btemp+11)^0,f,c
  6255  010536  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6256  01053C  0635               	decf	(btemp+11)^0,f,c
  6257  01053E  0E1E               	movlw	30
  6258  010540  6035               	cpfslt	(btemp+11)^0,c
  6259  010542  D01A               	goto	u17110
  6260  010544  EE22  F3ED         	lfsr	2,_C+108	;volatile
  6261  010548  006F FF7B FFE6     	movff	postinc2,postinc1
  6262  01054E  006F FF7B FFE6     	movff	postinc2,postinc1
  6263  010554  006F FF7B FFE6     	movff	postinc2,postinc1
  6264  01055A  006F FF7B FFE6     	movff	postinc2,postinc1
  6265  010560  0E42               	movlw	66
  6266  010562  6EE6               	movwf	postinc1,c
  6267  010564  0E60               	movlw	96
  6268  010566  6EE6               	movwf	postinc1,c
  6269  010568  0E65               	movlw	101
  6270  01056A  6EE6               	movwf	postinc1,c
  6271  01056C  0E3C               	movlw	60
  6272  01056E  6EE6               	movwf	postinc1,c
  6273  010570  EC35  F0F6         	call	___flge	;wreg free
  6274  010574  A02A               	btfss	btemp& (0+255),0,c
  6275  010576  D773               	goto	l17544
  6276  010578                     u17110:
  6277                           
  6278                           ;main.c: 307:    static_soc();
  6279  010578  EC52  F00E         	call	_static_soc	;wreg free
  6280                           
  6281                           ;main.c: 308:    init_bsoc();
  6282  01057C  ECF7  F0E4         	call	_init_bsoc	;wreg free
  6283                           
  6284                           ;main.c: 309:    set_load_relay_one(0);
  6285  010580  0E00               	movlw	0
  6286  010582  6EE6               	movwf	postinc1,c
  6287  010584  EC27  F016         	call	_set_load_relay_one	;wreg free
  6288                           
  6289                           ;main.c: 310:    set_load_relay_two(0);
  6290  010588  0E00               	movlw	0
  6291  01058A  6EE6               	movwf	postinc1,c
  6292  01058C  EC1F  F016         	call	_set_load_relay_two	;wreg free
  6293                           
  6294                           ;main.c: 311:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d         ", C.soc);
  6295  010590  EE23  F037         	lfsr	2,_C+182	;volatile
  6296  010594  006F FF78  F034    	movff	postinc2,btemp+10
  6297  01059A  006F FF74  F035    	movff	postdec2,btemp+11
  6298  0105A0  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  6299  0105A6  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  6300  0105AC  0EE5               	movlw	low STR_18
  6301  0105AE  6EE6               	movwf	postinc1,c
  6302  0105B0  0EFB               	movlw	high STR_18
  6303  0105B2  6EE6               	movwf	postinc1,c
  6304  0105B4  0E00               	movlw	0
  6305  0105B6  6EE6               	movwf	postinc1,c
  6306  0105B8  0E00               	movlw	0
  6307  0105BA  6EE6               	movwf	postinc1,c
  6308  0105BC  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6309  0105C0  0060  F0AB  FFE6   	movff	btemp,postinc1
  6310  0105C6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6311  0105CC  0E06               	movlw	6
  6312  0105CE  6EE6               	movwf	postinc1,c
  6313  0105D0  ECE5  F0FE         	call	_sprintf	;wreg free
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;main.c: 312:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f      ", C.dynamic_ah);
  6317  0105D4  EE23  F011         	lfsr	2,_C+144	;volatile
  6318  0105D8  006F FF7B FFE6     	movff	postinc2,postinc1
  6319  0105DE  006F FF7B FFE6     	movff	postinc2,postinc1
  6320  0105E4  006F FF7B FFE6     	movff	postinc2,postinc1
  6321  0105EA  006F FF7B FFE6     	movff	postinc2,postinc1
  6322  0105F0  0ECB               	movlw	low STR_19
  6323  0105F2  6EE6               	movwf	postinc1,c
  6324  0105F4  0EFC               	movlw	high STR_19
  6325  0105F6  6EE6               	movwf	postinc1,c
  6326  0105F8  0E00               	movlw	0
  6327  0105FA  6EE6               	movwf	postinc1,c
  6328  0105FC  0E01               	movlw	1
  6329  0105FE  6EE6               	movwf	postinc1,c
  6330  010600  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6331  010604  0060  F0AB  FFE6   	movff	btemp,postinc1
  6332  01060A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6333  010610  0E08               	movlw	8
  6334  010612  6EE6               	movwf	postinc1,c
  6335  010614  ECE5  F0FE         	call	_sprintf	;wreg free
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;main.c: 313:    sprintf(get_vterm_ptr(2, 0), "                      ");
  6339  010618  0EB7               	movlw	low STR_20
  6340  01061A  6EE6               	movwf	postinc1,c
  6341  01061C  0EFB               	movlw	high STR_20
  6342  01061E  6EE6               	movwf	postinc1,c
  6343  010620  0E00               	movlw	0
  6344  010622  6EE6               	movwf	postinc1,c
  6345  010624  0E02               	movlw	2
  6346  010626  6EE6               	movwf	postinc1,c
  6347  010628  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6348  01062C  0060  F0AB  FFE6   	movff	btemp,postinc1
  6349  010632  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6350  010638  0E04               	movlw	4
  6351  01063A  6EE6               	movwf	postinc1,c
  6352  01063C  ECE5  F0FE         	call	_sprintf	;wreg free
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;main.c: 314:    update_lcd(0);
  6356  010640  0E00               	movlw	0
  6357  010642  6EE6               	movwf	postinc1,c
  6358  010644  EC97  F0F7         	call	_update_lcd	;wreg free
  6359                           
  6360                           ;main.c: 315:    WaitMs(2000);
  6361  010648  0ED0               	movlw	208
  6362  01064A  6EE6               	movwf	postinc1,c
  6363  01064C  0E07               	movlw	7
  6364  01064E  6EE6               	movwf	postinc1,c
  6365  010650  EC12  F012         	call	_WaitMs	;wreg free
  6366                           
  6367                           ;main.c: 316:    sprintf(get_vterm_ptr(0, 0), "Battery ESR          ");
  6368  010654  0E95               	movlw	low STR_21
  6369  010656  6EE6               	movwf	postinc1,c
  6370  010658  0EFD               	movlw	high STR_21
  6371  01065A  6EE6               	movwf	postinc1,c
  6372  01065C  0E00               	movlw	0
  6373  01065E  6EE6               	movwf	postinc1,c
  6374  010660  0E00               	movlw	0
  6375  010662  6EE6               	movwf	postinc1,c
  6376  010664  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6377  010668  0060  F0AB  FFE6   	movff	btemp,postinc1
  6378  01066E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6379  010674  0E04               	movlw	4
  6380  010676  6EE6               	movwf	postinc1,c
  6381  010678  ECE5  F0FE         	call	_sprintf	;wreg free
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;main.c: 317:    sprintf(get_vterm_ptr(1, 0), "Calculation          ");
  6385  01067C  0EAB               	movlw	low STR_22
  6386  01067E  6EE6               	movwf	postinc1,c
  6387  010680  0EFD               	movlw	high STR_22
  6388  010682  6EE6               	movwf	postinc1,c
  6389  010684  0E00               	movlw	0
  6390  010686  6EE6               	movwf	postinc1,c
  6391  010688  0E01               	movlw	1
  6392  01068A  6EE6               	movwf	postinc1,c
  6393  01068C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6394  010690  0060  F0AB  FFE6   	movff	btemp,postinc1
  6395  010696  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6396  01069C  0E04               	movlw	4
  6397  01069E  6EE6               	movwf	postinc1,c
  6398  0106A0  ECE5  F0FE         	call	_sprintf	;wreg free
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;main.c: 318:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds     ");
  6402  0106A4  0E5B               	movlw	low STR_23
  6403  0106A6  6EE6               	movwf	postinc1,c
  6404  0106A8  0EFE               	movlw	high STR_23
  6405  0106AA  6EE6               	movwf	postinc1,c
  6406  0106AC  0E00               	movlw	0
  6407  0106AE  6EE6               	movwf	postinc1,c
  6408  0106B0  0E02               	movlw	2
  6409  0106B2  6EE6               	movwf	postinc1,c
  6410  0106B4  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6411  0106B8  0060  F0AB  FFE6   	movff	btemp,postinc1
  6412  0106BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6413  0106C4  0E04               	movlw	4
  6414  0106C6  6EE6               	movwf	postinc1,c
  6415  0106C8  ECE5  F0FE         	call	_sprintf	;wreg free
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;main.c: 319:    update_lcd(0);
  6419  0106CC  0E00               	movlw	0
  6420  0106CE  6EE6               	movwf	postinc1,c
  6421  0106D0  EC97  F0F7         	call	_update_lcd	;wreg free
  6422                           
  6423                           ;main.c: 320:    uint16_t i_esr = 1;
  6424  0106D4  0E01               	movlw	1
  6425  0106D6  6E34               	movwf	(btemp+10)^0,c
  6426  0106D8  0E00               	movlw	0
  6427  0106DA  6E35               	movwf	(btemp+11)^0,c
  6428                           
  6429                           ;stkvar	_i_esr @ sp[(-19)+10]
  6430  0106DC  0EF7               	movlw	-9
  6431  0106DE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6432  0106E4  0EF8               	movlw	-8
  6433  0106E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6434                           
  6435                           ;main.c: 322:    float esr_temp;;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  6436  0106EC  D06D               	goto	l17604
  6437  0106EE                     l17592:
  6438                           
  6439                           ;main.c: 324:     WaitMs(110);
  6440  0106EE  0E6E               	movlw	110
  6441  0106F0  6EE6               	movwf	postinc1,c
  6442  0106F2  0E00               	movlw	0
  6443  0106F4  6EE6               	movwf	postinc1,c
  6444  0106F6  EC12  F012         	call	_WaitMs	;wreg free
  6445                           
  6446                           ;main.c: 325:     shape = (uint8_t) fabsf(esr_temp);
  6447                           ;stkvar	_esr_temp @ sp[(-19)+6]
  6448  0106FA  0EF3               	movlw	-13
  6449  0106FC  006F FF8F FFE6     	movff	plusw1,postinc1
  6450  010702  006F FF8F FFE6     	movff	plusw1,postinc1
  6451  010708  006F FF8F FFE6     	movff	plusw1,postinc1
  6452  01070E  006F FF8F FFE6     	movff	plusw1,postinc1
  6453  010714  ECBC  F005         	call	_fabsf	;wreg free
  6454  010718  0060  F0AB  FFE6   	movff	btemp,postinc1
  6455  01071E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6456  010724  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  6457  01072A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  6458  010730  ECC9  F0F4         	call	___fltol	;wreg free
  6459  010734  0060  F0A8  F035   	movff	btemp,btemp+11
  6460                           
  6461                           ;stkvar	_shape @ sp[(-19)+12]
  6462  01073A  0EF9               	movlw	-7
  6463  01073C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6464                           
  6465                           ;main.c: 326:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c       ", spinners(0, 0), 
      +                          spinners(shape, 0));
  6466  010742  0E00               	movlw	0
  6467  010744  6EE6               	movwf	postinc1,c
  6468                           
  6469                           ;stkvar	_shape @ sp[(-20)+12]
  6470  010746  0EF8               	movlw	-8
  6471  010748  50E3               	movf	plusw1,w,c
  6472  01074A  6EE6               	movwf	postinc1,c
  6473  01074C  EC5B  F000         	call	_spinners	;wreg free
  6474  010750  502A               	movf	btemp^0,w,c
  6475  010752  6EE6               	movwf	postinc1,c
  6476  010754  0E00               	movlw	0
  6477  010756  6EE6               	movwf	postinc1,c
  6478  010758  0E00               	movlw	0
  6479  01075A  6EE6               	movwf	postinc1,c
  6480  01075C  0E00               	movlw	0
  6481  01075E  6EE6               	movwf	postinc1,c
  6482  010760  EC5B  F000         	call	_spinners	;wreg free
  6483  010764  502A               	movf	btemp^0,w,c
  6484  010766  6EE6               	movwf	postinc1,c
  6485  010768  0E00               	movlw	0
  6486  01076A  6EE6               	movwf	postinc1,c
  6487  01076C  0E19               	movlw	low STR_24
  6488  01076E  6EE6               	movwf	postinc1,c
  6489  010770  0EFE               	movlw	high STR_24
  6490  010772  6EE6               	movwf	postinc1,c
  6491  010774  0E00               	movlw	0
  6492  010776  6EE6               	movwf	postinc1,c
  6493  010778  0E02               	movlw	2
  6494  01077A  6EE6               	movwf	postinc1,c
  6495  01077C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6496  010780  0060  F0AB  FFE6   	movff	btemp,postinc1
  6497  010786  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6498  01078C  0E08               	movlw	8
  6499  01078E  6EE6               	movwf	postinc1,c
  6500  010790  ECE5  F0FE         	call	_sprintf	;wreg free
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;main.c: 327:     update_lcd(0);
  6504  010794  0E00               	movlw	0
  6505  010796  6EE6               	movwf	postinc1,c
  6506  010798  EC97  F0F7         	call	_update_lcd	;wreg free
  6507                           
  6508                           ;main.c: 329:     if (i_esr++ > 512)
  6509                           ;stkvar	_i_esr @ sp[(-19)+10]
  6510  01079C  50E1               	movf	fsr1l,w,c
  6511  01079E  0FF7               	addlw	-9
  6512  0107A0  6ED9               	movwf	fsr2l,c
  6513  0107A2  50E2               	movf	fsr1h,w,c
  6514  0107A4  6EDA               	movwf	fsr2h,c
  6515  0107A6  0EFF               	movlw	255
  6516  0107A8  22DA               	addwfc	fsr2h,f,c
  6517  0107AA  006F FF7C  F034    	movff	indf2,btemp+10
  6518  0107B0  0E01               	movlw	1
  6519  0107B2  26DE               	addwf	postinc2,f,c
  6520  0107B4  006F FF7C  F035    	movff	indf2,btemp+11
  6521  0107BA  0E00               	movlw	0
  6522  0107BC  22DD               	addwfc	postdec2,f,c
  6523  0107BE  0434               	decf	(btemp+10)^0,w,c
  6524  0107C0  0E02               	movlw	2
  6525  0107C2  5835               	subwfb	(btemp+11)^0,w,c
  6526  0107C4  B0D8               	btfsc	status,0,c
  6527  0107C6  D017               	goto	u17130
  6528  0107C8                     l17604:
  6529                           
  6530                           ;main.c: 323:    while ((esr_temp = esr_check(0)) < 0.0) {
  6531  0107C8  0E00               	movlw	0
  6532  0107CA  6EE6               	movwf	postinc1,c
  6533  0107CC  EC32  F0DD         	call	_esr_check	;wreg free
  6534                           
  6535                           ;stkvar	_esr_temp @ sp[(-19)+6]
  6536  0107D0  0EF3               	movlw	-13
  6537  0107D2  0060  F0AB  FFE3   	movff	btemp,plusw1
  6538  0107D8  0EF4               	movlw	-12
  6539  0107DA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
  6540  0107E0  0EF5               	movlw	-11
  6541  0107E2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
  6542  0107E8  0EF6               	movlw	-10
  6543  0107EA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
  6544  0107F0  0EF6               	movlw	-10
  6545  0107F2  BEE3               	btfsc	plusw1,7,c
  6546  0107F4  D77C               	goto	l17592
  6547  0107F6                     u17130:
  6548                           
  6549                           ;main.c: 332:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f            ", C.esr);
  6550  0107F6  EE23  F009         	lfsr	2,_C+136	;volatile
  6551  0107FA  006F FF7B FFE6     	movff	postinc2,postinc1
  6552  010800  006F FF7B FFE6     	movff	postinc2,postinc1
  6553  010806  006F FF7B FFE6     	movff	postinc2,postinc1
  6554  01080C  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010812  0ECE               	movlw	low STR_25
  6556  010814  6EE6               	movwf	postinc1,c
  6557  010816  0EFB               	movlw	high STR_25
  6558  010818  6EE6               	movwf	postinc1,c
  6559  01081A  0E00               	movlw	0
  6560  01081C  6EE6               	movwf	postinc1,c
  6561  01081E  0E00               	movlw	0
  6562  010820  6EE6               	movwf	postinc1,c
  6563  010822  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6564  010826  0060  F0AB  FFE6   	movff	btemp,postinc1
  6565  01082C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6566  010832  0E08               	movlw	8
  6567  010834  6EE6               	movwf	postinc1,c
  6568  010836  ECE5  F0FE         	call	_sprintf	;wreg free
  6569                           
  6570                           ;main.c: 333:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f            ", C.bv_one_loa
      +                          d, C.load_i1);
  6571  01083A  EE23  F09B         	lfsr	2,_C+282	;volatile
  6572  01083E  006F FF7B FFE6     	movff	postinc2,postinc1
  6573  010844  006F FF7B FFE6     	movff	postinc2,postinc1
  6574  01084A  006F FF7B FFE6     	movff	postinc2,postinc1
  6575  010850  006F FF7B FFE6     	movff	postinc2,postinc1
  6576  010856  EE23  F0A7         	lfsr	2,_C+294	;volatile
  6577  01085A  006F FF7B FFE6     	movff	postinc2,postinc1
  6578  010860  006F FF7B FFE6     	movff	postinc2,postinc1
  6579  010866  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  01086C  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010872  0ED5               	movlw	low STR_26
  6582  010874  6EE6               	movwf	postinc1,c
  6583  010876  0EFA               	movlw	high STR_26
  6584  010878  6EE6               	movwf	postinc1,c
  6585  01087A  0E00               	movlw	0
  6586  01087C  6EE6               	movwf	postinc1,c
  6587  01087E  0E01               	movlw	1
  6588  010880  6EE6               	movwf	postinc1,c
  6589  010882  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6590  010886  0060  F0AB  FFE6   	movff	btemp,postinc1
  6591  01088C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6592  010892  0E0C               	movlw	12
  6593  010894  6EE6               	movwf	postinc1,c
  6594  010896  ECE5  F0FE         	call	_sprintf	;wreg free
  6595                           
  6596                           ;main.c: 334:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f            ", C.bv_full_lo
      +                          ad, C.load_i2);
  6597  01089A  EE23  F09F         	lfsr	2,_C+286	;volatile
  6598  01089E  006F FF7B FFE6     	movff	postinc2,postinc1
  6599  0108A4  006F FF7B FFE6     	movff	postinc2,postinc1
  6600  0108AA  006F FF7B FFE6     	movff	postinc2,postinc1
  6601  0108B0  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  0108B6  EE23  F0AB         	lfsr	2,_C+298	;volatile
  6603  0108BA  006F FF7B FFE6     	movff	postinc2,postinc1
  6604  0108C0  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  0108C6  006F FF7B FFE6     	movff	postinc2,postinc1
  6606  0108CC  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  0108D2  0EF0               	movlw	low STR_27
  6608  0108D4  6EE6               	movwf	postinc1,c
  6609  0108D6  0EFA               	movlw	high STR_27
  6610  0108D8  6EE6               	movwf	postinc1,c
  6611  0108DA  0E00               	movlw	0
  6612  0108DC  6EE6               	movwf	postinc1,c
  6613  0108DE  0E02               	movlw	2
  6614  0108E0  6EE6               	movwf	postinc1,c
  6615  0108E2  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6616  0108E6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6617  0108EC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6618  0108F2  0E0C               	movlw	12
  6619  0108F4  6EE6               	movwf	postinc1,c
  6620  0108F6  ECE5  F0FE         	call	_sprintf	;wreg free
  6621                           
  6622                           ;main.c: 335:    update_lcd(0);
  6623  0108FA  0E00               	movlw	0
  6624  0108FC  6EE6               	movwf	postinc1,c
  6625  0108FE  EC97  F0F7         	call	_update_lcd	;wreg free
  6626                           
  6627                           ;main.c: 336:    WaitMs(4000);
  6628  010902  0EA0               	movlw	160
  6629  010904  6EE6               	movwf	postinc1,c
  6630  010906  0E0F               	movlw	15
  6631  010908  6EE6               	movwf	postinc1,c
  6632  01090A  EC12  F012         	call	_WaitMs	;wreg free
  6633                           
  6634                           ;main.c: 337:    V.sensor_set = get_switch(SCALIB);
  6635  01090E  0E04               	movlw	4
  6636  010910  6EE6               	movwf	postinc1,c
  6637  010912  EC25  F013         	call	_get_switch	;wreg free
  6638  010916  502A               	movf	btemp^0,w,c
  6639  010918  B4D8               	btfsc	status,2,c
  6640  01091A  D002               	goto	u17140
  6641  01091C  0E01               	movlw	1
  6642  01091E  D001               	goto	u17150
  6643  010920                     u17140:
  6644  010920  0E00               	movlw	0
  6645  010922                     u17150:
  6646  010922  0102               	movlb	2	; () banked
  6647  010924  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  6648                           
  6649                           ; BSR set to: 2
  6650                           ;main.c: 338:    WaitMs(1000);
  6651  010926  0EE8               	movlw	232
  6652  010928  6EE6               	movwf	postinc1,c
  6653  01092A  0E03               	movlw	3
  6654  01092C  6EE6               	movwf	postinc1,c
  6655  01092E  EC12  F012         	call	_WaitMs	;wreg free
  6656                           
  6657                           ;main.c: 339:    if (V.sensor_set && get_switch(SCALIB)) {
  6658  010932  0102               	movlb	2	; () banked
  6659  010934  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6660  010936  B4D8               	btfsc	status,2,c
  6661  010938  D00F               	goto	l17622
  6662                           
  6663                           ; BSR set to: 2
  6664  01093A  0E04               	movlw	4
  6665  01093C  6EE6               	movwf	postinc1,c
  6666  01093E  EC25  F013         	call	_get_switch	;wreg free
  6667  010942  502A               	movf	btemp^0,w,c
  6668  010944  B4D8               	btfsc	status,2,c
  6669  010946  D008               	goto	l17622
  6670                           
  6671                           ;main.c: 340:     current_sensor_cal();
  6672  010948  EC4A  F0CB         	call	_current_sensor_cal	;wreg free
  6673                           
  6674                           ;main.c: 341:     WaitMs(4000);
  6675  01094C  0EA0               	movlw	160
  6676  01094E  6EE6               	movwf	postinc1,c
  6677  010950  0E0F               	movlw	15
  6678  010952  6EE6               	movwf	postinc1,c
  6679  010954  EC12  F012         	call	_WaitMs	;wreg free
  6680  010958                     l17622:
  6681                           
  6682                           ;main.c: 343:    V.sensor_set = 0;
  6683  010958  0102               	movlb	2	; () banked
  6684  01095A  6BB2               	clrf	(_V+171)& (0+255),b	;volatile
  6685                           
  6686                           ; BSR set to: 2
  6687                           ;main.c: 344:    V.system_stable = 1;
  6688  01095C  0E01               	movlw	1
  6689  01095E  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6690                           
  6691                           ;main.c: 345:    break;
  6692  010960  D01D               	goto	l17630
  6693  010962                     l1475:
  6694                           
  6695                           ; BSR set to: 2
  6696                           ;main.c: 351:    P.SYSTEM_STABLE = 1;
  6697  010962  0100               	movlb	0	; () banked
  6698  010964  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  6699                           
  6700                           ;main.c: 352:    break;
  6701  010966  D01A               	goto	l17630
  6702  010968                     l1477:
  6703                           
  6704                           ; BSR set to: 2
  6705                           ;main.c: 355:    V.ui_state = UI_STATE_INIT;
  6706  010968  6B07               	clrf	_V& (0+255),b	;volatile
  6707                           
  6708                           ;main.c: 356:    break;
  6709  01096A  D018               	goto	l17630
  6710  01096C                     l17628:
  6711  01096C  0102               	movlb	2	; () banked
  6712  01096E  5107               	movf	_V& (0+255),w,b	;volatile
  6713  010970  6E34               	movwf	(btemp+10)^0,c
  6714  010972  6A35               	clrf	(btemp+11)^0,c
  6715                           
  6716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6717                           ; Switch size 1, requested type "simple"
  6718                           ; Number of cases is 1, Range of values is 0 to 0
  6719                           ; switch strategies available:
  6720                           ; Name         Instructions Cycles
  6721                           ; simple_byte            4     3 (average)
  6722                           ;	Chosen strategy is simple_byte
  6723  010974  5035               	movf	(btemp+11)^0,w,c
  6724  010976  0A00               	xorlw	0	; case 0
  6725  010978  A4D8               	btfss	status,2,c
  6726  01097A  D7F6               	goto	l1477
  6727                           
  6728                           ; BSR set to: 2
  6729                           ; Switch size 1, requested type "simple"
  6730                           ; Number of cases is 5, Range of values is 0 to 5
  6731                           ; switch strategies available:
  6732                           ; Name         Instructions Cycles
  6733                           ; simple_byte           16     9 (average)
  6734                           ;	Chosen strategy is simple_byte
  6735  01097C  5034               	movf	(btemp+10)^0,w,c
  6736  01097E  0A00               	xorlw	0	; case 0
  6737  010980  B4D8               	btfsc	status,2,c
  6738  010982  EF3D  F080         	goto	l17464
  6739  010986  0A01               	xorlw	1	; case 1
  6740  010988  B4D8               	btfsc	status,2,c
  6741  01098A  D008               	goto	l17630
  6742  01098C  0A02               	xorlw	2	; case 3
  6743  01098E  B4D8               	btfsc	status,2,c
  6744  010990  D005               	goto	l17630
  6745  010992  0A07               	xorlw	7	; case 4
  6746  010994  B4D8               	btfsc	status,2,c
  6747  010996  D7E5               	goto	l1475
  6748  010998  0A01               	xorlw	1	; case 5
  6749  01099A  D7E6               	goto	l1477
  6750  01099C                     l17630:
  6751                           
  6752                           ;main.c: 359:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  6753  01099C  0E01               	movlw	1
  6754  01099E  6EE6               	movwf	postinc1,c
  6755  0109A0  EC91  F013         	call	_TimerDone	;wreg free
  6756  0109A4  502A               	movf	btemp^0,w,c
  6757  0109A6  B4D8               	btfsc	status,2,c
  6758  0109A8  D013               	goto	l17642
  6759  0109AA  EC8F  F016         	call	_check_adc_scan	;wreg free
  6760  0109AE  502A               	movf	btemp^0,w,c
  6761  0109B0  B4D8               	btfsc	status,2,c
  6762  0109B2  D00E               	goto	l17642
  6763                           
  6764                           ;main.c: 363:    convert_adc_data();
  6765  0109B4  EC05  F005         	call	_convert_adc_data	;wreg free
  6766                           
  6767                           ;main.c: 367:    clear_adc_scan();
  6768  0109B8  ECA9  F016         	call	_clear_adc_scan	;wreg free
  6769                           
  6770                           ; BSR set to: 1
  6771                           ;main.c: 368:    start_adc_scan();
  6772  0109BC  EC5F  F00D         	call	_start_adc_scan	;wreg free
  6773                           
  6774                           ;main.c: 369:    StartTimer(TMR_ADC, 200);
  6775  0109C0  0EC8               	movlw	200
  6776  0109C2  6EE6               	movwf	postinc1,c
  6777  0109C4  0E00               	movlw	0
  6778  0109C6  6EE6               	movwf	postinc1,c
  6779  0109C8  0E01               	movlw	1
  6780  0109CA  6EE6               	movwf	postinc1,c
  6781  0109CC  EC20  F011         	call	_StartTimer	;wreg free
  6782  0109D0                     l17642:
  6783                           
  6784                           ;main.c: 372:   if (TimerDone(TMR_DISPLAY)) {
  6785  0109D0  0E0A               	movlw	10
  6786  0109D2  6EE6               	movwf	postinc1,c
  6787  0109D4  EC91  F013         	call	_TimerDone	;wreg free
  6788  0109D8  502A               	movf	btemp^0,w,c
  6789  0109DA  B4D8               	btfsc	status,2,c
  6790  0109DC  EF05  F08B         	goto	l17766
  6791                           
  6792                           ;main.c: 373:    if (TimerDone(TMR_HELPDIS)) {
  6793  0109E0  0E09               	movlw	9
  6794  0109E2  6EE6               	movwf	postinc1,c
  6795  0109E4  EC91  F013         	call	_TimerDone	;wreg free
  6796  0109E8  502A               	movf	btemp^0,w,c
  6797  0109EA  B4D8               	btfsc	status,2,c
  6798  0109EC  D004               	goto	l17648
  6799                           
  6800                           ;main.c: 374:     set_display_info(DIS_STR);
  6801  0109EE  0E00               	movlw	0
  6802  0109F0  6EE6               	movwf	postinc1,c
  6803  0109F2  EC96  F015         	call	_set_display_info	;wreg free
  6804  0109F6                     l17648:
  6805                           
  6806                           ;main.c: 376:    pclock = time(((void*)0));
  6807  0109F6  0E00               	movlw	0
  6808  0109F8  6EE6               	movwf	postinc1,c
  6809  0109FA  0E00               	movlw	0
  6810  0109FC  6EE6               	movwf	postinc1,c
  6811  0109FE  EC23  F00E         	call	_time	;wreg free
  6812  010A02  52E5               	movf	postdec1,f,c
  6813  010A04  006F FF9C  F041    	movff	indf1,btemp+23
  6814  010A0A  52E5               	movf	postdec1,f,c
  6815  010A0C  006F FF9C  F040    	movff	indf1,btemp+22
  6816  010A12  52E5               	movf	postdec1,f,c
  6817  010A14  006F FF9C  F03F    	movff	indf1,btemp+21
  6818  010A1A  52E5               	movf	postdec1,f,c
  6819  010A1C  006F FF9C  F03E    	movff	indf1,btemp+20
  6820  010A22  52E5               	movf	postdec1,f,c
  6821  010A24  006F FF9C  F03D    	movff	indf1,btemp+19
  6822  010A2A  52E5               	movf	postdec1,f,c
  6823  010A2C  006F FF9C  F03C    	movff	indf1,btemp+18
  6824  010A32  52E5               	movf	postdec1,f,c
  6825  010A34  006F FF9C  F03B    	movff	indf1,btemp+17
  6826  010A3A  52E5               	movf	postdec1,f,c
  6827  010A3C  006F FF9C  F03A    	movff	indf1,btemp+16
  6828  010A42  0060  F0E8  F0DA   	movff	btemp+16,_pclock
  6829  010A48  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
  6830  010A4E  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
  6831  010A54  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
  6832  010A5A  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
  6833  010A60  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
  6834  010A66  0060  F100  F0E0   	movff	btemp+22,_pclock+6
  6835  010A6C  0060  F104  F0E1   	movff	btemp+23,_pclock+7
  6836                           
  6837                           ; BSR set to: 57
  6838                           ;main.c: 377:    t_mbmc = localtime(&pclock);
  6839  010A72  0EDA               	movlw	_pclock& (0+255)
  6840  010A74  6EE6               	movwf	postinc1,c
  6841  010A76  ECD7  F015         	call	_localtime	;wreg free
  6842  010A7A  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
  6843  010A80  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
  6844                           
  6845                           ;main.c: 378:    sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
  6846  010A86  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6847  010A8C  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6848  010A92  EC21  F0C4         	call	_asctime	;wreg free
  6849  010A96  0060  F0AB  FFE6   	movff	btemp,postinc1
  6850  010A9C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6851  010AA2  0E76               	movlw	low (STR_77+5)
  6852  010AA4  6EE6               	movwf	postinc1,c
  6853  010AA6  0EFF               	movlw	high (STR_77+5)
  6854  010AA8  6EE6               	movwf	postinc1,c
  6855  010AAA  0E00               	movlw	0
  6856  010AAC  6EE6               	movwf	postinc1,c
  6857  010AAE  0E03               	movlw	3
  6858  010AB0  6EE6               	movwf	postinc1,c
  6859  010AB2  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6860  010AB6  0060  F0AB  FFE6   	movff	btemp,postinc1
  6861  010ABC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6862  010AC2  0E06               	movlw	6
  6863  010AC4  6EE6               	movwf	postinc1,c
  6864  010AC6  ECE5  F0FE         	call	_sprintf	;wreg free
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;main.c: 379:    sprintf(get_vterm_ptr(3, 1), "%s           ", asctime(t_mbmc));
  6868  010ACA  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
  6869  010AD0  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
  6870  010AD6  EC21  F0C4         	call	_asctime	;wreg free
  6871  010ADA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6872  010AE0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6873  010AE6  0E76               	movlw	low (STR_77+5)
  6874  010AE8  6EE6               	movwf	postinc1,c
  6875  010AEA  0EFF               	movlw	high (STR_77+5)
  6876  010AEC  6EE6               	movwf	postinc1,c
  6877  010AEE  0E01               	movlw	1
  6878  010AF0  6EE6               	movwf	postinc1,c
  6879  010AF2  0E03               	movlw	3
  6880  010AF4  6EE6               	movwf	postinc1,c
  6881  010AF6  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6882  010AFA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6883  010B00  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6884  010B06  0E06               	movlw	6
  6885  010B08  6EE6               	movwf	postinc1,c
  6886  010B0A  ECE5  F0FE         	call	_sprintf	;wreg free
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;main.c: 380:    calc_model_data();
  6890  010B0E  ECB7  F0CF         	call	_calc_model_data	;wreg free
  6891                           
  6892                           ; BSR set to: 57
  6893                           ;main.c: 381:    if (C.dupdate) {
  6894  010B12  EE23  F0B0         	lfsr	2,_C+303	;volatile
  6895  010B16  50DF               	movf	indf2,w,c
  6896  010B18  B4D8               	btfsc	status,2,c
  6897  010B1A  D0D7               	goto	l17692
  6898                           
  6899                           ; BSR set to: 57
  6900                           ;main.c: 382:     C.dupdate = 0;
  6901  010B1C  0E00               	movlw	0
  6902  010B1E  006F FFA0  FCB0    	movff	wreg,_C+303	;volatile
  6903                           
  6904                           ;main.c: 383:     set_hist_flag();
  6905  010B24  ECA3  F016         	call	_set_hist_flag	;wreg free
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;main.c: 385:     uint16_t i_esr = 1;
  6909  010B28  0E01               	movlw	1
  6910  010B2A  6E34               	movwf	(btemp+10)^0,c
  6911  010B2C  0E00               	movlw	0
  6912  010B2E  6E35               	movwf	(btemp+11)^0,c
  6913                           
  6914                           ;stkvar	_i_esr @ sp[(-19)+4]
  6915  010B30  0EF1               	movlw	-15
  6916  010B32  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  6917  010B38  0EF2               	movlw	-14
  6918  010B3A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  6919                           
  6920                           ; BSR set to: 1
  6921                           ;main.c: 386:     esr_check(1);
  6922  010B40  0E01               	movlw	1
  6923  010B42  6EE6               	movwf	postinc1,c
  6924  010B44  EC32  F0DD         	call	_esr_check	;wreg free
  6925                           
  6926                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6927  010B48  D01C               	goto	l17672
  6928  010B4A                     l17666:
  6929                           
  6930                           ;main.c: 388:      WaitMs(110);
  6931  010B4A  0E6E               	movlw	110
  6932  010B4C  6EE6               	movwf	postinc1,c
  6933  010B4E  0E00               	movlw	0
  6934  010B50  6EE6               	movwf	postinc1,c
  6935  010B52  EC12  F012         	call	_WaitMs	;wreg free
  6936                           
  6937                           ;main.c: 389:      if (i_esr++ > 512)
  6938                           ;stkvar	_i_esr @ sp[(-19)+4]
  6939  010B56  50E1               	movf	fsr1l,w,c
  6940  010B58  0FF1               	addlw	-15
  6941  010B5A  6ED9               	movwf	fsr2l,c
  6942  010B5C  50E2               	movf	fsr1h,w,c
  6943  010B5E  6EDA               	movwf	fsr2h,c
  6944  010B60  0EFF               	movlw	255
  6945  010B62  22DA               	addwfc	fsr2h,f,c
  6946  010B64  006F FF7C  F034    	movff	indf2,btemp+10
  6947  010B6A  0E01               	movlw	1
  6948  010B6C  26DE               	addwf	postinc2,f,c
  6949  010B6E  006F FF7C  F035    	movff	indf2,btemp+11
  6950  010B74  0E00               	movlw	0
  6951  010B76  22DD               	addwfc	postdec2,f,c
  6952  010B78  0434               	decf	(btemp+10)^0,w,c
  6953  010B7A  0E02               	movlw	2
  6954  010B7C  5835               	subwfb	(btemp+11)^0,w,c
  6955  010B7E  B0D8               	btfsc	status,0,c
  6956  010B80  D006               	goto	u17240
  6957  010B82                     l17672:
  6958                           
  6959                           ;main.c: 387:     while (esr_check(0) < 0.0) {
  6960  010B82  0E00               	movlw	0
  6961  010B84  6EE6               	movwf	postinc1,c
  6962  010B86  EC32  F0DD         	call	_esr_check	;wreg free
  6963  010B8A  BE2D               	btfsc	(btemp+3)^0,7,c
  6964  010B8C  D7DE               	goto	l17666
  6965  010B8E                     u17240:
  6966                           
  6967                           ;main.c: 392:     load_hist_data();
  6968  010B8E  EC84  F0CD         	call	_load_hist_data	;wreg free
  6969                           
  6970                           ; BSR set to: 57
  6971                           ;main.c: 393:     update_hist_data(0, &C.hist[0]);
  6972  010B92  0E3A               	movlw	low (_C+185)
  6973  010B94  6EE6               	movwf	postinc1,c
  6974  010B96  0E0C               	movlw	high (_C+185)
  6975  010B98  6EE6               	movwf	postinc1,c
  6976  010B9A  0E00               	movlw	0
  6977  010B9C  6EE6               	movwf	postinc1,c
  6978  010B9E  EC03  F00B         	call	_update_hist_data	;wreg free
  6979                           
  6980                           ;main.c: 394:     write_cal_data();
  6981  010BA2  ECF4  F0F8         	call	_write_cal_data	;wreg free
  6982                           
  6983                           ;main.c: 395:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved  ");
  6984  010BA6  0EB3               	movlw	low STR_30
  6985  010BA8  6EE6               	movwf	postinc1,c
  6986  010BAA  0EFE               	movlw	high STR_30
  6987  010BAC  6EE6               	movwf	postinc1,c
  6988  010BAE  0E00               	movlw	0
  6989  010BB0  6EE6               	movwf	postinc1,c
  6990  010BB2  0E00               	movlw	0
  6991  010BB4  6EE6               	movwf	postinc1,c
  6992  010BB6  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  6993  010BBA  0060  F0AB  FFE6   	movff	btemp,postinc1
  6994  010BC0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  6995  010BC6  0E04               	movlw	4
  6996  010BC8  6EE6               	movwf	postinc1,c
  6997  010BCA  ECE5  F0FE         	call	_sprintf	;wreg free
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;main.c: 396:     sprintf(get_vterm_ptr(1, 0), "To EEPROM            ");
  7001  010BCE  0E7F               	movlw	low STR_31
  7002  010BD0  6EE6               	movwf	postinc1,c
  7003  010BD2  0EFD               	movlw	high STR_31
  7004  010BD4  6EE6               	movwf	postinc1,c
  7005  010BD6  0E00               	movlw	0
  7006  010BD8  6EE6               	movwf	postinc1,c
  7007  010BDA  0E01               	movlw	1
  7008  010BDC  6EE6               	movwf	postinc1,c
  7009  010BDE  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7010  010BE2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7011  010BE8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7012  010BEE  0E04               	movlw	4
  7013  010BF0  6EE6               	movwf	postinc1,c
  7014  010BF2  ECE5  F0FE         	call	_sprintf	;wreg free
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;main.c: 397:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu       ", time(((void*)0))
      +                          , C.hist[0].updates);
  7018  010BF6  EE23  F046         	lfsr	2,_C+197	;volatile
  7019  010BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  7020  010C00  006F FF7B FFE6     	movff	postinc2,postinc1
  7021  010C06  006F FF7B FFE6     	movff	postinc2,postinc1
  7022  010C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  7023  010C12  0E00               	movlw	0
  7024  010C14  6EE6               	movwf	postinc1,c
  7025  010C16  0E00               	movlw	0
  7026  010C18  6EE6               	movwf	postinc1,c
  7027  010C1A  EC23  F00E         	call	_time	;wreg free
  7028  010C1E  52E5               	movf	postdec1,f,c
  7029  010C20  006F FF9C  F041    	movff	indf1,btemp+23
  7030  010C26  52E5               	movf	postdec1,f,c
  7031  010C28  006F FF9C  F040    	movff	indf1,btemp+22
  7032  010C2E  52E5               	movf	postdec1,f,c
  7033  010C30  006F FF9C  F03F    	movff	indf1,btemp+21
  7034  010C36  52E5               	movf	postdec1,f,c
  7035  010C38  006F FF9C  F03E    	movff	indf1,btemp+20
  7036  010C3E  52E5               	movf	postdec1,f,c
  7037  010C40  006F FF9C  F03D    	movff	indf1,btemp+19
  7038  010C46  52E5               	movf	postdec1,f,c
  7039  010C48  006F FF9C  F03C    	movff	indf1,btemp+18
  7040  010C4E  52E5               	movf	postdec1,f,c
  7041  010C50  006F FF9C  F03B    	movff	indf1,btemp+17
  7042  010C56  52E5               	movf	postdec1,f,c
  7043  010C58  006F FF9C  F03A    	movff	indf1,btemp+16
  7044  010C5E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
  7045  010C64  0060  F0EF  FFE6   	movff	btemp+17,postinc1
  7046  010C6A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
  7047  010C70  0060  F0F7  FFE6   	movff	btemp+19,postinc1
  7048  010C76  0060  F0FB  FFE6   	movff	btemp+20,postinc1
  7049  010C7C  0060  F0FF  FFE6   	movff	btemp+21,postinc1
  7050  010C82  0060  F103  FFE6   	movff	btemp+22,postinc1
  7051  010C88  0060  F107  FFE6   	movff	btemp+23,postinc1
  7052  010C8E  0E2F               	movlw	low STR_32
  7053  010C90  6EE6               	movwf	postinc1,c
  7054  010C92  0EFE               	movlw	high STR_32
  7055  010C94  6EE6               	movwf	postinc1,c
  7056  010C96  0E00               	movlw	0
  7057  010C98  6EE6               	movwf	postinc1,c
  7058  010C9A  0E02               	movlw	2
  7059  010C9C  6EE6               	movwf	postinc1,c
  7060  010C9E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7061  010CA2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7062  010CA8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7063  010CAE  0E10               	movlw	16
  7064  010CB0  6EE6               	movwf	postinc1,c
  7065  010CB2  ECE5  F0FE         	call	_sprintf	;wreg free
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;main.c: 398:     update_lcd(0);
  7069  010CB6  0E00               	movlw	0
  7070  010CB8  6EE6               	movwf	postinc1,c
  7071  010CBA  EC97  F0F7         	call	_update_lcd	;wreg free
  7072                           
  7073                           ;main.c: 399:     WaitMs(2000);
  7074  010CBE  0ED0               	movlw	208
  7075  010CC0  6EE6               	movwf	postinc1,c
  7076  010CC2  0E07               	movlw	7
  7077  010CC4  6EE6               	movwf	postinc1,c
  7078  010CC6  EC12  F012         	call	_WaitMs	;wreg free
  7079  010CCA                     l17692:
  7080                           
  7081                           ;main.c: 407:     hid_display(&H);
  7082  010CCA  0E9B               	movlw	low _H
  7083  010CCC  6EE6               	movwf	postinc1,c
  7084  010CCE  0E01               	movlw	high _H
  7085  010CD0  6EE6               	movwf	postinc1,c
  7086  010CD2  EC84  F0EA         	call	_hid_display	;wreg free
  7087                           
  7088                           ;main.c: 408:     switch (H.hid_display) {
  7089  010CD6  EF96  F08A         	goto	l17736
  7090  010CDA                     l1489:
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;main.c: 410:      V.calib = 0;
  7094  010CDA  0102               	movlb	2	; () banked
  7095  010CDC  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7096                           
  7097                           ; BSR set to: 2
  7098                           ;main.c: 411:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f       ", (C.day) ? 'D' 
      +                          : ' ', C.p_pv);
  7099  010CDE  EE23  F0AF         	lfsr	2,_C+302	;volatile
  7100  010CE2  50DF               	movf	indf2,w,c
  7101  010CE4  A4D8               	btfss	status,2,c
  7102  010CE6  D002               	goto	l17698
  7103                           
  7104                           ; BSR set to: 2
  7105  010CE8  0E20               	movlw	32
  7106  010CEA  D001               	goto	L1
  7107  010CEC                     l17698:
  7108                           
  7109                           ; BSR set to: 2
  7110  010CEC  0E44               	movlw	68
  7111  010CEE                     L1:
  7112  010CEE  6E34               	movwf	(btemp+10)^0,c
  7113  010CF0  0E00               	movlw	0
  7114  010CF2  6E35               	movwf	(btemp+11)^0,c
  7115                           
  7116                           ;stkvar	_main$4037 @ sp[(-19)+2]
  7117  010CF4  0EEF               	movlw	-17
  7118  010CF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7119  010CFC  0EF0               	movlw	-16
  7120  010CFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7121                           
  7122                           ; BSR set to: 2
  7123  010D04  EE22  F3FD         	lfsr	2,_C+124	;volatile
  7124  010D08  006F FF7B FFE6     	movff	postinc2,postinc1
  7125  010D0E  006F FF7B FFE6     	movff	postinc2,postinc1
  7126  010D14  006F FF7B FFE6     	movff	postinc2,postinc1
  7127  010D1A  006F FF7B FFE6     	movff	postinc2,postinc1
  7128                           
  7129                           ;stkvar	_main$4037 @ sp[(-23)+2]
  7130  010D20  0EEB               	movlw	-21
  7131  010D22  006F FF8F FFE6     	movff	plusw1,postinc1
  7132  010D28  006F FF8F FFE6     	movff	plusw1,postinc1
  7133  010D2E  0EB4               	movlw	low STR_36
  7134  010D30  6EE6               	movwf	postinc1,c
  7135  010D32  0EFC               	movlw	high STR_36
  7136  010D34  6EE6               	movwf	postinc1,c
  7137  010D36  0E00               	movlw	0
  7138  010D38  6EE6               	movwf	postinc1,c
  7139  010D3A  0E00               	movlw	0
  7140  010D3C  6EE6               	movwf	postinc1,c
  7141  010D3E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7142  010D42  0060  F0AB  FFE6   	movff	btemp,postinc1
  7143  010D48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7144  010D4E  0E0A               	movlw	10
  7145  010D50  6EE6               	movwf	postinc1,c
  7146  010D52  ECE5  F0FE         	call	_sprintf	;wreg free
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;main.c: 412:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f        ", C.p_load);
  7150  010D56  EE22  F3F5         	lfsr	2,_C+116	;volatile
  7151  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7152  010D60  006F FF7B FFE6     	movff	postinc2,postinc1
  7153  010D66  006F FF7B FFE6     	movff	postinc2,postinc1
  7154  010D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  7155  010D72  0E9D               	movlw	low STR_37
  7156  010D74  6EE6               	movwf	postinc1,c
  7157  010D76  0EFC               	movlw	high STR_37
  7158  010D78  6EE6               	movwf	postinc1,c
  7159  010D7A  0E00               	movlw	0
  7160  010D7C  6EE6               	movwf	postinc1,c
  7161  010D7E  0E01               	movlw	1
  7162  010D80  6EE6               	movwf	postinc1,c
  7163  010D82  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7164  010D86  0060  F0AB  FFE6   	movff	btemp,postinc1
  7165  010D8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7166  010D92  0E08               	movlw	8
  7167  010D94  6EE6               	movwf	postinc1,c
  7168  010D96  ECE5  F0FE         	call	_sprintf	;wreg free
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;main.c: 413:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f        ", C.p_inverter);
  7172  010D9A  EE22  F3F9         	lfsr	2,_C+120	;volatile
  7173  010D9E  006F FF7B FFE6     	movff	postinc2,postinc1
  7174  010DA4  006F FF7B FFE6     	movff	postinc2,postinc1
  7175  010DAA  006F FF7B FFE6     	movff	postinc2,postinc1
  7176  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  7177  010DB6  0E86               	movlw	low STR_38
  7178  010DB8  6EE6               	movwf	postinc1,c
  7179  010DBA  0EFC               	movlw	high STR_38
  7180  010DBC  6EE6               	movwf	postinc1,c
  7181  010DBE  0E00               	movlw	0
  7182  010DC0  6EE6               	movwf	postinc1,c
  7183  010DC2  0E02               	movlw	2
  7184  010DC4  6EE6               	movwf	postinc1,c
  7185  010DC6  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7186  010DCA  0060  F0AB  FFE6   	movff	btemp,postinc1
  7187  010DD0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7188  010DD6  0E08               	movlw	8
  7189  010DD8  6EE6               	movwf	postinc1,c
  7190  010DDA  ECE5  F0FE         	call	_sprintf	;wreg free
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;main.c: 415:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f        ", (C.day) ? 'D' 
      +                          : ' ', C.pvkw);
  7194  010DDE  EE23  F0AF         	lfsr	2,_C+302	;volatile
  7195  010DE2  50DF               	movf	indf2,w,c
  7196  010DE4  A4D8               	btfss	status,2,c
  7197  010DE6  D002               	goto	l17710
  7198                           
  7199                           ; BSR set to: 0
  7200  010DE8  0E20               	movlw	32
  7201  010DEA  D001               	goto	L2
  7202  010DEC                     l17710:
  7203                           
  7204                           ; BSR set to: 0
  7205  010DEC  0E44               	movlw	68
  7206  010DEE                     L2:
  7207  010DEE  6E34               	movwf	(btemp+10)^0,c
  7208  010DF0  0E00               	movlw	0
  7209  010DF2  6E35               	movwf	(btemp+11)^0,c
  7210                           
  7211                           ;stkvar	_main$4041 @ sp[(-19)+0]
  7212  010DF4  0EED               	movlw	-19
  7213  010DF6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  7214  010DFC  0EEE               	movlw	-18
  7215  010DFE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  7216                           
  7217                           ; BSR set to: 0
  7218  010E04  EE23  F029         	lfsr	2,_C+168	;volatile
  7219  010E08  006F FF7B FFE6     	movff	postinc2,postinc1
  7220  010E0E  006F FF7B FFE6     	movff	postinc2,postinc1
  7221  010E14  006F FF7B FFE6     	movff	postinc2,postinc1
  7222  010E1A  006F FF7B FFE6     	movff	postinc2,postinc1
  7223                           
  7224                           ;stkvar	_main$4041 @ sp[(-23)+0]
  7225  010E20  0EE9               	movlw	-23
  7226  010E22  006F FF8F FFE6     	movff	plusw1,postinc1
  7227  010E28  006F FF8F FFE6     	movff	plusw1,postinc1
  7228  010E2E  0E6F               	movlw	low STR_39
  7229  010E30  6EE6               	movwf	postinc1,c
  7230  010E32  0EFC               	movlw	high STR_39
  7231  010E34  6EE6               	movwf	postinc1,c
  7232  010E36  0E01               	movlw	1
  7233  010E38  6EE6               	movwf	postinc1,c
  7234  010E3A  0E00               	movlw	0
  7235  010E3C  6EE6               	movwf	postinc1,c
  7236  010E3E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7237  010E42  0060  F0AB  FFE6   	movff	btemp,postinc1
  7238  010E48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7239  010E4E  0E0A               	movlw	10
  7240  010E50  6EE6               	movwf	postinc1,c
  7241  010E52  ECE5  F0FE         	call	_sprintf	;wreg free
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;main.c: 416:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f         ", C.loadkw);
  7245  010E56  EE23  F031         	lfsr	2,_C+176	;volatile
  7246  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7247  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  7248  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  7249  010E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  7250  010E72  0E58               	movlw	low STR_40
  7251  010E74  6EE6               	movwf	postinc1,c
  7252  010E76  0EFC               	movlw	high STR_40
  7253  010E78  6EE6               	movwf	postinc1,c
  7254  010E7A  0E01               	movlw	1
  7255  010E7C  6EE6               	movwf	postinc1,c
  7256  010E7E  0E01               	movlw	1
  7257  010E80  6EE6               	movwf	postinc1,c
  7258  010E82  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7259  010E86  0060  F0AB  FFE6   	movff	btemp,postinc1
  7260  010E8C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7261  010E92  0E08               	movlw	8
  7262  010E94  6EE6               	movwf	postinc1,c
  7263  010E96  ECE5  F0FE         	call	_sprintf	;wreg free
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;main.c: 417:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f         ", C.invkw);
  7267  010E9A  EE23  F02D         	lfsr	2,_C+172	;volatile
  7268  010E9E  006F FF7B FFE6     	movff	postinc2,postinc1
  7269  010EA4  006F FF7B FFE6     	movff	postinc2,postinc1
  7270  010EAA  006F FF7B FFE6     	movff	postinc2,postinc1
  7271  010EB0  006F FF7B FFE6     	movff	postinc2,postinc1
  7272  010EB6  0E41               	movlw	low STR_41
  7273  010EB8  6EE6               	movwf	postinc1,c
  7274  010EBA  0EFC               	movlw	high STR_41
  7275  010EBC  6EE6               	movwf	postinc1,c
  7276  010EBE  0E01               	movlw	1
  7277  010EC0  6EE6               	movwf	postinc1,c
  7278  010EC2  0E02               	movlw	2
  7279  010EC4  6EE6               	movwf	postinc1,c
  7280  010EC6  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7281  010ECA  0060  F0AB  FFE6   	movff	btemp,postinc1
  7282  010ED0  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7283  010ED6  0E08               	movlw	8
  7284  010ED8  6EE6               	movwf	postinc1,c
  7285  010EDA  ECE5  F0FE         	call	_sprintf	;wreg free
  7286                           
  7287                           ;main.c: 418:      break;
  7288  010EDE  D33C               	goto	l17738
  7289  010EE0                     l1499:
  7290                           
  7291                           ; BSR set to: 1
  7292                           ;main.c: 420:      V.calib = 0;
  7293  010EE0  0102               	movlb	2	; () banked
  7294  010EE2  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7295                           
  7296                           ; BSR set to: 2
  7297                           ;main.c: 421:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f     ", C.calc[V_PV], 
      +                          C.calc[C_PV]);
  7298  010EE4  EE22  F385         	lfsr	2,_C+4	;volatile
  7299  010EE8  006F FF7B FFE6     	movff	postinc2,postinc1
  7300  010EEE  006F FF7B FFE6     	movff	postinc2,postinc1
  7301  010EF4  006F FF7B FFE6     	movff	postinc2,postinc1
  7302  010EFA  006F FF7B FFE6     	movff	postinc2,postinc1
  7303  010F00  EE22  F395         	lfsr	2,_C+20	;volatile
  7304  010F04  006F FF7B FFE6     	movff	postinc2,postinc1
  7305  010F0A  006F FF7B FFE6     	movff	postinc2,postinc1
  7306  010F10  006F FF7B FFE6     	movff	postinc2,postinc1
  7307  010F16  006F FF7B FFE6     	movff	postinc2,postinc1
  7308  010F1C  0E10               	movlw	low STR_42
  7309  010F1E  6EE6               	movwf	postinc1,c
  7310  010F20  0EFD               	movlw	high STR_42
  7311  010F22  6EE6               	movwf	postinc1,c
  7312  010F24  0E00               	movlw	0
  7313  010F26  6EE6               	movwf	postinc1,c
  7314  010F28  0E00               	movlw	0
  7315  010F2A  6EE6               	movwf	postinc1,c
  7316  010F2C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7317  010F30  0060  F0AB  FFE6   	movff	btemp,postinc1
  7318  010F36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7319  010F3C  0E0C               	movlw	12
  7320  010F3E  6EE6               	movwf	postinc1,c
  7321  010F40  ECE5  F0FE         	call	_sprintf	;wreg free
  7322                           
  7323                           ;main.c: 422:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f     ", C.calc[V_BAT],
      +                           C.calc[C_BATT]);
  7324  010F44  EE22  F381         	lfsr	2,_C
  7325  010F48  006F FF7B FFE6     	movff	postinc2,postinc1
  7326  010F4E  006F FF7B FFE6     	movff	postinc2,postinc1
  7327  010F54  006F FF7B FFE6     	movff	postinc2,postinc1
  7328  010F5A  006F FF7B FFE6     	movff	postinc2,postinc1
  7329  010F60  EE22  F391         	lfsr	2,_C+16	;volatile
  7330  010F64  006F FF7B FFE6     	movff	postinc2,postinc1
  7331  010F6A  006F FF7B FFE6     	movff	postinc2,postinc1
  7332  010F70  006F FF7B FFE6     	movff	postinc2,postinc1
  7333  010F76  006F FF7B FFE6     	movff	postinc2,postinc1
  7334  010F7C  0EE2               	movlw	low STR_43
  7335  010F7E  6EE6               	movwf	postinc1,c
  7336  010F80  0EFC               	movlw	high STR_43
  7337  010F82  6EE6               	movwf	postinc1,c
  7338  010F84  0E00               	movlw	0
  7339  010F86  6EE6               	movwf	postinc1,c
  7340  010F88  0E01               	movlw	1
  7341  010F8A  6EE6               	movwf	postinc1,c
  7342  010F8C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7343  010F90  0060  F0AB  FFE6   	movff	btemp,postinc1
  7344  010F96  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7345  010F9C  0E0C               	movlw	12
  7346  010F9E  6EE6               	movwf	postinc1,c
  7347  010FA0  ECE5  F0FE         	call	_sprintf	;wreg free
  7348                           
  7349                           ;main.c: 423:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f     ", C.calc[V_CC], 
      +                          C.c_load);
  7350  010FA4  EE22  F3C1         	lfsr	2,_C+64	;volatile
  7351  010FA8  006F FF7B FFE6     	movff	postinc2,postinc1
  7352  010FAE  006F FF7B FFE6     	movff	postinc2,postinc1
  7353  010FB4  006F FF7B FFE6     	movff	postinc2,postinc1
  7354  010FBA  006F FF7B FFE6     	movff	postinc2,postinc1
  7355  010FC0  EE22  F389         	lfsr	2,_C+8	;volatile
  7356  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  7357  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  7358  010FD0  006F FF7B FFE6     	movff	postinc2,postinc1
  7359  010FD6  006F FF7B FFE6     	movff	postinc2,postinc1
  7360  010FDC  0EF9               	movlw	low STR_44
  7361  010FDE  6EE6               	movwf	postinc1,c
  7362  010FE0  0EFC               	movlw	high STR_44
  7363  010FE2  6EE6               	movwf	postinc1,c
  7364  010FE4  0E00               	movlw	0
  7365  010FE6  6EE6               	movwf	postinc1,c
  7366  010FE8  0E02               	movlw	2
  7367  010FEA  6EE6               	movwf	postinc1,c
  7368  010FEC  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7369  010FF0  0060  F0AB  FFE6   	movff	btemp,postinc1
  7370  010FF6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7371  010FFC  0E0C               	movlw	12
  7372  010FFE  6EE6               	movwf	postinc1,c
  7373  011000  ECE5  F0FE         	call	_sprintf	;wreg free
  7374                           
  7375                           ;main.c: 425:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f         ", C.bkwi);
  7376  011004  EE23  F021         	lfsr	2,_C+160	;volatile
  7377  011008  006F FF7B FFE6     	movff	postinc2,postinc1
  7378  01100E  006F FF7B FFE6     	movff	postinc2,postinc1
  7379  011014  006F FF7B FFE6     	movff	postinc2,postinc1
  7380  01101A  006F FF7B FFE6     	movff	postinc2,postinc1
  7381  011020  0EFC               	movlw	low STR_45
  7382  011022  6EE6               	movwf	postinc1,c
  7383  011024  0EFB               	movlw	high STR_45
  7384  011026  6EE6               	movwf	postinc1,c
  7385  011028  0E01               	movlw	1
  7386  01102A  6EE6               	movwf	postinc1,c
  7387  01102C  0E00               	movlw	0
  7388  01102E  6EE6               	movwf	postinc1,c
  7389  011030  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7390  011034  0060  F0AB  FFE6   	movff	btemp,postinc1
  7391  01103A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7392  011040  0E08               	movlw	8
  7393  011042  6EE6               	movwf	postinc1,c
  7394  011044  ECE5  F0FE         	call	_sprintf	;wreg free
  7395                           
  7396                           ;main.c: 426:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f         ", C.bkwo);
  7397  011048  EE23  F025         	lfsr	2,_C+164	;volatile
  7398  01104C  006F FF7B FFE6     	movff	postinc2,postinc1
  7399  011052  006F FF7B FFE6     	movff	postinc2,postinc1
  7400  011058  006F FF7B FFE6     	movff	postinc2,postinc1
  7401  01105E  006F FF7B FFE6     	movff	postinc2,postinc1
  7402  011064  0E13               	movlw	low STR_46
  7403  011066  6EE6               	movwf	postinc1,c
  7404  011068  0EFC               	movlw	high STR_46
  7405  01106A  6EE6               	movwf	postinc1,c
  7406  01106C  0E01               	movlw	1
  7407  01106E  6EE6               	movwf	postinc1,c
  7408  011070  0E01               	movlw	1
  7409  011072  6EE6               	movwf	postinc1,c
  7410  011074  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7411  011078  0060  F0AB  FFE6   	movff	btemp,postinc1
  7412  01107E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7413  011084  0E08               	movlw	8
  7414  011086  6EE6               	movwf	postinc1,c
  7415  011088  ECE5  F0FE         	call	_sprintf	;wreg free
  7416                           
  7417                           ;main.c: 427:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f         ", C.bkwi + C.bkw
      +                          o);
  7418  01108C  EE23  F025         	lfsr	2,_C+164	;volatile
  7419  011090  006F FF7B FFE6     	movff	postinc2,postinc1
  7420  011096  006F FF7B FFE6     	movff	postinc2,postinc1
  7421  01109C  006F FF7B FFE6     	movff	postinc2,postinc1
  7422  0110A2  006F FF7B FFE6     	movff	postinc2,postinc1
  7423  0110A8  EE23  F021         	lfsr	2,_C+160	;volatile
  7424  0110AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7425  0110B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7426  0110B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7427  0110BE  006F FF7B FFE6     	movff	postinc2,postinc1
  7428  0110C4  EC47  F0B7         	call	___fladd	;wreg free
  7429  0110C8  0060  F0AB  FFE6   	movff	btemp,postinc1
  7430  0110CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7431  0110D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  7432  0110DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  7433  0110E0  0E2A               	movlw	low STR_47
  7434  0110E2  6EE6               	movwf	postinc1,c
  7435  0110E4  0EFC               	movlw	high STR_47
  7436  0110E6  6EE6               	movwf	postinc1,c
  7437  0110E8  0E01               	movlw	1
  7438  0110EA  6EE6               	movwf	postinc1,c
  7439  0110EC  0E02               	movlw	2
  7440  0110EE  6EE6               	movwf	postinc1,c
  7441  0110F0  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7442  0110F4  0060  F0AB  FFE6   	movff	btemp,postinc1
  7443  0110FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7444  011100  0E08               	movlw	8
  7445  011102  6EE6               	movwf	postinc1,c
  7446  011104  ECE5  F0FE         	call	_sprintf	;wreg free
  7447                           
  7448                           ;main.c: 428:      break;
  7449  011108  D227               	goto	l17738
  7450  01110A                     l1500:
  7451                           
  7452                           ; BSR set to: 1
  7453                           ;main.c: 430:      V.calib = 0;
  7454  01110A  0102               	movlb	2	; () banked
  7455  01110C  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  7456                           
  7457                           ; BSR set to: 2
  7458                           ;main.c: 431:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f         ", C.p_bat);
  7459  01110E  EE23  F001         	lfsr	2,_C+128	;volatile
  7460  011112  006F FF7B FFE6     	movff	postinc2,postinc1
  7461  011118  006F FF7B FFE6     	movff	postinc2,postinc1
  7462  01111E  006F FF7B FFE6     	movff	postinc2,postinc1
  7463  011124  006F FF7B FFE6     	movff	postinc2,postinc1
  7464  01112A  0E57               	movlw	low STR_48
  7465  01112C  6EE6               	movwf	postinc1,c
  7466  01112E  0EFB               	movlw	high STR_48
  7467  011130  6EE6               	movwf	postinc1,c
  7468  011132  0E00               	movlw	0
  7469  011134  6EE6               	movwf	postinc1,c
  7470  011136  0E00               	movlw	0
  7471  011138  6EE6               	movwf	postinc1,c
  7472  01113A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7473  01113E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7474  011144  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7475  01114A  0E08               	movlw	8
  7476  01114C  6EE6               	movwf	postinc1,c
  7477  01114E  ECE5  F0FE         	call	_sprintf	;wreg free
  7478                           
  7479                           ;main.c: 432:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f       ", C.dynamic_ah,
      +                           C.pv_ah);
  7480  011152  EE23  F015         	lfsr	2,_C+148	;volatile
  7481  011156  006F FF7B FFE6     	movff	postinc2,postinc1
  7482  01115C  006F FF7B FFE6     	movff	postinc2,postinc1
  7483  011162  006F FF7B FFE6     	movff	postinc2,postinc1
  7484  011168  006F FF7B FFE6     	movff	postinc2,postinc1
  7485  01116E  EE23  F011         	lfsr	2,_C+144	;volatile
  7486  011172  006F FF7B FFE6     	movff	postinc2,postinc1
  7487  011178  006F FF7B FFE6     	movff	postinc2,postinc1
  7488  01117E  006F FF7B FFE6     	movff	postinc2,postinc1
  7489  011184  006F FF7B FFE6     	movff	postinc2,postinc1
  7490  01118A  0E9F               	movlw	low STR_49
  7491  01118C  6EE6               	movwf	postinc1,c
  7492  01118E  0EFB               	movlw	high STR_49
  7493  011190  6EE6               	movwf	postinc1,c
  7494  011192  0E00               	movlw	0
  7495  011194  6EE6               	movwf	postinc1,c
  7496  011196  0E01               	movlw	1
  7497  011198  6EE6               	movwf	postinc1,c
  7498  01119A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7499  01119E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7500  0111A4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7501  0111AA  0E0C               	movlw	12
  7502  0111AC  6EE6               	movwf	postinc1,c
  7503  0111AE  ECE5  F0FE         	call	_sprintf	;wreg free
  7504                           
  7505                           ;main.c: 433:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f        ", spinner
      +                          s(5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  7506  0111B2  EE22  F391         	lfsr	2,_C+16	;volatile
  7507  0111B6  006F FF7B FFE6     	movff	postinc2,postinc1
  7508  0111BC  006F FF7B FFE6     	movff	postinc2,postinc1
  7509  0111C2  006F FF7B FFE6     	movff	postinc2,postinc1
  7510  0111C8  006F FF7B FFE6     	movff	postinc2,postinc1
  7511  0111CE  EE23  F035         	lfsr	2,_C+180	;volatile
  7512  0111D2  006F FF78  F034    	movff	postinc2,btemp+10
  7513  0111D8  006F FF74  F035    	movff	postdec2,btemp+11
  7514  0111DE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7515  0111E4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7516  0111EA  EE23  F037         	lfsr	2,_C+182	;volatile
  7517  0111EE  006F FF78  F034    	movff	postinc2,btemp+10
  7518  0111F4  006F FF74  F035    	movff	postdec2,btemp+11
  7519  0111FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7520  011200  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7521  011206  0E00               	movlw	0
  7522  011208  6EE6               	movwf	postinc1,c
  7523  01120A  0E05               	movlw	5
  7524  01120C  6EE6               	movwf	postinc1,c
  7525  01120E  EC5B  F000         	call	_spinners	;wreg free
  7526  011212  502A               	movf	btemp^0,w,c
  7527  011214  6EE6               	movwf	postinc1,c
  7528  011216  0E00               	movlw	0
  7529  011218  6EE6               	movwf	postinc1,c
  7530  01121A  0E9B               	movlw	low STR_50
  7531  01121C  6EE6               	movwf	postinc1,c
  7532  01121E  0EFA               	movlw	high STR_50
  7533  011220  6EE6               	movwf	postinc1,c
  7534  011222  0E00               	movlw	0
  7535  011224  6EE6               	movwf	postinc1,c
  7536  011226  0E02               	movlw	2
  7537  011228  6EE6               	movwf	postinc1,c
  7538  01122A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7539  01122E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7540  011234  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7541  01123A  0E0E               	movlw	14
  7542  01123C  6EE6               	movwf	postinc1,c
  7543  01123E  ECE5  F0FE         	call	_sprintf	;wreg free
  7544                           
  7545                           ;main.c: 435:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f             ", C.esr);
  7546  011242  EE23  F009         	lfsr	2,_C+136	;volatile
  7547  011246  006F FF7B FFE6     	movff	postinc2,postinc1
  7548  01124C  006F FF7B FFE6     	movff	postinc2,postinc1
  7549  011252  006F FF7B FFE6     	movff	postinc2,postinc1
  7550  011258  006F FF7B FFE6     	movff	postinc2,postinc1
  7551  01125E  0E3F               	movlw	low STR_51
  7552  011260  6EE6               	movwf	postinc1,c
  7553  011262  0EFB               	movlw	high STR_51
  7554  011264  6EE6               	movwf	postinc1,c
  7555  011266  0E01               	movlw	1
  7556  011268  6EE6               	movwf	postinc1,c
  7557  01126A  0E00               	movlw	0
  7558  01126C  6EE6               	movwf	postinc1,c
  7559  01126E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7560  011272  0060  F0AB  FFE6   	movff	btemp,postinc1
  7561  011278  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7562  01127E  0E08               	movlw	8
  7563  011280  6EE6               	movwf	postinc1,c
  7564  011282  ECE5  F0FE         	call	_sprintf	;wreg free
  7565                           
  7566                           ;main.c: 436:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f         ", C.bv_one_load
      +                          , C.load_i1);
  7567  011286  EE23  F09B         	lfsr	2,_C+282	;volatile
  7568  01128A  006F FF7B FFE6     	movff	postinc2,postinc1
  7569  011290  006F FF7B FFE6     	movff	postinc2,postinc1
  7570  011296  006F FF7B FFE6     	movff	postinc2,postinc1
  7571  01129C  006F FF7B FFE6     	movff	postinc2,postinc1
  7572  0112A2  EE23  F0A7         	lfsr	2,_C+294	;volatile
  7573  0112A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7574  0112AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7575  0112B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7576  0112B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7577  0112BE  0E6F               	movlw	low STR_52
  7578  0112C0  6EE6               	movwf	postinc1,c
  7579  0112C2  0EFB               	movlw	high STR_52
  7580  0112C4  6EE6               	movwf	postinc1,c
  7581  0112C6  0E01               	movlw	1
  7582  0112C8  6EE6               	movwf	postinc1,c
  7583  0112CA  0E01               	movlw	1
  7584  0112CC  6EE6               	movwf	postinc1,c
  7585  0112CE  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7586  0112D2  0060  F0AB  FFE6   	movff	btemp,postinc1
  7587  0112D8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7588  0112DE  0E0C               	movlw	12
  7589  0112E0  6EE6               	movwf	postinc1,c
  7590  0112E2  ECE5  F0FE         	call	_sprintf	;wreg free
  7591                           
  7592                           ;main.c: 437:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f         ", C.bv_full_loa
      +                          d, C.load_i2);
  7593  0112E6  EE23  F09F         	lfsr	2,_C+286	;volatile
  7594  0112EA  006F FF7B FFE6     	movff	postinc2,postinc1
  7595  0112F0  006F FF7B FFE6     	movff	postinc2,postinc1
  7596  0112F6  006F FF7B FFE6     	movff	postinc2,postinc1
  7597  0112FC  006F FF7B FFE6     	movff	postinc2,postinc1
  7598  011302  EE23  F0AB         	lfsr	2,_C+298	;volatile
  7599  011306  006F FF7B FFE6     	movff	postinc2,postinc1
  7600  01130C  006F FF7B FFE6     	movff	postinc2,postinc1
  7601  011312  006F FF7B FFE6     	movff	postinc2,postinc1
  7602  011318  006F FF7B FFE6     	movff	postinc2,postinc1
  7603  01131E  0E87               	movlw	low STR_53
  7604  011320  6EE6               	movwf	postinc1,c
  7605  011322  0EFB               	movlw	high STR_53
  7606  011324  6EE6               	movwf	postinc1,c
  7607  011326  0E01               	movlw	1
  7608  011328  6EE6               	movwf	postinc1,c
  7609  01132A  0E02               	movlw	2
  7610  01132C  6EE6               	movwf	postinc1,c
  7611  01132E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7612  011332  0060  F0AB  FFE6   	movff	btemp,postinc1
  7613  011338  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7614  01133E  0E0C               	movlw	12
  7615  011340  6EE6               	movwf	postinc1,c
  7616  011342  ECE5  F0FE         	call	_sprintf	;wreg free
  7617                           
  7618                           ;main.c: 438:      break;
  7619  011346  D108               	goto	l17738
  7620  011348                     l17722:
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;main.c: 440:      if (!V.calib) {
  7624  011348  0102               	movlb	2	; () banked
  7625  01134A  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
  7626  01134C  A4D8               	btfss	status,2,c
  7627  01134E  D02D               	goto	l17726
  7628                           
  7629                           ; BSR set to: 2
  7630                           ;main.c: 441:       lp_filter(0.0, i, -1);
  7631  011350  0EFF               	movlw	255
  7632  011352  6EE6               	movwf	postinc1,c
  7633                           
  7634                           ;stkvar	_i @ sp[(-20)+16]
  7635  011354  0EFC               	movlw	-4
  7636  011356  50E3               	movf	plusw1,w,c
  7637  011358  6EE6               	movwf	postinc1,c
  7638  01135A  0E00               	movlw	0
  7639  01135C  6EE6               	movwf	postinc1,c
  7640  01135E  0E00               	movlw	0
  7641  011360  6EE6               	movwf	postinc1,c
  7642  011362  0E00               	movlw	0
  7643  011364  6EE6               	movwf	postinc1,c
  7644  011366  0E00               	movlw	0
  7645  011368  6EE6               	movwf	postinc1,c
  7646  01136A  EC82  F0EE         	call	_lp_filter	;wreg free
  7647                           
  7648                           ;main.c: 442:       lp_filter(0.0, j, -1);
  7649  01136E  0EFF               	movlw	255
  7650  011370  6EE6               	movwf	postinc1,c
  7651                           
  7652                           ;stkvar	_j @ sp[(-20)+15]
  7653  011372  0EFB               	movlw	-5
  7654  011374  50E3               	movf	plusw1,w,c
  7655  011376  6EE6               	movwf	postinc1,c
  7656  011378  0E00               	movlw	0
  7657  01137A  6EE6               	movwf	postinc1,c
  7658  01137C  0E00               	movlw	0
  7659  01137E  6EE6               	movwf	postinc1,c
  7660  011380  0E00               	movlw	0
  7661  011382  6EE6               	movwf	postinc1,c
  7662  011384  0E00               	movlw	0
  7663  011386  6EE6               	movwf	postinc1,c
  7664  011388  EC82  F0EE         	call	_lp_filter	;wreg free
  7665                           
  7666                           ;main.c: 443:       lp_filter(0.0, k, -1);
  7667  01138C  0EFF               	movlw	255
  7668  01138E  6EE6               	movwf	postinc1,c
  7669                           
  7670                           ;stkvar	_k @ sp[(-20)+14]
  7671  011390  0EFA               	movlw	-6
  7672  011392  50E3               	movf	plusw1,w,c
  7673  011394  6EE6               	movwf	postinc1,c
  7674  011396  0E00               	movlw	0
  7675  011398  6EE6               	movwf	postinc1,c
  7676  01139A  0E00               	movlw	0
  7677  01139C  6EE6               	movwf	postinc1,c
  7678  01139E  0E00               	movlw	0
  7679  0113A0  6EE6               	movwf	postinc1,c
  7680  0113A2  0E00               	movlw	0
  7681  0113A4  6EE6               	movwf	postinc1,c
  7682  0113A6  EC82  F0EE         	call	_lp_filter	;wreg free
  7683  0113AA                     l17726:
  7684                           
  7685                           ;main.c: 445:      V.calib = 1;
  7686  0113AA  0E01               	movlw	1
  7687  0113AC  0102               	movlb	2	; () banked
  7688  0113AE  6FB0               	movwf	(_V+169)& (0+255),b	;volatile
  7689                           
  7690                           ; BSR set to: 2
  7691                           ;main.c: 446:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  7692                           ;stkvar	_inp_index @ sp[(-19)+13]
  7693  0113B0  0EFA               	movlw	-6
  7694  0113B2  50E3               	movf	plusw1,w,c
  7695  0113B4  6EE6               	movwf	postinc1,c
  7696  0113B6  0E00               	movlw	0
  7697  0113B8  6EE6               	movwf	postinc1,c
  7698                           
  7699                           ;stkvar	_i @ sp[(-21)+16]
  7700  0113BA  0EFB               	movlw	-5
  7701  0113BC  50E3               	movf	plusw1,w,c
  7702  0113BE  0D04               	mullw	4
  7703  0113C0  0E81               	movlw	low _C
  7704  0113C2  24F3               	addwf	243,w,c
  7705  0113C4  6ED9               	movwf	fsr2l,c
  7706  0113C6  0E0B               	movlw	high _C
  7707  0113C8  20F4               	addwfc	prodh,w,c
  7708  0113CA  6EDA               	movwf	fsr2h,c
  7709  0113CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7710  0113D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7711  0113D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7712  0113DE  006F FF7B FFE6     	movff	postinc2,postinc1
  7713                           
  7714                           ;stkvar	_i @ sp[(-25)+16]
  7715  0113E4  0EF7               	movlw	-9
  7716  0113E6  50E3               	movf	plusw1,w,c
  7717  0113E8  6EE6               	movwf	postinc1,c
  7718  0113EA  EC16  F015         	call	_get_raw_result	;wreg free
  7719  0113EE  0060  F0AB  FFE6   	movff	btemp,postinc1
  7720  0113F4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7721  0113FA  0E87               	movlw	low STR_54
  7722  0113FC  6EE6               	movwf	postinc1,c
  7723  0113FE  0EFE               	movlw	high STR_54
  7724  011400  6EE6               	movwf	postinc1,c
  7725  011402  0E00               	movlw	0
  7726  011404  6EE6               	movwf	postinc1,c
  7727  011406  0E00               	movlw	0
  7728  011408  6EE6               	movwf	postinc1,c
  7729  01140A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7730  01140E  0060  F0AB  FFE6   	movff	btemp,postinc1
  7731  011414  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7732  01141A  0E0C               	movlw	12
  7733  01141C  6EE6               	movwf	postinc1,c
  7734  01141E  ECE5  F0FE         	call	_sprintf	;wreg free
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;main.c: 447:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  7738                           ;stkvar	_inp_index @ sp[(-19)+13]
  7739  011422  0EFA               	movlw	-6
  7740  011424  50E3               	movf	plusw1,w,c
  7741  011426  6E34               	movwf	(btemp+10)^0,c
  7742  011428  6A35               	clrf	(btemp+11)^0,c
  7743  01142A  0E01               	movlw	1
  7744  01142C  2634               	addwf	(btemp+10)^0,f,c
  7745  01142E  0E00               	movlw	0
  7746  011430  2235               	addwfc	(btemp+11)^0,f,c
  7747  011432  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7748  011438  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7749                           
  7750                           ;stkvar	_j @ sp[(-21)+15]
  7751  01143E  0EFA               	movlw	-6
  7752  011440  50E3               	movf	plusw1,w,c
  7753  011442  0D04               	mullw	4
  7754  011444  0E81               	movlw	low _C
  7755  011446  24F3               	addwf	243,w,c
  7756  011448  6ED9               	movwf	fsr2l,c
  7757  01144A  0E0B               	movlw	high _C
  7758  01144C  20F4               	addwfc	prodh,w,c
  7759  01144E  6EDA               	movwf	fsr2h,c
  7760  011450  006F FF7B FFE6     	movff	postinc2,postinc1
  7761  011456  006F FF7B FFE6     	movff	postinc2,postinc1
  7762  01145C  006F FF7B FFE6     	movff	postinc2,postinc1
  7763  011462  006F FF7B FFE6     	movff	postinc2,postinc1
  7764                           
  7765                           ;stkvar	_j @ sp[(-25)+15]
  7766  011468  0EF6               	movlw	-10
  7767  01146A  50E3               	movf	plusw1,w,c
  7768  01146C  6EE6               	movwf	postinc1,c
  7769  01146E  EC16  F015         	call	_get_raw_result	;wreg free
  7770  011472  0060  F0AB  FFE6   	movff	btemp,postinc1
  7771  011478  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7772  01147E  0E87               	movlw	low STR_54
  7773  011480  6EE6               	movwf	postinc1,c
  7774  011482  0EFE               	movlw	high STR_54
  7775  011484  6EE6               	movwf	postinc1,c
  7776  011486  0E00               	movlw	0
  7777  011488  6EE6               	movwf	postinc1,c
  7778  01148A  0E01               	movlw	1
  7779  01148C  6EE6               	movwf	postinc1,c
  7780  01148E  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7781  011492  0060  F0AB  FFE6   	movff	btemp,postinc1
  7782  011498  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7783  01149E  0E0C               	movlw	12
  7784  0114A0  6EE6               	movwf	postinc1,c
  7785  0114A2  ECE5  F0FE         	call	_sprintf	;wreg free
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;main.c: 448:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  7789                           ;stkvar	_inp_index @ sp[(-19)+13]
  7790  0114A6  0EFA               	movlw	-6
  7791  0114A8  50E3               	movf	plusw1,w,c
  7792  0114AA  6E34               	movwf	(btemp+10)^0,c
  7793  0114AC  6A35               	clrf	(btemp+11)^0,c
  7794  0114AE  0E02               	movlw	2
  7795  0114B0  2634               	addwf	(btemp+10)^0,f,c
  7796  0114B2  0E00               	movlw	0
  7797  0114B4  2235               	addwfc	(btemp+11)^0,f,c
  7798  0114B6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  7799  0114BC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  7800                           
  7801                           ;stkvar	_k @ sp[(-21)+14]
  7802  0114C2  0EF9               	movlw	-7
  7803  0114C4  50E3               	movf	plusw1,w,c
  7804  0114C6  0D04               	mullw	4
  7805  0114C8  0E81               	movlw	low _C
  7806  0114CA  24F3               	addwf	243,w,c
  7807  0114CC  6ED9               	movwf	fsr2l,c
  7808  0114CE  0E0B               	movlw	high _C
  7809  0114D0  20F4               	addwfc	prodh,w,c
  7810  0114D2  6EDA               	movwf	fsr2h,c
  7811  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  7812  0114DA  006F FF7B FFE6     	movff	postinc2,postinc1
  7813  0114E0  006F FF7B FFE6     	movff	postinc2,postinc1
  7814  0114E6  006F FF7B FFE6     	movff	postinc2,postinc1
  7815                           
  7816                           ;stkvar	_k @ sp[(-25)+14]
  7817  0114EC  0EF5               	movlw	-11
  7818  0114EE  50E3               	movf	plusw1,w,c
  7819  0114F0  6EE6               	movwf	postinc1,c
  7820  0114F2  EC16  F015         	call	_get_raw_result	;wreg free
  7821  0114F6  0060  F0AB  FFE6   	movff	btemp,postinc1
  7822  0114FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7823  011502  0E87               	movlw	low STR_54
  7824  011504  6EE6               	movwf	postinc1,c
  7825  011506  0EFE               	movlw	high STR_54
  7826  011508  6EE6               	movwf	postinc1,c
  7827  01150A  0E00               	movlw	0
  7828  01150C  6EE6               	movwf	postinc1,c
  7829  01150E  0E02               	movlw	2
  7830  011510  6EE6               	movwf	postinc1,c
  7831  011512  EC0E  F013         	call	_get_vterm_ptr	;wreg free
  7832  011516  0060  F0AB  FFE6   	movff	btemp,postinc1
  7833  01151C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  7834  011522  0E0C               	movlw	12
  7835  011524  6EE6               	movwf	postinc1,c
  7836  011526  ECE5  F0FE         	call	_sprintf	;wreg free
  7837                           
  7838                           ;main.c: 449:      break;
  7839  01152A  D016               	goto	l17738
  7840  01152C                     l17736:
  7841  01152C  0101               	movlb	1	; () banked
  7842  01152E  519B               	movf	_H& (0+255),w,b
  7843  011530  6E34               	movwf	(btemp+10)^0,c
  7844  011532  6A35               	clrf	(btemp+11)^0,c
  7845                           
  7846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7847                           ; Switch size 1, requested type "simple"
  7848                           ; Number of cases is 1, Range of values is 0 to 0
  7849                           ; switch strategies available:
  7850                           ; Name         Instructions Cycles
  7851                           ; simple_byte            4     3 (average)
  7852                           ;	Chosen strategy is simple_byte
  7853  011534  5035               	movf	(btemp+11)^0,w,c
  7854  011536  0A00               	xorlw	0	; case 0
  7855  011538  A4D8               	btfss	status,2,c
  7856  01153A  D00E               	goto	l17738
  7857                           
  7858                           ; BSR set to: 1
  7859                           ; Switch size 1, requested type "simple"
  7860                           ; Number of cases is 4, Range of values is 0 to 3
  7861                           ; switch strategies available:
  7862                           ; Name         Instructions Cycles
  7863                           ; simple_byte           13     7 (average)
  7864                           ;	Chosen strategy is simple_byte
  7865  01153C  5034               	movf	(btemp+10)^0,w,c
  7866  01153E  0A00               	xorlw	0	; case 0
  7867  011540  B4D8               	btfsc	status,2,c
  7868  011542  D4CE               	goto	l1499
  7869  011544  0A01               	xorlw	1	; case 1
  7870  011546  B4D8               	btfsc	status,2,c
  7871  011548  EF6D  F086         	goto	l1489
  7872  01154C  0A03               	xorlw	3	; case 2
  7873  01154E  B4D8               	btfsc	status,2,c
  7874  011550  D5DC               	goto	l1500
  7875  011552  0A01               	xorlw	1	; case 3
  7876  011554  B4D8               	btfsc	status,2,c
  7877  011556  D6F8               	goto	l17722
  7878  011558                     l17738:
  7879                           
  7880                           ;main.c: 453:     clear_hid_pflags(&H);
  7881  011558  0E9B               	movlw	low _H
  7882  01155A  6EE6               	movwf	postinc1,c
  7883  01155C  0E01               	movlw	high _H
  7884  01155E  6EE6               	movwf	postinc1,c
  7885  011560  ECC7  F00C         	call	_clear_hid_pflags	;wreg free
  7886                           
  7887                           ;main.c: 455:    StartTimer(TMR_DISPLAY, 250);
  7888  011564  0EFA               	movlw	250
  7889  011566  6EE6               	movwf	postinc1,c
  7890  011568  0E00               	movlw	0
  7891  01156A  6EE6               	movwf	postinc1,c
  7892  01156C  0E0A               	movlw	10
  7893  01156E  6EE6               	movwf	postinc1,c
  7894  011570  EC20  F011         	call	_StartTimer	;wreg free
  7895                           
  7896                           ;main.c: 456:    V.enter = check_enter_button(&H);
  7897  011574  0E9B               	movlw	low _H
  7898  011576  6EE6               	movwf	postinc1,c
  7899  011578  0E01               	movlw	high _H
  7900  01157A  6EE6               	movwf	postinc1,c
  7901  01157C  ECBA  F00B         	call	_check_enter_button	;wreg free
  7902  011580  502A               	movf	btemp^0,w,c
  7903  011582  0102               	movlb	2	; () banked
  7904  011584  6FB1               	movwf	(_V+170)& (0+255),b	;volatile
  7905                           
  7906                           ; BSR set to: 2
  7907                           ;main.c: 457:    if (V.enter && (H.hid_display != HID_AUX)) {
  7908  011586  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  7909  011588  B4D8               	btfsc	status,2,c
  7910  01158A  D013               	goto	l17752
  7911                           
  7912                           ; BSR set to: 2
  7913  01158C  0E03               	movlw	3
  7914  01158E  0101               	movlb	1	; () banked
  7915  011590  199B               	xorwf	_H& (0+255),w,b
  7916  011592  B4D8               	btfsc	status,2,c
  7917  011594  D00E               	goto	l17752
  7918                           
  7919                           ; BSR set to: 1
  7920                           ;main.c: 458:     V.enter = 0;
  7921  011596  0102               	movlb	2	; () banked
  7922  011598  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  7923                           
  7924                           ; BSR set to: 2
  7925                           ;main.c: 459:     V.screen = ~V.screen;
  7926  01159A  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7927  01159C  D002               	goto	u17300
  7928  01159E  0E01               	movlw	1
  7929  0115A0  D001               	goto	u17306
  7930  0115A2                     u17300:
  7931  0115A2  0E00               	movlw	0
  7932  0115A4                     u17306:
  7933  0115A4  0AFF               	xorlw	255
  7934  0115A6  6E35               	movwf	(btemp+11)^0,c
  7935  0115A8  51A0               	movf	(_V+153)& (0+255),w,b	;volatile
  7936  0115AA  1835               	xorwf	(btemp+11)^0,w,c
  7937  0115AC  0BFE               	andlw	-2
  7938  0115AE  1835               	xorwf	(btemp+11)^0,w,c
  7939  0115B0  6FA0               	movwf	(_V+153)& (0+255),b	;volatile
  7940  0115B2                     l17752:
  7941                           
  7942                           ;main.c: 461:    set_vterm(V.screen);
  7943  0115B2  0102               	movlb	2	; () banked
  7944  0115B4  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7945  0115B6  D002               	goto	u17310
  7946  0115B8  0E01               	movlw	1
  7947  0115BA  D001               	goto	u17316
  7948  0115BC                     u17310:
  7949  0115BC  0E00               	movlw	0
  7950  0115BE                     u17316:
  7951  0115BE  6EE6               	movwf	postinc1,c
  7952  0115C0  EC87  F015         	call	_set_vterm	;wreg free
  7953                           
  7954                           ;main.c: 462:    update_lcd(V.screen);
  7955  0115C4  0102               	movlb	2	; () banked
  7956  0115C6  A1A0               	btfss	(_V+153)& (0+255),0,b	;volatile
  7957  0115C8  D002               	goto	u17320
  7958  0115CA  0E01               	movlw	1
  7959  0115CC  D001               	goto	u17326
  7960  0115CE                     u17320:
  7961  0115CE  0E00               	movlw	0
  7962  0115D0                     u17326:
  7963  0115D0  6EE6               	movwf	postinc1,c
  7964  0115D2  EC97  F0F7         	call	_update_lcd	;wreg free
  7965                           
  7966                           ;main.c: 463:    display_history();
  7967  0115D6  ECC5  F0DB         	call	_display_history	;wreg free
  7968                           
  7969                           ;main.c: 465:    wait_lcd_done();
  7970  0115DA  EC4E  F016         	call	_wait_lcd_done	;wreg free
  7971                           
  7972                           ; BSR set to: 61
  7973                           ;main.c: 466:    set_dac_a(3.333);
  7974  0115DE  0EDF               	movlw	223
  7975  0115E0  6EE6               	movwf	postinc1,c
  7976  0115E2  0E4F               	movlw	79
  7977  0115E4  6EE6               	movwf	postinc1,c
  7978  0115E6  0E55               	movlw	85
  7979  0115E8  6EE6               	movwf	postinc1,c
  7980  0115EA  0E40               	movlw	64
  7981  0115EC  6EE6               	movwf	postinc1,c
  7982  0115EE  EC61  F012         	call	_set_dac_a	;wreg free
  7983                           
  7984                           ;main.c: 467:    set_dac_b(6.666);
  7985  0115F2  0EDF               	movlw	223
  7986  0115F4  6EE6               	movwf	postinc1,c
  7987  0115F6  0E4F               	movlw	79
  7988  0115F8  6EE6               	movwf	postinc1,c
  7989  0115FA  0ED5               	movlw	213
  7990  0115FC  6EE6               	movwf	postinc1,c
  7991  0115FE  0E40               	movlw	64
  7992  011600  6EE6               	movwf	postinc1,c
  7993  011602  EC47  F012         	call	_set_dac_b	;wreg free
  7994                           
  7995                           ;main.c: 468:    set_dac();
  7996  011606  EC61  F005         	call	_set_dac	;wreg free
  7997  01160A                     l17766:
  7998                           
  7999                           ;main.c: 474:   check_help(V.flipper);
  8000  01160A  0102               	movlb	2	; () banked
  8001  01160C  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
  8002  01160E  6EE6               	movwf	postinc1,c
  8003  011610  EC92  F0EB         	call	_check_help	;wreg free
  8004                           
  8005                           ;main.c: 476:   if (V.enter) {
  8006  011614  0102               	movlb	2	; () banked
  8007  011616  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
  8008  011618  B4D8               	btfsc	status,2,c
  8009  01161A  D062               	goto	l1505
  8010                           
  8011                           ; BSR set to: 2
  8012                           ;main.c: 477:    V.enter = 0;
  8013  01161C  6BB1               	clrf	(_V+170)& (0+255),b	;volatile
  8014                           
  8015                           ;main.c: 478:    V.calib = 0;
  8016  01161E  6BB0               	clrf	(_V+169)& (0+255),b	;volatile
  8017                           
  8018                           ; BSR set to: 2
  8019                           ;main.c: 479:    inp_index += 3;
  8020                           ;stkvar	_inp_index @ sp[(-19)+13]
  8021  011620  0EFA               	movlw	-6
  8022  011622  006F FF8C  F02A    	movff	plusw1,btemp
  8023  011628  0E03               	movlw	3
  8024  01162A  262A               	addwf	btemp^0,f,c
  8025  01162C  0EFA               	movlw	-6
  8026  01162E  0060  F0AB  FFE3   	movff	btemp,plusw1
  8027                           
  8028                           ;main.c: 480:    if (inp_index > 9)
  8029                           ;stkvar	_inp_index @ sp[(-19)+13]
  8030  011634  0EFA               	movlw	-6
  8031  011636  006F FF8C  F02A    	movff	plusw1,btemp
  8032  01163C  0E09               	movlw	9
  8033  01163E  642A               	cpfsgt	btemp^0,c
  8034  011640  D03A               	goto	l17794
  8035                           
  8036                           ; BSR set to: 2
  8037                           ;main.c: 481:     inp_index = 0;
  8038                           ;stkvar	_inp_index @ sp[(-19)+13]
  8039  011642  0EFA               	movlw	-6
  8040  011644  6AE3               	clrf	plusw1,c
  8041  011646  D037               	goto	l17794
  8042  011648                     l17776:
  8043                           
  8044                           ; BSR set to: 2
  8045                           ;main.c: 484:     i = C_BATT;
  8046                           ;stkvar	_i @ sp[(-19)+16]
  8047  011648  0EFD               	movlw	-3
  8048  01164A  6AE3               	clrf	plusw1,c
  8049                           
  8050                           ; BSR set to: 2
  8051                           ;main.c: 485:     j = C_PV;
  8052                           ;stkvar	_j @ sp[(-19)+15]
  8053  01164C  0EFC               	movlw	-4
  8054  01164E  6AE3               	clrf	plusw1,c
  8055  011650  2AE3               	incf	plusw1,f,c
  8056                           
  8057                           ; BSR set to: 2
  8058                           ;main.c: 486:     k = V_CC;
  8059                           ;stkvar	_k @ sp[(-19)+14]
  8060  011652  0EFB               	movlw	-5
  8061  011654  6AE3               	clrf	plusw1,c
  8062  011656  82E3               	bsf	plusw1,1,c
  8063                           
  8064                           ;main.c: 487:     break;
  8065  011658  D043               	goto	l1505
  8066  01165A                     l17782:
  8067                           
  8068                           ; BSR set to: 2
  8069                           ;main.c: 489:     i = V_BAT;
  8070                           ;stkvar	_i @ sp[(-19)+16]
  8071  01165A  0EFD               	movlw	-3
  8072  01165C  6AE3               	clrf	plusw1,c
  8073  01165E  84E3               	bsf	plusw1,2,c
  8074                           
  8075                           ;main.c: 490:     j = V_PV;
  8076                           ;stkvar	_j @ sp[(-19)+15]
  8077  011660  0EFC               	movlw	-4
  8078  011662  6AE3               	clrf	plusw1,c
  8079  011664  80E3               	bsf	plusw1,0,c
  8080  011666  84E3               	bsf	plusw1,2,c	;indir
  8081                           
  8082                           ;main.c: 491:     k = V_CBUS;
  8083                           ;stkvar	_k @ sp[(-19)+14]
  8084  011668  0EFB               	movlw	-5
  8085  01166A  6AE3               	clrf	plusw1,c
  8086  01166C  82E3               	bsf	plusw1,1,c
  8087  01166E  84E3               	bsf	plusw1,2,c	;indir
  8088                           
  8089                           ;main.c: 492:     break;
  8090  011670  D037               	goto	l1505
  8091  011672                     l17784:
  8092                           
  8093                           ; BSR set to: 2
  8094                           ;main.c: 494:     i = V_BBAT;
  8095                           ;stkvar	_i @ sp[(-19)+16]
  8096  011672  0EFD               	movlw	-3
  8097  011674  6AE3               	clrf	plusw1,c
  8098  011676  82E3               	bsf	plusw1,1,c
  8099  011678  86E3               	bsf	plusw1,3,c	;indir
  8100                           
  8101                           ; BSR set to: 2
  8102                           ;main.c: 495:     j = V_TEMP;
  8103  01167A  0E0B               	movlw	11
  8104  01167C  6E35               	movwf	(btemp+11)^0,c
  8105                           
  8106                           ;stkvar	_j @ sp[(-19)+15]
  8107  01167E  0EFC               	movlw	-4
  8108  011680  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8109                           
  8110                           ; BSR set to: 2
  8111                           ;main.c: 496:     k = V_INVERTER;
  8112                           ;stkvar	_k @ sp[(-19)+14]
  8113  011686  0EFB               	movlw	-5
  8114  011688  6AE3               	clrf	plusw1,c
  8115  01168A  84E3               	bsf	plusw1,2,c
  8116  01168C  86E3               	bsf	plusw1,3,c	;indir
  8117                           
  8118                           ;main.c: 497:     break;
  8119  01168E  D028               	goto	l1505
  8120  011690                     l17790:
  8121                           
  8122                           ; BSR set to: 2
  8123                           ;main.c: 499:     i = V_LIGHT_SENSOR;
  8124  011690  0E0D               	movlw	13
  8125  011692  6E35               	movwf	(btemp+11)^0,c
  8126                           
  8127                           ;stkvar	_i @ sp[(-19)+16]
  8128  011694  0EFD               	movlw	-3
  8129  011696  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8130                           
  8131                           ;main.c: 500:     j = V_LIGHT_SENSOR;
  8132  01169C  0E0D               	movlw	13
  8133  01169E  6E35               	movwf	(btemp+11)^0,c
  8134                           
  8135                           ;stkvar	_j @ sp[(-19)+15]
  8136  0116A0  0EFC               	movlw	-4
  8137  0116A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8138                           
  8139                           ;main.c: 501:     k = V_LIGHT_SENSOR;
  8140  0116A8  0E0D               	movlw	13
  8141  0116AA  6E35               	movwf	(btemp+11)^0,c
  8142                           
  8143                           ;stkvar	_k @ sp[(-19)+14]
  8144  0116AC  0EFB               	movlw	-5
  8145  0116AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8146                           
  8147                           ;main.c: 502:     break;
  8148  0116B4  D015               	goto	l1505
  8149  0116B6                     l17794:
  8150                           
  8151                           ; BSR set to: 2
  8152                           ;stkvar	_inp_index @ sp[(-19)+13]
  8153  0116B6  0EFA               	movlw	-6
  8154  0116B8  50E3               	movf	plusw1,w,c
  8155  0116BA  6E34               	movwf	(btemp+10)^0,c
  8156  0116BC  6A35               	clrf	(btemp+11)^0,c
  8157                           
  8158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8159                           ; Switch size 1, requested type "simple"
  8160                           ; Number of cases is 1, Range of values is 0 to 0
  8161                           ; switch strategies available:
  8162                           ; Name         Instructions Cycles
  8163                           ; simple_byte            4     3 (average)
  8164                           ;	Chosen strategy is simple_byte
  8165  0116BE  5035               	movf	(btemp+11)^0,w,c
  8166  0116C0  0A00               	xorlw	0	; case 0
  8167  0116C2  A4D8               	btfss	status,2,c
  8168  0116C4  D00D               	goto	l1505
  8169                           
  8170                           ; BSR set to: 2
  8171                           ; Switch size 1, requested type "simple"
  8172                           ; Number of cases is 4, Range of values is 0 to 9
  8173                           ; switch strategies available:
  8174                           ; Name         Instructions Cycles
  8175                           ; simple_byte           13     7 (average)
  8176                           ;	Chosen strategy is simple_byte
  8177  0116C6  5034               	movf	(btemp+10)^0,w,c
  8178  0116C8  0A00               	xorlw	0	; case 0
  8179  0116CA  B4D8               	btfsc	status,2,c
  8180  0116CC  D7BD               	goto	l17776
  8181  0116CE  0A03               	xorlw	3	; case 3
  8182  0116D0  B4D8               	btfsc	status,2,c
  8183  0116D2  D7C3               	goto	l17782
  8184  0116D4  0A05               	xorlw	5	; case 6
  8185  0116D6  B4D8               	btfsc	status,2,c
  8186  0116D8  D7CC               	goto	l17784
  8187  0116DA  0A0F               	xorlw	15	; case 9
  8188  0116DC  B4D8               	btfsc	status,2,c
  8189  0116DE  D7D8               	goto	l17790
  8190  0116E0                     l1505:
  8191                           
  8192                           ; BSR set to: 2
  8193                           ;main.c: 511:   if (V.set_sequ) {
  8194  0116E0  A19F               	btfss	(_V+152)& (0+255),0,b	;volatile
  8195  0116E2  EFB6  F084         	goto	l17628
  8196                           
  8197                           ; BSR set to: 2
  8198                           ;main.c: 512:    if (TimerDone(TMR_INFO)) {
  8199  0116E6  0E07               	movlw	7
  8200  0116E8  6EE6               	movwf	postinc1,c
  8201  0116EA  EC91  F013         	call	_TimerDone	;wreg free
  8202  0116EE  502A               	movf	btemp^0,w,c
  8203  0116F0  B4D8               	btfsc	status,2,c
  8204  0116F2  D00C               	goto	l17804
  8205                           
  8206                           ;main.c: 513:     V.set_sequ = 0;
  8207  0116F4  0102               	movlb	2	; () banked
  8208  0116F6  919F               	bcf	(_V+152)& (0+255),0,b	;volatile
  8209                           
  8210                           ; BSR set to: 2
  8211                           ;main.c: 514:     set_vterm(0);
  8212  0116F8  0E00               	movlw	0
  8213  0116FA  6EE6               	movwf	postinc1,c
  8214  0116FC  EC87  F015         	call	_set_vterm	;wreg free
  8215                           
  8216                           ;main.c: 515:     update_lcd(0);
  8217  011700  0E00               	movlw	0
  8218  011702  6EE6               	movwf	postinc1,c
  8219  011704  EC97  F0F7         	call	_update_lcd	;wreg free
  8220                           
  8221                           ;main.c: 516:    } else {
  8222  011708  EFB6  F084         	goto	l17628
  8223  01170C                     l17804:
  8224                           
  8225                           ;main.c: 518:     set_vterm(2);
  8226  01170C  0E02               	movlw	2
  8227  01170E  6EE6               	movwf	postinc1,c
  8228  011710  EC87  F015         	call	_set_vterm	;wreg free
  8229                           
  8230                           ;main.c: 519:     update_lcd(2);
  8231  011714  0E02               	movlw	2
  8232  011716  6EE6               	movwf	postinc1,c
  8233  011718  EC97  F0F7         	call	_update_lcd	;wreg free
  8234  01171C  EFB6  F084         	goto	l17628
  8235  011720                     __end_of_main:
  8236                           	opt callstack 0
  8237                           
  8238 ;; *************** function _update_hist_data *****************
  8239 ;; Defined at:
  8240 ;;		line 456 in file "daq.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;  mode            1  [STACK] const _Bool 
  8243 ;;  hist            2  [STACK] PTR volatile struct hist
  8244 ;;		 -> C.hist(97), C(320), 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1  [STACK] _Bool 
  8249 ;; Registers used:
  8250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  8251 ;; Tracked objects:
  8252 ;;		On entry : 7/1
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;Total ram usage:        0 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:   15
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		_main
  8267 ;; This function uses a reentrant model
  8268 ;;
  8269                           
  8270                           	psect	text1
  8271  001606                     __ptext1:
  8272                           	opt callstack 0
  8273  001606                     _update_hist_data:
  8274                           	opt callstack 15
  8275                           
  8276                           ;daq.c: 456: _Bool update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 4
      +                          57: {;daq.c: 458:  if (hist == ((void*)0))
  8277                           ;stkvar	_hist @ sp[(0)+-3]
  8278                           
  8279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8280                           ;incstack = 0
  8281  001606  0EFD               	movlw	-3
  8282  001608  006F FF8C  F02A    	movff	plusw1,btemp
  8283  00160E  0EFE               	movlw	-2
  8284  001610  50E3               	movf	plusw1,w,c
  8285  001612  102A               	iorwf	btemp^0,w,c
  8286  001614  A4D8               	btfss	status,2,c
  8287  001616  D002               	goto	l14182
  8288  001618                     u13380:
  8289                           
  8290                           ;daq.c: 459:   return 0;
  8291  001618  0E00               	movlw	0
  8292  00161A  D01A               	goto	L3
  8293  00161C                     l14182:
  8294                           
  8295                           ;daq.c: 461:  if (mode) {
  8296                           ;stkvar	_mode @ sp[(0)+-1]
  8297  00161C  0EFF               	movlw	-1
  8298  00161E  50E3               	movf	plusw1,w,c
  8299  001620  B4D8               	btfsc	status,2,c
  8300  001622  D018               	goto	l14194
  8301                           
  8302                           ;daq.c: 462:   if (R.hist_save) {
  8303  001624  0101               	movlb	1	; () banked
  8304  001626  A197               	btfss	(_R+151)& (0+255),0,b	;volatile
  8305  001628  D7F7               	goto	u13380
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;daq.c: 463:    *hist = R.H;
  8309  00162A  EE20  F136         	lfsr	2,_R+54	;volatile
  8310                           
  8311                           ;stkvar	_hist @ sp[(0)+-3]
  8312  00162E  0EFD               	movlw	-3
  8313  001630  006F FF8F FFE9     	movff	plusw1,fsr0l
  8314  001636  0EFE               	movlw	-2
  8315  001638  006F FF8F FFEA     	movff	plusw1,fsr0h
  8316  00163E  0E60               	movlw	96
  8317  001640                     u13411:
  8318  001640  006F FF6F FFEB     	movff	plusw2,plusw0
  8319  001646  06E8               	decf	wreg,f,c
  8320  001648  E2FB               	bc	u13411
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;daq.c: 464:    if (R.hist_update) {
  8324  00164A  A397               	btfss	(_R+151)& (0+255),1,b	;volatile
  8325  00164C  D7E5               	goto	u13380
  8326                           
  8327                           ; BSR set to: 1
  8328                           ;daq.c: 465:     return 1;
  8329  00164E  0E01               	movlw	1
  8330  001650                     L3:
  8331  001650  6E2A               	movwf	btemp^0,c
  8332  001652  D013               	goto	l2100
  8333  001654                     l14194:
  8334                           
  8335                           ;daq.c: 469:   R.H = *hist;
  8336                           ;stkvar	_hist @ sp[(0)+-3]
  8337  001654  0EFD               	movlw	-3
  8338  001656  006F FF8F FFD9     	movff	plusw1,fsr2l
  8339  00165C  0EFE               	movlw	-2
  8340  00165E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8341  001664  EE00  F136         	lfsr	0,_R+54	;volatile
  8342  001668  0E60               	movlw	96
  8343  00166A                     u13431:
  8344  00166A  006F FF6F FFEB     	movff	plusw2,plusw0
  8345  001670  06E8               	decf	wreg,f,c
  8346  001672  E2FB               	bc	u13431
  8347                           
  8348                           ;daq.c: 470:   R.hist_save = 1;
  8349  001674  0101               	movlb	1	; () banked
  8350  001676  8197               	bsf	(_R+151)& (0+255),0,b	;volatile
  8351  001678  D7CF               	goto	u13380
  8352  00167A                     l2100:
  8353                           
  8354                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  8355  00167A  52E5               	movf	postdec1,f,c
  8356  00167C  52E5               	movf	postdec1,f,c
  8357  00167E  52E5               	movf	postdec1,f,c
  8358  001680  0012               	return		;funcret
  8359  001682                     __end_of_update_hist_data:
  8360                           	opt callstack 0
  8361                           
  8362 ;; *************** function _update_cal_data *****************
  8363 ;; Defined at:
  8364 ;;		line 437 in file "daq.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1  [STACK] void 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/39
  8375 ;;		On exit  : 3F/1
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;Total ram usage:        0 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:   15
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_main
  8389 ;; This function uses a reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text2
  8393  001DB2                     __ptext2:
  8394                           	opt callstack 0
  8395  001DB2                     _update_cal_data:
  8396                           	opt callstack 15
  8397                           
  8398                           ;daq.c: 439:  R = r_cal;
  8399                           
  8400                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8401                           ;incstack = 0
  8402  001DB2  EE21  F040         	lfsr	2,_r_cal
  8403  001DB6  EE00  F100         	lfsr	0,_R	;volatile
  8404  001DBA  0E9A               	movlw	154
  8405  001DBC                     u13351:
  8406  001DBC  006F FF7B FFEE     	movff	postinc2,postinc0
  8407  001DC2  06E8               	decf	wreg,f,c
  8408  001DC4  E2FB               	bc	u13351
  8409  001DC6  0E9B               	movlw	155
  8410  001DC8  5ED9               	subwf	fsr2l,f,c
  8411  001DCA  5EE9               	subwf	fsr0l,f,c
  8412                           
  8413                           ;daq.c: 440:  if (!R.c_zero_cal) {
  8414  001DCC  0101               	movlb	1	; () banked
  8415  001DCE  B597               	btfsc	(_R+151)& (0+255),2,b	;volatile
  8416  001DD0  D008               	goto	l14172
  8417                           
  8418                           ; BSR set to: 1
  8419                           ;daq.c: 441:   R.n_offset[0] = 3938;
  8420  001DD2  0E0F               	movlw	15
  8421  001DD4  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  8422  001DD6  0E62               	movlw	98
  8423  001DD8  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  8424                           
  8425                           ;daq.c: 442:   R.n_offset[1] = 4004;
  8426  001DDA  0E0F               	movlw	15
  8427  001DDC  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  8428  001DDE  0EA4               	movlw	164
  8429  001DE0  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  8430  001DE2                     l14172:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;daq.c: 446:  if (!R.c_scale_cal) {
  8434  001DE2  B797               	btfsc	(_R+151)& (0+255),3,b	;volatile
  8435  001DE4  0012               	return	
  8436                           
  8437                           ; BSR set to: 1
  8438                           ;daq.c: 447:   R.n_scalar[0] = 0.0862000;
  8439  001DE6  0EA0               	movlw	160
  8440  001DE8  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  8441  001DEA  0E89               	movlw	137
  8442  001DEC  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  8443  001DEE  0EB0               	movlw	176
  8444  001DF0  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  8445  001DF2  0E3D               	movlw	61
  8446  001DF4  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8447                           
  8448                           ;daq.c: 448:   R.n_scalar[1] = 0.0361010;
  8449  001DF6  0EA4               	movlw	164
  8450  001DF8  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8451  001DFA  0EDE               	movlw	222
  8452  001DFC  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  8453  001DFE  0E13               	movlw	19
  8454  001E00  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  8455  001E02  0E3D               	movlw	61
  8456  001E04  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  8457                           
  8458                           ; BSR set to: 1
  8459                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  8460  001E06  0012               	return		;funcret
  8461  001E08                     __end_of_update_cal_data:
  8462                           	opt callstack 0
  8463                           
  8464 ;; *************** function _static_soc *****************
  8465 ;; Defined at:
  8466 ;;		line 118 in file "mbmc.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;		None
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  1  [STACK] void 
  8473 ;; Registers used:
  8474 ;;		wreg, fsr2l, fsr2h
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/1
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8484 ;;Total ram usage:        0 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:   15
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_main
  8491 ;; This function uses a reentrant model
  8492 ;;
  8493                           
  8494                           	psect	text3
  8495  001CA4                     __ptext3:
  8496                           	opt callstack 0
  8497  001CA4                     _static_soc:
  8498                           	opt callstack 15
  8499                           
  8500                           ;mbmc.c: 120:  C.runtime = 120;
  8501                           
  8502                           ; BSR set to: 1
  8503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8504                           ;incstack = 0
  8505  001CA4  0E78               	movlw	120
  8506  001CA6  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
  8507  001CAC  0E00               	movlw	0
  8508  001CAE  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
  8509                           
  8510                           ;mbmc.c: 121:  C.soc = 100;
  8511  001CB4  0E64               	movlw	100
  8512  001CB6  006F FFA0  FC37    	movff	wreg,_C+182	;volatile
  8513  001CBC  0E00               	movlw	0
  8514  001CBE  006F FFA0  FC38    	movff	wreg,_C+183	;volatile
  8515                           
  8516                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  8517  001CC4  EE23  F00D         	lfsr	2,_C+140	;volatile
  8518  001CC8  006F FF78  FC11    	movff	postinc2,_C+144	;volatile
  8519  001CCE  006F FF78  FC12    	movff	postinc2,_C+145	;volatile
  8520  001CD4  006F FF78  FC13    	movff	postinc2,_C+146	;volatile
  8521  001CDA  006F FF74  FC14    	movff	postdec2,_C+147	;volatile
  8522                           
  8523                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  8524  001CE0  EE23  F011         	lfsr	2,_C+144	;volatile
  8525  001CE4  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
  8526  001CEA  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
  8527  001CF0  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
  8528  001CF6  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
  8529                           
  8530                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8531  001CFC  0012               	return		;funcret
  8532  001CFE                     __end_of_static_soc:
  8533                           	opt callstack 0
  8534                           
  8535 ;; *************** function _start_switch_handler *****************
  8536 ;; Defined at:
  8537 ;;		line 125 in file "dio.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;		None
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1  [STACK] void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 3F/39
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:   16
  8558 ;; This function calls:
  8559 ;;		_INT1_SetInterruptHandler
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;; This function uses a reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text4
  8566  002A92                     __ptext4:
  8567                           	opt callstack 0
  8568  002A92                     _start_switch_handler:
  8569                           	opt callstack 14
  8570                           
  8571                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  8572                           
  8573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8574                           ;incstack = 0
  8575  002A92  0139               	movlb	57	; () banked
  8576  002A94  9195               	bcf	149,0,b	;volatile
  8577                           
  8578                           ; BSR set to: 57
  8579                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  8580  002A96  0E8E               	movlw	low _switch_handler
  8581  002A98  6EE6               	movwf	postinc1,c
  8582  002A9A  0EF4               	movlw	high _switch_handler
  8583  002A9C  6EE6               	movwf	postinc1,c
  8584  002A9E  0E01               	movlw	low (_switch_handler shr (0+16))
  8585  002AA0  6EE6               	movwf	postinc1,c
  8586  002AA2  EC1D  F014         	call	_INT1_SetInterruptHandler	;wreg free
  8587                           
  8588                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  8589  002AA6  0E02               	movlw	2
  8590  002AA8  0101               	movlb	1	; () banked
  8591  002AAA  6FC7               	movwf	(_S+35)& (0+255),b	;volatile
  8592                           
  8593                           ; BSR set to: 1
  8594                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  8595  002AAC  0139               	movlb	57	; () banked
  8596  002AAE  8195               	bsf	149,0,b	;volatile
  8597                           
  8598                           ; BSR set to: 57
  8599                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  8600  002AB0  0012               	return		;funcret
  8601  002AB2                     __end_of_start_switch_handler:
  8602                           	opt callstack 0
  8603                           
  8604 ;; *************** function _srand *****************
  8605 ;; Defined at:
  8606 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  s               2  [STACK] unsigned int 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;		None
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1  [STACK] void 
  8613 ;; Registers used:
  8614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/3D
  8617 ;;		On exit  : 3F/2
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8624 ;;Total ram usage:        0 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:   15
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_main
  8631 ;; This function uses a reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text5
  8635  00245A                     __ptext5:
  8636                           	opt callstack 0
  8637  00245A                     _srand:
  8638                           	opt callstack 15
  8639                           
  8640                           ;stkvar	_s @ sp[(0)+-2]
  8641                           
  8642                           ; BSR set to: 57
  8643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8644                           ;incstack = 0
  8645  00245A  0EFE               	movlw	-2
  8646  00245C  50E3               	movf	plusw1,w,c
  8647  00245E  0FFF               	addlw	255
  8648  002460  6E34               	movwf	(btemp+10)^0,c
  8649  002462  0EFF               	movlw	-1
  8650  002464  006F FF8C  F035    	movff	plusw1,btemp+11
  8651  00246A  0EFF               	movlw	255
  8652  00246C  2235               	addwfc	(btemp+11)^0,f,c
  8653  00246E  0060  F0D0  F2DE   	movff	btemp+10,_seed
  8654  002474  0060  F0D4  F2DF   	movff	btemp+11,_seed+1
  8655  00247A  0102               	movlb	2	; () banked
  8656  00247C  6BE0               	clrf	(_seed+2)& (0+255),b
  8657  00247E  6BE1               	clrf	(_seed+3)& (0+255),b
  8658  002480  6BE2               	clrf	(_seed+4)& (0+255),b
  8659  002482  6BE3               	clrf	(_seed+5)& (0+255),b
  8660  002484  6BE4               	clrf	(_seed+6)& (0+255),b
  8661  002486  6BE5               	clrf	(_seed+7)& (0+255),b
  8662                           
  8663                           ; BSR set to: 2
  8664                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  8665  002488  52E5               	movf	postdec1,f,c
  8666  00248A  52E5               	movf	postdec1,f,c
  8667  00248C  0012               	return		;funcret
  8668  00248E                     __end_of_srand:
  8669                           	opt callstack 0
  8670                           
  8671 ;; *************** function _set_time *****************
  8672 ;; Defined at:
  8673 ;;		line 263 in file "mbmc.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  t               8  [STACK] long long 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1  [STACK] void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  8682 ;; Tracked objects:
  8683 ;;		On entry : 3F/39
  8684 ;;		On exit  : 3F/39
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:   15
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_main
  8698 ;; This function uses a reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text6
  8702  01FFCA                     __ptext6:
  8703                           	opt callstack 0
  8704  01FFCA                     _set_time:
  8705                           	opt callstack 15
  8706                           
  8707                           ;mbmc.c: 263: void set_time(time_t t);mbmc.c: 264: {;mbmc.c: 265:  PIE8bits.TMR5IE = 0;
  8708                           
  8709                           ; BSR set to: 2
  8710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8711                           ;incstack = 0
  8712  01FFCA  0139               	movlb	57	; () banked
  8713  01FFCC  9D98               	bcf	152,6,b	;volatile
  8714                           
  8715                           ; BSR set to: 57
  8716                           ;mbmc.c: 266:  V.ticks = t;
  8717                           ;stkvar	_t @ sp[(0)+-8]
  8718  01FFCE  50E1               	movf	fsr1l,w,c
  8719  01FFD0  0FF8               	addlw	-8
  8720  01FFD2  6ED9               	movwf	fsr2l,c
  8721  01FFD4  50E2               	movf	fsr1h,w,c
  8722  01FFD6  6EDA               	movwf	fsr2h,c
  8723  01FFD8  0EFF               	movlw	255
  8724  01FFDA  22DA               	addwfc	fsr2h,f,c
  8725  01FFDC  006F FF78  F288    	movff	postinc2,_V+129	;volatile
  8726  01FFE2  006F FF78  F289    	movff	postinc2,_V+130	;volatile
  8727  01FFE8  006F FF78  F28A    	movff	postinc2,_V+131	;volatile
  8728  01FFEE  006F FF78  F28B    	movff	postinc2,_V+132	;volatile
  8729                           
  8730                           ; BSR set to: 57
  8731                           ;mbmc.c: 267:  PIE8bits.TMR5IE = 1;
  8732  01FFF4  8D98               	bsf	152,6,b	;volatile
  8733                           
  8734                           ; BSR set to: 57
  8735                           ; _set_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
  8736  01FFF6  0EF8               	movlw	248
  8737  01FFF8  26E1               	addwf	fsr1l,f,c
  8738  01FFFA  0EFF               	movlw	255
  8739  01FFFC  22E2               	addwfc	fsr1h,f,c
  8740  01FFFE  0012               	return		;funcret
  8741  020000                     __end_of_set_time:
  8742                           	opt callstack 0
  8743                           
  8744 ;; *************** function _set_hist_flag *****************
  8745 ;; Defined at:
  8746 ;;		line 475 in file "daq.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1  [STACK] void 
  8753 ;; Registers used:
  8754 ;;		None
  8755 ;; Tracked objects:
  8756 ;;		On entry : 3F/39
  8757 ;;		On exit  : 3F/1
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:   15
  8767 ;; This function calls:
  8768 ;;		Nothing
  8769 ;; This function is called by:
  8770 ;;		_main
  8771 ;; This function uses a reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text7
  8775  002D46                     __ptext7:
  8776                           	opt callstack 0
  8777  002D46                     _set_hist_flag:
  8778                           	opt callstack 15
  8779                           
  8780                           ;daq.c: 477:  R.hist_update = 1;
  8781                           
  8782                           ; BSR set to: 57
  8783                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8784                           ;incstack = 0
  8785  002D46  0101               	movlb	1	; () banked
  8786  002D48  8397               	bsf	(_R+151)& (0+255),1,b	;volatile
  8787                           
  8788                           ; BSR set to: 1
  8789                           ; _set_hist_flag: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8790  002D4A  0012               	return		;funcret
  8791  002D4C                     __end_of_set_hist_flag:
  8792                           	opt callstack 0
  8793                           
  8794 ;; *************** function _set_dac_b *****************
  8795 ;; Defined at:
  8796 ;;		line 308 in file "daq.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  voltage         4  [STACK] const float 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  2  [STACK] unsigned short 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/3D
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8814 ;;Total ram usage:        0 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:   17
  8817 ;; This function calls:
  8818 ;;		_convert_dac_raw
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text8
  8825  00248E                     __ptext8:
  8826                           	opt callstack 0
  8827  00248E                     _set_dac_b:
  8828                           	opt callstack 13
  8829                           
  8830                           ;daq.c: 308: uint16_t set_dac_b(const float voltage);daq.c: 309: {;daq.c: 310:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  8831                           ;stkvar	_voltage @ sp[(0)+-4]
  8832                           
  8833                           ; BSR set to: 1
  8834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8835                           ;incstack = 0
  8836  00248E  0EFC               	movlw	-4
  8837  002490  006F FF8F FFE6     	movff	plusw1,postinc1
  8838  002496  006F FF8F FFE6     	movff	plusw1,postinc1
  8839  00249C  006F FF8F FFE6     	movff	plusw1,postinc1
  8840  0024A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8841  0024A8  EC43  F0FD         	call	_convert_dac_raw	;wreg free
  8842  0024AC  0060  F0A8  F122   	movff	btemp,_R+34	;volatile
  8843  0024B2  0060  F0AC  F123   	movff	btemp+1,_R+35	;volatile
  8844                           
  8845                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8846                           
  8847                           ;daq.c: 311:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  8848  0024B8  52E5               	movf	postdec1,f,c
  8849  0024BA  52E5               	movf	postdec1,f,c
  8850  0024BC  52E5               	movf	postdec1,f,c
  8851  0024BE  52E5               	movf	postdec1,f,c
  8852  0024C0  0012               	return		;funcret
  8853  0024C2                     __end_of_set_dac_b:
  8854                           	opt callstack 0
  8855                           
  8856 ;; *************** function _set_dac_a *****************
  8857 ;; Defined at:
  8858 ;;		line 299 in file "daq.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  voltage         4  [STACK] const float 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  2  [STACK] unsigned short 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8867 ;; Tracked objects:
  8868 ;;		On entry : 3F/3D
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:   17
  8879 ;; This function calls:
  8880 ;;		_convert_dac_raw
  8881 ;; This function is called by:
  8882 ;;		_main
  8883 ;; This function uses a reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text9
  8887  0024C2                     __ptext9:
  8888                           	opt callstack 0
  8889  0024C2                     _set_dac_a:
  8890                           	opt callstack 13
  8891                           
  8892                           ;daq.c: 299: uint16_t set_dac_a(const float voltage);daq.c: 300: {;daq.c: 301:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  8893                           ;stkvar	_voltage @ sp[(0)+-4]
  8894                           
  8895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8896                           ;incstack = 0
  8897  0024C2  0EFC               	movlw	-4
  8898  0024C4  006F FF8F FFE6     	movff	plusw1,postinc1
  8899  0024CA  006F FF8F FFE6     	movff	plusw1,postinc1
  8900  0024D0  006F FF8F FFE6     	movff	plusw1,postinc1
  8901  0024D6  006F FF8F FFE6     	movff	plusw1,postinc1
  8902  0024DC  EC43  F0FD         	call	_convert_dac_raw	;wreg free
  8903  0024E0  0060  F0A8  F120   	movff	btemp,_R+32	;volatile
  8904  0024E6  0060  F0AC  F121   	movff	btemp+1,_R+33	;volatile
  8905                           
  8906                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  8907                           
  8908                           ;daq.c: 302:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  8909  0024EC  52E5               	movf	postdec1,f,c
  8910  0024EE  52E5               	movf	postdec1,f,c
  8911  0024F0  52E5               	movf	postdec1,f,c
  8912  0024F2  52E5               	movf	postdec1,f,c
  8913  0024F4  0012               	return		;funcret
  8914  0024F6                     __end_of_set_dac_a:
  8915                           	opt callstack 0
  8916                           
  8917 ;; *************** function _convert_dac_raw *****************
  8918 ;; Defined at:
  8919 ;;		line 281 in file "daq.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  voltage         4  [STACK] float 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  2  [STACK] unsigned short 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/3D
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;Total ram usage:        0 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:   16
  8940 ;; This function calls:
  8941 ;;		___fldiv
  8942 ;;		___flge
  8943 ;;		___fltol
  8944 ;; This function is called by:
  8945 ;;		_set_dac_a
  8946 ;;		_set_dac_b
  8947 ;; This function uses a reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text10
  8951  01FA86                     __ptext10:
  8952                           	opt callstack 0
  8953  01FA86                     _convert_dac_raw:
  8954                           	opt callstack 13
  8955                           
  8956                           ;daq.c: 281: static uint16_t convert_dac_raw(float voltage);daq.c: 282: {;daq.c: 286:  i
      +                          f (voltage < 0.001)
  8957                           
  8958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8959                           ;incstack = 0
  8960  01FA86  0E6F               	movlw	111
  8961  01FA88  6EE6               	movwf	postinc1,c
  8962  01FA8A  0E12               	movlw	18
  8963  01FA8C  6EE6               	movwf	postinc1,c
  8964  01FA8E  0E83               	movlw	131
  8965  01FA90  6EE6               	movwf	postinc1,c
  8966  01FA92  0E3A               	movlw	58
  8967  01FA94  6EE6               	movwf	postinc1,c
  8968                           
  8969                           ;stkvar	_voltage @ sp[(-4)+-4]
  8970  01FA96  0EF8               	movlw	-8
  8971  01FA98  006F FF8F FFE6     	movff	plusw1,postinc1
  8972  01FA9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8973  01FAA4  006F FF8F FFE6     	movff	plusw1,postinc1
  8974  01FAAA  006F FF8F FFE6     	movff	plusw1,postinc1
  8975  01FAB0  EC35  F0F6         	call	___flge	;wreg free
  8976  01FAB4  B02A               	btfsc	btemp& (0+255),0,c
  8977  01FAB6  D018               	goto	l13706
  8978                           
  8979                           ;daq.c: 287:   voltage = 0.001;
  8980  01FAB8  0E6F               	movlw	111
  8981  01FABA  6E32               	movwf	(btemp+8)^0,c
  8982  01FABC  0E12               	movlw	18
  8983  01FABE  6E33               	movwf	(btemp+9)^0,c
  8984  01FAC0  0E83               	movlw	131
  8985  01FAC2  6E34               	movwf	(btemp+10)^0,c
  8986  01FAC4  0E3A               	movlw	58
  8987  01FAC6  6E35               	movwf	(btemp+11)^0,c
  8988                           
  8989                           ;stkvar	_voltage @ sp[(0)+-4]
  8990  01FAC8  0EFC               	movlw	-4
  8991  01FACA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  8992  01FAD0  0EFD               	movlw	-3
  8993  01FAD2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  8994  01FAD8  0EFE               	movlw	-2
  8995  01FADA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  8996  01FAE0  0EFF               	movlw	-1
  8997  01FAE2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  8998  01FAE8                     l13706:
  8999                           
  9000                           ;daq.c: 288:  if (voltage > 10.0)
  9001                           ;stkvar	_voltage @ sp[(0)+-4]
  9002  01FAE8  0EFC               	movlw	-4
  9003  01FAEA  006F FF8F FFE6     	movff	plusw1,postinc1
  9004  01FAF0  006F FF8F FFE6     	movff	plusw1,postinc1
  9005  01FAF6  006F FF8F FFE6     	movff	plusw1,postinc1
  9006  01FAFC  006F FF8F FFE6     	movff	plusw1,postinc1
  9007  01FB02  0E00               	movlw	0
  9008  01FB04  6EE6               	movwf	postinc1,c
  9009  01FB06  0E00               	movlw	0
  9010  01FB08  6EE6               	movwf	postinc1,c
  9011  01FB0A  0E20               	movlw	32
  9012  01FB0C  6EE6               	movwf	postinc1,c
  9013  01FB0E  0E41               	movlw	65
  9014  01FB10  6EE6               	movwf	postinc1,c
  9015  01FB12  EC35  F0F6         	call	___flge	;wreg free
  9016  01FB16  B02A               	btfsc	btemp& (0+255),0,c
  9017  01FB18  D018               	goto	l13710
  9018                           
  9019                           ;daq.c: 289:   voltage = 10.0;
  9020  01FB1A  0E00               	movlw	0
  9021  01FB1C  6E32               	movwf	(btemp+8)^0,c
  9022  01FB1E  0E00               	movlw	0
  9023  01FB20  6E33               	movwf	(btemp+9)^0,c
  9024  01FB22  0E20               	movlw	32
  9025  01FB24  6E34               	movwf	(btemp+10)^0,c
  9026  01FB26  0E41               	movlw	65
  9027  01FB28  6E35               	movwf	(btemp+11)^0,c
  9028                           
  9029                           ;stkvar	_voltage @ sp[(0)+-4]
  9030  01FB2A  0EFC               	movlw	-4
  9031  01FB2C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
  9032  01FB32  0EFD               	movlw	-3
  9033  01FB34  0060  F0CF  FFE3   	movff	btemp+9,plusw1
  9034  01FB3A  0EFE               	movlw	-2
  9035  01FB3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9036  01FB42  0EFF               	movlw	-1
  9037  01FB44  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9038  01FB4A                     l13710:
  9039                           
  9040                           ;daq.c: 293:  return(uint16_t) (voltage / 0.002442);
  9041  01FB4A  0EF6               	movlw	246
  9042  01FB4C  6EE6               	movwf	postinc1,c
  9043  01FB4E  0E09               	movlw	9
  9044  01FB50  6EE6               	movwf	postinc1,c
  9045  01FB52  0E20               	movlw	32
  9046  01FB54  6EE6               	movwf	postinc1,c
  9047  01FB56  0E3B               	movlw	59
  9048  01FB58  6EE6               	movwf	postinc1,c
  9049                           
  9050                           ;stkvar	_voltage @ sp[(-4)+-4]
  9051  01FB5A  0EF8               	movlw	-8
  9052  01FB5C  006F FF8F FFE6     	movff	plusw1,postinc1
  9053  01FB62  006F FF8F FFE6     	movff	plusw1,postinc1
  9054  01FB68  006F FF8F FFE6     	movff	plusw1,postinc1
  9055  01FB6E  006F FF8F FFE6     	movff	plusw1,postinc1
  9056  01FB74  EC64  F0C1         	call	___fldiv	;wreg free
  9057  01FB78  0060  F0AB  FFE6   	movff	btemp,postinc1
  9058  01FB7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9059  01FB84  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9060  01FB8A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9061  01FB90  ECC9  F0F4         	call	___fltol	;wreg free
  9062                           
  9063                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  9064  01FB94  52E5               	movf	postdec1,f,c
  9065  01FB96  52E5               	movf	postdec1,f,c
  9066  01FB98  52E5               	movf	postdec1,f,c
  9067  01FB9A  52E5               	movf	postdec1,f,c
  9068  01FB9C  0012               	return		;funcret
  9069  01FB9E                     __end_of_convert_dac_raw:
  9070                           	opt callstack 0
  9071                           
  9072 ;; *************** function _set_dac *****************
  9073 ;; Defined at:
  9074 ;;		line 257 in file "daq.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1  [STACK] void 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/3D
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9092 ;;Total ram usage:        0 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:   16
  9095 ;; This function calls:
  9096 ;;		_SPI1_Exchange8bit
  9097 ;;		_dac_spi_control
  9098 ;; This function is called by:
  9099 ;;		_main
  9100 ;; This function uses a reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text11
  9104  000AC2                     __ptext11:
  9105                           	opt callstack 0
  9106  000AC2                     _set_dac:
  9107                           	opt callstack 14
  9108                           
  9109                           ;daq.c: 259:  while (!SPI1STATUSbits.TXBE);
  9110                           
  9111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9112                           ;incstack = 0
  9113  000AC2  013D               	movlb	61	; () banked
  9114  000AC4  AB17               	btfss	23,5,b	;volatile
  9115  000AC6  D7FD               	goto	_set_dac
  9116                           
  9117                           ; BSR set to: 61
  9118                           
  9119                           ;daq.c: 260:  do { LATCbits.LATC2 = 1; } while(0);
  9120  000AC8  84BC               	bsf	188,2,c	;volatile
  9121                           
  9122                           ; BSR set to: 61
  9123                           
  9124                           ;daq.c: 261:  do { LATCbits.LATC0 = 1; } while(0);
  9125  000ACA  80BC               	bsf	188,0,c	;volatile
  9126                           
  9127                           ; BSR set to: 61
  9128                           ;daq.c: 262:  dac_spi_control(1);
  9129  000ACC  0E01               	movlw	1
  9130  000ACE  6EE6               	movwf	postinc1,c
  9131  000AD0  EC41  F00B         	call	_dac_spi_control	;wreg free
  9132                           
  9133                           ;daq.c: 263:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  9134  000AD4  C120  F124         	movff	_R+32,_R+36	;volatile
  9135                           
  9136                           ;daq.c: 264:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  9137  000AD8  EE20  F120         	lfsr	2,_R+32	;volatile
  9138  000ADC  006F FF78  F034    	movff	postinc2,btemp+10
  9139  000AE2  006F FF74  F035    	movff	postdec2,btemp+11
  9140  000AE8  0060  F0D4  F034   	movff	btemp+11,btemp+10
  9141  000AEE  6A35               	clrf	(btemp+11)^0,c
  9142  000AF0  0E0F               	movlw	15
  9143  000AF2  1634               	andwf	(btemp+10)^0,f,c
  9144  000AF4  0101               	movlb	1	; () banked
  9145  000AF6  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9146  000AF8  1834               	xorwf	(btemp+10)^0,w,c
  9147  000AFA  0BF0               	andlw	-16
  9148  000AFC  1834               	xorwf	(btemp+10)^0,w,c
  9149  000AFE  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9150                           
  9151                           ; BSR set to: 1
  9152                           ;daq.c: 265:  R.max5322_cmd.map.cont = 0b0100;
  9153  000B00  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9154  000B02  0B0F               	andlw	-241
  9155  000B04  0940               	iorlw	64
  9156  000B06  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9157                           
  9158                           ; BSR set to: 1
  9159  000B08  90BF               	bcf	191,0,c	;volatile
  9160                           
  9161                           ; BSR set to: 1
  9162                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  9163  000B0A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9164  000B0C  6EE6               	movwf	postinc1,c
  9165  000B0E  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
  9166                           
  9167                           ; BSR set to: 57
  9168                           ;daq.c: 268:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  9169  000B12  0101               	movlb	1	; () banked
  9170  000B14  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  9171  000B16  6EE6               	movwf	postinc1,c
  9172  000B18  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
  9173                           
  9174                           ; BSR set to: 57
  9175  000B1C  80BF               	bsf	191,0,c	;volatile
  9176                           
  9177                           ; BSR set to: 57
  9178                           ;daq.c: 270:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  9179  000B1E  C122  F124         	movff	_R+34,_R+36	;volatile
  9180                           
  9181                           ; BSR set to: 57
  9182                           ;daq.c: 271:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  9183  000B22  EE20  F122         	lfsr	2,_R+34	;volatile
  9184  000B26  006F FF78  F034    	movff	postinc2,btemp+10
  9185  000B2C  006F FF74  F035    	movff	postdec2,btemp+11
  9186  000B32  0060  F0D4  F034   	movff	btemp+11,btemp+10
  9187  000B38  6A35               	clrf	(btemp+11)^0,c
  9188  000B3A  0E0F               	movlw	15
  9189  000B3C  1634               	andwf	(btemp+10)^0,f,c
  9190  000B3E  0101               	movlb	1	; () banked
  9191  000B40  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9192  000B42  1834               	xorwf	(btemp+10)^0,w,c
  9193  000B44  0BF0               	andlw	-16
  9194  000B46  1834               	xorwf	(btemp+10)^0,w,c
  9195  000B48  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9196                           
  9197                           ; BSR set to: 1
  9198                           ;daq.c: 272:  R.max5322_cmd.map.cont = 0b0101;
  9199  000B4A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9200  000B4C  0B0F               	andlw	-241
  9201  000B4E  0950               	iorlw	80
  9202  000B50  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  9203                           
  9204                           ; BSR set to: 1
  9205  000B52  90BF               	bcf	191,0,c	;volatile
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;daq.c: 274:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  9209  000B54  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  9210  000B56  6EE6               	movwf	postinc1,c
  9211  000B58  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
  9212                           
  9213                           ; BSR set to: 57
  9214                           ;daq.c: 275:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  9215  000B5C  0101               	movlb	1	; () banked
  9216  000B5E  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  9217  000B60  6EE6               	movwf	postinc1,c
  9218  000B62  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
  9219  000B66                     l2037:
  9220  000B66  013D               	movlb	61	; () banked
  9221  000B68  AB17               	btfss	23,5,b	;volatile
  9222  000B6A  D7FD               	goto	l2037
  9223                           
  9224                           ; BSR set to: 61
  9225                           
  9226                           ;daq.c: 277:  do { LATFbits.LATF0 = 1; } while(0);
  9227  000B6C  80BF               	bsf	191,0,c	;volatile
  9228                           
  9229                           ; BSR set to: 61
  9230                           ;daq.c: 278:  dac_spi_control(0);
  9231  000B6E  0E00               	movlw	0
  9232  000B70  6EE6               	movwf	postinc1,c
  9233  000B72  EC41  F00B         	call	_dac_spi_control	;wreg free
  9234                           
  9235                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  9236  000B76  0012               	return		;funcret
  9237  000B78                     __end_of_set_dac:
  9238                           	opt callstack 0
  9239                           
  9240 ;; *************** function _dac_spi_control *****************
  9241 ;; Defined at:
  9242 ;;		line 209 in file "daq.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  set             1  [STACK] _Bool 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1  [STACK] void 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr1l, fsr1h, status,2
  9251 ;; Tracked objects:
  9252 ;;		On entry : 3F/3D
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:   15
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_set_dac
  9267 ;; This function uses a reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text12
  9271  001682                     __ptext12:
  9272                           	opt callstack 0
  9273  001682                     _dac_spi_control:
  9274                           	opt callstack 14
  9275                           
  9276                           ;daq.c: 209: void dac_spi_control(_Bool set);daq.c: 210: {;daq.c: 211:  static _Bool ini
      +                          t = 0;;daq.c: 212:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 214:  if (set) {
  9277                           ;stkvar	_set @ sp[(0)+-1]
  9278                           
  9279                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9280                           ;incstack = 0
  9281  001682  0EFF               	movlw	-1
  9282  001684  50E3               	movf	plusw1,w,c
  9283  001686  B4D8               	btfsc	status,2,c
  9284  001688  D022               	goto	l13698
  9285                           
  9286                           ;daq.c: 215:   SPI1CON0bits.EN = 0;
  9287  00168A  013D               	movlb	61	; () banked
  9288  00168C  9F14               	bcf	20,7,b	;volatile
  9289                           
  9290                           ; BSR set to: 61
  9291                           ;daq.c: 216:   if (!init) {
  9292  00168E  5052               	movf	dac_spi_control@init^0,w,c
  9293  001690  A4D8               	btfss	status,2,c
  9294  001692  D011               	goto	l13686
  9295                           
  9296                           ; BSR set to: 61
  9297                           ;daq.c: 217:    init = 1;
  9298  001694  0E01               	movlw	1
  9299  001696  6E52               	movwf	dac_spi_control@init^0,c
  9300                           
  9301                           ; BSR set to: 61
  9302                           ;daq.c: 218:    S0 = SPI1CON0;
  9303  001698  006F F450  F0CB    	movff	15636,dac_spi_control@S0	;volatile
  9304                           
  9305                           ; BSR set to: 61
  9306                           ;daq.c: 219:    S1 = SPI1CON1;
  9307  00169E  006F F454  F0CA    	movff	15637,dac_spi_control@S1	;volatile
  9308                           
  9309                           ; BSR set to: 61
  9310                           ;daq.c: 220:    S2 = SPI1CON2;
  9311  0016A4  006F F458  F0C9    	movff	15638,dac_spi_control@S2	;volatile
  9312                           
  9313                           ; BSR set to: 61
  9314                           ;daq.c: 221:    SC = SPI1CLK;
  9315  0016AA  006F F470  F0C8    	movff	15644,dac_spi_control@SC	;volatile
  9316                           
  9317                           ; BSR set to: 61
  9318                           ;daq.c: 222:    SB = SPI1BAUD;
  9319  0016B0  006F F464  F0C7    	movff	15641,dac_spi_control@SB	;volatile
  9320  0016B6                     l13686:
  9321                           
  9322                           ; BSR set to: 61
  9323                           ;daq.c: 228:   SPI1CON1 = 0x00;
  9324  0016B6  6B15               	clrf	21,b	;volatile
  9325                           
  9326                           ; BSR set to: 61
  9327                           ;daq.c: 229:   SPI1CON1bits.CKE = 1;
  9328  0016B8  8D15               	bsf	21,6,b	;volatile
  9329                           
  9330                           ; BSR set to: 61
  9331                           ;daq.c: 230:   SPI1CON1bits.CKP = 0;
  9332  0016BA  9B15               	bcf	21,5,b	;volatile
  9333                           
  9334                           ; BSR set to: 61
  9335                           ;daq.c: 231:   SPI1CON1bits.SMP = 0;
  9336  0016BC  9F15               	bcf	21,7,b	;volatile
  9337                           
  9338                           ;daq.c: 233:   SPI1CON2 = 0x03;
  9339  0016BE  0E03               	movlw	3
  9340  0016C0  6F16               	movwf	22,b	;volatile
  9341                           
  9342                           ;daq.c: 235:   SPI1BAUD = 0x0f;
  9343  0016C2  0E0F               	movlw	15
  9344  0016C4  6F19               	movwf	25,b	;volatile
  9345                           
  9346                           ; BSR set to: 61
  9347                           ;daq.c: 237:   SPI1CLK = 0x00;
  9348  0016C6  6B1C               	clrf	28,b	;volatile
  9349                           
  9350                           ;daq.c: 239:   SPI1CON0 = 0x83;
  9351  0016C8  0E83               	movlw	131
  9352  0016CA  6F14               	movwf	20,b	;volatile
  9353  0016CC  D014               	goto	L4
  9354  0016CE                     l13698:
  9355                           
  9356                           ;daq.c: 242:   if (init) {
  9357  0016CE  5052               	movf	dac_spi_control@init^0,w,c
  9358  0016D0  B4D8               	btfsc	status,2,c
  9359  0016D2  D012               	goto	l2021
  9360                           
  9361                           ;daq.c: 246:    SPI1CON0bits.EN = 0;
  9362  0016D4  013D               	movlb	61	; () banked
  9363  0016D6  9F14               	bcf	20,7,b	;volatile
  9364                           
  9365                           ;daq.c: 247:    SPI1CON1 = S1;
  9366  0016D8  0060  F32B  FD15   	movff	dac_spi_control@S1,15637	;volatile
  9367                           
  9368                           ;daq.c: 248:    SPI1CON2 = S2;
  9369  0016DE  0060  F327  FD16   	movff	dac_spi_control@S2,15638	;volatile
  9370                           
  9371                           ;daq.c: 249:    SPI1CLK = SC;
  9372  0016E4  0060  F323  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  9373                           
  9374                           ;daq.c: 250:    SPI1BAUD = SB;
  9375  0016EA  0060  F31F  FD19   	movff	dac_spi_control@SB,15641	;volatile
  9376                           
  9377                           ;daq.c: 251:    SPI1CON0 = S0;
  9378  0016F0  0060  F32F  FD14   	movff	dac_spi_control@S0,15636	;volatile
  9379  0016F6                     L4:
  9380                           
  9381                           ;daq.c: 252:    SPI1CON0bits.EN = 1;
  9382  0016F6  8F14               	bsf	20,7,b	;volatile
  9383  0016F8                     l2021:
  9384                           
  9385                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  9386  0016F8  52E5               	movf	postdec1,f,c
  9387  0016FA  0012               	return		;funcret
  9388  0016FC                     __end_of_dac_spi_control:
  9389                           	opt callstack 0
  9390                           
  9391 ;; *************** function _read_cal_data *****************
  9392 ;; Defined at:
  9393 ;;		line 370 in file "daq.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  x               2  [STACK] unsigned short 
  9398 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  9399 ;;		 -> r_cal(155), 
  9400 ;;  y               2  [STACK] unsigned short 
  9401 ;;  crcVal_save     1  [STACK] unsigned char 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  1  [STACK] _Bool 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/39
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;Total ram usage:        0 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:   17
  9418 ;; This function calls:
  9419 ;;		_CRC_8BitDataWrite
  9420 ;;		_CRC_CalculatedResultGet
  9421 ;;		_CRC_Initialize
  9422 ;;		_CRC_IsBusy
  9423 ;;		_CRC_Start
  9424 ;;		_DATAEE_ReadByte
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;; This function uses a reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text13
  9431  01DB3A                     __ptext13:
  9432                           	opt callstack 0
  9433  01DB3A                     _read_cal_data:
  9434                           	opt callstack 0
  9435                           
  9436                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9437  01DB3A  0E07               	movlw	7
  9438  01DB3C  26E1               	addwf	fsr1l,f,c
  9439  01DB3E  0E00               	movlw	0
  9440  01DB40  22E2               	addwfc	fsr1h,f,c
  9441                           
  9442                           ;daq.c: 372:  uint16_t x = 0, y;
  9443                           ;stkvar	_x @ sp[(-7)+0]
  9444                           
  9445                           ;incstack = 0
  9446  01DB42  0EF9               	movlw	-7
  9447  01DB44  6AE3               	clrf	plusw1,c
  9448  01DB46  0EFA               	movlw	-6
  9449  01DB48  6AE3               	clrf	plusw1,c
  9450                           
  9451                           ;daq.c: 373:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 375:  y = sizeof(r_cal);
  9452  01DB4A  0E9B               	movlw	155
  9453  01DB4C  6E34               	movwf	(btemp+10)^0,c
  9454  01DB4E  0E00               	movlw	0
  9455  01DB50  6E35               	movwf	(btemp+11)^0,c
  9456                           
  9457                           ;stkvar	_y @ sp[(-7)+4]
  9458  01DB52  0EFD               	movlw	-3
  9459  01DB54  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9460  01DB5A  0EFE               	movlw	-2
  9461  01DB5C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9462                           
  9463                           ;daq.c: 376:  r_cal_ptr = (uint8_t*) & r_cal;
  9464                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9465  01DB62  0E04               	movlw	high _r_cal
  9466  01DB64  6E2A               	movwf	btemp^0,c
  9467  01DB66  0EFC               	movlw	-4
  9468  01DB68  0060  F0AB  FFE3   	movff	btemp,plusw1
  9469  01DB6E  0E40               	movlw	low _r_cal
  9470  01DB70  6E2A               	movwf	btemp^0,c
  9471  01DB72  0EFB               	movlw	-5
  9472  01DB74  0060  F0AB  FFE3   	movff	btemp,plusw1
  9473                           
  9474                           ;daq.c: 378:  CRC_Initialize();
  9475  01DB7A  EC71  F009         	call	_CRC_Initialize	;wreg free
  9476                           
  9477                           ; BSR set to: 0
  9478                           ;daq.c: 381:  CRC_Start();
  9479  01DB7E  ECA6  F016         	call	_CRC_Start	;wreg free
  9480  01DB82                     l14132:
  9481                           
  9482                           ;daq.c: 384:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  9483                           ;stkvar	_x @ sp[(-7)+0]
  9484  01DB82  0EF9               	movlw	-7
  9485  01DB84  006F FF8F FFE6     	movff	plusw1,postinc1
  9486  01DB8A  006F FF8F FFE6     	movff	plusw1,postinc1
  9487  01DB90  EC95  F012         	call	_DATAEE_ReadByte	;wreg free
  9488                           
  9489                           ;stkvar	_x @ sp[(-7)+0]
  9490  01DB94  0EF9               	movlw	-7
  9491  01DB96  006F FF8C  F034    	movff	plusw1,btemp+10
  9492  01DB9C  0EFA               	movlw	-6
  9493  01DB9E  006F FF8C  F035    	movff	plusw1,btemp+11
  9494                           
  9495                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9496  01DBA4  0EFB               	movlw	-5
  9497  01DBA6  006F FF8C  F032    	movff	plusw1,btemp+8
  9498  01DBAC  0EFC               	movlw	-4
  9499  01DBAE  006F FF8C  F033    	movff	plusw1,btemp+9
  9500  01DBB4  5034               	movf	(btemp+10)^0,w,c
  9501  01DBB6  2432               	addwf	(btemp+8)^0,w,c
  9502  01DBB8  6ED9               	movwf	fsr2l,c
  9503  01DBBA  5035               	movf	(btemp+11)^0,w,c
  9504  01DBBC  2033               	addwfc	(btemp+9)^0,w,c
  9505  01DBBE  6EDA               	movwf	fsr2h,c
  9506  01DBC0  0060  F0AB  FFDF   	movff	btemp,indf2
  9507                           
  9508                           ;daq.c: 385:  } while (++x < y);
  9509                           ;stkvar	_y @ sp[(-7)+4]
  9510  01DBC6  0EFD               	movlw	-3
  9511  01DBC8  006F FF8C  F034    	movff	plusw1,btemp+10
  9512  01DBCE  0EFE               	movlw	-2
  9513  01DBD0  006F FF8C  F035    	movff	plusw1,btemp+11
  9514                           
  9515                           ;stkvar	_x @ sp[(-7)+0]
  9516  01DBD6  0EF9               	movlw	-7
  9517  01DBD8  50E3               	movf	plusw1,w,c
  9518  01DBDA  0F01               	addlw	1
  9519  01DBDC  6E2A               	movwf	btemp^0,c
  9520  01DBDE  0EF9               	movlw	-7
  9521  01DBE0  0060  F0AB  FFE3   	movff	btemp,plusw1
  9522  01DBE6  6A2A               	clrf	btemp^0,c
  9523  01DBE8  0EFA               	movlw	-6
  9524  01DBEA  50E3               	movf	plusw1,w,c
  9525  01DBEC  202A               	addwfc	btemp^0,w,c
  9526  01DBEE  6E2A               	movwf	btemp^0,c
  9527  01DBF0  0EFA               	movlw	-6
  9528  01DBF2  0060  F0AB  FFE3   	movff	btemp,plusw1
  9529  01DBF8  0EF9               	movlw	-7
  9530  01DBFA  006F FF8C  F032    	movff	plusw1,btemp+8
  9531  01DC00  0EFA               	movlw	-6
  9532  01DC02  006F FF8C  F033    	movff	plusw1,btemp+9
  9533  01DC08  5034               	movf	(btemp+10)^0,w,c
  9534  01DC0A  5C32               	subwf	(btemp+8)^0,w,c
  9535  01DC0C  5035               	movf	(btemp+11)^0,w,c
  9536  01DC0E  5833               	subwfb	(btemp+9)^0,w,c
  9537  01DC10  A0D8               	btfss	status,0,c
  9538  01DC12  D7B7               	goto	l14132
  9539                           
  9540                           ;daq.c: 386:  crcVal_save = r_cal.crc;
  9541                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9542  01DC14  0EFF               	movlw	-1
  9543  01DC16  0061  F36B  FFE3   	movff	_r_cal+154,plusw1
  9544                           
  9545                           ;daq.c: 388:  if (r_cal.checkmark == 0x1957) {
  9546  01DC1C  0E57               	movlw	87
  9547  01DC1E  0104               	movlb	4	; () banked
  9548  01DC20  19D8               	xorwf	(_r_cal+152)& (0+255),w,b
  9549  01DC22  E163               	bnz	l14152
  9550  01DC24  0E19               	movlw	25
  9551  01DC26  19D9               	xorwf	(_r_cal+153)& (0+255),w,b
  9552  01DC28  A4D8               	btfss	status,2,c
  9553  01DC2A  D05F               	goto	u13340
  9554                           
  9555                           ; BSR set to: 4
  9556                           ;daq.c: 389:   r_cal.crc = 0x42;
  9557  01DC2C  0E42               	movlw	66
  9558  01DC2E  6FDA               	movwf	(_r_cal+154)& (0+255),b
  9559                           
  9560                           ; BSR set to: 4
  9561                           ;daq.c: 390:   x = 0;
  9562                           ;stkvar	_x @ sp[(-7)+0]
  9563  01DC30  0EF9               	movlw	-7
  9564  01DC32  6AE3               	clrf	plusw1,c
  9565  01DC34  0EFA               	movlw	-6
  9566  01DC36  6AE3               	clrf	plusw1,c
  9567  01DC38                     l14144:
  9568                           
  9569                           ;daq.c: 393:    CRC_8BitDataWrite(r_cal_ptr[x]);
  9570                           ;stkvar	_x @ sp[(-7)+0]
  9571  01DC38  0EF9               	movlw	-7
  9572  01DC3A  006F FF8C  F034    	movff	plusw1,btemp+10
  9573  01DC40  0EFA               	movlw	-6
  9574  01DC42  006F FF8C  F035    	movff	plusw1,btemp+11
  9575                           
  9576                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  9577  01DC48  0EFB               	movlw	-5
  9578  01DC4A  006F FF8C  F032    	movff	plusw1,btemp+8
  9579  01DC50  0EFC               	movlw	-4
  9580  01DC52  006F FF8C  F033    	movff	plusw1,btemp+9
  9581  01DC58  5034               	movf	(btemp+10)^0,w,c
  9582  01DC5A  2432               	addwf	(btemp+8)^0,w,c
  9583  01DC5C  6ED9               	movwf	fsr2l,c
  9584  01DC5E  5035               	movf	(btemp+11)^0,w,c
  9585  01DC60  2033               	addwfc	(btemp+9)^0,w,c
  9586  01DC62  6EDA               	movwf	fsr2h,c
  9587  01DC64  50DF               	movf	indf2,w,c
  9588  01DC66  6EE6               	movwf	postinc1,c
  9589  01DC68  EC0D  F016         	call	_CRC_8BitDataWrite	;wreg free
  9590  01DC6C                     l14146:
  9591  01DC6C  EC2F  F016         	call	_CRC_IsBusy	;wreg free
  9592  01DC70  502A               	movf	btemp^0,w,c
  9593  01DC72  A4D8               	btfss	status,2,c
  9594  01DC74  D7FB               	goto	l14146
  9595                           
  9596                           ;daq.c: 395:   } while (++x < y);
  9597                           ;stkvar	_y @ sp[(-7)+4]
  9598  01DC76  0EFD               	movlw	-3
  9599  01DC78  006F FF8C  F034    	movff	plusw1,btemp+10
  9600  01DC7E  0EFE               	movlw	-2
  9601  01DC80  006F FF8C  F035    	movff	plusw1,btemp+11
  9602                           
  9603                           ;stkvar	_x @ sp[(-7)+0]
  9604  01DC86  0EF9               	movlw	-7
  9605  01DC88  50E3               	movf	plusw1,w,c
  9606  01DC8A  0F01               	addlw	1
  9607  01DC8C  6E2A               	movwf	btemp^0,c
  9608  01DC8E  0EF9               	movlw	-7
  9609  01DC90  0060  F0AB  FFE3   	movff	btemp,plusw1
  9610  01DC96  6A2A               	clrf	btemp^0,c
  9611  01DC98  0EFA               	movlw	-6
  9612  01DC9A  50E3               	movf	plusw1,w,c
  9613  01DC9C  202A               	addwfc	btemp^0,w,c
  9614  01DC9E  6E2A               	movwf	btemp^0,c
  9615  01DCA0  0EFA               	movlw	-6
  9616  01DCA2  0060  F0AB  FFE3   	movff	btemp,plusw1
  9617  01DCA8  0EF9               	movlw	-7
  9618  01DCAA  006F FF8C  F032    	movff	plusw1,btemp+8
  9619  01DCB0  0EFA               	movlw	-6
  9620  01DCB2  006F FF8C  F033    	movff	plusw1,btemp+9
  9621  01DCB8  5034               	movf	(btemp+10)^0,w,c
  9622  01DCBA  5C32               	subwf	(btemp+8)^0,w,c
  9623  01DCBC  5035               	movf	(btemp+11)^0,w,c
  9624  01DCBE  5833               	subwfb	(btemp+9)^0,w,c
  9625  01DCC0  A0D8               	btfss	status,0,c
  9626  01DCC2  D7BA               	goto	l14144
  9627                           
  9628                           ;daq.c: 396:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  9629  01DCC4  0E00               	movlw	0
  9630  01DCC6  6EE6               	movwf	postinc1,c
  9631  01DCC8  0E00               	movlw	0
  9632  01DCCA  6EE6               	movwf	postinc1,c
  9633  01DCCC  0E00               	movlw	0
  9634  01DCCE  6EE6               	movwf	postinc1,c
  9635  01DCD0  EC10  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
  9636                           
  9637                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9638  01DCD4  0EFF               	movlw	-1
  9639  01DCD6  50E3               	movf	plusw1,w,c
  9640  01DCD8  6E34               	movwf	(btemp+10)^0,c
  9641  01DCDA  6A35               	clrf	(btemp+11)^0,c
  9642  01DCDC  5034               	movf	(btemp+10)^0,w,c
  9643  01DCDE  182A               	xorwf	btemp^0,w,c
  9644  01DCE0  E104               	bnz	u13340
  9645  01DCE2  5035               	movf	(btemp+11)^0,w,c
  9646  01DCE4  182B               	xorwf	(btemp+1)^0,w,c
  9647  01DCE6  B4D8               	btfsc	status,2,c
  9648  01DCE8  D002               	goto	l14160
  9649  01DCEA                     u13340:
  9650  01DCEA                     l14152:
  9651                           
  9652                           ;daq.c: 397:    return 0;
  9653  01DCEA  0E00               	movlw	0
  9654  01DCEC  D005               	goto	L5
  9655  01DCEE                     l14160:
  9656                           
  9657                           ;daq.c: 401:  r_cal.crc = crcVal_save;
  9658                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  9659  01DCEE  0EFF               	movlw	-1
  9660  01DCF0  006F FF8C  F4DA    	movff	plusw1,_r_cal+154
  9661                           
  9662                           ;daq.c: 402:  return 1;
  9663  01DCF6  0E01               	movlw	1
  9664  01DCF8                     L5:
  9665  01DCF8  6E2A               	movwf	btemp^0,c
  9666                           
  9667                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9668  01DCFA  0EF9               	movlw	249
  9669  01DCFC  26E1               	addwf	fsr1l,f,c
  9670  01DCFE  0EFF               	movlw	255
  9671  01DD00  22E2               	addwfc	fsr1h,f,c
  9672  01DD02  0012               	return		;funcret
  9673  01DD04                     __end_of_read_cal_data:
  9674                           	opt callstack 0
  9675                           
  9676 ;; *************** function _DATAEE_ReadByte *****************
  9677 ;; Defined at:
  9678 ;;		line 194 in file "mcc_generated_files/memory.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  bAdd            2  [STACK] unsigned short 
  9681 ;; Auto vars:     Size  Location     Type
  9682 ;;		None
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1  [STACK] unsigned char 
  9685 ;; Registers used:
  9686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/39
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9696 ;;Total ram usage:        0 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:   15
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_read_cal_data
  9703 ;; This function uses a reentrant model
  9704 ;;
  9705                           
  9706                           	psect	text14
  9707  00252A                     __ptext14:
  9708                           	opt callstack 0
  9709  00252A                     _DATAEE_ReadByte:
  9710                           	opt callstack 14
  9711                           
  9712                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  9713                           ;stkvar	_bAdd @ sp[(0)+-2]
  9714                           
  9715                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9716                           ;incstack = 0
  9717  00252A  0EFF               	movlw	255
  9718  00252C  24E1               	addwf	fsr1l,w,c
  9719  00252E  6ED9               	movwf	fsr2l,c
  9720  002530  0EFF               	movlw	255
  9721  002532  20E2               	addwfc	fsr1h,w,c
  9722  002534  6EDA               	movwf	fsr2h,c
  9723  002536  50DF               	movf	indf2,w,c
  9724  002538  0B03               	andlw	3
  9725  00253A  0139               	movlb	57	; () banked
  9726  00253C  6FE1               	movwf	225,b	;volatile
  9727                           
  9728                           ; BSR set to: 57
  9729                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  9730                           ;stkvar	_bAdd @ sp[(0)+-2]
  9731  00253E  0EFE               	movlw	-2
  9732  002540  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  9733                           
  9734                           ; BSR set to: 57
  9735                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  9736  002546  0E3F               	movlw	-193
  9737  002548  17E5               	andwf	229,f,b	;volsfr
  9738                           
  9739                           ; BSR set to: 57
  9740                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  9741  00254A  81E5               	bsf	229,0,b	;volsfr
  9742                           
  9743                           ; BSR set to: 57
  9744                           ;mcc_generated_files/memory.c: 200:     __nop();
  9745  00254C  F000               	nop	
  9746                           
  9747                           ;mcc_generated_files/memory.c: 201:     __nop();
  9748  00254E  F000               	nop	
  9749                           
  9750                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  9751  002550  006E F78C  F02A    	movff	14819,btemp	;volatile
  9752                           
  9753                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  9754  002556  52E5               	movf	postdec1,f,c
  9755  002558  52E5               	movf	postdec1,f,c
  9756  00255A  0012               	return		;funcret
  9757  00255C                     __end_of_DATAEE_ReadByte:
  9758                           	opt callstack 0
  9759                           
  9760 ;; *************** function _load_hist_data *****************
  9761 ;; Defined at:
  9762 ;;		line 224 in file "mbmc.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;		None
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  esr_rescale     2  [STACK] short 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1  [STACK] void 
  9769 ;; Registers used:
  9770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/1
  9773 ;;		On exit  : 3F/39
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;Total ram usage:        0 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:   16
  9783 ;; This function calls:
  9784 ;;		___fladd
  9785 ;;		___flmul
  9786 ;;		___fltol
  9787 ;;		___xxtofl
  9788 ;;		_start_bsoc
  9789 ;;		_stop_bsoc
  9790 ;;		_time
  9791 ;; This function is called by:
  9792 ;;		_main
  9793 ;; This function uses a reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text15
  9797  019B08                     __ptext15:
  9798                           	opt callstack 0
  9799  019B08                     _load_hist_data:
  9800                           	opt callstack 0
  9801                           
  9802                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9803  019B08  52E6               	movf	postinc1,f,c
  9804  019B0A  52E6               	movf	postinc1,f,c
  9805                           
  9806                           ;mbmc.c: 226:  int16_t esr_rescale;;mbmc.c: 228:  stop_bsoc();
  9807                           
  9808                           ;incstack = 0
  9809  019B0C  ECB2  F016         	call	_stop_bsoc	;wreg free
  9810                           
  9811                           ; BSR set to: 57
  9812                           ;mbmc.c: 229:  esr_rescale = (int16_t) (C.esr * 1000.0);
  9813  019B10  0E00               	movlw	0
  9814  019B12  6EE6               	movwf	postinc1,c
  9815  019B14  0E00               	movlw	0
  9816  019B16  6EE6               	movwf	postinc1,c
  9817  019B18  0E7A               	movlw	122
  9818  019B1A  6EE6               	movwf	postinc1,c
  9819  019B1C  0E44               	movlw	68
  9820  019B1E  6EE6               	movwf	postinc1,c
  9821  019B20  EE23  F009         	lfsr	2,_C+136	;volatile
  9822  019B24  006F FF7B FFE6     	movff	postinc2,postinc1
  9823  019B2A  006F FF7B FFE6     	movff	postinc2,postinc1
  9824  019B30  006F FF7B FFE6     	movff	postinc2,postinc1
  9825  019B36  006F FF7B FFE6     	movff	postinc2,postinc1
  9826  019B3C  EC32  F0B3         	call	___flmul	;wreg free
  9827  019B40  0060  F0AB  FFE6   	movff	btemp,postinc1
  9828  019B46  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9829  019B4C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9830  019B52  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9831  019B58  ECC9  F0F4         	call	___fltol	;wreg free
  9832  019B5C  0060  F0A8  F034   	movff	btemp,btemp+10
  9833  019B62  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9834                           
  9835                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9836  019B68  0EFE               	movlw	-2
  9837  019B6A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
  9838  019B70  0EFF               	movlw	-1
  9839  019B72  0060  F0D7  FFE3   	movff	btemp+11,plusw1
  9840                           
  9841                           ;mbmc.c: 230:  C.hist[0].updates++;
  9842  019B78  EE23  F046         	lfsr	2,_C+197	;volatile
  9843  019B7C  2ADE               	incf	postinc2,f,c
  9844  019B7E  0E00               	movlw	0
  9845  019B80  22DE               	addwfc	postinc2,f,c
  9846  019B82  22DE               	addwfc	postinc2,f,c
  9847  019B84  22DE               	addwfc	postinc2,f,c
  9848                           
  9849                           ;mbmc.c: 231:  C.hist[0].h[12] += C.pvkw;
  9850  019B86  EE23  F029         	lfsr	2,_C+168	;volatile
  9851  019B8A  006F FF7B FFE6     	movff	postinc2,postinc1
  9852  019B90  006F FF7B FFE6     	movff	postinc2,postinc1
  9853  019B96  006F FF7B FFE6     	movff	postinc2,postinc1
  9854  019B9C  006F FF7B FFE6     	movff	postinc2,postinc1
  9855  019BA2  0063  F1F8  F032   	movff	_C+253,btemp+8	;volatile
  9856  019BA8  0063  F1FC  F033   	movff	_C+254,btemp+9	;volatile
  9857  019BAE  0E00               	movlw	0
  9858  019BB0  BE33               	btfsc	(btemp+9)^0,7,c
  9859  019BB2  0EFF               	movlw	255
  9860  019BB4  6E34               	movwf	(btemp+10)^0,c
  9861  019BB6  6E35               	movwf	(btemp+11)^0,c
  9862  019BB8  0060  F0CB  FFE6   	movff	btemp+8,postinc1
  9863  019BBE  0060  F0CF  FFE6   	movff	btemp+9,postinc1
  9864  019BC4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
  9865  019BCA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
  9866  019BD0  0E01               	movlw	1
  9867  019BD2  6EE6               	movwf	postinc1,c
  9868  019BD4  EC9B  F0EC         	call	___xxtofl	;wreg free
  9869  019BD8  0060  F0AB  FFE6   	movff	btemp,postinc1
  9870  019BDE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9871  019BE4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9872  019BEA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9873  019BF0  EC47  F0B7         	call	___fladd	;wreg free
  9874  019BF4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9875  019BFA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9876  019C00  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9877  019C06  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9878  019C0C  ECC9  F0F4         	call	___fltol	;wreg free
  9879  019C10  0060  F0A8  F034   	movff	btemp,btemp+10
  9880  019C16  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9881  019C1C  0060  F0D0  FC7E   	movff	btemp+10,_C+253	;volatile
  9882  019C22  0060  F0D4  FC7F   	movff	btemp+11,_C+254	;volatile
  9883                           
  9884                           ;mbmc.c: 232:  C.hist[0].h[11]++;
  9885  019C28  EE23  F07C         	lfsr	2,_C+251	;volatile
  9886  019C2C  2ADE               	incf	postinc2,f,c
  9887  019C2E  0E00               	movlw	0
  9888  019C30  22DD               	addwfc	postdec2,f,c
  9889                           
  9890                           ;mbmc.c: 233:  if (esr_rescale > C.hist[0].h[10])
  9891                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9892  019C32  EE23  F07A         	lfsr	2,_C+249	;volatile
  9893  019C36  0EFE               	movlw	-2
  9894  019C38  50E3               	movf	plusw1,w,c
  9895  019C3A  5CDE               	subwf	postinc2,w,c
  9896  019C3C  50DE               	movf	postinc2,w,c
  9897  019C3E  0A80               	xorlw	128
  9898  019C40  6E2A               	movwf	btemp^0,c
  9899  019C42  0EFF               	movlw	-1
  9900  019C44  50E3               	movf	plusw1,w,c
  9901  019C46  0A80               	xorlw	128
  9902  019C48  582A               	subwfb	btemp^0,w,c
  9903  019C4A  B0D8               	btfsc	status,0,c
  9904  019C4C  D00D               	goto	l14456
  9905                           
  9906                           ;mbmc.c: 234:   C.hist[0].h[10] = esr_rescale;
  9907                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9908  019C4E  50E1               	movf	fsr1l,w,c
  9909  019C50  0FFE               	addlw	-2
  9910  019C52  6ED9               	movwf	fsr2l,c
  9911  019C54  50E2               	movf	fsr1h,w,c
  9912  019C56  6EDA               	movwf	fsr2h,c
  9913  019C58  0EFF               	movlw	255
  9914  019C5A  22DA               	addwfc	fsr2h,f,c
  9915  019C5C  006F FF78  FC7A    	movff	postinc2,_C+249	;volatile
  9916  019C62  006F FF74  FC7B    	movff	postdec2,_C+250	;volatile
  9917  019C68                     l14456:
  9918                           
  9919                           ;mbmc.c: 235:  if (esr_rescale < C.hist[0].h[9])
  9920  019C68  EE23  F078         	lfsr	2,_C+247	;volatile
  9921                           
  9922                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9923  019C6C  0EFE               	movlw	-2
  9924  019C6E  006F FF8C  F02A    	movff	plusw1,btemp
  9925  019C74  50DE               	movf	postinc2,w,c
  9926  019C76  5C2A               	subwf	btemp^0,w,c
  9927  019C78  0EFF               	movlw	-1
  9928  019C7A  50E3               	movf	plusw1,w,c
  9929  019C7C  0A80               	xorlw	128
  9930  019C7E  6E2A               	movwf	btemp^0,c
  9931  019C80  50DE               	movf	postinc2,w,c
  9932  019C82  0A80               	xorlw	128
  9933  019C84  582A               	subwfb	btemp^0,w,c
  9934  019C86  B0D8               	btfsc	status,0,c
  9935  019C88  D00D               	goto	l14460
  9936                           
  9937                           ;mbmc.c: 236:   C.hist[0].h[9] = esr_rescale;
  9938                           ;stkvar	_esr_rescale @ sp[(-2)+0]
  9939  019C8A  50E1               	movf	fsr1l,w,c
  9940  019C8C  0FFE               	addlw	-2
  9941  019C8E  6ED9               	movwf	fsr2l,c
  9942  019C90  50E2               	movf	fsr1h,w,c
  9943  019C92  6EDA               	movwf	fsr2h,c
  9944  019C94  0EFF               	movlw	255
  9945  019C96  22DA               	addwfc	fsr2h,f,c
  9946  019C98  006F FF78  FC78    	movff	postinc2,_C+247	;volatile
  9947  019C9E  006F FF74  FC79    	movff	postdec2,_C+248	;volatile
  9948  019CA4                     l14460:
  9949                           
  9950                           ;mbmc.c: 237:  C.hist[0].h[8] = C.bv_one_load * 100.0;
  9951  019CA4  0E00               	movlw	0
  9952  019CA6  6EE6               	movwf	postinc1,c
  9953  019CA8  0E00               	movlw	0
  9954  019CAA  6EE6               	movwf	postinc1,c
  9955  019CAC  0EC8               	movlw	200
  9956  019CAE  6EE6               	movwf	postinc1,c
  9957  019CB0  0E42               	movlw	66
  9958  019CB2  6EE6               	movwf	postinc1,c
  9959  019CB4  EE23  F0A7         	lfsr	2,_C+294	;volatile
  9960  019CB8  006F FF7B FFE6     	movff	postinc2,postinc1
  9961  019CBE  006F FF7B FFE6     	movff	postinc2,postinc1
  9962  019CC4  006F FF7B FFE6     	movff	postinc2,postinc1
  9963  019CCA  006F FF7B FFE6     	movff	postinc2,postinc1
  9964  019CD0  EC32  F0B3         	call	___flmul	;wreg free
  9965  019CD4  0060  F0AB  FFE6   	movff	btemp,postinc1
  9966  019CDA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9967  019CE0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9968  019CE6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9969  019CEC  ECC9  F0F4         	call	___fltol	;wreg free
  9970  019CF0  0060  F0A8  F034   	movff	btemp,btemp+10
  9971  019CF6  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9972  019CFC  0060  F0D0  FC76   	movff	btemp+10,_C+245	;volatile
  9973  019D02  0060  F0D4  FC77   	movff	btemp+11,_C+246	;volatile
  9974                           
  9975                           ;mbmc.c: 238:  C.hist[0].h[7] = C.bv_full_load * 100.0;
  9976  019D08  0E00               	movlw	0
  9977  019D0A  6EE6               	movwf	postinc1,c
  9978  019D0C  0E00               	movlw	0
  9979  019D0E  6EE6               	movwf	postinc1,c
  9980  019D10  0EC8               	movlw	200
  9981  019D12  6EE6               	movwf	postinc1,c
  9982  019D14  0E42               	movlw	66
  9983  019D16  6EE6               	movwf	postinc1,c
  9984  019D18  EE23  F0AB         	lfsr	2,_C+298	;volatile
  9985  019D1C  006F FF7B FFE6     	movff	postinc2,postinc1
  9986  019D22  006F FF7B FFE6     	movff	postinc2,postinc1
  9987  019D28  006F FF7B FFE6     	movff	postinc2,postinc1
  9988  019D2E  006F FF7B FFE6     	movff	postinc2,postinc1
  9989  019D34  EC32  F0B3         	call	___flmul	;wreg free
  9990  019D38  0060  F0AB  FFE6   	movff	btemp,postinc1
  9991  019D3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
  9992  019D44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
  9993  019D4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
  9994  019D50  ECC9  F0F4         	call	___fltol	;wreg free
  9995  019D54  0060  F0A8  F034   	movff	btemp,btemp+10
  9996  019D5A  0060  F0AC  F035   	movff	btemp+1,btemp+11
  9997  019D60  0060  F0D0  FC74   	movff	btemp+10,_C+243	;volatile
  9998  019D66  0060  F0D4  FC75   	movff	btemp+11,_C+244	;volatile
  9999                           
 10000                           ;mbmc.c: 239:  C.hist[0].h[6] = C.dynamic_ah;
 10001  019D6C  EE23  F011         	lfsr	2,_C+144	;volatile
 10002  019D70  006F FF7B FFE6     	movff	postinc2,postinc1
 10003  019D76  006F FF7B FFE6     	movff	postinc2,postinc1
 10004  019D7C  006F FF7B FFE6     	movff	postinc2,postinc1
 10005  019D82  006F FF7B FFE6     	movff	postinc2,postinc1
 10006  019D88  ECC9  F0F4         	call	___fltol	;wreg free
 10007  019D8C  0060  F0A8  F034   	movff	btemp,btemp+10
 10008  019D92  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10009  019D98  0060  F0D0  FC72   	movff	btemp+10,_C+241	;volatile
 10010  019D9E  0060  F0D4  FC73   	movff	btemp+11,_C+242	;volatile
 10011                           
 10012                           ;mbmc.c: 240:  C.hist[0].h[5] = C.bkwi;
 10013  019DA4  EE23  F021         	lfsr	2,_C+160	;volatile
 10014  019DA8  006F FF7B FFE6     	movff	postinc2,postinc1
 10015  019DAE  006F FF7B FFE6     	movff	postinc2,postinc1
 10016  019DB4  006F FF7B FFE6     	movff	postinc2,postinc1
 10017  019DBA  006F FF7B FFE6     	movff	postinc2,postinc1
 10018  019DC0  ECC9  F0F4         	call	___fltol	;wreg free
 10019  019DC4  0060  F0A8  F034   	movff	btemp,btemp+10
 10020  019DCA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10021  019DD0  0060  F0D0  FC70   	movff	btemp+10,_C+239	;volatile
 10022  019DD6  0060  F0D4  FC71   	movff	btemp+11,_C+240	;volatile
 10023                           
 10024                           ;mbmc.c: 241:  C.hist[0].h[4] = C.bkwo;
 10025  019DDC  EE23  F025         	lfsr	2,_C+164	;volatile
 10026  019DE0  006F FF7B FFE6     	movff	postinc2,postinc1
 10027  019DE6  006F FF7B FFE6     	movff	postinc2,postinc1
 10028  019DEC  006F FF7B FFE6     	movff	postinc2,postinc1
 10029  019DF2  006F FF7B FFE6     	movff	postinc2,postinc1
 10030  019DF8  ECC9  F0F4         	call	___fltol	;wreg free
 10031  019DFC  0060  F0A8  F034   	movff	btemp,btemp+10
 10032  019E02  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10033  019E08  0060  F0D0  FC6E   	movff	btemp+10,_C+237	;volatile
 10034  019E0E  0060  F0D4  FC6F   	movff	btemp+11,_C+238	;volatile
 10035                           
 10036                           ;mbmc.c: 242:  C.hist[0].h[3] = C.pv_ah;
 10037  019E14  EE23  F015         	lfsr	2,_C+148	;volatile
 10038  019E18  006F FF7B FFE6     	movff	postinc2,postinc1
 10039  019E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 10040  019E24  006F FF7B FFE6     	movff	postinc2,postinc1
 10041  019E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 10042  019E30  ECC9  F0F4         	call	___fltol	;wreg free
 10043  019E34  0060  F0A8  F034   	movff	btemp,btemp+10
 10044  019E3A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10045  019E40  0060  F0D0  FC6C   	movff	btemp+10,_C+235	;volatile
 10046  019E46  0060  F0D4  FC6D   	movff	btemp+11,_C+236	;volatile
 10047                           
 10048                           ;mbmc.c: 243:  C.hist[0].h[0] = C.dynamic_ah_adj;
 10049  019E4C  EE23  F01D         	lfsr	2,_C+156	;volatile
 10050  019E50  006F FF7B FFE6     	movff	postinc2,postinc1
 10051  019E56  006F FF7B FFE6     	movff	postinc2,postinc1
 10052  019E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 10053  019E62  006F FF7B FFE6     	movff	postinc2,postinc1
 10054  019E68  ECC9  F0F4         	call	___fltol	;wreg free
 10055  019E6C  0060  F0A8  F034   	movff	btemp,btemp+10
 10056  019E72  0060  F0AC  F035   	movff	btemp+1,btemp+11
 10057  019E78  0060  F0D0  FC66   	movff	btemp+10,_C+229	;volatile
 10058  019E7E  0060  F0D4  FC67   	movff	btemp+11,_C+230	;volatile
 10059                           
 10060                           ;mbmc.c: 244:  C.hist[0].pclock = time(((void*)0));
 10061  019E84  0E00               	movlw	0
 10062  019E86  6EE6               	movwf	postinc1,c
 10063  019E88  0E00               	movlw	0
 10064  019E8A  6EE6               	movwf	postinc1,c
 10065  019E8C  EC23  F00E         	call	_time	;wreg free
 10066  019E90  52E5               	movf	postdec1,f,c
 10067  019E92  006F FF9C  F041    	movff	indf1,btemp+23
 10068  019E98  52E5               	movf	postdec1,f,c
 10069  019E9A  006F FF9C  F040    	movff	indf1,btemp+22
 10070  019EA0  52E5               	movf	postdec1,f,c
 10071  019EA2  006F FF9C  F03F    	movff	indf1,btemp+21
 10072  019EA8  52E5               	movf	postdec1,f,c
 10073  019EAA  006F FF9C  F03E    	movff	indf1,btemp+20
 10074  019EB0  52E5               	movf	postdec1,f,c
 10075  019EB2  006F FF9C  F03D    	movff	indf1,btemp+19
 10076  019EB8  52E5               	movf	postdec1,f,c
 10077  019EBA  006F FF9C  F03C    	movff	indf1,btemp+18
 10078  019EC0  52E5               	movf	postdec1,f,c
 10079  019EC2  006F FF9C  F03B    	movff	indf1,btemp+17
 10080  019EC8  52E5               	movf	postdec1,f,c
 10081  019ECA  006F FF9C  F03A    	movff	indf1,btemp+16
 10082  019ED0  EE23  F04A         	lfsr	2,_C+201	;volatile
 10083  019ED4  0060  F0EB  FFDE   	movff	btemp+16,postinc2
 10084  019EDA  0060  F0EF  FFDE   	movff	btemp+17,postinc2
 10085  019EE0  0060  F0F3  FFDE   	movff	btemp+18,postinc2
 10086  019EE6  0060  F0F7  FFDE   	movff	btemp+19,postinc2
 10087  019EEC  0060  F0FB  FFDE   	movff	btemp+20,postinc2
 10088  019EF2  0060  F0FF  FFDE   	movff	btemp+21,postinc2
 10089  019EF8  0060  F103  FFDE   	movff	btemp+22,postinc2
 10090  019EFE  0060  F107  FFDE   	movff	btemp+23,postinc2
 10091                           
 10092                           ; BSR set to: 57
 10093                           ;mbmc.c: 245:  C.dynamic_ah = 0.0;
 10094  019F04  0E00               	movlw	0
 10095  019F06  006F FFA0  FC11    	movff	wreg,_C+144	;volatile
 10096  019F0C  0E00               	movlw	0
 10097  019F0E  006F FFA0  FC12    	movff	wreg,_C+145	;volatile
 10098  019F14  0E00               	movlw	0
 10099  019F16  006F FFA0  FC13    	movff	wreg,_C+146	;volatile
 10100  019F1C  0E00               	movlw	0
 10101  019F1E  006F FFA0  FC14    	movff	wreg,_C+147	;volatile
 10102                           
 10103                           ; BSR set to: 57
 10104                           ;mbmc.c: 246:  C.dynamic_ah_adj = 0.0;
 10105  019F24  0E00               	movlw	0
 10106  019F26  006F FFA0  FC1D    	movff	wreg,_C+156	;volatile
 10107  019F2C  0E00               	movlw	0
 10108  019F2E  006F FFA0  FC1E    	movff	wreg,_C+157	;volatile
 10109  019F34  0E00               	movlw	0
 10110  019F36  006F FFA0  FC1F    	movff	wreg,_C+158	;volatile
 10111  019F3C  0E00               	movlw	0
 10112  019F3E  006F FFA0  FC20    	movff	wreg,_C+159	;volatile
 10113                           
 10114                           ; BSR set to: 57
 10115                           ;mbmc.c: 247:  C.pvkw = 0.0;
 10116  019F44  0E00               	movlw	0
 10117  019F46  006F FFA0  FC29    	movff	wreg,_C+168	;volatile
 10118  019F4C  0E00               	movlw	0
 10119  019F4E  006F FFA0  FC2A    	movff	wreg,_C+169	;volatile
 10120  019F54  0E00               	movlw	0
 10121  019F56  006F FFA0  FC2B    	movff	wreg,_C+170	;volatile
 10122  019F5C  0E00               	movlw	0
 10123  019F5E  006F FFA0  FC2C    	movff	wreg,_C+171	;volatile
 10124                           
 10125                           ; BSR set to: 57
 10126                           ;mbmc.c: 248:  start_bsoc();
 10127  019F64  EC27  F015         	call	_start_bsoc	;wreg free
 10128                           
 10129                           ; BSR set to: 57
 10130                           ; _load_hist_data: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10131  019F68  52E5               	movf	postdec1,f,c
 10132  019F6A  52E5               	movf	postdec1,f,c
 10133  019F6C  0012               	return		;funcret
 10134  019F6E                     __end_of_load_hist_data:
 10135                           	opt callstack 0
 10136                           
 10137 ;; *************** function _init_port_dma *****************
 10138 ;; Defined at:
 10139 ;;		line 104 in file "eadog.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;		None
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1  [STACK] void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/2
 10150 ;;		On exit  : 3F/3B
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10157 ;;Total ram usage:        0 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:   15
 10160 ;; This function calls:
 10161 ;;		Nothing
 10162 ;; This function is called by:
 10163 ;;		_main
 10164 ;; This function uses a reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text16
 10168  00255C                     __ptext16:
 10169                           	opt callstack 0
 10170  00255C                     _init_port_dma:
 10171                           	opt callstack 15
 10172                           
 10173                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
 10174                           
 10175                           ; BSR set to: 57
 10176                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10177                           ;incstack = 0
 10178  00255C  0E3F               	movlw	-193
 10179  00255E  013B               	movlb	59	; () banked
 10180  002560  17DD               	andwf	221,f,b	;volatile
 10181                           
 10182                           ; BSR set to: 59
 10183                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
 10184  002562  9BDD               	bcf	221,5,b	;volatile
 10185                           
 10186                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
 10187  002564  51DD               	movf	221,w,b	;volatile
 10188  002566  0BF9               	andlw	-7
 10189  002568  0902               	iorlw	2
 10190  00256A  6FDD               	movwf	221,b	;volatile
 10191                           
 10192                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
 10193  00256C  0EE7               	movlw	-25
 10194  00256E  17DD               	andwf	221,f,b	;volatile
 10195                           
 10196                           ; BSR set to: 59
 10197                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
 10198  002570  81DD               	bsf	221,0,b	;volatile
 10199                           
 10200                           ; BSR set to: 59
 10201                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
 10202  002572  9DDC               	bcf	220,6,b	;volatile
 10203                           
 10204                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
 10205  002574  0E3D               	movlw	61
 10206  002576  6FD1               	movwf	209,b	;volatile
 10207  002578  0EEA               	movlw	234
 10208  00257A  6FD0               	movwf	208,b	;volatile
 10209                           
 10210                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
 10211  00257C  0E81               	movlw	low _port_data
 10212  00257E  6FD9               	movwf	217,b	;volatile
 10213  002580  0E09               	movlw	high _port_data
 10214  002582  6FDA               	movwf	218,b	;volatile
 10215  002584  0E00               	movlw	low (_port_data shr (0+16))
 10216  002586  6FDB               	movwf	219,b	;volatile
 10217                           
 10218                           ; BSR set to: 59
 10219                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
 10220  002588  9BDC               	bcf	220,5,b	;volatile
 10221                           
 10222                           ; BSR set to: 59
 10223                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10224  00258A  0012               	return		;funcret
 10225  00258C                     __end_of_init_port_dma:
 10226                           	opt callstack 0
 10227                           
 10228 ;; *************** function _init_display *****************
 10229 ;; Defined at:
 10230 ;;		line 38 in file "eadog.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;		None
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;		None
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1  [STACK] void 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10239 ;; Tracked objects:
 10240 ;;		On entry : 3F/3B
 10241 ;;		On exit  : 3F/3D
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;Total ram usage:        0 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:   17
 10251 ;; This function calls:
 10252 ;;		_ringBufS_init
 10253 ;;		_send_lcd_cmd
 10254 ;;		_send_lcd_cmd_long
 10255 ;;		_send_lcd_data
 10256 ;;		_wdtdelay
 10257 ;; This function is called by:
 10258 ;;		_main
 10259 ;; This function uses a reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text17
 10263  00038A                     __ptext17:
 10264                           	opt callstack 0
 10265  00038A                     _init_display:
 10266                           	opt callstack 13
 10267                           
 10268                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
 10269                           
 10270                           ; BSR set to: 59
 10271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10272                           ;incstack = 0
 10273  00038A  0E43               	movlw	low _ring_buf1
 10274  00038C  0100               	movlb	0	; () banked
 10275  00038E  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
 10276  000390  0E05               	movlw	high _ring_buf1
 10277  000392  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
 10278                           
 10279                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
 10280  000394  0E00               	movlw	low _ring_buf2
 10281  000396  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
 10282  000398  0E05               	movlw	high _ring_buf2
 10283  00039A  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
 10287  00039C  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10288  0003A2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10289  0003A8  EC7D  F013         	call	_ringBufS_init	;wreg free
 10290                           
 10291                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
 10292  0003AC  0060  F193  FFE6   	movff	_spi_link+4,postinc1
 10293  0003B2  0060  F197  FFE6   	movff	_spi_link+5,postinc1
 10294  0003B8  EC7D  F013         	call	_ringBufS_init	;wreg free
 10295                           
 10296                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
 10297  0003BC  84BE               	bsf	190,2,c	;volatile
 10298                           
 10299                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
 10300  0003BE  013D               	movlb	61	; () banked
 10301  0003C0  9F14               	bcf	20,7,b	;volatile
 10302                           
 10303                           ; BSR set to: 61
 10304                           ;eadog.c: 49:  SPI1CON1 = 0x20;
 10305  0003C2  0E20               	movlw	32
 10306  0003C4  6F15               	movwf	21,b	;volatile
 10307                           
 10308                           ; BSR set to: 61
 10309                           ;eadog.c: 51:  SPI1CON2 = 0x03;
 10310  0003C6  0E03               	movlw	3
 10311  0003C8  6F16               	movwf	22,b	;volatile
 10312                           
 10313                           ; BSR set to: 61
 10314                           ;eadog.c: 53:  SPI1BAUD = 0x04;
 10315  0003CA  0E04               	movlw	4
 10316  0003CC  6F19               	movwf	25,b	;volatile
 10317                           
 10318                           ; BSR set to: 61
 10319                           ;eadog.c: 55:  SPI1CLK = 0x02;
 10320  0003CE  0E02               	movlw	2
 10321  0003D0  6F1C               	movwf	28,b	;volatile
 10322                           
 10323                           ; BSR set to: 61
 10324                           ;eadog.c: 57:  SPI1CON0 = 0x83;
 10325  0003D2  0E83               	movlw	131
 10326  0003D4  6F14               	movwf	20,b	;volatile
 10327                           
 10328                           ; BSR set to: 61
 10329                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
 10330  0003D6  8F14               	bsf	20,7,b	;volatile
 10331                           
 10332                           ; BSR set to: 61
 10333                           ;eadog.c: 60:  wdtdelay(350000);
 10334  0003D8  0E30               	movlw	48
 10335  0003DA  6EE6               	movwf	postinc1,c
 10336  0003DC  0E57               	movlw	87
 10337  0003DE  6EE6               	movwf	postinc1,c
 10338  0003E0  0E05               	movlw	5
 10339  0003E2  6EE6               	movwf	postinc1,c
 10340  0003E4  0E00               	movlw	0
 10341  0003E6  6EE6               	movwf	postinc1,c
 10342  0003E8  EC7F  F00E         	call	_wdtdelay	;wreg free
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
 10346  0003EC  0E46               	movlw	70
 10347  0003EE  6EE6               	movwf	postinc1,c
 10348  0003F0  ECE0  F010         	call	_send_lcd_cmd_long	;wreg free
 10349                           
 10350                           ; BSR set to: 0
 10351                           ;eadog.c: 62:  send_lcd_cmd(0x41);
 10352  0003F4  0E41               	movlw	65
 10353  0003F6  6EE6               	movwf	postinc1,c
 10354  0003F8  EC00  F011         	call	_send_lcd_cmd	;wreg free
 10355                           
 10356                           ; BSR set to: 0
 10357                           ;eadog.c: 63:  wdtdelay(80);
 10358  0003FC  0E50               	movlw	80
 10359  0003FE  6EE6               	movwf	postinc1,c
 10360  000400  0E00               	movlw	0
 10361  000402  6EE6               	movwf	postinc1,c
 10362  000404  0E00               	movlw	0
 10363  000406  6EE6               	movwf	postinc1,c
 10364  000408  0E00               	movlw	0
 10365  00040A  6EE6               	movwf	postinc1,c
 10366  00040C  EC7F  F00E         	call	_wdtdelay	;wreg free
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;eadog.c: 64:  send_lcd_cmd(0x53);
 10370  000410  0E53               	movlw	83
 10371  000412  6EE6               	movwf	postinc1,c
 10372  000414  EC00  F011         	call	_send_lcd_cmd	;wreg free
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;eadog.c: 65:  send_lcd_data(2);
 10376  000418  0E02               	movlw	2
 10377  00041A  6EE6               	movwf	postinc1,c
 10378  00041C  ECAA  F014         	call	_send_lcd_data	;wreg free
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;eadog.c: 66:  wdtdelay(80);
 10382  000420  0E50               	movlw	80
 10383  000422  6EE6               	movwf	postinc1,c
 10384  000424  0E00               	movlw	0
 10385  000426  6EE6               	movwf	postinc1,c
 10386  000428  0E00               	movlw	0
 10387  00042A  6EE6               	movwf	postinc1,c
 10388  00042C  0E00               	movlw	0
 10389  00042E  6EE6               	movwf	postinc1,c
 10390  000430  EC7F  F00E         	call	_wdtdelay	;wreg free
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
 10394  000434  0E51               	movlw	81
 10395  000436  6EE6               	movwf	postinc1,c
 10396  000438  ECE0  F010         	call	_send_lcd_cmd_long	;wreg free
 10397                           
 10398                           ; BSR set to: 0
 10399                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
 10400  00043C  013D               	movlb	61	; () banked
 10401  00043E  9F14               	bcf	20,7,b	;volatile
 10402                           
 10403                           ; BSR set to: 61
 10404                           ;eadog.c: 69:  SPI1CON2 = 0x02;
 10405  000440  0E02               	movlw	2
 10406  000442  6F16               	movwf	22,b	;volatile
 10407                           
 10408                           ; BSR set to: 61
 10409                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
 10410  000444  8F14               	bsf	20,7,b	;volatile
 10411                           
 10412                           ; BSR set to: 61
 10413                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
 10414  000446  931A               	bcf	26,1,b	;volatile
 10415                           
 10416                           ; BSR set to: 61
 10417                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
 10418  000448  0E3F               	movlw	-193
 10419  00044A  013B               	movlb	59	; () banked
 10420  00044C  17FD               	andwf	253,f,b	;volatile
 10421                           
 10422                           ; BSR set to: 59
 10423                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
 10424  00044E  9BFD               	bcf	253,5,b	;volatile
 10425                           
 10426                           ; BSR set to: 59
 10427                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
 10428  000450  51FD               	movf	253,w,b	;volatile
 10429  000452  0BF9               	andlw	-7
 10430  000454  0902               	iorlw	2
 10431  000456  6FFD               	movwf	253,b	;volatile
 10432                           
 10433                           ; BSR set to: 59
 10434                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
 10435  000458  0EE7               	movlw	-25
 10436  00045A  17FD               	andwf	253,f,b	;volatile
 10437                           
 10438                           ; BSR set to: 59
 10439                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
 10440  00045C  81FD               	bsf	253,0,b	;volatile
 10441                           
 10442                           ; BSR set to: 59
 10443                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
 10444  00045E  0E43               	movlw	low _ring_buf1
 10445  000460  6FF9               	movwf	249,b	;volatile
 10446  000462  0E05               	movlw	high _ring_buf1
 10447  000464  6FFA               	movwf	250,b	;volatile
 10448  000466  0E00               	movlw	low (_ring_buf1 shr (0+16))
 10449  000468  6FFB               	movwf	251,b	;volatile
 10450                           
 10451                           ; BSR set to: 59
 10452                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
 10453  00046A  9BFC               	bcf	252,5,b	;volatile
 10454                           
 10455                           ; BSR set to: 59
 10456                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
 10457  00046C  013D               	movlb	61	; () banked
 10458  00046E  831A               	bsf	26,1,b	;volatile
 10459                           
 10460                           ; BSR set to: 61
 10461                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
 10462  000470  94BE               	bcf	190,2,c	;volatile
 10463                           
 10464                           ; BSR set to: 61
 10465                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10466  000472  0012               	return		;funcret
 10467  000474                     __end_of_init_display:
 10468                           	opt callstack 0
 10469                           
 10470 ;; *************** function _send_lcd_data *****************
 10471 ;; Defined at:
 10472 ;;		line 123 in file "eadog.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  data            1  [STACK] const unsigned char 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1  [STACK] void 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10481 ;; Tracked objects:
 10482 ;;		On entry : 3F/0
 10483 ;;		On exit  : 3F/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:   16
 10493 ;; This function calls:
 10494 ;;		_SPI1_Exchange8bit
 10495 ;;		_wdtdelay
 10496 ;; This function is called by:
 10497 ;;		_init_display
 10498 ;; This function uses a reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text18
 10502  002954                     __ptext18:
 10503                           	opt callstack 0
 10504  002954                     _send_lcd_data:
 10505                           	opt callstack 13
 10506                           
 10507                           ; BSR set to: 61
 10508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10509                           ;incstack = 0
 10510                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
 10511  002954  94BC               	bcf	188,2,c	;volatile
 10512                           
 10513                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
 10514                           ;stkvar	_data @ sp[(0)+-1]
 10515  002956  0EFF               	movlw	-1
 10516  002958  50E3               	movf	plusw1,w,c
 10517  00295A  6EE6               	movwf	postinc1,c
 10518  00295C  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
 10519                           
 10520                           ; BSR set to: 57
 10521                           ;eadog.c: 127:  wdtdelay(8);
 10522  002960  0E08               	movlw	8
 10523  002962  6EE6               	movwf	postinc1,c
 10524  002964  0E00               	movlw	0
 10525  002966  6EE6               	movwf	postinc1,c
 10526  002968  0E00               	movlw	0
 10527  00296A  6EE6               	movwf	postinc1,c
 10528  00296C  0E00               	movlw	0
 10529  00296E  6EE6               	movwf	postinc1,c
 10530  002970  EC7F  F00E         	call	_wdtdelay	;wreg free
 10531                           
 10532                           ; BSR set to: 0
 10533                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
 10534  002974  52E5               	movf	postdec1,f,c
 10535  002976  0012               	return		;funcret
 10536  002978                     __end_of_send_lcd_data:
 10537                           	opt callstack 0
 10538                           
 10539 ;; *************** function _send_lcd_cmd_long *****************
 10540 ;; Defined at:
 10541 ;;		line 139 in file "eadog.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;  cmd             1  [STACK] const unsigned char 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1  [STACK] void 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10550 ;; Tracked objects:
 10551 ;;		On entry : 3F/0
 10552 ;;		On exit  : 3F/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10559 ;;Total ram usage:        0 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:   16
 10562 ;; This function calls:
 10563 ;;		_SPI1_Exchange8bit
 10564 ;;		_wdtdelay
 10565 ;; This function is called by:
 10566 ;;		_init_display
 10567 ;; This function uses a reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text19
 10571  0021C0                     __ptext19:
 10572                           	opt callstack 0
 10573  0021C0                     _send_lcd_cmd_long:
 10574                           	opt callstack 13
 10575                           
 10576                           ; BSR set to: 0
 10577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10578                           ;incstack = 0
 10579                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
 10580  0021C0  94BC               	bcf	188,2,c	;volatile
 10581                           
 10582                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
 10583  0021C2  0EFE               	movlw	254
 10584  0021C4  6EE6               	movwf	postinc1,c
 10585  0021C6  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
 10586                           
 10587                           ; BSR set to: 57
 10588                           ;eadog.c: 143:  wdtdelay(8);
 10589  0021CA  0E08               	movlw	8
 10590  0021CC  6EE6               	movwf	postinc1,c
 10591  0021CE  0E00               	movlw	0
 10592  0021D0  6EE6               	movwf	postinc1,c
 10593  0021D2  0E00               	movlw	0
 10594  0021D4  6EE6               	movwf	postinc1,c
 10595  0021D6  0E00               	movlw	0
 10596  0021D8  6EE6               	movwf	postinc1,c
 10597  0021DA  EC7F  F00E         	call	_wdtdelay	;wreg free
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
 10601                           ;stkvar	_cmd @ sp[(0)+-1]
 10602  0021DE  0EFF               	movlw	-1
 10603  0021E0  50E3               	movf	plusw1,w,c
 10604  0021E2  6EE6               	movwf	postinc1,c
 10605  0021E4  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
 10606                           
 10607                           ;eadog.c: 145:  wdtdelay(800);
 10608  0021E8  0E20               	movlw	32
 10609  0021EA  6EE6               	movwf	postinc1,c
 10610  0021EC  0E03               	movlw	3
 10611  0021EE  6EE6               	movwf	postinc1,c
 10612  0021F0  0E00               	movlw	0
 10613  0021F2  6EE6               	movwf	postinc1,c
 10614  0021F4  0E00               	movlw	0
 10615  0021F6  6EE6               	movwf	postinc1,c
 10616  0021F8  EC7F  F00E         	call	_wdtdelay	;wreg free
 10617                           
 10618                           ; BSR set to: 0
 10619                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10620  0021FC  52E5               	movf	postdec1,f,c
 10621  0021FE  0012               	return		;funcret
 10622  002200                     __end_of_send_lcd_cmd_long:
 10623                           	opt callstack 0
 10624                           
 10625 ;; *************** function _send_lcd_cmd *****************
 10626 ;; Defined at:
 10627 ;;		line 130 in file "eadog.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  cmd             1  [STACK] const unsigned char 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1  [STACK] void 
 10634 ;; Registers used:
 10635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10636 ;; Tracked objects:
 10637 ;;		On entry : 3F/0
 10638 ;;		On exit  : 3F/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;Total ram usage:        0 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:   16
 10648 ;; This function calls:
 10649 ;;		_SPI1_Exchange8bit
 10650 ;;		_wdtdelay
 10651 ;; This function is called by:
 10652 ;;		_init_display
 10653 ;; This function uses a reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text20
 10657  002200                     __ptext20:
 10658                           	opt callstack 0
 10659  002200                     _send_lcd_cmd:
 10660                           	opt callstack 13
 10661                           
 10662                           ; BSR set to: 0
 10663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10664                           ;incstack = 0
 10665                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
 10666  002200  94BC               	bcf	188,2,c	;volatile
 10667                           
 10668                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
 10669  002202  0EFE               	movlw	254
 10670  002204  6EE6               	movwf	postinc1,c
 10671  002206  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
 10672                           
 10673                           ; BSR set to: 57
 10674                           ;eadog.c: 134:  wdtdelay(8);
 10675  00220A  0E08               	movlw	8
 10676  00220C  6EE6               	movwf	postinc1,c
 10677  00220E  0E00               	movlw	0
 10678  002210  6EE6               	movwf	postinc1,c
 10679  002212  0E00               	movlw	0
 10680  002214  6EE6               	movwf	postinc1,c
 10681  002216  0E00               	movlw	0
 10682  002218  6EE6               	movwf	postinc1,c
 10683  00221A  EC7F  F00E         	call	_wdtdelay	;wreg free
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
 10687                           ;stkvar	_cmd @ sp[(0)+-1]
 10688  00221E  0EFF               	movlw	-1
 10689  002220  50E3               	movf	plusw1,w,c
 10690  002222  6EE6               	movwf	postinc1,c
 10691  002224  EC69  F015         	call	_SPI1_Exchange8bit	;wreg free
 10692                           
 10693                           ;eadog.c: 136:  wdtdelay(8);
 10694  002228  0E08               	movlw	8
 10695  00222A  6EE6               	movwf	postinc1,c
 10696  00222C  0E00               	movlw	0
 10697  00222E  6EE6               	movwf	postinc1,c
 10698  002230  0E00               	movlw	0
 10699  002232  6EE6               	movwf	postinc1,c
 10700  002234  0E00               	movlw	0
 10701  002236  6EE6               	movwf	postinc1,c
 10702  002238  EC7F  F00E         	call	_wdtdelay	;wreg free
 10703                           
 10704                           ; BSR set to: 0
 10705                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
 10706  00223C  52E5               	movf	postdec1,f,c
 10707  00223E  0012               	return		;funcret
 10708  002240                     __end_of_send_lcd_cmd:
 10709                           	opt callstack 0
 10710                           
 10711 ;; *************** function _wdtdelay *****************
 10712 ;; Defined at:
 10713 ;;		line 23 in file "eadog.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  delay           4  [STACK] const unsigned long 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1  [STACK] void 
 10720 ;; Registers used:
 10721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10722 ;; Tracked objects:
 10723 ;;		On entry : 2/3D
 10724 ;;		On exit  : 3F/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10731 ;;Total ram usage:        0 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:   15
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		_init_display
 10738 ;;		_send_lcd_data
 10739 ;;		_send_lcd_cmd
 10740 ;;		_send_lcd_cmd_long
 10741 ;; This function uses a reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text21
 10745  001CFE                     __ptext21:
 10746                           	opt callstack 0
 10747  001CFE                     _wdtdelay:
 10748                           	opt callstack 14
 10749                           
 10750                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10751                           
 10752                           ; BSR set to: 0
 10753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10754                           ;incstack = 0
 10755  001CFE  0100               	movlb	0	; () banked
 10756  001D00  6B90               	clrf	wdtdelay@dcount& (0+255),b
 10757  001D02  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10758  001D04  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10759  001D06  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10760  001D08                     l1618:
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;eadog.c: 28:   __nop();
 10764  001D08  F000               	nop	
 10765  001D0A  0004               	clrwdt		;# 
 10766                           
 10767                           ;eadog.c: 30:  };
 10768  001D0C  0E01               	movlw	1
 10769  001D0E  0100               	movlb	0	; () banked
 10770  001D10  2790               	addwf	wdtdelay@dcount& (0+255),f,b
 10771  001D12  0E00               	movlw	0
 10772  001D14  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10773  001D16  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10774  001D18  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10775                           
 10776                           ; BSR set to: 0
 10777                           ;stkvar	_delay @ sp[(0)+-4]
 10778  001D1A  0EFC               	movlw	-4
 10779  001D1C  006F FF8C  F02A    	movff	plusw1,btemp
 10780  001D22  5190               	movf	wdtdelay@dcount& (0+255),w,b
 10781  001D24  5C2A               	subwf	btemp^0,w,c
 10782  001D26  0EFD               	movlw	-3
 10783  001D28  006F FF8C  F02A    	movff	plusw1,btemp
 10784  001D2E  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10785  001D30  582A               	subwfb	btemp^0,w,c
 10786  001D32  0EFE               	movlw	-2
 10787  001D34  006F FF8C  F02A    	movff	plusw1,btemp
 10788  001D3A  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10789  001D3C  582A               	subwfb	btemp^0,w,c
 10790  001D3E  0EFF               	movlw	-1
 10791  001D40  006F FF8C  F02A    	movff	plusw1,btemp
 10792  001D46  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10793  001D48  582A               	subwfb	btemp^0,w,c
 10794  001D4A  B0D8               	btfsc	status,0,c
 10795  001D4C  D7DD               	goto	l1618
 10796                           
 10797                           ; BSR set to: 0
 10798                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10799  001D4E  52E5               	movf	postdec1,f,c
 10800  001D50  52E5               	movf	postdec1,f,c
 10801  001D52  52E5               	movf	postdec1,f,c
 10802  001D54  52E5               	movf	postdec1,f,c
 10803  001D56  0012               	return		;funcret
 10804  001D58                     __end_of_wdtdelay:
 10805                           	opt callstack 0
 10806                           
 10807 ;; *************** function _SPI1_Exchange8bit *****************
 10808 ;; Defined at:
 10809 ;;		line 79 in file "mcc_generated_files/spi1.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;  data            1  [STACK] unsigned char 
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  1  [STACK] unsigned char 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr1l, fsr1h, status,2, btemp
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/1
 10820 ;;		On exit  : 3F/39
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;Total ram usage:        0 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:   15
 10830 ;; This function calls:
 10831 ;;		Nothing
 10832 ;; This function is called by:
 10833 ;;		_send_lcd_data
 10834 ;;		_send_lcd_cmd
 10835 ;;		_send_lcd_cmd_long
 10836 ;;		_set_dac
 10837 ;; This function uses a reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text22
 10841  002AD2                     __ptext22:
 10842                           	opt callstack 0
 10843  002AD2                     _SPI1_Exchange8bit:
 10844                           	opt callstack 14
 10845                           
 10846                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
 10847                           
 10848                           ; BSR set to: 0
 10849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10850                           ;incstack = 0
 10851  002AD2  0E01               	movlw	1
 10852  002AD4  013D               	movlb	61	; () banked
 10853  002AD6  6F12               	movwf	18,b	;volatile
 10854                           
 10855                           ; BSR set to: 61
 10856                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
 10857                           ;stkvar	_data @ sp[(0)+-1]
 10858  002AD8  0EFF               	movlw	-1
 10859  002ADA  006F FF8F FD11     	movff	plusw1,15633	;volatile
 10860  002AE0                     l809:
 10861                           
 10862                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
 10863  002AE0  0139               	movlb	57	; () banked
 10864  002AE2  A9A2               	btfss	162,4,b	;volatile
 10865  002AE4  D7FD               	goto	l809
 10866                           
 10867                           ; BSR set to: 57
 10868                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
 10869  002AE6  006F F440  F02A    	movff	15632,btemp	;volatile
 10870                           
 10871                           ; BSR set to: 57
 10872                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10873  002AEC  52E5               	movf	postdec1,f,c
 10874  002AEE  0012               	return		;funcret
 10875  002AF0                     __end_of_SPI1_Exchange8bit:
 10876                           	opt callstack 0
 10877                           
 10878 ;; *************** function _ringBufS_init *****************
 10879 ;; Defined at:
 10880 ;;		line 22 in file "ringbufs.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  _this           2  [STACK] PTR volatile struct ring
 10883 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;		None
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  1  [STACK] void 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10899 ;;Total ram usage:        0 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; Hardware stack levels required when called:   16
 10902 ;; This function calls:
 10903 ;;		_memset
 10904 ;; This function is called by:
 10905 ;;		_init_display
 10906 ;; This function uses a reentrant model
 10907 ;;
 10908                           
 10909                           	psect	text23
 10910  0026FA                     __ptext23:
 10911                           	opt callstack 0
 10912  0026FA                     _ringBufS_init:
 10913                           	opt callstack 13
 10914                           
 10915                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
 10916                           
 10917                           ; BSR set to: 57
 10918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10919                           ;incstack = 0
 10920  0026FA  0E43               	movlw	67
 10921  0026FC  6EE6               	movwf	postinc1,c
 10922  0026FE  0E00               	movlw	0
 10923  002700  6EE6               	movwf	postinc1,c
 10924  002702  0E00               	movlw	0
 10925  002704  6EE6               	movwf	postinc1,c
 10926  002706  0E00               	movlw	0
 10927  002708  6EE6               	movwf	postinc1,c
 10928                           
 10929                           ;stkvar	__this @ sp[(-4)+-2]
 10930  00270A  0EFA               	movlw	-6
 10931  00270C  006F FF8F FFE6     	movff	plusw1,postinc1
 10932  002712  006F FF8F FFE6     	movff	plusw1,postinc1
 10933  002718  EC4F  F0DA         	call	_memset	;wreg free
 10934                           
 10935                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 10936  00271C  52E5               	movf	postdec1,f,c
 10937  00271E  52E5               	movf	postdec1,f,c
 10938  002720  0012               	return		;funcret
 10939  002722                     __end_of_ringBufS_init:
 10940                           	opt callstack 0
 10941                           
 10942 ;; *************** function _init_bsoc *****************
 10943 ;; Defined at:
 10944 ;;		line 110 in file "bsoc.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;		None
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;		None
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1  [STACK] void 
 10951 ;; Registers used:
 10952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/1
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10962 ;;Total ram usage:        0 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; Hardware stack levels required when called:   18
 10965 ;; This function calls:
 10966 ;;		_TMR3_SetInterruptHandler
 10967 ;;		_Volts_to_SOC
 10968 ;;		___fldiv
 10969 ;;		___flmul
 10970 ;;		___fltol
 10971 ;;		___xxtofl
 10972 ;;		_conv_raw_result
 10973 ;; This function is called by:
 10974 ;;		_main
 10975 ;; This function uses a reentrant model
 10976 ;;
 10977                           
 10978                           	psect	text24
 10979  01C9EE                     __ptext24:
 10980                           	opt callstack 0
 10981  01C9EE                     _init_bsoc:
 10982                           	opt callstack 12
 10983                           
 10984                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
 10985                           
 10986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10987                           ;incstack = 0
 10988  01C9EE  0E00               	movlw	0
 10989  01C9F0  6EE6               	movwf	postinc1,c
 10990  01C9F2  0E00               	movlw	0
 10991  01C9F4  6EE6               	movwf	postinc1,c
 10992  01C9F6  0E7A               	movlw	122
 10993  01C9F8  6EE6               	movwf	postinc1,c
 10994  01C9FA  0E44               	movlw	68
 10995  01C9FC  6EE6               	movwf	postinc1,c
 10996  01C9FE  0E00               	movlw	0
 10997  01CA00  6EE6               	movwf	postinc1,c
 10998  01CA02  0E04               	movlw	4
 10999  01CA04  6EE6               	movwf	postinc1,c
 11000  01CA06  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11001  01CA0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11002  01CA10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11003  01CA16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11004  01CA1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11005  01CA22  ECC9  F0F4         	call	___fltol	;wreg free
 11006  01CA26  0060  F0AB  FFE6   	movff	btemp,postinc1
 11007  01CA2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11008  01CA32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11009  01CA38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11010  01CA3E  0E00               	movlw	0
 11011  01CA40  6EE6               	movwf	postinc1,c
 11012  01CA42  EC9B  F0EC         	call	___xxtofl	;wreg free
 11013  01CA46  0060  F0AB  FFE6   	movff	btemp,postinc1
 11014  01CA4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11015  01CA52  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11016  01CA58  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11017  01CA5E  EC32  F0B3         	call	___flmul	;wreg free
 11018  01CA62  0060  F0AB  FFE6   	movff	btemp,postinc1
 11019  01CA68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11020  01CA6E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11021  01CA74  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11022  01CA7A  ECC9  F0F4         	call	___fltol	;wreg free
 11023  01CA7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 11024  01CA84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11025  01CA8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11026  01CA90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11027  01CA96  ECA8  F004         	call	_Volts_to_SOC	;wreg free
 11028  01CA9A  0060  F0A8  FC37   	movff	btemp,_C+182	;volatile
 11029  01CAA0  0060  F0AC  FC38   	movff	btemp+1,_C+183	;volatile
 11030                           
 11031                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
 11032  01CAA6  EE23  F00D         	lfsr	2,_C+140	;volatile
 11033  01CAAA  006F FF7B FFE6     	movff	postinc2,postinc1
 11034  01CAB0  006F FF7B FFE6     	movff	postinc2,postinc1
 11035  01CAB6  006F FF7B FFE6     	movff	postinc2,postinc1
 11036  01CABC  006F FF7B FFE6     	movff	postinc2,postinc1
 11037  01CAC2  0E00               	movlw	0
 11038  01CAC4  6EE6               	movwf	postinc1,c
 11039  01CAC6  0E00               	movlw	0
 11040  01CAC8  6EE6               	movwf	postinc1,c
 11041  01CACA  0EC8               	movlw	200
 11042  01CACC  6EE6               	movwf	postinc1,c
 11043  01CACE  0E42               	movlw	66
 11044  01CAD0  6EE6               	movwf	postinc1,c
 11045  01CAD2  0E00               	movlw	0
 11046  01CAD4  6EE6               	movwf	postinc1,c
 11047  01CAD6  0E00               	movlw	0
 11048  01CAD8  6EE6               	movwf	postinc1,c
 11049  01CADA  0E7A               	movlw	122
 11050  01CADC  6EE6               	movwf	postinc1,c
 11051  01CADE  0E44               	movlw	68
 11052  01CAE0  6EE6               	movwf	postinc1,c
 11053  01CAE2  0E00               	movlw	0
 11054  01CAE4  6EE6               	movwf	postinc1,c
 11055  01CAE6  0E04               	movlw	4
 11056  01CAE8  6EE6               	movwf	postinc1,c
 11057  01CAEA  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11058  01CAEE  0060  F0AB  FFE6   	movff	btemp,postinc1
 11059  01CAF4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11060  01CAFA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11061  01CB00  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11062  01CB06  ECC9  F0F4         	call	___fltol	;wreg free
 11063  01CB0A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11064  01CB10  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11065  01CB16  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11066  01CB1C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11067  01CB22  0E00               	movlw	0
 11068  01CB24  6EE6               	movwf	postinc1,c
 11069  01CB26  EC9B  F0EC         	call	___xxtofl	;wreg free
 11070  01CB2A  0060  F0AB  FFE6   	movff	btemp,postinc1
 11071  01CB30  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11072  01CB36  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11073  01CB3C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11074  01CB42  EC32  F0B3         	call	___flmul	;wreg free
 11075  01CB46  0060  F0AB  FFE6   	movff	btemp,postinc1
 11076  01CB4C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11077  01CB52  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11078  01CB58  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11079  01CB5E  ECC9  F0F4         	call	___fltol	;wreg free
 11080  01CB62  0060  F0AB  FFE6   	movff	btemp,postinc1
 11081  01CB68  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11082  01CB6E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11083  01CB74  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11084  01CB7A  ECA8  F004         	call	_Volts_to_SOC	;wreg free
 11085  01CB7E  0060  F0A8  F034   	movff	btemp,btemp+10
 11086  01CB84  0060  F0AC  F035   	movff	btemp+1,btemp+11
 11087  01CB8A  5034               	movf	(btemp+10)^0,w,c
 11088  01CB8C  6E2E               	movwf	(btemp+4)^0,c
 11089  01CB8E  5035               	movf	(btemp+11)^0,w,c
 11090  01CB90  6E2F               	movwf	(btemp+5)^0,c
 11091  01CB92  6A30               	clrf	(btemp+6)^0,c
 11092  01CB94  6A31               	clrf	(btemp+7)^0,c
 11093  01CB96  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 11094  01CB9C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 11095  01CBA2  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 11096  01CBA8  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 11097  01CBAE  0E00               	movlw	0
 11098  01CBB0  6EE6               	movwf	postinc1,c
 11099  01CBB2  EC9B  F0EC         	call	___xxtofl	;wreg free
 11100  01CBB6  0060  F0AB  FFE6   	movff	btemp,postinc1
 11101  01CBBC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11102  01CBC2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11103  01CBC8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11104  01CBCE  EC64  F0C1         	call	___fldiv	;wreg free
 11105  01CBD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 11106  01CBD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 11107  01CBDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 11108  01CBE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 11109  01CBEA  EC32  F0B3         	call	___flmul	;wreg free
 11110  01CBEE  0060  F0A8  FC11   	movff	btemp,_C+144	;volatile
 11111  01CBF4  0060  F0AC  FC12   	movff	btemp+1,_C+145	;volatile
 11112  01CBFA  0060  F0B0  FC13   	movff	btemp+2,_C+146	;volatile
 11113  01CC00  0060  F0B4  FC14   	movff	btemp+3,_C+147	;volatile
 11114                           
 11115                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
 11116  01CC06  EE23  F011         	lfsr	2,_C+144	;volatile
 11117  01CC0A  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 11118  01CC10  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 11119  01CC16  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 11120  01CC1C  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 11121                           
 11122                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
 11123  01CC22  0EE2               	movlw	low _calc_bsoc
 11124  01CC24  6EE6               	movwf	postinc1,c
 11125  01CC26  0E49               	movlw	high _calc_bsoc
 11126  01CC28  6EE6               	movwf	postinc1,c
 11127  01CC2A  0E01               	movlw	low (_calc_bsoc shr (0+16))
 11128  01CC2C  6EE6               	movwf	postinc1,c
 11129  01CC2E  EC09  F014         	call	_TMR3_SetInterruptHandler	;wreg free
 11130                           
 11131                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 11132  01CC32  0012               	return		;funcret
 11133  01CC34                     __end_of_init_bsoc:
 11134                           	opt callstack 0
 11135                           
 11136 ;; *************** function _Volts_to_SOC *****************
 11137 ;; Defined at:
 11138 ;;		line 175 in file "bsoc.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  cvoltage        4  [STACK] const unsigned long 
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;  soc             2  [STACK] unsigned short 
 11143 ;;  slot            1  [STACK] unsigned char 
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  2  [STACK] unsigned short 
 11146 ;; Registers used:
 11147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/1
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11157 ;;Total ram usage:        0 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:   15
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_init_bsoc
 11164 ;; This function uses a reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text25
 11168  000950                     __ptext25:
 11169                           	opt callstack 0
 11170  000950                     _Volts_to_SOC:
 11171                           	opt callstack 0
 11172                           
 11173                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11174  000950  52E6               	movf	postinc1,f,c
 11175  000952  52E6               	movf	postinc1,f,c
 11176  000954  52E6               	movf	postinc1,f,c
 11177                           
 11178                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
 11179                           ;stkvar	_soc @ sp[(-3)+0]
 11180                           
 11181                           ;incstack = 0
 11182  000956  0EFD               	movlw	-3
 11183  000958  6AE3               	clrf	plusw1,c
 11184  00095A  0EFE               	movlw	-2
 11185  00095C  6AE3               	clrf	plusw1,c
 11186                           
 11187                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
 11188                           ;stkvar	_slot @ sp[(-3)+2]
 11189  00095E  0EFF               	movlw	-1
 11190  000960  6AE3               	clrf	plusw1,c
 11191  000962                     l13874:
 11192                           
 11193                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
 11194                           ;stkvar	_cvoltage @ sp[(-3)+-4]
 11195                           ;stkvar	_slot @ sp[(-3)+2]
 11196  000962  0EFF               	movlw	-1
 11197  000964  50E3               	movf	plusw1,w,c
 11198  000966  0D08               	mullw	8
 11199  000968  0EAB               	movlw	low _BVSOC_TABLE
 11200  00096A  24F3               	addwf	243,w,c
 11201  00096C  6EF6               	movwf	tblptrl,c
 11202  00096E  0EF7               	movlw	high _BVSOC_TABLE
 11203  000970  20F4               	addwfc	244,w,c
 11204  000972  6EF7               	movwf	tblptrh,c
 11205  000974                     	if	1	;There are 3 active tblptr bytes
 11206  000974  6AF8               	clrf	tblptru,c
 11207  000976  0E00               	movlw	low (__mediumconst shr (0+16))
 11208  000978  22F8               	addwfc	tblptru,f,c
 11209  00097A                     	endif
 11210  00097A  0EF9               	movlw	-7
 11211  00097C  50E3               	movf	plusw1,w,c
 11212  00097E  0009               	tblrd		*+
 11213  000980  5CF5               	subwf	tablat,w,c
 11214  000982  0EFA               	movlw	-6
 11215  000984  50E3               	movf	plusw1,w,c
 11216  000986  0009               	tblrd		*+
 11217  000988  58F5               	subwfb	tablat,w,c
 11218  00098A  0EFB               	movlw	-5
 11219  00098C  50E3               	movf	plusw1,w,c
 11220  00098E  0009               	tblrd		*+
 11221  000990  58F5               	subwfb	tablat,w,c
 11222  000992  0EFC               	movlw	-4
 11223  000994  50E3               	movf	plusw1,w,c
 11224  000996  0009               	tblrd		*+
 11225  000998  58F5               	subwfb	tablat,w,c
 11226  00099A  B0D8               	btfsc	status,0,c
 11227  00099C  D020               	goto	l13878
 11228                           
 11229                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
 11230                           ;stkvar	_slot @ sp[(-3)+2]
 11231  00099E  0EFF               	movlw	-1
 11232  0009A0  50E3               	movf	plusw1,w,c
 11233  0009A2  0D08               	mullw	8
 11234  0009A4  0E04               	movlw	4
 11235  0009A6  26F3               	addwf	243,f,c
 11236  0009A8  0E00               	movlw	0
 11237  0009AA  22F4               	addwfc	244,f,c
 11238  0009AC  0EAB               	movlw	low _BVSOC_TABLE
 11239  0009AE  24F3               	addwf	243,w,c
 11240  0009B0  6EF6               	movwf	tblptrl,c
 11241  0009B2  0EF7               	movlw	high _BVSOC_TABLE
 11242  0009B4  20F4               	addwfc	244,w,c
 11243  0009B6  6EF7               	movwf	tblptrh,c
 11244  0009B8                     	if	1	;There are 3 active tblptr bytes
 11245  0009B8  6AF8               	clrf	tblptru,c
 11246  0009BA  0E00               	movlw	low (__mediumconst shr (0+16))
 11247  0009BC  22F8               	addwfc	tblptru,f,c
 11248  0009BE                     	endif
 11249  0009BE  0009               	tblrd		*+
 11250  0009C0  006F FFD4  F034    	movff	tablat,btemp+10
 11251  0009C6  0009               	tblrd		*+
 11252  0009C8  006F FFD4  F035    	movff	tablat,btemp+11
 11253                           
 11254                           ;stkvar	_soc @ sp[(-3)+0]
 11255  0009CE  0EFD               	movlw	-3
 11256  0009D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 11257  0009D6  0EFE               	movlw	-2
 11258  0009D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 11259  0009DE                     l13878:
 11260                           
 11261                           ;bsoc.c: 187:  }
 11262                           ;stkvar	_slot @ sp[(-3)+2]
 11263  0009DE  0EFF               	movlw	-1
 11264  0009E0  2AE3               	incf	plusw1,f,c
 11265                           
 11266                           ;stkvar	_slot @ sp[(-3)+2]
 11267  0009E2  0EFF               	movlw	-1
 11268  0009E4  006F FF8C  F02A    	movff	plusw1,btemp
 11269  0009EA  0E19               	movlw	25
 11270  0009EC  642A               	cpfsgt	btemp^0,c
 11271  0009EE  D7B9               	goto	l13874
 11272                           
 11273                           ;bsoc.c: 188:  return soc;
 11274                           ;stkvar	_soc @ sp[(-3)+0]
 11275  0009F0  0EFD               	movlw	-3
 11276  0009F2  006F FF8C  F02A    	movff	plusw1,btemp
 11277  0009F8  0EFE               	movlw	-2
 11278  0009FA  006F FF8C  F02B    	movff	plusw1,btemp+1
 11279                           
 11280                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
 11281  000A00  0EF9               	movlw	249
 11282  000A02  26E1               	addwf	fsr1l,f,c
 11283  000A04  0EFF               	movlw	255
 11284  000A06  22E2               	addwfc	fsr1h,f,c
 11285  000A08  0012               	return		;funcret
 11286  000A0A                     __end_of_Volts_to_SOC:
 11287                           	opt callstack 0
 11288                           
 11289 ;; *************** function _hid_display *****************
 11290 ;; Defined at:
 11291 ;;		line 22 in file "hid.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  h               2  [STACK] PTR struct H_data
 11294 ;;		 -> H(9), 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;		None
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  2  [STACK] PTR struct H_data
 11299 ;; Registers used:
 11300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/39
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;Total ram usage:        0 bytes
 11311 ;; Hardware stack levels used:    1
 11312 ;; Hardware stack levels required when called:   17
 11313 ;; This function calls:
 11314 ;;		_hid_input
 11315 ;; This function is called by:
 11316 ;;		_main
 11317 ;; This function uses a reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text26
 11321  01D508                     __ptext26:
 11322                           	opt callstack 0
 11323  01D508                     _hid_display:
 11324                           	opt callstack 13
 11325                           
 11326                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
 11327                           ;stkvar	_h @ sp[(0)+-2]
 11328                           
 11329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11330                           ;incstack = 0
 11331  01D508  0EFE               	movlw	-2
 11332  01D50A  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  01D510  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  01D516  EC88  F0FB         	call	_hid_input	;wreg free
 11335                           
 11336                           ;hid.c: 26:  switch (h->h_state) {
 11337  01D51A  D0E6               	goto	l17320
 11338  01D51C                     l17294:
 11339                           
 11340                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
 11341                           ;stkvar	_h @ sp[(0)+-2]
 11342  01D51C  0EFE               	movlw	-2
 11343  01D51E  006F FF8C  F034    	movff	plusw1,btemp+10
 11344  01D524  0EFF               	movlw	-1
 11345  01D526  006F FF8C  F035    	movff	plusw1,btemp+11
 11346  01D52C  0E01               	movlw	1
 11347  01D52E  2434               	addwf	(btemp+10)^0,w,c
 11348  01D530  6ED9               	movwf	fsr2l,c
 11349  01D532  0E00               	movlw	0
 11350  01D534  2035               	addwfc	(btemp+11)^0,w,c
 11351  01D536  6EDA               	movwf	fsr2h,c
 11352  01D538  0E01               	movlw	1
 11353  01D53A  6EDF               	movwf	indf2,c
 11354                           
 11355                           ;hid.c: 29:   h->hid_display = HID_MAIN;
 11356                           ;stkvar	_h @ sp[(0)+-2]
 11357  01D53C  0EFE               	movlw	-2
 11358  01D53E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11359  01D544  0EFF               	movlw	-1
 11360  01D546  006F FF8F FFDA     	movff	plusw1,fsr2h
 11361  01D54C  0E00               	movlw	0
 11362  01D54E  6EDF               	movwf	indf2,c
 11363                           
 11364                           ;hid.c: 30:   h->wait_enter = 1;
 11365                           ;stkvar	_h @ sp[(0)+-2]
 11366  01D550  0EFE               	movlw	-2
 11367  01D552  006F FF8C  F034    	movff	plusw1,btemp+10
 11368  01D558  0EFF               	movlw	-1
 11369  01D55A  006F FF8C  F035    	movff	plusw1,btemp+11
 11370  01D560  0E04               	movlw	4
 11371  01D562  2434               	addwf	(btemp+10)^0,w,c
 11372  01D564  6ED9               	movwf	fsr2l,c
 11373  01D566  0E00               	movlw	0
 11374  01D568  2035               	addwfc	(btemp+11)^0,w,c
 11375  01D56A  6EDA               	movwf	fsr2h,c
 11376  01D56C  0E01               	movlw	1
 11377  01D56E  6EDF               	movwf	indf2,c
 11378                           
 11379                           ;hid.c: 31:   h->wait_select = 1;
 11380                           ;stkvar	_h @ sp[(0)+-2]
 11381  01D570  0EFE               	movlw	-2
 11382  01D572  006F FF8C  F034    	movff	plusw1,btemp+10
 11383  01D578  0EFF               	movlw	-1
 11384  01D57A  006F FF8C  F035    	movff	plusw1,btemp+11
 11385  01D580  0E02               	movlw	2
 11386  01D582  2434               	addwf	(btemp+10)^0,w,c
 11387  01D584  6ED9               	movwf	fsr2l,c
 11388  01D586  0E00               	movlw	0
 11389  01D588  2035               	addwfc	(btemp+11)^0,w,c
 11390  01D58A  6EDA               	movwf	fsr2h,c
 11391  01D58C  0E01               	movlw	1
 11392  01D58E  6EDF               	movwf	indf2,c
 11393                           
 11394                           ;hid.c: 32:   h->wait_calib = 1;
 11395                           ;stkvar	_h @ sp[(0)+-2]
 11396  01D590  0EFE               	movlw	-2
 11397  01D592  006F FF8C  F034    	movff	plusw1,btemp+10
 11398  01D598  0EFF               	movlw	-1
 11399  01D59A  006F FF8C  F035    	movff	plusw1,btemp+11
 11400  01D5A0  0E06               	movlw	6
 11401  01D5A2  2434               	addwf	(btemp+10)^0,w,c
 11402  01D5A4  6ED9               	movwf	fsr2l,c
 11403  01D5A6  0E00               	movlw	0
 11404  01D5A8  2035               	addwfc	(btemp+11)^0,w,c
 11405  01D5AA  6EDA               	movwf	fsr2h,c
 11406  01D5AC  0E01               	movlw	1
 11407  01D5AE  6EDF               	movwf	indf2,c
 11408                           
 11409                           ;hid.c: 33:   h->select_p = SW_OFF;
 11410                           ;stkvar	_h @ sp[(0)+-2]
 11411  01D5B0  0EFE               	movlw	-2
 11412  01D5B2  006F FF8C  F034    	movff	plusw1,btemp+10
 11413  01D5B8  0EFF               	movlw	-1
 11414  01D5BA  006F FF8C  F035    	movff	plusw1,btemp+11
 11415  01D5C0  0E03               	movlw	3
 11416  01D5C2  2434               	addwf	(btemp+10)^0,w,c
 11417  01D5C4  6ED9               	movwf	fsr2l,c
 11418  01D5C6  0E00               	movlw	0
 11419  01D5C8  2035               	addwfc	(btemp+11)^0,w,c
 11420  01D5CA  6EDA               	movwf	fsr2h,c
 11421  01D5CC  0E00               	movlw	0
 11422  01D5CE  6EDF               	movwf	indf2,c
 11423                           
 11424                           ;hid.c: 34:   h->enter_p = SW_OFF;
 11425                           ;stkvar	_h @ sp[(0)+-2]
 11426  01D5D0  0EFE               	movlw	-2
 11427  01D5D2  006F FF8C  F034    	movff	plusw1,btemp+10
 11428  01D5D8  0EFF               	movlw	-1
 11429  01D5DA  006F FF8C  F035    	movff	plusw1,btemp+11
 11430  01D5E0  0E05               	movlw	5
 11431  01D5E2  2434               	addwf	(btemp+10)^0,w,c
 11432  01D5E4  6ED9               	movwf	fsr2l,c
 11433  01D5E6  0E00               	movlw	0
 11434  01D5E8  2035               	addwfc	(btemp+11)^0,w,c
 11435  01D5EA  6EDA               	movwf	fsr2h,c
 11436  01D5EC  0E00               	movlw	0
 11437  01D5EE  6EDF               	movwf	indf2,c
 11438                           
 11439                           ;hid.c: 35:   h->calib_p = SW_OFF;
 11440                           ;stkvar	_h @ sp[(0)+-2]
 11441  01D5F0  0EFE               	movlw	-2
 11442  01D5F2  006F FF8C  F034    	movff	plusw1,btemp+10
 11443  01D5F8  0EFF               	movlw	-1
 11444  01D5FA  006F FF8C  F035    	movff	plusw1,btemp+11
 11445  01D600  0E07               	movlw	7
 11446  01D602  2434               	addwf	(btemp+10)^0,w,c
 11447  01D604  6ED9               	movwf	fsr2l,c
 11448  01D606  0E00               	movlw	0
 11449  01D608  2035               	addwfc	(btemp+11)^0,w,c
 11450  01D60A  6EDA               	movwf	fsr2h,c
 11451  01D60C  0E00               	movlw	0
 11452  01D60E  D06A               	goto	L6
 11453  01D610                     l17310:
 11454                           
 11455                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
 11456                           ;stkvar	_h @ sp[(0)+-2]
 11457  01D610  0EFE               	movlw	-2
 11458  01D612  006F FF8C  F034    	movff	plusw1,btemp+10
 11459  01D618  0EFF               	movlw	-1
 11460  01D61A  006F FF8C  F035    	movff	plusw1,btemp+11
 11461  01D620  0E02               	movlw	2
 11462  01D622  2434               	addwf	(btemp+10)^0,w,c
 11463  01D624  6ED9               	movwf	fsr2l,c
 11464  01D626  0E00               	movlw	0
 11465  01D628  2035               	addwfc	(btemp+11)^0,w,c
 11466  01D62A  6EDA               	movwf	fsr2h,c
 11467  01D62C  50DF               	movf	indf2,w,c
 11468  01D62E  A4D8               	btfss	status,2,c
 11469  01D630  D076               	goto	l2296
 11470                           
 11471                           ;stkvar	_h @ sp[(0)+-2]
 11472  01D632  0EFE               	movlw	-2
 11473  01D634  006F FF8C  F034    	movff	plusw1,btemp+10
 11474  01D63A  0EFF               	movlw	-1
 11475  01D63C  006F FF8C  F035    	movff	plusw1,btemp+11
 11476  01D642  0E03               	movlw	3
 11477  01D644  2434               	addwf	(btemp+10)^0,w,c
 11478  01D646  6ED9               	movwf	fsr2l,c
 11479  01D648  0E00               	movlw	0
 11480  01D64A  2035               	addwfc	(btemp+11)^0,w,c
 11481  01D64C  6EDA               	movwf	fsr2h,c
 11482  01D64E  50DF               	movf	indf2,w,c
 11483  01D650  A4D8               	btfss	status,2,c
 11484  01D652  D065               	goto	l2296
 11485                           
 11486                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
 11487                           ;stkvar	_h @ sp[(0)+-2]
 11488  01D654  0EFE               	movlw	-2
 11489  01D656  006F FF8C  F034    	movff	plusw1,btemp+10
 11490  01D65C  0EFF               	movlw	-1
 11491  01D65E  006F FF8C  F035    	movff	plusw1,btemp+11
 11492  01D664  0E08               	movlw	8
 11493  01D666  2434               	addwf	(btemp+10)^0,w,c
 11494  01D668  6ED9               	movwf	fsr2l,c
 11495  01D66A  0E00               	movlw	0
 11496  01D66C  2035               	addwfc	(btemp+11)^0,w,c
 11497  01D66E  6EDA               	movwf	fsr2h,c
 11498                           
 11499                           ;stkvar	_h @ sp[(0)+-2]
 11500  01D670  0EFE               	movlw	-2
 11501  01D672  006F FF8C  F034    	movff	plusw1,btemp+10
 11502  01D678  0EFF               	movlw	-1
 11503  01D67A  006F FF8C  F035    	movff	plusw1,btemp+11
 11504  01D680  0E08               	movlw	8
 11505  01D682  2434               	addwf	(btemp+10)^0,w,c
 11506  01D684  6EE9               	movwf	fsr0l,c
 11507  01D686  0E00               	movlw	0
 11508  01D688  2035               	addwfc	(btemp+11)^0,w,c
 11509  01D68A  6EEA               	movwf	fsr0h,c
 11510  01D68C  2AEF               	incf	indf0,f,c
 11511  01D68E  50EF               	movf	indf0,w,c
 11512  01D690  0B03               	andlw	3
 11513  01D692  6EDF               	movwf	indf2,c
 11514                           
 11515                           ;hid.c: 41:    h->hid_display = h->sequence;
 11516                           ;stkvar	_h @ sp[(0)+-2]
 11517  01D694  0EFE               	movlw	-2
 11518  01D696  006F FF8C  F034    	movff	plusw1,btemp+10
 11519  01D69C  0EFF               	movlw	-1
 11520  01D69E  006F FF8C  F035    	movff	plusw1,btemp+11
 11521  01D6A4  0E08               	movlw	8
 11522  01D6A6  2434               	addwf	(btemp+10)^0,w,c
 11523  01D6A8  6ED9               	movwf	fsr2l,c
 11524  01D6AA  0E00               	movlw	0
 11525  01D6AC  2035               	addwfc	(btemp+11)^0,w,c
 11526  01D6AE  6EDA               	movwf	fsr2h,c
 11527                           
 11528                           ;stkvar	_h @ sp[(0)+-2]
 11529  01D6B0  0EFE               	movlw	-2
 11530  01D6B2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11531  01D6B8  0EFF               	movlw	-1
 11532  01D6BA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11533  01D6C0  006F FF7F FFEF     	movff	indf2,indf0
 11534                           
 11535                           ;hid.c: 42:    h->wait_select = 1;
 11536                           ;stkvar	_h @ sp[(0)+-2]
 11537  01D6C6  0EFE               	movlw	-2
 11538  01D6C8  006F FF8C  F034    	movff	plusw1,btemp+10
 11539  01D6CE  0EFF               	movlw	-1
 11540  01D6D0  006F FF8C  F035    	movff	plusw1,btemp+11
 11541  01D6D6  0E02               	movlw	2
 11542  01D6D8  2434               	addwf	(btemp+10)^0,w,c
 11543  01D6DA  6ED9               	movwf	fsr2l,c
 11544  01D6DC  0E00               	movlw	0
 11545  01D6DE  2035               	addwfc	(btemp+11)^0,w,c
 11546  01D6E0  6EDA               	movwf	fsr2h,c
 11547  01D6E2  0E01               	movlw	1
 11548  01D6E4                     L6:
 11549  01D6E4  6EDF               	movwf	indf2,c
 11550  01D6E6  D01B               	goto	l2296
 11551  01D6E8                     l17320:
 11552                           
 11553                           ;stkvar	_h @ sp[(0)+-2]
 11554  01D6E8  0EFE               	movlw	-2
 11555  01D6EA  006F FF8C  F034    	movff	plusw1,btemp+10
 11556  01D6F0  0EFF               	movlw	-1
 11557  01D6F2  006F FF8C  F035    	movff	plusw1,btemp+11
 11558  01D6F8  0E01               	movlw	1
 11559  01D6FA  2434               	addwf	(btemp+10)^0,w,c
 11560  01D6FC  6ED9               	movwf	fsr2l,c
 11561  01D6FE  0E00               	movlw	0
 11562  01D700  2035               	addwfc	(btemp+11)^0,w,c
 11563  01D702  6EDA               	movwf	fsr2h,c
 11564  01D704  50DF               	movf	indf2,w,c
 11565  01D706  6E34               	movwf	(btemp+10)^0,c
 11566  01D708  6A35               	clrf	(btemp+11)^0,c
 11567                           
 11568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11569                           ; Switch size 1, requested type "simple"
 11570                           ; Number of cases is 1, Range of values is 0 to 0
 11571                           ; switch strategies available:
 11572                           ; Name         Instructions Cycles
 11573                           ; simple_byte            4     3 (average)
 11574                           ;	Chosen strategy is simple_byte
 11575  01D70A  5035               	movf	(btemp+11)^0,w,c
 11576  01D70C  0A00               	xorlw	0	; case 0
 11577  01D70E  A4D8               	btfss	status,2,c
 11578  01D710  D77F               	goto	l17310
 11579                           
 11580                           ; Switch size 1, requested type "simple"
 11581                           ; Number of cases is 2, Range of values is 0 to 1
 11582                           ; switch strategies available:
 11583                           ; Name         Instructions Cycles
 11584                           ; simple_byte            7     4 (average)
 11585                           ;	Chosen strategy is simple_byte
 11586  01D712  5034               	movf	(btemp+10)^0,w,c
 11587  01D714  0A00               	xorlw	0	; case 0
 11588  01D716  B4D8               	btfsc	status,2,c
 11589  01D718  D701               	goto	l17294
 11590  01D71A  0A01               	xorlw	1	; case 1
 11591  01D71C  D779               	goto	l17310
 11592  01D71E                     l2296:
 11593                           
 11594                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 11595  01D71E  52E5               	movf	postdec1,f,c
 11596  01D720  52E5               	movf	postdec1,f,c
 11597  01D722  0012               	return		;funcret
 11598  01D724                     __end_of_hid_display:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function _hid_input *****************
 11602 ;; Defined at:
 11603 ;;		line 3 in file "hid.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  h               2  [STACK] PTR struct H_data
 11606 ;;		 -> H(9), 
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;		None
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  2  [STACK] PTR struct H_data
 11611 ;; Registers used:
 11612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/39
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11622 ;;Total ram usage:        0 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:   16
 11625 ;; This function calls:
 11626 ;;		_get_switch
 11627 ;; This function is called by:
 11628 ;;		_hid_display
 11629 ;; This function uses a reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text27
 11633  01F710                     __ptext27:
 11634                           	opt callstack 0
 11635  01F710                     _hid_input:
 11636                           	opt callstack 13
 11637                           
 11638                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 11639                           
 11640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11641                           ;incstack = 0
 11642  01F710  0E02               	movlw	2
 11643  01F712  6EE6               	movwf	postinc1,c
 11644  01F714  EC25  F013         	call	_get_switch	;wreg free
 11645  01F718  502A               	movf	btemp^0,w,c
 11646  01F71A  B4D8               	btfsc	status,2,c
 11647  01F71C  D02C               	goto	l17056
 11648                           
 11649                           ;hid.c: 6:   h->wait_select = 0;
 11650                           ;stkvar	_h @ sp[(0)+-2]
 11651  01F71E  0EFE               	movlw	-2
 11652  01F720  006F FF8C  F034    	movff	plusw1,btemp+10
 11653  01F726  0EFF               	movlw	-1
 11654  01F728  006F FF8C  F035    	movff	plusw1,btemp+11
 11655  01F72E  0E02               	movlw	2
 11656  01F730  2434               	addwf	(btemp+10)^0,w,c
 11657  01F732  6ED9               	movwf	fsr2l,c
 11658  01F734  0E00               	movlw	0
 11659  01F736  2035               	addwfc	(btemp+11)^0,w,c
 11660  01F738  6EDA               	movwf	fsr2h,c
 11661  01F73A  0E00               	movlw	0
 11662  01F73C  6EDF               	movwf	indf2,c
 11663                           
 11664                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 11665  01F73E  0E02               	movlw	2
 11666  01F740  6EE6               	movwf	postinc1,c
 11667  01F742  EC25  F013         	call	_get_switch	;wreg free
 11668  01F746  502A               	movf	btemp^0,w,c
 11669  01F748  B4D8               	btfsc	status,2,c
 11670  01F74A  D003               	goto	u16590
 11671  01F74C  6A35               	clrf	(btemp+11)^0,c
 11672  01F74E  2A35               	incf	(btemp+11)^0,f,c
 11673  01F750  D001               	goto	u16608
 11674  01F752                     u16590:
 11675  01F752  6A35               	clrf	(btemp+11)^0,c
 11676  01F754                     u16608:
 11677                           
 11678                           ;stkvar	_h @ sp[(0)+-2]
 11679  01F754  0EFE               	movlw	-2
 11680  01F756  006F FF8C  F032    	movff	plusw1,btemp+8
 11681  01F75C  0EFF               	movlw	-1
 11682  01F75E  006F FF8C  F033    	movff	plusw1,btemp+9
 11683  01F764  0E03               	movlw	3
 11684  01F766  2432               	addwf	(btemp+8)^0,w,c
 11685  01F768  6ED9               	movwf	fsr2l,c
 11686  01F76A  0E00               	movlw	0
 11687  01F76C  2033               	addwfc	(btemp+9)^0,w,c
 11688  01F76E  6EDA               	movwf	fsr2h,c
 11689  01F770  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11690  01F776                     l17056:
 11691                           
 11692                           ;hid.c: 10:  if (get_switch(SENTER)) {
 11693  01F776  0E03               	movlw	3
 11694  01F778  6EE6               	movwf	postinc1,c
 11695  01F77A  EC25  F013         	call	_get_switch	;wreg free
 11696  01F77E  502A               	movf	btemp^0,w,c
 11697  01F780  B4D8               	btfsc	status,2,c
 11698  01F782  D02C               	goto	l17062
 11699                           
 11700                           ;hid.c: 11:   h->wait_enter = 0;
 11701                           ;stkvar	_h @ sp[(0)+-2]
 11702  01F784  0EFE               	movlw	-2
 11703  01F786  006F FF8C  F034    	movff	plusw1,btemp+10
 11704  01F78C  0EFF               	movlw	-1
 11705  01F78E  006F FF8C  F035    	movff	plusw1,btemp+11
 11706  01F794  0E04               	movlw	4
 11707  01F796  2434               	addwf	(btemp+10)^0,w,c
 11708  01F798  6ED9               	movwf	fsr2l,c
 11709  01F79A  0E00               	movlw	0
 11710  01F79C  2035               	addwfc	(btemp+11)^0,w,c
 11711  01F79E  6EDA               	movwf	fsr2h,c
 11712  01F7A0  0E00               	movlw	0
 11713  01F7A2  6EDF               	movwf	indf2,c
 11714                           
 11715                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 11716  01F7A4  0E03               	movlw	3
 11717  01F7A6  6EE6               	movwf	postinc1,c
 11718  01F7A8  EC25  F013         	call	_get_switch	;wreg free
 11719  01F7AC  502A               	movf	btemp^0,w,c
 11720  01F7AE  B4D8               	btfsc	status,2,c
 11721  01F7B0  D003               	goto	u16620
 11722  01F7B2  6A35               	clrf	(btemp+11)^0,c
 11723  01F7B4  2A35               	incf	(btemp+11)^0,f,c
 11724  01F7B6  D001               	goto	u16638
 11725  01F7B8                     u16620:
 11726  01F7B8  6A35               	clrf	(btemp+11)^0,c
 11727  01F7BA                     u16638:
 11728                           
 11729                           ;stkvar	_h @ sp[(0)+-2]
 11730  01F7BA  0EFE               	movlw	-2
 11731  01F7BC  006F FF8C  F032    	movff	plusw1,btemp+8
 11732  01F7C2  0EFF               	movlw	-1
 11733  01F7C4  006F FF8C  F033    	movff	plusw1,btemp+9
 11734  01F7CA  0E05               	movlw	5
 11735  01F7CC  2432               	addwf	(btemp+8)^0,w,c
 11736  01F7CE  6ED9               	movwf	fsr2l,c
 11737  01F7D0  0E00               	movlw	0
 11738  01F7D2  2033               	addwfc	(btemp+9)^0,w,c
 11739  01F7D4  6EDA               	movwf	fsr2h,c
 11740  01F7D6  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11741  01F7DC                     l17062:
 11742                           
 11743                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 11744  01F7DC  0E04               	movlw	4
 11745  01F7DE  6EE6               	movwf	postinc1,c
 11746  01F7E0  EC25  F013         	call	_get_switch	;wreg free
 11747  01F7E4  502A               	movf	btemp^0,w,c
 11748  01F7E6  B4D8               	btfsc	status,2,c
 11749  01F7E8  D02C               	goto	l2287
 11750                           
 11751                           ;hid.c: 16:   h->wait_calib = 0;
 11752                           ;stkvar	_h @ sp[(0)+-2]
 11753  01F7EA  0EFE               	movlw	-2
 11754  01F7EC  006F FF8C  F034    	movff	plusw1,btemp+10
 11755  01F7F2  0EFF               	movlw	-1
 11756  01F7F4  006F FF8C  F035    	movff	plusw1,btemp+11
 11757  01F7FA  0E06               	movlw	6
 11758  01F7FC  2434               	addwf	(btemp+10)^0,w,c
 11759  01F7FE  6ED9               	movwf	fsr2l,c
 11760  01F800  0E00               	movlw	0
 11761  01F802  2035               	addwfc	(btemp+11)^0,w,c
 11762  01F804  6EDA               	movwf	fsr2h,c
 11763  01F806  0E00               	movlw	0
 11764  01F808  6EDF               	movwf	indf2,c
 11765                           
 11766                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 11767  01F80A  0E04               	movlw	4
 11768  01F80C  6EE6               	movwf	postinc1,c
 11769  01F80E  EC25  F013         	call	_get_switch	;wreg free
 11770  01F812  502A               	movf	btemp^0,w,c
 11771  01F814  B4D8               	btfsc	status,2,c
 11772  01F816  D003               	goto	u16650
 11773  01F818  6A35               	clrf	(btemp+11)^0,c
 11774  01F81A  2A35               	incf	(btemp+11)^0,f,c
 11775  01F81C  D001               	goto	u16668
 11776  01F81E                     u16650:
 11777  01F81E  6A35               	clrf	(btemp+11)^0,c
 11778  01F820                     u16668:
 11779                           
 11780                           ;stkvar	_h @ sp[(0)+-2]
 11781  01F820  0EFE               	movlw	-2
 11782  01F822  006F FF8C  F032    	movff	plusw1,btemp+8
 11783  01F828  0EFF               	movlw	-1
 11784  01F82A  006F FF8C  F033    	movff	plusw1,btemp+9
 11785  01F830  0E07               	movlw	7
 11786  01F832  2432               	addwf	(btemp+8)^0,w,c
 11787  01F834  6ED9               	movwf	fsr2l,c
 11788  01F836  0E00               	movlw	0
 11789  01F838  2033               	addwfc	(btemp+9)^0,w,c
 11790  01F83A  6EDA               	movwf	fsr2h,c
 11791  01F83C  0060  F0D7  FFDF   	movff	btemp+11,indf2
 11792  01F842                     l2287:
 11793                           
 11794                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11795  01F842  52E5               	movf	postdec1,f,c
 11796  01F844  52E5               	movf	postdec1,f,c
 11797  01F846  0012               	return		;funcret
 11798  01F848                     __end_of_hid_input:
 11799                           	opt callstack 0
 11800                           
 11801 ;; *************** function _esr_check *****************
 11802 ;; Defined at:
 11803 ;;		line 197 in file "bsoc.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  fsm             1  [STACK] const unsigned char 
 11806 ;; Auto vars:     Size  Location     Type
 11807 ;;		None
 11808 ;; Return value:  Size  Location     Type
 11809 ;;                  4  [STACK] float 
 11810 ;; Registers used:
 11811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11812 ;; Tracked objects:
 11813 ;;		On entry : 0/0
 11814 ;;		On exit  : 0/0
 11815 ;;		Unchanged: 0/0
 11816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11821 ;;Total ram usage:        0 bytes
 11822 ;; Hardware stack levels used:    1
 11823 ;; Hardware stack levels required when called:   18
 11824 ;; This function calls:
 11825 ;;		_StartTimer
 11826 ;;		_TimerDone
 11827 ;;		___fldiv
 11828 ;;		___flsub
 11829 ;;		_conv_raw_result
 11830 ;;		_fabsf
 11831 ;;		_set_load_relay_one
 11832 ;;		_set_load_relay_two
 11833 ;;		_update_adc_result
 11834 ;; This function is called by:
 11835 ;;		_main
 11836 ;; This function uses a reentrant model
 11837 ;;
 11838                           
 11839                           	psect	text28
 11840  01BA64                     __ptext28:
 11841                           	opt callstack 0
 11842  01BA64                     _esr_check:
 11843                           	opt callstack 12
 11844                           
 11845                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 11846                           ;stkvar	_fsm @ sp[(0)+-1]
 11847                           
 11848                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11849                           ;incstack = 0
 11850  01BA64  0EFF               	movlw	-1
 11851  01BA66  50E3               	movf	plusw1,w,c
 11852  01BA68  B4D8               	btfsc	status,2,c
 11853  01BA6A  D149               	goto	l14302
 11854                           
 11855                           ;bsoc.c: 202:   esr_state = 0;
 11856  01BA6C  0100               	movlb	0	; () banked
 11857  01BA6E  6BC6               	clrf	esr_check@esr_state& (0+255),b
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;bsoc.c: 203:   return -10.0;
 11861  01BA70  0E00               	movlw	0
 11862  01BA72  6E2A               	movwf	btemp^0,c
 11863  01BA74  0E00               	movlw	0
 11864  01BA76  6E2B               	movwf	(btemp+1)^0,c
 11865  01BA78  0E20               	movlw	32
 11866  01BA7A  6E2C               	movwf	(btemp+2)^0,c
 11867  01BA7C  0EC1               	movlw	193
 11868  01BA7E  D15B               	goto	L7
 11869  01BA80                     l14234:
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 11873  01BA80  0E10               	movlw	16
 11874  01BA82  6EE6               	movwf	postinc1,c
 11875  01BA84  0E27               	movlw	39
 11876  01BA86  6EE6               	movwf	postinc1,c
 11877  01BA88  0E0C               	movlw	12
 11878  01BA8A  6EE6               	movwf	postinc1,c
 11879  01BA8C  EC20  F011         	call	_StartTimer	;wreg free
 11880  01BA90                     l14236:
 11881                           
 11882                           ;bsoc.c: 209:   esr_state++;
 11883  01BA90  0100               	movlb	0	; () banked
 11884  01BA92  2BC6               	incf	esr_check@esr_state& (0+255),f,b
 11885                           
 11886                           ;bsoc.c: 210:   break;
 11887  01BA94  D149               	goto	l14304
 11888  01BA96                     l14238:
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;bsoc.c: 215:   set_load_relay_one(0);
 11892  01BA96  0E00               	movlw	0
 11893  01BA98  6EE6               	movwf	postinc1,c
 11894  01BA9A  EC27  F016         	call	_set_load_relay_one	;wreg free
 11895                           
 11896                           ;bsoc.c: 216:   set_load_relay_two(0);
 11897  01BA9E  0E00               	movlw	0
 11898  01BAA0  6EE6               	movwf	postinc1,c
 11899  01BAA2  EC1F  F016         	call	_set_load_relay_two	;wreg free
 11900                           
 11901                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 11902  01BAA6  0E0C               	movlw	12
 11903  01BAA8  6EE6               	movwf	postinc1,c
 11904  01BAAA  EC91  F013         	call	_TimerDone	;wreg free
 11905  01BAAE  502A               	movf	btemp^0,w,c
 11906  01BAB0  B4D8               	btfsc	status,2,c
 11907  01BAB2  D009               	goto	l14244
 11908                           
 11909                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 11910  01BAB4  0E10               	movlw	16
 11911  01BAB6  6EE6               	movwf	postinc1,c
 11912  01BAB8  0E27               	movlw	39
 11913  01BABA  6EE6               	movwf	postinc1,c
 11914  01BABC  0E0C               	movlw	12
 11915  01BABE  6EE6               	movwf	postinc1,c
 11916  01BAC0  EC20  F011         	call	_StartTimer	;wreg free
 11917                           
 11918                           ;bsoc.c: 219:   } else {
 11919  01BAC4  D006               	goto	l14248
 11920  01BAC6                     l14244:
 11921                           
 11922                           ;bsoc.c: 220:    return -2.0;
 11923  01BAC6  0E00               	movlw	0
 11924  01BAC8  6E2A               	movwf	btemp^0,c
 11925  01BACA  0E00               	movlw	0
 11926  01BACC  6E2B               	movwf	(btemp+1)^0,c
 11927  01BACE  0E00               	movlw	0
 11928  01BAD0  D066               	goto	L9
 11929  01BAD2                     l14248:
 11930                           
 11931                           ;bsoc.c: 225:   update_adc_result();
 11932  01BAD2  ECBD  F011         	call	_update_adc_result	;wreg free
 11933                           
 11934                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 11935  01BAD6  0E00               	movlw	0
 11936  01BAD8  6EE6               	movwf	postinc1,c
 11937  01BADA  0E04               	movlw	4
 11938  01BADC  6EE6               	movwf	postinc1,c
 11939  01BADE  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11940  01BAE2  0060  F0A8  FCA3   	movff	btemp,_C+290	;volatile
 11941  01BAE8  0060  F0AC  FCA4   	movff	btemp+1,_C+291	;volatile
 11942  01BAEE  0060  F0B0  FCA5   	movff	btemp+2,_C+292	;volatile
 11943  01BAF4  0060  F0B4  FCA6   	movff	btemp+3,_C+293	;volatile
 11944  01BAFA  D7CA               	goto	l14236
 11945  01BAFC                     l14254:
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;bsoc.c: 230:   set_load_relay_one(1);
 11949  01BAFC  0E01               	movlw	1
 11950  01BAFE  6EE6               	movwf	postinc1,c
 11951  01BB00  EC27  F016         	call	_set_load_relay_one	;wreg free
 11952                           
 11953                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 11954  01BB04  0E0C               	movlw	12
 11955  01BB06  6EE6               	movwf	postinc1,c
 11956  01BB08  EC91  F013         	call	_TimerDone	;wreg free
 11957  01BB0C  502A               	movf	btemp^0,w,c
 11958  01BB0E  B4D8               	btfsc	status,2,c
 11959  01BB10  D009               	goto	l14260
 11960                           
 11961                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 11962  01BB12  0E10               	movlw	16
 11963  01BB14  6EE6               	movwf	postinc1,c
 11964  01BB16  0E27               	movlw	39
 11965  01BB18  6EE6               	movwf	postinc1,c
 11966  01BB1A  0E0C               	movlw	12
 11967  01BB1C  6EE6               	movwf	postinc1,c
 11968  01BB1E  EC20  F011         	call	_StartTimer	;wreg free
 11969                           
 11970                           ;bsoc.c: 233:   } else {
 11971  01BB22  D006               	goto	l14264
 11972  01BB24                     l14260:
 11973                           
 11974                           ;bsoc.c: 234:    return -3.0;
 11975  01BB24  0E00               	movlw	0
 11976  01BB26  6E2A               	movwf	btemp^0,c
 11977  01BB28  0E00               	movlw	0
 11978  01BB2A  6E2B               	movwf	(btemp+1)^0,c
 11979  01BB2C  0E40               	movlw	64
 11980  01BB2E  D037               	goto	L9
 11981  01BB30                     l14264:
 11982                           
 11983                           ;bsoc.c: 237:   update_adc_result();
 11984  01BB30  ECBD  F011         	call	_update_adc_result	;wreg free
 11985                           
 11986                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 11987  01BB34  0E00               	movlw	0
 11988  01BB36  6EE6               	movwf	postinc1,c
 11989  01BB38  0E04               	movlw	4
 11990  01BB3A  6EE6               	movwf	postinc1,c
 11991  01BB3C  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 11992  01BB40  0060  F0A8  FCA7   	movff	btemp,_C+294	;volatile
 11993  01BB46  0060  F0AC  FCA8   	movff	btemp+1,_C+295	;volatile
 11994  01BB4C  0060  F0B0  FCA9   	movff	btemp+2,_C+296	;volatile
 11995  01BB52  0060  F0B4  FCAA   	movff	btemp+3,_C+297	;volatile
 11996                           
 11997                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 11998  01BB58  0E00               	movlw	0
 11999  01BB5A  6EE6               	movwf	postinc1,c
 12000  01BB5C  0E00               	movlw	0
 12001  01BB5E  6EE6               	movwf	postinc1,c
 12002  01BB60  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12003  01BB64  0060  F0A8  FC9B   	movff	btemp,_C+282	;volatile
 12004  01BB6A  0060  F0AC  FC9C   	movff	btemp+1,_C+283	;volatile
 12005  01BB70  0060  F0B0  FC9D   	movff	btemp+2,_C+284	;volatile
 12006  01BB76  0060  F0B4  FC9E   	movff	btemp+3,_C+285	;volatile
 12007  01BB7C  D789               	goto	l14236
 12008  01BB7E                     l14272:
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;bsoc.c: 243:   set_load_relay_two(1);
 12012  01BB7E  0E01               	movlw	1
 12013  01BB80  6EE6               	movwf	postinc1,c
 12014  01BB82  EC1F  F016         	call	_set_load_relay_two	;wreg free
 12015                           
 12016                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 12017  01BB86  0E0C               	movlw	12
 12018  01BB88  6EE6               	movwf	postinc1,c
 12019  01BB8A  EC91  F013         	call	_TimerDone	;wreg free
 12020  01BB8E  502A               	movf	btemp^0,w,c
 12021  01BB90  A4D8               	btfss	status,2,c
 12022  01BB92  D008               	goto	l14280
 12023                           
 12024                           ;bsoc.c: 245:    return -4.0;
 12025  01BB94  0E00               	movlw	0
 12026  01BB96  6E2A               	movwf	btemp^0,c
 12027  01BB98  0E00               	movlw	0
 12028  01BB9A  6E2B               	movwf	(btemp+1)^0,c
 12029  01BB9C  0E80               	movlw	128
 12030  01BB9E                     L9:
 12031  01BB9E  6E2C               	movwf	(btemp+2)^0,c
 12032  01BBA0  0EC0               	movlw	192
 12033  01BBA2  D0C9               	goto	L7
 12034  01BBA4                     l14280:
 12035                           
 12036                           ;bsoc.c: 247:   update_adc_result();
 12037  01BBA4  ECBD  F011         	call	_update_adc_result	;wreg free
 12038                           
 12039                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 12040  01BBA8  0E00               	movlw	0
 12041  01BBAA  6EE6               	movwf	postinc1,c
 12042  01BBAC  0E04               	movlw	4
 12043  01BBAE  6EE6               	movwf	postinc1,c
 12044  01BBB0  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12045  01BBB4  0060  F0A8  FCAB   	movff	btemp,_C+298	;volatile
 12046  01BBBA  0060  F0AC  FCAC   	movff	btemp+1,_C+299	;volatile
 12047  01BBC0  0060  F0B0  FCAD   	movff	btemp+2,_C+300	;volatile
 12048  01BBC6  0060  F0B4  FCAE   	movff	btemp+3,_C+301	;volatile
 12049                           
 12050                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 12051  01BBCC  0E00               	movlw	0
 12052  01BBCE  6EE6               	movwf	postinc1,c
 12053  01BBD0  0E00               	movlw	0
 12054  01BBD2  6EE6               	movwf	postinc1,c
 12055  01BBD4  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 12056  01BBD8  0060  F0A8  FC9F   	movff	btemp,_C+286	;volatile
 12057  01BBDE  0060  F0AC  FCA0   	movff	btemp+1,_C+287	;volatile
 12058  01BBE4  0060  F0B0  FCA1   	movff	btemp+2,_C+288	;volatile
 12059  01BBEA  0060  F0B4  FCA2   	movff	btemp+3,_C+289	;volatile
 12060                           
 12061                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 12062  01BBF0  EE23  F09F         	lfsr	2,_C+286	;volatile
 12063  01BBF4  006F FF7B FFE6     	movff	postinc2,postinc1
 12064  01BBFA  006F FF7B FFE6     	movff	postinc2,postinc1
 12065  01BC00  006F FF7B FFE6     	movff	postinc2,postinc1
 12066  01BC06  006F FF7B FFE6     	movff	postinc2,postinc1
 12067  01BC0C  EE23  F09B         	lfsr	2,_C+282	;volatile
 12068  01BC10  006F FF7B FFE6     	movff	postinc2,postinc1
 12069  01BC16  006F FF7B FFE6     	movff	postinc2,postinc1
 12070  01BC1C  006F FF7B FFE6     	movff	postinc2,postinc1
 12071  01BC22  006F FF7B FFE6     	movff	postinc2,postinc1
 12072  01BC28  EC7A  F010         	call	___flsub	;wreg free
 12073  01BC2C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12074  01BC32  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12075  01BC38  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12076  01BC3E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12077  01BC44  EE23  F0AB         	lfsr	2,_C+298	;volatile
 12078  01BC48  006F FF7B FFE6     	movff	postinc2,postinc1
 12079  01BC4E  006F FF7B FFE6     	movff	postinc2,postinc1
 12080  01BC54  006F FF7B FFE6     	movff	postinc2,postinc1
 12081  01BC5A  006F FF7B FFE6     	movff	postinc2,postinc1
 12082  01BC60  EE23  F0A7         	lfsr	2,_C+294	;volatile
 12083  01BC64  006F FF7B FFE6     	movff	postinc2,postinc1
 12084  01BC6A  006F FF7B FFE6     	movff	postinc2,postinc1
 12085  01BC70  006F FF7B FFE6     	movff	postinc2,postinc1
 12086  01BC76  006F FF7B FFE6     	movff	postinc2,postinc1
 12087  01BC7C  EC7A  F010         	call	___flsub	;wreg free
 12088  01BC80  0060  F0AB  FFE6   	movff	btemp,postinc1
 12089  01BC86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12090  01BC8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12091  01BC92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12092  01BC98  EC64  F0C1         	call	___fldiv	;wreg free
 12093  01BC9C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12094  01BCA2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12095  01BCA8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 12096  01BCAE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 12097  01BCB4  ECBC  F005         	call	_fabsf	;wreg free
 12098  01BCB8  0060  F0A8  FC09   	movff	btemp,_C+136	;volatile
 12099  01BCBE  0060  F0AC  FC0A   	movff	btemp+1,_C+137	;volatile
 12100  01BCC4  0060  F0B0  FC0B   	movff	btemp+2,_C+138	;volatile
 12101  01BCCA  0060  F0B4  FC0C   	movff	btemp+3,_C+139	;volatile
 12102                           
 12103                           ;bsoc.c: 252:   set_load_relay_one(0);
 12104  01BCD0  0E00               	movlw	0
 12105  01BCD2  6EE6               	movwf	postinc1,c
 12106  01BCD4  EC27  F016         	call	_set_load_relay_one	;wreg free
 12107                           
 12108                           ;bsoc.c: 253:   set_load_relay_two(0);
 12109  01BCD8  0E00               	movlw	0
 12110  01BCDA  6EE6               	movwf	postinc1,c
 12111  01BCDC  EC1F  F016         	call	_set_load_relay_two	;wreg free
 12112                           
 12113                           ;bsoc.c: 254:   esr_state = 0;
 12114  01BCE0  0100               	movlb	0	; () banked
 12115  01BCE2  6BC6               	clrf	esr_check@esr_state& (0+255),b
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;bsoc.c: 255:   return C.esr;
 12119  01BCE4  0063  F024  F02A   	movff	_C+136,btemp	;volatile
 12120  01BCEA  0063  F028  F02B   	movff	_C+137,btemp+1	;volatile
 12121  01BCF0  0063  F02C  F02C   	movff	_C+138,btemp+2	;volatile
 12122  01BCF6  0063  F030  F02D   	movff	_C+139,btemp+3	;volatile
 12123  01BCFC  D01D               	goto	l2412
 12124  01BCFE                     l14302:
 12125  01BCFE  0100               	movlb	0	; () banked
 12126  01BD00  51C6               	movf	esr_check@esr_state& (0+255),w,b
 12127  01BD02  6E34               	movwf	(btemp+10)^0,c
 12128  01BD04  6A35               	clrf	(btemp+11)^0,c
 12129                           
 12130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12131                           ; Switch size 1, requested type "simple"
 12132                           ; Number of cases is 1, Range of values is 0 to 0
 12133                           ; switch strategies available:
 12134                           ; Name         Instructions Cycles
 12135                           ; simple_byte            4     3 (average)
 12136                           ;	Chosen strategy is simple_byte
 12137  01BD06  5035               	movf	(btemp+11)^0,w,c
 12138  01BD08  0A00               	xorlw	0	; case 0
 12139  01BD0A  A4D8               	btfss	status,2,c
 12140  01BD0C  D00D               	goto	l14304
 12141                           
 12142                           ; BSR set to: 0
 12143                           ; Switch size 1, requested type "simple"
 12144                           ; Number of cases is 4, Range of values is 0 to 3
 12145                           ; switch strategies available:
 12146                           ; Name         Instructions Cycles
 12147                           ; simple_byte           13     7 (average)
 12148                           ;	Chosen strategy is simple_byte
 12149  01BD0E  5034               	movf	(btemp+10)^0,w,c
 12150  01BD10  0A00               	xorlw	0	; case 0
 12151  01BD12  B4D8               	btfsc	status,2,c
 12152  01BD14  D6B5               	goto	l14234
 12153  01BD16  0A01               	xorlw	1	; case 1
 12154  01BD18  B4D8               	btfsc	status,2,c
 12155  01BD1A  D6BD               	goto	l14238
 12156  01BD1C  0A03               	xorlw	3	; case 2
 12157  01BD1E  B4D8               	btfsc	status,2,c
 12158  01BD20  D6ED               	goto	l14254
 12159  01BD22  0A01               	xorlw	1	; case 3
 12160  01BD24  B4D8               	btfsc	status,2,c
 12161  01BD26  D72B               	goto	l14272
 12162  01BD28                     l14304:
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;bsoc.c: 260:  return -1.0;
 12166  01BD28  0E00               	movlw	0
 12167  01BD2A  6E2A               	movwf	btemp^0,c
 12168  01BD2C  0E00               	movlw	0
 12169  01BD2E  6E2B               	movwf	(btemp+1)^0,c
 12170  01BD30  0E80               	movlw	128
 12171  01BD32  6E2C               	movwf	(btemp+2)^0,c
 12172  01BD34  0EBF               	movlw	191
 12173  01BD36                     L7:
 12174  01BD36  6E2D               	movwf	(btemp+3)^0,c
 12175  01BD38                     l2412:
 12176                           
 12177                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12178  01BD38  52E5               	movf	postdec1,f,c
 12179  01BD3A  0012               	return		;funcret
 12180  01BD3C                     __end_of_esr_check:
 12181                           	opt callstack 0
 12182                           
 12183 ;; *************** function _update_adc_result *****************
 12184 ;; Defined at:
 12185 ;;		line 111 in file "daq.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1  [STACK] _Bool 
 12192 ;; Registers used:
 12193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12203 ;;Total ram usage:        0 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:   17
 12206 ;; This function calls:
 12207 ;;		_StartTimer
 12208 ;;		_TimerDone
 12209 ;;		_check_adc_scan
 12210 ;;		_clear_adc_scan
 12211 ;;		_start_adc_scan
 12212 ;; This function is called by:
 12213 ;;		_esr_check
 12214 ;; This function uses a reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text29
 12218  00237A                     __ptext29:
 12219                           	opt callstack 0
 12220  00237A                     _update_adc_result:
 12221                           	opt callstack 12
 12222                           
 12223                           ;daq.c: 113:  if (R.done) {
 12224                           
 12225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12226                           ;incstack = 0
 12227  00237A  0101               	movlb	1	; () banked
 12228  00237C  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 12229  00237E  B4D8               	btfsc	status,2,c
 12230  002380  0012               	return	
 12231                           
 12232                           ; BSR set to: 1
 12233                           ;daq.c: 114:   clear_adc_scan();
 12234  002382  ECA9  F016         	call	_clear_adc_scan	;wreg free
 12235                           
 12236                           ; BSR set to: 1
 12237                           ;daq.c: 115:   start_adc_scan();
 12238  002386  EC5F  F00D         	call	_start_adc_scan	;wreg free
 12239                           
 12240                           ;daq.c: 116:   StartTimer(TMR_ADC, 200);
 12241  00238A  0EC8               	movlw	200
 12242  00238C  6EE6               	movwf	postinc1,c
 12243  00238E  0E00               	movlw	0
 12244  002390  6EE6               	movwf	postinc1,c
 12245  002392  0E01               	movlw	1
 12246  002394  6EE6               	movwf	postinc1,c
 12247  002396  EC20  F011         	call	_StartTimer	;wreg free
 12248  00239A                     l13662:
 12249  00239A  0E01               	movlw	1
 12250  00239C  6EE6               	movwf	postinc1,c
 12251  00239E  EC91  F013         	call	_TimerDone	;wreg free
 12252  0023A2  502A               	movf	btemp^0,w,c
 12253  0023A4  A4D8               	btfss	status,2,c
 12254  0023A6  0012               	return	
 12255  0023A8  EC8F  F016         	call	_check_adc_scan	;wreg free
 12256  0023AC  502A               	movf	btemp^0,w,c
 12257  0023AE  A4D8               	btfss	status,2,c
 12258  0023B0  0012               	return	
 12259  0023B2  D7F3               	goto	l13662
 12260  0023B4                     __end_of_update_adc_result:
 12261                           	opt callstack 0
 12262                           
 12263 ;; *************** function _check_adc_scan *****************
 12264 ;; Defined at:
 12265 ;;		line 95 in file "daq.c"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;		None
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;		None
 12270 ;; Return value:  Size  Location     Type
 12271 ;;                  1  [STACK] _Bool 
 12272 ;; Registers used:
 12273 ;;		btemp
 12274 ;; Tracked objects:
 12275 ;;		On entry : 0/2
 12276 ;;		On exit  : 0/0
 12277 ;;		Unchanged: 0/0
 12278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12283 ;;Total ram usage:        0 bytes
 12284 ;; Hardware stack levels used:    1
 12285 ;; Hardware stack levels required when called:   15
 12286 ;; This function calls:
 12287 ;;		Nothing
 12288 ;; This function is called by:
 12289 ;;		_main
 12290 ;;		_update_adc_result
 12291 ;; This function uses a reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text30
 12295  002D1E                     __ptext30:
 12296                           	opt callstack 0
 12297  002D1E                     _check_adc_scan:
 12298                           	opt callstack 13
 12299                           
 12300                           ;daq.c: 97:  return R.done;
 12301                           
 12302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12303                           ;incstack = 0
 12304  002D1E  0060  F4D4  F02A   	movff	_R+53,btemp	;volatile
 12305                           
 12306                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12307  002D24  0012               	return		;funcret
 12308  002D26                     __end_of_check_adc_scan:
 12309                           	opt callstack 0
 12310                           
 12311 ;; *************** function _set_load_relay_two *****************
 12312 ;; Defined at:
 12313 ;;		line 131 in file "mbmc.c"
 12314 ;; Parameters:    Size  Location     Type
 12315 ;;  mode            1  [STACK] const _Bool 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;		None
 12318 ;; Return value:  Size  Location     Type
 12319 ;;                  1  [STACK] void 
 12320 ;; Registers used:
 12321 ;;		wreg, fsr1l, fsr1h
 12322 ;; Tracked objects:
 12323 ;;		On entry : 0/3D
 12324 ;;		On exit  : 0/0
 12325 ;;		Unchanged: 0/0
 12326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12331 ;;Total ram usage:        0 bytes
 12332 ;; Hardware stack levels used:    1
 12333 ;; Hardware stack levels required when called:   15
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_main
 12338 ;;		_esr_check
 12339 ;; This function uses a reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text31
 12343  002C3E                     __ptext31:
 12344                           	opt callstack 0
 12345  002C3E                     _set_load_relay_two:
 12346                           	opt callstack 15
 12347                           
 12348                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 12349                           ;stkvar	_mode @ sp[(0)+-1]
 12350                           
 12351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12352                           ;incstack = 0
 12353  002C3E  0EFF               	movlw	-1
 12354  002C40  B0E3               	btfsc	plusw1,0,c
 12355  002C42  D002               	bra	u12525
 12356  002C44  9ABD               	bcf	189,5,c	;volatile
 12357  002C46  D001               	bra	u12526
 12358  002C48                     u12525:
 12359  002C48  8ABD               	bsf	189,5,c	;volatile
 12360  002C4A                     u12526:
 12361                           
 12362                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 12363  002C4A  52E5               	movf	postdec1,f,c
 12364  002C4C  0012               	return		;funcret
 12365  002C4E                     __end_of_set_load_relay_two:
 12366                           	opt callstack 0
 12367                           
 12368 ;; *************** function _set_load_relay_one *****************
 12369 ;; Defined at:
 12370 ;;		line 126 in file "mbmc.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;  mode            1  [STACK] const _Bool 
 12373 ;; Auto vars:     Size  Location     Type
 12374 ;;		None
 12375 ;; Return value:  Size  Location     Type
 12376 ;;                  1  [STACK] void 
 12377 ;; Registers used:
 12378 ;;		wreg, fsr1l, fsr1h
 12379 ;; Tracked objects:
 12380 ;;		On entry : 0/3D
 12381 ;;		On exit  : 0/0
 12382 ;;		Unchanged: 0/0
 12383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12388 ;;Total ram usage:        0 bytes
 12389 ;; Hardware stack levels used:    1
 12390 ;; Hardware stack levels required when called:   15
 12391 ;; This function calls:
 12392 ;;		Nothing
 12393 ;; This function is called by:
 12394 ;;		_main
 12395 ;;		_esr_check
 12396 ;; This function uses a reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text32
 12400  002C4E                     __ptext32:
 12401                           	opt callstack 0
 12402  002C4E                     _set_load_relay_one:
 12403                           	opt callstack 15
 12404                           
 12405                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 12406                           ;stkvar	_mode @ sp[(0)+-1]
 12407                           
 12408                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12409                           ;incstack = 0
 12410  002C4E  0EFF               	movlw	-1
 12411  002C50  B0E3               	btfsc	plusw1,0,c
 12412  002C52  D002               	bra	u12515
 12413  002C54  98BD               	bcf	189,4,c	;volatile
 12414  002C56  D001               	bra	u12516
 12415  002C58                     u12515:
 12416  002C58  88BD               	bsf	189,4,c	;volatile
 12417  002C5A                     u12516:
 12418                           
 12419                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 12420  002C5A  52E5               	movf	postdec1,f,c
 12421  002C5C  0012               	return		;funcret
 12422  002C5E                     __end_of_set_load_relay_one:
 12423                           	opt callstack 0
 12424                           
 12425 ;; *************** function _eaDogM_WriteCommand *****************
 12426 ;; Defined at:
 12427 ;;		line 384 in file "eadog.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  cmd             1  [STACK] const unsigned char 
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;		None
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  1  [STACK] void 
 12434 ;; Registers used:
 12435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12436 ;; Tracked objects:
 12437 ;;		On entry : 3F/3D
 12438 ;;		On exit  : 3F/3D
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12445 ;;Total ram usage:        0 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:   19
 12448 ;; This function calls:
 12449 ;;		_send_lcd_cmd_dma
 12450 ;; This function is called by:
 12451 ;;		_main
 12452 ;; This function uses a reentrant model
 12453 ;;
 12454                           
 12455                           	psect	text33
 12456  002C8E                     __ptext33:
 12457                           	opt callstack 0
 12458  002C8E                     _eaDogM_WriteCommand:
 12459                           	opt callstack 11
 12460                           
 12461                           ;eadog.c: 384: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 385: {;eadog.c: 386:
      +                            send_lcd_cmd_dma(cmd);
 12462                           ;stkvar	_cmd @ sp[(0)+-1]
 12463                           
 12464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12465                           ;incstack = 0
 12466  002C8E  0EFF               	movlw	-1
 12467  002C90  50E3               	movf	plusw1,w,c
 12468  002C92  6EE6               	movwf	postinc1,c
 12469  002C94  EC78  F015         	call	_send_lcd_cmd_dma	;wreg free
 12470                           
 12471                           ; BSR set to: 61
 12472                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 12473  002C98  52E5               	movf	postdec1,f,c
 12474  002C9A  0012               	return		;funcret
 12475  002C9C                     __end_of_eaDogM_WriteCommand:
 12476                           	opt callstack 0
 12477                           
 12478 ;; *************** function _display_history *****************
 12479 ;; Defined at:
 12480 ;;		line 634 in file "main.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;		None
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;		None
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1  [STACK] _Bool 
 12487 ;; Registers used:
 12488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/2
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;Total ram usage:        0 bytes
 12499 ;; Hardware stack levels used:    1
 12500 ;; Hardware stack levels required when called:   27
 12501 ;; This function calls:
 12502 ;;		_WaitMs
 12503 ;;		_asctime
 12504 ;;		_get_switch
 12505 ;;		_get_vterm_ptr
 12506 ;;		_localtime
 12507 ;;		_sprintf
 12508 ;;		_time
 12509 ;;		_update_lcd
 12510 ;; This function is called by:
 12511 ;;		_main
 12512 ;; This function uses a reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text34
 12516  01B78A                     __ptext34:
 12517                           	opt callstack 0
 12518  01B78A                     _display_history:
 12519                           	opt callstack 3
 12520                           
 12521                           ;main.c: 636:  static uint8_t bwait = 0;;main.c: 638:  if (get_switch(SCALIB) && (++bwai
      +                          t > 5)) {
 12522                           
 12523                           ; BSR set to: 61
 12524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12525                           ;incstack = 0
 12526  01B78A  0E04               	movlw	4
 12527  01B78C  6EE6               	movwf	postinc1,c
 12528  01B78E  EC25  F013         	call	_get_switch	;wreg free
 12529  01B792  502A               	movf	btemp^0,w,c
 12530  01B794  B4D8               	btfsc	status,2,c
 12531  01B796  D15E               	goto	l17368
 12532  01B798  2A53               	incf	display_history@bwait^0,f,c
 12533  01B79A  0E05               	movlw	5
 12534  01B79C  6453               	cpfsgt	display_history@bwait^0,c
 12535  01B79E  D15A               	goto	l17368
 12536                           
 12537                           ;main.c: 639:   pclock = time(((void*)0));
 12538  01B7A0  0E00               	movlw	0
 12539  01B7A2  6EE6               	movwf	postinc1,c
 12540  01B7A4  0E00               	movlw	0
 12541  01B7A6  6EE6               	movwf	postinc1,c
 12542  01B7A8  EC23  F00E         	call	_time	;wreg free
 12543  01B7AC  52E5               	movf	postdec1,f,c
 12544  01B7AE  006F FF9C  F041    	movff	indf1,btemp+23
 12545  01B7B4  52E5               	movf	postdec1,f,c
 12546  01B7B6  006F FF9C  F040    	movff	indf1,btemp+22
 12547  01B7BC  52E5               	movf	postdec1,f,c
 12548  01B7BE  006F FF9C  F03F    	movff	indf1,btemp+21
 12549  01B7C4  52E5               	movf	postdec1,f,c
 12550  01B7C6  006F FF9C  F03E    	movff	indf1,btemp+20
 12551  01B7CC  52E5               	movf	postdec1,f,c
 12552  01B7CE  006F FF9C  F03D    	movff	indf1,btemp+19
 12553  01B7D4  52E5               	movf	postdec1,f,c
 12554  01B7D6  006F FF9C  F03C    	movff	indf1,btemp+18
 12555  01B7DC  52E5               	movf	postdec1,f,c
 12556  01B7DE  006F FF9C  F03B    	movff	indf1,btemp+17
 12557  01B7E4  52E5               	movf	postdec1,f,c
 12558  01B7E6  006F FF9C  F03A    	movff	indf1,btemp+16
 12559  01B7EC  0060  F0E8  F0DA   	movff	btemp+16,_pclock
 12560  01B7F2  0060  F0EC  F0DB   	movff	btemp+17,_pclock+1
 12561  01B7F8  0060  F0F0  F0DC   	movff	btemp+18,_pclock+2
 12562  01B7FE  0060  F0F4  F0DD   	movff	btemp+19,_pclock+3
 12563  01B804  0060  F0F8  F0DE   	movff	btemp+20,_pclock+4
 12564  01B80A  0060  F0FC  F0DF   	movff	btemp+21,_pclock+5
 12565  01B810  0060  F100  F0E0   	movff	btemp+22,_pclock+6
 12566  01B816  0060  F104  F0E1   	movff	btemp+23,_pclock+7
 12567                           
 12568                           ; BSR set to: 57
 12569                           ;main.c: 640:   t_mbmc = localtime(&pclock);
 12570  01B81C  0EDA               	movlw	_pclock& (0+255)
 12571  01B81E  6EE6               	movwf	postinc1,c
 12572  01B820  ECD7  F015         	call	_localtime	;wreg free
 12573  01B824  0060  F0A8  F0BC   	movff	btemp,_t_mbmc
 12574  01B82A  0060  F0AC  F0BD   	movff	btemp+1,_t_mbmc+1
 12575                           
 12576                           ;main.c: 641:   sprintf(get_vterm_ptr(0, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          0], C.hist[0].h[1], C.hist[0].h[2], C.hist[0].h[3]);
 12577  01B830  EE23  F06C         	lfsr	2,_C+235	;volatile
 12578  01B834  006F FF78  F034    	movff	postinc2,btemp+10
 12579  01B83A  006F FF74  F035    	movff	postdec2,btemp+11
 12580  01B840  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12581  01B846  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12582  01B84C  EE23  F06A         	lfsr	2,_C+233	;volatile
 12583  01B850  006F FF78  F034    	movff	postinc2,btemp+10
 12584  01B856  006F FF74  F035    	movff	postdec2,btemp+11
 12585  01B85C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12586  01B862  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12587  01B868  EE23  F068         	lfsr	2,_C+231	;volatile
 12588  01B86C  006F FF78  F034    	movff	postinc2,btemp+10
 12589  01B872  006F FF74  F035    	movff	postdec2,btemp+11
 12590  01B878  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12591  01B87E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12592  01B884  EE23  F066         	lfsr	2,_C+229	;volatile
 12593  01B888  006F FF78  F034    	movff	postinc2,btemp+10
 12594  01B88E  006F FF74  F035    	movff	postdec2,btemp+11
 12595  01B894  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12596  01B89A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12597  01B8A0  0EB9               	movlw	low STR_70
 12598  01B8A2  6EE6               	movwf	postinc1,c
 12599  01B8A4  0EFA               	movlw	high STR_70
 12600  01B8A6  6EE6               	movwf	postinc1,c
 12601  01B8A8  0E00               	movlw	0
 12602  01B8AA  6EE6               	movwf	postinc1,c
 12603  01B8AC  0E00               	movlw	0
 12604  01B8AE  6EE6               	movwf	postinc1,c
 12605  01B8B0  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 12606  01B8B4  0060  F0AB  FFE6   	movff	btemp,postinc1
 12607  01B8BA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12608  01B8C0  0E0C               	movlw	12
 12609  01B8C2  6EE6               	movwf	postinc1,c
 12610  01B8C4  ECE5  F0FE         	call	_sprintf	;wreg free
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;main.c: 642:   sprintf(get_vterm_ptr(1, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          4], C.hist[0].h[5], C.hist[0].h[6], C.hist[0].h[7]);
 12614  01B8C8  EE23  F074         	lfsr	2,_C+243	;volatile
 12615  01B8CC  006F FF78  F034    	movff	postinc2,btemp+10
 12616  01B8D2  006F FF74  F035    	movff	postdec2,btemp+11
 12617  01B8D8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12618  01B8DE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12619  01B8E4  EE23  F072         	lfsr	2,_C+241	;volatile
 12620  01B8E8  006F FF78  F034    	movff	postinc2,btemp+10
 12621  01B8EE  006F FF74  F035    	movff	postdec2,btemp+11
 12622  01B8F4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12623  01B8FA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12624  01B900  EE23  F070         	lfsr	2,_C+239	;volatile
 12625  01B904  006F FF78  F034    	movff	postinc2,btemp+10
 12626  01B90A  006F FF74  F035    	movff	postdec2,btemp+11
 12627  01B910  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12628  01B916  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12629  01B91C  EE23  F06E         	lfsr	2,_C+237	;volatile
 12630  01B920  006F FF78  F034    	movff	postinc2,btemp+10
 12631  01B926  006F FF74  F035    	movff	postdec2,btemp+11
 12632  01B92C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12633  01B932  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12634  01B938  0EB9               	movlw	low STR_70
 12635  01B93A  6EE6               	movwf	postinc1,c
 12636  01B93C  0EFA               	movlw	high STR_70
 12637  01B93E  6EE6               	movwf	postinc1,c
 12638  01B940  0E00               	movlw	0
 12639  01B942  6EE6               	movwf	postinc1,c
 12640  01B944  0E01               	movlw	1
 12641  01B946  6EE6               	movwf	postinc1,c
 12642  01B948  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 12643  01B94C  0060  F0AB  FFE6   	movff	btemp,postinc1
 12644  01B952  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12645  01B958  0E0C               	movlw	12
 12646  01B95A  6EE6               	movwf	postinc1,c
 12647  01B95C  ECE5  F0FE         	call	_sprintf	;wreg free
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;main.c: 643:   sprintf(get_vterm_ptr(2, 0), "%d %d %d %d                ", C.hist[0].h[
      +                          8], C.hist[0].h[9], C.hist[0].h[10], C.hist[0].h[12]);
 12651  01B960  EE23  F07E         	lfsr	2,_C+253	;volatile
 12652  01B964  006F FF78  F034    	movff	postinc2,btemp+10
 12653  01B96A  006F FF74  F035    	movff	postdec2,btemp+11
 12654  01B970  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12655  01B976  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12656  01B97C  EE23  F07A         	lfsr	2,_C+249	;volatile
 12657  01B980  006F FF78  F034    	movff	postinc2,btemp+10
 12658  01B986  006F FF74  F035    	movff	postdec2,btemp+11
 12659  01B98C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12660  01B992  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12661  01B998  EE23  F078         	lfsr	2,_C+247	;volatile
 12662  01B99C  006F FF78  F034    	movff	postinc2,btemp+10
 12663  01B9A2  006F FF74  F035    	movff	postdec2,btemp+11
 12664  01B9A8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12665  01B9AE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12666  01B9B4  EE23  F076         	lfsr	2,_C+245	;volatile
 12667  01B9B8  006F FF78  F034    	movff	postinc2,btemp+10
 12668  01B9BE  006F FF74  F035    	movff	postdec2,btemp+11
 12669  01B9C4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 12670  01B9CA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 12671  01B9D0  0EB9               	movlw	low STR_70
 12672  01B9D2  6EE6               	movwf	postinc1,c
 12673  01B9D4  0EFA               	movlw	high STR_70
 12674  01B9D6  6EE6               	movwf	postinc1,c
 12675  01B9D8  0E00               	movlw	0
 12676  01B9DA  6EE6               	movwf	postinc1,c
 12677  01B9DC  0E02               	movlw	2
 12678  01B9DE  6EE6               	movwf	postinc1,c
 12679  01B9E0  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 12680  01B9E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 12681  01B9EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12682  01B9F0  0E0C               	movlw	12
 12683  01B9F2  6EE6               	movwf	postinc1,c
 12684  01B9F4  ECE5  F0FE         	call	_sprintf	;wreg free
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;main.c: 644:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 12688  01B9F8  0060  F2F3  FFE6   	movff	_t_mbmc,postinc1
 12689  01B9FE  0060  F2F7  FFE6   	movff	_t_mbmc+1,postinc1
 12690  01BA04  EC21  F0C4         	call	_asctime	;wreg free
 12691  01BA08  0060  F0AB  FFE6   	movff	btemp,postinc1
 12692  01BA0E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12693  01BA14  0E76               	movlw	low (STR_77+5)
 12694  01BA16  6EE6               	movwf	postinc1,c
 12695  01BA18  0EFF               	movlw	high (STR_77+5)
 12696  01BA1A  6EE6               	movwf	postinc1,c
 12697  01BA1C  0E00               	movlw	0
 12698  01BA1E  6EE6               	movwf	postinc1,c
 12699  01BA20  0E03               	movlw	3
 12700  01BA22  6EE6               	movwf	postinc1,c
 12701  01BA24  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 12702  01BA28  0060  F0AB  FFE6   	movff	btemp,postinc1
 12703  01BA2E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 12704  01BA34  0E06               	movlw	6
 12705  01BA36  6EE6               	movwf	postinc1,c
 12706  01BA38  ECE5  F0FE         	call	_sprintf	;wreg free
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;main.c: 645:   update_lcd(0);
 12710  01BA3C  0E00               	movlw	0
 12711  01BA3E  6EE6               	movwf	postinc1,c
 12712  01BA40  EC97  F0F7         	call	_update_lcd	;wreg free
 12713                           
 12714                           ;main.c: 646:   WaitMs(2000);
 12715  01BA44  0ED0               	movlw	208
 12716  01BA46  6EE6               	movwf	postinc1,c
 12717  01BA48  0E07               	movlw	7
 12718  01BA4A  6EE6               	movwf	postinc1,c
 12719  01BA4C  EC12  F012         	call	_WaitMs	;wreg free
 12720  01BA50                     l17362:
 12721                           
 12722                           ;main.c: 647:   bwait = 0;
 12723  01BA50  6A53               	clrf	display_history@bwait^0,c
 12724  01BA52  0012               	return	
 12725  01BA54                     l17368:
 12726                           
 12727                           ;main.c: 650:   if (!get_switch(SCALIB))
 12728  01BA54  0E04               	movlw	4
 12729  01BA56  6EE6               	movwf	postinc1,c
 12730  01BA58  EC25  F013         	call	_get_switch	;wreg free
 12731  01BA5C  502A               	movf	btemp^0,w,c
 12732  01BA5E  A4D8               	btfss	status,2,c
 12733  01BA60  0012               	return	
 12734  01BA62  D7F6               	goto	l17362
 12735  01BA64                     __end_of_display_history:
 12736                           	opt callstack 0
 12737                           
 12738 ;; *************** function _time *****************
 12739 ;; Defined at:
 12740 ;;		line 251 in file "mbmc.c"
 12741 ;; Parameters:    Size  Location     Type
 12742 ;;  t               2  [STACK] PTR long long 
 12743 ;;		 -> time@current_time(8), NULL(0), 
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  8  [STACK] long long 
 12748 ;; Registers used:
 12749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/1
 12752 ;;		On exit  : 3F/39
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12759 ;;Total ram usage:        0 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:   15
 12762 ;; This function calls:
 12763 ;;		Nothing
 12764 ;; This function is called by:
 12765 ;;		_main
 12766 ;;		_display_history
 12767 ;;		_check_day_time
 12768 ;;		_load_hist_data
 12769 ;; This function uses a reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text35
 12773  001C46                     __ptext35:
 12774                           	opt callstack 0
 12775  001C46                     _time:
 12776                           	opt callstack 0
 12777                           
 12778                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 12779  001C46  0E06               	movlw	6
 12780  001C48  26E1               	addwf	fsr1l,f,c
 12781  001C4A  0E00               	movlw	0
 12782  001C4C  22E2               	addwfc	fsr1h,f,c
 12783                           
 12784                           ;mbmc.c: 251: time_t time(time_t * t);mbmc.c: 252: {;mbmc.c: 253:  static time_t current
      +                          _time;;mbmc.c: 254:  PIE8bits.TMR5IE = 0;
 12785                           
 12786                           ;incstack = 0
 12787 ;; hardware stack exceeded
 12788  001C4E  0139               	movlb	57	; () banked
 12789  001C50  9D98               	bcf	152,6,b	;volatile
 12790                           
 12791                           ; BSR set to: 57
 12792                           ;mbmc.c: 255:  current_time = V.ticks;
 12793  001C52  0102               	movlb	2	; () banked
 12794  001C54  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 12795  001C56  0100               	movlb	0	; () banked
 12796  001C58  6FD2               	movwf	time@current_time& (0+255),b
 12797  001C5A  0102               	movlb	2	; () banked
 12798  001C5C  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 12799  001C5E  0100               	movlb	0	; () banked
 12800  001C60  6FD3               	movwf	(time@current_time+1)& (0+255),b
 12801  001C62  0102               	movlb	2	; () banked
 12802  001C64  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 12803  001C66  0100               	movlb	0	; () banked
 12804  001C68  6FD4               	movwf	(time@current_time+2)& (0+255),b
 12805  001C6A  0102               	movlb	2	; () banked
 12806  001C6C  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 12807  001C6E  0100               	movlb	0	; () banked
 12808  001C70  6FD5               	movwf	(time@current_time+3)& (0+255),b
 12809  001C72  6BD6               	clrf	(time@current_time+4)& (0+255),b
 12810  001C74  6BD7               	clrf	(time@current_time+5)& (0+255),b
 12811  001C76  6BD8               	clrf	(time@current_time+6)& (0+255),b
 12812  001C78  6BD9               	clrf	(time@current_time+7)& (0+255),b
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;mbmc.c: 256:  PIE8bits.TMR5IE = 1;
 12816  001C7A  0139               	movlb	57	; () banked
 12817  001C7C  8D98               	bsf	152,6,b	;volatile
 12818                           
 12819                           ; BSR set to: 57
 12820                           ;mbmc.c: 257:  if (t) {
 12821                           ;stkvar	_t @ sp[(0)+-8]
 12822  001C7E  0EF8               	movlw	-8
 12823  001C80  006F FF8C  F02A    	movff	plusw1,btemp
 12824  001C86  0EF9               	movlw	-7
 12825  001C88  50E3               	movf	plusw1,w,c
 12826  001C8A  102A               	iorwf	btemp^0,w,c
 12827                           
 12828                           ; BSR set to: 57
 12829                           ;mbmc.c: 260:  return current_time;
 12830                           
 12831                           ; BSR set to: 57
 12832  001C8C  EE20  F0D2         	lfsr	2,time@current_time
 12833                           
 12834                           ;stkvar	?_time @ sp[(0)+-8]
 12835  001C90  0E08               	movlw	8
 12836  001C92  6E2A               	movwf	btemp^0,c
 12837  001C94  0EF8               	movlw	-8
 12838  001C96                     us1160999:
 12839  001C96  006F FF7B FFE3     	movff	postinc2,plusw1
 12840  001C9C  28E8               	incf	wreg,w,c
 12841  001C9E  2E2A               	decfsz	btemp^0,f,c
 12842  001CA0  D7FA               	bra	us1160999
 12843                           
 12844                           ; BSR set to: 57
 12845                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 12846  001CA2  0012               	return		;funcret
 12847  001CA4                     __end_of_time:
 12848                           	opt callstack 0
 12849                           
 12850 ;; *************** function _localtime *****************
 12851 ;; Defined at:
 12852 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  t               1  [STACK] PTR const long long 
 12855 ;;		 -> pclock(8), 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  2  [STACK] PTR struct tm
 12860 ;; Registers used:
 12861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12862 ;; Tracked objects:
 12863 ;;		On entry : 3F/39
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12871 ;;Total ram usage:        0 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:   21
 12874 ;; This function calls:
 12875 ;;		___localtime_r
 12876 ;; This function is called by:
 12877 ;;		_main
 12878 ;;		_display_history
 12879 ;; This function uses a reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text36
 12883  002BAE                     __ptext36:
 12884                           	opt callstack 0
 12885  002BAE                     _localtime:
 12886                           	opt callstack 9
 12887                           
 12888                           ; BSR set to: 57
 12889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12890                           ;incstack = 0
 12891  002BAE  0EDF               	movlw	low localtime@tm
 12892  002BB0  6EE6               	movwf	postinc1,c
 12893  002BB2  0E03               	movlw	high localtime@tm
 12894  002BB4  6EE6               	movwf	postinc1,c
 12895                           
 12896                           ;stkvar	_t @ sp[(-2)+-1]
 12897  002BB6  0EFD               	movlw	-3
 12898  002BB8  50E3               	movf	plusw1,w,c
 12899  002BBA  6EE6               	movwf	postinc1,c
 12900  002BBC  EC1A  F0E6         	call	___localtime_r	;wreg free
 12901                           
 12902                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 12903  002BC0  52E5               	movf	postdec1,f,c
 12904  002BC2  0012               	return		;funcret
 12905  002BC4                     __end_of_localtime:
 12906                           	opt callstack 0
 12907                           
 12908 ;; *************** function ___localtime_r *****************
 12909 ;; Defined at:
 12910 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;  t               1  [STACK] PTR const long long 
 12913 ;;		 -> pclock(8), 
 12914 ;;  tm              2  [STACK] PTR struct tm
 12915 ;;		 -> localtime@tm(24), 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  2  [STACK] PTR struct tm
 12920 ;; Registers used:
 12921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/39
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:   20
 12934 ;; This function calls:
 12935 ;;		___secs_to_tm
 12936 ;;		___secs_to_zone
 12937 ;; This function is called by:
 12938 ;;		_localtime
 12939 ;; This function uses a reentrant model
 12940 ;;
 12941                           
 12942                           	psect	text37
 12943  01CC34                     __ptext37:
 12944                           	opt callstack 0
 12945  01CC34                     ___localtime_r:
 12946                           	opt callstack 9
 12947                           
 12948                           ;stkvar	_t @ sp[(0)+-1]
 12949                           
 12950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12951                           ;incstack = 0
 12952  01CC34  0EFF               	movlw	-1
 12953  01CC36  50E3               	movf	plusw1,w,c
 12954  01CC38  6ED9               	movwf	fsr2l,c
 12955  01CC3A  6ADA               	clrf	fsr2h,c
 12956  01CC3C  0E07               	movlw	7
 12957  01CC3E  AEDB               	btfss	plusw2,7,c
 12958  01CC40  D010               	goto	u16500
 12959  01CC42  52DE               	movf	postinc2,f,c
 12960  01CC44  52DE               	movf	postinc2,f,c
 12961  01CC46  0E80               	movlw	128
 12962  01CC48  5CDE               	subwf	postinc2,w,c
 12963  01CC4A  0EBD               	movlw	189
 12964  01CC4C  58DE               	subwfb	postinc2,w,c
 12965  01CC4E  0E0E               	movlw	14
 12966  01CC50  58DE               	subwfb	postinc2,w,c
 12967  01CC52  0EFF               	movlw	255
 12968  01CC54  58DE               	subwfb	postinc2,w,c
 12969  01CC56  0EFF               	movlw	255
 12970  01CC58  58DE               	subwfb	postinc2,w,c
 12971  01CC5A  0EFF               	movlw	255
 12972  01CC5C  58DE               	subwfb	postinc2,w,c
 12973  01CC5E  A0D8               	btfss	status,0,c
 12974  01CC60  D01B               	goto	u16510
 12975  01CC62                     u16500:
 12976                           
 12977                           ;stkvar	_t @ sp[(0)+-1]
 12978  01CC62  0EFF               	movlw	-1
 12979  01CC64  50E3               	movf	plusw1,w,c
 12980  01CC66  6ED9               	movwf	fsr2l,c
 12981  01CC68  6ADA               	clrf	fsr2h,c
 12982  01CC6A  0E07               	movlw	7
 12983  01CC6C  BEDB               	btfsc	plusw2,7,c
 12984  01CC6E  D019               	goto	l16918
 12985  01CC70  0E07               	movlw	7
 12986  01CC72  50DB               	movf	plusw2,w,c
 12987  01CC74  E111               	bnz	u16510
 12988  01CC76  0E06               	movlw	6
 12989  01CC78  50DB               	movf	plusw2,w,c
 12990  01CC7A  E10E               	bnz	u16510
 12991  01CC7C  0E05               	movlw	5
 12992  01CC7E  50DB               	movf	plusw2,w,c
 12993  01CC80  E10B               	bnz	u16510
 12994  01CC82  04DE               	decf	postinc2,w,c
 12995  01CC84  0E7B               	movlw	123
 12996  01CC86  58DE               	subwfb	postinc2,w,c
 12997  01CC88  0E9D               	movlw	157
 12998  01CC8A  58DE               	subwfb	postinc2,w,c
 12999  01CC8C  0E40               	movlw	64
 13000  01CC8E  58DE               	subwfb	postinc2,w,c
 13001  01CC90  0EF1               	movlw	241
 13002  01CC92  58DE               	subwfb	postinc2,w,c
 13003  01CC94  A0D8               	btfss	status,0,c
 13004  01CC96  D005               	goto	l16918
 13005  01CC98                     u16510:
 13006  01CC98  0E00               	movlw	0
 13007  01CC9A  6E2A               	movwf	btemp^0,c
 13008  01CC9C  0E00               	movlw	0
 13009  01CC9E  6E2B               	movwf	(btemp+1)^0,c
 13010  01CCA0  D0E7               	goto	l3521
 13011  01CCA2                     l16918:
 13012                           
 13013                           ;stkvar	_tm @ sp[(0)+-3]
 13014  01CCA2  0EFD               	movlw	-3
 13015  01CCA4  50E3               	movf	plusw1,w,c
 13016  01CCA6  0F16               	addlw	22
 13017  01CCA8  6E34               	movwf	(btemp+10)^0,c
 13018  01CCAA  0EFE               	movlw	-2
 13019  01CCAC  006F FF8C  F035    	movff	plusw1,btemp+11
 13020  01CCB2  0E00               	movlw	0
 13021  01CCB4  2235               	addwfc	(btemp+11)^0,f,c
 13022  01CCB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13023  01CCBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13024  01CCC2  0E00               	movlw	0
 13025  01CCC4  6EE6               	movwf	postinc1,c
 13026  01CCC6  0E00               	movlw	0
 13027  01CCC8  6EE6               	movwf	postinc1,c
 13028                           
 13029                           ;stkvar	_tm @ sp[(-4)+-3]
 13030  01CCCA  0EF9               	movlw	-7
 13031  01CCCC  50E3               	movf	plusw1,w,c
 13032  01CCCE  0F12               	addlw	18
 13033  01CCD0  6E34               	movwf	(btemp+10)^0,c
 13034  01CCD2  0EFA               	movlw	-6
 13035  01CCD4  006F FF8C  F035    	movff	plusw1,btemp+11
 13036  01CCDA  0E00               	movlw	0
 13037  01CCDC  2235               	addwfc	(btemp+11)^0,f,c
 13038  01CCDE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13039  01CCE4  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13040                           
 13041                           ;stkvar	_tm @ sp[(-6)+-3]
 13042  01CCEA  0EF7               	movlw	-9
 13043  01CCEC  50E3               	movf	plusw1,w,c
 13044  01CCEE  0F10               	addlw	16
 13045  01CCF0  6E34               	movwf	(btemp+10)^0,c
 13046  01CCF2  0EF8               	movlw	-8
 13047  01CCF4  006F FF8C  F035    	movff	plusw1,btemp+11
 13048  01CCFA  0E00               	movlw	0
 13049  01CCFC  2235               	addwfc	(btemp+11)^0,f,c
 13050  01CCFE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13051  01CD04  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13052  01CD0A  0E00               	movlw	0
 13053  01CD0C  6EE6               	movwf	postinc1,c
 13054  01CD0E  0E00               	movlw	0
 13055  01CD10  6EE6               	movwf	postinc1,c
 13056                           
 13057                           ;stkvar	_t @ sp[(-10)+-1]
 13058  01CD12  0EF5               	movlw	-11
 13059  01CD14  50E3               	movf	plusw1,w,c
 13060  01CD16  6ED9               	movwf	fsr2l,c
 13061  01CD18  6ADA               	clrf	fsr2h,c
 13062  01CD1A  006F FF7B FFE6     	movff	postinc2,postinc1
 13063  01CD20  006F FF7B FFE6     	movff	postinc2,postinc1
 13064  01CD26  006F FF7B FFE6     	movff	postinc2,postinc1
 13065  01CD2C  006F FF7B FFE6     	movff	postinc2,postinc1
 13066  01CD32  006F FF7B FFE6     	movff	postinc2,postinc1
 13067  01CD38  006F FF7B FFE6     	movff	postinc2,postinc1
 13068  01CD3E  006F FF7B FFE6     	movff	postinc2,postinc1
 13069  01CD44  006F FF7B FFE6     	movff	postinc2,postinc1
 13070  01CD4A  ECE1  F0AE         	call	___secs_to_zone	;wreg free
 13071                           
 13072                           ;stkvar	_tm @ sp[(0)+-3]
 13073  01CD4E  0EFD               	movlw	-3
 13074  01CD50  006F FF8F FFE6     	movff	plusw1,postinc1
 13075  01CD56  006F FF8F FFE6     	movff	plusw1,postinc1
 13076                           
 13077                           ;stkvar	_t @ sp[(-2)+-1]
 13078  01CD5C  0EFD               	movlw	-3
 13079  01CD5E  50E3               	movf	plusw1,w,c
 13080  01CD60  6ED9               	movwf	fsr2l,c
 13081  01CD62  6ADA               	clrf	fsr2h,c
 13082  01CD64  006F FF78  F03A    	movff	postinc2,btemp+16
 13083  01CD6A  006F FF78  F03B    	movff	postinc2,btemp+17
 13084  01CD70  006F FF78  F03C    	movff	postinc2,btemp+18
 13085  01CD76  006F FF78  F03D    	movff	postinc2,btemp+19
 13086  01CD7C  006F FF78  F03E    	movff	postinc2,btemp+20
 13087  01CD82  006F FF78  F03F    	movff	postinc2,btemp+21
 13088  01CD88  006F FF78  F040    	movff	postinc2,btemp+22
 13089  01CD8E  006F FF78  F041    	movff	postinc2,btemp+23
 13090                           
 13091                           ;stkvar	_tm @ sp[(-2)+-3]
 13092  01CD94  0EFB               	movlw	-5
 13093  01CD96  006F FF8C  F034    	movff	plusw1,btemp+10
 13094  01CD9C  0EFC               	movlw	-4
 13095  01CD9E  006F FF8C  F035    	movff	plusw1,btemp+11
 13096  01CDA4  0E12               	movlw	18
 13097  01CDA6  2434               	addwf	(btemp+10)^0,w,c
 13098  01CDA8  6ED9               	movwf	fsr2l,c
 13099  01CDAA  0E00               	movlw	0
 13100  01CDAC  2035               	addwfc	(btemp+11)^0,w,c
 13101  01CDAE  6EDA               	movwf	fsr2h,c
 13102  01CDB0  006F FF78  F032    	movff	postinc2,btemp+8
 13103  01CDB6  006F FF78  F033    	movff	postinc2,btemp+9
 13104  01CDBC  006F FF78  F034    	movff	postinc2,btemp+10
 13105  01CDC2  006F FF78  F035    	movff	postinc2,btemp+11
 13106  01CDC8  0060  F0C8  F042   	movff	btemp+8,btemp+24
 13107  01CDCE  0060  F0CC  F043   	movff	btemp+9,btemp+25
 13108  01CDD4  0060  F0D0  F044   	movff	btemp+10,btemp+26
 13109  01CDDA  0060  F0D4  F045   	movff	btemp+11,btemp+27
 13110  01CDE0  6A46               	clrf	(btemp+28)^0,c
 13111  01CDE2  BE45               	btfsc	(btemp+27)^0,7,c
 13112  01CDE4  6846               	setf	(btemp+28)^0,c
 13113  01CDE6  0060  F118  F047   	movff	btemp+28,btemp+29
 13114  01CDEC  0060  F118  F048   	movff	btemp+28,btemp+30
 13115  01CDF2  0060  F118  F049   	movff	btemp+28,btemp+31
 13116  01CDF8  503A               	movf	(btemp+16)^0,w,c
 13117  01CDFA  2442               	addwf	(btemp+24)^0,w,c
 13118  01CDFC  6E32               	movwf	(btemp+8)^0,c
 13119  01CDFE  503B               	movf	(btemp+17)^0,w,c
 13120  01CE00  2043               	addwfc	(btemp+25)^0,w,c
 13121  01CE02  6E33               	movwf	(btemp+9)^0,c
 13122  01CE04  503C               	movf	(btemp+18)^0,w,c
 13123  01CE06  2044               	addwfc	(btemp+26)^0,w,c
 13124  01CE08  6E34               	movwf	(btemp+10)^0,c
 13125  01CE0A  503D               	movf	(btemp+19)^0,w,c
 13126  01CE0C  2045               	addwfc	(btemp+27)^0,w,c
 13127  01CE0E  6E35               	movwf	(btemp+11)^0,c
 13128  01CE10  503E               	movf	(btemp+20)^0,w,c
 13129  01CE12  2046               	addwfc	(btemp+28)^0,w,c
 13130  01CE14  6E36               	movwf	(btemp+12)^0,c
 13131  01CE16  503F               	movf	(btemp+21)^0,w,c
 13132  01CE18  2047               	addwfc	(btemp+29)^0,w,c
 13133  01CE1A  6E37               	movwf	(btemp+13)^0,c
 13134  01CE1C  5040               	movf	(btemp+22)^0,w,c
 13135  01CE1E  2048               	addwfc	(btemp+30)^0,w,c
 13136  01CE20  6E38               	movwf	(btemp+14)^0,c
 13137  01CE22  5041               	movf	(btemp+23)^0,w,c
 13138  01CE24  2049               	addwfc	(btemp+31)^0,w,c
 13139  01CE26  6E39               	movwf	(btemp+15)^0,c
 13140  01CE28  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 13141  01CE2E  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 13142  01CE34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 13143  01CE3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 13144  01CE40  0060  F0DB  FFE6   	movff	btemp+12,postinc1
 13145  01CE46  0060  F0DF  FFE6   	movff	btemp+13,postinc1
 13146  01CE4C  0060  F0E3  FFE6   	movff	btemp+14,postinc1
 13147  01CE52  0060  F0E7  FFE6   	movff	btemp+15,postinc1
 13148  01CE58  ECB2  F094         	call	___secs_to_tm	;wreg free
 13149  01CE5C  BE2D               	btfsc	(btemp+3)^0,7,c
 13150  01CE5E  D71C               	goto	u16510
 13151                           
 13152                           ;stkvar	_tm @ sp[(0)+-3]
 13153  01CE60  0EFD               	movlw	-3
 13154  01CE62  006F FF8C  F02A    	movff	plusw1,btemp
 13155  01CE68  0EFE               	movlw	-2
 13156  01CE6A  006F FF8C  F02B    	movff	plusw1,btemp+1
 13157  01CE70                     l3521:
 13158                           
 13159                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3,
      +                           argsize = 3, vargsize = 0
 13160  01CE70  52E5               	movf	postdec1,f,c
 13161  01CE72  52E5               	movf	postdec1,f,c
 13162  01CE74  52E5               	movf	postdec1,f,c
 13163  01CE76  0012               	return		;funcret
 13164  01CE78                     __end_of___localtime_r:
 13165                           	opt callstack 0
 13166                           
 13167 ;; *************** function ___secs_to_zone *****************
 13168 ;; Defined at:
 13169 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13170 ;; Parameters:    Size  Location     Type
 13171 ;;  t               8  [STACK] long long 
 13172 ;;  local           2  [STACK] int 
 13173 ;;  isdst           2  [STACK] PTR int 
 13174 ;;		 -> localtime@tm(24), 
 13175 ;;  offset          2  [STACK] PTR long 
 13176 ;;		 -> localtime@tm(24), 
 13177 ;;  oppoff          2  [STACK] PTR long 
 13178 ;;		 -> NULL(0), 
 13179 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 13180 ;;		 -> localtime@tm(24), 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  alt             2  [STACK] unsigned int 
 13183 ;;  i               2    0        unsigned int 
 13184 ;;  y               8  [STACK] long long 
 13185 ;;  t1              8  [STACK] long long 
 13186 ;;  t0              8  [STACK] long long 
 13187 ;; Return value:  Size  Location     Type
 13188 ;;                  1  [STACK] void 
 13189 ;; Registers used:
 13190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 13191 ;; Tracked objects:
 13192 ;;		On entry : 0/39
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13200 ;;Total ram usage:        0 bytes
 13201 ;; Hardware stack levels used:    1
 13202 ;; Hardware stack levels required when called:   19
 13203 ;; This function calls:
 13204 ;;		___aodiv
 13205 ;;		___year_to_secs
 13206 ;;		_do_tzset
 13207 ;;		_rule_to_secs
 13208 ;;		_scan_trans
 13209 ;;		_zi_read32
 13210 ;; This function is called by:
 13211 ;;		___localtime_r
 13212 ;; This function uses a reentrant model
 13213 ;;
 13214                           
 13215                           	psect	text38
 13216  015DC2                     __ptext38:
 13217                           	opt callstack 0
 13218  015DC2                     ___secs_to_zone:
 13219                           	opt callstack 0
 13220                           
 13221                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13222  015DC2  0E18               	movlw	24
 13223  015DC4  26E1               	addwf	fsr1l,f,c
 13224  015DC6  0E00               	movlw	0
 13225  015DC8  22E2               	addwfc	fsr1h,f,c
 13226                           
 13227                           ;incstack = 0
 13228  015DCA  ECFD  F0DF         	call	_do_tzset	;wreg free
 13229  015DCE  0100               	movlb	0	; () banked
 13230  015DD0  51B8               	movf	___daylight& (0+255),w,b
 13231  015DD2  11B9               	iorwf	(___daylight+1)& (0+255),w,b
 13232  015DD4  B4D8               	btfsc	status,2,c
 13233  015DD6  D356               	goto	u16290
 13234                           
 13235                           ; BSR set to: 0
 13236  015DD8  0E58               	movlw	88
 13237  015DDA  6EE6               	movwf	postinc1,c
 13238  015DDC  0E85               	movlw	133
 13239  015DDE  6EE6               	movwf	postinc1,c
 13240  015DE0  0EE1               	movlw	225
 13241  015DE2  6EE6               	movwf	postinc1,c
 13242  015DE4  0E01               	movlw	1
 13243  015DE6  6EE6               	movwf	postinc1,c
 13244  015DE8  0E00               	movlw	0
 13245  015DEA  6EE6               	movwf	postinc1,c
 13246  015DEC  0E00               	movlw	0
 13247  015DEE  6EE6               	movwf	postinc1,c
 13248  015DF0  0E00               	movlw	0
 13249  015DF2  6EE6               	movwf	postinc1,c
 13250  015DF4  0E00               	movlw	0
 13251  015DF6  6EE6               	movwf	postinc1,c
 13252                           
 13253                           ;stkvar	_t @ sp[(-32)+-8]
 13254  015DF8  50E1               	movf	fsr1l,w,c
 13255  015DFA  0FD8               	addlw	-40
 13256  015DFC  6ED9               	movwf	fsr2l,c
 13257  015DFE  50E2               	movf	fsr1h,w,c
 13258  015E00  6EDA               	movwf	fsr2h,c
 13259  015E02  0EFF               	movlw	255
 13260  015E04  22DA               	addwfc	fsr2h,f,c
 13261  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 13262  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 13263  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 13264  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 13265  015E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 13266  015E24  006F FF7B FFE6     	movff	postinc2,postinc1
 13267  015E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 13268  015E30  006F FF7B FFE6     	movff	postinc2,postinc1
 13269  015E36  EC7D  F0E2         	call	___aodiv	;wreg free
 13270  015E3A  52E5               	movf	postdec1,f,c
 13271  015E3C  006F FF9C  F041    	movff	indf1,btemp+23
 13272  015E42  52E5               	movf	postdec1,f,c
 13273  015E44  006F FF9C  F040    	movff	indf1,btemp+22
 13274  015E4A  52E5               	movf	postdec1,f,c
 13275  015E4C  006F FF9C  F03F    	movff	indf1,btemp+21
 13276  015E52  52E5               	movf	postdec1,f,c
 13277  015E54  006F FF9C  F03E    	movff	indf1,btemp+20
 13278  015E5A  52E5               	movf	postdec1,f,c
 13279  015E5C  006F FF9C  F03D    	movff	indf1,btemp+19
 13280  015E62  52E5               	movf	postdec1,f,c
 13281  015E64  006F FF9C  F03C    	movff	indf1,btemp+18
 13282  015E6A  52E5               	movf	postdec1,f,c
 13283  015E6C  006F FF9C  F03B    	movff	indf1,btemp+17
 13284  015E72  52E5               	movf	postdec1,f,c
 13285  015E74  006F FF9C  F03A    	movff	indf1,btemp+16
 13286  015E7A  0EF8               	movlw	248
 13287  015E7C  26E1               	addwf	fsr1l,f,c
 13288  015E7E  0EFF               	movlw	255
 13289  015E80  22E2               	addwfc	fsr1h,f,c
 13290  015E82  0E46               	movlw	70
 13291  015E84  243A               	addwf	(btemp+16)^0,w,c
 13292  015E86  6E42               	movwf	(btemp+24)^0,c
 13293  015E88  0E00               	movlw	0
 13294  015E8A  203B               	addwfc	(btemp+17)^0,w,c
 13295  015E8C  6E43               	movwf	(btemp+25)^0,c
 13296  015E8E  0E00               	movlw	0
 13297  015E90  203C               	addwfc	(btemp+18)^0,w,c
 13298  015E92  6E44               	movwf	(btemp+26)^0,c
 13299  015E94  0E00               	movlw	0
 13300  015E96  203D               	addwfc	(btemp+19)^0,w,c
 13301  015E98  6E45               	movwf	(btemp+27)^0,c
 13302  015E9A  0E00               	movlw	0
 13303  015E9C  203E               	addwfc	(btemp+20)^0,w,c
 13304  015E9E  6E46               	movwf	(btemp+28)^0,c
 13305  015EA0  0E00               	movlw	0
 13306  015EA2  203F               	addwfc	(btemp+21)^0,w,c
 13307  015EA4  6E47               	movwf	(btemp+29)^0,c
 13308  015EA6  0E00               	movlw	0
 13309  015EA8  2040               	addwfc	(btemp+22)^0,w,c
 13310  015EAA  6E48               	movwf	(btemp+30)^0,c
 13311  015EAC  0E00               	movlw	0
 13312  015EAE  2041               	addwfc	(btemp+23)^0,w,c
 13313  015EB0  6E49               	movwf	(btemp+31)^0,c
 13314                           
 13315                           ;stkvar	_y @ sp[(-24)+0]
 13316  015EB2  0EE8               	movlw	-24
 13317  015EB4  0060  F10B  FFE3   	movff	btemp+24,plusw1
 13318  015EBA  0EE9               	movlw	-23
 13319  015EBC  0060  F10F  FFE3   	movff	btemp+25,plusw1
 13320  015EC2  0EEA               	movlw	-22
 13321  015EC4  0060  F113  FFE3   	movff	btemp+26,plusw1
 13322  015ECA  0EEB               	movlw	-21
 13323  015ECC  0060  F117  FFE3   	movff	btemp+27,plusw1
 13324  015ED2  0EEC               	movlw	-20
 13325  015ED4  0060  F11B  FFE3   	movff	btemp+28,plusw1
 13326  015EDA  0EED               	movlw	-19
 13327  015EDC  0060  F11F  FFE3   	movff	btemp+29,plusw1
 13328  015EE2  0EEE               	movlw	-18
 13329  015EE4  0060  F123  FFE3   	movff	btemp+30,plusw1
 13330  015EEA  0EEF               	movlw	-17
 13331  015EEC  0060  F127  FFE3   	movff	btemp+31,plusw1
 13332  015EF2  D010               	goto	l16688
 13333  015EF4                     l16686:
 13334                           
 13335                           ;stkvar	_y @ sp[(-24)+0]
 13336  015EF4  50E1               	movf	fsr1l,w,c
 13337  015EF6  0FE8               	addlw	-24
 13338  015EF8  6ED9               	movwf	fsr2l,c
 13339  015EFA  50E2               	movf	fsr1h,w,c
 13340  015EFC  6EDA               	movwf	fsr2h,c
 13341  015EFE  0EFF               	movlw	255
 13342  015F00  22DA               	addwfc	fsr2h,f,c
 13343  015F02  06DE               	decf	postinc2,f,c
 13344  015F04  0E00               	movlw	0
 13345  015F06  5ADE               	subwfb	postinc2,f,c
 13346  015F08  5ADE               	subwfb	postinc2,f,c
 13347  015F0A  5ADE               	subwfb	postinc2,f,c
 13348  015F0C  5ADE               	subwfb	postinc2,f,c
 13349  015F0E  5ADE               	subwfb	postinc2,f,c
 13350  015F10  5ADE               	subwfb	postinc2,f,c
 13351  015F12  5ADE               	subwfb	postinc2,f,c
 13352  015F14                     l16688:
 13353  015F14  0E00               	movlw	0
 13354  015F16  6EE6               	movwf	postinc1,c
 13355  015F18  0E00               	movlw	0
 13356  015F1A  6EE6               	movwf	postinc1,c
 13357                           
 13358                           ;stkvar	_y @ sp[(-26)+0]
 13359  015F1C  50E1               	movf	fsr1l,w,c
 13360  015F1E  0FE6               	addlw	-26
 13361  015F20  6ED9               	movwf	fsr2l,c
 13362  015F22  50E2               	movf	fsr1h,w,c
 13363  015F24  6EDA               	movwf	fsr2h,c
 13364  015F26  0EFF               	movlw	255
 13365  015F28  22DA               	addwfc	fsr2h,f,c
 13366  015F2A  006F FF7B FFE6     	movff	postinc2,postinc1
 13367  015F30  006F FF7B FFE6     	movff	postinc2,postinc1
 13368  015F36  006F FF7B FFE6     	movff	postinc2,postinc1
 13369  015F3C  006F FF7B FFE6     	movff	postinc2,postinc1
 13370  015F42  006F FF7B FFE6     	movff	postinc2,postinc1
 13371  015F48  006F FF7B FFE6     	movff	postinc2,postinc1
 13372  015F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 13373  015F54  006F FF7B FFE6     	movff	postinc2,postinc1
 13374  015F5A  EC28  F0AA         	call	___year_to_secs	;wreg free
 13375  015F5E  52E5               	movf	postdec1,f,c
 13376  015F60  006F FF9C  F041    	movff	indf1,btemp+23
 13377  015F66  52E5               	movf	postdec1,f,c
 13378  015F68  006F FF9C  F040    	movff	indf1,btemp+22
 13379  015F6E  52E5               	movf	postdec1,f,c
 13380  015F70  006F FF9C  F03F    	movff	indf1,btemp+21
 13381  015F76  52E5               	movf	postdec1,f,c
 13382  015F78  006F FF9C  F03E    	movff	indf1,btemp+20
 13383  015F7E  52E5               	movf	postdec1,f,c
 13384  015F80  006F FF9C  F03D    	movff	indf1,btemp+19
 13385  015F86  52E5               	movf	postdec1,f,c
 13386  015F88  006F FF9C  F03C    	movff	indf1,btemp+18
 13387  015F8E  52E5               	movf	postdec1,f,c
 13388  015F90  006F FF9C  F03B    	movff	indf1,btemp+17
 13389  015F96  52E5               	movf	postdec1,f,c
 13390  015F98  006F FF9C  F03A    	movff	indf1,btemp+16
 13391  015F9E  52E5               	movf	postdec1,f,c
 13392  015FA0  52E5               	movf	postdec1,f,c
 13393                           
 13394                           ;stkvar	_t @ sp[(-24)+-8]
 13395  015FA2  0EE0               	movlw	-32
 13396  015FA4  006F FF8C  F02A    	movff	plusw1,btemp
 13397  015FAA  503A               	movf	(btemp+16)^0,w,c
 13398  015FAC  5C2A               	subwf	btemp^0,w,c
 13399  015FAE  0EE1               	movlw	-31
 13400  015FB0  006F FF8C  F02A    	movff	plusw1,btemp
 13401  015FB6  503B               	movf	(btemp+17)^0,w,c
 13402  015FB8  582A               	subwfb	btemp^0,w,c
 13403  015FBA  0EE2               	movlw	-30
 13404  015FBC  006F FF8C  F02A    	movff	plusw1,btemp
 13405  015FC2  503C               	movf	(btemp+18)^0,w,c
 13406  015FC4  582A               	subwfb	btemp^0,w,c
 13407  015FC6  0EE3               	movlw	-29
 13408  015FC8  006F FF8C  F02A    	movff	plusw1,btemp
 13409  015FCE  503D               	movf	(btemp+19)^0,w,c
 13410  015FD0  582A               	subwfb	btemp^0,w,c
 13411  015FD2  0EE4               	movlw	-28
 13412  015FD4  006F FF8C  F02A    	movff	plusw1,btemp
 13413  015FDA  503E               	movf	(btemp+20)^0,w,c
 13414  015FDC  582A               	subwfb	btemp^0,w,c
 13415  015FDE  0EE5               	movlw	-27
 13416  015FE0  006F FF8C  F02A    	movff	plusw1,btemp
 13417  015FE6  503F               	movf	(btemp+21)^0,w,c
 13418  015FE8  582A               	subwfb	btemp^0,w,c
 13419  015FEA  0EE6               	movlw	-26
 13420  015FEC  006F FF8C  F02A    	movff	plusw1,btemp
 13421  015FF2  5040               	movf	(btemp+22)^0,w,c
 13422  015FF4  582A               	subwfb	btemp^0,w,c
 13423  015FF6  0EE7               	movlw	-25
 13424  015FF8  50E3               	movf	plusw1,w,c
 13425  015FFA  0A80               	xorlw	128
 13426  015FFC  6E2A               	movwf	btemp^0,c
 13427  015FFE  5041               	movf	(btemp+23)^0,w,c
 13428  016000  0A80               	xorlw	128
 13429  016002  582A               	subwfb	btemp^0,w,c
 13430  016004  B0D8               	btfsc	status,0,c
 13431  016006  D011               	goto	l16692
 13432  016008  D775               	goto	l16686
 13433  01600A                     l16690:
 13434                           
 13435                           ;stkvar	_y @ sp[(-24)+0]
 13436  01600A  50E1               	movf	fsr1l,w,c
 13437  01600C  0FE8               	addlw	-24
 13438  01600E  6ED9               	movwf	fsr2l,c
 13439  016010  50E2               	movf	fsr1h,w,c
 13440  016012  6EDA               	movwf	fsr2h,c
 13441  016014  0EFF               	movlw	255
 13442  016016  22DA               	addwfc	fsr2h,f,c
 13443  016018  2ADE               	incf	postinc2,f,c
 13444  01601A  0E00               	movlw	0
 13445  01601C  22DE               	addwfc	postinc2,f,c
 13446  01601E  22DE               	addwfc	postinc2,f,c
 13447  016020  22DE               	addwfc	postinc2,f,c
 13448  016022  22DE               	addwfc	postinc2,f,c
 13449  016024  22DE               	addwfc	postinc2,f,c
 13450  016026  22DE               	addwfc	postinc2,f,c
 13451  016028  22DE               	addwfc	postinc2,f,c
 13452  01602A                     l16692:
 13453                           
 13454                           ;stkvar	_t @ sp[(-24)+-8]
 13455  01602A  0E00               	movlw	0
 13456  01602C  6EE6               	movwf	postinc1,c
 13457  01602E  0E00               	movlw	0
 13458  016030  6EE6               	movwf	postinc1,c
 13459                           
 13460                           ;stkvar	_y @ sp[(-26)+0]
 13461  016032  0EE6               	movlw	-26
 13462  016034  50E3               	movf	plusw1,w,c
 13463  016036  0F01               	addlw	1
 13464  016038  6E3A               	movwf	(btemp+16)^0,c
 13465  01603A  0EE7               	movlw	-25
 13466  01603C  006F FF8C  F03B    	movff	plusw1,btemp+17
 13467  016042  0E00               	movlw	0
 13468  016044  223B               	addwfc	(btemp+17)^0,f,c
 13469  016046  0EE8               	movlw	-24
 13470  016048  006F FF8C  F03C    	movff	plusw1,btemp+18
 13471  01604E  0E00               	movlw	0
 13472  016050  223C               	addwfc	(btemp+18)^0,f,c
 13473  016052  0EE9               	movlw	-23
 13474  016054  006F FF8C  F03D    	movff	plusw1,btemp+19
 13475  01605A  0E00               	movlw	0
 13476  01605C  223D               	addwfc	(btemp+19)^0,f,c
 13477  01605E  0EEA               	movlw	-22
 13478  016060  006F FF8C  F03E    	movff	plusw1,btemp+20
 13479  016066  0E00               	movlw	0
 13480  016068  223E               	addwfc	(btemp+20)^0,f,c
 13481  01606A  0EEB               	movlw	-21
 13482  01606C  006F FF8C  F03F    	movff	plusw1,btemp+21
 13483  016072  0E00               	movlw	0
 13484  016074  223F               	addwfc	(btemp+21)^0,f,c
 13485  016076  0EEC               	movlw	-20
 13486  016078  006F FF8C  F040    	movff	plusw1,btemp+22
 13487  01607E  0E00               	movlw	0
 13488  016080  2240               	addwfc	(btemp+22)^0,f,c
 13489  016082  0EED               	movlw	-19
 13490  016084  006F FF8C  F041    	movff	plusw1,btemp+23
 13491  01608A  0E00               	movlw	0
 13492  01608C  2241               	addwfc	(btemp+23)^0,f,c
 13493  01608E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 13494  016094  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 13495  01609A  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 13496  0160A0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 13497  0160A6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 13498  0160AC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 13499  0160B2  0060  F103  FFE6   	movff	btemp+22,postinc1
 13500  0160B8  0060  F107  FFE6   	movff	btemp+23,postinc1
 13501  0160BE  EC28  F0AA         	call	___year_to_secs	;wreg free
 13502  0160C2  52E5               	movf	postdec1,f,c
 13503  0160C4  006F FF9C  F041    	movff	indf1,btemp+23
 13504  0160CA  52E5               	movf	postdec1,f,c
 13505  0160CC  006F FF9C  F040    	movff	indf1,btemp+22
 13506  0160D2  52E5               	movf	postdec1,f,c
 13507  0160D4  006F FF9C  F03F    	movff	indf1,btemp+21
 13508  0160DA  52E5               	movf	postdec1,f,c
 13509  0160DC  006F FF9C  F03E    	movff	indf1,btemp+20
 13510  0160E2  52E5               	movf	postdec1,f,c
 13511  0160E4  006F FF9C  F03D    	movff	indf1,btemp+19
 13512  0160EA  52E5               	movf	postdec1,f,c
 13513  0160EC  006F FF9C  F03C    	movff	indf1,btemp+18
 13514  0160F2  52E5               	movf	postdec1,f,c
 13515  0160F4  006F FF9C  F03B    	movff	indf1,btemp+17
 13516  0160FA  52E5               	movf	postdec1,f,c
 13517  0160FC  006F FF9C  F03A    	movff	indf1,btemp+16
 13518  016102  52E5               	movf	postdec1,f,c
 13519  016104  52E5               	movf	postdec1,f,c
 13520  016106  0EE0               	movlw	-32
 13521  016108  50E3               	movf	plusw1,w,c
 13522  01610A  5C3A               	subwf	(btemp+16)^0,w,c
 13523  01610C  0EE1               	movlw	-31
 13524  01610E  50E3               	movf	plusw1,w,c
 13525  016110  583B               	subwfb	(btemp+17)^0,w,c
 13526  016112  0EE2               	movlw	-30
 13527  016114  50E3               	movf	plusw1,w,c
 13528  016116  583C               	subwfb	(btemp+18)^0,w,c
 13529  016118  0EE3               	movlw	-29
 13530  01611A  50E3               	movf	plusw1,w,c
 13531  01611C  583D               	subwfb	(btemp+19)^0,w,c
 13532  01611E  0EE4               	movlw	-28
 13533  016120  50E3               	movf	plusw1,w,c
 13534  016122  583E               	subwfb	(btemp+20)^0,w,c
 13535  016124  0EE5               	movlw	-27
 13536  016126  50E3               	movf	plusw1,w,c
 13537  016128  583F               	subwfb	(btemp+21)^0,w,c
 13538  01612A  0EE6               	movlw	-26
 13539  01612C  50E3               	movf	plusw1,w,c
 13540  01612E  5840               	subwfb	(btemp+22)^0,w,c
 13541  016130  5041               	movf	(btemp+23)^0,w,c
 13542  016132  0A80               	xorlw	128
 13543  016134  6E2A               	movwf	btemp^0,c
 13544  016136  0EE7               	movlw	-25
 13545  016138  50E3               	movf	plusw1,w,c
 13546  01613A  0A80               	xorlw	128
 13547  01613C  582A               	subwfb	btemp^0,w,c
 13548  01613E  A0D8               	btfss	status,0,c
 13549  016140  D764               	goto	l16690
 13550                           
 13551                           ;stkvar	_y @ sp[(-24)+0]
 13552  016142  0EE8               	movlw	-24
 13553  016144  006F FF8F FFE6     	movff	plusw1,postinc1
 13554  01614A  006F FF8F FFE6     	movff	plusw1,postinc1
 13555  016150  0EE5               	movlw	low _r0
 13556  016152  6EE6               	movwf	postinc1,c
 13557  016154  0E01               	movlw	high _r0
 13558  016156  6EE6               	movwf	postinc1,c
 13559  016158  EC25  F0BB         	call	_rule_to_secs	;wreg free
 13560  01615C  52E5               	movf	postdec1,f,c
 13561  01615E  006F FF9C  F041    	movff	indf1,btemp+23
 13562  016164  52E5               	movf	postdec1,f,c
 13563  016166  006F FF9C  F040    	movff	indf1,btemp+22
 13564  01616C  52E5               	movf	postdec1,f,c
 13565  01616E  006F FF9C  F03F    	movff	indf1,btemp+21
 13566  016174  52E5               	movf	postdec1,f,c
 13567  016176  006F FF9C  F03E    	movff	indf1,btemp+20
 13568  01617C  52E5               	movf	postdec1,f,c
 13569  01617E  006F FF9C  F03D    	movff	indf1,btemp+19
 13570  016184  52E5               	movf	postdec1,f,c
 13571  016186  006F FF9C  F03C    	movff	indf1,btemp+18
 13572  01618C  52E5               	movf	postdec1,f,c
 13573  01618E  006F FF9C  F03B    	movff	indf1,btemp+17
 13574  016194  52E5               	movf	postdec1,f,c
 13575  016196  006F FF9C  F03A    	movff	indf1,btemp+16
 13576                           
 13577                           ;stkvar	_t0 @ sp[(-24)+16]
 13578  01619C  0EF8               	movlw	-8
 13579  01619E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13580  0161A4  0EF9               	movlw	-7
 13581  0161A6  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13582  0161AC  0EFA               	movlw	-6
 13583  0161AE  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13584  0161B4  0EFB               	movlw	-5
 13585  0161B6  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13586  0161BC  0EFC               	movlw	-4
 13587  0161BE  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13588  0161C4  0EFD               	movlw	-3
 13589  0161C6  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13590  0161CC  0EFE               	movlw	-2
 13591  0161CE  0060  F103  FFE3   	movff	btemp+22,plusw1
 13592  0161D4  0EFF               	movlw	-1
 13593  0161D6  0060  F107  FFE3   	movff	btemp+23,plusw1
 13594                           
 13595                           ;stkvar	_y @ sp[(-24)+0]
 13596  0161DC  0EE8               	movlw	-24
 13597  0161DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13598  0161E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13599  0161EA  0EDB               	movlw	low _r1
 13600  0161EC  6EE6               	movwf	postinc1,c
 13601  0161EE  0E01               	movlw	high _r1
 13602  0161F0  6EE6               	movwf	postinc1,c
 13603  0161F2  EC25  F0BB         	call	_rule_to_secs	;wreg free
 13604  0161F6  52E5               	movf	postdec1,f,c
 13605  0161F8  006F FF9C  F041    	movff	indf1,btemp+23
 13606  0161FE  52E5               	movf	postdec1,f,c
 13607  016200  006F FF9C  F040    	movff	indf1,btemp+22
 13608  016206  52E5               	movf	postdec1,f,c
 13609  016208  006F FF9C  F03F    	movff	indf1,btemp+21
 13610  01620E  52E5               	movf	postdec1,f,c
 13611  016210  006F FF9C  F03E    	movff	indf1,btemp+20
 13612  016216  52E5               	movf	postdec1,f,c
 13613  016218  006F FF9C  F03D    	movff	indf1,btemp+19
 13614  01621E  52E5               	movf	postdec1,f,c
 13615  016220  006F FF9C  F03C    	movff	indf1,btemp+18
 13616  016226  52E5               	movf	postdec1,f,c
 13617  016228  006F FF9C  F03B    	movff	indf1,btemp+17
 13618  01622E  52E5               	movf	postdec1,f,c
 13619  016230  006F FF9C  F03A    	movff	indf1,btemp+16
 13620                           
 13621                           ;stkvar	_t1 @ sp[(-24)+8]
 13622  016236  0EF0               	movlw	-16
 13623  016238  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 13624  01623E  0EF1               	movlw	-15
 13625  016240  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 13626  016246  0EF2               	movlw	-14
 13627  016248  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 13628  01624E  0EF3               	movlw	-13
 13629  016250  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 13630  016256  0EF4               	movlw	-12
 13631  016258  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 13632  01625E  0EF5               	movlw	-11
 13633  016260  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 13634  016266  0EF6               	movlw	-10
 13635  016268  0060  F103  FFE3   	movff	btemp+22,plusw1
 13636  01626E  0EF7               	movlw	-9
 13637  016270  0060  F107  FFE3   	movff	btemp+23,plusw1
 13638                           
 13639                           ;stkvar	_local @ sp[(-24)+-10]
 13640  016276  0EDE               	movlw	-34
 13641  016278  006F FF8C  F02A    	movff	plusw1,btemp
 13642  01627E  0EDF               	movlw	-33
 13643  016280  50E3               	movf	plusw1,w,c
 13644  016282  102A               	iorwf	btemp^0,w,c
 13645  016284  A4D8               	btfss	status,2,c
 13646  016286  D044               	goto	l16702
 13647  016288  0060  F1C0  F03A   	movff	___timezone,btemp+16
 13648  01628E  0060  F1C4  F03B   	movff	___timezone+1,btemp+17
 13649  016294  0060  F1C8  F03C   	movff	___timezone+2,btemp+18
 13650  01629A  0060  F1CC  F03D   	movff	___timezone+3,btemp+19
 13651  0162A0  6A3E               	clrf	(btemp+20)^0,c
 13652  0162A2  BE3D               	btfsc	(btemp+19)^0,7,c
 13653  0162A4  683E               	setf	(btemp+20)^0,c
 13654  0162A6  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 13655  0162AC  0060  F0F8  F040   	movff	btemp+20,btemp+22
 13656  0162B2  0060  F0F8  F041   	movff	btemp+20,btemp+23
 13657                           
 13658                           ;stkvar	_t0 @ sp[(-24)+16]
 13659  0162B8  50E1               	movf	fsr1l,w,c
 13660  0162BA  0FF8               	addlw	-8
 13661  0162BC  6ED9               	movwf	fsr2l,c
 13662  0162BE  50E2               	movf	fsr1h,w,c
 13663  0162C0  6EDA               	movwf	fsr2h,c
 13664  0162C2  0EFF               	movlw	255
 13665  0162C4  22DA               	addwfc	fsr2h,f,c
 13666  0162C6  503A               	movf	(btemp+16)^0,w,c
 13667  0162C8  26DE               	addwf	postinc2,f,c
 13668  0162CA  503B               	movf	(btemp+17)^0,w,c
 13669  0162CC  22DE               	addwfc	postinc2,f,c
 13670  0162CE  503C               	movf	(btemp+18)^0,w,c
 13671  0162D0  22DE               	addwfc	postinc2,f,c
 13672  0162D2  503D               	movf	(btemp+19)^0,w,c
 13673  0162D4  22DE               	addwfc	postinc2,f,c
 13674  0162D6  503E               	movf	(btemp+20)^0,w,c
 13675  0162D8  22DE               	addwfc	postinc2,f,c
 13676  0162DA  503F               	movf	(btemp+21)^0,w,c
 13677  0162DC  22DE               	addwfc	postinc2,f,c
 13678  0162DE  5040               	movf	(btemp+22)^0,w,c
 13679  0162E0  22DE               	addwfc	postinc2,f,c
 13680  0162E2  5041               	movf	(btemp+23)^0,w,c
 13681  0162E4  22DE               	addwfc	postinc2,f,c
 13682                           
 13683                           ;stkvar	_t1 @ sp[(-24)+8]
 13684  0162E6  50E1               	movf	fsr1l,w,c
 13685  0162E8  0FF0               	addlw	-16
 13686  0162EA  6ED9               	movwf	fsr2l,c
 13687  0162EC  50E2               	movf	fsr1h,w,c
 13688  0162EE  6EDA               	movwf	fsr2h,c
 13689  0162F0  0EFF               	movlw	255
 13690  0162F2  22DA               	addwfc	fsr2h,f,c
 13691  0162F4  0100               	movlb	0	; () banked
 13692  0162F6  51B6               	movf	_dst_off& (0+255),w,b
 13693  0162F8  26DE               	addwf	postinc2,f,c
 13694  0162FA  51B7               	movf	(_dst_off+1)& (0+255),w,b
 13695  0162FC  22DE               	addwfc	postinc2,f,c
 13696  0162FE  0E00               	movlw	0
 13697  016300  BFB7               	btfsc	(_dst_off+1)& (0+255),7,b
 13698  016302  0EFF               	movlw	255
 13699  016304  22DE               	addwfc	postinc2,f,c
 13700  016306  22DE               	addwfc	postinc2,f,c
 13701  016308  22DE               	addwfc	postinc2,f,c
 13702  01630A  22DE               	addwfc	postinc2,f,c
 13703  01630C  22DE               	addwfc	postinc2,f,c
 13704  01630E  22DE               	addwfc	postinc2,f,c
 13705  016310                     l16702:
 13706                           
 13707                           ;stkvar	_t1 @ sp[(-24)+8]
 13708                           ;stkvar	_t0 @ sp[(-24)+16]
 13709  016310  50E1               	movf	fsr1l,w,c
 13710  016312  0FF8               	addlw	-8
 13711  016314  6ED9               	movwf	fsr2l,c
 13712  016316  50E2               	movf	fsr1h,w,c
 13713  016318  6EDA               	movwf	fsr2h,c
 13714  01631A  0EFF               	movlw	255
 13715  01631C  22DA               	addwfc	fsr2h,f,c
 13716  01631E  0EF0               	movlw	-16
 13717  016320  50E3               	movf	plusw1,w,c
 13718  016322  5CDE               	subwf	postinc2,w,c
 13719  016324  0EF1               	movlw	-15
 13720  016326  50E3               	movf	plusw1,w,c
 13721  016328  58DE               	subwfb	postinc2,w,c
 13722  01632A  0EF2               	movlw	-14
 13723  01632C  50E3               	movf	plusw1,w,c
 13724  01632E  58DE               	subwfb	postinc2,w,c
 13725  016330  0EF3               	movlw	-13
 13726  016332  50E3               	movf	plusw1,w,c
 13727  016334  58DE               	subwfb	postinc2,w,c
 13728  016336  0EF4               	movlw	-12
 13729  016338  50E3               	movf	plusw1,w,c
 13730  01633A  58DE               	subwfb	postinc2,w,c
 13731  01633C  0EF5               	movlw	-11
 13732  01633E  50E3               	movf	plusw1,w,c
 13733  016340  58DE               	subwfb	postinc2,w,c
 13734  016342  0EF6               	movlw	-10
 13735  016344  50E3               	movf	plusw1,w,c
 13736  016346  58DE               	subwfb	postinc2,w,c
 13737  016348  50DE               	movf	postinc2,w,c
 13738  01634A  0A80               	xorlw	128
 13739  01634C  6E2A               	movwf	btemp^0,c
 13740  01634E  0EF7               	movlw	-9
 13741  016350  50E3               	movf	plusw1,w,c
 13742  016352  0A80               	xorlw	128
 13743  016354  582A               	subwfb	btemp^0,w,c
 13744  016356  B0D8               	btfsc	status,0,c
 13745  016358  D04B               	goto	l16712
 13746                           
 13747                           ;stkvar	_t0 @ sp[(-24)+16]
 13748                           ;stkvar	_t @ sp[(-24)+-8]
 13749  01635A  50E1               	movf	fsr1l,w,c
 13750  01635C  0FE0               	addlw	-32
 13751  01635E  6ED9               	movwf	fsr2l,c
 13752  016360  50E2               	movf	fsr1h,w,c
 13753  016362  6EDA               	movwf	fsr2h,c
 13754  016364  0EFF               	movlw	255
 13755  016366  22DA               	addwfc	fsr2h,f,c
 13756  016368  0EF8               	movlw	-8
 13757  01636A  50E3               	movf	plusw1,w,c
 13758  01636C  5CDE               	subwf	postinc2,w,c
 13759  01636E  0EF9               	movlw	-7
 13760  016370  50E3               	movf	plusw1,w,c
 13761  016372  58DE               	subwfb	postinc2,w,c
 13762  016374  0EFA               	movlw	-6
 13763  016376  50E3               	movf	plusw1,w,c
 13764  016378  58DE               	subwfb	postinc2,w,c
 13765  01637A  0EFB               	movlw	-5
 13766  01637C  50E3               	movf	plusw1,w,c
 13767  01637E  58DE               	subwfb	postinc2,w,c
 13768  016380  0EFC               	movlw	-4
 13769  016382  50E3               	movf	plusw1,w,c
 13770  016384  58DE               	subwfb	postinc2,w,c
 13771  016386  0EFD               	movlw	-3
 13772  016388  50E3               	movf	plusw1,w,c
 13773  01638A  58DE               	subwfb	postinc2,w,c
 13774  01638C  0EFE               	movlw	-2
 13775  01638E  50E3               	movf	plusw1,w,c
 13776  016390  58DE               	subwfb	postinc2,w,c
 13777  016392  50DE               	movf	postinc2,w,c
 13778  016394  0A80               	xorlw	128
 13779  016396  6E2A               	movwf	btemp^0,c
 13780  016398  0EFF               	movlw	-1
 13781  01639A  50E3               	movf	plusw1,w,c
 13782  01639C  0A80               	xorlw	128
 13783  01639E  582A               	subwfb	btemp^0,w,c
 13784  0163A0  A0D8               	btfss	status,0,c
 13785  0163A2  D070               	goto	u16290
 13786                           
 13787                           ;stkvar	_t1 @ sp[(-24)+8]
 13788                           ;stkvar	_t @ sp[(-24)+-8]
 13789  0163A4  50E1               	movf	fsr1l,w,c
 13790  0163A6  0FE0               	addlw	-32
 13791  0163A8  6ED9               	movwf	fsr2l,c
 13792  0163AA  50E2               	movf	fsr1h,w,c
 13793  0163AC  6EDA               	movwf	fsr2h,c
 13794  0163AE  0EFF               	movlw	255
 13795  0163B0  22DA               	addwfc	fsr2h,f,c
 13796  0163B2  0EF0               	movlw	-16
 13797  0163B4  50E3               	movf	plusw1,w,c
 13798  0163B6  5CDE               	subwf	postinc2,w,c
 13799  0163B8  0EF1               	movlw	-15
 13800  0163BA  50E3               	movf	plusw1,w,c
 13801  0163BC  58DE               	subwfb	postinc2,w,c
 13802  0163BE  0EF2               	movlw	-14
 13803  0163C0  50E3               	movf	plusw1,w,c
 13804  0163C2  58DE               	subwfb	postinc2,w,c
 13805  0163C4  0EF3               	movlw	-13
 13806  0163C6  50E3               	movf	plusw1,w,c
 13807  0163C8  58DE               	subwfb	postinc2,w,c
 13808  0163CA  0EF4               	movlw	-12
 13809  0163CC  50E3               	movf	plusw1,w,c
 13810  0163CE  58DE               	subwfb	postinc2,w,c
 13811  0163D0  0EF5               	movlw	-11
 13812  0163D2  50E3               	movf	plusw1,w,c
 13813  0163D4  58DE               	subwfb	postinc2,w,c
 13814  0163D6  0EF6               	movlw	-10
 13815  0163D8  50E3               	movf	plusw1,w,c
 13816  0163DA  58DE               	subwfb	postinc2,w,c
 13817  0163DC  50DE               	movf	postinc2,w,c
 13818  0163DE  0A80               	xorlw	128
 13819  0163E0  6E2A               	movwf	btemp^0,c
 13820  0163E2  0EF7               	movlw	-9
 13821  0163E4  50E3               	movf	plusw1,w,c
 13822  0163E6  0A80               	xorlw	128
 13823  0163E8  582A               	subwfb	btemp^0,w,c
 13824  0163EA  A0D8               	btfss	status,0,c
 13825  0163EC  D0C1               	goto	l16730
 13826  0163EE  D04A               	goto	u16290
 13827  0163F0                     l16712:
 13828                           
 13829                           ;stkvar	_t1 @ sp[(-24)+8]
 13830                           ;stkvar	_t @ sp[(-24)+-8]
 13831  0163F0  50E1               	movf	fsr1l,w,c
 13832  0163F2  0FE0               	addlw	-32
 13833  0163F4  6ED9               	movwf	fsr2l,c
 13834  0163F6  50E2               	movf	fsr1h,w,c
 13835  0163F8  6EDA               	movwf	fsr2h,c
 13836  0163FA  0EFF               	movlw	255
 13837  0163FC  22DA               	addwfc	fsr2h,f,c
 13838  0163FE  0EF0               	movlw	-16
 13839  016400  50E3               	movf	plusw1,w,c
 13840  016402  5CDE               	subwf	postinc2,w,c
 13841  016404  0EF1               	movlw	-15
 13842  016406  50E3               	movf	plusw1,w,c
 13843  016408  58DE               	subwfb	postinc2,w,c
 13844  01640A  0EF2               	movlw	-14
 13845  01640C  50E3               	movf	plusw1,w,c
 13846  01640E  58DE               	subwfb	postinc2,w,c
 13847  016410  0EF3               	movlw	-13
 13848  016412  50E3               	movf	plusw1,w,c
 13849  016414  58DE               	subwfb	postinc2,w,c
 13850  016416  0EF4               	movlw	-12
 13851  016418  50E3               	movf	plusw1,w,c
 13852  01641A  58DE               	subwfb	postinc2,w,c
 13853  01641C  0EF5               	movlw	-11
 13854  01641E  50E3               	movf	plusw1,w,c
 13855  016420  58DE               	subwfb	postinc2,w,c
 13856  016422  0EF6               	movlw	-10
 13857  016424  50E3               	movf	plusw1,w,c
 13858  016426  58DE               	subwfb	postinc2,w,c
 13859  016428  50DE               	movf	postinc2,w,c
 13860  01642A  0A80               	xorlw	128
 13861  01642C  6E2A               	movwf	btemp^0,c
 13862  01642E  0EF7               	movlw	-9
 13863  016430  50E3               	movf	plusw1,w,c
 13864  016432  0A80               	xorlw	128
 13865  016434  582A               	subwfb	btemp^0,w,c
 13866  016436  A0D8               	btfss	status,0,c
 13867  016438  D09B               	goto	l16730
 13868                           
 13869                           ;stkvar	_t0 @ sp[(-24)+16]
 13870                           ;stkvar	_t @ sp[(-24)+-8]
 13871  01643A  50E1               	movf	fsr1l,w,c
 13872  01643C  0FE0               	addlw	-32
 13873  01643E  6ED9               	movwf	fsr2l,c
 13874  016440  50E2               	movf	fsr1h,w,c
 13875  016442  6EDA               	movwf	fsr2h,c
 13876  016444  0EFF               	movlw	255
 13877  016446  22DA               	addwfc	fsr2h,f,c
 13878  016448  0EF8               	movlw	-8
 13879  01644A  50E3               	movf	plusw1,w,c
 13880  01644C  5CDE               	subwf	postinc2,w,c
 13881  01644E  0EF9               	movlw	-7
 13882  016450  50E3               	movf	plusw1,w,c
 13883  016452  58DE               	subwfb	postinc2,w,c
 13884  016454  0EFA               	movlw	-6
 13885  016456  50E3               	movf	plusw1,w,c
 13886  016458  58DE               	subwfb	postinc2,w,c
 13887  01645A  0EFB               	movlw	-5
 13888  01645C  50E3               	movf	plusw1,w,c
 13889  01645E  58DE               	subwfb	postinc2,w,c
 13890  016460  0EFC               	movlw	-4
 13891  016462  50E3               	movf	plusw1,w,c
 13892  016464  58DE               	subwfb	postinc2,w,c
 13893  016466  0EFD               	movlw	-3
 13894  016468  50E3               	movf	plusw1,w,c
 13895  01646A  58DE               	subwfb	postinc2,w,c
 13896  01646C  0EFE               	movlw	-2
 13897  01646E  50E3               	movf	plusw1,w,c
 13898  016470  58DE               	subwfb	postinc2,w,c
 13899  016472  50DE               	movf	postinc2,w,c
 13900  016474  0A80               	xorlw	128
 13901  016476  6E2A               	movwf	btemp^0,c
 13902  016478  0EFF               	movlw	-1
 13903  01647A  50E3               	movf	plusw1,w,c
 13904  01647C  0A80               	xorlw	128
 13905  01647E  582A               	subwfb	btemp^0,w,c
 13906  016480  B0D8               	btfsc	status,0,c
 13907  016482  D076               	goto	l16730
 13908  016484                     u16290:
 13909                           
 13910                           ;stkvar	_isdst @ sp[(-24)+-12]
 13911  016484  0EDC               	movlw	-36
 13912  016486  006F FF8F FFD9     	movff	plusw1,fsr2l
 13913  01648C  0EDD               	movlw	-35
 13914  01648E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13915  016494  0E00               	movlw	0
 13916  016496  6EDE               	movwf	postinc2,c
 13917  016498  0E00               	movlw	0
 13918  01649A  6EDD               	movwf	postdec2,c
 13919  01649C  0060  F1C0  F032   	movff	___timezone,btemp+8
 13920  0164A2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 13921  0164A8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 13922  0164AE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 13923  0164B4  1E32               	comf	(btemp+8)^0,f,c
 13924  0164B6  1E33               	comf	(btemp+9)^0,f,c
 13925  0164B8  1E34               	comf	(btemp+10)^0,f,c
 13926  0164BA  1E35               	comf	(btemp+11)^0,f,c
 13927  0164BC  2A32               	incf	(btemp+8)^0,f,c
 13928  0164BE  0E00               	movlw	0
 13929  0164C0  2233               	addwfc	(btemp+9)^0,f,c
 13930  0164C2  2234               	addwfc	(btemp+10)^0,f,c
 13931  0164C4  2235               	addwfc	(btemp+11)^0,f,c
 13932                           
 13933                           ;stkvar	_offset @ sp[(-24)+-14]
 13934  0164C6  0EDA               	movlw	-38
 13935  0164C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 13936  0164CE  0EDB               	movlw	-37
 13937  0164D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 13938  0164D6  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 13939  0164DC  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 13940  0164E2  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 13941  0164E8  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 13942                           
 13943                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13944  0164EE  0ED8               	movlw	-40
 13945  0164F0  006F FF8C  F02A    	movff	plusw1,btemp
 13946  0164F6  0ED9               	movlw	-39
 13947  0164F8  50E3               	movf	plusw1,w,c
 13948  0164FA  102A               	iorwf	btemp^0,w,c
 13949  0164FC  B4D8               	btfsc	status,2,c
 13950  0164FE  D029               	goto	l16726
 13951  016500  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13952  016506  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13953  01650C  1E34               	comf	(btemp+10)^0,f,c
 13954  01650E  1E35               	comf	(btemp+11)^0,f,c
 13955  016510  4A34               	infsnz	(btemp+10)^0,f,c
 13956  016512  2A35               	incf	(btemp+11)^0,f,c
 13957  016514  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 13958  01651A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 13959  016520  0E00               	movlw	0
 13960  016522  BE2F               	btfsc	(btemp+5)^0,7,c
 13961  016524  0EFF               	movlw	255
 13962  016526  6E30               	movwf	(btemp+6)^0,c
 13963  016528  6E31               	movwf	(btemp+7)^0,c
 13964                           
 13965                           ;stkvar	_oppoff @ sp[(-24)+-16]
 13966  01652A  0ED8               	movlw	-40
 13967  01652C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13968  016532  0ED9               	movlw	-39
 13969  016534  006F FF8F FFDA     	movff	plusw1,fsr2h
 13970  01653A  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 13971  016540  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 13972  016546  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 13973  01654C  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 13974  016552                     l16726:
 13975                           
 13976                           ;stkvar	_zonename @ sp[(-24)+-18]
 13977  016552  0ED6               	movlw	-42
 13978  016554  006F FF8F FFD9     	movff	plusw1,fsr2l
 13979  01655A  0ED7               	movlw	-41
 13980  01655C  006F FF8F FFDA     	movff	plusw1,fsr2h
 13981  016562  0060  F1B3  FFDE   	movff	___tzname,postinc2
 13982  016568  0060  F1B7  FFDD   	movff	___tzname+1,postdec2
 13983  01656E  D075               	goto	l4033
 13984  016570                     l16730:
 13985                           
 13986                           ;stkvar	_isdst @ sp[(-24)+-12]
 13987  016570  0EDC               	movlw	-36
 13988  016572  006F FF8F FFD9     	movff	plusw1,fsr2l
 13989  016578  0EDD               	movlw	-35
 13990  01657A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13991  016580  0E01               	movlw	1
 13992  016582  6EDE               	movwf	postinc2,c
 13993  016584  0E00               	movlw	0
 13994  016586  6EDD               	movwf	postdec2,c
 13995  016588  0060  F2D8  F034   	movff	_dst_off,btemp+10
 13996  01658E  0060  F2DC  F035   	movff	_dst_off+1,btemp+11
 13997  016594  1E34               	comf	(btemp+10)^0,f,c
 13998  016596  1E35               	comf	(btemp+11)^0,f,c
 13999  016598  4A34               	infsnz	(btemp+10)^0,f,c
 14000  01659A  2A35               	incf	(btemp+11)^0,f,c
 14001  01659C  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14002  0165A2  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14003  0165A8  0E00               	movlw	0
 14004  0165AA  BE2F               	btfsc	(btemp+5)^0,7,c
 14005  0165AC  0EFF               	movlw	255
 14006  0165AE  6E30               	movwf	(btemp+6)^0,c
 14007  0165B0  6E31               	movwf	(btemp+7)^0,c
 14008                           
 14009                           ;stkvar	_offset @ sp[(-24)+-14]
 14010  0165B2  0EDA               	movlw	-38
 14011  0165B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14012  0165BA  0EDB               	movlw	-37
 14013  0165BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14014  0165C2  0060  F0BB  FFDE   	movff	btemp+4,postinc2
 14015  0165C8  0060  F0BF  FFDE   	movff	btemp+5,postinc2
 14016  0165CE  0060  F0C3  FFDE   	movff	btemp+6,postinc2
 14017  0165D4  0060  F0C7  FFDE   	movff	btemp+7,postinc2
 14018                           
 14019                           ;stkvar	_oppoff @ sp[(-24)+-16]
 14020  0165DA  0ED8               	movlw	-40
 14021  0165DC  006F FF8C  F02A    	movff	plusw1,btemp
 14022  0165E2  0ED9               	movlw	-39
 14023  0165E4  50E3               	movf	plusw1,w,c
 14024  0165E6  102A               	iorwf	btemp^0,w,c
 14025  0165E8  B4D8               	btfsc	status,2,c
 14026  0165EA  D029               	goto	l16738
 14027  0165EC  0060  F1C0  F032   	movff	___timezone,btemp+8
 14028  0165F2  0060  F1C4  F033   	movff	___timezone+1,btemp+9
 14029  0165F8  0060  F1C8  F034   	movff	___timezone+2,btemp+10
 14030  0165FE  0060  F1CC  F035   	movff	___timezone+3,btemp+11
 14031  016604  1E32               	comf	(btemp+8)^0,f,c
 14032  016606  1E33               	comf	(btemp+9)^0,f,c
 14033  016608  1E34               	comf	(btemp+10)^0,f,c
 14034  01660A  1E35               	comf	(btemp+11)^0,f,c
 14035  01660C  2A32               	incf	(btemp+8)^0,f,c
 14036  01660E  0E00               	movlw	0
 14037  016610  2233               	addwfc	(btemp+9)^0,f,c
 14038  016612  2234               	addwfc	(btemp+10)^0,f,c
 14039  016614  2235               	addwfc	(btemp+11)^0,f,c
 14040                           
 14041                           ;stkvar	_oppoff @ sp[(-24)+-16]
 14042  016616  0ED8               	movlw	-40
 14043  016618  006F FF8F FFD9     	movff	plusw1,fsr2l
 14044  01661E  0ED9               	movlw	-39
 14045  016620  006F FF8F FFDA     	movff	plusw1,fsr2h
 14046  016626  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 14047  01662C  0060  F0CF  FFDE   	movff	btemp+9,postinc2
 14048  016632  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 14049  016638  0060  F0D7  FFDE   	movff	btemp+11,postinc2
 14050  01663E                     l16738:
 14051                           
 14052                           ;stkvar	_zonename @ sp[(-24)+-18]
 14053  01663E  0ED6               	movlw	-42
 14054  016640  006F FF8F FFD9     	movff	plusw1,fsr2l
 14055  016646  0ED7               	movlw	-41
 14056  016648  006F FF8F FFDA     	movff	plusw1,fsr2h
 14057  01664E  0060  F1BB  FFDE   	movff	___tzname+2,postinc2
 14058  016654  0060  F1BF  FFDD   	movff	___tzname+3,postdec2
 14059  01665A                     l4033:
 14060                           
 14061                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 14062  01665A  0ED6               	movlw	214
 14063  01665C  26E1               	addwf	fsr1l,f,c
 14064  01665E  0EFF               	movlw	255
 14065  016660  22E2               	addwfc	fsr1h,f,c
 14066  016662  0012               	return		;funcret
 14067  016664                     __end_of___secs_to_zone:
 14068                           	opt callstack 0
 14069                           
 14070 ;; *************** function _scan_trans *****************
 14071 ;; Defined at:
 14072 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;  t               8  [STACK] long long 
 14075 ;;  local           2  [STACK] int 
 14076 ;;  alt             2  [STACK] PTR unsigned int 
 14077 ;;		 -> alt(2), 
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;  x               8    0        unsigned long long 
 14080 ;;  a               2    0        unsigned int 
 14081 ;;  scale           2    0        int 
 14082 ;;  n               2    0        unsigned int 
 14083 ;;  m               2    0        unsigned int 
 14084 ;;  off             2    0        int 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  2  [STACK] unsigned int 
 14087 ;; Registers used:
 14088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14098 ;;Total ram usage:        0 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:   16
 14101 ;; This function calls:
 14102 ;;		_zi_read32
 14103 ;; This function is called by:
 14104 ;;		___secs_to_zone
 14105 ;; This function uses a reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text39
 14109  00233E                     __ptext39:
 14110                           	opt callstack 0
 14111  00233E                     _scan_trans:
 14112                           	opt callstack 11
 14113                           
 14114                           ;stkvar	_alt @ sp[(0)+-12]
 14115                           
 14116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 14117                           ;incstack = 0
 14118  00233E  0EF4               	movlw	-12
 14119  002340  006F FF8C  F02A    	movff	plusw1,btemp
 14120  002346  0EF5               	movlw	-11
 14121  002348  50E3               	movf	plusw1,w,c
 14122  00234A  102A               	iorwf	btemp^0,w,c
 14123  00234C  B4D8               	btfsc	status,2,c
 14124  00234E  D00C               	goto	l16466
 14125                           
 14126                           ;stkvar	_alt @ sp[(0)+-12]
 14127  002350  0EF4               	movlw	-12
 14128  002352  006F FF8F FFD9     	movff	plusw1,fsr2l
 14129  002358  0EF5               	movlw	-11
 14130  00235A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14131  002360  0E00               	movlw	0
 14132  002362  6EDE               	movwf	postinc2,c
 14133  002364  0E00               	movlw	0
 14134  002366  6EDD               	movwf	postdec2,c
 14135  002368                     l16466:
 14136  002368  0E00               	movlw	0
 14137  00236A  6E2A               	movwf	btemp^0,c
 14138  00236C  0E00               	movlw	0
 14139  00236E  6E2B               	movwf	(btemp+1)^0,c
 14140                           
 14141                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 14142  002370  0EF4               	movlw	244
 14143  002372  26E1               	addwf	fsr1l,f,c
 14144  002374  0EFF               	movlw	255
 14145  002376  22E2               	addwfc	fsr1h,f,c
 14146  002378  0012               	return		;funcret
 14147  00237A                     __end_of_scan_trans:
 14148                           	opt callstack 0
 14149                           
 14150 ;; *************** function _zi_read32 *****************
 14151 ;; Defined at:
 14152 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;  z               2  [STACK] PTR const unsigned char 
 14155 ;;		 -> NULL(0), 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;		None
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  4  [STACK] unsigned long 
 14160 ;; Registers used:
 14161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14162 ;; Tracked objects:
 14163 ;;		On entry : 0/0
 14164 ;;		On exit  : 0/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14171 ;;Total ram usage:        0 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:   15
 14174 ;; This function calls:
 14175 ;;		Nothing
 14176 ;; This function is called by:
 14177 ;;		_scan_trans
 14178 ;;		___secs_to_zone
 14179 ;; This function uses a reentrant model
 14180 ;;
 14181                           
 14182                           	psect	text40
 14183  01FED4                     __ptext40:
 14184                           	opt callstack 0
 14185  01FED4                     _zi_read32:
 14186                           	opt callstack 12
 14187                           
 14188                           ;stkvar	_z @ sp[(0)+-2]
 14189                           
 14190                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14191                           ;incstack = 0
 14192  01FED4  0EFE               	movlw	-2
 14193  01FED6  006F FF8C  F034    	movff	plusw1,btemp+10
 14194  01FEDC  0EFF               	movlw	-1
 14195  01FEDE  006F FF8C  F035    	movff	plusw1,btemp+11
 14196  01FEE4  0E02               	movlw	2
 14197  01FEE6  2434               	addwf	(btemp+10)^0,w,c
 14198  01FEE8  6ED9               	movwf	fsr2l,c
 14199  01FEEA  0E00               	movlw	0
 14200  01FEEC  2035               	addwfc	(btemp+11)^0,w,c
 14201  01FEEE  6EDA               	movwf	fsr2h,c
 14202  01FEF0  50DF               	movf	indf2,w,c
 14203  01FEF2  6E35               	movwf	(btemp+11)^0,c
 14204  01FEF4  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 14205  01FEFA  6A2F               	clrf	(btemp+5)^0,c
 14206  01FEFC  6A30               	clrf	(btemp+6)^0,c
 14207  01FEFE  6A31               	clrf	(btemp+7)^0,c
 14208  01FF00  0060  F0C0  F031   	movff	btemp+6,btemp+7
 14209  01FF06  0060  F0BC  F030   	movff	btemp+5,btemp+6
 14210  01FF0C  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 14211  01FF12  6A2E               	clrf	(btemp+4)^0,c
 14212                           
 14213                           ;stkvar	_z @ sp[(0)+-2]
 14214  01FF14  0EFE               	movlw	-2
 14215  01FF16  006F FF8C  F034    	movff	plusw1,btemp+10
 14216  01FF1C  0EFF               	movlw	-1
 14217  01FF1E  006F FF8C  F035    	movff	plusw1,btemp+11
 14218  01FF24  0E01               	movlw	1
 14219  01FF26  2434               	addwf	(btemp+10)^0,w,c
 14220  01FF28  6ED9               	movwf	fsr2l,c
 14221  01FF2A  0E00               	movlw	0
 14222  01FF2C  2035               	addwfc	(btemp+11)^0,w,c
 14223  01FF2E  6EDA               	movwf	fsr2h,c
 14224  01FF30  50DF               	movf	indf2,w,c
 14225  01FF32  6E35               	movwf	(btemp+11)^0,c
 14226  01FF34  0060  F0D4  F02A   	movff	btemp+11,btemp
 14227  01FF3A  6A2B               	clrf	(btemp+1)^0,c
 14228  01FF3C  6A2C               	clrf	(btemp+2)^0,c
 14229  01FF3E  6A2D               	clrf	(btemp+3)^0,c
 14230  01FF40  0060  F0AC  F02D   	movff	btemp+1,btemp+3
 14231  01FF46  0060  F0A8  F02C   	movff	btemp,btemp+2
 14232  01FF4C  6A2B               	clrf	(btemp+1)^0,c
 14233  01FF4E  6A2A               	clrf	btemp^0,c
 14234                           
 14235                           ;stkvar	_z @ sp[(0)+-2]
 14236  01FF50  0EFE               	movlw	-2
 14237  01FF52  006F FF8F FFD9     	movff	plusw1,fsr2l
 14238  01FF58  0EFF               	movlw	-1
 14239  01FF5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14240  01FF60  50DF               	movf	indf2,w,c
 14241  01FF62  6E32               	movwf	(btemp+8)^0,c
 14242  01FF64  6A33               	clrf	(btemp+9)^0,c
 14243  01FF66  6A34               	clrf	(btemp+10)^0,c
 14244  01FF68  6A35               	clrf	(btemp+11)^0,c
 14245  01FF6A  0060  F0C8  F035   	movff	btemp+8,btemp+11
 14246  01FF70  6A34               	clrf	(btemp+10)^0,c
 14247  01FF72  6A33               	clrf	(btemp+9)^0,c
 14248  01FF74  6A32               	clrf	(btemp+8)^0,c
 14249  01FF76  502A               	movf	btemp^0,w,c
 14250  01FF78  1232               	iorwf	(btemp+8)^0,f,c
 14251  01FF7A  502B               	movf	(btemp+1)^0,w,c
 14252  01FF7C  1233               	iorwf	(btemp+9)^0,f,c
 14253  01FF7E  502C               	movf	(btemp+2)^0,w,c
 14254  01FF80  1234               	iorwf	(btemp+10)^0,f,c
 14255  01FF82  502D               	movf	(btemp+3)^0,w,c
 14256  01FF84  1235               	iorwf	(btemp+11)^0,f,c
 14257  01FF86  502E               	movf	(btemp+4)^0,w,c
 14258  01FF88  1232               	iorwf	(btemp+8)^0,f,c
 14259  01FF8A  502F               	movf	(btemp+5)^0,w,c
 14260  01FF8C  1233               	iorwf	(btemp+9)^0,f,c
 14261  01FF8E  5030               	movf	(btemp+6)^0,w,c
 14262  01FF90  1234               	iorwf	(btemp+10)^0,f,c
 14263  01FF92  5031               	movf	(btemp+7)^0,w,c
 14264  01FF94  1235               	iorwf	(btemp+11)^0,f,c
 14265                           
 14266                           ;stkvar	_z @ sp[(0)+-2]
 14267  01FF96  0EFE               	movlw	-2
 14268  01FF98  006F FF8C  F030    	movff	plusw1,btemp+6
 14269  01FF9E  0EFF               	movlw	-1
 14270  01FFA0  006F FF8C  F031    	movff	plusw1,btemp+7
 14271  01FFA6  0E03               	movlw	3
 14272  01FFA8  2430               	addwf	(btemp+6)^0,w,c
 14273  01FFAA  6ED9               	movwf	fsr2l,c
 14274  01FFAC  0E00               	movlw	0
 14275  01FFAE  2031               	addwfc	(btemp+7)^0,w,c
 14276  01FFB0  6EDA               	movwf	fsr2h,c
 14277  01FFB2  50DF               	movf	indf2,w,c
 14278  01FFB4  1032               	iorwf	(btemp+8)^0,w,c
 14279  01FFB6  6E2A               	movwf	btemp^0,c
 14280  01FFB8  5033               	movf	(btemp+9)^0,w,c
 14281  01FFBA  6E2B               	movwf	(btemp+1)^0,c
 14282  01FFBC  5034               	movf	(btemp+10)^0,w,c
 14283  01FFBE  6E2C               	movwf	(btemp+2)^0,c
 14284  01FFC0  5035               	movf	(btemp+11)^0,w,c
 14285  01FFC2  6E2D               	movwf	(btemp+3)^0,c
 14286                           
 14287                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 14288  01FFC4  52E5               	movf	postdec1,f,c
 14289  01FFC6  52E5               	movf	postdec1,f,c
 14290  01FFC8  0012               	return		;funcret
 14291  01FFCA                     __end_of_zi_read32:
 14292                           	opt callstack 0
 14293                           
 14294 ;; *************** function _rule_to_secs *****************
 14295 ;; Defined at:
 14296 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14297 ;; Parameters:    Size  Location     Type
 14298 ;;  rule            2  [STACK] PTR const int 
 14299 ;;		 -> r1(10), r0(10), 
 14300 ;;  year            2  [STACK] int 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;  days            2  [STACK] int 
 14303 ;;  wday            2  [STACK] int 
 14304 ;;  t               8  [STACK] long long 
 14305 ;;  is_leap         2  [STACK] int 
 14306 ;;  n               2  [STACK] int 
 14307 ;;  x               2  [STACK] int 
 14308 ;;  m               2  [STACK] int 
 14309 ;;  d               2  [STACK] int 
 14310 ;; Return value:  Size  Location     Type
 14311 ;;                  8  [STACK] long long 
 14312 ;; Registers used:
 14313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 14314 ;; Tracked objects:
 14315 ;;		On entry : 0/0
 14316 ;;		On exit  : 0/0
 14317 ;;		Unchanged: 0/0
 14318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14323 ;;Total ram usage:        0 bytes
 14324 ;; Hardware stack levels used:    1
 14325 ;; Hardware stack levels required when called:   17
 14326 ;; This function calls:
 14327 ;;		___aldiv
 14328 ;;		___aomod
 14329 ;;		___lmul
 14330 ;;		___month_to_secs
 14331 ;;		___year_to_secs
 14332 ;;		_days_in_month
 14333 ;; This function is called by:
 14334 ;;		___secs_to_zone
 14335 ;; This function uses a reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text41
 14339  01764A                     __ptext41:
 14340                           	opt callstack 0
 14341  01764A                     _rule_to_secs:
 14342                           	opt callstack 0
 14343                           
 14344                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 14345  01764A  0E1A               	movlw	26
 14346  01764C  26E1               	addwf	fsr1l,f,c
 14347  01764E  0E00               	movlw	0
 14348  017650  22E2               	addwfc	fsr1h,f,c
 14349                           
 14350                           ;stkvar	_is_leap @ sp[(-22)+12]
 14351                           
 14352                           ;incstack = 0
 14353  017652  0EF6               	movlw	246
 14354  017654  24E1               	addwf	fsr1l,w,c
 14355  017656  6E2A               	movwf	btemp^0,c
 14356  017658  0EFF               	movlw	255
 14357  01765A  20E2               	addwfc	fsr1h,w,c
 14358  01765C  6E2B               	movwf	(btemp+1)^0,c
 14359  01765E  0060  F0AB  FFE6   	movff	btemp,postinc1
 14360  017664  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 14361                           
 14362                           ;stkvar	_year @ sp[(-24)+-8]
 14363  01766A  0EE0               	movlw	-32
 14364  01766C  006F FF8C  F03A    	movff	plusw1,btemp+16
 14365  017672  0EE1               	movlw	-31
 14366  017674  006F FF8C  F03B    	movff	plusw1,btemp+17
 14367  01767A  6A3C               	clrf	(btemp+18)^0,c
 14368  01767C  BE3B               	btfsc	(btemp+17)^0,7,c
 14369  01767E  683C               	setf	(btemp+18)^0,c
 14370  017680  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 14371  017686  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 14372  01768C  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 14373  017692  0060  F0F0  F040   	movff	btemp+18,btemp+22
 14374  017698  0060  F0F0  F041   	movff	btemp+18,btemp+23
 14375  01769E  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14376  0176A4  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14377  0176AA  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14378  0176B0  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14379  0176B6  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14380  0176BC  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14381  0176C2  0060  F103  FFE6   	movff	btemp+22,postinc1
 14382  0176C8  0060  F107  FFE6   	movff	btemp+23,postinc1
 14383  0176CE  EC28  F0AA         	call	___year_to_secs	;wreg free
 14384  0176D2  52E5               	movf	postdec1,f,c
 14385  0176D4  006F FF9C  F041    	movff	indf1,btemp+23
 14386  0176DA  52E5               	movf	postdec1,f,c
 14387  0176DC  006F FF9C  F040    	movff	indf1,btemp+22
 14388  0176E2  52E5               	movf	postdec1,f,c
 14389  0176E4  006F FF9C  F03F    	movff	indf1,btemp+21
 14390  0176EA  52E5               	movf	postdec1,f,c
 14391  0176EC  006F FF9C  F03E    	movff	indf1,btemp+20
 14392  0176F2  52E5               	movf	postdec1,f,c
 14393  0176F4  006F FF9C  F03D    	movff	indf1,btemp+19
 14394  0176FA  52E5               	movf	postdec1,f,c
 14395  0176FC  006F FF9C  F03C    	movff	indf1,btemp+18
 14396  017702  52E5               	movf	postdec1,f,c
 14397  017704  006F FF9C  F03B    	movff	indf1,btemp+17
 14398  01770A  52E5               	movf	postdec1,f,c
 14399  01770C  006F FF9C  F03A    	movff	indf1,btemp+16
 14400  017712  52E5               	movf	postdec1,f,c
 14401  017714  52E5               	movf	postdec1,f,c
 14402                           
 14403                           ;stkvar	_t @ sp[(-22)+4]
 14404  017716  0EEE               	movlw	-18
 14405  017718  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 14406  01771E  0EEF               	movlw	-17
 14407  017720  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 14408  017726  0EF0               	movlw	-16
 14409  017728  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 14410  01772E  0EF1               	movlw	-15
 14411  017730  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 14412  017736  0EF2               	movlw	-14
 14413  017738  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 14414  01773E  0EF3               	movlw	-13
 14415  017740  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 14416  017746  0EF4               	movlw	-12
 14417  017748  0060  F103  FFE3   	movff	btemp+22,plusw1
 14418  01774E  0EF5               	movlw	-11
 14419  017750  0060  F107  FFE3   	movff	btemp+23,plusw1
 14420                           
 14421                           ;stkvar	_rule @ sp[(-22)+-6]
 14422  017756  0EE4               	movlw	-28
 14423  017758  006F FF8F FFD9     	movff	plusw1,fsr2l
 14424  01775E  0EE5               	movlw	-27
 14425  017760  006F FF8F FFDA     	movff	plusw1,fsr2h
 14426  017766  0E4D               	movlw	77
 14427  017768  18DE               	xorwf	postinc2,w,c
 14428  01776A  10DE               	iorwf	postinc2,w,c
 14429  01776C  B4D8               	btfsc	status,2,c
 14430  01776E  D074               	goto	l16582
 14431                           
 14432                           ;stkvar	_rule @ sp[(-22)+-6]
 14433  017770  0EE4               	movlw	-28
 14434  017772  006F FF8C  F034    	movff	plusw1,btemp+10
 14435  017778  0EE5               	movlw	-27
 14436  01777A  006F FF8C  F035    	movff	plusw1,btemp+11
 14437  017780  0E02               	movlw	2
 14438  017782  2434               	addwf	(btemp+10)^0,w,c
 14439  017784  6ED9               	movwf	fsr2l,c
 14440  017786  0E00               	movlw	0
 14441  017788  2035               	addwfc	(btemp+11)^0,w,c
 14442  01778A  6EDA               	movwf	fsr2h,c
 14443  01778C  006F FF78  F034    	movff	postinc2,btemp+10
 14444  017792  006F FF74  F035    	movff	postdec2,btemp+11
 14445                           
 14446                           ;stkvar	_x @ sp[(-22)+16]
 14447  017798  0EFA               	movlw	-6
 14448  01779A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14449  0177A0  0EFB               	movlw	-5
 14450  0177A2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14451                           
 14452                           ;stkvar	_rule @ sp[(-22)+-6]
 14453  0177A8  0EE4               	movlw	-28
 14454  0177AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14455  0177B0  0EE5               	movlw	-27
 14456  0177B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14457  0177B8  0E4A               	movlw	74
 14458  0177BA  18DE               	xorwf	postinc2,w,c
 14459  0177BC  10DE               	iorwf	postinc2,w,c
 14460  0177BE  A4D8               	btfss	status,2,c
 14461  0177C0  D021               	goto	l16580
 14462                           
 14463                           ;stkvar	_x @ sp[(-22)+16]
 14464  0177C2  0EFB               	movlw	-5
 14465  0177C4  BEE3               	btfsc	plusw1,7,c
 14466  0177C6  D014               	goto	u16120
 14467  0177C8  0EFB               	movlw	-5
 14468  0177CA  50E3               	movf	plusw1,w,c
 14469  0177CC  E108               	bnz	u16110
 14470  0177CE  0EFA               	movlw	-6
 14471  0177D0  006F FF8C  F02A    	movff	plusw1,btemp
 14472  0177D6  0E3C               	movlw	60
 14473  0177D8  5E2A               	subwf	btemp^0,f,c
 14474  0177DA  A0D8               	btfss	status,0,c
 14475  0177DC  D009               	goto	u16120
 14476  0177DE                     u16110:
 14477                           
 14478                           ;stkvar	_is_leap @ sp[(-22)+12]
 14479  0177DE  0EF6               	movlw	-10
 14480  0177E0  006F FF8C  F02A    	movff	plusw1,btemp
 14481  0177E6  0EF7               	movlw	-9
 14482  0177E8  50E3               	movf	plusw1,w,c
 14483  0177EA  102A               	iorwf	btemp^0,w,c
 14484  0177EC  A4D8               	btfss	status,2,c
 14485  0177EE  D00A               	goto	l16580
 14486  0177F0                     u16120:
 14487                           
 14488                           ;stkvar	_x @ sp[(-22)+16]
 14489  0177F0  50E1               	movf	fsr1l,w,c
 14490  0177F2  0FFA               	addlw	-6
 14491  0177F4  6ED9               	movwf	fsr2l,c
 14492  0177F6  50E2               	movf	fsr1h,w,c
 14493  0177F8  6EDA               	movwf	fsr2h,c
 14494  0177FA  0EFF               	movlw	255
 14495  0177FC  22DA               	addwfc	fsr2h,f,c
 14496  0177FE  06DE               	decf	postinc2,f,c
 14497  017800  0E00               	movlw	0
 14498  017802  5ADD               	subwfb	postdec2,f,c
 14499  017804                     l16580:
 14500  017804  0E80               	movlw	128
 14501  017806  6EE6               	movwf	postinc1,c
 14502  017808  0E51               	movlw	81
 14503  01780A  6EE6               	movwf	postinc1,c
 14504  01780C  0E01               	movlw	1
 14505  01780E  6EE6               	movwf	postinc1,c
 14506  017810  0E00               	movlw	0
 14507  017812  6EE6               	movwf	postinc1,c
 14508                           
 14509                           ;stkvar	_x @ sp[(-26)+16]
 14510  017814  0EF6               	movlw	-10
 14511  017816  006F FF8C  F034    	movff	plusw1,btemp+10
 14512  01781C  0EF7               	movlw	-9
 14513  01781E  006F FF8C  F035    	movff	plusw1,btemp+11
 14514  017824  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14515  01782A  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14516  017830  0E00               	movlw	0
 14517  017832  BE2F               	btfsc	(btemp+5)^0,7,c
 14518  017834  0EFF               	movlw	255
 14519  017836  6E30               	movwf	(btemp+6)^0,c
 14520  017838  6E31               	movwf	(btemp+7)^0,c
 14521  01783A  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14522  017840  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14523  017846  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14524  01784C  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14525  017852  ECAC  F002         	call	___lmul	;wreg free
 14526  017856  D1EC               	goto	L10
 14527  017858                     l16582:
 14528                           
 14529                           ;stkvar	_rule @ sp[(-22)+-6]
 14530  017858  0EE4               	movlw	-28
 14531  01785A  006F FF8C  F034    	movff	plusw1,btemp+10
 14532  017860  0EE5               	movlw	-27
 14533  017862  006F FF8C  F035    	movff	plusw1,btemp+11
 14534  017868  0E02               	movlw	2
 14535  01786A  2434               	addwf	(btemp+10)^0,w,c
 14536  01786C  6ED9               	movwf	fsr2l,c
 14537  01786E  0E00               	movlw	0
 14538  017870  2035               	addwfc	(btemp+11)^0,w,c
 14539  017872  6EDA               	movwf	fsr2h,c
 14540  017874  006F FF78  F034    	movff	postinc2,btemp+10
 14541  01787A  006F FF74  F035    	movff	postdec2,btemp+11
 14542                           
 14543                           ;stkvar	_m @ sp[(-22)+18]
 14544  017880  0EFC               	movlw	-4
 14545  017882  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14546  017888  0EFD               	movlw	-3
 14547  01788A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14548                           
 14549                           ;stkvar	_rule @ sp[(-22)+-6]
 14550  017890  0EE4               	movlw	-28
 14551  017892  006F FF8C  F034    	movff	plusw1,btemp+10
 14552  017898  0EE5               	movlw	-27
 14553  01789A  006F FF8C  F035    	movff	plusw1,btemp+11
 14554  0178A0  0E04               	movlw	4
 14555  0178A2  2434               	addwf	(btemp+10)^0,w,c
 14556  0178A4  6ED9               	movwf	fsr2l,c
 14557  0178A6  0E00               	movlw	0
 14558  0178A8  2035               	addwfc	(btemp+11)^0,w,c
 14559  0178AA  6EDA               	movwf	fsr2h,c
 14560  0178AC  006F FF78  F034    	movff	postinc2,btemp+10
 14561  0178B2  006F FF74  F035    	movff	postdec2,btemp+11
 14562                           
 14563                           ;stkvar	_n @ sp[(-22)+14]
 14564  0178B8  0EF8               	movlw	-8
 14565  0178BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14566  0178C0  0EF9               	movlw	-7
 14567  0178C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14568                           
 14569                           ;stkvar	_rule @ sp[(-22)+-6]
 14570  0178C8  0EE4               	movlw	-28
 14571  0178CA  006F FF8C  F034    	movff	plusw1,btemp+10
 14572  0178D0  0EE5               	movlw	-27
 14573  0178D2  006F FF8C  F035    	movff	plusw1,btemp+11
 14574  0178D8  0E06               	movlw	6
 14575  0178DA  2434               	addwf	(btemp+10)^0,w,c
 14576  0178DC  6ED9               	movwf	fsr2l,c
 14577  0178DE  0E00               	movlw	0
 14578  0178E0  2035               	addwfc	(btemp+11)^0,w,c
 14579  0178E2  6EDA               	movwf	fsr2h,c
 14580  0178E4  006F FF78  F034    	movff	postinc2,btemp+10
 14581  0178EA  006F FF74  F035    	movff	postdec2,btemp+11
 14582                           
 14583                           ;stkvar	_d @ sp[(-22)+20]
 14584  0178F0  0EFE               	movlw	-2
 14585  0178F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14586  0178F8  0EFF               	movlw	-1
 14587  0178FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14588                           
 14589                           ;stkvar	_is_leap @ sp[(-22)+12]
 14590  017900  0EF6               	movlw	-10
 14591  017902  006F FF8F FFE6     	movff	plusw1,postinc1
 14592  017908  006F FF8F FFE6     	movff	plusw1,postinc1
 14593                           
 14594                           ;stkvar	_m @ sp[(-24)+18]
 14595  01790E  0EFA               	movlw	-6
 14596  017910  50E3               	movf	plusw1,w,c
 14597  017912  0FFF               	addlw	255
 14598  017914  6E34               	movwf	(btemp+10)^0,c
 14599  017916  0EFB               	movlw	-5
 14600  017918  006F FF8C  F035    	movff	plusw1,btemp+11
 14601  01791E  0EFF               	movlw	255
 14602  017920  2235               	addwfc	(btemp+11)^0,f,c
 14603  017922  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 14604  017928  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 14605  01792E  EC4F  F001         	call	___month_to_secs	;wreg free
 14606  017932  0060  F0A8  F03A   	movff	btemp,btemp+16
 14607  017938  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14608  01793E  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14609  017944  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14610  01794A  6A3E               	clrf	(btemp+20)^0,c
 14611  01794C  BE3D               	btfsc	(btemp+19)^0,7,c
 14612  01794E  683E               	setf	(btemp+20)^0,c
 14613  017950  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14614  017956  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14615  01795C  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14616                           
 14617                           ;stkvar	_t @ sp[(-22)+4]
 14618  017962  50E1               	movf	fsr1l,w,c
 14619  017964  0FEE               	addlw	-18
 14620  017966  6ED9               	movwf	fsr2l,c
 14621  017968  50E2               	movf	fsr1h,w,c
 14622  01796A  6EDA               	movwf	fsr2h,c
 14623  01796C  0EFF               	movlw	255
 14624  01796E  22DA               	addwfc	fsr2h,f,c
 14625  017970  503A               	movf	(btemp+16)^0,w,c
 14626  017972  26DE               	addwf	postinc2,f,c
 14627  017974  503B               	movf	(btemp+17)^0,w,c
 14628  017976  22DE               	addwfc	postinc2,f,c
 14629  017978  503C               	movf	(btemp+18)^0,w,c
 14630  01797A  22DE               	addwfc	postinc2,f,c
 14631  01797C  503D               	movf	(btemp+19)^0,w,c
 14632  01797E  22DE               	addwfc	postinc2,f,c
 14633  017980  503E               	movf	(btemp+20)^0,w,c
 14634  017982  22DE               	addwfc	postinc2,f,c
 14635  017984  503F               	movf	(btemp+21)^0,w,c
 14636  017986  22DE               	addwfc	postinc2,f,c
 14637  017988  5040               	movf	(btemp+22)^0,w,c
 14638  01798A  22DE               	addwfc	postinc2,f,c
 14639  01798C  5041               	movf	(btemp+23)^0,w,c
 14640  01798E  22DE               	addwfc	postinc2,f,c
 14641  017990  0E80               	movlw	128
 14642  017992  6EE6               	movwf	postinc1,c
 14643  017994  0E51               	movlw	81
 14644  017996  6EE6               	movwf	postinc1,c
 14645  017998  0E01               	movlw	1
 14646  01799A  6EE6               	movwf	postinc1,c
 14647  01799C  0E00               	movlw	0
 14648  01799E  6EE6               	movwf	postinc1,c
 14649  0179A0  0E80               	movlw	128
 14650  0179A2  6EE6               	movwf	postinc1,c
 14651  0179A4  0E3A               	movlw	58
 14652  0179A6  6EE6               	movwf	postinc1,c
 14653  0179A8  0E09               	movlw	9
 14654  0179AA  6EE6               	movwf	postinc1,c
 14655  0179AC  0E00               	movlw	0
 14656  0179AE  6EE6               	movwf	postinc1,c
 14657  0179B0  0E00               	movlw	0
 14658  0179B2  6EE6               	movwf	postinc1,c
 14659  0179B4  0E00               	movlw	0
 14660  0179B6  6EE6               	movwf	postinc1,c
 14661  0179B8  0E00               	movlw	0
 14662  0179BA  6EE6               	movwf	postinc1,c
 14663  0179BC  0E00               	movlw	0
 14664  0179BE  6EE6               	movwf	postinc1,c
 14665                           
 14666                           ;stkvar	_t @ sp[(-34)+4]
 14667  0179C0  0EE2               	movlw	-30
 14668  0179C2  50E3               	movf	plusw1,w,c
 14669  0179C4  0F00               	addlw	0
 14670  0179C6  6E3A               	movwf	(btemp+16)^0,c
 14671  0179C8  0EE3               	movlw	-29
 14672  0179CA  006F FF8C  F03B    	movff	plusw1,btemp+17
 14673  0179D0  0E46               	movlw	70
 14674  0179D2  223B               	addwfc	(btemp+17)^0,f,c
 14675  0179D4  0EE4               	movlw	-28
 14676  0179D6  006F FF8C  F03C    	movff	plusw1,btemp+18
 14677  0179DC  0E05               	movlw	5
 14678  0179DE  223C               	addwfc	(btemp+18)^0,f,c
 14679  0179E0  0EE5               	movlw	-27
 14680  0179E2  006F FF8C  F03D    	movff	plusw1,btemp+19
 14681  0179E8  0E00               	movlw	0
 14682  0179EA  223D               	addwfc	(btemp+19)^0,f,c
 14683  0179EC  0EE6               	movlw	-26
 14684  0179EE  006F FF8C  F03E    	movff	plusw1,btemp+20
 14685  0179F4  0E00               	movlw	0
 14686  0179F6  223E               	addwfc	(btemp+20)^0,f,c
 14687  0179F8  0EE7               	movlw	-25
 14688  0179FA  006F FF8C  F03F    	movff	plusw1,btemp+21
 14689  017A00  0E00               	movlw	0
 14690  017A02  223F               	addwfc	(btemp+21)^0,f,c
 14691  017A04  0EE8               	movlw	-24
 14692  017A06  006F FF8C  F040    	movff	plusw1,btemp+22
 14693  017A0C  0E00               	movlw	0
 14694  017A0E  2240               	addwfc	(btemp+22)^0,f,c
 14695  017A10  0EE9               	movlw	-23
 14696  017A12  006F FF8C  F041    	movff	plusw1,btemp+23
 14697  017A18  0E00               	movlw	0
 14698  017A1A  2241               	addwfc	(btemp+23)^0,f,c
 14699  017A1C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 14700  017A22  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 14701  017A28  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 14702  017A2E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 14703  017A34  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 14704  017A3A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 14705  017A40  0060  F103  FFE6   	movff	btemp+22,postinc1
 14706  017A46  0060  F107  FFE6   	movff	btemp+23,postinc1
 14707  017A4C  EC3C  F0E7         	call	___aomod	;wreg free
 14708  017A50  52E5               	movf	postdec1,f,c
 14709  017A52  006F FF9C  F041    	movff	indf1,btemp+23
 14710  017A58  52E5               	movf	postdec1,f,c
 14711  017A5A  006F FF9C  F040    	movff	indf1,btemp+22
 14712  017A60  52E5               	movf	postdec1,f,c
 14713  017A62  006F FF9C  F03F    	movff	indf1,btemp+21
 14714  017A68  52E5               	movf	postdec1,f,c
 14715  017A6A  006F FF9C  F03E    	movff	indf1,btemp+20
 14716  017A70  52E5               	movf	postdec1,f,c
 14717  017A72  006F FF9C  F03D    	movff	indf1,btemp+19
 14718  017A78  52E5               	movf	postdec1,f,c
 14719  017A7A  006F FF9C  F03C    	movff	indf1,btemp+18
 14720  017A80  52E5               	movf	postdec1,f,c
 14721  017A82  006F FF9C  F03B    	movff	indf1,btemp+17
 14722  017A88  52E5               	movf	postdec1,f,c
 14723  017A8A  006F FF9C  F03A    	movff	indf1,btemp+16
 14724  017A90  0EF8               	movlw	248
 14725  017A92  26E1               	addwf	fsr1l,f,c
 14726  017A94  0EFF               	movlw	255
 14727  017A96  22E2               	addwfc	fsr1h,f,c
 14728  017A98  0060  F0E8  F034   	movff	btemp+16,btemp+10
 14729  017A9E  0060  F0EC  F035   	movff	btemp+17,btemp+11
 14730  017AA4  0060  F0D0  F02E   	movff	btemp+10,btemp+4
 14731  017AAA  0060  F0D4  F02F   	movff	btemp+11,btemp+5
 14732  017AB0  0E00               	movlw	0
 14733  017AB2  BE2F               	btfsc	(btemp+5)^0,7,c
 14734  017AB4  0EFF               	movlw	255
 14735  017AB6  6E30               	movwf	(btemp+6)^0,c
 14736  017AB8  6E31               	movwf	(btemp+7)^0,c
 14737  017ABA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14738  017AC0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14739  017AC6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14740  017ACC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14741  017AD2  ECFC  F0F0         	call	___aldiv	;wreg free
 14742  017AD6  0060  F0A8  F034   	movff	btemp,btemp+10
 14743  017ADC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 14744                           
 14745                           ;stkvar	_wday @ sp[(-22)+2]
 14746  017AE2  0EEC               	movlw	-20
 14747  017AE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14748  017AEA  0EED               	movlw	-19
 14749  017AEC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14750                           
 14751                           ;stkvar	_wday @ sp[(-22)+2]
 14752                           ;stkvar	_d @ sp[(-22)+20]
 14753  017AF2  0EFE               	movlw	-2
 14754  017AF4  006F FF8C  F034    	movff	plusw1,btemp+10
 14755  017AFA  0EFF               	movlw	-1
 14756  017AFC  006F FF8C  F035    	movff	plusw1,btemp+11
 14757  017B02  0EEC               	movlw	-20
 14758  017B04  50E3               	movf	plusw1,w,c
 14759  017B06  5E34               	subwf	(btemp+10)^0,f,c
 14760  017B08  0EED               	movlw	-19
 14761  017B0A  50E3               	movf	plusw1,w,c
 14762  017B0C  5A35               	subwfb	(btemp+11)^0,f,c
 14763                           
 14764                           ;stkvar	_days @ sp[(-22)+0]
 14765  017B0E  0EEA               	movlw	-22
 14766  017B10  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14767  017B16  0EEB               	movlw	-21
 14768  017B18  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14769                           
 14770                           ;stkvar	_days @ sp[(-22)+0]
 14771  017B1E  0EEB               	movlw	-21
 14772  017B20  AEE3               	btfss	plusw1,7,c
 14773  017B22  D011               	goto	l4025
 14774                           
 14775                           ;stkvar	_days @ sp[(-22)+0]
 14776  017B24  0EEA               	movlw	-22
 14777  017B26  50E3               	movf	plusw1,w,c
 14778  017B28  0F07               	addlw	7
 14779  017B2A  6E2A               	movwf	btemp^0,c
 14780  017B2C  0EEA               	movlw	-22
 14781  017B2E  0060  F0AB  FFE3   	movff	btemp,plusw1
 14782  017B34  6A2A               	clrf	btemp^0,c
 14783  017B36  0EEB               	movlw	-21
 14784  017B38  50E3               	movf	plusw1,w,c
 14785  017B3A  202A               	addwfc	btemp^0,w,c
 14786  017B3C  6E2A               	movwf	btemp^0,c
 14787  017B3E  0EEB               	movlw	-21
 14788  017B40  0060  F0AB  FFE3   	movff	btemp,plusw1
 14789  017B46                     l4025:
 14790                           
 14791                           ;stkvar	_n @ sp[(-22)+14]
 14792  017B46  0EF8               	movlw	-8
 14793  017B48  006F FF8C  F02A    	movff	plusw1,btemp
 14794  017B4E  0E05               	movlw	5
 14795  017B50  182A               	xorwf	btemp^0,w,c
 14796  017B52  E134               	bnz	l16598
 14797  017B54  0EF9               	movlw	-7
 14798  017B56  50E3               	movf	plusw1,w,c
 14799  017B58  A4D8               	btfss	status,2,c
 14800  017B5A  D030               	goto	l16598
 14801                           
 14802                           ;stkvar	_is_leap @ sp[(-22)+12]
 14803  017B5C  0EF6               	movlw	-10
 14804  017B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 14805  017B64  006F FF8F FFE6     	movff	plusw1,postinc1
 14806                           
 14807                           ;stkvar	_m @ sp[(-24)+18]
 14808  017B6A  0EFA               	movlw	-6
 14809  017B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 14810  017B72  006F FF8F FFE6     	movff	plusw1,postinc1
 14811  017B78  EC2D  F00D         	call	_days_in_month	;wreg free
 14812                           
 14813                           ;stkvar	_days @ sp[(-22)+0]
 14814  017B7C  0EEA               	movlw	-22
 14815  017B7E  50E3               	movf	plusw1,w,c
 14816  017B80  0F1C               	addlw	28
 14817  017B82  6E34               	movwf	(btemp+10)^0,c
 14818  017B84  0EEB               	movlw	-21
 14819  017B86  006F FF8C  F035    	movff	plusw1,btemp+11
 14820  017B8C  0E00               	movlw	0
 14821  017B8E  2235               	addwfc	(btemp+11)^0,f,c
 14822  017B90  502A               	movf	btemp^0,w,c
 14823  017B92  5C34               	subwf	(btemp+10)^0,w,c
 14824  017B94  5035               	movf	(btemp+11)^0,w,c
 14825  017B96  0A80               	xorlw	128
 14826  017B98  6E2C               	movwf	(btemp+2)^0,c
 14827  017B9A  502B               	movf	(btemp+1)^0,w,c
 14828  017B9C  0A80               	xorlw	128
 14829  017B9E  582C               	subwfb	(btemp+2)^0,w,c
 14830  017BA0  A0D8               	btfss	status,0,c
 14831  017BA2  D00C               	goto	l16598
 14832  017BA4  0E04               	movlw	4
 14833  017BA6  6E34               	movwf	(btemp+10)^0,c
 14834  017BA8  0E00               	movlw	0
 14835  017BAA  6E35               	movwf	(btemp+11)^0,c
 14836                           
 14837                           ;stkvar	_n @ sp[(-22)+14]
 14838  017BAC  0EF8               	movlw	-8
 14839  017BAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 14840  017BB4  0EF9               	movlw	-7
 14841  017BB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 14842  017BBC                     l16598:
 14843  017BBC  0E80               	movlw	128
 14844  017BBE  6EE6               	movwf	postinc1,c
 14845  017BC0  0E51               	movlw	81
 14846  017BC2  6EE6               	movwf	postinc1,c
 14847  017BC4  0E01               	movlw	1
 14848  017BC6  6EE6               	movwf	postinc1,c
 14849  017BC8  0E00               	movlw	0
 14850  017BCA  6EE6               	movwf	postinc1,c
 14851                           
 14852                           ;stkvar	_days @ sp[(-26)+0]
 14853                           ;stkvar	_n @ sp[(-26)+14]
 14854  017BCC  0EF4               	movlw	-12
 14855  017BCE  006F FF8C  F034    	movff	plusw1,btemp+10
 14856  017BD4  0EF5               	movlw	-11
 14857  017BD6  006F FF8C  F035    	movff	plusw1,btemp+11
 14858  017BDC  0E07               	movlw	7
 14859  017BDE  0234               	mulwf	(btemp+10)^0,c
 14860  017BE0  006F FFCC  F032    	movff	prodl,btemp+8
 14861  017BE6  006F FFD0  F033    	movff	prodh,btemp+9
 14862  017BEC  0235               	mulwf	(btemp+11)^0,c
 14863  017BEE  50F3               	movf	prodl,w,c
 14864  017BF0  2633               	addwf	(btemp+9)^0,f,c
 14865  017BF2  0EE6               	movlw	-26
 14866  017BF4  50E3               	movf	plusw1,w,c
 14867  017BF6  2632               	addwf	(btemp+8)^0,f,c
 14868  017BF8  0EE7               	movlw	-25
 14869  017BFA  50E3               	movf	plusw1,w,c
 14870  017BFC  2233               	addwfc	(btemp+9)^0,f,c
 14871  017BFE  0EF9               	movlw	249
 14872  017C00  2432               	addwf	(btemp+8)^0,w,c
 14873  017C02  6E2E               	movwf	(btemp+4)^0,c
 14874  017C04  0EFF               	movlw	255
 14875  017C06  2033               	addwfc	(btemp+9)^0,w,c
 14876  017C08  6E2F               	movwf	(btemp+5)^0,c
 14877  017C0A  6A30               	clrf	(btemp+6)^0,c
 14878  017C0C  BE2F               	btfsc	(btemp+5)^0,7,c
 14879  017C0E  0630               	decf	(btemp+6)^0,f,c
 14880  017C10  5030               	movf	(btemp+6)^0,w,c
 14881  017C12  6E31               	movwf	(btemp+7)^0,c
 14882  017C14  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 14883  017C1A  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 14884  017C20  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 14885  017C26  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 14886  017C2C  ECAC  F002         	call	___lmul	;wreg free
 14887  017C30                     L10:
 14888  017C30  0060  F0A8  F03A   	movff	btemp,btemp+16
 14889  017C36  0060  F0AC  F03B   	movff	btemp+1,btemp+17
 14890  017C3C  0060  F0B0  F03C   	movff	btemp+2,btemp+18
 14891  017C42  0060  F0B4  F03D   	movff	btemp+3,btemp+19
 14892  017C48  6A3E               	clrf	(btemp+20)^0,c
 14893  017C4A  BE3D               	btfsc	(btemp+19)^0,7,c
 14894  017C4C  683E               	setf	(btemp+20)^0,c
 14895  017C4E  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 14896  017C54  0060  F0F8  F040   	movff	btemp+20,btemp+22
 14897  017C5A  0060  F0F8  F041   	movff	btemp+20,btemp+23
 14898                           
 14899                           ;stkvar	_t @ sp[(-22)+4]
 14900  017C60  50E1               	movf	fsr1l,w,c
 14901  017C62  0FEE               	addlw	-18
 14902  017C64  6ED9               	movwf	fsr2l,c
 14903  017C66  50E2               	movf	fsr1h,w,c
 14904  017C68  6EDA               	movwf	fsr2h,c
 14905  017C6A  0EFF               	movlw	255
 14906  017C6C  22DA               	addwfc	fsr2h,f,c
 14907  017C6E  503A               	movf	(btemp+16)^0,w,c
 14908  017C70  26DE               	addwf	postinc2,f,c
 14909  017C72  503B               	movf	(btemp+17)^0,w,c
 14910  017C74  22DE               	addwfc	postinc2,f,c
 14911  017C76  503C               	movf	(btemp+18)^0,w,c
 14912  017C78  22DE               	addwfc	postinc2,f,c
 14913  017C7A  503D               	movf	(btemp+19)^0,w,c
 14914  017C7C  22DE               	addwfc	postinc2,f,c
 14915  017C7E  503E               	movf	(btemp+20)^0,w,c
 14916  017C80  22DE               	addwfc	postinc2,f,c
 14917  017C82  503F               	movf	(btemp+21)^0,w,c
 14918  017C84  22DE               	addwfc	postinc2,f,c
 14919  017C86  5040               	movf	(btemp+22)^0,w,c
 14920  017C88  22DE               	addwfc	postinc2,f,c
 14921  017C8A  5041               	movf	(btemp+23)^0,w,c
 14922  017C8C  22DE               	addwfc	postinc2,f,c
 14923                           
 14924                           ;stkvar	_rule @ sp[(-22)+-6]
 14925  017C8E  0EE4               	movlw	-28
 14926  017C90  006F FF8C  F034    	movff	plusw1,btemp+10
 14927  017C96  0EE5               	movlw	-27
 14928  017C98  006F FF8C  F035    	movff	plusw1,btemp+11
 14929  017C9E  0E08               	movlw	8
 14930  017CA0  2434               	addwf	(btemp+10)^0,w,c
 14931  017CA2  6ED9               	movwf	fsr2l,c
 14932  017CA4  0E00               	movlw	0
 14933  017CA6  2035               	addwfc	(btemp+11)^0,w,c
 14934  017CA8  6EDA               	movwf	fsr2h,c
 14935  017CAA  006F FF78  F034    	movff	postinc2,btemp+10
 14936  017CB0  006F FF74  F035    	movff	postdec2,btemp+11
 14937                           
 14938                           ;stkvar	_t @ sp[(-22)+4]
 14939  017CB6  50E1               	movf	fsr1l,w,c
 14940  017CB8  0FEE               	addlw	-18
 14941  017CBA  6ED9               	movwf	fsr2l,c
 14942  017CBC  50E2               	movf	fsr1h,w,c
 14943  017CBE  6EDA               	movwf	fsr2h,c
 14944  017CC0  0EFF               	movlw	255
 14945  017CC2  22DA               	addwfc	fsr2h,f,c
 14946  017CC4  5034               	movf	(btemp+10)^0,w,c
 14947  017CC6  26DE               	addwf	postinc2,f,c
 14948  017CC8  5035               	movf	(btemp+11)^0,w,c
 14949  017CCA  22DE               	addwfc	postinc2,f,c
 14950  017CCC  0E00               	movlw	0
 14951  017CCE  BE35               	btfsc	(btemp+11)^0,7,c
 14952  017CD0  0EFF               	movlw	255
 14953  017CD2  22DE               	addwfc	postinc2,f,c
 14954  017CD4  22DE               	addwfc	postinc2,f,c
 14955  017CD6  22DE               	addwfc	postinc2,f,c
 14956  017CD8  22DE               	addwfc	postinc2,f,c
 14957  017CDA  22DE               	addwfc	postinc2,f,c
 14958  017CDC  22DE               	addwfc	postinc2,f,c
 14959                           
 14960                           ;stkvar	_t @ sp[(-22)+4]
 14961  017CDE  0EEE               	movlw	238
 14962  017CE0  24E1               	addwf	fsr1l,w,c
 14963  017CE2  6ED9               	movwf	fsr2l,c
 14964  017CE4  0EFF               	movlw	255
 14965  017CE6  20E2               	addwfc	fsr1h,w,c
 14966  017CE8  6EDA               	movwf	fsr2h,c
 14967                           
 14968                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 14969  017CEA  0E08               	movlw	8
 14970  017CEC  6E2A               	movwf	btemp^0,c
 14971  017CEE  0EE2               	movlw	-30
 14972  017CF0                     us1616999:
 14973  017CF0  006F FF7B FFE3     	movff	postinc2,plusw1
 14974  017CF6  28E8               	incf	wreg,w,c
 14975  017CF8  2E2A               	decfsz	btemp^0,f,c
 14976  017CFA  D7FA               	bra	us1616999
 14977                           
 14978                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 14979  017CFC  0EEA               	movlw	234
 14980  017CFE  26E1               	addwf	fsr1l,f,c
 14981  017D00  0EFF               	movlw	255
 14982  017D02  22E2               	addwfc	fsr1h,f,c
 14983  017D04  0012               	return		;funcret
 14984  017D06                     __end_of_rule_to_secs:
 14985                           	opt callstack 0
 14986                           
 14987 ;; *************** function _days_in_month *****************
 14988 ;; Defined at:
 14989 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  m               2  [STACK] int 
 14992 ;;  is_leap         2  [STACK] int 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;		None
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  2  [STACK] int 
 14997 ;; Registers used:
 14998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15008 ;;Total ram usage:        0 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:   15
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_rule_to_secs
 15015 ;; This function uses a reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text42
 15019  001A5A                     __ptext42:
 15020                           	opt callstack 0
 15021  001A5A                     _days_in_month:
 15022                           	opt callstack 11
 15023                           
 15024                           ;stkvar	_m @ sp[(0)+-2]
 15025                           
 15026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15027                           ;incstack = 0
 15028  001A5A  0EFE               	movlw	-2
 15029  001A5C  006F FF8C  F02A    	movff	plusw1,btemp
 15030  001A62  0E02               	movlw	2
 15031  001A64  182A               	xorwf	btemp^0,w,c
 15032  001A66  E10D               	bnz	l11646
 15033  001A68  0EFF               	movlw	-1
 15034  001A6A  50E3               	movf	plusw1,w,c
 15035  001A6C  A4D8               	btfss	status,2,c
 15036  001A6E  D009               	goto	l11646
 15037                           
 15038                           ;stkvar	_is_leap @ sp[(0)+-4]
 15039  001A70  0EFC               	movlw	-4
 15040  001A72  50E3               	movf	plusw1,w,c
 15041  001A74  0F1C               	addlw	28
 15042  001A76  6E2A               	movwf	btemp^0,c
 15043  001A78  0EFD               	movlw	-3
 15044  001A7A  006F FF8C  F02B    	movff	plusw1,btemp+1
 15045  001A80  D017               	goto	L11
 15046  001A82                     l11646:
 15047  001A82  0EFF               	movlw	255
 15048  001A84  6E35               	movwf	(btemp+11)^0,c
 15049                           
 15050                           ;stkvar	_m @ sp[(0)+-2]
 15051  001A86  0EFE               	movlw	-2
 15052  001A88  50E3               	movf	plusw1,w,c
 15053  001A8A  2435               	addwf	(btemp+11)^0,w,c
 15054  001A8C  6E34               	movwf	(btemp+10)^0,c
 15055  001A8E  0ED5               	movlw	213
 15056  001A90  6E2A               	movwf	btemp^0,c
 15057  001A92  0E0A               	movlw	10
 15058  001A94  6E2B               	movwf	(btemp+1)^0,c
 15059  001A96  2A34               	incf	(btemp+10)^0,f,c
 15060  001A98  D003               	goto	u10724
 15061  001A9A                     u10725:
 15062  001A9A  342B               	rlcf	(btemp+1)^0,w,c
 15063  001A9C  322B               	rrcf	(btemp+1)^0,f,c
 15064  001A9E  322A               	rrcf	btemp^0,f,c
 15065  001AA0                     u10724:
 15066  001AA0  2E34               	decfsz	(btemp+10)^0,f,c
 15067  001AA2  D7FB               	goto	u10725
 15068  001AA4  0E01               	movlw	1
 15069  001AA6  162A               	andwf	btemp^0,f,c
 15070  001AA8  0E00               	movlw	0
 15071  001AAA  162B               	andwf	(btemp+1)^0,f,c
 15072  001AAC  0E1E               	movlw	30
 15073  001AAE  262A               	addwf	btemp^0,f,c
 15074  001AB0                     L11:
 15075  001AB0  0E00               	movlw	0
 15076  001AB2  222B               	addwfc	(btemp+1)^0,f,c
 15077                           
 15078                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 15079  001AB4  52E5               	movf	postdec1,f,c
 15080  001AB6  52E5               	movf	postdec1,f,c
 15081  001AB8  52E5               	movf	postdec1,f,c
 15082  001ABA  52E5               	movf	postdec1,f,c
 15083  001ABC  0012               	return		;funcret
 15084  001ABE                     __end_of_days_in_month:
 15085                           	opt callstack 0
 15086                           
 15087 ;; *************** function ___year_to_secs *****************
 15088 ;; Defined at:
 15089 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  year            8  [STACK] long long 
 15092 ;;  is_leap         2  [STACK] PTR int 
 15093 ;;		 -> F5(2), is_leap(2), NULL(0), 
 15094 ;; Auto vars:     Size  Location     Type
 15095 ;;  y               2  [STACK] int 
 15096 ;;  leaps           2  [STACK] int 
 15097 ;;  rem             2  [STACK] int 
 15098 ;;  5               2  [STACK] int 
 15099 ;;  centuries       2  [STACK] int 
 15100 ;;  leaps           2  [STACK] int 
 15101 ;;  cycles          2  [STACK] int 
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  8  [STACK] long long 
 15104 ;; Registers used:
 15105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15115 ;;Total ram usage:        0 bytes
 15116 ;; Hardware stack levels used:    1
 15117 ;; Hardware stack levels required when called:   16
 15118 ;; This function calls:
 15119 ;;		___aodiv
 15120 ;;		___aomod
 15121 ;;		___lmul
 15122 ;;		___omul
 15123 ;; This function is called by:
 15124 ;;		_rule_to_secs
 15125 ;;		___secs_to_zone
 15126 ;; This function uses a reentrant model
 15127 ;;
 15128                           
 15129                           	psect	text43
 15130  015450                     __ptext43:
 15131                           	opt callstack 0
 15132  015450                     ___year_to_secs:
 15133                           	opt callstack 0
 15134                           
 15135                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 15136  015450  0E0E               	movlw	14
 15137  015452  26E1               	addwf	fsr1l,f,c
 15138  015454  0E00               	movlw	0
 15139  015456  22E2               	addwfc	fsr1h,f,c
 15140                           
 15141                           ;stkvar	_year @ sp[(-14)+-8]
 15142                           
 15143                           ;incstack = 0
 15144  015458  0EEA               	movlw	-22
 15145  01545A  50E3               	movf	plusw1,w,c
 15146  01545C  0FFE               	addlw	254
 15147  01545E  6E3A               	movwf	(btemp+16)^0,c
 15148  015460  0EEB               	movlw	-21
 15149  015462  006F FF8C  F03B    	movff	plusw1,btemp+17
 15150  015468  0EFF               	movlw	255
 15151  01546A  223B               	addwfc	(btemp+17)^0,f,c
 15152  01546C  0EEC               	movlw	-20
 15153  01546E  006F FF8C  F03C    	movff	plusw1,btemp+18
 15154  015474  0EFF               	movlw	255
 15155  015476  223C               	addwfc	(btemp+18)^0,f,c
 15156  015478  0EED               	movlw	-19
 15157  01547A  006F FF8C  F03D    	movff	plusw1,btemp+19
 15158  015480  0EFF               	movlw	255
 15159  015482  223D               	addwfc	(btemp+19)^0,f,c
 15160  015484  0EEE               	movlw	-18
 15161  015486  006F FF8C  F03E    	movff	plusw1,btemp+20
 15162  01548C  0EFF               	movlw	255
 15163  01548E  223E               	addwfc	(btemp+20)^0,f,c
 15164  015490  0EEF               	movlw	-17
 15165  015492  006F FF8C  F03F    	movff	plusw1,btemp+21
 15166  015498  0EFF               	movlw	255
 15167  01549A  223F               	addwfc	(btemp+21)^0,f,c
 15168  01549C  0EF0               	movlw	-16
 15169  01549E  006F FF8C  F040    	movff	plusw1,btemp+22
 15170  0154A4  0EFF               	movlw	255
 15171  0154A6  2240               	addwfc	(btemp+22)^0,f,c
 15172  0154A8  0EF1               	movlw	-15
 15173  0154AA  006F FF8C  F041    	movff	plusw1,btemp+23
 15174  0154B0  0EFF               	movlw	255
 15175  0154B2  2241               	addwfc	(btemp+23)^0,f,c
 15176  0154B4  5041               	movf	(btemp+23)^0,w,c
 15177  0154B6  1040               	iorwf	(btemp+22)^0,w,c
 15178  0154B8  103F               	iorwf	(btemp+21)^0,w,c
 15179  0154BA  103E               	iorwf	(btemp+20)^0,w,c
 15180  0154BC  103D               	iorwf	(btemp+19)^0,w,c
 15181  0154BE  103C               	iorwf	(btemp+18)^0,w,c
 15182  0154C0  103B               	iorwf	(btemp+17)^0,w,c
 15183  0154C2  E103               	bnz	u10731
 15184  0154C4  0E89               	movlw	137
 15185  0154C6  5C3A               	subwf	(btemp+16)^0,w,c
 15186  0154C8  B0D8               	btfsc	status,0,c
 15187  0154CA                     u10731:
 15188  0154CA  D0E7               	goto	l11672
 15189                           
 15190                           ;stkvar	_year @ sp[(-14)+-8]
 15191                           ;stkvar	_y @ sp[(-14)+0]
 15192  0154CC  0EEA               	movlw	-22
 15193  0154CE  006F FF8C  F02A    	movff	plusw1,btemp
 15194  0154D4  0EF2               	movlw	-14
 15195  0154D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15196  0154DC  0EEB               	movlw	-21
 15197  0154DE  006F FF8C  F02A    	movff	plusw1,btemp
 15198  0154E4  0EF3               	movlw	-13
 15199  0154E6  0060  F0AB  FFE3   	movff	btemp,plusw1
 15200                           
 15201                           ;stkvar	_y @ sp[(-14)+0]
 15202  0154EC  0EF2               	movlw	-14
 15203  0154EE  50E3               	movf	plusw1,w,c
 15204  0154F0  0FBC               	addlw	188
 15205  0154F2  6E34               	movwf	(btemp+10)^0,c
 15206  0154F4  0EF3               	movlw	-13
 15207  0154F6  006F FF8C  F035    	movff	plusw1,btemp+11
 15208  0154FC  0EFF               	movlw	255
 15209  0154FE  2235               	addwfc	(btemp+11)^0,f,c
 15210  015500  3435               	rlcf	(btemp+11)^0,w,c
 15211  015502  3235               	rrcf	(btemp+11)^0,f,c
 15212  015504  3234               	rrcf	(btemp+10)^0,f,c
 15213  015506  3435               	rlcf	(btemp+11)^0,w,c
 15214  015508  3235               	rrcf	(btemp+11)^0,f,c
 15215  01550A  3234               	rrcf	(btemp+10)^0,f,c
 15216                           
 15217                           ;stkvar	_leaps @ sp[(-14)+2]
 15218  01550C  0EF4               	movlw	-12
 15219  01550E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15220  015514  0EF5               	movlw	-11
 15221  015516  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15222  01551C  0EBC               	movlw	188
 15223  01551E  6E35               	movwf	(btemp+11)^0,c
 15224                           
 15225                           ;stkvar	_y @ sp[(-14)+0]
 15226  015520  0EF2               	movlw	-14
 15227  015522  50E3               	movf	plusw1,w,c
 15228  015524  2435               	addwf	(btemp+11)^0,w,c
 15229  015526  6E34               	movwf	(btemp+10)^0,c
 15230  015528  0E03               	movlw	3
 15231  01552A  1634               	andwf	(btemp+10)^0,f,c
 15232  01552C  A4D8               	btfss	status,2,c
 15233  01552E  D01D               	goto	l11664
 15234                           
 15235                           ;stkvar	_leaps @ sp[(-14)+2]
 15236  015530  50E1               	movf	fsr1l,w,c
 15237  015532  0FF4               	addlw	-12
 15238  015534  6ED9               	movwf	fsr2l,c
 15239  015536  50E2               	movf	fsr1h,w,c
 15240  015538  6EDA               	movwf	fsr2h,c
 15241  01553A  0EFF               	movlw	255
 15242  01553C  22DA               	addwfc	fsr2h,f,c
 15243  01553E  06DE               	decf	postinc2,f,c
 15244  015540  0E00               	movlw	0
 15245  015542  5ADD               	subwfb	postdec2,f,c
 15246                           
 15247                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15248  015544  0EE8               	movlw	-24
 15249  015546  006F FF8C  F02A    	movff	plusw1,btemp
 15250  01554C  0EE9               	movlw	-23
 15251  01554E  50E3               	movf	plusw1,w,c
 15252  015550  102A               	iorwf	btemp^0,w,c
 15253  015552  B4D8               	btfsc	status,2,c
 15254  015554  D01F               	goto	l11668
 15255                           
 15256                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15257  015556  0EE8               	movlw	-24
 15258  015558  006F FF8F FFD9     	movff	plusw1,fsr2l
 15259  01555E  0EE9               	movlw	-23
 15260  015560  006F FF8F FFDA     	movff	plusw1,fsr2h
 15261  015566  0E01               	movlw	1
 15262  015568  D012               	goto	L12
 15263  01556A                     l11664:
 15264                           
 15265                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15266  01556A  0EE8               	movlw	-24
 15267  01556C  006F FF8C  F02A    	movff	plusw1,btemp
 15268  015572  0EE9               	movlw	-23
 15269  015574  50E3               	movf	plusw1,w,c
 15270  015576  102A               	iorwf	btemp^0,w,c
 15271  015578  B4D8               	btfsc	status,2,c
 15272  01557A  D00C               	goto	l11668
 15273                           
 15274                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15275  01557C  0EE8               	movlw	-24
 15276  01557E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15277  015584  0EE9               	movlw	-23
 15278  015586  006F FF8F FFDA     	movff	plusw1,fsr2h
 15279  01558C  0E00               	movlw	0
 15280  01558E                     L12:
 15281  01558E  6EDE               	movwf	postinc2,c
 15282  015590  0E00               	movlw	0
 15283  015592  6EDD               	movwf	postdec2,c
 15284  015594                     l11668:
 15285  015594  0E80               	movlw	128
 15286  015596  6EE6               	movwf	postinc1,c
 15287  015598  0E33               	movlw	51
 15288  01559A  6EE6               	movwf	postinc1,c
 15289  01559C  0EE1               	movlw	225
 15290  01559E  6EE6               	movwf	postinc1,c
 15291  0155A0  0E01               	movlw	1
 15292  0155A2  6EE6               	movwf	postinc1,c
 15293                           
 15294                           ;stkvar	_y @ sp[(-18)+0]
 15295  0155A4  0EEE               	movlw	-18
 15296  0155A6  006F FF8C  F034    	movff	plusw1,btemp+10
 15297  0155AC  0EEF               	movlw	-17
 15298  0155AE  006F FF8C  F035    	movff	plusw1,btemp+11
 15299  0155B4  0EBA               	movlw	186
 15300  0155B6  2434               	addwf	(btemp+10)^0,w,c
 15301  0155B8  6E2E               	movwf	(btemp+4)^0,c
 15302  0155BA  0EFF               	movlw	255
 15303  0155BC  2035               	addwfc	(btemp+11)^0,w,c
 15304  0155BE  6E2F               	movwf	(btemp+5)^0,c
 15305  0155C0  6A30               	clrf	(btemp+6)^0,c
 15306  0155C2  BE2F               	btfsc	(btemp+5)^0,7,c
 15307  0155C4  0630               	decf	(btemp+6)^0,f,c
 15308  0155C6  5030               	movf	(btemp+6)^0,w,c
 15309  0155C8  6E31               	movwf	(btemp+7)^0,c
 15310  0155CA  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 15311  0155D0  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 15312  0155D6  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 15313  0155DC  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 15314  0155E2  ECAC  F002         	call	___lmul	;wreg free
 15315  0155E6  0060  F0A8  F032   	movff	btemp,btemp+8
 15316  0155EC  0060  F0AC  F033   	movff	btemp+1,btemp+9
 15317  0155F2  0060  F0B0  F034   	movff	btemp+2,btemp+10
 15318  0155F8  0060  F0B4  F035   	movff	btemp+3,btemp+11
 15319  0155FE  0E80               	movlw	128
 15320  015600  6EE6               	movwf	postinc1,c
 15321  015602  0E51               	movlw	81
 15322  015604  6EE6               	movwf	postinc1,c
 15323  015606  0E01               	movlw	1
 15324  015608  6EE6               	movwf	postinc1,c
 15325  01560A  0E00               	movlw	0
 15326  01560C  6EE6               	movwf	postinc1,c
 15327                           
 15328                           ;stkvar	_leaps @ sp[(-18)+2]
 15329  01560E  0EF0               	movlw	-16
 15330  015610  006F FF8C  F030    	movff	plusw1,btemp+6
 15331  015616  0EF1               	movlw	-15
 15332  015618  006F FF8C  F031    	movff	plusw1,btemp+7
 15333  01561E  0060  F0C0  F02A   	movff	btemp+6,btemp
 15334  015624  0060  F0C4  F02B   	movff	btemp+7,btemp+1
 15335  01562A  0E00               	movlw	0
 15336  01562C  BE2B               	btfsc	(btemp+1)^0,7,c
 15337  01562E  0EFF               	movlw	255
 15338  015630  6E2C               	movwf	(btemp+2)^0,c
 15339  015632  6E2D               	movwf	(btemp+3)^0,c
 15340  015634  0060  F0AB  FFE6   	movff	btemp,postinc1
 15341  01563A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 15342  015640  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 15343  015646  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 15344  01564C  ECAC  F002         	call	___lmul	;wreg free
 15345  015650  502A               	movf	btemp^0,w,c
 15346  015652  2432               	addwf	(btemp+8)^0,w,c
 15347  015654  6E2E               	movwf	(btemp+4)^0,c
 15348  015656  502B               	movf	(btemp+1)^0,w,c
 15349  015658  2033               	addwfc	(btemp+9)^0,w,c
 15350  01565A  6E2F               	movwf	(btemp+5)^0,c
 15351  01565C  502C               	movf	(btemp+2)^0,w,c
 15352  01565E  2034               	addwfc	(btemp+10)^0,w,c
 15353  015660  6E30               	movwf	(btemp+6)^0,c
 15354  015662  502D               	movf	(btemp+3)^0,w,c
 15355  015664  2035               	addwfc	(btemp+11)^0,w,c
 15356  015666  6E31               	movwf	(btemp+7)^0,c
 15357  015668  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 15358  01566E  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 15359  015674  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 15360  01567A  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 15361  015680  6A3E               	clrf	(btemp+20)^0,c
 15362  015682  BE3D               	btfsc	(btemp+19)^0,7,c
 15363  015684  683E               	setf	(btemp+20)^0,c
 15364  015686  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 15365  01568C  0060  F0F8  F040   	movff	btemp+20,btemp+22
 15366  015692  0060  F0F8  F041   	movff	btemp+20,btemp+23
 15367  015698  D36F               	goto	L13
 15368  01569A                     l11672:
 15369                           
 15370                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15371  01569A  0EE8               	movlw	-24
 15372  01569C  006F FF8C  F02A    	movff	plusw1,btemp
 15373  0156A2  0EE9               	movlw	-23
 15374  0156A4  50E3               	movf	plusw1,w,c
 15375  0156A6  102A               	iorwf	btemp^0,w,c
 15376  0156A8  A4D8               	btfss	status,2,c
 15377  0156AA  D012               	goto	l11678
 15378                           
 15379                           ;stkvar	F5 @ sp[(-14)+6]
 15380  0156AC  0EF8               	movlw	-8
 15381  0156AE  6AE3               	clrf	plusw1,c
 15382  0156B0  0EF9               	movlw	-7
 15383  0156B2  6AE3               	clrf	plusw1,c
 15384                           
 15385                           ;stkvar	F5 @ sp[(-14)+6]
 15386  0156B4  0EF8               	movlw	248
 15387  0156B6  24E1               	addwf	fsr1l,w,c
 15388  0156B8  6E34               	movwf	(btemp+10)^0,c
 15389  0156BA  0EFF               	movlw	255
 15390  0156BC  20E2               	addwfc	fsr1h,w,c
 15391  0156BE  6E35               	movwf	(btemp+11)^0,c
 15392                           
 15393                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15394  0156C0  0EE9               	movlw	-23
 15395  0156C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15396  0156C8  0EE8               	movlw	-24
 15397  0156CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15398  0156D0                     l11678:
 15399  0156D0  0E90               	movlw	144
 15400  0156D2  6EE6               	movwf	postinc1,c
 15401  0156D4  0E01               	movlw	1
 15402  0156D6  6EE6               	movwf	postinc1,c
 15403  0156D8  0E00               	movlw	0
 15404  0156DA  6EE6               	movwf	postinc1,c
 15405  0156DC  0E00               	movlw	0
 15406  0156DE  6EE6               	movwf	postinc1,c
 15407  0156E0  0E00               	movlw	0
 15408  0156E2  6EE6               	movwf	postinc1,c
 15409  0156E4  0E00               	movlw	0
 15410  0156E6  6EE6               	movwf	postinc1,c
 15411  0156E8  0E00               	movlw	0
 15412  0156EA  6EE6               	movwf	postinc1,c
 15413  0156EC  0E00               	movlw	0
 15414  0156EE  6EE6               	movwf	postinc1,c
 15415                           
 15416                           ;stkvar	_year @ sp[(-22)+-8]
 15417  0156F0  0EE2               	movlw	-30
 15418  0156F2  50E3               	movf	plusw1,w,c
 15419  0156F4  0F9C               	addlw	156
 15420  0156F6  6E3A               	movwf	(btemp+16)^0,c
 15421  0156F8  0EE3               	movlw	-29
 15422  0156FA  006F FF8C  F03B    	movff	plusw1,btemp+17
 15423  015700  0EFF               	movlw	255
 15424  015702  223B               	addwfc	(btemp+17)^0,f,c
 15425  015704  0EE4               	movlw	-28
 15426  015706  006F FF8C  F03C    	movff	plusw1,btemp+18
 15427  01570C  0EFF               	movlw	255
 15428  01570E  223C               	addwfc	(btemp+18)^0,f,c
 15429  015710  0EE5               	movlw	-27
 15430  015712  006F FF8C  F03D    	movff	plusw1,btemp+19
 15431  015718  0EFF               	movlw	255
 15432  01571A  223D               	addwfc	(btemp+19)^0,f,c
 15433  01571C  0EE6               	movlw	-26
 15434  01571E  006F FF8C  F03E    	movff	plusw1,btemp+20
 15435  015724  0EFF               	movlw	255
 15436  015726  223E               	addwfc	(btemp+20)^0,f,c
 15437  015728  0EE7               	movlw	-25
 15438  01572A  006F FF8C  F03F    	movff	plusw1,btemp+21
 15439  015730  0EFF               	movlw	255
 15440  015732  223F               	addwfc	(btemp+21)^0,f,c
 15441  015734  0EE8               	movlw	-24
 15442  015736  006F FF8C  F040    	movff	plusw1,btemp+22
 15443  01573C  0EFF               	movlw	255
 15444  01573E  2240               	addwfc	(btemp+22)^0,f,c
 15445  015740  0EE9               	movlw	-23
 15446  015742  006F FF8C  F041    	movff	plusw1,btemp+23
 15447  015748  0EFF               	movlw	255
 15448  01574A  2241               	addwfc	(btemp+23)^0,f,c
 15449  01574C  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15450  015752  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15451  015758  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15452  01575E  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15453  015764  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15454  01576A  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15455  015770  0060  F103  FFE6   	movff	btemp+22,postinc1
 15456  015776  0060  F107  FFE6   	movff	btemp+23,postinc1
 15457  01577C  EC7D  F0E2         	call	___aodiv	;wreg free
 15458  015780  52E5               	movf	postdec1,f,c
 15459  015782  006F FF9C  F041    	movff	indf1,btemp+23
 15460  015788  52E5               	movf	postdec1,f,c
 15461  01578A  006F FF9C  F040    	movff	indf1,btemp+22
 15462  015790  52E5               	movf	postdec1,f,c
 15463  015792  006F FF9C  F03F    	movff	indf1,btemp+21
 15464  015798  52E5               	movf	postdec1,f,c
 15465  01579A  006F FF9C  F03E    	movff	indf1,btemp+20
 15466  0157A0  52E5               	movf	postdec1,f,c
 15467  0157A2  006F FF9C  F03D    	movff	indf1,btemp+19
 15468  0157A8  52E5               	movf	postdec1,f,c
 15469  0157AA  006F FF9C  F03C    	movff	indf1,btemp+18
 15470  0157B0  52E5               	movf	postdec1,f,c
 15471  0157B2  006F FF9C  F03B    	movff	indf1,btemp+17
 15472  0157B8  52E5               	movf	postdec1,f,c
 15473  0157BA  006F FF9C  F03A    	movff	indf1,btemp+16
 15474  0157C0  0EF8               	movlw	248
 15475  0157C2  26E1               	addwf	fsr1l,f,c
 15476  0157C4  0EFF               	movlw	255
 15477  0157C6  22E2               	addwfc	fsr1h,f,c
 15478  0157C8  0060  F0E8  F034   	movff	btemp+16,btemp+10
 15479  0157CE  0060  F0EC  F035   	movff	btemp+17,btemp+11
 15480                           
 15481                           ;stkvar	_cycles @ sp[(-14)+12]
 15482  0157D4  0EFE               	movlw	-2
 15483  0157D6  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15484  0157DC  0EFF               	movlw	-1
 15485  0157DE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15486  0157E4  0E90               	movlw	144
 15487  0157E6  6EE6               	movwf	postinc1,c
 15488  0157E8  0E01               	movlw	1
 15489  0157EA  6EE6               	movwf	postinc1,c
 15490  0157EC  0E00               	movlw	0
 15491  0157EE  6EE6               	movwf	postinc1,c
 15492  0157F0  0E00               	movlw	0
 15493  0157F2  6EE6               	movwf	postinc1,c
 15494  0157F4  0E00               	movlw	0
 15495  0157F6  6EE6               	movwf	postinc1,c
 15496  0157F8  0E00               	movlw	0
 15497  0157FA  6EE6               	movwf	postinc1,c
 15498  0157FC  0E00               	movlw	0
 15499  0157FE  6EE6               	movwf	postinc1,c
 15500  015800  0E00               	movlw	0
 15501  015802  6EE6               	movwf	postinc1,c
 15502                           
 15503                           ;stkvar	_year @ sp[(-22)+-8]
 15504  015804  0EE2               	movlw	-30
 15505  015806  50E3               	movf	plusw1,w,c
 15506  015808  0F9C               	addlw	156
 15507  01580A  6E3A               	movwf	(btemp+16)^0,c
 15508  01580C  0EE3               	movlw	-29
 15509  01580E  006F FF8C  F03B    	movff	plusw1,btemp+17
 15510  015814  0EFF               	movlw	255
 15511  015816  223B               	addwfc	(btemp+17)^0,f,c
 15512  015818  0EE4               	movlw	-28
 15513  01581A  006F FF8C  F03C    	movff	plusw1,btemp+18
 15514  015820  0EFF               	movlw	255
 15515  015822  223C               	addwfc	(btemp+18)^0,f,c
 15516  015824  0EE5               	movlw	-27
 15517  015826  006F FF8C  F03D    	movff	plusw1,btemp+19
 15518  01582C  0EFF               	movlw	255
 15519  01582E  223D               	addwfc	(btemp+19)^0,f,c
 15520  015830  0EE6               	movlw	-26
 15521  015832  006F FF8C  F03E    	movff	plusw1,btemp+20
 15522  015838  0EFF               	movlw	255
 15523  01583A  223E               	addwfc	(btemp+20)^0,f,c
 15524  01583C  0EE7               	movlw	-25
 15525  01583E  006F FF8C  F03F    	movff	plusw1,btemp+21
 15526  015844  0EFF               	movlw	255
 15527  015846  223F               	addwfc	(btemp+21)^0,f,c
 15528  015848  0EE8               	movlw	-24
 15529  01584A  006F FF8C  F040    	movff	plusw1,btemp+22
 15530  015850  0EFF               	movlw	255
 15531  015852  2240               	addwfc	(btemp+22)^0,f,c
 15532  015854  0EE9               	movlw	-23
 15533  015856  006F FF8C  F041    	movff	plusw1,btemp+23
 15534  01585C  0EFF               	movlw	255
 15535  01585E  2241               	addwfc	(btemp+23)^0,f,c
 15536  015860  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15537  015866  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15538  01586C  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15539  015872  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15540  015878  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15541  01587E  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15542  015884  0060  F103  FFE6   	movff	btemp+22,postinc1
 15543  01588A  0060  F107  FFE6   	movff	btemp+23,postinc1
 15544  015890  EC3C  F0E7         	call	___aomod	;wreg free
 15545  015894  52E5               	movf	postdec1,f,c
 15546  015896  006F FF9C  F041    	movff	indf1,btemp+23
 15547  01589C  52E5               	movf	postdec1,f,c
 15548  01589E  006F FF9C  F040    	movff	indf1,btemp+22
 15549  0158A4  52E5               	movf	postdec1,f,c
 15550  0158A6  006F FF9C  F03F    	movff	indf1,btemp+21
 15551  0158AC  52E5               	movf	postdec1,f,c
 15552  0158AE  006F FF9C  F03E    	movff	indf1,btemp+20
 15553  0158B4  52E5               	movf	postdec1,f,c
 15554  0158B6  006F FF9C  F03D    	movff	indf1,btemp+19
 15555  0158BC  52E5               	movf	postdec1,f,c
 15556  0158BE  006F FF9C  F03C    	movff	indf1,btemp+18
 15557  0158C4  52E5               	movf	postdec1,f,c
 15558  0158C6  006F FF9C  F03B    	movff	indf1,btemp+17
 15559  0158CC  52E5               	movf	postdec1,f,c
 15560  0158CE  006F FF9C  F03A    	movff	indf1,btemp+16
 15561  0158D4  0EF8               	movlw	248
 15562  0158D6  26E1               	addwf	fsr1l,f,c
 15563  0158D8  0EFF               	movlw	255
 15564  0158DA  22E2               	addwfc	fsr1h,f,c
 15565  0158DC  0060  F0E8  F034   	movff	btemp+16,btemp+10
 15566  0158E2  0060  F0EC  F035   	movff	btemp+17,btemp+11
 15567                           
 15568                           ;stkvar	_rem @ sp[(-14)+4]
 15569  0158E8  0EF6               	movlw	-10
 15570  0158EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15571  0158F0  0EF7               	movlw	-9
 15572  0158F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15573                           
 15574                           ;stkvar	_rem @ sp[(-14)+4]
 15575  0158F8  0EF7               	movlw	-9
 15576  0158FA  AEE3               	btfss	plusw1,7,c
 15577  0158FC  D015               	goto	l11688
 15578                           
 15579                           ;stkvar	_cycles @ sp[(-14)+12]
 15580  0158FE  50E1               	movf	fsr1l,w,c
 15581  015900  0FFE               	addlw	-2
 15582  015902  6ED9               	movwf	fsr2l,c
 15583  015904  50E2               	movf	fsr1h,w,c
 15584  015906  6EDA               	movwf	fsr2h,c
 15585  015908  0EFF               	movlw	255
 15586  01590A  22DA               	addwfc	fsr2h,f,c
 15587  01590C  06DE               	decf	postinc2,f,c
 15588  01590E  0E00               	movlw	0
 15589  015910  5ADD               	subwfb	postdec2,f,c
 15590                           
 15591                           ;stkvar	_rem @ sp[(-14)+4]
 15592  015912  50E1               	movf	fsr1l,w,c
 15593  015914  0FF6               	addlw	-10
 15594  015916  6ED9               	movwf	fsr2l,c
 15595  015918  50E2               	movf	fsr1h,w,c
 15596  01591A  6EDA               	movwf	fsr2h,c
 15597  01591C  0EFF               	movlw	255
 15598  01591E  22DA               	addwfc	fsr2h,f,c
 15599  015920  0E90               	movlw	144
 15600  015922  26DE               	addwf	postinc2,f,c
 15601  015924  0E01               	movlw	1
 15602  015926  22DD               	addwfc	postdec2,f,c
 15603  015928                     l11688:
 15604                           
 15605                           ;stkvar	_rem @ sp[(-14)+4]
 15606  015928  0EF6               	movlw	-10
 15607  01592A  006F FF8C  F02A    	movff	plusw1,btemp
 15608  015930  0EF7               	movlw	-9
 15609  015932  50E3               	movf	plusw1,w,c
 15610  015934  102A               	iorwf	btemp^0,w,c
 15611  015936  A4D8               	btfss	status,2,c
 15612  015938  D015               	goto	l11696
 15613                           
 15614                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15615  01593A  0EE8               	movlw	-24
 15616  01593C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15617  015942  0EE9               	movlw	-23
 15618  015944  006F FF8F FFDA     	movff	plusw1,fsr2h
 15619  01594A  0E01               	movlw	1
 15620  01594C  6EDE               	movwf	postinc2,c
 15621  01594E  0E00               	movlw	0
 15622  015950  6EDD               	movwf	postdec2,c
 15623                           
 15624                           ;stkvar	_centuries @ sp[(-14)+8]
 15625  015952  0EFA               	movlw	-6
 15626  015954  6AE3               	clrf	plusw1,c
 15627  015956  0EFB               	movlw	-5
 15628  015958  6AE3               	clrf	plusw1,c
 15629  01595A                     l11694:
 15630                           
 15631                           ;stkvar	_leaps @ sp[(-14)+10]
 15632  01595A  0EFC               	movlw	-4
 15633  01595C  6AE3               	clrf	plusw1,c
 15634  01595E  0EFD               	movlw	-3
 15635  015960  6AE3               	clrf	plusw1,c
 15636  015962  D0D6               	goto	l11728
 15637  015964                     l11696:
 15638                           
 15639                           ;stkvar	_rem @ sp[(-14)+4]
 15640  015964  0EF7               	movlw	-9
 15641  015966  BEE3               	btfsc	plusw1,7,c
 15642  015968  D04A               	goto	l11708
 15643  01596A  0EF7               	movlw	-9
 15644  01596C  50E3               	movf	plusw1,w,c
 15645  01596E  E108               	bnz	u10800
 15646  015970  0EF6               	movlw	-10
 15647  015972  006F FF8C  F02A    	movff	plusw1,btemp
 15648  015978  0EC8               	movlw	200
 15649  01597A  5E2A               	subwf	btemp^0,f,c
 15650  01597C  A0D8               	btfss	status,0,c
 15651  01597E  D03F               	goto	l11708
 15652  015980                     u10800:
 15653                           
 15654                           ;stkvar	_rem @ sp[(-14)+4]
 15655  015980  0EF7               	movlw	-9
 15656  015982  BEE3               	btfsc	plusw1,7,c
 15657  015984  D025               	goto	l11704
 15658  015986  0EF6               	movlw	-10
 15659  015988  006F FF8C  F02A    	movff	plusw1,btemp
 15660  01598E  0E2C               	movlw	44
 15661  015990  5E2A               	subwf	btemp^0,f,c
 15662  015992  0EF7               	movlw	-9
 15663  015994  006F FF8C  F02A    	movff	plusw1,btemp
 15664  01599A  0E01               	movlw	1
 15665  01599C  5A2A               	subwfb	btemp^0,f,c
 15666  01599E  A0D8               	btfss	status,0,c
 15667  0159A0  D017               	goto	l11704
 15668  0159A2  0E03               	movlw	3
 15669  0159A4  6E34               	movwf	(btemp+10)^0,c
 15670  0159A6  0E00               	movlw	0
 15671  0159A8  6E35               	movwf	(btemp+11)^0,c
 15672                           
 15673                           ;stkvar	_centuries @ sp[(-14)+8]
 15674  0159AA  0EFA               	movlw	-6
 15675  0159AC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15676  0159B2  0EFB               	movlw	-5
 15677  0159B4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15678                           
 15679                           ;stkvar	_rem @ sp[(-14)+4]
 15680  0159BA  50E1               	movf	fsr1l,w,c
 15681  0159BC  0FF6               	addlw	-10
 15682  0159BE  6ED9               	movwf	fsr2l,c
 15683  0159C0  50E2               	movf	fsr1h,w,c
 15684  0159C2  6EDA               	movwf	fsr2h,c
 15685  0159C4  0EFF               	movlw	255
 15686  0159C6  22DA               	addwfc	fsr2h,f,c
 15687  0159C8  0ED4               	movlw	212
 15688  0159CA  26DE               	addwf	postinc2,f,c
 15689  0159CC  0EFE               	movlw	254
 15690  0159CE  D015               	goto	L14
 15691  0159D0                     l11704:
 15692  0159D0  0E02               	movlw	2
 15693  0159D2  6E34               	movwf	(btemp+10)^0,c
 15694  0159D4  0E00               	movlw	0
 15695  0159D6  6E35               	movwf	(btemp+11)^0,c
 15696                           
 15697                           ;stkvar	_centuries @ sp[(-14)+8]
 15698  0159D8  0EFA               	movlw	-6
 15699  0159DA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15700  0159E0  0EFB               	movlw	-5
 15701  0159E2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15702                           
 15703                           ;stkvar	_rem @ sp[(-14)+4]
 15704  0159E8  50E1               	movf	fsr1l,w,c
 15705  0159EA  0FF6               	addlw	-10
 15706  0159EC  6ED9               	movwf	fsr2l,c
 15707  0159EE  50E2               	movf	fsr1h,w,c
 15708  0159F0  6EDA               	movwf	fsr2h,c
 15709  0159F2  0EFF               	movlw	255
 15710  0159F4  22DA               	addwfc	fsr2h,f,c
 15711  0159F6  0E38               	movlw	56
 15712  0159F8  D024               	goto	L15
 15713  0159FA                     L14:
 15714  0159FA  22DD               	addwfc	postdec2,f,c
 15715  0159FC  D029               	goto	l11716
 15716  0159FE                     l11708:
 15717                           
 15718                           ;stkvar	_rem @ sp[(-14)+4]
 15719  0159FE  0EF7               	movlw	-9
 15720  015A00  BEE3               	btfsc	plusw1,7,c
 15721  015A02  D022               	goto	l11714
 15722  015A04  0EF7               	movlw	-9
 15723  015A06  50E3               	movf	plusw1,w,c
 15724  015A08  E108               	bnz	u10820
 15725  015A0A  0EF6               	movlw	-10
 15726  015A0C  006F FF8C  F02A    	movff	plusw1,btemp
 15727  015A12  0E64               	movlw	100
 15728  015A14  5E2A               	subwf	btemp^0,f,c
 15729  015A16  A0D8               	btfss	status,0,c
 15730  015A18  D017               	goto	l11714
 15731  015A1A                     u10820:
 15732  015A1A  0E01               	movlw	1
 15733  015A1C  6E34               	movwf	(btemp+10)^0,c
 15734  015A1E  0E00               	movlw	0
 15735  015A20  6E35               	movwf	(btemp+11)^0,c
 15736                           
 15737                           ;stkvar	_centuries @ sp[(-14)+8]
 15738  015A22  0EFA               	movlw	-6
 15739  015A24  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15740  015A2A  0EFB               	movlw	-5
 15741  015A2C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15742                           
 15743                           ;stkvar	_rem @ sp[(-14)+4]
 15744  015A32  50E1               	movf	fsr1l,w,c
 15745  015A34  0FF6               	addlw	-10
 15746  015A36  6ED9               	movwf	fsr2l,c
 15747  015A38  50E2               	movf	fsr1h,w,c
 15748  015A3A  6EDA               	movwf	fsr2h,c
 15749  015A3C  0EFF               	movlw	255
 15750  015A3E  22DA               	addwfc	fsr2h,f,c
 15751  015A40  0E9C               	movlw	156
 15752  015A42                     L15:
 15753  015A42  26DE               	addwf	postinc2,f,c
 15754  015A44  0EFF               	movlw	255
 15755  015A46  D7D9               	goto	L14
 15756  015A48                     l11714:
 15757                           
 15758                           ;stkvar	_centuries @ sp[(-14)+8]
 15759  015A48  0EFA               	movlw	-6
 15760  015A4A  6AE3               	clrf	plusw1,c
 15761  015A4C  0EFB               	movlw	-5
 15762  015A4E  6AE3               	clrf	plusw1,c
 15763  015A50                     l11716:
 15764                           
 15765                           ;stkvar	_rem @ sp[(-14)+4]
 15766  015A50  0EF6               	movlw	-10
 15767  015A52  006F FF8C  F02A    	movff	plusw1,btemp
 15768  015A58  0EF7               	movlw	-9
 15769  015A5A  50E3               	movf	plusw1,w,c
 15770  015A5C  102A               	iorwf	btemp^0,w,c
 15771  015A5E  A4D8               	btfss	status,2,c
 15772  015A60  D00D               	goto	l11722
 15773                           
 15774                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15775  015A62  0EE8               	movlw	-24
 15776  015A64  006F FF8F FFD9     	movff	plusw1,fsr2l
 15777  015A6A  0EE9               	movlw	-23
 15778  015A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15779  015A72  0E00               	movlw	0
 15780  015A74  6EDE               	movwf	postinc2,c
 15781  015A76  0E00               	movlw	0
 15782  015A78  6EDD               	movwf	postdec2,c
 15783  015A7A  D76F               	goto	l11694
 15784  015A7C                     l11722:
 15785                           
 15786                           ;stkvar	_rem @ sp[(-14)+4]
 15787  015A7C  0EF6               	movlw	-10
 15788  015A7E  006F FF8C  F034    	movff	plusw1,btemp+10
 15789  015A84  0EF7               	movlw	-9
 15790  015A86  006F FF8C  F035    	movff	plusw1,btemp+11
 15791  015A8C  90D8               	bcf	status,0,c
 15792  015A8E  3235               	rrcf	(btemp+11)^0,f,c
 15793  015A90  3234               	rrcf	(btemp+10)^0,f,c
 15794  015A92  90D8               	bcf	status,0,c
 15795  015A94  3235               	rrcf	(btemp+11)^0,f,c
 15796  015A96  3234               	rrcf	(btemp+10)^0,f,c
 15797                           
 15798                           ;stkvar	_leaps @ sp[(-14)+10]
 15799  015A98  0EFC               	movlw	-4
 15800  015A9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 15801  015AA0  0EFD               	movlw	-3
 15802  015AA2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 15803  015AA8  0E03               	movlw	3
 15804  015AAA  6E34               	movwf	(btemp+10)^0,c
 15805  015AAC  0E00               	movlw	0
 15806  015AAE  6E35               	movwf	(btemp+11)^0,c
 15807                           
 15808                           ;stkvar	_rem @ sp[(-14)+4]
 15809  015AB0  0EF6               	movlw	-10
 15810  015AB2  006F FF8C  F02A    	movff	plusw1,btemp
 15811  015AB8  5034               	movf	(btemp+10)^0,w,c
 15812  015ABA  162A               	andwf	btemp^0,f,c
 15813  015ABC  0EF6               	movlw	-10
 15814  015ABE  0060  F0AB  FFE3   	movff	btemp,plusw1
 15815  015AC4  0EF7               	movlw	-9
 15816  015AC6  006F FF8C  F02A    	movff	plusw1,btemp
 15817  015ACC  5035               	movf	(btemp+11)^0,w,c
 15818  015ACE  162A               	andwf	btemp^0,f,c
 15819  015AD0  0EF7               	movlw	-9
 15820  015AD2  0060  F0AB  FFE3   	movff	btemp,plusw1
 15821                           
 15822                           ;stkvar	_rem @ sp[(-14)+4]
 15823  015AD8  0EF6               	movlw	-10
 15824  015ADA  006F FF8C  F02A    	movff	plusw1,btemp
 15825  015AE0  0EF7               	movlw	-9
 15826  015AE2  50E3               	movf	plusw1,w,c
 15827  015AE4  102A               	iorwf	btemp^0,w,c
 15828  015AE6  A4D8               	btfss	status,2,c
 15829  015AE8  D002               	goto	u10840
 15830  015AEA  0E01               	movlw	1
 15831  015AEC  D001               	goto	u10850
 15832  015AEE                     u10840:
 15833  015AEE  0E00               	movlw	0
 15834  015AF0                     u10850:
 15835  015AF0  6E34               	movwf	(btemp+10)^0,c
 15836  015AF2  6A35               	clrf	(btemp+11)^0,c
 15837                           
 15838                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15839  015AF4  0EE8               	movlw	-24
 15840  015AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
 15841  015AFC  0EE9               	movlw	-23
 15842  015AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
 15843  015B04  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 15844  015B0A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 15845  015B10                     l11728:
 15846                           
 15847                           ;stkvar	_is_leap @ sp[(-14)+-10]
 15848  015B10  0EE8               	movlw	-24
 15849  015B12  006F FF8F FFD9     	movff	plusw1,fsr2l
 15850  015B18  0EE9               	movlw	-23
 15851  015B1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15852  015B20  006F FF78  F034    	movff	postinc2,btemp+10
 15853  015B26  006F FF74  F035    	movff	postdec2,btemp+11
 15854                           
 15855                           ;stkvar	_centuries @ sp[(-14)+8]
 15856  015B2C  0EFA               	movlw	-6
 15857  015B2E  006F FF8C  F032    	movff	plusw1,btemp+8
 15858  015B34  0EFB               	movlw	-5
 15859  015B36  006F FF8C  F033    	movff	plusw1,btemp+9
 15860  015B3C  0E18               	movlw	24
 15861  015B3E  0232               	mulwf	(btemp+8)^0,c
 15862  015B40  006F FFCC  F030    	movff	prodl,btemp+6
 15863  015B46  006F FFD0  F031    	movff	prodh,btemp+7
 15864  015B4C  0233               	mulwf	(btemp+9)^0,c
 15865  015B4E  50F3               	movf	prodl,w,c
 15866  015B50  2631               	addwf	(btemp+7)^0,f,c
 15867                           
 15868                           ;stkvar	_cycles @ sp[(-14)+12]
 15869  015B52  0EFE               	movlw	-2
 15870  015B54  006F FF8C  F032    	movff	plusw1,btemp+8
 15871  015B5A  0EFF               	movlw	-1
 15872  015B5C  006F FF8C  F033    	movff	plusw1,btemp+9
 15873  015B62  0E61               	movlw	97
 15874  015B64  0232               	mulwf	(btemp+8)^0,c
 15875  015B66  006F FFCC  F02E    	movff	prodl,btemp+4
 15876  015B6C  006F FFD0  F02F    	movff	prodh,btemp+5
 15877  015B72  0233               	mulwf	(btemp+9)^0,c
 15878  015B74  50F3               	movf	prodl,w,c
 15879  015B76  262F               	addwf	(btemp+5)^0,f,c
 15880  015B78  5030               	movf	(btemp+6)^0,w,c
 15881  015B7A  262E               	addwf	(btemp+4)^0,f,c
 15882  015B7C  5031               	movf	(btemp+7)^0,w,c
 15883  015B7E  222F               	addwfc	(btemp+5)^0,f,c
 15884  015B80  5034               	movf	(btemp+10)^0,w,c
 15885  015B82  5E2E               	subwf	(btemp+4)^0,f,c
 15886  015B84  5035               	movf	(btemp+11)^0,w,c
 15887  015B86  5A2F               	subwfb	(btemp+5)^0,f,c
 15888                           
 15889                           ;stkvar	_leaps @ sp[(-14)+10]
 15890  015B88  50E1               	movf	fsr1l,w,c
 15891  015B8A  0FFC               	addlw	-4
 15892  015B8C  6ED9               	movwf	fsr2l,c
 15893  015B8E  50E2               	movf	fsr1h,w,c
 15894  015B90  6EDA               	movwf	fsr2h,c
 15895  015B92  0EFF               	movlw	255
 15896  015B94  22DA               	addwfc	fsr2h,f,c
 15897  015B96  502E               	movf	(btemp+4)^0,w,c
 15898  015B98  26DE               	addwf	postinc2,f,c
 15899  015B9A  502F               	movf	(btemp+5)^0,w,c
 15900  015B9C  22DD               	addwfc	postdec2,f,c
 15901  015B9E  0E80               	movlw	128
 15902  015BA0  6EE6               	movwf	postinc1,c
 15903  015BA2  0E51               	movlw	81
 15904  015BA4  6EE6               	movwf	postinc1,c
 15905  015BA6  0E01               	movlw	1
 15906  015BA8  6EE6               	movwf	postinc1,c
 15907  015BAA  0E00               	movlw	0
 15908  015BAC  6EE6               	movwf	postinc1,c
 15909  015BAE  0E00               	movlw	0
 15910  015BB0  6EE6               	movwf	postinc1,c
 15911  015BB2  0E00               	movlw	0
 15912  015BB4  6EE6               	movwf	postinc1,c
 15913  015BB6  0E00               	movlw	0
 15914  015BB8  6EE6               	movwf	postinc1,c
 15915  015BBA  0E00               	movlw	0
 15916  015BBC  6EE6               	movwf	postinc1,c
 15917                           
 15918                           ;stkvar	_leaps @ sp[(-22)+10]
 15919  015BBE  0EF4               	movlw	-12
 15920  015BC0  006F FF8C  F03A    	movff	plusw1,btemp+16
 15921  015BC6  0EF5               	movlw	-11
 15922  015BC8  006F FF8C  F03B    	movff	plusw1,btemp+17
 15923  015BCE  6A3C               	clrf	(btemp+18)^0,c
 15924  015BD0  BE3B               	btfsc	(btemp+17)^0,7,c
 15925  015BD2  683C               	setf	(btemp+18)^0,c
 15926  015BD4  0060  F0F0  F03D   	movff	btemp+18,btemp+19
 15927  015BDA  0060  F0F0  F03E   	movff	btemp+18,btemp+20
 15928  015BE0  0060  F0F0  F03F   	movff	btemp+18,btemp+21
 15929  015BE6  0060  F0F0  F040   	movff	btemp+18,btemp+22
 15930  015BEC  0060  F0F0  F041   	movff	btemp+18,btemp+23
 15931  015BF2  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 15932  015BF8  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 15933  015BFE  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 15934  015C04  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 15935  015C0A  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 15936  015C10  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 15937  015C16  0060  F103  FFE6   	movff	btemp+22,postinc1
 15938  015C1C  0060  F107  FFE6   	movff	btemp+23,postinc1
 15939  015C22  EC47  F0F8         	call	___omul	;wreg free
 15940  015C26  52E5               	movf	postdec1,f,c
 15941  015C28  006F FF9C  F041    	movff	indf1,btemp+23
 15942  015C2E  52E5               	movf	postdec1,f,c
 15943  015C30  006F FF9C  F040    	movff	indf1,btemp+22
 15944  015C36  52E5               	movf	postdec1,f,c
 15945  015C38  006F FF9C  F03F    	movff	indf1,btemp+21
 15946  015C3E  52E5               	movf	postdec1,f,c
 15947  015C40  006F FF9C  F03E    	movff	indf1,btemp+20
 15948  015C46  52E5               	movf	postdec1,f,c
 15949  015C48  006F FF9C  F03D    	movff	indf1,btemp+19
 15950  015C4E  52E5               	movf	postdec1,f,c
 15951  015C50  006F FF9C  F03C    	movff	indf1,btemp+18
 15952  015C56  52E5               	movf	postdec1,f,c
 15953  015C58  006F FF9C  F03B    	movff	indf1,btemp+17
 15954  015C5E  52E5               	movf	postdec1,f,c
 15955  015C60  006F FF9C  F03A    	movff	indf1,btemp+16
 15956  015C66  0EF8               	movlw	248
 15957  015C68  26E1               	addwf	fsr1l,f,c
 15958  015C6A  0EFF               	movlw	255
 15959  015C6C  22E2               	addwfc	fsr1h,f,c
 15960  015C6E  0E80               	movlw	128
 15961  015C70  6EE6               	movwf	postinc1,c
 15962  015C72  0E33               	movlw	51
 15963  015C74  6EE6               	movwf	postinc1,c
 15964  015C76  0EE1               	movlw	225
 15965  015C78  6EE6               	movwf	postinc1,c
 15966  015C7A  0E01               	movlw	1
 15967  015C7C  6EE6               	movwf	postinc1,c
 15968  015C7E  0E00               	movlw	0
 15969  015C80  6EE6               	movwf	postinc1,c
 15970  015C82  0E00               	movlw	0
 15971  015C84  6EE6               	movwf	postinc1,c
 15972  015C86  0E00               	movlw	0
 15973  015C88  6EE6               	movwf	postinc1,c
 15974  015C8A  0E00               	movlw	0
 15975  015C8C  6EE6               	movwf	postinc1,c
 15976                           
 15977                           ;stkvar	_year @ sp[(-22)+-8]
 15978  015C8E  50E1               	movf	fsr1l,w,c
 15979  015C90  0FE2               	addlw	-30
 15980  015C92  6ED9               	movwf	fsr2l,c
 15981  015C94  50E2               	movf	fsr1h,w,c
 15982  015C96  6EDA               	movwf	fsr2h,c
 15983  015C98  0EFF               	movlw	255
 15984  015C9A  22DA               	addwfc	fsr2h,f,c
 15985  015C9C  006F FF7B FFE6     	movff	postinc2,postinc1
 15986  015CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 15987  015CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 15988  015CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 15989  015CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 15990  015CBA  006F FF7B FFE6     	movff	postinc2,postinc1
 15991  015CC0  006F FF7B FFE6     	movff	postinc2,postinc1
 15992  015CC6  006F FF7B FFE6     	movff	postinc2,postinc1
 15993  015CCC  EC47  F0F8         	call	___omul	;wreg free
 15994  015CD0  52E5               	movf	postdec1,f,c
 15995  015CD2  006F FF9C  F049    	movff	indf1,btemp+31
 15996  015CD8  52E5               	movf	postdec1,f,c
 15997  015CDA  006F FF9C  F048    	movff	indf1,btemp+30
 15998  015CE0  52E5               	movf	postdec1,f,c
 15999  015CE2  006F FF9C  F047    	movff	indf1,btemp+29
 16000  015CE8  52E5               	movf	postdec1,f,c
 16001  015CEA  006F FF9C  F046    	movff	indf1,btemp+28
 16002  015CF0  52E5               	movf	postdec1,f,c
 16003  015CF2  006F FF9C  F045    	movff	indf1,btemp+27
 16004  015CF8  52E5               	movf	postdec1,f,c
 16005  015CFA  006F FF9C  F044    	movff	indf1,btemp+26
 16006  015D00  52E5               	movf	postdec1,f,c
 16007  015D02  006F FF9C  F043    	movff	indf1,btemp+25
 16008  015D08  52E5               	movf	postdec1,f,c
 16009  015D0A  006F FF9C  F042    	movff	indf1,btemp+24
 16010  015D10  0EF8               	movlw	248
 16011  015D12  26E1               	addwf	fsr1l,f,c
 16012  015D14  0EFF               	movlw	255
 16013  015D16  22E2               	addwfc	fsr1h,f,c
 16014  015D18  503A               	movf	(btemp+16)^0,w,c
 16015  015D1A  2442               	addwf	(btemp+24)^0,w,c
 16016  015D1C  6E32               	movwf	(btemp+8)^0,c
 16017  015D1E  503B               	movf	(btemp+17)^0,w,c
 16018  015D20  2043               	addwfc	(btemp+25)^0,w,c
 16019  015D22  6E33               	movwf	(btemp+9)^0,c
 16020  015D24  503C               	movf	(btemp+18)^0,w,c
 16021  015D26  2044               	addwfc	(btemp+26)^0,w,c
 16022  015D28  6E34               	movwf	(btemp+10)^0,c
 16023  015D2A  503D               	movf	(btemp+19)^0,w,c
 16024  015D2C  2045               	addwfc	(btemp+27)^0,w,c
 16025  015D2E  6E35               	movwf	(btemp+11)^0,c
 16026  015D30  503E               	movf	(btemp+20)^0,w,c
 16027  015D32  2046               	addwfc	(btemp+28)^0,w,c
 16028  015D34  6E36               	movwf	(btemp+12)^0,c
 16029  015D36  503F               	movf	(btemp+21)^0,w,c
 16030  015D38  2047               	addwfc	(btemp+29)^0,w,c
 16031  015D3A  6E37               	movwf	(btemp+13)^0,c
 16032  015D3C  5040               	movf	(btemp+22)^0,w,c
 16033  015D3E  2048               	addwfc	(btemp+30)^0,w,c
 16034  015D40  6E38               	movwf	(btemp+14)^0,c
 16035  015D42  5041               	movf	(btemp+23)^0,w,c
 16036  015D44  2049               	addwfc	(btemp+31)^0,w,c
 16037  015D46  6E39               	movwf	(btemp+15)^0,c
 16038  015D48  0E00               	movlw	0
 16039  015D4A  2432               	addwf	(btemp+8)^0,w,c
 16040  015D4C  6E3A               	movwf	(btemp+16)^0,c
 16041  015D4E  0E77               	movlw	119
 16042  015D50  2033               	addwfc	(btemp+9)^0,w,c
 16043  015D52  6E3B               	movwf	(btemp+17)^0,c
 16044  015D54  0E76               	movlw	118
 16045  015D56  2034               	addwfc	(btemp+10)^0,w,c
 16046  015D58  6E3C               	movwf	(btemp+18)^0,c
 16047  015D5A  0E7C               	movlw	124
 16048  015D5C  2035               	addwfc	(btemp+11)^0,w,c
 16049  015D5E  6E3D               	movwf	(btemp+19)^0,c
 16050  015D60  0EFF               	movlw	255
 16051  015D62  2036               	addwfc	(btemp+12)^0,w,c
 16052  015D64  6E3E               	movwf	(btemp+20)^0,c
 16053  015D66  0EFF               	movlw	255
 16054  015D68  2037               	addwfc	(btemp+13)^0,w,c
 16055  015D6A  6E3F               	movwf	(btemp+21)^0,c
 16056  015D6C  0EFF               	movlw	255
 16057  015D6E  2038               	addwfc	(btemp+14)^0,w,c
 16058  015D70  6E40               	movwf	(btemp+22)^0,c
 16059  015D72  0EFF               	movlw	255
 16060  015D74  2039               	addwfc	(btemp+15)^0,w,c
 16061  015D76  6E41               	movwf	(btemp+23)^0,c
 16062  015D78                     L13:
 16063                           
 16064                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 16065  015D78  0EEA               	movlw	-22
 16066  015D7A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 16067  015D80  0EEB               	movlw	-21
 16068  015D82  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 16069  015D88  0EEC               	movlw	-20
 16070  015D8A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 16071  015D90  0EED               	movlw	-19
 16072  015D92  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 16073  015D98  0EEE               	movlw	-18
 16074  015D9A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 16075  015DA0  0EEF               	movlw	-17
 16076  015DA2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 16077  015DA8  0EF0               	movlw	-16
 16078  015DAA  0060  F103  FFE3   	movff	btemp+22,plusw1
 16079  015DB0  0EF1               	movlw	-15
 16080  015DB2  0060  F107  FFE3   	movff	btemp+23,plusw1
 16081                           
 16082                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 16083  015DB8  0EF2               	movlw	242
 16084  015DBA  26E1               	addwf	fsr1l,f,c
 16085  015DBC  0EFF               	movlw	255
 16086  015DBE  22E2               	addwfc	fsr1h,f,c
 16087  015DC0  0012               	return		;funcret
 16088  015DC2                     __end_of___year_to_secs:
 16089                           	opt callstack 0
 16090                           
 16091 ;; *************** function ___month_to_secs *****************
 16092 ;; Defined at:
 16093 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 16094 ;; Parameters:    Size  Location     Type
 16095 ;;  month           2  [STACK] int 
 16096 ;;  is_leap         2  [STACK] int 
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;  t               4  [STACK] long 
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  4  [STACK] long 
 16101 ;; Registers used:
 16102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16112 ;;Total ram usage:        0 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:   15
 16115 ;; This function calls:
 16116 ;;		Nothing
 16117 ;; This function is called by:
 16118 ;;		_rule_to_secs
 16119 ;; This function uses a reentrant model
 16120 ;;
 16121                           
 16122                           	psect	text44
 16123  00029E                     __ptext44:
 16124                           	opt callstack 0
 16125  00029E                     ___month_to_secs:
 16126                           	opt callstack 0
 16127                           
 16128                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16129  00029E  52E6               	movf	postinc1,f,c
 16130  0002A0  52E6               	movf	postinc1,f,c
 16131  0002A2  52E6               	movf	postinc1,f,c
 16132  0002A4  52E6               	movf	postinc1,f,c
 16133                           
 16134                           ;stkvar	_month @ sp[(-4)+-2]
 16135                           
 16136                           ;incstack = 0
 16137  0002A6  0EFA               	movlw	-6
 16138  0002A8  006F FF8C  F034    	movff	plusw1,btemp+10
 16139  0002AE  0EFB               	movlw	-5
 16140  0002B0  006F FF8C  F035    	movff	plusw1,btemp+11
 16141  0002B6  90D8               	bcf	status,0,c
 16142  0002B8  3634               	rlcf	(btemp+10)^0,f,c
 16143  0002BA  3635               	rlcf	(btemp+11)^0,f,c
 16144  0002BC  90D8               	bcf	status,0,c
 16145  0002BE  3634               	rlcf	(btemp+10)^0,f,c
 16146  0002C0  3635               	rlcf	(btemp+11)^0,f,c
 16147  0002C2  0E7B               	movlw	low ___month_to_secs@secs_through_month
 16148  0002C4  2434               	addwf	(btemp+10)^0,w,c
 16149  0002C6  6EF6               	movwf	tblptrl,c
 16150  0002C8  0EF8               	movlw	high ___month_to_secs@secs_through_month
 16151  0002CA  2035               	addwfc	(btemp+11)^0,w,c
 16152  0002CC  6EF7               	movwf	tblptrh,c
 16153  0002CE                     	if	1	;There are 3 active tblptr bytes
 16154  0002CE  6AF8               	clrf	tblptru,c
 16155  0002D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16156  0002D2  22F8               	addwfc	tblptru,f,c
 16157  0002D4                     	endif
 16158  0002D4  0009               	tblrd		*+
 16159  0002D6  006F FFD4  F032    	movff	tablat,btemp+8
 16160  0002DC  0009               	tblrd		*+
 16161  0002DE  006F FFD4  F033    	movff	tablat,btemp+9
 16162  0002E4  0009               	tblrd		*+
 16163  0002E6  006F FFD4  F034    	movff	tablat,btemp+10
 16164  0002EC  0009               	tblrd		*+
 16165  0002EE  006F FFD4  F035    	movff	tablat,btemp+11
 16166                           
 16167                           ;stkvar	_t @ sp[(-4)+0]
 16168  0002F4  0EFC               	movlw	-4
 16169  0002F6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 16170  0002FC  0EFD               	movlw	-3
 16171  0002FE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 16172  000304  0EFE               	movlw	-2
 16173  000306  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16174  00030C  0EFF               	movlw	-1
 16175  00030E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16176                           
 16177                           ;stkvar	_is_leap @ sp[(-4)+-4]
 16178  000314  0EF8               	movlw	-8
 16179  000316  006F FF8C  F02A    	movff	plusw1,btemp
 16180  00031C  0EF9               	movlw	-7
 16181  00031E  50E3               	movf	plusw1,w,c
 16182  000320  102A               	iorwf	btemp^0,w,c
 16183  000322  B4D8               	btfsc	status,2,c
 16184  000324  D01D               	goto	l11742
 16185                           
 16186                           ;stkvar	_month @ sp[(-4)+-2]
 16187  000326  0EFB               	movlw	-5
 16188  000328  BEE3               	btfsc	plusw1,7,c
 16189  00032A  D01A               	goto	l11742
 16190  00032C  0EFB               	movlw	-5
 16191  00032E  50E3               	movf	plusw1,w,c
 16192  000330  E108               	bnz	u10870
 16193  000332  0EFA               	movlw	-6
 16194  000334  006F FF8C  F02A    	movff	plusw1,btemp
 16195  00033A  0E02               	movlw	2
 16196  00033C  5E2A               	subwf	btemp^0,f,c
 16197  00033E  A0D8               	btfss	status,0,c
 16198  000340  D00F               	goto	l11742
 16199  000342                     u10870:
 16200                           
 16201                           ;stkvar	_t @ sp[(-4)+0]
 16202  000342  50E1               	movf	fsr1l,w,c
 16203  000344  0FFC               	addlw	-4
 16204  000346  6ED9               	movwf	fsr2l,c
 16205  000348  50E2               	movf	fsr1h,w,c
 16206  00034A  6EDA               	movwf	fsr2h,c
 16207  00034C  0EFF               	movlw	255
 16208  00034E  22DA               	addwfc	fsr2h,f,c
 16209  000350  0E80               	movlw	128
 16210  000352  26DE               	addwf	postinc2,f,c
 16211  000354  0E51               	movlw	81
 16212  000356  22DE               	addwfc	postinc2,f,c
 16213  000358  0E01               	movlw	1
 16214  00035A  22DE               	addwfc	postinc2,f,c
 16215  00035C  0E00               	movlw	0
 16216  00035E  22DE               	addwfc	postinc2,f,c
 16217  000360                     l11742:
 16218                           
 16219                           ;stkvar	_t @ sp[(-4)+0]
 16220  000360  0EFC               	movlw	-4
 16221  000362  006F FF8C  F02A    	movff	plusw1,btemp
 16222  000368  0EFD               	movlw	-3
 16223  00036A  006F FF8C  F02B    	movff	plusw1,btemp+1
 16224  000370  0EFE               	movlw	-2
 16225  000372  006F FF8C  F02C    	movff	plusw1,btemp+2
 16226  000378  0EFF               	movlw	-1
 16227  00037A  006F FF8C  F02D    	movff	plusw1,btemp+3
 16228                           
 16229                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 16230  000380  0EF8               	movlw	248
 16231  000382  26E1               	addwf	fsr1l,f,c
 16232  000384  0EFF               	movlw	255
 16233  000386  22E2               	addwfc	fsr1h,f,c
 16234  000388  0012               	return		;funcret
 16235  00038A                     __end_of___month_to_secs:
 16236                           	opt callstack 0
 16237                           
 16238 ;; *************** function _do_tzset *****************
 16239 ;; Defined at:
 16240 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;		None
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  s               2  [STACK] PTR const unsigned char 
 16245 ;;		 -> __gmt(4), 
 16246 ;; Return value:  Size  Location     Type
 16247 ;;                  1  [STACK] void 
 16248 ;; Registers used:
 16249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/39
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16259 ;;Total ram usage:        0 bytes
 16260 ;; Hardware stack levels used:    1
 16261 ;; Hardware stack levels required when called:   18
 16262 ;; This function calls:
 16263 ;;		_getname
 16264 ;;		_getoff
 16265 ;;		_getrule
 16266 ;; This function is called by:
 16267 ;;		___secs_to_zone
 16268 ;; This function uses a reentrant model
 16269 ;;
 16270                           
 16271                           	psect	text45
 16272  01BFFA                     __ptext45:
 16273                           	opt callstack 0
 16274  01BFFA                     _do_tzset:
 16275                           	opt callstack 0
 16276                           
 16277                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16278  01BFFA  52E6               	movf	postinc1,f,c
 16279  01BFFC  52E6               	movf	postinc1,f,c
 16280                           
 16281                           ;stkvar	_s @ sp[(-2)+0]
 16282                           
 16283                           ;incstack = 0
 16284  01BFFE  0EF9               	movlw	high ___gmt
 16285  01C000  6E2A               	movwf	btemp^0,c
 16286  01C002  0EFF               	movlw	-1
 16287  01C004  0060  F0AB  FFE3   	movff	btemp,plusw1
 16288  01C00A  0EE7               	movlw	low ___gmt
 16289  01C00C  6E2A               	movwf	btemp^0,c
 16290  01C00E  0EFE               	movlw	-2
 16291  01C010  0060  F0AB  FFE3   	movff	btemp,plusw1
 16292                           
 16293                           ;stkvar	_s @ sp[(-2)+0]
 16294  01C016  0EFE               	movlw	254
 16295  01C018  24E1               	addwf	fsr1l,w,c
 16296  01C01A  6E2A               	movwf	btemp^0,c
 16297  01C01C  0EFF               	movlw	255
 16298  01C01E  20E2               	addwfc	fsr1h,w,c
 16299  01C020  6E2B               	movwf	(btemp+1)^0,c
 16300  01C022  0060  F0AB  FFE6   	movff	btemp,postinc1
 16301  01C028  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16302  01C02E  0EF6               	movlw	low _std_name
 16303  01C030  6EE6               	movwf	postinc1,c
 16304  01C032  0E01               	movlw	high _std_name
 16305  01C034  6EE6               	movwf	postinc1,c
 16306  01C036  ECD1  F0D8         	call	_getname	;wreg free
 16307  01C03A  0EF6               	movlw	low _std_name
 16308  01C03C  0100               	movlb	0	; () banked
 16309  01C03E  6F6C               	movwf	___tzname& (0+255),b
 16310  01C040  0E01               	movlw	high _std_name
 16311  01C042  6F6D               	movwf	(___tzname+1)& (0+255),b
 16312                           
 16313                           ; BSR set to: 0
 16314                           ;stkvar	_s @ sp[(-2)+0]
 16315  01C044  0EFE               	movlw	254
 16316  01C046  24E1               	addwf	fsr1l,w,c
 16317  01C048  6E2A               	movwf	btemp^0,c
 16318  01C04A  0EFF               	movlw	255
 16319  01C04C  20E2               	addwfc	fsr1h,w,c
 16320  01C04E  6E2B               	movwf	(btemp+1)^0,c
 16321  01C050  0060  F0AB  FFE6   	movff	btemp,postinc1
 16322  01C056  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16323  01C05C  EC5C  F0E8         	call	_getoff	;wreg free
 16324  01C060  0060  F0A8  F070   	movff	btemp,___timezone
 16325  01C066  0060  F0AC  F071   	movff	btemp+1,___timezone+1
 16326  01C06C  0100               	movlb	0	; () banked
 16327  01C06E  0E00               	movlw	0
 16328  01C070  BF71               	btfsc	(___timezone+1)& (0+255),7,b
 16329  01C072  0EFF               	movlw	-1
 16330  01C074  6F72               	movwf	(___timezone+2)& (0+255),b
 16331  01C076  6F73               	movwf	(___timezone+3)& (0+255),b
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;stkvar	_s @ sp[(-2)+0]
 16335  01C078  0EFE               	movlw	254
 16336  01C07A  24E1               	addwf	fsr1l,w,c
 16337  01C07C  6E2A               	movwf	btemp^0,c
 16338  01C07E  0EFF               	movlw	255
 16339  01C080  20E2               	addwfc	fsr1h,w,c
 16340  01C082  6E2B               	movwf	(btemp+1)^0,c
 16341  01C084  0060  F0AB  FFE6   	movff	btemp,postinc1
 16342  01C08A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16343  01C090  0EEF               	movlw	low _dst_name
 16344  01C092  6EE6               	movwf	postinc1,c
 16345  01C094  0E01               	movlw	high _dst_name
 16346  01C096  6EE6               	movwf	postinc1,c
 16347  01C098  ECD1  F0D8         	call	_getname	;wreg free
 16348  01C09C  0EEF               	movlw	low _dst_name
 16349  01C09E  0100               	movlb	0	; () banked
 16350  01C0A0  6F6E               	movwf	(___tzname+2)& (0+255),b
 16351  01C0A2  0E01               	movlw	high _dst_name
 16352  01C0A4  6F6F               	movwf	(___tzname+3)& (0+255),b
 16353                           
 16354                           ; BSR set to: 0
 16355  01C0A6  0101               	movlb	1	; () banked
 16356  01C0A8  51EF               	movf	_dst_name& (0+255),w,b
 16357  01C0AA  B4D8               	btfsc	status,2,c
 16358  01C0AC  D070               	goto	l3973
 16359                           
 16360                           ; BSR set to: 1
 16361  01C0AE  0E00               	movlw	0
 16362  01C0B0  0100               	movlb	0	; () banked
 16363  01C0B2  6FB9               	movwf	(___daylight+1)& (0+255),b
 16364  01C0B4  0E01               	movlw	1
 16365  01C0B6  6FB8               	movwf	___daylight& (0+255),b
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;stkvar	_s @ sp[(-2)+0]
 16369  01C0B8  50E1               	movf	fsr1l,w,c
 16370  01C0BA  0FFE               	addlw	-2
 16371  01C0BC  6ED9               	movwf	fsr2l,c
 16372  01C0BE  50E2               	movf	fsr1h,w,c
 16373  01C0C0  6EDA               	movwf	fsr2h,c
 16374  01C0C2  0EFF               	movlw	255
 16375  01C0C4  22DA               	addwfc	fsr2h,f,c
 16376  01C0C6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16377  01C0CC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16378  01C0D2                     	if	0	;tblptru may be non-zero
 16379  01C0D2                     	endif
 16380  01C0D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16381  01C0D2  0E00               	movlw	low (__mediumconst shr (0+16))
 16382  01C0D4  6EF8               	movwf	tblptru,c
 16383  01C0D6                     	endif
 16384  01C0D6  0008               	tblrd		*
 16385  01C0D8  50F5               	movf	tablat,w,c
 16386  01C0DA  0A2B               	xorlw	43
 16387  01C0DC  B4D8               	btfsc	status,2,c
 16388  01C0DE  D035               	goto	u16050
 16389                           
 16390                           ; BSR set to: 0
 16391                           ;stkvar	_s @ sp[(-2)+0]
 16392  01C0E0  50E1               	movf	fsr1l,w,c
 16393  01C0E2  0FFE               	addlw	-2
 16394  01C0E4  6ED9               	movwf	fsr2l,c
 16395  01C0E6  50E2               	movf	fsr1h,w,c
 16396  01C0E8  6EDA               	movwf	fsr2h,c
 16397  01C0EA  0EFF               	movlw	255
 16398  01C0EC  22DA               	addwfc	fsr2h,f,c
 16399  01C0EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 16400  01C0F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 16401  01C0FA                     	if	0	;tblptru may be non-zero
 16402  01C0FA                     	endif
 16403  01C0FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16404  01C0FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16405  01C0FC  6EF8               	movwf	tblptru,c
 16406  01C0FE                     	endif
 16407  01C0FE  0008               	tblrd		*
 16408  01C100  50F5               	movf	tablat,w,c
 16409  01C102  0A2D               	xorlw	45
 16410  01C104  B4D8               	btfsc	status,2,c
 16411  01C106  D021               	goto	u16050
 16412                           
 16413                           ; BSR set to: 0
 16414  01C108  0ED0               	movlw	208
 16415  01C10A  6E34               	movwf	(btemp+10)^0,c
 16416  01C10C  0EFF               	movlw	255
 16417  01C10E  6E35               	movwf	(btemp+11)^0,c
 16418                           
 16419                           ;stkvar	_s @ sp[(-2)+0]
 16420  01C110  50E1               	movf	fsr1l,w,c
 16421  01C112  0FFE               	addlw	-2
 16422  01C114  6ED9               	movwf	fsr2l,c
 16423  01C116  50E2               	movf	fsr1h,w,c
 16424  01C118  6EDA               	movwf	fsr2h,c
 16425  01C11A  0EFF               	movlw	255
 16426  01C11C  22DA               	addwfc	fsr2h,f,c
 16427  01C11E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16428  01C124  006F FF77 FFF7     	movff	postdec2,tblptrh
 16429  01C12A                     	if	0	;tblptru may be non-zero
 16430  01C12A                     	endif
 16431  01C12A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16432  01C12A  0E00               	movlw	low (__mediumconst shr (0+16))
 16433  01C12C  6EF8               	movwf	tblptru,c
 16434  01C12E                     	endif
 16435  01C12E  0008               	tblrd		*
 16436  01C130  50F5               	movf	tablat,w,c
 16437  01C132  6E32               	movwf	(btemp+8)^0,c
 16438  01C134  6A33               	clrf	(btemp+9)^0,c
 16439  01C136  5034               	movf	(btemp+10)^0,w,c
 16440  01C138  2632               	addwf	(btemp+8)^0,f,c
 16441  01C13A  5035               	movf	(btemp+11)^0,w,c
 16442  01C13C  2233               	addwfc	(btemp+9)^0,f,c
 16443  01C13E  5033               	movf	(btemp+9)^0,w,c
 16444  01C140  E119               	bnz	l16438
 16445  01C142  0E0A               	movlw	10
 16446  01C144  5C32               	subwf	(btemp+8)^0,w,c
 16447  01C146  B0D8               	btfsc	status,0,c
 16448  01C148  D015               	goto	l16438
 16449  01C14A                     u16050:
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;stkvar	_s @ sp[(-2)+0]
 16453  01C14A  0EFE               	movlw	254
 16454  01C14C  24E1               	addwf	fsr1l,w,c
 16455  01C14E  6E2A               	movwf	btemp^0,c
 16456  01C150  0EFF               	movlw	255
 16457  01C152  20E2               	addwfc	fsr1h,w,c
 16458  01C154  6E2B               	movwf	(btemp+1)^0,c
 16459  01C156  0060  F0AB  FFE6   	movff	btemp,postinc1
 16460  01C15C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16461  01C162  EC5C  F0E8         	call	_getoff	;wreg free
 16462  01C166  0060  F0A8  F0B6   	movff	btemp,_dst_off
 16463  01C16C  0060  F0AC  F0B7   	movff	btemp+1,_dst_off+1
 16464  01C172  D012               	goto	l16440
 16465  01C174                     l16438:
 16466                           
 16467                           ; BSR set to: 0
 16468  01C174  0060  F1C0  F034   	movff	___timezone,btemp+10
 16469  01C17A  0060  F1C4  F035   	movff	___timezone+1,btemp+11
 16470  01C180  0EF0               	movlw	240
 16471  01C182  2434               	addwf	(btemp+10)^0,w,c
 16472  01C184  6FB6               	movwf	_dst_off& (0+255),b
 16473  01C186  0EF1               	movlw	241
 16474  01C188  2035               	addwfc	(btemp+11)^0,w,c
 16475  01C18A  6FB7               	movwf	(_dst_off+1)& (0+255),b
 16476  01C18C  D005               	goto	l16440
 16477  01C18E                     l3973:
 16478                           
 16479                           ; BSR set to: 1
 16480  01C18E  0100               	movlb	0	; () banked
 16481  01C190  6BB8               	clrf	___daylight& (0+255),b
 16482  01C192  6BB9               	clrf	(___daylight+1)& (0+255),b
 16483  01C194  6BB6               	clrf	_dst_off& (0+255),b
 16484  01C196  6BB7               	clrf	(_dst_off+1)& (0+255),b
 16485  01C198                     l16440:
 16486                           
 16487                           ;stkvar	_s @ sp[(-2)+0]
 16488  01C198  50E1               	movf	fsr1l,w,c
 16489  01C19A  0FFE               	addlw	-2
 16490  01C19C  6ED9               	movwf	fsr2l,c
 16491  01C19E  50E2               	movf	fsr1h,w,c
 16492  01C1A0  6EDA               	movwf	fsr2h,c
 16493  01C1A2  0EFF               	movlw	255
 16494  01C1A4  22DA               	addwfc	fsr2h,f,c
 16495  01C1A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 16496  01C1AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 16497  01C1B2                     	if	0	;tblptru may be non-zero
 16498  01C1B2                     	endif
 16499  01C1B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16500  01C1B2  0E00               	movlw	low (__mediumconst shr (0+16))
 16501  01C1B4  6EF8               	movwf	tblptru,c
 16502  01C1B6                     	endif
 16503  01C1B6  0008               	tblrd		*
 16504  01C1B8  50F5               	movf	tablat,w,c
 16505  01C1BA  0A2C               	xorlw	44
 16506  01C1BC  A4D8               	btfss	status,2,c
 16507  01C1BE  D023               	goto	l16446
 16508                           
 16509                           ;stkvar	_s @ sp[(-2)+0]
 16510  01C1C0  0EFE               	movlw	-2
 16511  01C1C2  50E3               	movf	plusw1,w,c
 16512  01C1C4  0F01               	addlw	1
 16513  01C1C6  6E2A               	movwf	btemp^0,c
 16514  01C1C8  0EFE               	movlw	-2
 16515  01C1CA  0060  F0AB  FFE3   	movff	btemp,plusw1
 16516  01C1D0  6A2A               	clrf	btemp^0,c
 16517  01C1D2  0EFF               	movlw	-1
 16518  01C1D4  50E3               	movf	plusw1,w,c
 16519  01C1D6  202A               	addwfc	btemp^0,w,c
 16520  01C1D8  6E2A               	movwf	btemp^0,c
 16521  01C1DA  0EFF               	movlw	-1
 16522  01C1DC  0060  F0AB  FFE3   	movff	btemp,plusw1
 16523  01C1E2  0EE5               	movlw	low _r0
 16524  01C1E4  6EE6               	movwf	postinc1,c
 16525  01C1E6  0E01               	movlw	high _r0
 16526  01C1E8  6EE6               	movwf	postinc1,c
 16527                           
 16528                           ;stkvar	_s @ sp[(-4)+0]
 16529  01C1EA  0EFC               	movlw	252
 16530  01C1EC  24E1               	addwf	fsr1l,w,c
 16531  01C1EE  6E2A               	movwf	btemp^0,c
 16532  01C1F0  0EFF               	movlw	255
 16533  01C1F2  20E2               	addwfc	fsr1h,w,c
 16534  01C1F4  6E2B               	movwf	(btemp+1)^0,c
 16535  01C1F6  0060  F0AB  FFE6   	movff	btemp,postinc1
 16536  01C1FC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16537  01C202  EC3D  F0E1         	call	_getrule	;wreg free
 16538  01C206                     l16446:
 16539                           
 16540                           ;stkvar	_s @ sp[(-2)+0]
 16541  01C206  50E1               	movf	fsr1l,w,c
 16542  01C208  0FFE               	addlw	-2
 16543  01C20A  6ED9               	movwf	fsr2l,c
 16544  01C20C  50E2               	movf	fsr1h,w,c
 16545  01C20E  6EDA               	movwf	fsr2h,c
 16546  01C210  0EFF               	movlw	255
 16547  01C212  22DA               	addwfc	fsr2h,f,c
 16548  01C214  006F FF7B FFF6     	movff	postinc2,tblptrl
 16549  01C21A  006F FF77 FFF7     	movff	postdec2,tblptrh
 16550  01C220                     	if	0	;tblptru may be non-zero
 16551  01C220                     	endif
 16552  01C220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16553  01C220  0E00               	movlw	low (__mediumconst shr (0+16))
 16554  01C222  6EF8               	movwf	tblptru,c
 16555  01C224                     	endif
 16556  01C224  0008               	tblrd		*
 16557  01C226  50F5               	movf	tablat,w,c
 16558  01C228  0A2C               	xorlw	44
 16559  01C22A  A4D8               	btfss	status,2,c
 16560  01C22C  D023               	goto	l3981
 16561                           
 16562                           ;stkvar	_s @ sp[(-2)+0]
 16563  01C22E  0EFE               	movlw	-2
 16564  01C230  50E3               	movf	plusw1,w,c
 16565  01C232  0F01               	addlw	1
 16566  01C234  6E2A               	movwf	btemp^0,c
 16567  01C236  0EFE               	movlw	-2
 16568  01C238  0060  F0AB  FFE3   	movff	btemp,plusw1
 16569  01C23E  6A2A               	clrf	btemp^0,c
 16570  01C240  0EFF               	movlw	-1
 16571  01C242  50E3               	movf	plusw1,w,c
 16572  01C244  202A               	addwfc	btemp^0,w,c
 16573  01C246  6E2A               	movwf	btemp^0,c
 16574  01C248  0EFF               	movlw	-1
 16575  01C24A  0060  F0AB  FFE3   	movff	btemp,plusw1
 16576  01C250  0EDB               	movlw	low _r1
 16577  01C252  6EE6               	movwf	postinc1,c
 16578  01C254  0E01               	movlw	high _r1
 16579  01C256  6EE6               	movwf	postinc1,c
 16580                           
 16581                           ;stkvar	_s @ sp[(-4)+0]
 16582  01C258  0EFC               	movlw	252
 16583  01C25A  24E1               	addwf	fsr1l,w,c
 16584  01C25C  6E2A               	movwf	btemp^0,c
 16585  01C25E  0EFF               	movlw	255
 16586  01C260  20E2               	addwfc	fsr1h,w,c
 16587  01C262  6E2B               	movwf	(btemp+1)^0,c
 16588  01C264  0060  F0AB  FFE6   	movff	btemp,postinc1
 16589  01C26A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 16590  01C270  EC3D  F0E1         	call	_getrule	;wreg free
 16591  01C274                     l3981:
 16592                           
 16593                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 16594  01C274  52E5               	movf	postdec1,f,c
 16595  01C276  52E5               	movf	postdec1,f,c
 16596  01C278  0012               	return		;funcret
 16597  01C27A                     __end_of_do_tzset:
 16598                           	opt callstack 0
 16599                           
 16600 ;; *************** function _getrule *****************
 16601 ;; Defined at:
 16602 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;  p               2  [STACK] PTR PTR const unsigned c
 16605 ;;		 -> s(2), 
 16606 ;;  rule            2  [STACK] PTR int 
 16607 ;;		 -> r1(10), r0(10), 
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;  r               2  [STACK] int 
 16610 ;; Return value:  Size  Location     Type
 16611 ;;                  1  [STACK] void 
 16612 ;; Registers used:
 16613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/0
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;Total ram usage:        0 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; Hardware stack levels required when called:   17
 16626 ;; This function calls:
 16627 ;;		_getint
 16628 ;;		_getoff
 16629 ;; This function is called by:
 16630 ;;		_do_tzset
 16631 ;; This function uses a reentrant model
 16632 ;;
 16633                           
 16634                           	psect	text46
 16635  01C27A                     __ptext46:
 16636                           	opt callstack 0
 16637  01C27A                     _getrule:
 16638                           	opt callstack 0
 16639                           
 16640                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16641  01C27A  52E6               	movf	postinc1,f,c
 16642  01C27C  52E6               	movf	postinc1,f,c
 16643                           
 16644                           ;stkvar	_p @ sp[(-2)+-2]
 16645                           
 16646                           ;incstack = 0
 16647  01C27E  0EFC               	movlw	-4
 16648  01C280  006F FF8F FFD9     	movff	plusw1,fsr2l
 16649  01C286  0EFD               	movlw	-3
 16650  01C288  006F FF8F FFDA     	movff	plusw1,fsr2h
 16651  01C28E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16652  01C294  006F FF77 FFF7     	movff	postdec2,tblptrh
 16653  01C29A                     	if	0	;tblptru may be non-zero
 16654  01C29A                     	endif
 16655  01C29A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16656  01C29A  0E00               	movlw	low (__mediumconst shr (0+16))
 16657  01C29C  6EF8               	movwf	tblptru,c
 16658  01C29E                     	endif
 16659  01C29E  0008               	tblrd		*
 16660  01C2A0  50F5               	movf	tablat,w,c
 16661  01C2A2  6E34               	movwf	(btemp+10)^0,c
 16662  01C2A4  6A35               	clrf	(btemp+11)^0,c
 16663                           
 16664                           ;stkvar	_rule @ sp[(-2)+-4]
 16665  01C2A6  0EFA               	movlw	-6
 16666  01C2A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 16667  01C2AE  0EFB               	movlw	-5
 16668  01C2B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 16669  01C2B6  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 16670  01C2BC  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 16671  01C2C2  006F FF78  F034    	movff	postinc2,btemp+10
 16672  01C2C8  006F FF74  F035    	movff	postdec2,btemp+11
 16673                           
 16674                           ;stkvar	_r @ sp[(-2)+0]
 16675  01C2CE  0EFE               	movlw	-2
 16676  01C2D0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16677  01C2D6  0EFF               	movlw	-1
 16678  01C2D8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16679                           
 16680                           ;stkvar	_r @ sp[(-2)+0]
 16681  01C2DE  0EFE               	movlw	-2
 16682  01C2E0  006F FF8C  F02A    	movff	plusw1,btemp
 16683  01C2E6  0E4D               	movlw	77
 16684  01C2E8  182A               	xorwf	btemp^0,w,c
 16685  01C2EA  E104               	bnz	u15630
 16686  01C2EC  0EFF               	movlw	-1
 16687  01C2EE  50E3               	movf	plusw1,w,c
 16688  01C2F0  B4D8               	btfsc	status,2,c
 16689  01C2F2  D036               	goto	l16136
 16690  01C2F4                     u15630:
 16691                           
 16692                           ;stkvar	_r @ sp[(-2)+0]
 16693  01C2F4  0EFE               	movlw	-2
 16694  01C2F6  006F FF8C  F02A    	movff	plusw1,btemp
 16695  01C2FC  0E4A               	movlw	74
 16696  01C2FE  182A               	xorwf	btemp^0,w,c
 16697  01C300  E110               	bnz	l16132
 16698  01C302  0EFF               	movlw	-1
 16699  01C304  50E3               	movf	plusw1,w,c
 16700  01C306  A4D8               	btfss	status,2,c
 16701  01C308  D00C               	goto	l16132
 16702                           
 16703                           ;stkvar	_p @ sp[(-2)+-2]
 16704  01C30A  0EFC               	movlw	-4
 16705  01C30C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16706  01C312  0EFD               	movlw	-3
 16707  01C314  006F FF8F FFDA     	movff	plusw1,fsr2h
 16708  01C31A  2ADE               	incf	postinc2,f,c
 16709  01C31C  0E00               	movlw	0
 16710  01C31E  22DD               	addwfc	postdec2,f,c
 16711  01C320  D00C               	goto	l16134
 16712  01C322                     l16132:
 16713                           
 16714                           ;stkvar	_rule @ sp[(-2)+-4]
 16715  01C322  0EFA               	movlw	-6
 16716  01C324  006F FF8F FFD9     	movff	plusw1,fsr2l
 16717  01C32A  0EFB               	movlw	-5
 16718  01C32C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16719  01C332  0E00               	movlw	0
 16720  01C334  6EDE               	movwf	postinc2,c
 16721  01C336  0E00               	movlw	0
 16722  01C338  6EDD               	movwf	postdec2,c
 16723  01C33A                     l16134:
 16724                           
 16725                           ;stkvar	_p @ sp[(-2)+-2]
 16726  01C33A  0EFC               	movlw	-4
 16727  01C33C  006F FF8F FFE6     	movff	plusw1,postinc1
 16728  01C342  006F FF8F FFE6     	movff	plusw1,postinc1
 16729  01C348  ECD6  F000         	call	_getint	;wreg free
 16730                           
 16731                           ;stkvar	_rule @ sp[(-2)+-4]
 16732  01C34C  0EFA               	movlw	-6
 16733  01C34E  006F FF8C  F034    	movff	plusw1,btemp+10
 16734  01C354  0EFB               	movlw	-5
 16735  01C356  006F FF8C  F035    	movff	plusw1,btemp+11
 16736  01C35C  0E02               	movlw	2
 16737  01C35E  D06D               	goto	L16
 16738  01C360                     l16136:
 16739                           
 16740                           ;stkvar	_p @ sp[(-2)+-2]
 16741  01C360  0EFC               	movlw	-4
 16742  01C362  006F FF8F FFD9     	movff	plusw1,fsr2l
 16743  01C368  0EFD               	movlw	-3
 16744  01C36A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16745  01C370  2ADE               	incf	postinc2,f,c
 16746  01C372  0E00               	movlw	0
 16747  01C374  22DD               	addwfc	postdec2,f,c
 16748                           
 16749                           ;stkvar	_p @ sp[(-2)+-2]
 16750  01C376  0EFC               	movlw	-4
 16751  01C378  006F FF8F FFE6     	movff	plusw1,postinc1
 16752  01C37E  006F FF8F FFE6     	movff	plusw1,postinc1
 16753  01C384  ECD6  F000         	call	_getint	;wreg free
 16754                           
 16755                           ;stkvar	_rule @ sp[(-2)+-4]
 16756  01C388  0EFA               	movlw	-6
 16757  01C38A  006F FF8C  F034    	movff	plusw1,btemp+10
 16758  01C390  0EFB               	movlw	-5
 16759  01C392  006F FF8C  F035    	movff	plusw1,btemp+11
 16760  01C398  0E02               	movlw	2
 16761  01C39A  2434               	addwf	(btemp+10)^0,w,c
 16762  01C39C  6ED9               	movwf	fsr2l,c
 16763  01C39E  0E00               	movlw	0
 16764  01C3A0  2035               	addwfc	(btemp+11)^0,w,c
 16765  01C3A2  6EDA               	movwf	fsr2h,c
 16766  01C3A4  0060  F0AB  FFDE   	movff	btemp,postinc2
 16767  01C3AA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16768                           
 16769                           ;stkvar	_p @ sp[(-2)+-2]
 16770  01C3B0  0EFC               	movlw	-4
 16771  01C3B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16772  01C3B8  0EFD               	movlw	-3
 16773  01C3BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16774  01C3C0  2ADE               	incf	postinc2,f,c
 16775  01C3C2  0E00               	movlw	0
 16776  01C3C4  22DD               	addwfc	postdec2,f,c
 16777                           
 16778                           ;stkvar	_p @ sp[(-2)+-2]
 16779  01C3C6  0EFC               	movlw	-4
 16780  01C3C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16781  01C3CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  01C3D4  ECD6  F000         	call	_getint	;wreg free
 16783                           
 16784                           ;stkvar	_rule @ sp[(-2)+-4]
 16785  01C3D8  0EFA               	movlw	-6
 16786  01C3DA  006F FF8C  F034    	movff	plusw1,btemp+10
 16787  01C3E0  0EFB               	movlw	-5
 16788  01C3E2  006F FF8C  F035    	movff	plusw1,btemp+11
 16789  01C3E8  0E04               	movlw	4
 16790  01C3EA  2434               	addwf	(btemp+10)^0,w,c
 16791  01C3EC  6ED9               	movwf	fsr2l,c
 16792  01C3EE  0E00               	movlw	0
 16793  01C3F0  2035               	addwfc	(btemp+11)^0,w,c
 16794  01C3F2  6EDA               	movwf	fsr2h,c
 16795  01C3F4  0060  F0AB  FFDE   	movff	btemp,postinc2
 16796  01C3FA  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16797                           
 16798                           ;stkvar	_p @ sp[(-2)+-2]
 16799  01C400  0EFC               	movlw	-4
 16800  01C402  006F FF8F FFD9     	movff	plusw1,fsr2l
 16801  01C408  0EFD               	movlw	-3
 16802  01C40A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16803  01C410  2ADE               	incf	postinc2,f,c
 16804  01C412  0E00               	movlw	0
 16805  01C414  22DD               	addwfc	postdec2,f,c
 16806                           
 16807                           ;stkvar	_p @ sp[(-2)+-2]
 16808  01C416  0EFC               	movlw	-4
 16809  01C418  006F FF8F FFE6     	movff	plusw1,postinc1
 16810  01C41E  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  01C424  ECD6  F000         	call	_getint	;wreg free
 16812                           
 16813                           ;stkvar	_rule @ sp[(-2)+-4]
 16814  01C428  0EFA               	movlw	-6
 16815  01C42A  006F FF8C  F034    	movff	plusw1,btemp+10
 16816  01C430  0EFB               	movlw	-5
 16817  01C432  006F FF8C  F035    	movff	plusw1,btemp+11
 16818  01C438  0E06               	movlw	6
 16819  01C43A                     L16:
 16820  01C43A  2434               	addwf	(btemp+10)^0,w,c
 16821  01C43C  6ED9               	movwf	fsr2l,c
 16822  01C43E  0E00               	movlw	0
 16823  01C440  2035               	addwfc	(btemp+11)^0,w,c
 16824  01C442  6EDA               	movwf	fsr2h,c
 16825  01C444  0060  F0AB  FFDE   	movff	btemp,postinc2
 16826  01C44A  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16827                           
 16828                           ;stkvar	_p @ sp[(-2)+-2]
 16829  01C450  0EFC               	movlw	-4
 16830  01C452  006F FF8F FFD9     	movff	plusw1,fsr2l
 16831  01C458  0EFD               	movlw	-3
 16832  01C45A  006F FF8F FFDA     	movff	plusw1,fsr2h
 16833  01C460  006F FF7B FFF6     	movff	postinc2,tblptrl
 16834  01C466  006F FF77 FFF7     	movff	postdec2,tblptrh
 16835  01C46C                     	if	0	;tblptru may be non-zero
 16836  01C46C                     	endif
 16837  01C46C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16838  01C46C  0E00               	movlw	low (__mediumconst shr (0+16))
 16839  01C46E  6EF8               	movwf	tblptru,c
 16840  01C470                     	endif
 16841  01C470  0008               	tblrd		*
 16842  01C472  50F5               	movf	tablat,w,c
 16843  01C474  0A2F               	xorlw	47
 16844  01C476  A4D8               	btfss	status,2,c
 16845  01C478  D029               	goto	l16152
 16846                           
 16847                           ;stkvar	_p @ sp[(-2)+-2]
 16848  01C47A  0EFC               	movlw	-4
 16849  01C47C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16850  01C482  0EFD               	movlw	-3
 16851  01C484  006F FF8F FFDA     	movff	plusw1,fsr2h
 16852  01C48A  2ADE               	incf	postinc2,f,c
 16853  01C48C  0E00               	movlw	0
 16854  01C48E  22DD               	addwfc	postdec2,f,c
 16855                           
 16856                           ;stkvar	_p @ sp[(-2)+-2]
 16857  01C490  0EFC               	movlw	-4
 16858  01C492  006F FF8F FFE6     	movff	plusw1,postinc1
 16859  01C498  006F FF8F FFE6     	movff	plusw1,postinc1
 16860  01C49E  EC5C  F0E8         	call	_getoff	;wreg free
 16861                           
 16862                           ;stkvar	_rule @ sp[(-2)+-4]
 16863  01C4A2  0EFA               	movlw	-6
 16864  01C4A4  006F FF8C  F034    	movff	plusw1,btemp+10
 16865  01C4AA  0EFB               	movlw	-5
 16866  01C4AC  006F FF8C  F035    	movff	plusw1,btemp+11
 16867  01C4B2  0E08               	movlw	8
 16868  01C4B4  2434               	addwf	(btemp+10)^0,w,c
 16869  01C4B6  6ED9               	movwf	fsr2l,c
 16870  01C4B8  0E00               	movlw	0
 16871  01C4BA  2035               	addwfc	(btemp+11)^0,w,c
 16872  01C4BC  6EDA               	movwf	fsr2h,c
 16873  01C4BE  0060  F0AB  FFDE   	movff	btemp,postinc2
 16874  01C4C4  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 16875  01C4CA  D012               	goto	l3946
 16876  01C4CC                     l16152:
 16877                           
 16878                           ;stkvar	_rule @ sp[(-2)+-4]
 16879  01C4CC  0EFA               	movlw	-6
 16880  01C4CE  006F FF8C  F034    	movff	plusw1,btemp+10
 16881  01C4D4  0EFB               	movlw	-5
 16882  01C4D6  006F FF8C  F035    	movff	plusw1,btemp+11
 16883  01C4DC  0E08               	movlw	8
 16884  01C4DE  2434               	addwf	(btemp+10)^0,w,c
 16885  01C4E0  6ED9               	movwf	fsr2l,c
 16886  01C4E2  0E00               	movlw	0
 16887  01C4E4  2035               	addwfc	(btemp+11)^0,w,c
 16888  01C4E6  6EDA               	movwf	fsr2h,c
 16889  01C4E8  0E20               	movlw	32
 16890  01C4EA  6EDE               	movwf	postinc2,c
 16891  01C4EC  0E1C               	movlw	28
 16892  01C4EE  6EDD               	movwf	postdec2,c
 16893  01C4F0                     l3946:
 16894                           
 16895                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16896  01C4F0  0EFA               	movlw	250
 16897  01C4F2  26E1               	addwf	fsr1l,f,c
 16898  01C4F4  0EFF               	movlw	255
 16899  01C4F6  22E2               	addwfc	fsr1h,f,c
 16900  01C4F8  0012               	return		;funcret
 16901  01C4FA                     __end_of_getrule:
 16902                           	opt callstack 0
 16903                           
 16904 ;; *************** function _getoff *****************
 16905 ;; Defined at:
 16906 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 16907 ;; Parameters:    Size  Location     Type
 16908 ;;  p               2  [STACK] PTR PTR const unsigned c
 16909 ;;		 -> s(2), 
 16910 ;; Auto vars:     Size  Location     Type
 16911 ;;  off             2  [STACK] int 
 16912 ;;  neg             2  [STACK] int 
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  2  [STACK] int 
 16915 ;; Registers used:
 16916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16926 ;;Total ram usage:        0 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:   16
 16929 ;; This function calls:
 16930 ;;		_getint
 16931 ;; This function is called by:
 16932 ;;		_getrule
 16933 ;;		_do_tzset
 16934 ;; This function uses a reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text47
 16938  01D0B8                     __ptext47:
 16939                           	opt callstack 0
 16940  01D0B8                     _getoff:
 16941                           	opt callstack 0
 16942                           
 16943                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16944  01D0B8  52E6               	movf	postinc1,f,c
 16945  01D0BA  52E6               	movf	postinc1,f,c
 16946  01D0BC  52E6               	movf	postinc1,f,c
 16947  01D0BE  52E6               	movf	postinc1,f,c
 16948                           
 16949                           ;stkvar	_neg @ sp[(-4)+2]
 16950                           
 16951                           ;incstack = 0
 16952  01D0C0  0EFE               	movlw	-2
 16953  01D0C2  6AE3               	clrf	plusw1,c
 16954  01D0C4  0EFF               	movlw	-1
 16955  01D0C6  6AE3               	clrf	plusw1,c
 16956                           
 16957                           ;stkvar	_p @ sp[(-4)+-2]
 16958  01D0C8  0EFA               	movlw	-6
 16959  01D0CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 16960  01D0D0  0EFB               	movlw	-5
 16961  01D0D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 16962  01D0D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 16963  01D0DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 16964  01D0E4                     	if	0	;tblptru may be non-zero
 16965  01D0E4                     	endif
 16966  01D0E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16967  01D0E4  0E00               	movlw	low (__mediumconst shr (0+16))
 16968  01D0E6  6EF8               	movwf	tblptru,c
 16969  01D0E8                     	endif
 16970  01D0E8  0008               	tblrd		*
 16971  01D0EA  50F5               	movf	tablat,w,c
 16972  01D0EC  0A2D               	xorlw	45
 16973  01D0EE  A4D8               	btfss	status,2,c
 16974  01D0F0  D018               	goto	l10878
 16975                           
 16976                           ;stkvar	_p @ sp[(-4)+-2]
 16977  01D0F2  0EFA               	movlw	-6
 16978  01D0F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 16979  01D0FA  0EFB               	movlw	-5
 16980  01D0FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 16981  01D102  2ADE               	incf	postinc2,f,c
 16982  01D104  0E00               	movlw	0
 16983  01D106  22DD               	addwfc	postdec2,f,c
 16984  01D108  0E01               	movlw	1
 16985  01D10A  6E34               	movwf	(btemp+10)^0,c
 16986  01D10C  0E00               	movlw	0
 16987  01D10E  6E35               	movwf	(btemp+11)^0,c
 16988                           
 16989                           ;stkvar	_neg @ sp[(-4)+2]
 16990  01D110  0EFE               	movlw	-2
 16991  01D112  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 16992  01D118  0EFF               	movlw	-1
 16993  01D11A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 16994  01D120  D020               	goto	l10882
 16995  01D122                     l10878:
 16996                           
 16997                           ;stkvar	_p @ sp[(-4)+-2]
 16998  01D122  0EFA               	movlw	-6
 16999  01D124  006F FF8F FFD9     	movff	plusw1,fsr2l
 17000  01D12A  0EFB               	movlw	-5
 17001  01D12C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17002  01D132  006F FF7B FFF6     	movff	postinc2,tblptrl
 17003  01D138  006F FF77 FFF7     	movff	postdec2,tblptrh
 17004  01D13E                     	if	0	;tblptru may be non-zero
 17005  01D13E                     	endif
 17006  01D13E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17007  01D13E  0E00               	movlw	low (__mediumconst shr (0+16))
 17008  01D140  6EF8               	movwf	tblptru,c
 17009  01D142                     	endif
 17010  01D142  0008               	tblrd		*
 17011  01D144  50F5               	movf	tablat,w,c
 17012  01D146  0A2B               	xorlw	43
 17013  01D148  A4D8               	btfss	status,2,c
 17014  01D14A  D00B               	goto	l10882
 17015                           
 17016                           ;stkvar	_p @ sp[(-4)+-2]
 17017  01D14C  0EFA               	movlw	-6
 17018  01D14E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17019  01D154  0EFB               	movlw	-5
 17020  01D156  006F FF8F FFDA     	movff	plusw1,fsr2h
 17021  01D15C  2ADE               	incf	postinc2,f,c
 17022  01D15E  0E00               	movlw	0
 17023  01D160  22DD               	addwfc	postdec2,f,c
 17024  01D162                     l10882:
 17025                           
 17026                           ;stkvar	_p @ sp[(-4)+-2]
 17027  01D162  0EFA               	movlw	-6
 17028  01D164  006F FF8F FFE6     	movff	plusw1,postinc1
 17029  01D16A  006F FF8F FFE6     	movff	plusw1,postinc1
 17030  01D170  ECD6  F000         	call	_getint	;wreg free
 17031  01D174  0060  F0A8  F034   	movff	btemp,btemp+10
 17032  01D17A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17033  01D180  0E10               	movlw	16
 17034  01D182  0234               	mulwf	(btemp+10)^0,c
 17035  01D184  006F FFCC  F032    	movff	prodl,btemp+8
 17036  01D18A  006F FFD0  F033    	movff	prodh,btemp+9
 17037  01D190  0235               	mulwf	(btemp+11)^0,c
 17038  01D192  50F3               	movf	prodl,w,c
 17039  01D194  2633               	addwf	(btemp+9)^0,f,c
 17040  01D196  0E0E               	movlw	14
 17041  01D198  0234               	mulwf	(btemp+10)^0,c
 17042  01D19A  50F3               	movf	prodl,w,c
 17043  01D19C  2633               	addwf	(btemp+9)^0,f,c
 17044                           
 17045                           ;stkvar	_off @ sp[(-4)+0]
 17046  01D19E  0EFC               	movlw	-4
 17047  01D1A0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 17048  01D1A6  0EFD               	movlw	-3
 17049  01D1A8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 17050                           
 17051                           ;stkvar	_p @ sp[(-4)+-2]
 17052  01D1AE  0EFA               	movlw	-6
 17053  01D1B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 17054  01D1B6  0EFB               	movlw	-5
 17055  01D1B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 17056  01D1BE  006F FF7B FFF6     	movff	postinc2,tblptrl
 17057  01D1C4  006F FF77 FFF7     	movff	postdec2,tblptrh
 17058  01D1CA                     	if	0	;tblptru may be non-zero
 17059  01D1CA                     	endif
 17060  01D1CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17061  01D1CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17062  01D1CC  6EF8               	movwf	tblptru,c
 17063  01D1CE                     	endif
 17064  01D1CE  0008               	tblrd		*
 17065  01D1D0  50F5               	movf	tablat,w,c
 17066  01D1D2  0A3A               	xorlw	58
 17067  01D1D4  A4D8               	btfss	status,2,c
 17068  01D1D6  D064               	goto	l10896
 17069                           
 17070                           ;stkvar	_p @ sp[(-4)+-2]
 17071  01D1D8  0EFA               	movlw	-6
 17072  01D1DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17073  01D1E0  0EFB               	movlw	-5
 17074  01D1E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17075  01D1E8  2ADE               	incf	postinc2,f,c
 17076  01D1EA  0E00               	movlw	0
 17077  01D1EC  22DD               	addwfc	postdec2,f,c
 17078                           
 17079                           ;stkvar	_p @ sp[(-4)+-2]
 17080  01D1EE  0EFA               	movlw	-6
 17081  01D1F0  006F FF8F FFE6     	movff	plusw1,postinc1
 17082  01D1F6  006F FF8F FFE6     	movff	plusw1,postinc1
 17083  01D1FC  ECD6  F000         	call	_getint	;wreg free
 17084  01D200  0060  F0A8  F034   	movff	btemp,btemp+10
 17085  01D206  0060  F0AC  F035   	movff	btemp+1,btemp+11
 17086  01D20C  0E3C               	movlw	60
 17087  01D20E  0234               	mulwf	(btemp+10)^0,c
 17088  01D210  006F FFCC  F032    	movff	prodl,btemp+8
 17089  01D216  006F FFD0  F033    	movff	prodh,btemp+9
 17090  01D21C  0235               	mulwf	(btemp+11)^0,c
 17091  01D21E  50F3               	movf	prodl,w,c
 17092  01D220  2633               	addwf	(btemp+9)^0,f,c
 17093                           
 17094                           ;stkvar	_off @ sp[(-4)+0]
 17095  01D222  50E1               	movf	fsr1l,w,c
 17096  01D224  0FFC               	addlw	-4
 17097  01D226  6ED9               	movwf	fsr2l,c
 17098  01D228  50E2               	movf	fsr1h,w,c
 17099  01D22A  6EDA               	movwf	fsr2h,c
 17100  01D22C  0EFF               	movlw	255
 17101  01D22E  22DA               	addwfc	fsr2h,f,c
 17102  01D230  5032               	movf	(btemp+8)^0,w,c
 17103  01D232  26DE               	addwf	postinc2,f,c
 17104  01D234  5033               	movf	(btemp+9)^0,w,c
 17105  01D236  22DD               	addwfc	postdec2,f,c
 17106                           
 17107                           ;stkvar	_p @ sp[(-4)+-2]
 17108  01D238  0EFA               	movlw	-6
 17109  01D23A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17110  01D240  0EFB               	movlw	-5
 17111  01D242  006F FF8F FFDA     	movff	plusw1,fsr2h
 17112  01D248  006F FF7B FFF6     	movff	postinc2,tblptrl
 17113  01D24E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17114  01D254                     	if	0	;tblptru may be non-zero
 17115  01D254                     	endif
 17116  01D254                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17117  01D254  0E00               	movlw	low (__mediumconst shr (0+16))
 17118  01D256  6EF8               	movwf	tblptru,c
 17119  01D258                     	endif
 17120  01D258  0008               	tblrd		*
 17121  01D25A  50F5               	movf	tablat,w,c
 17122  01D25C  0A3A               	xorlw	58
 17123  01D25E  A4D8               	btfss	status,2,c
 17124  01D260  D01F               	goto	l10896
 17125                           
 17126                           ;stkvar	_p @ sp[(-4)+-2]
 17127  01D262  0EFA               	movlw	-6
 17128  01D264  006F FF8F FFD9     	movff	plusw1,fsr2l
 17129  01D26A  0EFB               	movlw	-5
 17130  01D26C  006F FF8F FFDA     	movff	plusw1,fsr2h
 17131  01D272  2ADE               	incf	postinc2,f,c
 17132  01D274  0E00               	movlw	0
 17133  01D276  22DD               	addwfc	postdec2,f,c
 17134                           
 17135                           ;stkvar	_p @ sp[(-4)+-2]
 17136  01D278  0EFA               	movlw	-6
 17137  01D27A  006F FF8F FFE6     	movff	plusw1,postinc1
 17138  01D280  006F FF8F FFE6     	movff	plusw1,postinc1
 17139  01D286  ECD6  F000         	call	_getint	;wreg free
 17140                           
 17141                           ;stkvar	_off @ sp[(-4)+0]
 17142  01D28A  50E1               	movf	fsr1l,w,c
 17143  01D28C  0FFC               	addlw	-4
 17144  01D28E  6ED9               	movwf	fsr2l,c
 17145  01D290  50E2               	movf	fsr1h,w,c
 17146  01D292  6EDA               	movwf	fsr2h,c
 17147  01D294  0EFF               	movlw	255
 17148  01D296  22DA               	addwfc	fsr2h,f,c
 17149  01D298  502A               	movf	btemp^0,w,c
 17150  01D29A  26DE               	addwf	postinc2,f,c
 17151  01D29C  502B               	movf	(btemp+1)^0,w,c
 17152  01D29E  22DD               	addwfc	postdec2,f,c
 17153  01D2A0                     l10896:
 17154                           
 17155                           ;stkvar	_neg @ sp[(-4)+2]
 17156  01D2A0  0EFE               	movlw	-2
 17157  01D2A2  006F FF8C  F02A    	movff	plusw1,btemp
 17158  01D2A8  0EFF               	movlw	-1
 17159  01D2AA  50E3               	movf	plusw1,w,c
 17160  01D2AC  102A               	iorwf	btemp^0,w,c
 17161  01D2AE  A4D8               	btfss	status,2,c
 17162  01D2B0  D009               	goto	l10900
 17163                           
 17164                           ;stkvar	_off @ sp[(-4)+0]
 17165  01D2B2  0EFC               	movlw	-4
 17166  01D2B4  006F FF8C  F02A    	movff	plusw1,btemp
 17167  01D2BA  0EFD               	movlw	-3
 17168  01D2BC  006F FF8C  F02B    	movff	plusw1,btemp+1
 17169  01D2C2  D00D               	goto	l3937
 17170  01D2C4                     l10900:
 17171                           
 17172                           ;stkvar	_off @ sp[(-4)+0]
 17173  01D2C4  0EFC               	movlw	-4
 17174  01D2C6  006F FF8C  F02A    	movff	plusw1,btemp
 17175  01D2CC  1E2A               	comf	btemp^0,f,c
 17176  01D2CE  0EFD               	movlw	-3
 17177  01D2D0  006F FF8C  F02B    	movff	plusw1,btemp+1
 17178  01D2D6  1E2B               	comf	(btemp+1)^0,f,c
 17179  01D2D8  2A2A               	incf	btemp^0,f,c
 17180  01D2DA  B4D8               	btfsc	status,2,c
 17181  01D2DC  2A2B               	incf	(btemp+1)^0,f,c
 17182  01D2DE                     l3937:
 17183                           
 17184                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17185  01D2DE  0EFA               	movlw	250
 17186  01D2E0  26E1               	addwf	fsr1l,f,c
 17187  01D2E2  0EFF               	movlw	255
 17188  01D2E4  22E2               	addwfc	fsr1h,f,c
 17189  01D2E6  0012               	return		;funcret
 17190  01D2E8                     __end_of_getoff:
 17191                           	opt callstack 0
 17192                           
 17193 ;; *************** function _getint *****************
 17194 ;; Defined at:
 17195 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  p               2  [STACK] PTR PTR const unsigned c
 17198 ;;		 -> s(2), 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  x               2  [STACK] unsigned int 
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  2  [STACK] int 
 17203 ;; Registers used:
 17204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17214 ;;Total ram usage:        0 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:   15
 17217 ;; This function calls:
 17218 ;;		Nothing
 17219 ;; This function is called by:
 17220 ;;		_getoff
 17221 ;;		_getrule
 17222 ;; This function uses a reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text48
 17226  0001AC                     __ptext48:
 17227                           	opt callstack 0
 17228  0001AC                     _getint:
 17229                           	opt callstack 0
 17230                           
 17231                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17232  0001AC  52E6               	movf	postinc1,f,c
 17233  0001AE  52E6               	movf	postinc1,f,c
 17234                           
 17235                           ;stkvar	_x @ sp[(-2)+0]
 17236                           
 17237                           ;incstack = 0
 17238  0001B0  0EFE               	movlw	-2
 17239  0001B2  6AE3               	clrf	plusw1,c
 17240  0001B4  0EFF               	movlw	-1
 17241  0001B6  6AE3               	clrf	plusw1,c
 17242  0001B8  D043               	goto	l10034
 17243  0001BA                     l10030:
 17244  0001BA  0ED0               	movlw	208
 17245  0001BC  6E34               	movwf	(btemp+10)^0,c
 17246  0001BE  0EFF               	movlw	255
 17247  0001C0  6E35               	movwf	(btemp+11)^0,c
 17248                           
 17249                           ;stkvar	_x @ sp[(-2)+0]
 17250  0001C2  0EFE               	movlw	-2
 17251  0001C4  006F FF8C  F032    	movff	plusw1,btemp+8
 17252  0001CA  0EFF               	movlw	-1
 17253  0001CC  006F FF8C  F033    	movff	plusw1,btemp+9
 17254  0001D2  0E0A               	movlw	10
 17255  0001D4  0232               	mulwf	(btemp+8)^0,c
 17256  0001D6  006F FFCC  F030    	movff	prodl,btemp+6
 17257  0001DC  006F FFD0  F031    	movff	prodh,btemp+7
 17258  0001E2  0233               	mulwf	(btemp+9)^0,c
 17259  0001E4  50F3               	movf	prodl,w,c
 17260  0001E6  2631               	addwf	(btemp+7)^0,f,c
 17261                           
 17262                           ;stkvar	_p @ sp[(-2)+-2]
 17263  0001E8  0EFC               	movlw	-4
 17264  0001EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17265  0001F0  0EFD               	movlw	-3
 17266  0001F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17267  0001F8  006F FF7B FFF6     	movff	postinc2,tblptrl
 17268  0001FE  006F FF77 FFF7     	movff	postdec2,tblptrh
 17269  000204                     	if	0	;tblptru may be non-zero
 17270  000204                     	endif
 17271  000204                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17272  000204  0E00               	movlw	low (__mediumconst shr (0+16))
 17273  000206  6EF8               	movwf	tblptru,c
 17274  000208                     	endif
 17275  000208  0008               	tblrd		*
 17276  00020A  50F5               	movf	tablat,w,c
 17277  00020C  2630               	addwf	(btemp+6)^0,f,c
 17278  00020E  0E00               	movlw	0
 17279  000210  2231               	addwfc	(btemp+7)^0,f,c
 17280  000212  5034               	movf	(btemp+10)^0,w,c
 17281  000214  2630               	addwf	(btemp+6)^0,f,c
 17282  000216  5035               	movf	(btemp+11)^0,w,c
 17283  000218  2231               	addwfc	(btemp+7)^0,f,c
 17284                           
 17285                           ;stkvar	_x @ sp[(-2)+0]
 17286  00021A  0EFE               	movlw	-2
 17287  00021C  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 17288  000222  0EFF               	movlw	-1
 17289  000224  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 17290                           
 17291                           ;stkvar	_p @ sp[(-2)+-2]
 17292  00022A  0EFC               	movlw	-4
 17293  00022C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17294  000232  0EFD               	movlw	-3
 17295  000234  006F FF8F FFDA     	movff	plusw1,fsr2h
 17296  00023A  2ADE               	incf	postinc2,f,c
 17297  00023C  0E00               	movlw	0
 17298  00023E  22DD               	addwfc	postdec2,f,c
 17299  000240                     l10034:
 17300  000240  0ED0               	movlw	208
 17301  000242  6E34               	movwf	(btemp+10)^0,c
 17302  000244  0EFF               	movlw	255
 17303  000246  6E35               	movwf	(btemp+11)^0,c
 17304                           
 17305                           ;stkvar	_p @ sp[(-2)+-2]
 17306  000248  0EFC               	movlw	-4
 17307  00024A  006F FF8F FFD9     	movff	plusw1,fsr2l
 17308  000250  0EFD               	movlw	-3
 17309  000252  006F FF8F FFDA     	movff	plusw1,fsr2h
 17310  000258  006F FF7B FFF6     	movff	postinc2,tblptrl
 17311  00025E  006F FF77 FFF7     	movff	postdec2,tblptrh
 17312  000264                     	if	0	;tblptru may be non-zero
 17313  000264                     	endif
 17314  000264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17315  000264  0E00               	movlw	low (__mediumconst shr (0+16))
 17316  000266  6EF8               	movwf	tblptru,c
 17317  000268                     	endif
 17318  000268  0008               	tblrd		*
 17319  00026A  50F5               	movf	tablat,w,c
 17320  00026C  6E32               	movwf	(btemp+8)^0,c
 17321  00026E  6A33               	clrf	(btemp+9)^0,c
 17322  000270  5034               	movf	(btemp+10)^0,w,c
 17323  000272  2632               	addwf	(btemp+8)^0,f,c
 17324  000274  5035               	movf	(btemp+11)^0,w,c
 17325  000276  2233               	addwfc	(btemp+9)^0,f,c
 17326  000278  5033               	movf	(btemp+9)^0,w,c
 17327  00027A  E104               	bnz	u7660
 17328  00027C  0E0A               	movlw	10
 17329  00027E  5C32               	subwf	(btemp+8)^0,w,c
 17330  000280  A0D8               	btfss	status,0,c
 17331  000282  D79B               	goto	l10030
 17332  000284                     u7660:
 17333                           
 17334                           ;stkvar	_x @ sp[(-2)+0]
 17335  000284  0EFE               	movlw	-2
 17336  000286  006F FF8C  F02A    	movff	plusw1,btemp
 17337  00028C  0EFF               	movlw	-1
 17338  00028E  006F FF8C  F02B    	movff	plusw1,btemp+1
 17339                           
 17340                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 17341  000294  52E5               	movf	postdec1,f,c
 17342  000296  52E5               	movf	postdec1,f,c
 17343  000298  52E5               	movf	postdec1,f,c
 17344  00029A  52E5               	movf	postdec1,f,c
 17345  00029C  0012               	return		;funcret
 17346  00029E                     __end_of_getint:
 17347                           	opt callstack 0
 17348                           
 17349 ;; *************** function _getname *****************
 17350 ;; Defined at:
 17351 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 17352 ;; Parameters:    Size  Location     Type
 17353 ;;  d               2  [STACK] PTR unsigned char 
 17354 ;;		 -> dst_name(7), std_name(7), 
 17355 ;;  p               2  [STACK] PTR PTR const unsigned c
 17356 ;;		 -> s(2), 
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;  i               2  [STACK] int 
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  1  [STACK] void 
 17361 ;; Registers used:
 17362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 17363 ;; Tracked objects:
 17364 ;;		On entry : 0/39
 17365 ;;		On exit  : 0/0
 17366 ;;		Unchanged: 0/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17372 ;;Total ram usage:        0 bytes
 17373 ;; Hardware stack levels used:    1
 17374 ;; Hardware stack levels required when called:   15
 17375 ;; This function calls:
 17376 ;;		Nothing
 17377 ;; This function is called by:
 17378 ;;		_do_tzset
 17379 ;; This function uses a reentrant model
 17380 ;;
 17381                           
 17382                           	psect	text49
 17383  01B1A2                     __ptext49:
 17384                           	opt callstack 0
 17385  01B1A2                     _getname:
 17386                           	opt callstack 0
 17387                           
 17388                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17389  01B1A2  52E6               	movf	postinc1,f,c
 17390  01B1A4  52E6               	movf	postinc1,f,c
 17391                           
 17392                           ;stkvar	_p @ sp[(-2)+-4]
 17393                           
 17394                           ;incstack = 0
 17395  01B1A6  0EFA               	movlw	-6
 17396  01B1A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 17397  01B1AE  0EFB               	movlw	-5
 17398  01B1B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 17399  01B1B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 17400  01B1BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 17401  01B1C2                     	if	0	;tblptru may be non-zero
 17402  01B1C2                     	endif
 17403  01B1C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17404  01B1C2  0E00               	movlw	low (__mediumconst shr (0+16))
 17405  01B1C4  6EF8               	movwf	tblptru,c
 17406  01B1C6                     	endif
 17407  01B1C6  0008               	tblrd		*
 17408  01B1C8  50F5               	movf	tablat,w,c
 17409  01B1CA  0A3C               	xorlw	60
 17410  01B1CC  A4D8               	btfss	status,2,c
 17411  01B1CE  D09E               	goto	l16170
 17412                           
 17413                           ;stkvar	_p @ sp[(-2)+-4]
 17414  01B1D0  0EFA               	movlw	-6
 17415  01B1D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 17416  01B1D8  0EFB               	movlw	-5
 17417  01B1DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 17418  01B1E0  2ADE               	incf	postinc2,f,c
 17419  01B1E2  0E00               	movlw	0
 17420  01B1E4  22DD               	addwfc	postdec2,f,c
 17421                           
 17422                           ;stkvar	_i @ sp[(-2)+0]
 17423  01B1E6  0EFE               	movlw	-2
 17424  01B1E8  6AE3               	clrf	plusw1,c
 17425  01B1EA  0EFF               	movlw	-1
 17426  01B1EC  6AE3               	clrf	plusw1,c
 17427  01B1EE  D04D               	goto	l16164
 17428  01B1F0                     l16160:
 17429                           
 17430                           ;stkvar	_i @ sp[(-2)+0]
 17431  01B1F0  0EFE               	movlw	-2
 17432  01B1F2  006F FF8C  F034    	movff	plusw1,btemp+10
 17433  01B1F8  0EFF               	movlw	-1
 17434  01B1FA  006F FF8C  F035    	movff	plusw1,btemp+11
 17435                           
 17436                           ;stkvar	_p @ sp[(-2)+-4]
 17437  01B200  0EFA               	movlw	-6
 17438  01B202  006F FF8F FFD9     	movff	plusw1,fsr2l
 17439  01B208  0EFB               	movlw	-5
 17440  01B20A  006F FF8F FFDA     	movff	plusw1,fsr2h
 17441  01B210  006F FF78  F032    	movff	postinc2,btemp+8
 17442  01B216  006F FF74  F033    	movff	postdec2,btemp+9
 17443  01B21C  5034               	movf	(btemp+10)^0,w,c
 17444  01B21E  2632               	addwf	(btemp+8)^0,f,c
 17445  01B220  5035               	movf	(btemp+11)^0,w,c
 17446  01B222  2233               	addwfc	(btemp+9)^0,f,c
 17447  01B224  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17448  01B22A  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17449  01B230                     	if	0	;tblptru may be non-zero
 17450  01B230                     	endif
 17451  01B230                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17452  01B230  0E00               	movlw	low (__mediumconst shr (0+16))
 17453  01B232  6EF8               	movwf	tblptru,c
 17454  01B234                     	endif
 17455                           
 17456                           ;stkvar	_i @ sp[(-2)+0]
 17457  01B234  0EFE               	movlw	-2
 17458  01B236  006F FF8C  F034    	movff	plusw1,btemp+10
 17459  01B23C  0EFF               	movlw	-1
 17460  01B23E  006F FF8C  F035    	movff	plusw1,btemp+11
 17461                           
 17462                           ;stkvar	_d @ sp[(-2)+-2]
 17463  01B244  0EFC               	movlw	-4
 17464  01B246  006F FF8C  F032    	movff	plusw1,btemp+8
 17465  01B24C  0EFD               	movlw	-3
 17466  01B24E  006F FF8C  F033    	movff	plusw1,btemp+9
 17467  01B254  5034               	movf	(btemp+10)^0,w,c
 17468  01B256  2432               	addwf	(btemp+8)^0,w,c
 17469  01B258  6ED9               	movwf	fsr2l,c
 17470  01B25A  5035               	movf	(btemp+11)^0,w,c
 17471  01B25C  2033               	addwfc	(btemp+9)^0,w,c
 17472  01B25E  6EDA               	movwf	fsr2h,c
 17473  01B260  0008               	tblrd		*
 17474  01B262  006F FFD7 FFDF     	movff	tablat,indf2
 17475                           
 17476                           ;stkvar	_i @ sp[(-2)+0]
 17477  01B268  0EFE               	movlw	-2
 17478  01B26A  50E3               	movf	plusw1,w,c
 17479  01B26C  0F01               	addlw	1
 17480  01B26E  6E2A               	movwf	btemp^0,c
 17481  01B270  0EFE               	movlw	-2
 17482  01B272  0060  F0AB  FFE3   	movff	btemp,plusw1
 17483  01B278  6A2A               	clrf	btemp^0,c
 17484  01B27A  0EFF               	movlw	-1
 17485  01B27C  50E3               	movf	plusw1,w,c
 17486  01B27E  202A               	addwfc	btemp^0,w,c
 17487  01B280  6E2A               	movwf	btemp^0,c
 17488  01B282  0EFF               	movlw	-1
 17489  01B284  0060  F0AB  FFE3   	movff	btemp,plusw1
 17490  01B28A                     l16164:
 17491                           
 17492                           ;stkvar	_i @ sp[(-2)+0]
 17493  01B28A  0EFE               	movlw	-2
 17494  01B28C  006F FF8C  F034    	movff	plusw1,btemp+10
 17495  01B292  0EFF               	movlw	-1
 17496  01B294  006F FF8C  F035    	movff	plusw1,btemp+11
 17497                           
 17498                           ;stkvar	_p @ sp[(-2)+-4]
 17499  01B29A  0EFA               	movlw	-6
 17500  01B29C  006F FF8F FFD9     	movff	plusw1,fsr2l
 17501  01B2A2  0EFB               	movlw	-5
 17502  01B2A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 17503  01B2AA  006F FF78  F032    	movff	postinc2,btemp+8
 17504  01B2B0  006F FF74  F033    	movff	postdec2,btemp+9
 17505  01B2B6  5034               	movf	(btemp+10)^0,w,c
 17506  01B2B8  2632               	addwf	(btemp+8)^0,f,c
 17507  01B2BA  5035               	movf	(btemp+11)^0,w,c
 17508  01B2BC  2233               	addwfc	(btemp+9)^0,f,c
 17509  01B2BE  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17510  01B2C4  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17511  01B2CA                     	if	0	;tblptru may be non-zero
 17512  01B2CA                     	endif
 17513  01B2CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17514  01B2CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17515  01B2CC  6EF8               	movwf	tblptru,c
 17516  01B2CE                     	endif
 17517  01B2CE  0008               	tblrd		*
 17518  01B2D0  50F5               	movf	tablat,w,c
 17519  01B2D2  0A3E               	xorlw	62
 17520  01B2D4  B4D8               	btfsc	status,2,c
 17521  01B2D6  D00E               	goto	u15680
 17522                           
 17523                           ;stkvar	_i @ sp[(-2)+0]
 17524  01B2D8  0EFF               	movlw	-1
 17525  01B2DA  BEE3               	btfsc	plusw1,7,c
 17526  01B2DC  D789               	goto	l16160
 17527  01B2DE  0EFF               	movlw	-1
 17528  01B2E0  50E3               	movf	plusw1,w,c
 17529  01B2E2  E108               	bnz	u15680
 17530  01B2E4  0EFE               	movlw	-2
 17531  01B2E6  006F FF8C  F02A    	movff	plusw1,btemp
 17532  01B2EC  0E06               	movlw	6
 17533  01B2EE  5E2A               	subwf	btemp^0,f,c
 17534  01B2F0  A0D8               	btfss	status,0,c
 17535  01B2F2  D77E               	goto	l16160
 17536  01B2F4                     u15680:
 17537                           
 17538                           ;stkvar	_p @ sp[(-2)+-4]
 17539  01B2F4  0EFA               	movlw	-6
 17540  01B2F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 17541  01B2FC  0EFB               	movlw	-5
 17542  01B2FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 17543  01B304  2ADE               	incf	postinc2,f,c
 17544  01B306  0E00               	movlw	0
 17545  01B308  22DD               	addwfc	postdec2,f,c
 17546  01B30A  D098               	goto	u15700
 17547  01B30C                     l16170:
 17548                           
 17549                           ;stkvar	_i @ sp[(-2)+0]
 17550  01B30C  0EFE               	movlw	-2
 17551  01B30E  6AE3               	clrf	plusw1,c
 17552  01B310  0EFF               	movlw	-1
 17553  01B312  6AE3               	clrf	plusw1,c
 17554  01B314  D04D               	goto	l16176
 17555  01B316                     l16172:
 17556                           
 17557                           ;stkvar	_i @ sp[(-2)+0]
 17558  01B316  0EFE               	movlw	-2
 17559  01B318  006F FF8C  F034    	movff	plusw1,btemp+10
 17560  01B31E  0EFF               	movlw	-1
 17561  01B320  006F FF8C  F035    	movff	plusw1,btemp+11
 17562                           
 17563                           ;stkvar	_p @ sp[(-2)+-4]
 17564  01B326  0EFA               	movlw	-6
 17565  01B328  006F FF8F FFD9     	movff	plusw1,fsr2l
 17566  01B32E  0EFB               	movlw	-5
 17567  01B330  006F FF8F FFDA     	movff	plusw1,fsr2h
 17568  01B336  006F FF78  F032    	movff	postinc2,btemp+8
 17569  01B33C  006F FF74  F033    	movff	postdec2,btemp+9
 17570  01B342  5034               	movf	(btemp+10)^0,w,c
 17571  01B344  2632               	addwf	(btemp+8)^0,f,c
 17572  01B346  5035               	movf	(btemp+11)^0,w,c
 17573  01B348  2233               	addwfc	(btemp+9)^0,f,c
 17574  01B34A  0060  F0CB  FFF6   	movff	btemp+8,tblptrl
 17575  01B350  0060  F0CF  FFF7   	movff	btemp+9,tblptrh
 17576  01B356                     	if	0	;tblptru may be non-zero
 17577  01B356                     	endif
 17578  01B356                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17579  01B356  0E00               	movlw	low (__mediumconst shr (0+16))
 17580  01B358  6EF8               	movwf	tblptru,c
 17581  01B35A                     	endif
 17582                           
 17583                           ;stkvar	_i @ sp[(-2)+0]
 17584  01B35A  0EFE               	movlw	-2
 17585  01B35C  006F FF8C  F034    	movff	plusw1,btemp+10
 17586  01B362  0EFF               	movlw	-1
 17587  01B364  006F FF8C  F035    	movff	plusw1,btemp+11
 17588                           
 17589                           ;stkvar	_d @ sp[(-2)+-2]
 17590  01B36A  0EFC               	movlw	-4
 17591  01B36C  006F FF8C  F032    	movff	plusw1,btemp+8
 17592  01B372  0EFD               	movlw	-3
 17593  01B374  006F FF8C  F033    	movff	plusw1,btemp+9
 17594  01B37A  5034               	movf	(btemp+10)^0,w,c
 17595  01B37C  2432               	addwf	(btemp+8)^0,w,c
 17596  01B37E  6ED9               	movwf	fsr2l,c
 17597  01B380  5035               	movf	(btemp+11)^0,w,c
 17598  01B382  2033               	addwfc	(btemp+9)^0,w,c
 17599  01B384  6EDA               	movwf	fsr2h,c
 17600  01B386  0008               	tblrd		*
 17601  01B388  006F FFD7 FFDF     	movff	tablat,indf2
 17602                           
 17603                           ;stkvar	_i @ sp[(-2)+0]
 17604  01B38E  0EFE               	movlw	-2
 17605  01B390  50E3               	movf	plusw1,w,c
 17606  01B392  0F01               	addlw	1
 17607  01B394  6E2A               	movwf	btemp^0,c
 17608  01B396  0EFE               	movlw	-2
 17609  01B398  0060  F0AB  FFE3   	movff	btemp,plusw1
 17610  01B39E  6A2A               	clrf	btemp^0,c
 17611  01B3A0  0EFF               	movlw	-1
 17612  01B3A2  50E3               	movf	plusw1,w,c
 17613  01B3A4  202A               	addwfc	btemp^0,w,c
 17614  01B3A6  6E2A               	movwf	btemp^0,c
 17615  01B3A8  0EFF               	movlw	-1
 17616  01B3AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 17617  01B3B0                     l16176:
 17618  01B3B0  0E9F               	movlw	159
 17619  01B3B2  6E34               	movwf	(btemp+10)^0,c
 17620  01B3B4  0EFF               	movlw	255
 17621  01B3B6  6E35               	movwf	(btemp+11)^0,c
 17622                           
 17623                           ;stkvar	_i @ sp[(-2)+0]
 17624  01B3B8  0EFE               	movlw	-2
 17625  01B3BA  006F FF8C  F032    	movff	plusw1,btemp+8
 17626  01B3C0  0EFF               	movlw	-1
 17627  01B3C2  006F FF8C  F033    	movff	plusw1,btemp+9
 17628                           
 17629                           ;stkvar	_p @ sp[(-2)+-4]
 17630  01B3C8  0EFA               	movlw	-6
 17631  01B3CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 17632  01B3D0  0EFB               	movlw	-5
 17633  01B3D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 17634  01B3D8  006F FF78  F030    	movff	postinc2,btemp+6
 17635  01B3DE  006F FF74  F031    	movff	postdec2,btemp+7
 17636  01B3E4  5032               	movf	(btemp+8)^0,w,c
 17637  01B3E6  2630               	addwf	(btemp+6)^0,f,c
 17638  01B3E8  5033               	movf	(btemp+9)^0,w,c
 17639  01B3EA  2231               	addwfc	(btemp+7)^0,f,c
 17640  01B3EC  0060  F0C3  FFF6   	movff	btemp+6,tblptrl
 17641  01B3F2  0060  F0C7  FFF7   	movff	btemp+7,tblptrh
 17642  01B3F8                     	if	0	;tblptru may be non-zero
 17643  01B3F8                     	endif
 17644  01B3F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17645  01B3F8  0E00               	movlw	low (__mediumconst shr (0+16))
 17646  01B3FA  6EF8               	movwf	tblptru,c
 17647  01B3FC                     	endif
 17648  01B3FC  0008               	tblrd		*
 17649  01B3FE  50F5               	movf	tablat,w,c
 17650  01B400  6E32               	movwf	(btemp+8)^0,c
 17651  01B402  6A33               	clrf	(btemp+9)^0,c
 17652  01B404  0E20               	movlw	32
 17653  01B406  1232               	iorwf	(btemp+8)^0,f,c
 17654  01B408  0E00               	movlw	0
 17655  01B40A  1233               	iorwf	(btemp+9)^0,f,c
 17656  01B40C  5034               	movf	(btemp+10)^0,w,c
 17657  01B40E  2632               	addwf	(btemp+8)^0,f,c
 17658  01B410  5035               	movf	(btemp+11)^0,w,c
 17659  01B412  2233               	addwfc	(btemp+9)^0,f,c
 17660  01B414  5033               	movf	(btemp+9)^0,w,c
 17661  01B416  E112               	bnz	l16180
 17662  01B418  0E1A               	movlw	26
 17663  01B41A  5C32               	subwf	(btemp+8)^0,w,c
 17664  01B41C  B0D8               	btfsc	status,0,c
 17665  01B41E  D00E               	goto	u15700
 17666                           
 17667                           ;stkvar	_i @ sp[(-2)+0]
 17668  01B420  0EFF               	movlw	-1
 17669  01B422  BEE3               	btfsc	plusw1,7,c
 17670  01B424  D778               	goto	l16172
 17671  01B426  0EFF               	movlw	-1
 17672  01B428  50E3               	movf	plusw1,w,c
 17673  01B42A  E108               	bnz	u15700
 17674  01B42C  0EFE               	movlw	-2
 17675  01B42E  006F FF8C  F02A    	movff	plusw1,btemp
 17676  01B434  0E06               	movlw	6
 17677  01B436  5E2A               	subwf	btemp^0,f,c
 17678  01B438  A0D8               	btfss	status,0,c
 17679  01B43A  D76D               	goto	l16172
 17680  01B43C                     u15700:
 17681  01B43C                     l16180:
 17682                           
 17683                           ;stkvar	_i @ sp[(-2)+0]
 17684  01B43C  0EFE               	movlw	-2
 17685  01B43E  006F FF8C  F034    	movff	plusw1,btemp+10
 17686  01B444  0EFF               	movlw	-1
 17687  01B446  006F FF8C  F035    	movff	plusw1,btemp+11
 17688                           
 17689                           ;stkvar	_p @ sp[(-2)+-4]
 17690  01B44C  0EFA               	movlw	-6
 17691  01B44E  006F FF8F FFD9     	movff	plusw1,fsr2l
 17692  01B454  0EFB               	movlw	-5
 17693  01B456  006F FF8F FFDA     	movff	plusw1,fsr2h
 17694  01B45C  5034               	movf	(btemp+10)^0,w,c
 17695  01B45E  26DE               	addwf	postinc2,f,c
 17696  01B460  5035               	movf	(btemp+11)^0,w,c
 17697  01B462  22DD               	addwfc	postdec2,f,c
 17698                           
 17699                           ;stkvar	_i @ sp[(-2)+0]
 17700  01B464  0EFE               	movlw	-2
 17701  01B466  006F FF8C  F034    	movff	plusw1,btemp+10
 17702  01B46C  0EFF               	movlw	-1
 17703  01B46E  006F FF8C  F035    	movff	plusw1,btemp+11
 17704                           
 17705                           ;stkvar	_d @ sp[(-2)+-2]
 17706  01B474  0EFC               	movlw	-4
 17707  01B476  006F FF8C  F032    	movff	plusw1,btemp+8
 17708  01B47C  0EFD               	movlw	-3
 17709  01B47E  006F FF8C  F033    	movff	plusw1,btemp+9
 17710  01B484  5034               	movf	(btemp+10)^0,w,c
 17711  01B486  2432               	addwf	(btemp+8)^0,w,c
 17712  01B488  6ED9               	movwf	fsr2l,c
 17713  01B48A  5035               	movf	(btemp+11)^0,w,c
 17714  01B48C  2033               	addwfc	(btemp+9)^0,w,c
 17715  01B48E  6EDA               	movwf	fsr2h,c
 17716  01B490  0E00               	movlw	0
 17717  01B492  6EDF               	movwf	indf2,c
 17718                           
 17719                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17720  01B494  0EFA               	movlw	250
 17721  01B496  26E1               	addwf	fsr1l,f,c
 17722  01B498  0EFF               	movlw	255
 17723  01B49A  22E2               	addwfc	fsr1h,f,c
 17724  01B49C  0012               	return		;funcret
 17725  01B49E                     __end_of_getname:
 17726                           	opt callstack 0
 17727                           
 17728 ;; *************** function ___secs_to_tm *****************
 17729 ;; Defined at:
 17730 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 17731 ;; Parameters:    Size  Location     Type
 17732 ;;  t               8  [STACK] long long 
 17733 ;;  tm              2  [STACK] PTR struct tm
 17734 ;;		 -> localtime@tm(24), 
 17735 ;; Auto vars:     Size  Location     Type
 17736 ;;  years           8  [STACK] long long 
 17737 ;;  days            8  [STACK] long long 
 17738 ;;  secs            8  [STACK] long long 
 17739 ;;  remdays         4  [STACK] long 
 17740 ;;  q_cycles        4  [STACK] long 
 17741 ;;  c_cycles        4  [STACK] long 
 17742 ;;  remyears        4  [STACK] long 
 17743 ;;  remsecs         4  [STACK] long 
 17744 ;;  qc_cycles       4  [STACK] long 
 17745 ;;  months          2  [STACK] int 
 17746 ;;  leap            2  [STACK] int 
 17747 ;;  yday            2  [STACK] int 
 17748 ;;  wday            2  [STACK] int 
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  4  [STACK] long 
 17751 ;; Registers used:
 17752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/39
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17762 ;;Total ram usage:        0 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; Hardware stack levels required when called:   16
 17765 ;; This function calls:
 17766 ;;		___aldiv
 17767 ;;		___almod
 17768 ;;		___aodiv
 17769 ;;		___aomod
 17770 ;;		___lmul
 17771 ;;		___omul
 17772 ;; This function is called by:
 17773 ;;		___localtime_r
 17774 ;; This function uses a reentrant model
 17775 ;;
 17776                           
 17777                           	psect	text50
 17778  012964                     __ptext50:
 17779                           	opt callstack 0
 17780  012964                     ___secs_to_tm:
 17781                           	opt callstack 0
 17782                           
 17783                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17784  012964  0E39               	movlw	57
 17785  012966  26E1               	addwf	fsr1l,f,c
 17786  012968  0E00               	movlw	0
 17787  01296A  22E2               	addwfc	fsr1h,f,c
 17788                           
 17789                           ;stkvar	_t @ sp[(-57)+-8]
 17790                           
 17791                           ;incstack = 0
 17792  01296C  0EC6               	movlw	-58
 17793  01296E  AEE3               	btfss	plusw1,7,c
 17794  012970  D026               	goto	u16320
 17795  012972  0EC1               	movlw	-63
 17796  012974  006F FF8C  F02A    	movff	plusw1,btemp
 17797  01297A  0E80               	movlw	128
 17798  01297C  5E2A               	subwf	btemp^0,f,c
 17799  01297E  0EC2               	movlw	-62
 17800  012980  006F FF8C  F02A    	movff	plusw1,btemp
 17801  012986  0EBD               	movlw	189
 17802  012988  5A2A               	subwfb	btemp^0,f,c
 17803  01298A  0EC3               	movlw	-61
 17804  01298C  006F FF8C  F02A    	movff	plusw1,btemp
 17805  012992  0E0E               	movlw	14
 17806  012994  5A2A               	subwfb	btemp^0,f,c
 17807  012996  0EC4               	movlw	-60
 17808  012998  006F FF8C  F02A    	movff	plusw1,btemp
 17809  01299E  0EFF               	movlw	255
 17810  0129A0  5A2A               	subwfb	btemp^0,f,c
 17811  0129A2  0EC5               	movlw	-59
 17812  0129A4  006F FF8C  F02A    	movff	plusw1,btemp
 17813  0129AA  0EFF               	movlw	255
 17814  0129AC  5A2A               	subwfb	btemp^0,f,c
 17815  0129AE  0EC6               	movlw	-58
 17816  0129B0  006F FF8C  F02A    	movff	plusw1,btemp
 17817  0129B6  0EFF               	movlw	255
 17818  0129B8  5A2A               	subwfb	btemp^0,f,c
 17819  0129BA  A0D8               	btfss	status,0,c
 17820  0129BC  D028               	goto	u16330
 17821  0129BE                     u16320:
 17822                           
 17823                           ;stkvar	_t @ sp[(-57)+-8]
 17824  0129BE  0EC6               	movlw	-58
 17825  0129C0  BEE3               	btfsc	plusw1,7,c
 17826  0129C2  D02F               	goto	l16748
 17827  0129C4  0EC6               	movlw	-58
 17828  0129C6  50E3               	movf	plusw1,w,c
 17829  0129C8  E122               	bnz	u16330
 17830  0129CA  0EC5               	movlw	-59
 17831  0129CC  50E3               	movf	plusw1,w,c
 17832  0129CE  E11F               	bnz	u16330
 17833  0129D0  0EC4               	movlw	-60
 17834  0129D2  50E3               	movf	plusw1,w,c
 17835  0129D4  E11C               	bnz	u16330
 17836  0129D6  0EBF               	movlw	-65
 17837  0129D8  04E3               	decf	plusw1,w,c
 17838  0129DA  0EC0               	movlw	-64
 17839  0129DC  006F FF8C  F02A    	movff	plusw1,btemp
 17840  0129E2  0E7B               	movlw	123
 17841  0129E4  5A2A               	subwfb	btemp^0,f,c
 17842  0129E6  0EC1               	movlw	-63
 17843  0129E8  006F FF8C  F02A    	movff	plusw1,btemp
 17844  0129EE  0E9D               	movlw	157
 17845  0129F0  5A2A               	subwfb	btemp^0,f,c
 17846  0129F2  0EC2               	movlw	-62
 17847  0129F4  006F FF8C  F02A    	movff	plusw1,btemp
 17848  0129FA  0E40               	movlw	64
 17849  0129FC  5A2A               	subwfb	btemp^0,f,c
 17850  0129FE  0EC3               	movlw	-61
 17851  012A00  006F FF8C  F02A    	movff	plusw1,btemp
 17852  012A06  0EF1               	movlw	241
 17853  012A08  5A2A               	subwfb	btemp^0,f,c
 17854  012A0A  A0D8               	btfss	status,0,c
 17855  012A0C  D00A               	goto	l16748
 17856  012A0E                     u16330:
 17857  012A0E  0EFF               	movlw	255
 17858  012A10  6E2A               	movwf	btemp^0,c
 17859  012A12  0EFF               	movlw	255
 17860  012A14  6E2B               	movwf	(btemp+1)^0,c
 17861  012A16  0EFF               	movlw	255
 17862  012A18  6E2C               	movwf	(btemp+2)^0,c
 17863  012A1A  0EFF               	movlw	255
 17864  012A1C  6E2D               	movwf	(btemp+3)^0,c
 17865  012A1E  EF16  F09D         	goto	l3853
 17866  012A22                     l16748:
 17867                           
 17868                           ;stkvar	_t @ sp[(-57)+-8]
 17869  012A22  0EBF               	movlw	-65
 17870  012A24  50E3               	movf	plusw1,w,c
 17871  012A26  0F80               	addlw	128
 17872  012A28  6E3A               	movwf	(btemp+16)^0,c
 17873  012A2A  0EC0               	movlw	-64
 17874  012A2C  006F FF8C  F03B    	movff	plusw1,btemp+17
 17875  012A32  0EA2               	movlw	162
 17876  012A34  223B               	addwfc	(btemp+17)^0,f,c
 17877  012A36  0EC1               	movlw	-63
 17878  012A38  006F FF8C  F03C    	movff	plusw1,btemp+18
 17879  012A3E  0E43               	movlw	67
 17880  012A40  223C               	addwfc	(btemp+18)^0,f,c
 17881  012A42  0EC2               	movlw	-62
 17882  012A44  006F FF8C  F03D    	movff	plusw1,btemp+19
 17883  012A4A  0EC7               	movlw	199
 17884  012A4C  223D               	addwfc	(btemp+19)^0,f,c
 17885  012A4E  0EC3               	movlw	-61
 17886  012A50  006F FF8C  F03E    	movff	plusw1,btemp+20
 17887  012A56  0EFF               	movlw	255
 17888  012A58  223E               	addwfc	(btemp+20)^0,f,c
 17889  012A5A  0EC4               	movlw	-60
 17890  012A5C  006F FF8C  F03F    	movff	plusw1,btemp+21
 17891  012A62  0EFF               	movlw	255
 17892  012A64  223F               	addwfc	(btemp+21)^0,f,c
 17893  012A66  0EC5               	movlw	-59
 17894  012A68  006F FF8C  F040    	movff	plusw1,btemp+22
 17895  012A6E  0EFF               	movlw	255
 17896  012A70  2240               	addwfc	(btemp+22)^0,f,c
 17897  012A72  0EC6               	movlw	-58
 17898  012A74  006F FF8C  F041    	movff	plusw1,btemp+23
 17899  012A7A  0EFF               	movlw	255
 17900  012A7C  2241               	addwfc	(btemp+23)^0,f,c
 17901                           
 17902                           ;stkvar	_secs @ sp[(-57)+17]
 17903  012A7E  0ED8               	movlw	-40
 17904  012A80  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17905  012A86  0ED9               	movlw	-39
 17906  012A88  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17907  012A8E  0EDA               	movlw	-38
 17908  012A90  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17909  012A96  0EDB               	movlw	-37
 17910  012A98  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17911  012A9E  0EDC               	movlw	-36
 17912  012AA0  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17913  012AA6  0EDD               	movlw	-35
 17914  012AA8  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17915  012AAE  0EDE               	movlw	-34
 17916  012AB0  0060  F103  FFE3   	movff	btemp+22,plusw1
 17917  012AB6  0EDF               	movlw	-33
 17918  012AB8  0060  F107  FFE3   	movff	btemp+23,plusw1
 17919  012ABE  0E80               	movlw	128
 17920  012AC0  6EE6               	movwf	postinc1,c
 17921  012AC2  0E51               	movlw	81
 17922  012AC4  6EE6               	movwf	postinc1,c
 17923  012AC6  0E01               	movlw	1
 17924  012AC8  6EE6               	movwf	postinc1,c
 17925  012ACA  0E00               	movlw	0
 17926  012ACC  6EE6               	movwf	postinc1,c
 17927  012ACE  0E00               	movlw	0
 17928  012AD0  6EE6               	movwf	postinc1,c
 17929  012AD2  0E00               	movlw	0
 17930  012AD4  6EE6               	movwf	postinc1,c
 17931  012AD6  0E00               	movlw	0
 17932  012AD8  6EE6               	movwf	postinc1,c
 17933  012ADA  0E00               	movlw	0
 17934  012ADC  6EE6               	movwf	postinc1,c
 17935                           
 17936                           ;stkvar	_secs @ sp[(-65)+17]
 17937  012ADE  50E1               	movf	fsr1l,w,c
 17938  012AE0  0FD0               	addlw	-48
 17939  012AE2  6ED9               	movwf	fsr2l,c
 17940  012AE4  50E2               	movf	fsr1h,w,c
 17941  012AE6  6EDA               	movwf	fsr2h,c
 17942  012AE8  0EFF               	movlw	255
 17943  012AEA  22DA               	addwfc	fsr2h,f,c
 17944  012AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 17945  012AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 17946  012AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 17947  012AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 17948  012B04  006F FF7B FFE6     	movff	postinc2,postinc1
 17949  012B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 17950  012B10  006F FF7B FFE6     	movff	postinc2,postinc1
 17951  012B16  006F FF7B FFE6     	movff	postinc2,postinc1
 17952  012B1C  EC7D  F0E2         	call	___aodiv	;wreg free
 17953  012B20  52E5               	movf	postdec1,f,c
 17954  012B22  006F FF9C  F041    	movff	indf1,btemp+23
 17955  012B28  52E5               	movf	postdec1,f,c
 17956  012B2A  006F FF9C  F040    	movff	indf1,btemp+22
 17957  012B30  52E5               	movf	postdec1,f,c
 17958  012B32  006F FF9C  F03F    	movff	indf1,btemp+21
 17959  012B38  52E5               	movf	postdec1,f,c
 17960  012B3A  006F FF9C  F03E    	movff	indf1,btemp+20
 17961  012B40  52E5               	movf	postdec1,f,c
 17962  012B42  006F FF9C  F03D    	movff	indf1,btemp+19
 17963  012B48  52E5               	movf	postdec1,f,c
 17964  012B4A  006F FF9C  F03C    	movff	indf1,btemp+18
 17965  012B50  52E5               	movf	postdec1,f,c
 17966  012B52  006F FF9C  F03B    	movff	indf1,btemp+17
 17967  012B58  52E5               	movf	postdec1,f,c
 17968  012B5A  006F FF9C  F03A    	movff	indf1,btemp+16
 17969  012B60  0EF8               	movlw	248
 17970  012B62  26E1               	addwf	fsr1l,f,c
 17971  012B64  0EFF               	movlw	255
 17972  012B66  22E2               	addwfc	fsr1h,f,c
 17973                           
 17974                           ;stkvar	_days @ sp[(-57)+9]
 17975  012B68  0ED0               	movlw	-48
 17976  012B6A  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 17977  012B70  0ED1               	movlw	-47
 17978  012B72  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 17979  012B78  0ED2               	movlw	-46
 17980  012B7A  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 17981  012B80  0ED3               	movlw	-45
 17982  012B82  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 17983  012B88  0ED4               	movlw	-44
 17984  012B8A  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 17985  012B90  0ED5               	movlw	-43
 17986  012B92  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 17987  012B98  0ED6               	movlw	-42
 17988  012B9A  0060  F103  FFE3   	movff	btemp+22,plusw1
 17989  012BA0  0ED7               	movlw	-41
 17990  012BA2  0060  F107  FFE3   	movff	btemp+23,plusw1
 17991  012BA8  0E80               	movlw	128
 17992  012BAA  6EE6               	movwf	postinc1,c
 17993  012BAC  0E51               	movlw	81
 17994  012BAE  6EE6               	movwf	postinc1,c
 17995  012BB0  0E01               	movlw	1
 17996  012BB2  6EE6               	movwf	postinc1,c
 17997  012BB4  0E00               	movlw	0
 17998  012BB6  6EE6               	movwf	postinc1,c
 17999  012BB8  0E00               	movlw	0
 18000  012BBA  6EE6               	movwf	postinc1,c
 18001  012BBC  0E00               	movlw	0
 18002  012BBE  6EE6               	movwf	postinc1,c
 18003  012BC0  0E00               	movlw	0
 18004  012BC2  6EE6               	movwf	postinc1,c
 18005  012BC4  0E00               	movlw	0
 18006  012BC6  6EE6               	movwf	postinc1,c
 18007                           
 18008                           ;stkvar	_secs @ sp[(-65)+17]
 18009  012BC8  50E1               	movf	fsr1l,w,c
 18010  012BCA  0FD0               	addlw	-48
 18011  012BCC  6ED9               	movwf	fsr2l,c
 18012  012BCE  50E2               	movf	fsr1h,w,c
 18013  012BD0  6EDA               	movwf	fsr2h,c
 18014  012BD2  0EFF               	movlw	255
 18015  012BD4  22DA               	addwfc	fsr2h,f,c
 18016  012BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 18017  012BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 18018  012BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 18019  012BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 18020  012BEE  006F FF7B FFE6     	movff	postinc2,postinc1
 18021  012BF4  006F FF7B FFE6     	movff	postinc2,postinc1
 18022  012BFA  006F FF7B FFE6     	movff	postinc2,postinc1
 18023  012C00  006F FF7B FFE6     	movff	postinc2,postinc1
 18024  012C06  EC3C  F0E7         	call	___aomod	;wreg free
 18025  012C0A  52E5               	movf	postdec1,f,c
 18026  012C0C  006F FF9C  F041    	movff	indf1,btemp+23
 18027  012C12  52E5               	movf	postdec1,f,c
 18028  012C14  006F FF9C  F040    	movff	indf1,btemp+22
 18029  012C1A  52E5               	movf	postdec1,f,c
 18030  012C1C  006F FF9C  F03F    	movff	indf1,btemp+21
 18031  012C22  52E5               	movf	postdec1,f,c
 18032  012C24  006F FF9C  F03E    	movff	indf1,btemp+20
 18033  012C2A  52E5               	movf	postdec1,f,c
 18034  012C2C  006F FF9C  F03D    	movff	indf1,btemp+19
 18035  012C32  52E5               	movf	postdec1,f,c
 18036  012C34  006F FF9C  F03C    	movff	indf1,btemp+18
 18037  012C3A  52E5               	movf	postdec1,f,c
 18038  012C3C  006F FF9C  F03B    	movff	indf1,btemp+17
 18039  012C42  52E5               	movf	postdec1,f,c
 18040  012C44  006F FF9C  F03A    	movff	indf1,btemp+16
 18041  012C4A  0EF8               	movlw	248
 18042  012C4C  26E1               	addwf	fsr1l,f,c
 18043  012C4E  0EFF               	movlw	255
 18044  012C50  22E2               	addwfc	fsr1h,f,c
 18045  012C52  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18046  012C58  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18047  012C5E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18048  012C64  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18049                           
 18050                           ;stkvar	_remsecs @ sp[(-57)+41]
 18051  012C6A  0EF0               	movlw	-16
 18052  012C6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18053  012C72  0EF1               	movlw	-15
 18054  012C74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18055  012C7A  0EF2               	movlw	-14
 18056  012C7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18057  012C82  0EF3               	movlw	-13
 18058  012C84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18059                           
 18060                           ;stkvar	_remsecs @ sp[(-57)+41]
 18061  012C8A  0EF3               	movlw	-13
 18062  012C8C  AEE3               	btfss	plusw1,7,c
 18063  012C8E  D01F               	goto	l16760
 18064                           
 18065                           ;stkvar	_remsecs @ sp[(-57)+41]
 18066  012C90  50E1               	movf	fsr1l,w,c
 18067  012C92  0FF0               	addlw	-16
 18068  012C94  6ED9               	movwf	fsr2l,c
 18069  012C96  50E2               	movf	fsr1h,w,c
 18070  012C98  6EDA               	movwf	fsr2h,c
 18071  012C9A  0EFF               	movlw	255
 18072  012C9C  22DA               	addwfc	fsr2h,f,c
 18073  012C9E  0E80               	movlw	128
 18074  012CA0  26DE               	addwf	postinc2,f,c
 18075  012CA2  0E51               	movlw	81
 18076  012CA4  22DE               	addwfc	postinc2,f,c
 18077  012CA6  0E01               	movlw	1
 18078  012CA8  22DE               	addwfc	postinc2,f,c
 18079  012CAA  0E00               	movlw	0
 18080  012CAC  22DE               	addwfc	postinc2,f,c
 18081                           
 18082                           ;stkvar	_days @ sp[(-57)+9]
 18083  012CAE  50E1               	movf	fsr1l,w,c
 18084  012CB0  0FD0               	addlw	-48
 18085  012CB2  6ED9               	movwf	fsr2l,c
 18086  012CB4  50E2               	movf	fsr1h,w,c
 18087  012CB6  6EDA               	movwf	fsr2h,c
 18088  012CB8  0EFF               	movlw	255
 18089  012CBA  22DA               	addwfc	fsr2h,f,c
 18090  012CBC  06DE               	decf	postinc2,f,c
 18091  012CBE  0E00               	movlw	0
 18092  012CC0  5ADE               	subwfb	postinc2,f,c
 18093  012CC2  5ADE               	subwfb	postinc2,f,c
 18094  012CC4  5ADE               	subwfb	postinc2,f,c
 18095  012CC6  5ADE               	subwfb	postinc2,f,c
 18096  012CC8  5ADE               	subwfb	postinc2,f,c
 18097  012CCA  5ADE               	subwfb	postinc2,f,c
 18098  012CCC  5ADE               	subwfb	postinc2,f,c
 18099  012CCE                     l16760:
 18100  012CCE  0E07               	movlw	7
 18101  012CD0  6EE6               	movwf	postinc1,c
 18102  012CD2  0E00               	movlw	0
 18103  012CD4  6EE6               	movwf	postinc1,c
 18104  012CD6  0E00               	movlw	0
 18105  012CD8  6EE6               	movwf	postinc1,c
 18106  012CDA  0E00               	movlw	0
 18107  012CDC  6EE6               	movwf	postinc1,c
 18108  012CDE  0E00               	movlw	0
 18109  012CE0  6EE6               	movwf	postinc1,c
 18110  012CE2  0E00               	movlw	0
 18111  012CE4  6EE6               	movwf	postinc1,c
 18112  012CE6  0E00               	movlw	0
 18113  012CE8  6EE6               	movwf	postinc1,c
 18114  012CEA  0E00               	movlw	0
 18115  012CEC  6EE6               	movwf	postinc1,c
 18116                           
 18117                           ;stkvar	_days @ sp[(-65)+9]
 18118  012CEE  0EC8               	movlw	-56
 18119  012CF0  50E3               	movf	plusw1,w,c
 18120  012CF2  0F03               	addlw	3
 18121  012CF4  6E3A               	movwf	(btemp+16)^0,c
 18122  012CF6  0EC9               	movlw	-55
 18123  012CF8  006F FF8C  F03B    	movff	plusw1,btemp+17
 18124  012CFE  0E00               	movlw	0
 18125  012D00  223B               	addwfc	(btemp+17)^0,f,c
 18126  012D02  0ECA               	movlw	-54
 18127  012D04  006F FF8C  F03C    	movff	plusw1,btemp+18
 18128  012D0A  0E00               	movlw	0
 18129  012D0C  223C               	addwfc	(btemp+18)^0,f,c
 18130  012D0E  0ECB               	movlw	-53
 18131  012D10  006F FF8C  F03D    	movff	plusw1,btemp+19
 18132  012D16  0E00               	movlw	0
 18133  012D18  223D               	addwfc	(btemp+19)^0,f,c
 18134  012D1A  0ECC               	movlw	-52
 18135  012D1C  006F FF8C  F03E    	movff	plusw1,btemp+20
 18136  012D22  0E00               	movlw	0
 18137  012D24  223E               	addwfc	(btemp+20)^0,f,c
 18138  012D26  0ECD               	movlw	-51
 18139  012D28  006F FF8C  F03F    	movff	plusw1,btemp+21
 18140  012D2E  0E00               	movlw	0
 18141  012D30  223F               	addwfc	(btemp+21)^0,f,c
 18142  012D32  0ECE               	movlw	-50
 18143  012D34  006F FF8C  F040    	movff	plusw1,btemp+22
 18144  012D3A  0E00               	movlw	0
 18145  012D3C  2240               	addwfc	(btemp+22)^0,f,c
 18146  012D3E  0ECF               	movlw	-49
 18147  012D40  006F FF8C  F041    	movff	plusw1,btemp+23
 18148  012D46  0E00               	movlw	0
 18149  012D48  2241               	addwfc	(btemp+23)^0,f,c
 18150  012D4A  0060  F0EB  FFE6   	movff	btemp+16,postinc1
 18151  012D50  0060  F0EF  FFE6   	movff	btemp+17,postinc1
 18152  012D56  0060  F0F3  FFE6   	movff	btemp+18,postinc1
 18153  012D5C  0060  F0F7  FFE6   	movff	btemp+19,postinc1
 18154  012D62  0060  F0FB  FFE6   	movff	btemp+20,postinc1
 18155  012D68  0060  F0FF  FFE6   	movff	btemp+21,postinc1
 18156  012D6E  0060  F103  FFE6   	movff	btemp+22,postinc1
 18157  012D74  0060  F107  FFE6   	movff	btemp+23,postinc1
 18158  012D7A  EC3C  F0E7         	call	___aomod	;wreg free
 18159  012D7E  52E5               	movf	postdec1,f,c
 18160  012D80  006F FF9C  F041    	movff	indf1,btemp+23
 18161  012D86  52E5               	movf	postdec1,f,c
 18162  012D88  006F FF9C  F040    	movff	indf1,btemp+22
 18163  012D8E  52E5               	movf	postdec1,f,c
 18164  012D90  006F FF9C  F03F    	movff	indf1,btemp+21
 18165  012D96  52E5               	movf	postdec1,f,c
 18166  012D98  006F FF9C  F03E    	movff	indf1,btemp+20
 18167  012D9E  52E5               	movf	postdec1,f,c
 18168  012DA0  006F FF9C  F03D    	movff	indf1,btemp+19
 18169  012DA6  52E5               	movf	postdec1,f,c
 18170  012DA8  006F FF9C  F03C    	movff	indf1,btemp+18
 18171  012DAE  52E5               	movf	postdec1,f,c
 18172  012DB0  006F FF9C  F03B    	movff	indf1,btemp+17
 18173  012DB6  52E5               	movf	postdec1,f,c
 18174  012DB8  006F FF9C  F03A    	movff	indf1,btemp+16
 18175  012DBE  0EF8               	movlw	248
 18176  012DC0  26E1               	addwf	fsr1l,f,c
 18177  012DC2  0EFF               	movlw	255
 18178  012DC4  22E2               	addwfc	fsr1h,f,c
 18179  012DC6  0060  F0E8  F034   	movff	btemp+16,btemp+10
 18180  012DCC  0060  F0EC  F035   	movff	btemp+17,btemp+11
 18181                           
 18182                           ;stkvar	_wday @ sp[(-57)+55]
 18183  012DD2  0EFE               	movlw	-2
 18184  012DD4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18185  012DDA  0EFF               	movlw	-1
 18186  012DDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18187                           
 18188                           ;stkvar	_wday @ sp[(-57)+55]
 18189  012DE2  0EFF               	movlw	-1
 18190  012DE4  AEE3               	btfss	plusw1,7,c
 18191  012DE6  D011               	goto	l16766
 18192                           
 18193                           ;stkvar	_wday @ sp[(-57)+55]
 18194  012DE8  0EFE               	movlw	-2
 18195  012DEA  50E3               	movf	plusw1,w,c
 18196  012DEC  0F07               	addlw	7
 18197  012DEE  6E2A               	movwf	btemp^0,c
 18198  012DF0  0EFE               	movlw	-2
 18199  012DF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18200  012DF8  6A2A               	clrf	btemp^0,c
 18201  012DFA  0EFF               	movlw	-1
 18202  012DFC  50E3               	movf	plusw1,w,c
 18203  012DFE  202A               	addwfc	btemp^0,w,c
 18204  012E00  6E2A               	movwf	btemp^0,c
 18205  012E02  0EFF               	movlw	-1
 18206  012E04  0060  F0AB  FFE3   	movff	btemp,plusw1
 18207  012E0A                     l16766:
 18208  012E0A  0EB1               	movlw	177
 18209  012E0C  6EE6               	movwf	postinc1,c
 18210  012E0E  0E3A               	movlw	58
 18211  012E10  6EE6               	movwf	postinc1,c
 18212  012E12  0E02               	movlw	2
 18213  012E14  6EE6               	movwf	postinc1,c
 18214  012E16  0E00               	movlw	0
 18215  012E18  6EE6               	movwf	postinc1,c
 18216  012E1A  0E00               	movlw	0
 18217  012E1C  6EE6               	movwf	postinc1,c
 18218  012E1E  0E00               	movlw	0
 18219  012E20  6EE6               	movwf	postinc1,c
 18220  012E22  0E00               	movlw	0
 18221  012E24  6EE6               	movwf	postinc1,c
 18222  012E26  0E00               	movlw	0
 18223  012E28  6EE6               	movwf	postinc1,c
 18224                           
 18225                           ;stkvar	_days @ sp[(-65)+9]
 18226  012E2A  50E1               	movf	fsr1l,w,c
 18227  012E2C  0FC8               	addlw	-56
 18228  012E2E  6ED9               	movwf	fsr2l,c
 18229  012E30  50E2               	movf	fsr1h,w,c
 18230  012E32  6EDA               	movwf	fsr2h,c
 18231  012E34  0EFF               	movlw	255
 18232  012E36  22DA               	addwfc	fsr2h,f,c
 18233  012E38  006F FF7B FFE6     	movff	postinc2,postinc1
 18234  012E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18235  012E44  006F FF7B FFE6     	movff	postinc2,postinc1
 18236  012E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 18237  012E50  006F FF7B FFE6     	movff	postinc2,postinc1
 18238  012E56  006F FF7B FFE6     	movff	postinc2,postinc1
 18239  012E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 18240  012E62  006F FF7B FFE6     	movff	postinc2,postinc1
 18241  012E68  EC7D  F0E2         	call	___aodiv	;wreg free
 18242  012E6C  52E5               	movf	postdec1,f,c
 18243  012E6E  006F FF9C  F041    	movff	indf1,btemp+23
 18244  012E74  52E5               	movf	postdec1,f,c
 18245  012E76  006F FF9C  F040    	movff	indf1,btemp+22
 18246  012E7C  52E5               	movf	postdec1,f,c
 18247  012E7E  006F FF9C  F03F    	movff	indf1,btemp+21
 18248  012E84  52E5               	movf	postdec1,f,c
 18249  012E86  006F FF9C  F03E    	movff	indf1,btemp+20
 18250  012E8C  52E5               	movf	postdec1,f,c
 18251  012E8E  006F FF9C  F03D    	movff	indf1,btemp+19
 18252  012E94  52E5               	movf	postdec1,f,c
 18253  012E96  006F FF9C  F03C    	movff	indf1,btemp+18
 18254  012E9C  52E5               	movf	postdec1,f,c
 18255  012E9E  006F FF9C  F03B    	movff	indf1,btemp+17
 18256  012EA4  52E5               	movf	postdec1,f,c
 18257  012EA6  006F FF9C  F03A    	movff	indf1,btemp+16
 18258  012EAC  0EF8               	movlw	248
 18259  012EAE  26E1               	addwf	fsr1l,f,c
 18260  012EB0  0EFF               	movlw	255
 18261  012EB2  22E2               	addwfc	fsr1h,f,c
 18262  012EB4  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18263  012EBA  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18264  012EC0  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18265  012EC6  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18266                           
 18267                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 18268  012ECC  0EF4               	movlw	-12
 18269  012ECE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18270  012ED4  0EF5               	movlw	-11
 18271  012ED6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18272  012EDC  0EF6               	movlw	-10
 18273  012EDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18274  012EE4  0EF7               	movlw	-9
 18275  012EE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18276  012EEC  0EB1               	movlw	177
 18277  012EEE  6EE6               	movwf	postinc1,c
 18278  012EF0  0E3A               	movlw	58
 18279  012EF2  6EE6               	movwf	postinc1,c
 18280  012EF4  0E02               	movlw	2
 18281  012EF6  6EE6               	movwf	postinc1,c
 18282  012EF8  0E00               	movlw	0
 18283  012EFA  6EE6               	movwf	postinc1,c
 18284  012EFC  0E00               	movlw	0
 18285  012EFE  6EE6               	movwf	postinc1,c
 18286  012F00  0E00               	movlw	0
 18287  012F02  6EE6               	movwf	postinc1,c
 18288  012F04  0E00               	movlw	0
 18289  012F06  6EE6               	movwf	postinc1,c
 18290  012F08  0E00               	movlw	0
 18291  012F0A  6EE6               	movwf	postinc1,c
 18292                           
 18293                           ;stkvar	_days @ sp[(-65)+9]
 18294  012F0C  50E1               	movf	fsr1l,w,c
 18295  012F0E  0FC8               	addlw	-56
 18296  012F10  6ED9               	movwf	fsr2l,c
 18297  012F12  50E2               	movf	fsr1h,w,c
 18298  012F14  6EDA               	movwf	fsr2h,c
 18299  012F16  0EFF               	movlw	255
 18300  012F18  22DA               	addwfc	fsr2h,f,c
 18301  012F1A  006F FF7B FFE6     	movff	postinc2,postinc1
 18302  012F20  006F FF7B FFE6     	movff	postinc2,postinc1
 18303  012F26  006F FF7B FFE6     	movff	postinc2,postinc1
 18304  012F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 18305  012F32  006F FF7B FFE6     	movff	postinc2,postinc1
 18306  012F38  006F FF7B FFE6     	movff	postinc2,postinc1
 18307  012F3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18308  012F44  006F FF7B FFE6     	movff	postinc2,postinc1
 18309  012F4A  EC3C  F0E7         	call	___aomod	;wreg free
 18310  012F4E  52E5               	movf	postdec1,f,c
 18311  012F50  006F FF9C  F041    	movff	indf1,btemp+23
 18312  012F56  52E5               	movf	postdec1,f,c
 18313  012F58  006F FF9C  F040    	movff	indf1,btemp+22
 18314  012F5E  52E5               	movf	postdec1,f,c
 18315  012F60  006F FF9C  F03F    	movff	indf1,btemp+21
 18316  012F66  52E5               	movf	postdec1,f,c
 18317  012F68  006F FF9C  F03E    	movff	indf1,btemp+20
 18318  012F6E  52E5               	movf	postdec1,f,c
 18319  012F70  006F FF9C  F03D    	movff	indf1,btemp+19
 18320  012F76  52E5               	movf	postdec1,f,c
 18321  012F78  006F FF9C  F03C    	movff	indf1,btemp+18
 18322  012F7E  52E5               	movf	postdec1,f,c
 18323  012F80  006F FF9C  F03B    	movff	indf1,btemp+17
 18324  012F86  52E5               	movf	postdec1,f,c
 18325  012F88  006F FF9C  F03A    	movff	indf1,btemp+16
 18326  012F8E  0EF8               	movlw	248
 18327  012F90  26E1               	addwf	fsr1l,f,c
 18328  012F92  0EFF               	movlw	255
 18329  012F94  22E2               	addwfc	fsr1h,f,c
 18330  012F96  0060  F0E8  F032   	movff	btemp+16,btemp+8
 18331  012F9C  0060  F0EC  F033   	movff	btemp+17,btemp+9
 18332  012FA2  0060  F0F0  F034   	movff	btemp+18,btemp+10
 18333  012FA8  0060  F0F4  F035   	movff	btemp+19,btemp+11
 18334                           
 18335                           ;stkvar	_remdays @ sp[(-57)+25]
 18336  012FAE  0EE0               	movlw	-32
 18337  012FB0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18338  012FB6  0EE1               	movlw	-31
 18339  012FB8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18340  012FBE  0EE2               	movlw	-30
 18341  012FC0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18342  012FC6  0EE3               	movlw	-29
 18343  012FC8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18344                           
 18345                           ;stkvar	_remdays @ sp[(-57)+25]
 18346  012FCE  0EE3               	movlw	-29
 18347  012FD0  AEE3               	btfss	plusw1,7,c
 18348  012FD2  D01B               	goto	l16774
 18349                           
 18350                           ;stkvar	_remdays @ sp[(-57)+25]
 18351  012FD4  50E1               	movf	fsr1l,w,c
 18352  012FD6  0FE0               	addlw	-32
 18353  012FD8  6ED9               	movwf	fsr2l,c
 18354  012FDA  50E2               	movf	fsr1h,w,c
 18355  012FDC  6EDA               	movwf	fsr2h,c
 18356  012FDE  0EFF               	movlw	255
 18357  012FE0  22DA               	addwfc	fsr2h,f,c
 18358  012FE2  0EB1               	movlw	177
 18359  012FE4  26DE               	addwf	postinc2,f,c
 18360  012FE6  0E3A               	movlw	58
 18361  012FE8  22DE               	addwfc	postinc2,f,c
 18362  012FEA  0E02               	movlw	2
 18363  012FEC  22DE               	addwfc	postinc2,f,c
 18364  012FEE  0E00               	movlw	0
 18365  012FF0  22DE               	addwfc	postinc2,f,c
 18366                           
 18367                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 18368  012FF2  50E1               	movf	fsr1l,w,c
 18369  012FF4  0FF4               	addlw	-12
 18370  012FF6  6ED9               	movwf	fsr2l,c
 18371  012FF8  50E2               	movf	fsr1h,w,c
 18372  012FFA  6EDA               	movwf	fsr2h,c
 18373  012FFC  0EFF               	movlw	255
 18374  012FFE  22DA               	addwfc	fsr2h,f,c
 18375  013000  06DE               	decf	postinc2,f,c
 18376  013002  0E00               	movlw	0
 18377  013004  5ADE               	subwfb	postinc2,f,c
 18378  013006  5ADE               	subwfb	postinc2,f,c
 18379  013008  5ADE               	subwfb	postinc2,f,c
 18380  01300A                     l16774:
 18381  01300A  0EAC               	movlw	172
 18382  01300C  6EE6               	movwf	postinc1,c
 18383  01300E  0E8E               	movlw	142
 18384  013010  6EE6               	movwf	postinc1,c
 18385  013012  0E00               	movlw	0
 18386  013014  6EE6               	movwf	postinc1,c
 18387  013016  0E00               	movlw	0
 18388  013018  6EE6               	movwf	postinc1,c
 18389                           
 18390                           ;stkvar	_remdays @ sp[(-61)+25]
 18391  01301A  0EDC               	movlw	-36
 18392  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 18393  013022  006F FF8F FFE6     	movff	plusw1,postinc1
 18394  013028  006F FF8F FFE6     	movff	plusw1,postinc1
 18395  01302E  006F FF8F FFE6     	movff	plusw1,postinc1
 18396  013034  ECFC  F0F0         	call	___aldiv	;wreg free
 18397                           
 18398                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18399  013038  0EE8               	movlw	-24
 18400  01303A  0060  F0AB  FFE3   	movff	btemp,plusw1
 18401  013040  0EE9               	movlw	-23
 18402  013042  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18403  013048  0EEA               	movlw	-22
 18404  01304A  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18405  013050  0EEB               	movlw	-21
 18406  013052  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18407                           
 18408                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18409  013058  0EE8               	movlw	-24
 18410  01305A  006F FF8C  F02A    	movff	plusw1,btemp
 18411  013060  0E04               	movlw	4
 18412  013062  182A               	xorwf	btemp^0,w,c
 18413  013064  E116               	bnz	l16780
 18414  013066  0EE9               	movlw	-23
 18415  013068  50E3               	movf	plusw1,w,c
 18416  01306A  E113               	bnz	l16780
 18417  01306C  0EEA               	movlw	-22
 18418  01306E  50E3               	movf	plusw1,w,c
 18419  013070  E110               	bnz	l16780
 18420  013072  0EEB               	movlw	-21
 18421  013074  50E3               	movf	plusw1,w,c
 18422  013076  A4D8               	btfss	status,2,c
 18423  013078  D00C               	goto	l16780
 18424                           
 18425                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18426  01307A  50E1               	movf	fsr1l,w,c
 18427  01307C  0FE8               	addlw	-24
 18428  01307E  6ED9               	movwf	fsr2l,c
 18429  013080  50E2               	movf	fsr1h,w,c
 18430  013082  6EDA               	movwf	fsr2h,c
 18431  013084  0EFF               	movlw	255
 18432  013086  22DA               	addwfc	fsr2h,f,c
 18433  013088  06DE               	decf	postinc2,f,c
 18434  01308A  0E00               	movlw	0
 18435  01308C  5ADE               	subwfb	postinc2,f,c
 18436  01308E  5ADE               	subwfb	postinc2,f,c
 18437  013090  5ADE               	subwfb	postinc2,f,c
 18438  013092                     l16780:
 18439  013092  0EAC               	movlw	172
 18440  013094  6EE6               	movwf	postinc1,c
 18441  013096  0E8E               	movlw	142
 18442  013098  6EE6               	movwf	postinc1,c
 18443  01309A  0E00               	movlw	0
 18444  01309C  6EE6               	movwf	postinc1,c
 18445  01309E  0E00               	movlw	0
 18446  0130A0  6EE6               	movwf	postinc1,c
 18447                           
 18448                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18449  0130A2  0EE4               	movlw	-28
 18450  0130A4  006F FF8F FFE6     	movff	plusw1,postinc1
 18451  0130AA  006F FF8F FFE6     	movff	plusw1,postinc1
 18452  0130B0  006F FF8F FFE6     	movff	plusw1,postinc1
 18453  0130B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18454  0130BC  ECAC  F002         	call	___lmul	;wreg free
 18455                           
 18456                           ;stkvar	_remdays @ sp[(-57)+25]
 18457  0130C0  50E1               	movf	fsr1l,w,c
 18458  0130C2  0FE0               	addlw	-32
 18459  0130C4  6ED9               	movwf	fsr2l,c
 18460  0130C6  50E2               	movf	fsr1h,w,c
 18461  0130C8  6EDA               	movwf	fsr2h,c
 18462  0130CA  0EFF               	movlw	255
 18463  0130CC  22DA               	addwfc	fsr2h,f,c
 18464  0130CE  502A               	movf	btemp^0,w,c
 18465  0130D0  5EDE               	subwf	postinc2,f,c
 18466  0130D2  502B               	movf	(btemp+1)^0,w,c
 18467  0130D4  5ADE               	subwfb	postinc2,f,c
 18468  0130D6  502C               	movf	(btemp+2)^0,w,c
 18469  0130D8  5ADE               	subwfb	postinc2,f,c
 18470  0130DA  502D               	movf	(btemp+3)^0,w,c
 18471  0130DC  5ADE               	subwfb	postinc2,f,c
 18472  0130DE  0EB5               	movlw	181
 18473  0130E0  6EE6               	movwf	postinc1,c
 18474  0130E2  0E05               	movlw	5
 18475  0130E4  6EE6               	movwf	postinc1,c
 18476  0130E6  0E00               	movlw	0
 18477  0130E8  6EE6               	movwf	postinc1,c
 18478  0130EA  0E00               	movlw	0
 18479  0130EC  6EE6               	movwf	postinc1,c
 18480                           
 18481                           ;stkvar	_remdays @ sp[(-61)+25]
 18482  0130EE  0EDC               	movlw	-36
 18483  0130F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18484  0130F6  006F FF8F FFE6     	movff	plusw1,postinc1
 18485  0130FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18486  013102  006F FF8F FFE6     	movff	plusw1,postinc1
 18487  013108  ECFC  F0F0         	call	___aldiv	;wreg free
 18488                           
 18489                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18490  01310C  0EE4               	movlw	-28
 18491  01310E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18492  013114  0EE5               	movlw	-27
 18493  013116  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18494  01311C  0EE6               	movlw	-26
 18495  01311E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18496  013124  0EE7               	movlw	-25
 18497  013126  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18498                           
 18499                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18500  01312C  0EE4               	movlw	-28
 18501  01312E  006F FF8C  F02A    	movff	plusw1,btemp
 18502  013134  0E19               	movlw	25
 18503  013136  182A               	xorwf	btemp^0,w,c
 18504  013138  E116               	bnz	l16788
 18505  01313A  0EE5               	movlw	-27
 18506  01313C  50E3               	movf	plusw1,w,c
 18507  01313E  E113               	bnz	l16788
 18508  013140  0EE6               	movlw	-26
 18509  013142  50E3               	movf	plusw1,w,c
 18510  013144  E110               	bnz	l16788
 18511  013146  0EE7               	movlw	-25
 18512  013148  50E3               	movf	plusw1,w,c
 18513  01314A  A4D8               	btfss	status,2,c
 18514  01314C  D00C               	goto	l16788
 18515                           
 18516                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18517  01314E  50E1               	movf	fsr1l,w,c
 18518  013150  0FE4               	addlw	-28
 18519  013152  6ED9               	movwf	fsr2l,c
 18520  013154  50E2               	movf	fsr1h,w,c
 18521  013156  6EDA               	movwf	fsr2h,c
 18522  013158  0EFF               	movlw	255
 18523  01315A  22DA               	addwfc	fsr2h,f,c
 18524  01315C  06DE               	decf	postinc2,f,c
 18525  01315E  0E00               	movlw	0
 18526  013160  5ADE               	subwfb	postinc2,f,c
 18527  013162  5ADE               	subwfb	postinc2,f,c
 18528  013164  5ADE               	subwfb	postinc2,f,c
 18529  013166                     l16788:
 18530  013166  0EB5               	movlw	181
 18531  013168  6EE6               	movwf	postinc1,c
 18532  01316A  0E05               	movlw	5
 18533  01316C  6EE6               	movwf	postinc1,c
 18534  01316E  0E00               	movlw	0
 18535  013170  6EE6               	movwf	postinc1,c
 18536  013172  0E00               	movlw	0
 18537  013174  6EE6               	movwf	postinc1,c
 18538                           
 18539                           ;stkvar	_q_cycles @ sp[(-61)+29]
 18540  013176  0EE0               	movlw	-32
 18541  013178  006F FF8F FFE6     	movff	plusw1,postinc1
 18542  01317E  006F FF8F FFE6     	movff	plusw1,postinc1
 18543  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 18544  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 18545  013190  ECAC  F002         	call	___lmul	;wreg free
 18546                           
 18547                           ;stkvar	_remdays @ sp[(-57)+25]
 18548  013194  50E1               	movf	fsr1l,w,c
 18549  013196  0FE0               	addlw	-32
 18550  013198  6ED9               	movwf	fsr2l,c
 18551  01319A  50E2               	movf	fsr1h,w,c
 18552  01319C  6EDA               	movwf	fsr2h,c
 18553  01319E  0EFF               	movlw	255
 18554  0131A0  22DA               	addwfc	fsr2h,f,c
 18555  0131A2  502A               	movf	btemp^0,w,c
 18556  0131A4  5EDE               	subwf	postinc2,f,c
 18557  0131A6  502B               	movf	(btemp+1)^0,w,c
 18558  0131A8  5ADE               	subwfb	postinc2,f,c
 18559  0131AA  502C               	movf	(btemp+2)^0,w,c
 18560  0131AC  5ADE               	subwfb	postinc2,f,c
 18561  0131AE  502D               	movf	(btemp+3)^0,w,c
 18562  0131B0  5ADE               	subwfb	postinc2,f,c
 18563  0131B2  0E6D               	movlw	109
 18564  0131B4  6EE6               	movwf	postinc1,c
 18565  0131B6  0E01               	movlw	1
 18566  0131B8  6EE6               	movwf	postinc1,c
 18567  0131BA  0E00               	movlw	0
 18568  0131BC  6EE6               	movwf	postinc1,c
 18569  0131BE  0E00               	movlw	0
 18570  0131C0  6EE6               	movwf	postinc1,c
 18571                           
 18572                           ;stkvar	_remdays @ sp[(-61)+25]
 18573  0131C2  0EDC               	movlw	-36
 18574  0131C4  006F FF8F FFE6     	movff	plusw1,postinc1
 18575  0131CA  006F FF8F FFE6     	movff	plusw1,postinc1
 18576  0131D0  006F FF8F FFE6     	movff	plusw1,postinc1
 18577  0131D6  006F FF8F FFE6     	movff	plusw1,postinc1
 18578  0131DC  ECFC  F0F0         	call	___aldiv	;wreg free
 18579                           
 18580                           ;stkvar	_remyears @ sp[(-57)+37]
 18581  0131E0  0EEC               	movlw	-20
 18582  0131E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 18583  0131E8  0EED               	movlw	-19
 18584  0131EA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 18585  0131F0  0EEE               	movlw	-18
 18586  0131F2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 18587  0131F8  0EEF               	movlw	-17
 18588  0131FA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 18589                           
 18590                           ;stkvar	_remyears @ sp[(-57)+37]
 18591  013200  0EEC               	movlw	-20
 18592  013202  006F FF8C  F02A    	movff	plusw1,btemp
 18593  013208  0E04               	movlw	4
 18594  01320A  182A               	xorwf	btemp^0,w,c
 18595  01320C  E116               	bnz	l16796
 18596  01320E  0EED               	movlw	-19
 18597  013210  50E3               	movf	plusw1,w,c
 18598  013212  E113               	bnz	l16796
 18599  013214  0EEE               	movlw	-18
 18600  013216  50E3               	movf	plusw1,w,c
 18601  013218  E110               	bnz	l16796
 18602  01321A  0EEF               	movlw	-17
 18603  01321C  50E3               	movf	plusw1,w,c
 18604  01321E  A4D8               	btfss	status,2,c
 18605  013220  D00C               	goto	l16796
 18606                           
 18607                           ;stkvar	_remyears @ sp[(-57)+37]
 18608  013222  50E1               	movf	fsr1l,w,c
 18609  013224  0FEC               	addlw	-20
 18610  013226  6ED9               	movwf	fsr2l,c
 18611  013228  50E2               	movf	fsr1h,w,c
 18612  01322A  6EDA               	movwf	fsr2h,c
 18613  01322C  0EFF               	movlw	255
 18614  01322E  22DA               	addwfc	fsr2h,f,c
 18615  013230  06DE               	decf	postinc2,f,c
 18616  013232  0E00               	movlw	0
 18617  013234  5ADE               	subwfb	postinc2,f,c
 18618  013236  5ADE               	subwfb	postinc2,f,c
 18619  013238  5ADE               	subwfb	postinc2,f,c
 18620  01323A                     l16796:
 18621  01323A  0E6D               	movlw	109
 18622  01323C  6EE6               	movwf	postinc1,c
 18623  01323E  0E01               	movlw	1
 18624  013240  6EE6               	movwf	postinc1,c
 18625  013242  0E00               	movlw	0
 18626  013244  6EE6               	movwf	postinc1,c
 18627  013246  0E00               	movlw	0
 18628  013248  6EE6               	movwf	postinc1,c
 18629                           
 18630                           ;stkvar	_remyears @ sp[(-61)+37]
 18631  01324A  0EE8               	movlw	-24
 18632  01324C  006F FF8F FFE6     	movff	plusw1,postinc1
 18633  013252  006F FF8F FFE6     	movff	plusw1,postinc1
 18634  013258  006F FF8F FFE6     	movff	plusw1,postinc1
 18635  01325E  006F FF8F FFE6     	movff	plusw1,postinc1
 18636  013264  ECAC  F002         	call	___lmul	;wreg free
 18637                           
 18638                           ;stkvar	_remdays @ sp[(-57)+25]
 18639  013268  50E1               	movf	fsr1l,w,c
 18640  01326A  0FE0               	addlw	-32
 18641  01326C  6ED9               	movwf	fsr2l,c
 18642  01326E  50E2               	movf	fsr1h,w,c
 18643  013270  6EDA               	movwf	fsr2h,c
 18644  013272  0EFF               	movlw	255
 18645  013274  22DA               	addwfc	fsr2h,f,c
 18646  013276  502A               	movf	btemp^0,w,c
 18647  013278  5EDE               	subwf	postinc2,f,c
 18648  01327A  502B               	movf	(btemp+1)^0,w,c
 18649  01327C  5ADE               	subwfb	postinc2,f,c
 18650  01327E  502C               	movf	(btemp+2)^0,w,c
 18651  013280  5ADE               	subwfb	postinc2,f,c
 18652  013282  502D               	movf	(btemp+3)^0,w,c
 18653  013284  5ADE               	subwfb	postinc2,f,c
 18654                           
 18655                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18656  013286  0EC7               	movlw	-57
 18657  013288  6AE3               	clrf	plusw1,c
 18658                           
 18659                           ;stkvar	_remyears @ sp[(-57)+37]
 18660  01328A  0EEC               	movlw	-20
 18661  01328C  50E3               	movf	plusw1,w,c
 18662  01328E  E127               	bnz	l16808
 18663  013290  0EED               	movlw	-19
 18664  013292  50E3               	movf	plusw1,w,c
 18665  013294  E124               	bnz	l16808
 18666  013296  0EEE               	movlw	-18
 18667  013298  50E3               	movf	plusw1,w,c
 18668  01329A  E121               	bnz	l16808
 18669  01329C  0EEF               	movlw	-17
 18670  01329E  50E3               	movf	plusw1,w,c
 18671  0132A0  A4D8               	btfss	status,2,c
 18672  0132A2  D01D               	goto	l16808
 18673                           
 18674                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18675  0132A4  0EE4               	movlw	-28
 18676  0132A6  50E3               	movf	plusw1,w,c
 18677  0132A8  E117               	bnz	l16806
 18678  0132AA  0EE5               	movlw	-27
 18679  0132AC  50E3               	movf	plusw1,w,c
 18680  0132AE  E114               	bnz	l16806
 18681  0132B0  0EE6               	movlw	-26
 18682  0132B2  50E3               	movf	plusw1,w,c
 18683  0132B4  E111               	bnz	l16806
 18684  0132B6  0EE7               	movlw	-25
 18685  0132B8  50E3               	movf	plusw1,w,c
 18686  0132BA  A4D8               	btfss	status,2,c
 18687  0132BC  D00D               	goto	u16420
 18688                           
 18689                           ;stkvar	_c_cycles @ sp[(-57)+33]
 18690  0132BE  0EE8               	movlw	-24
 18691  0132C0  50E3               	movf	plusw1,w,c
 18692  0132C2  E10D               	bnz	l16808
 18693  0132C4  0EE9               	movlw	-23
 18694  0132C6  50E3               	movf	plusw1,w,c
 18695  0132C8  E10A               	bnz	l16808
 18696  0132CA  0EEA               	movlw	-22
 18697  0132CC  50E3               	movf	plusw1,w,c
 18698  0132CE  E107               	bnz	l16808
 18699  0132D0  0EEB               	movlw	-21
 18700  0132D2  50E3               	movf	plusw1,w,c
 18701  0132D4  A4D8               	btfss	status,2,c
 18702  0132D6  D003               	goto	l16808
 18703  0132D8                     u16420:
 18704  0132D8                     l16806:
 18705                           
 18706                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18707  0132D8  0EC7               	movlw	-57
 18708  0132DA  6AE3               	clrf	plusw1,c
 18709  0132DC  2AE3               	incf	plusw1,f,c
 18710  0132DE                     l16808:
 18711                           
 18712                           ;stkvar	___secs_to_tm$7627 @ sp[(-57)+0]
 18713  0132DE  0EC7               	movlw	-57
 18714  0132E0  50E3               	movf	plusw1,w,c
 18715  0132E2  6E34               	movwf	(btemp+10)^0,c
 18716  0132E4  6A35               	clrf	(btemp+11)^0,c
 18717                           
 18718                           ;stkvar	_leap @ sp[(-57)+51]
 18719  0132E6  0EFA               	movlw	-6
 18720  0132E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18721  0132EE  0EFB               	movlw	-5
 18722  0132F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18723                           
 18724                           ;stkvar	_remdays @ sp[(-57)+25]
 18725                           ;stkvar	_leap @ sp[(-57)+51]
 18726  0132F6  0EFA               	movlw	-6
 18727  0132F8  006F FF8C  F034    	movff	plusw1,btemp+10
 18728  0132FE  0EFB               	movlw	-5
 18729  013300  006F FF8C  F035    	movff	plusw1,btemp+11
 18730  013306  0EE0               	movlw	-32
 18731  013308  50E3               	movf	plusw1,w,c
 18732  01330A  2634               	addwf	(btemp+10)^0,f,c
 18733  01330C  0EE1               	movlw	-31
 18734  01330E  50E3               	movf	plusw1,w,c
 18735  013310  2235               	addwfc	(btemp+11)^0,f,c
 18736  013312  0E3B               	movlw	59
 18737  013314  2634               	addwf	(btemp+10)^0,f,c
 18738  013316  0E00               	movlw	0
 18739  013318  2235               	addwfc	(btemp+11)^0,f,c
 18740                           
 18741                           ;stkvar	_yday @ sp[(-57)+53]
 18742  01331A  0EFC               	movlw	-4
 18743  01331C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18744  013322  0EFD               	movlw	-3
 18745  013324  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18746                           
 18747                           ;stkvar	_leap @ sp[(-57)+51]
 18748  01332A  0EFA               	movlw	-6
 18749  01332C  50E3               	movf	plusw1,w,c
 18750  01332E  0F6D               	addlw	109
 18751  013330  6E34               	movwf	(btemp+10)^0,c
 18752  013332  0EFB               	movlw	-5
 18753  013334  006F FF8C  F035    	movff	plusw1,btemp+11
 18754  01333A  0E01               	movlw	1
 18755  01333C  2235               	addwfc	(btemp+11)^0,f,c
 18756                           
 18757                           ;stkvar	_yday @ sp[(-57)+53]
 18758  01333E  0EFC               	movlw	-4
 18759  013340  006F FF8C  F02A    	movff	plusw1,btemp
 18760  013346  5034               	movf	(btemp+10)^0,w,c
 18761  013348  5C2A               	subwf	btemp^0,w,c
 18762  01334A  0EFD               	movlw	-3
 18763  01334C  50E3               	movf	plusw1,w,c
 18764  01334E  0A80               	xorlw	128
 18765  013350  6E2A               	movwf	btemp^0,c
 18766  013352  5035               	movf	(btemp+11)^0,w,c
 18767  013354  0A80               	xorlw	128
 18768  013356  582A               	subwfb	btemp^0,w,c
 18769  013358  A0D8               	btfss	status,0,c
 18770  01335A  D01E               	goto	l16816
 18771                           
 18772                           ;stkvar	_leap @ sp[(-57)+51]
 18773  01335C  0EFA               	movlw	-6
 18774  01335E  50E3               	movf	plusw1,w,c
 18775  013360  0F6D               	addlw	109
 18776  013362  6E34               	movwf	(btemp+10)^0,c
 18777  013364  0EFB               	movlw	-5
 18778  013366  006F FF8C  F035    	movff	plusw1,btemp+11
 18779  01336C  0E01               	movlw	1
 18780  01336E  2235               	addwfc	(btemp+11)^0,f,c
 18781                           
 18782                           ;stkvar	_yday @ sp[(-57)+53]
 18783  013370  0EFC               	movlw	-4
 18784  013372  006F FF8C  F02A    	movff	plusw1,btemp
 18785  013378  5034               	movf	(btemp+10)^0,w,c
 18786  01337A  5E2A               	subwf	btemp^0,f,c
 18787  01337C  0EFC               	movlw	-4
 18788  01337E  0060  F0AB  FFE3   	movff	btemp,plusw1
 18789  013384  0EFD               	movlw	-3
 18790  013386  006F FF8C  F02A    	movff	plusw1,btemp
 18791  01338C  5035               	movf	(btemp+11)^0,w,c
 18792  01338E  5A2A               	subwfb	btemp^0,f,c
 18793  013390  0EFD               	movlw	-3
 18794  013392  0060  F0AB  FFE3   	movff	btemp,plusw1
 18795  013398                     l16816:
 18796                           
 18797                           ;stkvar	_remyears @ sp[(-57)+37]
 18798                           ;stkvar	_q_cycles @ sp[(-57)+29]
 18799  013398  0EE4               	movlw	-28
 18800  01339A  006F FF8C  F032    	movff	plusw1,btemp+8
 18801  0133A0  0EE5               	movlw	-27
 18802  0133A2  006F FF8C  F033    	movff	plusw1,btemp+9
 18803  0133A8  0EE6               	movlw	-26
 18804  0133AA  006F FF8C  F034    	movff	plusw1,btemp+10
 18805  0133B0  0EE7               	movlw	-25
 18806  0133B2  006F FF8C  F035    	movff	plusw1,btemp+11
 18807  0133B8  0E02               	movlw	2
 18808  0133BA                     u16445:
 18809  0133BA  90D8               	bcf	status,0,c
 18810  0133BC  3632               	rlcf	(btemp+8)^0,f,c
 18811  0133BE  3633               	rlcf	(btemp+9)^0,f,c
 18812  0133C0  3634               	rlcf	(btemp+10)^0,f,c
 18813  0133C2  3635               	rlcf	(btemp+11)^0,f,c
 18814  0133C4  2EE8               	decfsz	wreg,f,c
 18815  0133C6  D7F9               	goto	u16445
 18816  0133C8  0E64               	movlw	100
 18817  0133CA  6EE6               	movwf	postinc1,c
 18818  0133CC  0E00               	movlw	0
 18819  0133CE  6EE6               	movwf	postinc1,c
 18820  0133D0  0E00               	movlw	0
 18821  0133D2  6EE6               	movwf	postinc1,c
 18822  0133D4  0E00               	movlw	0
 18823  0133D6  6EE6               	movwf	postinc1,c
 18824                           
 18825                           ;stkvar	_c_cycles @ sp[(-61)+33]
 18826  0133D8  0EE4               	movlw	-28
 18827  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 18828  0133E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18829  0133E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18830  0133EC  006F FF8F FFE6     	movff	plusw1,postinc1
 18831  0133F2  ECAC  F002         	call	___lmul	;wreg free
 18832  0133F6  5032               	movf	(btemp+8)^0,w,c
 18833  0133F8  242A               	addwf	btemp^0,w,c
 18834  0133FA  6E2E               	movwf	(btemp+4)^0,c
 18835  0133FC  5033               	movf	(btemp+9)^0,w,c
 18836  0133FE  202B               	addwfc	(btemp+1)^0,w,c
 18837  013400  6E2F               	movwf	(btemp+5)^0,c
 18838  013402  5034               	movf	(btemp+10)^0,w,c
 18839  013404  202C               	addwfc	(btemp+2)^0,w,c
 18840  013406  6E30               	movwf	(btemp+6)^0,c
 18841  013408  5035               	movf	(btemp+11)^0,w,c
 18842  01340A  202D               	addwfc	(btemp+3)^0,w,c
 18843  01340C  6E31               	movwf	(btemp+7)^0,c
 18844  01340E  0EEC               	movlw	-20
 18845  013410  50E3               	movf	plusw1,w,c
 18846  013412  262E               	addwf	(btemp+4)^0,f,c
 18847  013414  0EED               	movlw	-19
 18848  013416  50E3               	movf	plusw1,w,c
 18849  013418  222F               	addwfc	(btemp+5)^0,f,c
 18850  01341A  0EEE               	movlw	-18
 18851  01341C  50E3               	movf	plusw1,w,c
 18852  01341E  2230               	addwfc	(btemp+6)^0,f,c
 18853  013420  0EEF               	movlw	-17
 18854  013422  50E3               	movf	plusw1,w,c
 18855  013424  2231               	addwfc	(btemp+7)^0,f,c
 18856  013426  0060  F0B8  F03A   	movff	btemp+4,btemp+16
 18857  01342C  0060  F0BC  F03B   	movff	btemp+5,btemp+17
 18858  013432  0060  F0C0  F03C   	movff	btemp+6,btemp+18
 18859  013438  0060  F0C4  F03D   	movff	btemp+7,btemp+19
 18860  01343E  6A3E               	clrf	(btemp+20)^0,c
 18861  013440  BE3D               	btfsc	(btemp+19)^0,7,c
 18862  013442  683E               	setf	(btemp+20)^0,c
 18863  013444  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 18864  01344A  0060  F0F8  F040   	movff	btemp+20,btemp+22
 18865  013450  0060  F0F8  F041   	movff	btemp+20,btemp+23
 18866  013456  0E90               	movlw	144
 18867  013458  6EE6               	movwf	postinc1,c
 18868  01345A  0E01               	movlw	1
 18869  01345C  6EE6               	movwf	postinc1,c
 18870  01345E  0E00               	movlw	0
 18871  013460  6EE6               	movwf	postinc1,c
 18872  013462  0E00               	movlw	0
 18873  013464  6EE6               	movwf	postinc1,c
 18874  013466  0E00               	movlw	0
 18875  013468  6EE6               	movwf	postinc1,c
 18876  01346A  0E00               	movlw	0
 18877  01346C  6EE6               	movwf	postinc1,c
 18878  01346E  0E00               	movlw	0
 18879  013470  6EE6               	movwf	postinc1,c
 18880  013472  0E00               	movlw	0
 18881  013474  6EE6               	movwf	postinc1,c
 18882                           
 18883                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 18884  013476  0EEC               	movlw	-20
 18885  013478  006F FF8C  F042    	movff	plusw1,btemp+24
 18886  01347E  0EED               	movlw	-19
 18887  013480  006F FF8C  F043    	movff	plusw1,btemp+25
 18888  013486  0EEE               	movlw	-18
 18889  013488  006F FF8C  F044    	movff	plusw1,btemp+26
 18890  01348E  0EEF               	movlw	-17
 18891  013490  006F FF8C  F045    	movff	plusw1,btemp+27
 18892  013496  6A46               	clrf	(btemp+28)^0,c
 18893  013498  BE45               	btfsc	(btemp+27)^0,7,c
 18894  01349A  6846               	setf	(btemp+28)^0,c
 18895  01349C  0060  F118  F047   	movff	btemp+28,btemp+29
 18896  0134A2  0060  F118  F048   	movff	btemp+28,btemp+30
 18897  0134A8  0060  F118  F049   	movff	btemp+28,btemp+31
 18898  0134AE  0060  F10B  FFE6   	movff	btemp+24,postinc1
 18899  0134B4  0060  F10F  FFE6   	movff	btemp+25,postinc1
 18900  0134BA  0060  F113  FFE6   	movff	btemp+26,postinc1
 18901  0134C0  0060  F117  FFE6   	movff	btemp+27,postinc1
 18902  0134C6  0060  F11B  FFE6   	movff	btemp+28,postinc1
 18903  0134CC  0060  F11F  FFE6   	movff	btemp+29,postinc1
 18904  0134D2  0060  F123  FFE6   	movff	btemp+30,postinc1
 18905  0134D8  0060  F127  FFE6   	movff	btemp+31,postinc1
 18906  0134DE  EC47  F0F8         	call	___omul	;wreg free
 18907  0134E2  52E5               	movf	postdec1,f,c
 18908  0134E4  006F FF9C  F049    	movff	indf1,btemp+31
 18909  0134EA  52E5               	movf	postdec1,f,c
 18910  0134EC  006F FF9C  F048    	movff	indf1,btemp+30
 18911  0134F2  52E5               	movf	postdec1,f,c
 18912  0134F4  006F FF9C  F047    	movff	indf1,btemp+29
 18913  0134FA  52E5               	movf	postdec1,f,c
 18914  0134FC  006F FF9C  F046    	movff	indf1,btemp+28
 18915  013502  52E5               	movf	postdec1,f,c
 18916  013504  006F FF9C  F045    	movff	indf1,btemp+27
 18917  01350A  52E5               	movf	postdec1,f,c
 18918  01350C  006F FF9C  F044    	movff	indf1,btemp+26
 18919  013512  52E5               	movf	postdec1,f,c
 18920  013514  006F FF9C  F043    	movff	indf1,btemp+25
 18921  01351A  52E5               	movf	postdec1,f,c
 18922  01351C  006F FF9C  F042    	movff	indf1,btemp+24
 18923  013522  0EF8               	movlw	248
 18924  013524  26E1               	addwf	fsr1l,f,c
 18925  013526  0EFF               	movlw	255
 18926  013528  22E2               	addwfc	fsr1h,f,c
 18927  01352A  503A               	movf	(btemp+16)^0,w,c
 18928  01352C  2442               	addwf	(btemp+24)^0,w,c
 18929  01352E  6E32               	movwf	(btemp+8)^0,c
 18930  013530  503B               	movf	(btemp+17)^0,w,c
 18931  013532  2043               	addwfc	(btemp+25)^0,w,c
 18932  013534  6E33               	movwf	(btemp+9)^0,c
 18933  013536  503C               	movf	(btemp+18)^0,w,c
 18934  013538  2044               	addwfc	(btemp+26)^0,w,c
 18935  01353A  6E34               	movwf	(btemp+10)^0,c
 18936  01353C  503D               	movf	(btemp+19)^0,w,c
 18937  01353E  2045               	addwfc	(btemp+27)^0,w,c
 18938  013540  6E35               	movwf	(btemp+11)^0,c
 18939  013542  503E               	movf	(btemp+20)^0,w,c
 18940  013544  2046               	addwfc	(btemp+28)^0,w,c
 18941  013546  6E36               	movwf	(btemp+12)^0,c
 18942  013548  503F               	movf	(btemp+21)^0,w,c
 18943  01354A  2047               	addwfc	(btemp+29)^0,w,c
 18944  01354C  6E37               	movwf	(btemp+13)^0,c
 18945  01354E  5040               	movf	(btemp+22)^0,w,c
 18946  013550  2048               	addwfc	(btemp+30)^0,w,c
 18947  013552  6E38               	movwf	(btemp+14)^0,c
 18948  013554  5041               	movf	(btemp+23)^0,w,c
 18949  013556  2049               	addwfc	(btemp+31)^0,w,c
 18950  013558  6E39               	movwf	(btemp+15)^0,c
 18951                           
 18952                           ;stkvar	_years @ sp[(-57)+1]
 18953  01355A  0EC8               	movlw	-56
 18954  01355C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 18955  013562  0EC9               	movlw	-55
 18956  013564  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 18957  01356A  0ECA               	movlw	-54
 18958  01356C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 18959  013572  0ECB               	movlw	-53
 18960  013574  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 18961  01357A  0ECC               	movlw	-52
 18962  01357C  0060  F0DB  FFE3   	movff	btemp+12,plusw1
 18963  013582  0ECD               	movlw	-51
 18964  013584  0060  F0DF  FFE3   	movff	btemp+13,plusw1
 18965  01358A  0ECE               	movlw	-50
 18966  01358C  0060  F0E3  FFE3   	movff	btemp+14,plusw1
 18967  013592  0ECF               	movlw	-49
 18968  013594  0060  F0E7  FFE3   	movff	btemp+15,plusw1
 18969                           
 18970                           ;stkvar	_months @ sp[(-57)+49]
 18971  01359A  0EF8               	movlw	-8
 18972  01359C  6AE3               	clrf	plusw1,c
 18973  01359E  0EF9               	movlw	-7
 18974  0135A0  6AE3               	clrf	plusw1,c
 18975  0135A2  D030               	goto	l16824
 18976  0135A4                     l16820:
 18977                           
 18978                           ;stkvar	_remdays @ sp[(-57)+25]
 18979  0135A4  50E1               	movf	fsr1l,w,c
 18980  0135A6  0FE0               	addlw	-32
 18981  0135A8  6ED9               	movwf	fsr2l,c
 18982  0135AA  50E2               	movf	fsr1h,w,c
 18983  0135AC  6EDA               	movwf	fsr2h,c
 18984  0135AE  0EFF               	movlw	255
 18985  0135B0  22DA               	addwfc	fsr2h,f,c
 18986                           
 18987                           ;stkvar	_months @ sp[(-57)+49]
 18988  0135B2  0EF8               	movlw	-8
 18989  0135B4  006F FF8C  F034    	movff	plusw1,btemp+10
 18990  0135BA  0EF9               	movlw	-7
 18991  0135BC  006F FF8C  F035    	movff	plusw1,btemp+11
 18992  0135C2  0EAB               	movlw	low ___secs_to_tm@days_in_month
 18993  0135C4  2434               	addwf	(btemp+10)^0,w,c
 18994  0135C6  6EF6               	movwf	tblptrl,c
 18995  0135C8  0EF8               	movlw	high ___secs_to_tm@days_in_month
 18996  0135CA  2035               	addwfc	(btemp+11)^0,w,c
 18997  0135CC  6EF7               	movwf	tblptrh,c
 18998  0135CE                     	if	1	;There are 3 active tblptr bytes
 18999  0135CE  6AF8               	clrf	tblptru,c
 19000  0135D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19001  0135D2  22F8               	addwfc	tblptru,f,c
 19002  0135D4                     	endif
 19003  0135D4  0008               	tblrd		*
 19004  0135D6  50F5               	movf	tablat,w,c
 19005  0135D8  5EDE               	subwf	postinc2,f,c
 19006  0135DA  0E00               	movlw	0
 19007  0135DC  5ADE               	subwfb	postinc2,f,c
 19008  0135DE  5ADE               	subwfb	postinc2,f,c
 19009  0135E0  5ADE               	subwfb	postinc2,f,c
 19010                           
 19011                           ;stkvar	_months @ sp[(-57)+49]
 19012  0135E2  0EF8               	movlw	-8
 19013  0135E4  50E3               	movf	plusw1,w,c
 19014  0135E6  0F01               	addlw	1
 19015  0135E8  6E2A               	movwf	btemp^0,c
 19016  0135EA  0EF8               	movlw	-8
 19017  0135EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19018  0135F2  6A2A               	clrf	btemp^0,c
 19019  0135F4  0EF9               	movlw	-7
 19020  0135F6  50E3               	movf	plusw1,w,c
 19021  0135F8  202A               	addwfc	btemp^0,w,c
 19022  0135FA  6E2A               	movwf	btemp^0,c
 19023  0135FC  0EF9               	movlw	-7
 19024  0135FE  0060  F0AB  FFE3   	movff	btemp,plusw1
 19025  013604                     l16824:
 19026                           
 19027                           ;stkvar	_months @ sp[(-57)+49]
 19028  013604  0EF8               	movlw	-8
 19029  013606  006F FF8C  F034    	movff	plusw1,btemp+10
 19030  01360C  0EF9               	movlw	-7
 19031  01360E  006F FF8C  F035    	movff	plusw1,btemp+11
 19032  013614  0EAB               	movlw	low ___secs_to_tm@days_in_month
 19033  013616  2434               	addwf	(btemp+10)^0,w,c
 19034  013618  6EF6               	movwf	tblptrl,c
 19035  01361A  0EF8               	movlw	high ___secs_to_tm@days_in_month
 19036  01361C  2035               	addwfc	(btemp+11)^0,w,c
 19037  01361E  6EF7               	movwf	tblptrh,c
 19038  013620                     	if	1	;There are 3 active tblptr bytes
 19039  013620  6AF8               	clrf	tblptru,c
 19040  013622  0E00               	movlw	low (__mediumconst shr (0+16))
 19041  013624  22F8               	addwfc	tblptru,f,c
 19042  013626                     	endif
 19043  013626  0008               	tblrd		*
 19044  013628  006F FFD4  F035    	movff	tablat,btemp+11
 19045  01362E  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 19046  013634  6A2F               	clrf	(btemp+5)^0,c
 19047  013636  6A30               	clrf	(btemp+6)^0,c
 19048  013638  6A31               	clrf	(btemp+7)^0,c
 19049                           
 19050                           ;stkvar	_remdays @ sp[(-57)+25]
 19051  01363A  0EE0               	movlw	-32
 19052  01363C  006F FF8C  F02A    	movff	plusw1,btemp
 19053  013642  502E               	movf	(btemp+4)^0,w,c
 19054  013644  5C2A               	subwf	btemp^0,w,c
 19055  013646  0EE1               	movlw	-31
 19056  013648  006F FF8C  F02A    	movff	plusw1,btemp
 19057  01364E  502F               	movf	(btemp+5)^0,w,c
 19058  013650  582A               	subwfb	btemp^0,w,c
 19059  013652  0EE2               	movlw	-30
 19060  013654  006F FF8C  F02A    	movff	plusw1,btemp
 19061  01365A  5030               	movf	(btemp+6)^0,w,c
 19062  01365C  582A               	subwfb	btemp^0,w,c
 19063  01365E  0EE3               	movlw	-29
 19064  013660  50E3               	movf	plusw1,w,c
 19065  013662  0A80               	xorlw	128
 19066  013664  6E2A               	movwf	btemp^0,c
 19067  013666  5031               	movf	(btemp+7)^0,w,c
 19068  013668  0A80               	xorlw	128
 19069  01366A  582A               	subwfb	btemp^0,w,c
 19070  01366C  B0D8               	btfsc	status,0,c
 19071  01366E  D79A               	goto	l16820
 19072                           
 19073                           ;stkvar	_months @ sp[(-57)+49]
 19074  013670  0EF9               	movlw	-7
 19075  013672  BEE3               	btfsc	plusw1,7,c
 19076  013674  D026               	goto	l16832
 19077  013676  0EF9               	movlw	-7
 19078  013678  50E3               	movf	plusw1,w,c
 19079  01367A  E108               	bnz	u16460
 19080  01367C  0EF8               	movlw	-8
 19081  01367E  006F FF8C  F02A    	movff	plusw1,btemp
 19082  013684  0E0A               	movlw	10
 19083  013686  5E2A               	subwf	btemp^0,f,c
 19084  013688  A0D8               	btfss	status,0,c
 19085  01368A  D01B               	goto	l16832
 19086  01368C                     u16460:
 19087                           
 19088                           ;stkvar	_months @ sp[(-57)+49]
 19089  01368C  50E1               	movf	fsr1l,w,c
 19090  01368E  0FF8               	addlw	-8
 19091  013690  6ED9               	movwf	fsr2l,c
 19092  013692  50E2               	movf	fsr1h,w,c
 19093  013694  6EDA               	movwf	fsr2h,c
 19094  013696  0EFF               	movlw	255
 19095  013698  22DA               	addwfc	fsr2h,f,c
 19096  01369A  0EF4               	movlw	244
 19097  01369C  26DE               	addwf	postinc2,f,c
 19098  01369E  0EFF               	movlw	255
 19099  0136A0  22DD               	addwfc	postdec2,f,c
 19100                           
 19101                           ;stkvar	_years @ sp[(-57)+1]
 19102  0136A2  50E1               	movf	fsr1l,w,c
 19103  0136A4  0FC8               	addlw	-56
 19104  0136A6  6ED9               	movwf	fsr2l,c
 19105  0136A8  50E2               	movf	fsr1h,w,c
 19106  0136AA  6EDA               	movwf	fsr2h,c
 19107  0136AC  0EFF               	movlw	255
 19108  0136AE  22DA               	addwfc	fsr2h,f,c
 19109  0136B0  2ADE               	incf	postinc2,f,c
 19110  0136B2  0E00               	movlw	0
 19111  0136B4  22DE               	addwfc	postinc2,f,c
 19112  0136B6  22DE               	addwfc	postinc2,f,c
 19113  0136B8  22DE               	addwfc	postinc2,f,c
 19114  0136BA  22DE               	addwfc	postinc2,f,c
 19115  0136BC  22DE               	addwfc	postinc2,f,c
 19116  0136BE  22DE               	addwfc	postinc2,f,c
 19117  0136C0  22DE               	addwfc	postinc2,f,c
 19118  0136C2                     l16832:
 19119                           
 19120                           ;stkvar	_years @ sp[(-57)+1]
 19121  0136C2  0EC8               	movlw	-56
 19122  0136C4  50E3               	movf	plusw1,w,c
 19123  0136C6  0F64               	addlw	100
 19124  0136C8  6E3A               	movwf	(btemp+16)^0,c
 19125  0136CA  0EC9               	movlw	-55
 19126  0136CC  006F FF8C  F03B    	movff	plusw1,btemp+17
 19127  0136D2  0E00               	movlw	0
 19128  0136D4  223B               	addwfc	(btemp+17)^0,f,c
 19129  0136D6  0ECA               	movlw	-54
 19130  0136D8  006F FF8C  F03C    	movff	plusw1,btemp+18
 19131  0136DE  0E00               	movlw	0
 19132  0136E0  223C               	addwfc	(btemp+18)^0,f,c
 19133  0136E2  0ECB               	movlw	-53
 19134  0136E4  006F FF8C  F03D    	movff	plusw1,btemp+19
 19135  0136EA  0E00               	movlw	0
 19136  0136EC  223D               	addwfc	(btemp+19)^0,f,c
 19137  0136EE  0ECC               	movlw	-52
 19138  0136F0  006F FF8C  F03E    	movff	plusw1,btemp+20
 19139  0136F6  0E00               	movlw	0
 19140  0136F8  223E               	addwfc	(btemp+20)^0,f,c
 19141  0136FA  0ECD               	movlw	-51
 19142  0136FC  006F FF8C  F03F    	movff	plusw1,btemp+21
 19143  013702  0E00               	movlw	0
 19144  013704  223F               	addwfc	(btemp+21)^0,f,c
 19145  013706  0ECE               	movlw	-50
 19146  013708  006F FF8C  F040    	movff	plusw1,btemp+22
 19147  01370E  0E00               	movlw	0
 19148  013710  2240               	addwfc	(btemp+22)^0,f,c
 19149  013712  0ECF               	movlw	-49
 19150  013714  006F FF8C  F041    	movff	plusw1,btemp+23
 19151  01371A  0E00               	movlw	0
 19152  01371C  2241               	addwfc	(btemp+23)^0,f,c
 19153  01371E  BE41               	btfsc	(btemp+23)^0,7,c
 19154  013720  D00C               	goto	u16470
 19155  013722  5041               	movf	(btemp+23)^0,w,c
 19156  013724  1040               	iorwf	(btemp+22)^0,w,c
 19157  013726  103F               	iorwf	(btemp+21)^0,w,c
 19158  013728  103E               	iorwf	(btemp+20)^0,w,c
 19159  01372A  103D               	iorwf	(btemp+19)^0,w,c
 19160  01372C  103C               	iorwf	(btemp+18)^0,w,c
 19161  01372E  E103               	bnz	u16471
 19162  013730  0E80               	movlw	128
 19163  013732  5C3B               	subwf	(btemp+17)^0,w,c
 19164  013734  B0D8               	btfsc	status,0,c
 19165  013736                     u16471:
 19166  013736  EF07  F095         	goto	u16330
 19167  01373A                     u16470:
 19168                           
 19169                           ;stkvar	_years @ sp[(-57)+1]
 19170  01373A  0EC8               	movlw	-56
 19171  01373C  50E3               	movf	plusw1,w,c
 19172  01373E  0F64               	addlw	100
 19173  013740  6E3A               	movwf	(btemp+16)^0,c
 19174  013742  0EC9               	movlw	-55
 19175  013744  006F FF8C  F03B    	movff	plusw1,btemp+17
 19176  01374A  0E00               	movlw	0
 19177  01374C  223B               	addwfc	(btemp+17)^0,f,c
 19178  01374E  0ECA               	movlw	-54
 19179  013750  006F FF8C  F03C    	movff	plusw1,btemp+18
 19180  013756  0E00               	movlw	0
 19181  013758  223C               	addwfc	(btemp+18)^0,f,c
 19182  01375A  0ECB               	movlw	-53
 19183  01375C  006F FF8C  F03D    	movff	plusw1,btemp+19
 19184  013762  0E00               	movlw	0
 19185  013764  223D               	addwfc	(btemp+19)^0,f,c
 19186  013766  0ECC               	movlw	-52
 19187  013768  006F FF8C  F03E    	movff	plusw1,btemp+20
 19188  01376E  0E00               	movlw	0
 19189  013770  223E               	addwfc	(btemp+20)^0,f,c
 19190  013772  0ECD               	movlw	-51
 19191  013774  006F FF8C  F03F    	movff	plusw1,btemp+21
 19192  01377A  0E00               	movlw	0
 19193  01377C  223F               	addwfc	(btemp+21)^0,f,c
 19194  01377E  0ECE               	movlw	-50
 19195  013780  006F FF8C  F040    	movff	plusw1,btemp+22
 19196  013786  0E00               	movlw	0
 19197  013788  2240               	addwfc	(btemp+22)^0,f,c
 19198  01378A  0ECF               	movlw	-49
 19199  01378C  006F FF8C  F041    	movff	plusw1,btemp+23
 19200  013792  0E00               	movlw	0
 19201  013794  2241               	addwfc	(btemp+23)^0,f,c
 19202  013796  AE41               	btfss	(btemp+23)^0,7,c
 19203  013798  D011               	goto	l16840
 19204  01379A  0E80               	movlw	128
 19205  01379C  5C3B               	subwf	(btemp+17)^0,w,c
 19206  01379E  0EFF               	movlw	255
 19207  0137A0  583C               	subwfb	(btemp+18)^0,w,c
 19208  0137A2  0EFF               	movlw	255
 19209  0137A4  583D               	subwfb	(btemp+19)^0,w,c
 19210  0137A6  0EFF               	movlw	255
 19211  0137A8  583E               	subwfb	(btemp+20)^0,w,c
 19212  0137AA  0EFF               	movlw	255
 19213  0137AC  583F               	subwfb	(btemp+21)^0,w,c
 19214  0137AE  0EFF               	movlw	255
 19215  0137B0  5840               	subwfb	(btemp+22)^0,w,c
 19216  0137B2  0EFF               	movlw	255
 19217  0137B4  5841               	subwfb	(btemp+23)^0,w,c
 19218  0137B6  A0D8               	btfss	status,0,c
 19219  0137B8  EF07  F095         	goto	u16330
 19220  0137BC                     l16840:
 19221                           
 19222                           ;stkvar	_years @ sp[(-57)+1]
 19223  0137BC  0EC8               	movlw	-56
 19224  0137BE  50E3               	movf	plusw1,w,c
 19225  0137C0  0F64               	addlw	100
 19226  0137C2  6E34               	movwf	(btemp+10)^0,c
 19227  0137C4  0EC9               	movlw	-55
 19228  0137C6  006F FF8C  F035    	movff	plusw1,btemp+11
 19229  0137CC  0E00               	movlw	0
 19230  0137CE  2235               	addwfc	(btemp+11)^0,f,c
 19231                           
 19232                           ;stkvar	_tm @ sp[(-57)+-10]
 19233  0137D0  0EBD               	movlw	-67
 19234  0137D2  006F FF8C  F032    	movff	plusw1,btemp+8
 19235  0137D8  0EBE               	movlw	-66
 19236  0137DA  006F FF8C  F033    	movff	plusw1,btemp+9
 19237  0137E0  0E0A               	movlw	10
 19238  0137E2  2432               	addwf	(btemp+8)^0,w,c
 19239  0137E4  6ED9               	movwf	fsr2l,c
 19240  0137E6  0E00               	movlw	0
 19241  0137E8  2033               	addwfc	(btemp+9)^0,w,c
 19242  0137EA  6EDA               	movwf	fsr2h,c
 19243  0137EC  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19244  0137F2  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19245                           
 19246                           ;stkvar	_months @ sp[(-57)+49]
 19247  0137F8  0EF8               	movlw	-8
 19248  0137FA  50E3               	movf	plusw1,w,c
 19249  0137FC  0F02               	addlw	2
 19250  0137FE  6E34               	movwf	(btemp+10)^0,c
 19251  013800  0EF9               	movlw	-7
 19252  013802  006F FF8C  F035    	movff	plusw1,btemp+11
 19253  013808  0E00               	movlw	0
 19254  01380A  2235               	addwfc	(btemp+11)^0,f,c
 19255                           
 19256                           ;stkvar	_tm @ sp[(-57)+-10]
 19257  01380C  0EBD               	movlw	-67
 19258  01380E  006F FF8C  F032    	movff	plusw1,btemp+8
 19259  013814  0EBE               	movlw	-66
 19260  013816  006F FF8C  F033    	movff	plusw1,btemp+9
 19261  01381C  0E08               	movlw	8
 19262  01381E  2432               	addwf	(btemp+8)^0,w,c
 19263  013820  6ED9               	movwf	fsr2l,c
 19264  013822  0E00               	movlw	0
 19265  013824  2033               	addwfc	(btemp+9)^0,w,c
 19266  013826  6EDA               	movwf	fsr2h,c
 19267  013828  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19268  01382E  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19269                           
 19270                           ;stkvar	_remdays @ sp[(-57)+25]
 19271  013834  0EE0               	movlw	-32
 19272  013836  50E3               	movf	plusw1,w,c
 19273  013838  0F01               	addlw	1
 19274  01383A  6E34               	movwf	(btemp+10)^0,c
 19275  01383C  0EE1               	movlw	-31
 19276  01383E  006F FF8C  F035    	movff	plusw1,btemp+11
 19277  013844  0E00               	movlw	0
 19278  013846  2235               	addwfc	(btemp+11)^0,f,c
 19279                           
 19280                           ;stkvar	_tm @ sp[(-57)+-10]
 19281  013848  0EBD               	movlw	-67
 19282  01384A  006F FF8C  F032    	movff	plusw1,btemp+8
 19283  013850  0EBE               	movlw	-66
 19284  013852  006F FF8C  F033    	movff	plusw1,btemp+9
 19285  013858  0E06               	movlw	6
 19286  01385A  2432               	addwf	(btemp+8)^0,w,c
 19287  01385C  6ED9               	movwf	fsr2l,c
 19288  01385E  0E00               	movlw	0
 19289  013860  2033               	addwfc	(btemp+9)^0,w,c
 19290  013862  6EDA               	movwf	fsr2h,c
 19291  013864  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19292  01386A  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19293                           
 19294                           ;stkvar	_wday @ sp[(-57)+55]
 19295  013870  50E1               	movf	fsr1l,w,c
 19296  013872  0FFE               	addlw	-2
 19297  013874  6ED9               	movwf	fsr2l,c
 19298  013876  50E2               	movf	fsr1h,w,c
 19299  013878  6EDA               	movwf	fsr2h,c
 19300  01387A  0EFF               	movlw	255
 19301  01387C  22DA               	addwfc	fsr2h,f,c
 19302                           
 19303                           ;stkvar	_tm @ sp[(-57)+-10]
 19304  01387E  0EBD               	movlw	-67
 19305  013880  006F FF8C  F034    	movff	plusw1,btemp+10
 19306  013886  0EBE               	movlw	-66
 19307  013888  006F FF8C  F035    	movff	plusw1,btemp+11
 19308  01388E  0E0C               	movlw	12
 19309  013890  2434               	addwf	(btemp+10)^0,w,c
 19310  013892  6EE9               	movwf	fsr0l,c
 19311  013894  0E00               	movlw	0
 19312  013896  2035               	addwfc	(btemp+11)^0,w,c
 19313  013898  6EEA               	movwf	fsr0h,c
 19314  01389A  006F FF7B FFEE     	movff	postinc2,postinc0
 19315  0138A0  006F FF77 FFED     	movff	postdec2,postdec0
 19316                           
 19317                           ;stkvar	_yday @ sp[(-57)+53]
 19318  0138A6  50E1               	movf	fsr1l,w,c
 19319  0138A8  0FFC               	addlw	-4
 19320  0138AA  6ED9               	movwf	fsr2l,c
 19321  0138AC  50E2               	movf	fsr1h,w,c
 19322  0138AE  6EDA               	movwf	fsr2h,c
 19323  0138B0  0EFF               	movlw	255
 19324  0138B2  22DA               	addwfc	fsr2h,f,c
 19325                           
 19326                           ;stkvar	_tm @ sp[(-57)+-10]
 19327  0138B4  0EBD               	movlw	-67
 19328  0138B6  006F FF8C  F034    	movff	plusw1,btemp+10
 19329  0138BC  0EBE               	movlw	-66
 19330  0138BE  006F FF8C  F035    	movff	plusw1,btemp+11
 19331  0138C4  0E0E               	movlw	14
 19332  0138C6  2434               	addwf	(btemp+10)^0,w,c
 19333  0138C8  6EE9               	movwf	fsr0l,c
 19334  0138CA  0E00               	movlw	0
 19335  0138CC  2035               	addwfc	(btemp+11)^0,w,c
 19336  0138CE  6EEA               	movwf	fsr0h,c
 19337  0138D0  006F FF7B FFEE     	movff	postinc2,postinc0
 19338  0138D6  006F FF77 FFED     	movff	postdec2,postdec0
 19339  0138DC  0E10               	movlw	16
 19340  0138DE  6EE6               	movwf	postinc1,c
 19341  0138E0  0E0E               	movlw	14
 19342  0138E2  6EE6               	movwf	postinc1,c
 19343  0138E4  0E00               	movlw	0
 19344  0138E6  6EE6               	movwf	postinc1,c
 19345  0138E8  0E00               	movlw	0
 19346  0138EA  6EE6               	movwf	postinc1,c
 19347                           
 19348                           ;stkvar	_remsecs @ sp[(-61)+41]
 19349  0138EC  0EEC               	movlw	-20
 19350  0138EE  006F FF8F FFE6     	movff	plusw1,postinc1
 19351  0138F4  006F FF8F FFE6     	movff	plusw1,postinc1
 19352  0138FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19353  013900  006F FF8F FFE6     	movff	plusw1,postinc1
 19354  013906  ECFC  F0F0         	call	___aldiv	;wreg free
 19355  01390A  0060  F0A8  F034   	movff	btemp,btemp+10
 19356  013910  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19357                           
 19358                           ;stkvar	_tm @ sp[(-57)+-10]
 19359  013916  0EBD               	movlw	-67
 19360  013918  006F FF8C  F032    	movff	plusw1,btemp+8
 19361  01391E  0EBE               	movlw	-66
 19362  013920  006F FF8C  F033    	movff	plusw1,btemp+9
 19363  013926  0E04               	movlw	4
 19364  013928  2432               	addwf	(btemp+8)^0,w,c
 19365  01392A  6ED9               	movwf	fsr2l,c
 19366  01392C  0E00               	movlw	0
 19367  01392E  2033               	addwfc	(btemp+9)^0,w,c
 19368  013930  6EDA               	movwf	fsr2h,c
 19369  013932  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19370  013938  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19371  01393E  0E3C               	movlw	60
 19372  013940  6EE6               	movwf	postinc1,c
 19373  013942  0E00               	movlw	0
 19374  013944  6EE6               	movwf	postinc1,c
 19375  013946  0E00               	movlw	0
 19376  013948  6EE6               	movwf	postinc1,c
 19377  01394A  0E00               	movlw	0
 19378  01394C  6EE6               	movwf	postinc1,c
 19379  01394E  0E3C               	movlw	60
 19380  013950  6EE6               	movwf	postinc1,c
 19381  013952  0E00               	movlw	0
 19382  013954  6EE6               	movwf	postinc1,c
 19383  013956  0E00               	movlw	0
 19384  013958  6EE6               	movwf	postinc1,c
 19385  01395A  0E00               	movlw	0
 19386  01395C  6EE6               	movwf	postinc1,c
 19387                           
 19388                           ;stkvar	_remsecs @ sp[(-65)+41]
 19389  01395E  0EE8               	movlw	-24
 19390  013960  006F FF8F FFE6     	movff	plusw1,postinc1
 19391  013966  006F FF8F FFE6     	movff	plusw1,postinc1
 19392  01396C  006F FF8F FFE6     	movff	plusw1,postinc1
 19393  013972  006F FF8F FFE6     	movff	plusw1,postinc1
 19394  013978  ECFC  F0F0         	call	___aldiv	;wreg free
 19395  01397C  0060  F0AB  FFE6   	movff	btemp,postinc1
 19396  013982  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 19397  013988  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 19398  01398E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 19399  013994  EC82  F0F5         	call	___almod	;wreg free
 19400  013998  0060  F0A8  F034   	movff	btemp,btemp+10
 19401  01399E  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19402                           
 19403                           ;stkvar	_tm @ sp[(-57)+-10]
 19404  0139A4  0EBD               	movlw	-67
 19405  0139A6  006F FF8C  F032    	movff	plusw1,btemp+8
 19406  0139AC  0EBE               	movlw	-66
 19407  0139AE  006F FF8C  F033    	movff	plusw1,btemp+9
 19408  0139B4  0E02               	movlw	2
 19409  0139B6  2432               	addwf	(btemp+8)^0,w,c
 19410  0139B8  6ED9               	movwf	fsr2l,c
 19411  0139BA  0E00               	movlw	0
 19412  0139BC  2033               	addwfc	(btemp+9)^0,w,c
 19413  0139BE  6EDA               	movwf	fsr2h,c
 19414  0139C0  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19415  0139C6  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19416  0139CC  0E3C               	movlw	60
 19417  0139CE  6EE6               	movwf	postinc1,c
 19418  0139D0  0E00               	movlw	0
 19419  0139D2  6EE6               	movwf	postinc1,c
 19420  0139D4  0E00               	movlw	0
 19421  0139D6  6EE6               	movwf	postinc1,c
 19422  0139D8  0E00               	movlw	0
 19423  0139DA  6EE6               	movwf	postinc1,c
 19424                           
 19425                           ;stkvar	_remsecs @ sp[(-61)+41]
 19426  0139DC  0EEC               	movlw	-20
 19427  0139DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19428  0139E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19429  0139EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19430  0139F0  006F FF8F FFE6     	movff	plusw1,postinc1
 19431  0139F6  EC82  F0F5         	call	___almod	;wreg free
 19432  0139FA  0060  F0A8  F034   	movff	btemp,btemp+10
 19433  013A00  0060  F0AC  F035   	movff	btemp+1,btemp+11
 19434                           
 19435                           ;stkvar	_tm @ sp[(-57)+-10]
 19436  013A06  0EBD               	movlw	-67
 19437  013A08  006F FF8F FFD9     	movff	plusw1,fsr2l
 19438  013A0E  0EBE               	movlw	-66
 19439  013A10  006F FF8F FFDA     	movff	plusw1,fsr2h
 19440  013A16  0060  F0D3  FFDE   	movff	btemp+10,postinc2
 19441  013A1C  0060  F0D7  FFDD   	movff	btemp+11,postdec2
 19442  013A22  0E00               	movlw	0
 19443  013A24  6E2A               	movwf	btemp^0,c
 19444  013A26  6A2B               	clrf	(btemp+1)^0,c
 19445  013A28  6A2C               	clrf	(btemp+2)^0,c
 19446  013A2A  6A2D               	clrf	(btemp+3)^0,c
 19447  013A2C                     l3853:
 19448                           
 19449                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 19450  013A2C  0EBD               	movlw	189
 19451  013A2E  26E1               	addwf	fsr1l,f,c
 19452  013A30  0EFF               	movlw	255
 19453  013A32  22E2               	addwfc	fsr1h,f,c
 19454  013A34  0012               	return		;funcret
 19455  013A36                     __end_of___secs_to_tm:
 19456                           	opt callstack 0
 19457                           
 19458 ;; *************** function ___omul *****************
 19459 ;; Defined at:
 19460 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;  multiplier      8  [STACK] unsigned long long 
 19463 ;;  multiplicand    8  [STACK] unsigned long long 
 19464 ;; Auto vars:     Size  Location     Type
 19465 ;;  product         8  [STACK] unsigned long long 
 19466 ;; Return value:  Size  Location     Type
 19467 ;;                  8  [STACK] unsigned long long 
 19468 ;; Registers used:
 19469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19470 ;; Tracked objects:
 19471 ;;		On entry : 0/0
 19472 ;;		On exit  : 0/0
 19473 ;;		Unchanged: 0/0
 19474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19479 ;;Total ram usage:        0 bytes
 19480 ;; Hardware stack levels used:    1
 19481 ;; Hardware stack levels required when called:   15
 19482 ;; This function calls:
 19483 ;;		Nothing
 19484 ;; This function is called by:
 19485 ;;		___secs_to_tm
 19486 ;;		___year_to_secs
 19487 ;; This function uses a reentrant model
 19488 ;;
 19489                           
 19490                           	psect	text51
 19491  01F08E                     __ptext51:
 19492                           	opt callstack 0
 19493  01F08E                     ___omul:
 19494                           	opt callstack 0
 19495                           
 19496                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19497  01F08E  0E08               	movlw	8
 19498  01F090  26E1               	addwf	fsr1l,f,c
 19499  01F092  0E00               	movlw	0
 19500  01F094  22E2               	addwfc	fsr1h,f,c
 19501                           
 19502                           ;stkvar	_product @ sp[(-8)+0]
 19503                           
 19504                           ;incstack = 0
 19505  01F096  0E07               	movlw	7
 19506  01F098  6E2A               	movwf	btemp^0,c
 19507  01F09A  0EF8               	movlw	-8
 19508  01F09C                     u8081:
 19509  01F09C  6AE3               	clrf	plusw1,c
 19510  01F09E  2AE8               	incf	wreg,f,c
 19511  01F0A0  062A               	decf	btemp^0,f,c
 19512  01F0A2  E2FC               	bc	u8081
 19513  01F0A4                     l10228:
 19514                           
 19515                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19516  01F0A4  0EF0               	movlw	-16
 19517  01F0A6  A0E3               	btfss	plusw1,0,c
 19518  01F0A8  D050               	goto	l10232
 19519                           
 19520                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 19521                           ;stkvar	_product @ sp[(-8)+0]
 19522  01F0AA  0EF8               	movlw	-8
 19523  01F0AC  50E3               	movf	plusw1,w,c
 19524  01F0AE  6E2A               	movwf	btemp^0,c
 19525  01F0B0  0EE8               	movlw	-24
 19526  01F0B2  50E3               	movf	plusw1,w,c
 19527  01F0B4  262A               	addwf	btemp^0,f,c
 19528  01F0B6  0EF8               	movlw	-8
 19529  01F0B8  0060  F0AB  FFE3   	movff	btemp,plusw1
 19530  01F0BE  0EF9               	movlw	-7
 19531  01F0C0  50E3               	movf	plusw1,w,c
 19532  01F0C2  6E2A               	movwf	btemp^0,c
 19533  01F0C4  0EE9               	movlw	-23
 19534  01F0C6  50E3               	movf	plusw1,w,c
 19535  01F0C8  222A               	addwfc	btemp^0,f,c
 19536  01F0CA  0EF9               	movlw	-7
 19537  01F0CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19538  01F0D2  0EFA               	movlw	-6
 19539  01F0D4  50E3               	movf	plusw1,w,c
 19540  01F0D6  6E2A               	movwf	btemp^0,c
 19541  01F0D8  0EEA               	movlw	-22
 19542  01F0DA  50E3               	movf	plusw1,w,c
 19543  01F0DC  222A               	addwfc	btemp^0,f,c
 19544  01F0DE  0EFA               	movlw	-6
 19545  01F0E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19546  01F0E6  0EFB               	movlw	-5
 19547  01F0E8  50E3               	movf	plusw1,w,c
 19548  01F0EA  6E2A               	movwf	btemp^0,c
 19549  01F0EC  0EEB               	movlw	-21
 19550  01F0EE  50E3               	movf	plusw1,w,c
 19551  01F0F0  222A               	addwfc	btemp^0,f,c
 19552  01F0F2  0EFB               	movlw	-5
 19553  01F0F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 19554  01F0FA  0EFC               	movlw	-4
 19555  01F0FC  50E3               	movf	plusw1,w,c
 19556  01F0FE  6E2A               	movwf	btemp^0,c
 19557  01F100  0EEC               	movlw	-20
 19558  01F102  50E3               	movf	plusw1,w,c
 19559  01F104  222A               	addwfc	btemp^0,f,c
 19560  01F106  0EFC               	movlw	-4
 19561  01F108  0060  F0AB  FFE3   	movff	btemp,plusw1
 19562  01F10E  0EFD               	movlw	-3
 19563  01F110  50E3               	movf	plusw1,w,c
 19564  01F112  6E2A               	movwf	btemp^0,c
 19565  01F114  0EED               	movlw	-19
 19566  01F116  50E3               	movf	plusw1,w,c
 19567  01F118  222A               	addwfc	btemp^0,f,c
 19568  01F11A  0EFD               	movlw	-3
 19569  01F11C  0060  F0AB  FFE3   	movff	btemp,plusw1
 19570  01F122  0EFE               	movlw	-2
 19571  01F124  50E3               	movf	plusw1,w,c
 19572  01F126  6E2A               	movwf	btemp^0,c
 19573  01F128  0EEE               	movlw	-18
 19574  01F12A  50E3               	movf	plusw1,w,c
 19575  01F12C  222A               	addwfc	btemp^0,f,c
 19576  01F12E  0EFE               	movlw	-2
 19577  01F130  0060  F0AB  FFE3   	movff	btemp,plusw1
 19578  01F136  0EFF               	movlw	-1
 19579  01F138  50E3               	movf	plusw1,w,c
 19580  01F13A  6E2A               	movwf	btemp^0,c
 19581  01F13C  0EEF               	movlw	-17
 19582  01F13E  50E3               	movf	plusw1,w,c
 19583  01F140  222A               	addwfc	btemp^0,f,c
 19584  01F142  0EFF               	movlw	-1
 19585  01F144  0060  F0AB  FFE3   	movff	btemp,plusw1
 19586  01F14A                     l10232:
 19587                           
 19588                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 19589  01F14A  90D8               	bcf	status,0,c
 19590  01F14C  0EE8               	movlw	-24
 19591  01F14E  36E3               	rlcf	plusw1,f,c
 19592  01F150  0EE9               	movlw	-23
 19593  01F152  36E3               	rlcf	plusw1,f,c
 19594  01F154  0EEA               	movlw	-22
 19595  01F156  36E3               	rlcf	plusw1,f,c
 19596  01F158  0EEB               	movlw	-21
 19597  01F15A  36E3               	rlcf	plusw1,f,c
 19598  01F15C  0EEC               	movlw	-20
 19599  01F15E  36E3               	rlcf	plusw1,f,c
 19600  01F160  0EED               	movlw	-19
 19601  01F162  36E3               	rlcf	plusw1,f,c
 19602  01F164  0EEE               	movlw	-18
 19603  01F166  36E3               	rlcf	plusw1,f,c
 19604  01F168  0EEF               	movlw	-17
 19605  01F16A  36E3               	rlcf	plusw1,f,c
 19606                           
 19607                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19608  01F16C  90D8               	bcf	status,0,c
 19609  01F16E  0EF7               	movlw	-9
 19610  01F170  32E3               	rrcf	plusw1,f,c
 19611  01F172  0EF6               	movlw	-10
 19612  01F174  32E3               	rrcf	plusw1,f,c
 19613  01F176  0EF5               	movlw	-11
 19614  01F178  32E3               	rrcf	plusw1,f,c
 19615  01F17A  0EF4               	movlw	-12
 19616  01F17C  32E3               	rrcf	plusw1,f,c
 19617  01F17E  0EF3               	movlw	-13
 19618  01F180  32E3               	rrcf	plusw1,f,c
 19619  01F182  0EF2               	movlw	-14
 19620  01F184  32E3               	rrcf	plusw1,f,c
 19621  01F186  0EF1               	movlw	-15
 19622  01F188  32E3               	rrcf	plusw1,f,c
 19623  01F18A  0EF0               	movlw	-16
 19624  01F18C  32E3               	rrcf	plusw1,f,c
 19625                           
 19626                           ;stkvar	_multiplier @ sp[(-8)+-8]
 19627  01F18E  0EF0               	movlw	-16
 19628  01F190  50E3               	movf	plusw1,w,c
 19629  01F192  E188               	bnz	l10228
 19630  01F194  0EF1               	movlw	-15
 19631  01F196  50E3               	movf	plusw1,w,c
 19632  01F198  E185               	bnz	l10228
 19633  01F19A  0EF2               	movlw	-14
 19634  01F19C  50E3               	movf	plusw1,w,c
 19635  01F19E  E182               	bnz	l10228
 19636  01F1A0  0EF3               	movlw	-13
 19637  01F1A2  50E3               	movf	plusw1,w,c
 19638  01F1A4  E10C               	bnz	u8101
 19639  01F1A6  0EF4               	movlw	-12
 19640  01F1A8  50E3               	movf	plusw1,w,c
 19641  01F1AA  E109               	bnz	u8101
 19642  01F1AC  0EF5               	movlw	-11
 19643  01F1AE  50E3               	movf	plusw1,w,c
 19644  01F1B0  E106               	bnz	u8101
 19645  01F1B2  0EF6               	movlw	-10
 19646  01F1B4  50E3               	movf	plusw1,w,c
 19647  01F1B6  E103               	bnz	u8101
 19648  01F1B8  0EF7               	movlw	-9
 19649  01F1BA  50E3               	movf	plusw1,w,c
 19650  01F1BC  A4D8               	btfss	status,2,c
 19651  01F1BE                     u8101:
 19652  01F1BE  D772               	goto	l10228
 19653                           
 19654                           ;stkvar	_product @ sp[(-8)+0]
 19655  01F1C0  0EF8               	movlw	248
 19656  01F1C2  24E1               	addwf	fsr1l,w,c
 19657  01F1C4  6ED9               	movwf	fsr2l,c
 19658  01F1C6  0EFF               	movlw	255
 19659  01F1C8  20E2               	addwfc	fsr1h,w,c
 19660  01F1CA  6EDA               	movwf	fsr2h,c
 19661                           
 19662                           ;stkvar	?___omul @ sp[(-8)+-8]
 19663  01F1CC  0E08               	movlw	8
 19664  01F1CE  6E2A               	movwf	btemp^0,c
 19665  01F1D0  0EF0               	movlw	-16
 19666  01F1D2                     us811999:
 19667  01F1D2  006F FF7B FFE3     	movff	postinc2,plusw1
 19668  01F1D8  28E8               	incf	wreg,w,c
 19669  01F1DA  2E2A               	decfsz	btemp^0,f,c
 19670  01F1DC  D7FA               	bra	us811999
 19671                           
 19672                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 19673  01F1DE  0EF8               	movlw	248
 19674  01F1E0  26E1               	addwf	fsr1l,f,c
 19675  01F1E2  0EFF               	movlw	255
 19676  01F1E4  22E2               	addwfc	fsr1h,f,c
 19677  01F1E6  0012               	return		;funcret
 19678  01F1E8                     __end_of___omul:
 19679                           	opt callstack 0
 19680                           
 19681 ;; *************** function ___lmul *****************
 19682 ;; Defined at:
 19683 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 19684 ;; Parameters:    Size  Location     Type
 19685 ;;  multiplier      4  [STACK] unsigned long 
 19686 ;;  multiplicand    4  [STACK] unsigned long 
 19687 ;; Auto vars:     Size  Location     Type
 19688 ;;  product         4  [STACK] unsigned long 
 19689 ;; Return value:  Size  Location     Type
 19690 ;;                  4  [STACK] unsigned long 
 19691 ;; Registers used:
 19692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19693 ;; Tracked objects:
 19694 ;;		On entry : 0/0
 19695 ;;		On exit  : 0/0
 19696 ;;		Unchanged: 0/0
 19697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19702 ;;Total ram usage:        0 bytes
 19703 ;; Hardware stack levels used:    1
 19704 ;; Hardware stack levels required when called:   15
 19705 ;; This function calls:
 19706 ;;		Nothing
 19707 ;; This function is called by:
 19708 ;;		___secs_to_tm
 19709 ;;		_rule_to_secs
 19710 ;;		___year_to_secs
 19711 ;; This function uses a reentrant model
 19712 ;;
 19713                           
 19714                           	psect	text52
 19715  000558                     __ptext52:
 19716                           	opt callstack 0
 19717  000558                     ___lmul:
 19718                           	opt callstack 0
 19719                           
 19720                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19721  000558  52E6               	movf	postinc1,f,c
 19722  00055A  52E6               	movf	postinc1,f,c
 19723  00055C  52E6               	movf	postinc1,f,c
 19724  00055E  52E6               	movf	postinc1,f,c
 19725                           
 19726                           ;stkvar	_product @ sp[(-4)+0]
 19727                           
 19728                           ;incstack = 0
 19729  000560  0EFC               	movlw	-4
 19730  000562  6AE3               	clrf	plusw1,c
 19731  000564  0EFD               	movlw	-3
 19732  000566  6AE3               	clrf	plusw1,c
 19733  000568  0EFE               	movlw	-2
 19734  00056A  6AE3               	clrf	plusw1,c
 19735  00056C  0EFF               	movlw	-1
 19736  00056E  6AE3               	clrf	plusw1,c
 19737  000570                     l2737:
 19738                           
 19739                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19740  000570  0EF8               	movlw	-8
 19741  000572  A0E3               	btfss	plusw1,0,c
 19742  000574  D028               	goto	l10218
 19743                           
 19744                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19745                           ;stkvar	_product @ sp[(-4)+0]
 19746  000576  0EFC               	movlw	-4
 19747  000578  50E3               	movf	plusw1,w,c
 19748  00057A  6E2A               	movwf	btemp^0,c
 19749  00057C  0EF4               	movlw	-12
 19750  00057E  50E3               	movf	plusw1,w,c
 19751  000580  262A               	addwf	btemp^0,f,c
 19752  000582  0EFC               	movlw	-4
 19753  000584  0060  F0AB  FFE3   	movff	btemp,plusw1
 19754  00058A  0EFD               	movlw	-3
 19755  00058C  50E3               	movf	plusw1,w,c
 19756  00058E  6E2A               	movwf	btemp^0,c
 19757  000590  0EF5               	movlw	-11
 19758  000592  50E3               	movf	plusw1,w,c
 19759  000594  222A               	addwfc	btemp^0,f,c
 19760  000596  0EFD               	movlw	-3
 19761  000598  0060  F0AB  FFE3   	movff	btemp,plusw1
 19762  00059E  0EFE               	movlw	-2
 19763  0005A0  50E3               	movf	plusw1,w,c
 19764  0005A2  6E2A               	movwf	btemp^0,c
 19765  0005A4  0EF6               	movlw	-10
 19766  0005A6  50E3               	movf	plusw1,w,c
 19767  0005A8  222A               	addwfc	btemp^0,f,c
 19768  0005AA  0EFE               	movlw	-2
 19769  0005AC  0060  F0AB  FFE3   	movff	btemp,plusw1
 19770  0005B2  0EFF               	movlw	-1
 19771  0005B4  50E3               	movf	plusw1,w,c
 19772  0005B6  6E2A               	movwf	btemp^0,c
 19773  0005B8  0EF7               	movlw	-9
 19774  0005BA  50E3               	movf	plusw1,w,c
 19775  0005BC  222A               	addwfc	btemp^0,f,c
 19776  0005BE  0EFF               	movlw	-1
 19777  0005C0  0060  F0AB  FFE3   	movff	btemp,plusw1
 19778  0005C6                     l10218:
 19779                           
 19780                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 19781  0005C6  90D8               	bcf	status,0,c
 19782  0005C8  0EF4               	movlw	-12
 19783  0005CA  36E3               	rlcf	plusw1,f,c
 19784  0005CC  0EF5               	movlw	-11
 19785  0005CE  36E3               	rlcf	plusw1,f,c
 19786  0005D0  0EF6               	movlw	-10
 19787  0005D2  36E3               	rlcf	plusw1,f,c
 19788  0005D4  0EF7               	movlw	-9
 19789  0005D6  36E3               	rlcf	plusw1,f,c
 19790                           
 19791                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19792  0005D8  90D8               	bcf	status,0,c
 19793  0005DA  0EFB               	movlw	-5
 19794  0005DC  32E3               	rrcf	plusw1,f,c
 19795  0005DE  0EFA               	movlw	-6
 19796  0005E0  32E3               	rrcf	plusw1,f,c
 19797  0005E2  0EF9               	movlw	-7
 19798  0005E4  32E3               	rrcf	plusw1,f,c
 19799  0005E6  0EF8               	movlw	-8
 19800  0005E8  32E3               	rrcf	plusw1,f,c
 19801                           
 19802                           ;stkvar	_multiplier @ sp[(-4)+-4]
 19803  0005EA  0EF8               	movlw	-8
 19804  0005EC  50E3               	movf	plusw1,w,c
 19805  0005EE  E1C0               	bnz	l2737
 19806  0005F0  0EF9               	movlw	-7
 19807  0005F2  50E3               	movf	plusw1,w,c
 19808  0005F4  E1BD               	bnz	l2737
 19809  0005F6  0EFA               	movlw	-6
 19810  0005F8  50E3               	movf	plusw1,w,c
 19811  0005FA  E1BA               	bnz	l2737
 19812  0005FC  0EFB               	movlw	-5
 19813  0005FE  50E3               	movf	plusw1,w,c
 19814  000600  A4D8               	btfss	status,2,c
 19815  000602  D7B6               	goto	l2737
 19816                           
 19817                           ;stkvar	_product @ sp[(-4)+0]
 19818  000604  0EFC               	movlw	-4
 19819  000606  006F FF8C  F02A    	movff	plusw1,btemp
 19820  00060C  0EFD               	movlw	-3
 19821  00060E  006F FF8C  F02B    	movff	plusw1,btemp+1
 19822  000614  0EFE               	movlw	-2
 19823  000616  006F FF8C  F02C    	movff	plusw1,btemp+2
 19824  00061C  0EFF               	movlw	-1
 19825  00061E  006F FF8C  F02D    	movff	plusw1,btemp+3
 19826                           
 19827                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19828  000624  0EF4               	movlw	244
 19829  000626  26E1               	addwf	fsr1l,f,c
 19830  000628  0EFF               	movlw	255
 19831  00062A  22E2               	addwfc	fsr1h,f,c
 19832  00062C  0012               	return		;funcret
 19833  00062E                     __end_of___lmul:
 19834                           	opt callstack 0
 19835                           
 19836 ;; *************** function ___almod *****************
 19837 ;; Defined at:
 19838 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 19839 ;; Parameters:    Size  Location     Type
 19840 ;;  dividend        4  [STACK] long 
 19841 ;;  divisor         4  [STACK] long 
 19842 ;; Auto vars:     Size  Location     Type
 19843 ;;  sign            1  [STACK] unsigned char 
 19844 ;;  counter         1  [STACK] unsigned char 
 19845 ;; Return value:  Size  Location     Type
 19846 ;;                  4  [STACK] long 
 19847 ;; Registers used:
 19848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19849 ;; Tracked objects:
 19850 ;;		On entry : 0/39
 19851 ;;		On exit  : 0/0
 19852 ;;		Unchanged: 0/0
 19853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19858 ;;Total ram usage:        0 bytes
 19859 ;; Hardware stack levels used:    1
 19860 ;; Hardware stack levels required when called:   15
 19861 ;; This function calls:
 19862 ;;		Nothing
 19863 ;; This function is called by:
 19864 ;;		___secs_to_tm
 19865 ;; This function uses a reentrant model
 19866 ;;
 19867                           
 19868                           	psect	text53
 19869  01EB04                     __ptext53:
 19870                           	opt callstack 0
 19871  01EB04                     ___almod:
 19872                           	opt callstack 0
 19873                           
 19874                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19875  01EB04  52E6               	movf	postinc1,f,c
 19876  01EB06  52E6               	movf	postinc1,f,c
 19877                           
 19878                           ;stkvar	_sign @ sp[(-2)+0]
 19879                           
 19880                           ;incstack = 0
 19881  01EB08  0EFE               	movlw	-2
 19882  01EB0A  6AE3               	clrf	plusw1,c
 19883                           
 19884                           ;stkvar	_dividend @ sp[(-2)+-4]
 19885  01EB0C  0EFD               	movlw	-3
 19886  01EB0E  AEE3               	btfss	plusw1,7,c
 19887  01EB10  D014               	goto	l11996
 19888                           
 19889                           ;stkvar	_dividend @ sp[(-2)+-4]
 19890                           ;stkvar	_dividend @ sp[(-2)+-4]
 19891  01EB12  0EFA               	movlw	-6
 19892  01EB14  6CE3               	negf	plusw1,c
 19893  01EB16  0EFB               	movlw	-5
 19894  01EB18  1EE3               	comf	plusw1,f,c
 19895  01EB1A  0EFC               	movlw	-4
 19896  01EB1C  1EE3               	comf	plusw1,f,c
 19897  01EB1E  0EFD               	movlw	-3
 19898  01EB20  1EE3               	comf	plusw1,f,c
 19899  01EB22  E308               	bnc	u11220
 19900  01EB24  0EFB               	movlw	-5
 19901  01EB26  2AE3               	incf	plusw1,f,c
 19902  01EB28  E305               	bnc	u11220
 19903  01EB2A  0EFC               	movlw	-4
 19904  01EB2C  2AE3               	incf	plusw1,f,c
 19905  01EB2E  E302               	bnc	u11220
 19906  01EB30  0EFD               	movlw	-3
 19907  01EB32  2AE3               	incf	plusw1,f,c
 19908  01EB34                     u11220:
 19909                           
 19910                           ;stkvar	_sign @ sp[(-2)+0]
 19911  01EB34  0EFE               	movlw	-2
 19912  01EB36  6AE3               	clrf	plusw1,c
 19913  01EB38  2AE3               	incf	plusw1,f,c
 19914  01EB3A                     l11996:
 19915                           
 19916                           ;stkvar	_divisor @ sp[(-2)+-8]
 19917  01EB3A  0EF9               	movlw	-7
 19918  01EB3C  AEE3               	btfss	plusw1,7,c
 19919  01EB3E  D011               	goto	u11240
 19920                           
 19921                           ;stkvar	_divisor @ sp[(-2)+-8]
 19922                           ;stkvar	_divisor @ sp[(-2)+-8]
 19923  01EB40  0EF6               	movlw	-10
 19924  01EB42  6CE3               	negf	plusw1,c
 19925  01EB44  0EF7               	movlw	-9
 19926  01EB46  1EE3               	comf	plusw1,f,c
 19927  01EB48  0EF8               	movlw	-8
 19928  01EB4A  1EE3               	comf	plusw1,f,c
 19929  01EB4C  0EF9               	movlw	-7
 19930  01EB4E  1EE3               	comf	plusw1,f,c
 19931  01EB50  E308               	bnc	u11240
 19932  01EB52  0EF7               	movlw	-9
 19933  01EB54  2AE3               	incf	plusw1,f,c
 19934  01EB56  E305               	bnc	u11240
 19935  01EB58  0EF8               	movlw	-8
 19936  01EB5A  2AE3               	incf	plusw1,f,c
 19937  01EB5C  E302               	bnc	u11240
 19938  01EB5E  0EF9               	movlw	-7
 19939  01EB60  2AE3               	incf	plusw1,f,c
 19940  01EB62                     u11240:
 19941                           
 19942                           ;stkvar	_divisor @ sp[(-2)+-8]
 19943  01EB62  0EF6               	movlw	-10
 19944  01EB64  50E3               	movf	plusw1,w,c
 19945  01EB66  E10A               	bnz	u11250
 19946  01EB68  0EF7               	movlw	-9
 19947  01EB6A  50E3               	movf	plusw1,w,c
 19948  01EB6C  E107               	bnz	u11250
 19949  01EB6E  0EF8               	movlw	-8
 19950  01EB70  50E3               	movf	plusw1,w,c
 19951  01EB72  E104               	bnz	u11250
 19952  01EB74  0EF9               	movlw	-7
 19953  01EB76  50E3               	movf	plusw1,w,c
 19954  01EB78  B4D8               	btfsc	status,2,c
 19955  01EB7A  D04D               	goto	u11280
 19956  01EB7C                     u11250:
 19957                           
 19958                           ;stkvar	_counter @ sp[(-2)+1]
 19959  01EB7C  0EFF               	movlw	-1
 19960  01EB7E  6AE3               	clrf	plusw1,c
 19961  01EB80  D00A               	goto	L17
 19962  01EB82                     l12004:
 19963                           
 19964                           ;stkvar	_divisor @ sp[(-2)+-8]
 19965  01EB82  90D8               	bcf	status,0,c
 19966  01EB84  0EF6               	movlw	-10
 19967  01EB86  36E3               	rlcf	plusw1,f,c
 19968  01EB88  0EF7               	movlw	-9
 19969  01EB8A  36E3               	rlcf	plusw1,f,c
 19970  01EB8C  0EF8               	movlw	-8
 19971  01EB8E  36E3               	rlcf	plusw1,f,c
 19972  01EB90  0EF9               	movlw	-7
 19973  01EB92  36E3               	rlcf	plusw1,f,c
 19974                           
 19975                           ;stkvar	_counter @ sp[(-2)+1]
 19976  01EB94  0EFF               	movlw	-1
 19977  01EB96                     L17:
 19978  01EB96  2AE3               	incf	plusw1,f,c
 19979                           
 19980                           ;stkvar	_divisor @ sp[(-2)+-8]
 19981  01EB98  0EF9               	movlw	-7
 19982  01EB9A  AEE3               	btfss	plusw1,7,c
 19983  01EB9C  D7F2               	goto	l12004
 19984  01EB9E                     u11260:
 19985                           
 19986                           ;stkvar	_divisor @ sp[(-2)+-8]
 19987                           ;stkvar	_dividend @ sp[(-2)+-4]
 19988  01EB9E  50E1               	movf	fsr1l,w,c
 19989  01EBA0  0FFA               	addlw	-6
 19990  01EBA2  6ED9               	movwf	fsr2l,c
 19991  01EBA4  50E2               	movf	fsr1h,w,c
 19992  01EBA6  6EDA               	movwf	fsr2h,c
 19993  01EBA8  0EFF               	movlw	255
 19994  01EBAA  22DA               	addwfc	fsr2h,f,c
 19995  01EBAC  0EF6               	movlw	-10
 19996  01EBAE  50E3               	movf	plusw1,w,c
 19997  01EBB0  5CDE               	subwf	postinc2,w,c
 19998  01EBB2  0EF7               	movlw	-9
 19999  01EBB4  50E3               	movf	plusw1,w,c
 20000  01EBB6  58DE               	subwfb	postinc2,w,c
 20001  01EBB8  0EF8               	movlw	-8
 20002  01EBBA  50E3               	movf	plusw1,w,c
 20003  01EBBC  58DE               	subwfb	postinc2,w,c
 20004  01EBBE  0EF9               	movlw	-7
 20005  01EBC0  50E3               	movf	plusw1,w,c
 20006  01EBC2  58DE               	subwfb	postinc2,w,c
 20007  01EBC4  A0D8               	btfss	status,0,c
 20008  01EBC6  D013               	goto	l12012
 20009                           
 20010                           ;stkvar	_divisor @ sp[(-2)+-8]
 20011                           ;stkvar	_dividend @ sp[(-2)+-4]
 20012  01EBC8  50E1               	movf	fsr1l,w,c
 20013  01EBCA  0FFA               	addlw	-6
 20014  01EBCC  6ED9               	movwf	fsr2l,c
 20015  01EBCE  50E2               	movf	fsr1h,w,c
 20016  01EBD0  6EDA               	movwf	fsr2h,c
 20017  01EBD2  0EFF               	movlw	255
 20018  01EBD4  22DA               	addwfc	fsr2h,f,c
 20019  01EBD6  0EF6               	movlw	-10
 20020  01EBD8  50E3               	movf	plusw1,w,c
 20021  01EBDA  5EDE               	subwf	postinc2,f,c
 20022  01EBDC  0EF7               	movlw	-9
 20023  01EBDE  50E3               	movf	plusw1,w,c
 20024  01EBE0  5ADE               	subwfb	postinc2,f,c
 20025  01EBE2  0EF8               	movlw	-8
 20026  01EBE4  50E3               	movf	plusw1,w,c
 20027  01EBE6  5ADE               	subwfb	postinc2,f,c
 20028  01EBE8  0EF9               	movlw	-7
 20029  01EBEA  50E3               	movf	plusw1,w,c
 20030  01EBEC  5ADE               	subwfb	postinc2,f,c
 20031  01EBEE                     l12012:
 20032                           
 20033                           ;stkvar	_divisor @ sp[(-2)+-8]
 20034  01EBEE  90D8               	bcf	status,0,c
 20035  01EBF0  0EF9               	movlw	-7
 20036  01EBF2  32E3               	rrcf	plusw1,f,c
 20037  01EBF4  0EF8               	movlw	-8
 20038  01EBF6  32E3               	rrcf	plusw1,f,c
 20039  01EBF8  0EF7               	movlw	-9
 20040  01EBFA  32E3               	rrcf	plusw1,f,c
 20041  01EBFC  0EF6               	movlw	-10
 20042  01EBFE  32E3               	rrcf	plusw1,f,c
 20043                           
 20044                           ;stkvar	_counter @ sp[(-2)+1]
 20045  01EC00  0EFF               	movlw	-1
 20046  01EC02  50E3               	movf	plusw1,w,c
 20047  01EC04  6E2A               	movwf	btemp^0,c
 20048  01EC06  0E01               	movlw	1
 20049  01EC08  5E2A               	subwf	btemp^0,f,c
 20050  01EC0A  0EFF               	movlw	-1
 20051  01EC0C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20052  01EC12  A4D8               	btfss	status,2,c
 20053  01EC14  D7C4               	goto	u11260
 20054  01EC16                     u11280:
 20055                           
 20056                           ;stkvar	_sign @ sp[(-2)+0]
 20057  01EC16  0EFE               	movlw	-2
 20058  01EC18  50E3               	movf	plusw1,w,c
 20059  01EC1A  B4D8               	btfsc	status,2,c
 20060  01EC1C  D011               	goto	u11300
 20061                           
 20062                           ;stkvar	_dividend @ sp[(-2)+-4]
 20063                           ;stkvar	_dividend @ sp[(-2)+-4]
 20064  01EC1E  0EFA               	movlw	-6
 20065  01EC20  6CE3               	negf	plusw1,c
 20066  01EC22  0EFB               	movlw	-5
 20067  01EC24  1EE3               	comf	plusw1,f,c
 20068  01EC26  0EFC               	movlw	-4
 20069  01EC28  1EE3               	comf	plusw1,f,c
 20070  01EC2A  0EFD               	movlw	-3
 20071  01EC2C  1EE3               	comf	plusw1,f,c
 20072  01EC2E  E308               	bnc	u11300
 20073  01EC30  0EFB               	movlw	-5
 20074  01EC32  2AE3               	incf	plusw1,f,c
 20075  01EC34  E305               	bnc	u11300
 20076  01EC36  0EFC               	movlw	-4
 20077  01EC38  2AE3               	incf	plusw1,f,c
 20078  01EC3A  E302               	bnc	u11300
 20079  01EC3C  0EFD               	movlw	-3
 20080  01EC3E  2AE3               	incf	plusw1,f,c
 20081  01EC40                     u11300:
 20082                           
 20083                           ;stkvar	_dividend @ sp[(-2)+-4]
 20084  01EC40  0EFA               	movlw	-6
 20085  01EC42  006F FF8C  F02A    	movff	plusw1,btemp
 20086  01EC48  0EFB               	movlw	-5
 20087  01EC4A  006F FF8C  F02B    	movff	plusw1,btemp+1
 20088  01EC50  0EFC               	movlw	-4
 20089  01EC52  006F FF8C  F02C    	movff	plusw1,btemp+2
 20090  01EC58  0EFD               	movlw	-3
 20091  01EC5A  006F FF8C  F02D    	movff	plusw1,btemp+3
 20092                           
 20093                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20094  01EC60  0EF6               	movlw	246
 20095  01EC62  26E1               	addwf	fsr1l,f,c
 20096  01EC64  0EFF               	movlw	255
 20097  01EC66  22E2               	addwfc	fsr1h,f,c
 20098  01EC68  0012               	return		;funcret
 20099  01EC6A                     __end_of___almod:
 20100                           	opt callstack 0
 20101                           
 20102 ;; *************** function ___aldiv *****************
 20103 ;; Defined at:
 20104 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;  dividend        4  [STACK] long 
 20107 ;;  divisor         4  [STACK] long 
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;  quotient        4  [STACK] long 
 20110 ;;  sign            1  [STACK] unsigned char 
 20111 ;;  counter         1  [STACK] unsigned char 
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  4  [STACK] long 
 20114 ;; Registers used:
 20115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20125 ;;Total ram usage:        0 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:   15
 20128 ;; This function calls:
 20129 ;;		Nothing
 20130 ;; This function is called by:
 20131 ;;		___secs_to_tm
 20132 ;;		_rule_to_secs
 20133 ;; This function uses a reentrant model
 20134 ;;
 20135                           
 20136                           	psect	text54
 20137  01E1F8                     __ptext54:
 20138                           	opt callstack 0
 20139  01E1F8                     ___aldiv:
 20140                           	opt callstack 0
 20141                           
 20142                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20143  01E1F8  0E06               	movlw	6
 20144  01E1FA  26E1               	addwf	fsr1l,f,c
 20145  01E1FC  0E00               	movlw	0
 20146  01E1FE  22E2               	addwfc	fsr1h,f,c
 20147                           
 20148                           ;stkvar	_sign @ sp[(-6)+4]
 20149                           
 20150                           ;incstack = 0
 20151  01E200  0EFE               	movlw	-2
 20152  01E202  6AE3               	clrf	plusw1,c
 20153                           
 20154                           ;stkvar	_divisor @ sp[(-6)+-8]
 20155  01E204  0EF5               	movlw	-11
 20156  01E206  AEE3               	btfss	plusw1,7,c
 20157  01E208  D014               	goto	l11538
 20158                           
 20159                           ;stkvar	_divisor @ sp[(-6)+-8]
 20160                           ;stkvar	_divisor @ sp[(-6)+-8]
 20161  01E20A  0EF2               	movlw	-14
 20162  01E20C  6CE3               	negf	plusw1,c
 20163  01E20E  0EF3               	movlw	-13
 20164  01E210  1EE3               	comf	plusw1,f,c
 20165  01E212  0EF4               	movlw	-12
 20166  01E214  1EE3               	comf	plusw1,f,c
 20167  01E216  0EF5               	movlw	-11
 20168  01E218  1EE3               	comf	plusw1,f,c
 20169  01E21A  E308               	bnc	u10540
 20170  01E21C  0EF3               	movlw	-13
 20171  01E21E  2AE3               	incf	plusw1,f,c
 20172  01E220  E305               	bnc	u10540
 20173  01E222  0EF4               	movlw	-12
 20174  01E224  2AE3               	incf	plusw1,f,c
 20175  01E226  E302               	bnc	u10540
 20176  01E228  0EF5               	movlw	-11
 20177  01E22A  2AE3               	incf	plusw1,f,c
 20178  01E22C                     u10540:
 20179                           
 20180                           ;stkvar	_sign @ sp[(-6)+4]
 20181  01E22C  0EFE               	movlw	-2
 20182  01E22E  6AE3               	clrf	plusw1,c
 20183  01E230  2AE3               	incf	plusw1,f,c
 20184  01E232                     l11538:
 20185                           
 20186                           ;stkvar	_dividend @ sp[(-6)+-4]
 20187  01E232  0EF9               	movlw	-7
 20188  01E234  AEE3               	btfss	plusw1,7,c
 20189  01E236  D013               	goto	l11544
 20190                           
 20191                           ;stkvar	_dividend @ sp[(-6)+-4]
 20192                           ;stkvar	_dividend @ sp[(-6)+-4]
 20193  01E238  0EF6               	movlw	-10
 20194  01E23A  6CE3               	negf	plusw1,c
 20195  01E23C  0EF7               	movlw	-9
 20196  01E23E  1EE3               	comf	plusw1,f,c
 20197  01E240  0EF8               	movlw	-8
 20198  01E242  1EE3               	comf	plusw1,f,c
 20199  01E244  0EF9               	movlw	-7
 20200  01E246  1EE3               	comf	plusw1,f,c
 20201  01E248  E308               	bnc	u10560
 20202  01E24A  0EF7               	movlw	-9
 20203  01E24C  2AE3               	incf	plusw1,f,c
 20204  01E24E  E305               	bnc	u10560
 20205  01E250  0EF8               	movlw	-8
 20206  01E252  2AE3               	incf	plusw1,f,c
 20207  01E254  E302               	bnc	u10560
 20208  01E256  0EF9               	movlw	-7
 20209  01E258  2AE3               	incf	plusw1,f,c
 20210  01E25A                     u10560:
 20211                           
 20212                           ;stkvar	_sign @ sp[(-6)+4]
 20213  01E25A  0EFE               	movlw	-2
 20214  01E25C  70E3               	btg	plusw1,0,c
 20215  01E25E                     l11544:
 20216                           
 20217                           ;stkvar	_quotient @ sp[(-6)+0]
 20218  01E25E  0EFA               	movlw	-6
 20219  01E260  6AE3               	clrf	plusw1,c
 20220  01E262  0EFB               	movlw	-5
 20221  01E264  6AE3               	clrf	plusw1,c
 20222  01E266  0EFC               	movlw	-4
 20223  01E268  6AE3               	clrf	plusw1,c
 20224  01E26A  0EFD               	movlw	-3
 20225  01E26C  6AE3               	clrf	plusw1,c
 20226                           
 20227                           ;stkvar	_divisor @ sp[(-6)+-8]
 20228  01E26E  0EF2               	movlw	-14
 20229  01E270  50E3               	movf	plusw1,w,c
 20230  01E272  E10A               	bnz	u10570
 20231  01E274  0EF3               	movlw	-13
 20232  01E276  50E3               	movf	plusw1,w,c
 20233  01E278  E107               	bnz	u10570
 20234  01E27A  0EF4               	movlw	-12
 20235  01E27C  50E3               	movf	plusw1,w,c
 20236  01E27E  E104               	bnz	u10570
 20237  01E280  0EF5               	movlw	-11
 20238  01E282  50E3               	movf	plusw1,w,c
 20239  01E284  B4D8               	btfsc	status,2,c
 20240  01E286  D058               	goto	u10600
 20241  01E288                     u10570:
 20242                           
 20243                           ;stkvar	_counter @ sp[(-6)+5]
 20244  01E288  0EFF               	movlw	-1
 20245  01E28A  6AE3               	clrf	plusw1,c
 20246  01E28C  D00A               	goto	L18
 20247  01E28E                     l11550:
 20248                           
 20249                           ;stkvar	_divisor @ sp[(-6)+-8]
 20250  01E28E  90D8               	bcf	status,0,c
 20251  01E290  0EF2               	movlw	-14
 20252  01E292  36E3               	rlcf	plusw1,f,c
 20253  01E294  0EF3               	movlw	-13
 20254  01E296  36E3               	rlcf	plusw1,f,c
 20255  01E298  0EF4               	movlw	-12
 20256  01E29A  36E3               	rlcf	plusw1,f,c
 20257  01E29C  0EF5               	movlw	-11
 20258  01E29E  36E3               	rlcf	plusw1,f,c
 20259                           
 20260                           ;stkvar	_counter @ sp[(-6)+5]
 20261  01E2A0  0EFF               	movlw	-1
 20262  01E2A2                     L18:
 20263  01E2A2  2AE3               	incf	plusw1,f,c
 20264                           
 20265                           ;stkvar	_divisor @ sp[(-6)+-8]
 20266  01E2A4  0EF5               	movlw	-11
 20267  01E2A6  AEE3               	btfss	plusw1,7,c
 20268  01E2A8  D7F2               	goto	l11550
 20269  01E2AA                     u10580:
 20270                           
 20271                           ;stkvar	_quotient @ sp[(-6)+0]
 20272  01E2AA  90D8               	bcf	status,0,c
 20273  01E2AC  0EFA               	movlw	-6
 20274  01E2AE  36E3               	rlcf	plusw1,f,c
 20275  01E2B0  0EFB               	movlw	-5
 20276  01E2B2  36E3               	rlcf	plusw1,f,c
 20277  01E2B4  0EFC               	movlw	-4
 20278  01E2B6  36E3               	rlcf	plusw1,f,c
 20279  01E2B8  0EFD               	movlw	-3
 20280  01E2BA  36E3               	rlcf	plusw1,f,c
 20281                           
 20282                           ;stkvar	_divisor @ sp[(-6)+-8]
 20283                           ;stkvar	_dividend @ sp[(-6)+-4]
 20284  01E2BC  50E1               	movf	fsr1l,w,c
 20285  01E2BE  0FF6               	addlw	-10
 20286  01E2C0  6ED9               	movwf	fsr2l,c
 20287  01E2C2  50E2               	movf	fsr1h,w,c
 20288  01E2C4  6EDA               	movwf	fsr2h,c
 20289  01E2C6  0EFF               	movlw	255
 20290  01E2C8  22DA               	addwfc	fsr2h,f,c
 20291  01E2CA  0EF2               	movlw	-14
 20292  01E2CC  50E3               	movf	plusw1,w,c
 20293  01E2CE  5CDE               	subwf	postinc2,w,c
 20294  01E2D0  0EF3               	movlw	-13
 20295  01E2D2  50E3               	movf	plusw1,w,c
 20296  01E2D4  58DE               	subwfb	postinc2,w,c
 20297  01E2D6  0EF4               	movlw	-12
 20298  01E2D8  50E3               	movf	plusw1,w,c
 20299  01E2DA  58DE               	subwfb	postinc2,w,c
 20300  01E2DC  0EF5               	movlw	-11
 20301  01E2DE  50E3               	movf	plusw1,w,c
 20302  01E2E0  58DE               	subwfb	postinc2,w,c
 20303  01E2E2  A0D8               	btfss	status,0,c
 20304  01E2E4  D015               	goto	l11562
 20305                           
 20306                           ;stkvar	_divisor @ sp[(-6)+-8]
 20307                           ;stkvar	_dividend @ sp[(-6)+-4]
 20308  01E2E6  50E1               	movf	fsr1l,w,c
 20309  01E2E8  0FF6               	addlw	-10
 20310  01E2EA  6ED9               	movwf	fsr2l,c
 20311  01E2EC  50E2               	movf	fsr1h,w,c
 20312  01E2EE  6EDA               	movwf	fsr2h,c
 20313  01E2F0  0EFF               	movlw	255
 20314  01E2F2  22DA               	addwfc	fsr2h,f,c
 20315  01E2F4  0EF2               	movlw	-14
 20316  01E2F6  50E3               	movf	plusw1,w,c
 20317  01E2F8  5EDE               	subwf	postinc2,f,c
 20318  01E2FA  0EF3               	movlw	-13
 20319  01E2FC  50E3               	movf	plusw1,w,c
 20320  01E2FE  5ADE               	subwfb	postinc2,f,c
 20321  01E300  0EF4               	movlw	-12
 20322  01E302  50E3               	movf	plusw1,w,c
 20323  01E304  5ADE               	subwfb	postinc2,f,c
 20324  01E306  0EF5               	movlw	-11
 20325  01E308  50E3               	movf	plusw1,w,c
 20326  01E30A  5ADE               	subwfb	postinc2,f,c
 20327                           
 20328                           ;stkvar	_quotient @ sp[(-6)+0]
 20329  01E30C  0EFA               	movlw	-6
 20330  01E30E  80E3               	bsf	plusw1,0,c
 20331  01E310                     l11562:
 20332                           
 20333                           ;stkvar	_divisor @ sp[(-6)+-8]
 20334  01E310  90D8               	bcf	status,0,c
 20335  01E312  0EF5               	movlw	-11
 20336  01E314  32E3               	rrcf	plusw1,f,c
 20337  01E316  0EF4               	movlw	-12
 20338  01E318  32E3               	rrcf	plusw1,f,c
 20339  01E31A  0EF3               	movlw	-13
 20340  01E31C  32E3               	rrcf	plusw1,f,c
 20341  01E31E  0EF2               	movlw	-14
 20342  01E320  32E3               	rrcf	plusw1,f,c
 20343                           
 20344                           ;stkvar	_counter @ sp[(-6)+5]
 20345  01E322  0EFF               	movlw	-1
 20346  01E324  50E3               	movf	plusw1,w,c
 20347  01E326  6E2A               	movwf	btemp^0,c
 20348  01E328  0E01               	movlw	1
 20349  01E32A  5E2A               	subwf	btemp^0,f,c
 20350  01E32C  0EFF               	movlw	-1
 20351  01E32E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20352  01E334  A4D8               	btfss	status,2,c
 20353  01E336  D7B9               	goto	u10580
 20354  01E338                     u10600:
 20355                           
 20356                           ;stkvar	_sign @ sp[(-6)+4]
 20357  01E338  0EFE               	movlw	-2
 20358  01E33A  50E3               	movf	plusw1,w,c
 20359  01E33C  B4D8               	btfsc	status,2,c
 20360  01E33E  D011               	goto	u10620
 20361                           
 20362                           ;stkvar	_quotient @ sp[(-6)+0]
 20363                           ;stkvar	_quotient @ sp[(-6)+0]
 20364  01E340  0EFA               	movlw	-6
 20365  01E342  6CE3               	negf	plusw1,c
 20366  01E344  0EFB               	movlw	-5
 20367  01E346  1EE3               	comf	plusw1,f,c
 20368  01E348  0EFC               	movlw	-4
 20369  01E34A  1EE3               	comf	plusw1,f,c
 20370  01E34C  0EFD               	movlw	-3
 20371  01E34E  1EE3               	comf	plusw1,f,c
 20372  01E350  E308               	bnc	u10620
 20373  01E352  0EFB               	movlw	-5
 20374  01E354  2AE3               	incf	plusw1,f,c
 20375  01E356  E305               	bnc	u10620
 20376  01E358  0EFC               	movlw	-4
 20377  01E35A  2AE3               	incf	plusw1,f,c
 20378  01E35C  E302               	bnc	u10620
 20379  01E35E  0EFD               	movlw	-3
 20380  01E360  2AE3               	incf	plusw1,f,c
 20381  01E362                     u10620:
 20382                           
 20383                           ;stkvar	_quotient @ sp[(-6)+0]
 20384  01E362  0EFA               	movlw	-6
 20385  01E364  006F FF8C  F02A    	movff	plusw1,btemp
 20386  01E36A  0EFB               	movlw	-5
 20387  01E36C  006F FF8C  F02B    	movff	plusw1,btemp+1
 20388  01E372  0EFC               	movlw	-4
 20389  01E374  006F FF8C  F02C    	movff	plusw1,btemp+2
 20390  01E37A  0EFD               	movlw	-3
 20391  01E37C  006F FF8C  F02D    	movff	plusw1,btemp+3
 20392                           
 20393                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20394  01E382  0EF2               	movlw	242
 20395  01E384  26E1               	addwf	fsr1l,f,c
 20396  01E386  0EFF               	movlw	255
 20397  01E388  22E2               	addwfc	fsr1h,f,c
 20398  01E38A  0012               	return		;funcret
 20399  01E38C                     __end_of___aldiv:
 20400                           	opt callstack 0
 20401                           
 20402 ;; *************** function _asctime *****************
 20403 ;; Defined at:
 20404 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 20405 ;; Parameters:    Size  Location     Type
 20406 ;;  tim             2  [STACK] PTR const struct tm
 20407 ;;		 -> localtime@tm(24), NULL(0), 
 20408 ;; Auto vars:     Size  Location     Type
 20409 ;;  cp              2  [STACK] PTR unsigned char 
 20410 ;;		 -> asctime@buf(27), 
 20411 ;;  s               2  [STACK] PTR const unsigned char 
 20412 ;;		 -> STR_133(37), STR_132(22), 
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  2  [STACK] PTR unsigned char 
 20415 ;; Registers used:
 20416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20417 ;; Tracked objects:
 20418 ;;		On entry : 0/39
 20419 ;;		On exit  : 0/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20426 ;;Total ram usage:        0 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:   17
 20429 ;; This function calls:
 20430 ;;		___awdiv
 20431 ;;		___awmod
 20432 ;;		_put2d
 20433 ;; This function is called by:
 20434 ;;		_main
 20435 ;;		_display_history
 20436 ;; This function uses a reentrant model
 20437 ;;
 20438                           
 20439                           	psect	text55
 20440  018842                     __ptext55:
 20441                           	opt callstack 0
 20442  018842                     _asctime:
 20443                           	opt callstack 0
 20444                           
 20445                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20446  018842  52E6               	movf	postinc1,f,c
 20447  018844  52E6               	movf	postinc1,f,c
 20448  018846  52E6               	movf	postinc1,f,c
 20449  018848  52E6               	movf	postinc1,f,c
 20450                           
 20451                           ;stkvar	_tim @ sp[(-4)+-2]
 20452                           
 20453                           ;incstack = 0
 20454  01884A  0EFA               	movlw	-6
 20455  01884C  006F FF8C  F034    	movff	plusw1,btemp+10
 20456  018852  0EFB               	movlw	-5
 20457  018854  006F FF8C  F035    	movff	plusw1,btemp+11
 20458  01885A  0E0C               	movlw	12
 20459  01885C  2434               	addwf	(btemp+10)^0,w,c
 20460  01885E  6ED9               	movwf	fsr2l,c
 20461  018860  0E00               	movlw	0
 20462  018862  2035               	addwfc	(btemp+11)^0,w,c
 20463  018864  6EDA               	movwf	fsr2h,c
 20464  018866  006F FF78  F034    	movff	postinc2,btemp+10
 20465  01886C  006F FF74  F035    	movff	postdec2,btemp+11
 20466  018872  0E03               	movlw	3
 20467  018874  0234               	mulwf	(btemp+10)^0,c
 20468  018876  006F FFCC  F032    	movff	prodl,btemp+8
 20469  01887C  006F FFD0  F033    	movff	prodh,btemp+9
 20470  018882  0235               	mulwf	(btemp+11)^0,c
 20471  018884  50F3               	movf	prodl,w,c
 20472  018886  2633               	addwf	(btemp+9)^0,f,c
 20473  018888  0E27               	movlw	low STR_132
 20474  01888A  6E34               	movwf	(btemp+10)^0,c
 20475  01888C  0EFD               	movlw	high STR_132
 20476  01888E  6E35               	movwf	(btemp+11)^0,c
 20477  018890  5032               	movf	(btemp+8)^0,w,c
 20478  018892  2634               	addwf	(btemp+10)^0,f,c
 20479  018894  5033               	movf	(btemp+9)^0,w,c
 20480  018896  2235               	addwfc	(btemp+11)^0,f,c
 20481                           
 20482                           ;stkvar	_s @ sp[(-4)+2]
 20483  018898  0EFF               	movlw	-1
 20484  01889A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20485  0188A0  0EFE               	movlw	-2
 20486  0188A2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20487                           
 20488                           ;stkvar	_cp @ sp[(-4)+0]
 20489  0188A8  0E03               	movlw	high asctime@buf
 20490  0188AA  6E2A               	movwf	btemp^0,c
 20491  0188AC  0EFD               	movlw	-3
 20492  0188AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20493  0188B4  0EC4               	movlw	low asctime@buf
 20494  0188B6  6E2A               	movwf	btemp^0,c
 20495  0188B8  0EFC               	movlw	-4
 20496  0188BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 20497                           
 20498                           ;stkvar	_s @ sp[(-4)+2]
 20499  0188C0  50E1               	movf	fsr1l,w,c
 20500  0188C2  0FFE               	addlw	-2
 20501  0188C4  6ED9               	movwf	fsr2l,c
 20502  0188C6  50E2               	movf	fsr1h,w,c
 20503  0188C8  6EDA               	movwf	fsr2h,c
 20504  0188CA  0EFF               	movlw	255
 20505  0188CC  22DA               	addwfc	fsr2h,f,c
 20506  0188CE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20507  0188D4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20508  0188DA                     	if	0	;tblptru may be non-zero
 20509  0188DA                     	endif
 20510  0188DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20511  0188DA  0E00               	movlw	low (__mediumconst shr (0+16))
 20512  0188DC  6EF8               	movwf	tblptru,c
 20513  0188DE                     	endif
 20514                           
 20515                           ;stkvar	_cp @ sp[(-4)+0]
 20516  0188DE  0EFC               	movlw	-4
 20517  0188E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 20518  0188E6  0EFD               	movlw	-3
 20519  0188E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 20520  0188EE  0008               	tblrd		*
 20521  0188F0  006F FFD7 FFDF     	movff	tablat,indf2
 20522                           
 20523                           ;stkvar	_s @ sp[(-4)+2]
 20524  0188F6  0EFE               	movlw	-2
 20525  0188F8  50E3               	movf	plusw1,w,c
 20526  0188FA  0F01               	addlw	1
 20527  0188FC  6E2A               	movwf	btemp^0,c
 20528  0188FE  0EFE               	movlw	-2
 20529  018900  0060  F0AB  FFE3   	movff	btemp,plusw1
 20530  018906  6A2A               	clrf	btemp^0,c
 20531  018908  0EFF               	movlw	-1
 20532  01890A  50E3               	movf	plusw1,w,c
 20533  01890C  202A               	addwfc	btemp^0,w,c
 20534  01890E  6E2A               	movwf	btemp^0,c
 20535  018910  0EFF               	movlw	-1
 20536  018912  0060  F0AB  FFE3   	movff	btemp,plusw1
 20537                           
 20538                           ;stkvar	_cp @ sp[(-4)+0]
 20539  018918  0EFC               	movlw	-4
 20540  01891A  50E3               	movf	plusw1,w,c
 20541  01891C  0F01               	addlw	1
 20542  01891E  6E2A               	movwf	btemp^0,c
 20543  018920  0EFC               	movlw	-4
 20544  018922  0060  F0AB  FFE3   	movff	btemp,plusw1
 20545  018928  6A2A               	clrf	btemp^0,c
 20546  01892A  0EFD               	movlw	-3
 20547  01892C  50E3               	movf	plusw1,w,c
 20548  01892E  202A               	addwfc	btemp^0,w,c
 20549  018930  6E2A               	movwf	btemp^0,c
 20550  018932  0EFD               	movlw	-3
 20551  018934  0060  F0AB  FFE3   	movff	btemp,plusw1
 20552                           
 20553                           ;stkvar	_s @ sp[(-4)+2]
 20554  01893A  50E1               	movf	fsr1l,w,c
 20555  01893C  0FFE               	addlw	-2
 20556  01893E  6ED9               	movwf	fsr2l,c
 20557  018940  50E2               	movf	fsr1h,w,c
 20558  018942  6EDA               	movwf	fsr2h,c
 20559  018944  0EFF               	movlw	255
 20560  018946  22DA               	addwfc	fsr2h,f,c
 20561  018948  006F FF7B FFF6     	movff	postinc2,tblptrl
 20562  01894E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20563  018954                     	if	0	;tblptru may be non-zero
 20564  018954                     	endif
 20565  018954                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20566  018954  0E00               	movlw	low (__mediumconst shr (0+16))
 20567  018956  6EF8               	movwf	tblptru,c
 20568  018958                     	endif
 20569                           
 20570                           ;stkvar	_cp @ sp[(-4)+0]
 20571  018958  0EFC               	movlw	-4
 20572  01895A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20573  018960  0EFD               	movlw	-3
 20574  018962  006F FF8F FFDA     	movff	plusw1,fsr2h
 20575  018968  0008               	tblrd		*
 20576  01896A  006F FFD7 FFDF     	movff	tablat,indf2
 20577                           
 20578                           ;stkvar	_s @ sp[(-4)+2]
 20579  018970  0EFE               	movlw	-2
 20580  018972  50E3               	movf	plusw1,w,c
 20581  018974  0F01               	addlw	1
 20582  018976  6E2A               	movwf	btemp^0,c
 20583  018978  0EFE               	movlw	-2
 20584  01897A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20585  018980  6A2A               	clrf	btemp^0,c
 20586  018982  0EFF               	movlw	-1
 20587  018984  50E3               	movf	plusw1,w,c
 20588  018986  202A               	addwfc	btemp^0,w,c
 20589  018988  6E2A               	movwf	btemp^0,c
 20590  01898A  0EFF               	movlw	-1
 20591  01898C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20592                           
 20593                           ;stkvar	_cp @ sp[(-4)+0]
 20594  018992  0EFC               	movlw	-4
 20595  018994  50E3               	movf	plusw1,w,c
 20596  018996  0F01               	addlw	1
 20597  018998  6E2A               	movwf	btemp^0,c
 20598  01899A  0EFC               	movlw	-4
 20599  01899C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20600  0189A2  6A2A               	clrf	btemp^0,c
 20601  0189A4  0EFD               	movlw	-3
 20602  0189A6  50E3               	movf	plusw1,w,c
 20603  0189A8  202A               	addwfc	btemp^0,w,c
 20604  0189AA  6E2A               	movwf	btemp^0,c
 20605  0189AC  0EFD               	movlw	-3
 20606  0189AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 20607                           
 20608                           ;stkvar	_s @ sp[(-4)+2]
 20609  0189B4  50E1               	movf	fsr1l,w,c
 20610  0189B6  0FFE               	addlw	-2
 20611  0189B8  6ED9               	movwf	fsr2l,c
 20612  0189BA  50E2               	movf	fsr1h,w,c
 20613  0189BC  6EDA               	movwf	fsr2h,c
 20614  0189BE  0EFF               	movlw	255
 20615  0189C0  22DA               	addwfc	fsr2h,f,c
 20616  0189C2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20617  0189C8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20618  0189CE                     	if	0	;tblptru may be non-zero
 20619  0189CE                     	endif
 20620  0189CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20621  0189CE  0E00               	movlw	low (__mediumconst shr (0+16))
 20622  0189D0  6EF8               	movwf	tblptru,c
 20623  0189D2                     	endif
 20624                           
 20625                           ;stkvar	_cp @ sp[(-4)+0]
 20626  0189D2  0EFC               	movlw	-4
 20627  0189D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20628  0189DA  0EFD               	movlw	-3
 20629  0189DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20630  0189E2  0008               	tblrd		*
 20631  0189E4  006F FFD7 FFDF     	movff	tablat,indf2
 20632                           
 20633                           ;stkvar	_cp @ sp[(-4)+0]
 20634  0189EA  0EFC               	movlw	-4
 20635  0189EC  50E3               	movf	plusw1,w,c
 20636  0189EE  0F01               	addlw	1
 20637  0189F0  6E2A               	movwf	btemp^0,c
 20638  0189F2  0EFC               	movlw	-4
 20639  0189F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 20640  0189FA  6A2A               	clrf	btemp^0,c
 20641  0189FC  0EFD               	movlw	-3
 20642  0189FE  50E3               	movf	plusw1,w,c
 20643  018A00  202A               	addwfc	btemp^0,w,c
 20644  018A02  6E2A               	movwf	btemp^0,c
 20645  018A04  0EFD               	movlw	-3
 20646  018A06  0060  F0AB  FFE3   	movff	btemp,plusw1
 20647                           
 20648                           ;stkvar	_cp @ sp[(-4)+0]
 20649  018A0C  0EFC               	movlw	-4
 20650  018A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 20651  018A14  0EFD               	movlw	-3
 20652  018A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 20653  018A1C  0E20               	movlw	32
 20654  018A1E  6EDF               	movwf	indf2,c
 20655                           
 20656                           ;stkvar	_cp @ sp[(-4)+0]
 20657  018A20  0EFC               	movlw	-4
 20658  018A22  50E3               	movf	plusw1,w,c
 20659  018A24  0F01               	addlw	1
 20660  018A26  6E2A               	movwf	btemp^0,c
 20661  018A28  0EFC               	movlw	-4
 20662  018A2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20663  018A30  6A2A               	clrf	btemp^0,c
 20664  018A32  0EFD               	movlw	-3
 20665  018A34  50E3               	movf	plusw1,w,c
 20666  018A36  202A               	addwfc	btemp^0,w,c
 20667  018A38  6E2A               	movwf	btemp^0,c
 20668  018A3A  0EFD               	movlw	-3
 20669  018A3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20670                           
 20671                           ;stkvar	_tim @ sp[(-4)+-2]
 20672  018A42  0EFA               	movlw	-6
 20673  018A44  006F FF8C  F034    	movff	plusw1,btemp+10
 20674  018A4A  0EFB               	movlw	-5
 20675  018A4C  006F FF8C  F035    	movff	plusw1,btemp+11
 20676  018A52  0E08               	movlw	8
 20677  018A54  2434               	addwf	(btemp+10)^0,w,c
 20678  018A56  6ED9               	movwf	fsr2l,c
 20679  018A58  0E00               	movlw	0
 20680  018A5A  2035               	addwfc	(btemp+11)^0,w,c
 20681  018A5C  6EDA               	movwf	fsr2h,c
 20682  018A5E  006F FF78  F034    	movff	postinc2,btemp+10
 20683  018A64  006F FF74  F035    	movff	postdec2,btemp+11
 20684  018A6A  0E03               	movlw	3
 20685  018A6C  0234               	mulwf	(btemp+10)^0,c
 20686  018A6E  006F FFCC  F032    	movff	prodl,btemp+8
 20687  018A74  006F FFD0  F033    	movff	prodh,btemp+9
 20688  018A7A  0235               	mulwf	(btemp+11)^0,c
 20689  018A7C  50F3               	movf	prodl,w,c
 20690  018A7E  2633               	addwf	(btemp+9)^0,f,c
 20691  018A80  0E76               	movlw	low STR_133
 20692  018A82  6E34               	movwf	(btemp+10)^0,c
 20693  018A84  0EFA               	movlw	high STR_133
 20694  018A86  6E35               	movwf	(btemp+11)^0,c
 20695  018A88  5032               	movf	(btemp+8)^0,w,c
 20696  018A8A  2634               	addwf	(btemp+10)^0,f,c
 20697  018A8C  5033               	movf	(btemp+9)^0,w,c
 20698  018A8E  2235               	addwfc	(btemp+11)^0,f,c
 20699                           
 20700                           ;stkvar	_s @ sp[(-4)+2]
 20701  018A90  0EFF               	movlw	-1
 20702  018A92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 20703  018A98  0EFE               	movlw	-2
 20704  018A9A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 20705                           
 20706                           ;stkvar	_s @ sp[(-4)+2]
 20707  018AA0  50E1               	movf	fsr1l,w,c
 20708  018AA2  0FFE               	addlw	-2
 20709  018AA4  6ED9               	movwf	fsr2l,c
 20710  018AA6  50E2               	movf	fsr1h,w,c
 20711  018AA8  6EDA               	movwf	fsr2h,c
 20712  018AAA  0EFF               	movlw	255
 20713  018AAC  22DA               	addwfc	fsr2h,f,c
 20714  018AAE  006F FF7B FFF6     	movff	postinc2,tblptrl
 20715  018AB4  006F FF77 FFF7     	movff	postdec2,tblptrh
 20716  018ABA                     	if	0	;tblptru may be non-zero
 20717  018ABA                     	endif
 20718  018ABA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20719  018ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 20720  018ABC  6EF8               	movwf	tblptru,c
 20721  018ABE                     	endif
 20722                           
 20723                           ;stkvar	_cp @ sp[(-4)+0]
 20724  018ABE  0EFC               	movlw	-4
 20725  018AC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 20726  018AC6  0EFD               	movlw	-3
 20727  018AC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 20728  018ACE  0008               	tblrd		*
 20729  018AD0  006F FFD7 FFDF     	movff	tablat,indf2
 20730                           
 20731                           ;stkvar	_s @ sp[(-4)+2]
 20732  018AD6  0EFE               	movlw	-2
 20733  018AD8  50E3               	movf	plusw1,w,c
 20734  018ADA  0F01               	addlw	1
 20735  018ADC  6E2A               	movwf	btemp^0,c
 20736  018ADE  0EFE               	movlw	-2
 20737  018AE0  0060  F0AB  FFE3   	movff	btemp,plusw1
 20738  018AE6  6A2A               	clrf	btemp^0,c
 20739  018AE8  0EFF               	movlw	-1
 20740  018AEA  50E3               	movf	plusw1,w,c
 20741  018AEC  202A               	addwfc	btemp^0,w,c
 20742  018AEE  6E2A               	movwf	btemp^0,c
 20743  018AF0  0EFF               	movlw	-1
 20744  018AF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 20745                           
 20746                           ;stkvar	_cp @ sp[(-4)+0]
 20747  018AF8  0EFC               	movlw	-4
 20748  018AFA  50E3               	movf	plusw1,w,c
 20749  018AFC  0F01               	addlw	1
 20750  018AFE  6E2A               	movwf	btemp^0,c
 20751  018B00  0EFC               	movlw	-4
 20752  018B02  0060  F0AB  FFE3   	movff	btemp,plusw1
 20753  018B08  6A2A               	clrf	btemp^0,c
 20754  018B0A  0EFD               	movlw	-3
 20755  018B0C  50E3               	movf	plusw1,w,c
 20756  018B0E  202A               	addwfc	btemp^0,w,c
 20757  018B10  6E2A               	movwf	btemp^0,c
 20758  018B12  0EFD               	movlw	-3
 20759  018B14  0060  F0AB  FFE3   	movff	btemp,plusw1
 20760                           
 20761                           ;stkvar	_s @ sp[(-4)+2]
 20762  018B1A  50E1               	movf	fsr1l,w,c
 20763  018B1C  0FFE               	addlw	-2
 20764  018B1E  6ED9               	movwf	fsr2l,c
 20765  018B20  50E2               	movf	fsr1h,w,c
 20766  018B22  6EDA               	movwf	fsr2h,c
 20767  018B24  0EFF               	movlw	255
 20768  018B26  22DA               	addwfc	fsr2h,f,c
 20769  018B28  006F FF7B FFF6     	movff	postinc2,tblptrl
 20770  018B2E  006F FF77 FFF7     	movff	postdec2,tblptrh
 20771  018B34                     	if	0	;tblptru may be non-zero
 20772  018B34                     	endif
 20773  018B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20774  018B34  0E00               	movlw	low (__mediumconst shr (0+16))
 20775  018B36  6EF8               	movwf	tblptru,c
 20776  018B38                     	endif
 20777                           
 20778                           ;stkvar	_cp @ sp[(-4)+0]
 20779  018B38  0EFC               	movlw	-4
 20780  018B3A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20781  018B40  0EFD               	movlw	-3
 20782  018B42  006F FF8F FFDA     	movff	plusw1,fsr2h
 20783  018B48  0008               	tblrd		*
 20784  018B4A  006F FFD7 FFDF     	movff	tablat,indf2
 20785                           
 20786                           ;stkvar	_s @ sp[(-4)+2]
 20787  018B50  0EFE               	movlw	-2
 20788  018B52  50E3               	movf	plusw1,w,c
 20789  018B54  0F01               	addlw	1
 20790  018B56  6E2A               	movwf	btemp^0,c
 20791  018B58  0EFE               	movlw	-2
 20792  018B5A  0060  F0AB  FFE3   	movff	btemp,plusw1
 20793  018B60  6A2A               	clrf	btemp^0,c
 20794  018B62  0EFF               	movlw	-1
 20795  018B64  50E3               	movf	plusw1,w,c
 20796  018B66  202A               	addwfc	btemp^0,w,c
 20797  018B68  6E2A               	movwf	btemp^0,c
 20798  018B6A  0EFF               	movlw	-1
 20799  018B6C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20800                           
 20801                           ;stkvar	_cp @ sp[(-4)+0]
 20802  018B72  0EFC               	movlw	-4
 20803  018B74  50E3               	movf	plusw1,w,c
 20804  018B76  0F01               	addlw	1
 20805  018B78  6E2A               	movwf	btemp^0,c
 20806  018B7A  0EFC               	movlw	-4
 20807  018B7C  0060  F0AB  FFE3   	movff	btemp,plusw1
 20808  018B82  6A2A               	clrf	btemp^0,c
 20809  018B84  0EFD               	movlw	-3
 20810  018B86  50E3               	movf	plusw1,w,c
 20811  018B88  202A               	addwfc	btemp^0,w,c
 20812  018B8A  6E2A               	movwf	btemp^0,c
 20813  018B8C  0EFD               	movlw	-3
 20814  018B8E  0060  F0AB  FFE3   	movff	btemp,plusw1
 20815                           
 20816                           ;stkvar	_s @ sp[(-4)+2]
 20817  018B94  50E1               	movf	fsr1l,w,c
 20818  018B96  0FFE               	addlw	-2
 20819  018B98  6ED9               	movwf	fsr2l,c
 20820  018B9A  50E2               	movf	fsr1h,w,c
 20821  018B9C  6EDA               	movwf	fsr2h,c
 20822  018B9E  0EFF               	movlw	255
 20823  018BA0  22DA               	addwfc	fsr2h,f,c
 20824  018BA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20825  018BA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20826  018BAE                     	if	0	;tblptru may be non-zero
 20827  018BAE                     	endif
 20828  018BAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20829  018BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 20830  018BB0  6EF8               	movwf	tblptru,c
 20831  018BB2                     	endif
 20832                           
 20833                           ;stkvar	_cp @ sp[(-4)+0]
 20834  018BB2  0EFC               	movlw	-4
 20835  018BB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 20836  018BBA  0EFD               	movlw	-3
 20837  018BBC  006F FF8F FFDA     	movff	plusw1,fsr2h
 20838  018BC2  0008               	tblrd		*
 20839  018BC4  006F FFD7 FFDF     	movff	tablat,indf2
 20840  018BCA  0E20               	movlw	32
 20841  018BCC  0103               	movlb	3	; () banked
 20842  018BCE  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 20843                           
 20844                           ; BSR set to: 3
 20845  018BD0  0E20               	movlw	32
 20846  018BD2  6EE6               	movwf	postinc1,c
 20847  018BD4  0E20               	movlw	32
 20848  018BD6  6EE6               	movwf	postinc1,c
 20849                           
 20850                           ;stkvar	_tim @ sp[(-6)+-2]
 20851  018BD8  0EF8               	movlw	-8
 20852  018BDA  006F FF8C  F034    	movff	plusw1,btemp+10
 20853  018BE0  0EF9               	movlw	-7
 20854  018BE2  006F FF8C  F035    	movff	plusw1,btemp+11
 20855  018BE8  0E06               	movlw	6
 20856  018BEA  2434               	addwf	(btemp+10)^0,w,c
 20857  018BEC  6ED9               	movwf	fsr2l,c
 20858  018BEE  0E00               	movlw	0
 20859  018BF0  2035               	addwfc	(btemp+11)^0,w,c
 20860  018BF2  6EDA               	movwf	fsr2h,c
 20861  018BF4  50DF               	movf	indf2,w,c
 20862  018BF6  6EE6               	movwf	postinc1,c
 20863  018BF8  0ECE               	movlw	low (asctime@buf+10)
 20864  018BFA  6EE6               	movwf	postinc1,c
 20865  018BFC  0E03               	movlw	high (asctime@buf+10)
 20866  018BFE  6EE6               	movwf	postinc1,c
 20867  018C00  ECB6  F0FC         	call	_put2d	;wreg free
 20868  018C04  0E3A               	movlw	58
 20869  018C06  6EE6               	movwf	postinc1,c
 20870  018C08  0E30               	movlw	48
 20871  018C0A  6EE6               	movwf	postinc1,c
 20872                           
 20873                           ;stkvar	_tim @ sp[(-6)+-2]
 20874  018C0C  0EF8               	movlw	-8
 20875  018C0E  006F FF8C  F034    	movff	plusw1,btemp+10
 20876  018C14  0EF9               	movlw	-7
 20877  018C16  006F FF8C  F035    	movff	plusw1,btemp+11
 20878  018C1C  0E04               	movlw	4
 20879  018C1E  2434               	addwf	(btemp+10)^0,w,c
 20880  018C20  6ED9               	movwf	fsr2l,c
 20881  018C22  0E00               	movlw	0
 20882  018C24  2035               	addwfc	(btemp+11)^0,w,c
 20883  018C26  6EDA               	movwf	fsr2h,c
 20884  018C28  50DF               	movf	indf2,w,c
 20885  018C2A  6EE6               	movwf	postinc1,c
 20886  018C2C  0ED1               	movlw	low (asctime@buf+13)
 20887  018C2E  6EE6               	movwf	postinc1,c
 20888  018C30  0E03               	movlw	high (asctime@buf+13)
 20889  018C32  6EE6               	movwf	postinc1,c
 20890  018C34  ECB6  F0FC         	call	_put2d	;wreg free
 20891  018C38  0E3A               	movlw	58
 20892  018C3A  6EE6               	movwf	postinc1,c
 20893  018C3C  0E30               	movlw	48
 20894  018C3E  6EE6               	movwf	postinc1,c
 20895                           
 20896                           ;stkvar	_tim @ sp[(-6)+-2]
 20897  018C40  0EF8               	movlw	-8
 20898  018C42  006F FF8C  F034    	movff	plusw1,btemp+10
 20899  018C48  0EF9               	movlw	-7
 20900  018C4A  006F FF8C  F035    	movff	plusw1,btemp+11
 20901  018C50  0E02               	movlw	2
 20902  018C52  2434               	addwf	(btemp+10)^0,w,c
 20903  018C54  6ED9               	movwf	fsr2l,c
 20904  018C56  0E00               	movlw	0
 20905  018C58  2035               	addwfc	(btemp+11)^0,w,c
 20906  018C5A  6EDA               	movwf	fsr2h,c
 20907  018C5C  50DF               	movf	indf2,w,c
 20908  018C5E  6EE6               	movwf	postinc1,c
 20909  018C60  0ED4               	movlw	low (asctime@buf+16)
 20910  018C62  6EE6               	movwf	postinc1,c
 20911  018C64  0E03               	movlw	high (asctime@buf+16)
 20912  018C66  6EE6               	movwf	postinc1,c
 20913  018C68  ECB6  F0FC         	call	_put2d	;wreg free
 20914  018C6C  0E20               	movlw	32
 20915  018C6E  6EE6               	movwf	postinc1,c
 20916  018C70  0E30               	movlw	48
 20917  018C72  6EE6               	movwf	postinc1,c
 20918                           
 20919                           ;stkvar	_tim @ sp[(-6)+-2]
 20920  018C74  0EF8               	movlw	-8
 20921  018C76  006F FF8F FFD9     	movff	plusw1,fsr2l
 20922  018C7C  0EF9               	movlw	-7
 20923  018C7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 20924  018C84  50DF               	movf	indf2,w,c
 20925  018C86  6EE6               	movwf	postinc1,c
 20926  018C88  0ED7               	movlw	low (asctime@buf+19)
 20927  018C8A  6EE6               	movwf	postinc1,c
 20928  018C8C  0E03               	movlw	high (asctime@buf+19)
 20929  018C8E  6EE6               	movwf	postinc1,c
 20930  018C90  ECB6  F0FC         	call	_put2d	;wreg free
 20931  018C94  0E00               	movlw	0
 20932  018C96  6EE6               	movwf	postinc1,c
 20933  018C98  0E20               	movlw	32
 20934  018C9A  6EE6               	movwf	postinc1,c
 20935  018C9C  0E64               	movlw	100
 20936  018C9E  6EE6               	movwf	postinc1,c
 20937  018CA0  0E00               	movlw	0
 20938  018CA2  6EE6               	movwf	postinc1,c
 20939                           
 20940                           ;stkvar	_tim @ sp[(-8)+-2]
 20941  018CA4  0EF6               	movlw	-10
 20942  018CA6  006F FF8C  F034    	movff	plusw1,btemp+10
 20943  018CAC  0EF7               	movlw	-9
 20944  018CAE  006F FF8C  F035    	movff	plusw1,btemp+11
 20945  018CB4  0E0A               	movlw	10
 20946  018CB6  2434               	addwf	(btemp+10)^0,w,c
 20947  018CB8  6ED9               	movwf	fsr2l,c
 20948  018CBA  0E00               	movlw	0
 20949  018CBC  2035               	addwfc	(btemp+11)^0,w,c
 20950  018CBE  6EDA               	movwf	fsr2h,c
 20951  018CC0  006F FF78  F034    	movff	postinc2,btemp+10
 20952  018CC6  006F FF74  F035    	movff	postdec2,btemp+11
 20953  018CCC  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20954  018CD2  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20955  018CD8  ECA0  F0F9         	call	___awdiv	;wreg free
 20956  018CDC  502A               	movf	btemp^0,w,c
 20957  018CDE  0F13               	addlw	19
 20958  018CE0  6EE6               	movwf	postinc1,c
 20959  018CE2  0EDA               	movlw	low (asctime@buf+22)
 20960  018CE4  6EE6               	movwf	postinc1,c
 20961  018CE6  0E03               	movlw	high (asctime@buf+22)
 20962  018CE8  6EE6               	movwf	postinc1,c
 20963  018CEA  ECB6  F0FC         	call	_put2d	;wreg free
 20964  018CEE  0E0A               	movlw	10
 20965  018CF0  6EE6               	movwf	postinc1,c
 20966  018CF2  0E30               	movlw	48
 20967  018CF4  6EE6               	movwf	postinc1,c
 20968  018CF6  0E64               	movlw	100
 20969  018CF8  6EE6               	movwf	postinc1,c
 20970  018CFA  0E00               	movlw	0
 20971  018CFC  6EE6               	movwf	postinc1,c
 20972                           
 20973                           ;stkvar	_tim @ sp[(-8)+-2]
 20974  018CFE  0EF6               	movlw	-10
 20975  018D00  006F FF8C  F034    	movff	plusw1,btemp+10
 20976  018D06  0EF7               	movlw	-9
 20977  018D08  006F FF8C  F035    	movff	plusw1,btemp+11
 20978  018D0E  0E0A               	movlw	10
 20979  018D10  2434               	addwf	(btemp+10)^0,w,c
 20980  018D12  6ED9               	movwf	fsr2l,c
 20981  018D14  0E00               	movlw	0
 20982  018D16  2035               	addwfc	(btemp+11)^0,w,c
 20983  018D18  6EDA               	movwf	fsr2h,c
 20984  018D1A  006F FF78  F034    	movff	postinc2,btemp+10
 20985  018D20  006F FF74  F035    	movff	postdec2,btemp+11
 20986  018D26  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 20987  018D2C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 20988  018D32  ECCF  F0FD         	call	___awmod	;wreg free
 20989  018D36  502A               	movf	btemp^0,w,c
 20990  018D38  6EE6               	movwf	postinc1,c
 20991  018D3A  0EDC               	movlw	low (asctime@buf+24)
 20992  018D3C  6EE6               	movwf	postinc1,c
 20993  018D3E  0E03               	movlw	high (asctime@buf+24)
 20994  018D40  6EE6               	movwf	postinc1,c
 20995  018D42  ECB6  F0FC         	call	_put2d	;wreg free
 20996  018D46  0EC4               	movlw	low asctime@buf
 20997  018D48  6E2A               	movwf	btemp^0,c
 20998  018D4A  0E03               	movlw	high asctime@buf
 20999  018D4C  6E2B               	movwf	(btemp+1)^0,c
 21000                           
 21001                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21002  018D4E  0EFA               	movlw	250
 21003  018D50  26E1               	addwf	fsr1l,f,c
 21004  018D52  0EFF               	movlw	255
 21005  018D54  22E2               	addwfc	fsr1h,f,c
 21006  018D56  0012               	return		;funcret
 21007  018D58                     __end_of_asctime:
 21008                           	opt callstack 0
 21009                           
 21010 ;; *************** function _put2d *****************
 21011 ;; Defined at:
 21012 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 21013 ;; Parameters:    Size  Location     Type
 21014 ;;  cp              2  [STACK] PTR unsigned char 
 21015 ;;		 -> asctime@buf(27), 
 21016 ;;  i               1  [STACK] unsigned char 
 21017 ;;  cl              1  [STACK] unsigned char 
 21018 ;;  ct              1  [STACK] unsigned char 
 21019 ;; Auto vars:     Size  Location     Type
 21020 ;;		None
 21021 ;; Return value:  Size  Location     Type
 21022 ;;                  1  [STACK] void 
 21023 ;; Registers used:
 21024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 21025 ;; Tracked objects:
 21026 ;;		On entry : 0/3
 21027 ;;		On exit  : 0/0
 21028 ;;		Unchanged: 0/0
 21029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21034 ;;Total ram usage:        0 bytes
 21035 ;; Hardware stack levels used:    1
 21036 ;; Hardware stack levels required when called:   16
 21037 ;; This function calls:
 21038 ;;		___awdiv
 21039 ;;		___lbmod
 21040 ;; This function is called by:
 21041 ;;		_asctime
 21042 ;; This function uses a reentrant model
 21043 ;;
 21044                           
 21045                           	psect	text56
 21046  01F96C                     __ptext56:
 21047                           	opt callstack 0
 21048  01F96C                     _put2d:
 21049                           	opt callstack 12
 21050                           
 21051                           ;stkvar	_ct @ sp[(0)+-5]
 21052                           ;stkvar	_cp @ sp[(0)+-2]
 21053                           
 21054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21055                           ;incstack = 0
 21056  01F96C  0EFE               	movlw	-2
 21057  01F96E  006F FF8F FFD9     	movff	plusw1,fsr2l
 21058  01F974  0EFF               	movlw	-1
 21059  01F976  006F FF8F FFDA     	movff	plusw1,fsr2h
 21060  01F97C  0EFB               	movlw	-5
 21061  01F97E  006F FF8F FFDF     	movff	plusw1,indf2
 21062  01F984  0E0A               	movlw	10
 21063  01F986  6EE6               	movwf	postinc1,c
 21064                           
 21065                           ;stkvar	_i @ sp[(-1)+-3]
 21066  01F988  0EFC               	movlw	-4
 21067  01F98A  50E3               	movf	plusw1,w,c
 21068  01F98C  6EE6               	movwf	postinc1,c
 21069  01F98E  ECB4  F007         	call	___lbmod	;wreg free
 21070  01F992  0E30               	movlw	48
 21071  01F994  262A               	addwf	btemp^0,f,c
 21072                           
 21073                           ;stkvar	_cp @ sp[(0)+-2]
 21074  01F996  0EFE               	movlw	-2
 21075  01F998  006F FF8C  F02B    	movff	plusw1,btemp+1
 21076  01F99E  0E01               	movlw	1
 21077  01F9A0  5E2B               	subwf	(btemp+1)^0,f,c
 21078  01F9A2  0EFE               	movlw	-2
 21079  01F9A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21080  01F9AA  0EFF               	movlw	-1
 21081  01F9AC  006F FF8C  F02B    	movff	plusw1,btemp+1
 21082  01F9B2  0E00               	movlw	0
 21083  01F9B4  5A2B               	subwfb	(btemp+1)^0,f,c
 21084  01F9B6  0EFF               	movlw	-1
 21085  01F9B8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 21086  01F9BE  0EFE               	movlw	-2
 21087  01F9C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 21088  01F9C6  0EFF               	movlw	-1
 21089  01F9C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 21090  01F9CE  0060  F0AB  FFDF   	movff	btemp,indf2
 21091  01F9D4  0E0A               	movlw	10
 21092  01F9D6  6EE6               	movwf	postinc1,c
 21093  01F9D8  0E00               	movlw	0
 21094  01F9DA  6EE6               	movwf	postinc1,c
 21095                           
 21096                           ;stkvar	_i @ sp[(-2)+-3]
 21097  01F9DC  0EFB               	movlw	-5
 21098  01F9DE  50E3               	movf	plusw1,w,c
 21099  01F9E0  6EE6               	movwf	postinc1,c
 21100  01F9E2  0E00               	movlw	0
 21101  01F9E4  6EE6               	movwf	postinc1,c
 21102  01F9E6  ECA0  F0F9         	call	___awdiv	;wreg free
 21103                           
 21104                           ;stkvar	_i @ sp[(0)+-3]
 21105  01F9EA  0EFD               	movlw	-3
 21106  01F9EC  0060  F0AB  FFE3   	movff	btemp,plusw1
 21107  01F9F2  0EFD               	movlw	-3
 21108  01F9F4  50E3               	movf	plusw1,w,c
 21109  01F9F6  B4D8               	btfsc	status,2,c
 21110  01F9F8  D021               	goto	l16908
 21111                           
 21112                           ;stkvar	_cp @ sp[(0)+-2]
 21113  01F9FA  0EFE               	movlw	-2
 21114  01F9FC  006F FF8C  F02A    	movff	plusw1,btemp
 21115  01FA02  0E01               	movlw	1
 21116  01FA04  5E2A               	subwf	btemp^0,f,c
 21117  01FA06  0EFE               	movlw	-2
 21118  01FA08  0060  F0AB  FFE3   	movff	btemp,plusw1
 21119  01FA0E  0EFF               	movlw	-1
 21120  01FA10  006F FF8C  F02A    	movff	plusw1,btemp
 21121  01FA16  0E00               	movlw	0
 21122  01FA18  5A2A               	subwfb	btemp^0,f,c
 21123  01FA1A  0EFF               	movlw	-1
 21124  01FA1C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21125  01FA22  0EFE               	movlw	-2
 21126  01FA24  006F FF8F FFD9     	movff	plusw1,fsr2l
 21127  01FA2A  0EFF               	movlw	-1
 21128  01FA2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 21129                           
 21130                           ;stkvar	_i @ sp[(0)+-3]
 21131  01FA32  0EFD               	movlw	-3
 21132  01FA34  50E3               	movf	plusw1,w,c
 21133  01FA36  0F30               	addlw	48
 21134  01FA38  6EDF               	movwf	indf2,c
 21135  01FA3A  D020               	goto	l3422
 21136  01FA3C                     l16908:
 21137                           
 21138                           ;stkvar	_cl @ sp[(0)+-4]
 21139                           ;stkvar	_cp @ sp[(0)+-2]
 21140  01FA3C  0EFE               	movlw	-2
 21141  01FA3E  006F FF8C  F02A    	movff	plusw1,btemp
 21142  01FA44  0E01               	movlw	1
 21143  01FA46  5E2A               	subwf	btemp^0,f,c
 21144  01FA48  0EFE               	movlw	-2
 21145  01FA4A  0060  F0AB  FFE3   	movff	btemp,plusw1
 21146  01FA50  0EFF               	movlw	-1
 21147  01FA52  006F FF8C  F02A    	movff	plusw1,btemp
 21148  01FA58  0E00               	movlw	0
 21149  01FA5A  5A2A               	subwfb	btemp^0,f,c
 21150  01FA5C  0EFF               	movlw	-1
 21151  01FA5E  0060  F0AB  FFE3   	movff	btemp,plusw1
 21152  01FA64  0EFE               	movlw	-2
 21153  01FA66  006F FF8F FFD9     	movff	plusw1,fsr2l
 21154  01FA6C  0EFF               	movlw	-1
 21155  01FA6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 21156  01FA74  0EFC               	movlw	-4
 21157  01FA76  006F FF8F FFDF     	movff	plusw1,indf2
 21158  01FA7C                     l3422:
 21159                           
 21160                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 21161  01FA7C  0EFB               	movlw	251
 21162  01FA7E  26E1               	addwf	fsr1l,f,c
 21163  01FA80  0EFF               	movlw	255
 21164  01FA82  22E2               	addwfc	fsr1h,f,c
 21165  01FA84  0012               	return		;funcret
 21166  01FA86                     __end_of_put2d:
 21167                           	opt callstack 0
 21168                           
 21169 ;; *************** function ___lbmod *****************
 21170 ;; Defined at:
 21171 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 21172 ;; Parameters:    Size  Location     Type
 21173 ;;  dividend        1  [STACK] unsigned char 
 21174 ;;  divisor         1  [STACK] unsigned char 
 21175 ;; Auto vars:     Size  Location     Type
 21176 ;;  rem             1  [STACK] unsigned char 
 21177 ;;  counter         1  [STACK] unsigned char 
 21178 ;; Return value:  Size  Location     Type
 21179 ;;                  1  [STACK] unsigned char 
 21180 ;; Registers used:
 21181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 21182 ;; Tracked objects:
 21183 ;;		On entry : 0/3
 21184 ;;		On exit  : 0/0
 21185 ;;		Unchanged: 0/0
 21186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21191 ;;Total ram usage:        0 bytes
 21192 ;; Hardware stack levels used:    1
 21193 ;; Hardware stack levels required when called:   15
 21194 ;; This function calls:
 21195 ;;		Nothing
 21196 ;; This function is called by:
 21197 ;;		_put2d
 21198 ;; This function uses a reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text57
 21202  000F68                     __ptext57:
 21203                           	opt callstack 0
 21204  000F68                     ___lbmod:
 21205                           	opt callstack 0
 21206                           
 21207                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21208  000F68  52E6               	movf	postinc1,f,c
 21209  000F6A  52E6               	movf	postinc1,f,c
 21210                           
 21211                           ;stkvar	_counter @ sp[(-2)+1]
 21212                           
 21213                           ;incstack = 0
 21214  000F6C  0EFF               	movlw	-1
 21215  000F6E  6AE3               	clrf	plusw1,c
 21216  000F70  86E3               	bsf	plusw1,3,c
 21217                           
 21218                           ;stkvar	_rem @ sp[(-2)+0]
 21219  000F72  0EFE               	movlw	-2
 21220  000F74  6AE3               	clrf	plusw1,c
 21221  000F76                     l16648:
 21222                           
 21223                           ;stkvar	_dividend @ sp[(-2)+-1]
 21224  000F76  0EFD               	movlw	-3
 21225  000F78  006F FF8C  F035    	movff	plusw1,btemp+11
 21226                           
 21227                           ;stkvar	_rem @ sp[(-2)+0]
 21228  000F7E  0EFE               	movlw	-2
 21229  000F80  006F FF8C  F034    	movff	plusw1,btemp+10
 21230  000F86  90D8               	bcf	status,0,c
 21231  000F88  3435               	rlcf	(btemp+11)^0,w,c
 21232  000F8A  3434               	rlcf	(btemp+10)^0,w,c
 21233  000F8C  6E35               	movwf	(btemp+11)^0,c
 21234                           
 21235                           ;stkvar	_rem @ sp[(-2)+0]
 21236  000F8E  0EFE               	movlw	-2
 21237  000F90  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21238                           
 21239                           ;stkvar	_dividend @ sp[(-2)+-1]
 21240  000F96  50E1               	movf	fsr1l,w,c
 21241  000F98  0FFD               	addlw	-3
 21242  000F9A  6ED9               	movwf	fsr2l,c
 21243  000F9C  50E2               	movf	fsr1h,w,c
 21244  000F9E  6EDA               	movwf	fsr2h,c
 21245  000FA0  0EFF               	movlw	255
 21246  000FA2  22DA               	addwfc	fsr2h,f,c
 21247  000FA4  90D8               	bcf	status,0,c
 21248  000FA6  36DF               	rlcf	indf2,f,c
 21249                           
 21250                           ;stkvar	_divisor @ sp[(-2)+-2]
 21251                           ;stkvar	_rem @ sp[(-2)+0]
 21252  000FA8  50E1               	movf	fsr1l,w,c
 21253  000FAA  0FFE               	addlw	-2
 21254  000FAC  6ED9               	movwf	fsr2l,c
 21255  000FAE  50E2               	movf	fsr1h,w,c
 21256  000FB0  6EDA               	movwf	fsr2h,c
 21257  000FB2  0EFF               	movlw	255
 21258  000FB4  22DA               	addwfc	fsr2h,f,c
 21259  000FB6  0EFC               	movlw	-4
 21260  000FB8  50E3               	movf	plusw1,w,c
 21261  000FBA  5CDE               	subwf	postinc2,w,c
 21262  000FBC  A0D8               	btfss	status,0,c
 21263  000FBE  D00D               	goto	l16656
 21264                           
 21265                           ;stkvar	_divisor @ sp[(-2)+-2]
 21266  000FC0  0EFC               	movlw	-4
 21267  000FC2  006F FF8C  F035    	movff	plusw1,btemp+11
 21268                           
 21269                           ;stkvar	_rem @ sp[(-2)+0]
 21270  000FC8  50E1               	movf	fsr1l,w,c
 21271  000FCA  0FFE               	addlw	-2
 21272  000FCC  6ED9               	movwf	fsr2l,c
 21273  000FCE  50E2               	movf	fsr1h,w,c
 21274  000FD0  6EDA               	movwf	fsr2h,c
 21275  000FD2  0EFF               	movlw	255
 21276  000FD4  22DA               	addwfc	fsr2h,f,c
 21277  000FD6  5035               	movf	(btemp+11)^0,w,c
 21278  000FD8  5EDF               	subwf	indf2,f,c
 21279  000FDA                     l16656:
 21280                           
 21281                           ;stkvar	_counter @ sp[(-2)+1]
 21282  000FDA  0EFF               	movlw	-1
 21283  000FDC  50E3               	movf	plusw1,w,c
 21284  000FDE  6E2A               	movwf	btemp^0,c
 21285  000FE0  0E01               	movlw	1
 21286  000FE2  5E2A               	subwf	btemp^0,f,c
 21287  000FE4  0EFF               	movlw	-1
 21288  000FE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 21289  000FEC  A4D8               	btfss	status,2,c
 21290  000FEE  D7C3               	goto	l16648
 21291                           
 21292                           ;stkvar	_rem @ sp[(-2)+0]
 21293  000FF0  0EFE               	movlw	-2
 21294  000FF2  006F FF8C  F02A    	movff	plusw1,btemp
 21295                           
 21296                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21297  000FF8  52E5               	movf	postdec1,f,c
 21298  000FFA  52E5               	movf	postdec1,f,c
 21299  000FFC  52E5               	movf	postdec1,f,c
 21300  000FFE  52E5               	movf	postdec1,f,c
 21301  001000  0012               	return		;funcret
 21302  001002                     __end_of___lbmod:
 21303                           	opt callstack 0
 21304                           
 21305 ;; *************** function _current_sensor_cal *****************
 21306 ;; Defined at:
 21307 ;;		line 525 in file "main.c"
 21308 ;; Parameters:    Size  Location     Type
 21309 ;;		None
 21310 ;; Auto vars:     Size  Location     Type
 21311 ;;  cp              4  [STACK] unsigned long 
 21312 ;;  cb              4  [STACK] unsigned long 
 21313 ;;  x               1  [STACK] unsigned char 
 21314 ;; Return value:  Size  Location     Type
 21315 ;;                  1  [STACK] _Bool 
 21316 ;; Registers used:
 21317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 21318 ;; Tracked objects:
 21319 ;;		On entry : 0/2
 21320 ;;		On exit  : 0/0
 21321 ;;		Unchanged: 0/0
 21322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21327 ;;Total ram usage:        0 bytes
 21328 ;; Hardware stack levels used:    1
 21329 ;; Hardware stack levels required when called:   27
 21330 ;; This function calls:
 21331 ;;		_WaitMs
 21332 ;;		_cal_current_zero
 21333 ;;		_clear_adc_scan
 21334 ;;		_get_raw_result
 21335 ;;		_get_switch
 21336 ;;		_get_vterm_ptr
 21337 ;;		_spinners
 21338 ;;		_sprintf
 21339 ;;		_start_adc_scan
 21340 ;;		_update_lcd
 21341 ;;		_write_cal_data
 21342 ;; This function is called by:
 21343 ;;		_main
 21344 ;; This function uses a reentrant model
 21345 ;;
 21346                           
 21347                           	psect	text58
 21348  019694                     __ptext58:
 21349                           	opt callstack 0
 21350  019694                     _current_sensor_cal:
 21351                           	opt callstack 0
 21352                           
 21353                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21354  019694  0E09               	movlw	9
 21355  019696  26E1               	addwf	fsr1l,f,c
 21356  019698  0E00               	movlw	0
 21357  01969A  22E2               	addwfc	fsr1h,f,c
 21358                           
 21359                           ;main.c: 527:  uint8_t x = 0;
 21360                           ;stkvar	_x @ sp[(-9)+8]
 21361                           
 21362                           ;incstack = 0
 21363  01969C  0EFF               	movlw	-1
 21364  01969E  6AE3               	clrf	plusw1,c
 21365                           
 21366                           ;main.c: 528:  uint32_t cb = 0, cp = 0;
 21367                           ;stkvar	_cb @ sp[(-9)+4]
 21368  0196A0  0EFB               	movlw	-5
 21369  0196A2  6AE3               	clrf	plusw1,c
 21370  0196A4  0EFC               	movlw	-4
 21371  0196A6  6AE3               	clrf	plusw1,c
 21372  0196A8  0EFD               	movlw	-3
 21373  0196AA  6AE3               	clrf	plusw1,c
 21374  0196AC  0EFE               	movlw	-2
 21375  0196AE  6AE3               	clrf	plusw1,c
 21376                           
 21377                           ;stkvar	_cp @ sp[(-9)+0]
 21378  0196B0  0EF7               	movlw	-9
 21379  0196B2  6AE3               	clrf	plusw1,c
 21380  0196B4  0EF8               	movlw	-8
 21381  0196B6  6AE3               	clrf	plusw1,c
 21382  0196B8  0EF9               	movlw	-7
 21383  0196BA  6AE3               	clrf	plusw1,c
 21384  0196BC  0EFA               	movlw	-6
 21385  0196BE  6AE3               	clrf	plusw1,c
 21386                           
 21387                           ;main.c: 530:  sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21388  0196C0  0E03               	movlw	low STR_57
 21389  0196C2  6EE6               	movwf	postinc1,c
 21390  0196C4  0EFE               	movlw	high STR_57
 21391  0196C6  6EE6               	movwf	postinc1,c
 21392  0196C8  0E00               	movlw	0
 21393  0196CA  6EE6               	movwf	postinc1,c
 21394  0196CC  0E00               	movlw	0
 21395  0196CE  6EE6               	movwf	postinc1,c
 21396  0196D0  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21397  0196D4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21398  0196DA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21399  0196E0  0E04               	movlw	4
 21400  0196E2  6EE6               	movwf	postinc1,c
 21401  0196E4  ECE5  F0FE         	call	_sprintf	;wreg free
 21402                           
 21403                           ; BSR set to: 0
 21404                           ;main.c: 531:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero          ");
 21405  0196E8  0ED7               	movlw	low STR_58
 21406  0196EA  6EE6               	movwf	postinc1,c
 21407  0196EC  0EFD               	movlw	high STR_58
 21408  0196EE  6EE6               	movwf	postinc1,c
 21409  0196F0  0E00               	movlw	0
 21410  0196F2  6EE6               	movwf	postinc1,c
 21411  0196F4  0E01               	movlw	1
 21412  0196F6  6EE6               	movwf	postinc1,c
 21413  0196F8  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21414  0196FC  0060  F0AB  FFE6   	movff	btemp,postinc1
 21415  019702  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21416  019708  0E04               	movlw	4
 21417  01970A  6EE6               	movwf	postinc1,c
 21418  01970C  ECE5  F0FE         	call	_sprintf	;wreg free
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;main.c: 532:  sprintf(get_vterm_ptr(2, 0), "Calibration          ");
 21422  019710  0EC1               	movlw	low STR_59
 21423  019712  6EE6               	movwf	postinc1,c
 21424  019714  0EFD               	movlw	high STR_59
 21425  019716  6EE6               	movwf	postinc1,c
 21426  019718  0E00               	movlw	0
 21427  01971A  6EE6               	movwf	postinc1,c
 21428  01971C  0E02               	movlw	2
 21429  01971E  6EE6               	movwf	postinc1,c
 21430  019720  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21431  019724  0060  F0AB  FFE6   	movff	btemp,postinc1
 21432  01972A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21433  019730  0E04               	movlw	4
 21434  019732  6EE6               	movwf	postinc1,c
 21435  019734  ECE5  F0FE         	call	_sprintf	;wreg free
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;main.c: 533:  update_lcd(0);
 21439  019738  0E00               	movlw	0
 21440  01973A  6EE6               	movwf	postinc1,c
 21441  01973C  EC97  F0F7         	call	_update_lcd	;wreg free
 21442                           
 21443                           ;main.c: 534:  WaitMs(2000);
 21444  019740  0ED0               	movlw	208
 21445  019742  6EE6               	movwf	postinc1,c
 21446  019744  0E07               	movlw	7
 21447  019746  6EE6               	movwf	postinc1,c
 21448  019748  EC12  F012         	call	_WaitMs	;wreg free
 21449  01974C                     l17236:
 21450                           
 21451                           ;main.c: 536:   if (++x > 64)
 21452                           ;stkvar	_x @ sp[(-9)+8]
 21453  01974C  0EFF               	movlw	-1
 21454  01974E  2AE3               	incf	plusw1,f,c
 21455  019750  0EFF               	movlw	-1
 21456  019752  006F FF8C  F02A    	movff	plusw1,btemp
 21457  019758  0E40               	movlw	64
 21458  01975A  642A               	cpfsgt	btemp^0,c
 21459  01975C  D001               	goto	l17240
 21460  01975E  D1CF               	goto	l1524
 21461  019760                     l17240:
 21462                           
 21463                           ;main.c: 538:   sprintf(get_vterm_ptr(2, 0), "Release button %c   ", spinners(4, 0));
 21464  019760  0E00               	movlw	0
 21465  019762  6EE6               	movwf	postinc1,c
 21466  019764  0E04               	movlw	4
 21467  019766  6EE6               	movwf	postinc1,c
 21468  019768  EC5B  F000         	call	_spinners	;wreg free
 21469  01976C  502A               	movf	btemp^0,w,c
 21470  01976E  6EE6               	movwf	postinc1,c
 21471  019770  0E00               	movlw	0
 21472  019772  6EE6               	movwf	postinc1,c
 21473  019774  0E47               	movlw	low STR_60
 21474  019776  6EE6               	movwf	postinc1,c
 21475  019778  0EFF               	movlw	high STR_60
 21476  01977A  6EE6               	movwf	postinc1,c
 21477  01977C  0E00               	movlw	0
 21478  01977E  6EE6               	movwf	postinc1,c
 21479  019780  0E02               	movlw	2
 21480  019782  6EE6               	movwf	postinc1,c
 21481  019784  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21482  019788  0060  F0AB  FFE6   	movff	btemp,postinc1
 21483  01978E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21484  019794  0E06               	movlw	6
 21485  019796  6EE6               	movwf	postinc1,c
 21486  019798  ECE5  F0FE         	call	_sprintf	;wreg free
 21487                           
 21488                           ;main.c: 539:   update_lcd(0);
 21489  01979C  0E00               	movlw	0
 21490  01979E  6EE6               	movwf	postinc1,c
 21491  0197A0  EC97  F0F7         	call	_update_lcd	;wreg free
 21492                           
 21493                           ;main.c: 540:   WaitMs(100);
 21494  0197A4  0E64               	movlw	100
 21495  0197A6  6EE6               	movwf	postinc1,c
 21496  0197A8  0E00               	movlw	0
 21497  0197AA  6EE6               	movwf	postinc1,c
 21498  0197AC  EC12  F012         	call	_WaitMs	;wreg free
 21499                           
 21500                           ;main.c: 541:  } while (get_switch(SCALIB));
 21501  0197B0  0E04               	movlw	4
 21502  0197B2  6EE6               	movwf	postinc1,c
 21503  0197B4  EC25  F013         	call	_get_switch	;wreg free
 21504  0197B8  502A               	movf	btemp^0,w,c
 21505  0197BA  A4D8               	btfss	status,2,c
 21506  0197BC  D7C7               	goto	l17236
 21507                           
 21508                           ;main.c: 543:  x = 0;
 21509                           ;stkvar	_x @ sp[(-9)+8]
 21510  0197BE  0EFF               	movlw	-1
 21511  0197C0  6AE3               	clrf	plusw1,c
 21512  0197C2                     l17248:
 21513                           
 21514                           ;main.c: 545:   cb += get_raw_result(C_BATT);
 21515  0197C2  0E00               	movlw	0
 21516  0197C4  6EE6               	movwf	postinc1,c
 21517  0197C6  EC16  F015         	call	_get_raw_result	;wreg free
 21518                           
 21519                           ;stkvar	_cb @ sp[(-9)+4]
 21520  0197CA  50E1               	movf	fsr1l,w,c
 21521  0197CC  0FFB               	addlw	-5
 21522  0197CE  6ED9               	movwf	fsr2l,c
 21523  0197D0  50E2               	movf	fsr1h,w,c
 21524  0197D2  6EDA               	movwf	fsr2h,c
 21525  0197D4  0EFF               	movlw	255
 21526  0197D6  22DA               	addwfc	fsr2h,f,c
 21527  0197D8  502A               	movf	btemp^0,w,c
 21528  0197DA  26DE               	addwf	postinc2,f,c
 21529  0197DC  502B               	movf	(btemp+1)^0,w,c
 21530  0197DE  22DE               	addwfc	postinc2,f,c
 21531  0197E0  0E00               	movlw	0
 21532  0197E2  22DE               	addwfc	postinc2,f,c
 21533  0197E4  22DE               	addwfc	postinc2,f,c
 21534                           
 21535                           ;main.c: 546:   cp += get_raw_result(C_PV);
 21536  0197E6  0E01               	movlw	1
 21537  0197E8  6EE6               	movwf	postinc1,c
 21538  0197EA  EC16  F015         	call	_get_raw_result	;wreg free
 21539                           
 21540                           ;stkvar	_cp @ sp[(-9)+0]
 21541  0197EE  50E1               	movf	fsr1l,w,c
 21542  0197F0  0FF7               	addlw	-9
 21543  0197F2  6ED9               	movwf	fsr2l,c
 21544  0197F4  50E2               	movf	fsr1h,w,c
 21545  0197F6  6EDA               	movwf	fsr2h,c
 21546  0197F8  0EFF               	movlw	255
 21547  0197FA  22DA               	addwfc	fsr2h,f,c
 21548  0197FC  502A               	movf	btemp^0,w,c
 21549  0197FE  26DE               	addwf	postinc2,f,c
 21550  019800  502B               	movf	(btemp+1)^0,w,c
 21551  019802  22DE               	addwfc	postinc2,f,c
 21552  019804  0E00               	movlw	0
 21553  019806  22DE               	addwfc	postinc2,f,c
 21554  019808  22DE               	addwfc	postinc2,f,c
 21555                           
 21556                           ;main.c: 547:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings      ");
 21557  01980A  0E45               	movlw	low STR_61
 21558  01980C  6EE6               	movwf	postinc1,c
 21559  01980E  0EFE               	movlw	high STR_61
 21560  019810  6EE6               	movwf	postinc1,c
 21561  019812  0E00               	movlw	0
 21562  019814  6EE6               	movwf	postinc1,c
 21563  019816  0E00               	movlw	0
 21564  019818  6EE6               	movwf	postinc1,c
 21565  01981A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21566  01981E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21567  019824  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21568  01982A  0E04               	movlw	4
 21569  01982C  6EE6               	movwf	postinc1,c
 21570  01982E  ECE5  F0FE         	call	_sprintf	;wreg free
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;main.c: 548:   sprintf(get_vterm_ptr(1, 0), " %d %d               ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21574  019832  0E01               	movlw	1
 21575  019834  6EE6               	movwf	postinc1,c
 21576  019836  EC16  F015         	call	_get_raw_result	;wreg free
 21577  01983A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21578  019840  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21579  019846  0E00               	movlw	0
 21580  019848  6EE6               	movwf	postinc1,c
 21581  01984A  EC16  F015         	call	_get_raw_result	;wreg free
 21582  01984E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21583  019854  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21584  01985A  0E3D               	movlw	low STR_62
 21585  01985C  6EE6               	movwf	postinc1,c
 21586  01985E  0EFD               	movlw	high STR_62
 21587  019860  6EE6               	movwf	postinc1,c
 21588  019862  0E00               	movlw	0
 21589  019864  6EE6               	movwf	postinc1,c
 21590  019866  0E01               	movlw	1
 21591  019868  6EE6               	movwf	postinc1,c
 21592  01986A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21593  01986E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21594  019874  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21595  01987A  0E08               	movlw	8
 21596  01987C  6EE6               	movwf	postinc1,c
 21597  01987E  ECE5  F0FE         	call	_sprintf	;wreg free
 21598                           
 21599                           ; BSR set to: 0
 21600                           ;main.c: 549:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d   ", x);
 21601                           ;stkvar	_x @ sp[(-9)+8]
 21602  019882  0EFF               	movlw	-1
 21603  019884  50E3               	movf	plusw1,w,c
 21604  019886  6EE6               	movwf	postinc1,c
 21605  019888  0E00               	movlw	0
 21606  01988A  6EE6               	movwf	postinc1,c
 21607  01988C  0E9D               	movlw	low STR_63
 21608  01988E  6EE6               	movwf	postinc1,c
 21609  019890  0EFE               	movlw	high STR_63
 21610  019892  6EE6               	movwf	postinc1,c
 21611  019894  0E00               	movlw	0
 21612  019896  6EE6               	movwf	postinc1,c
 21613  019898  0E02               	movlw	2
 21614  01989A  6EE6               	movwf	postinc1,c
 21615  01989C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21616  0198A0  0060  F0AB  FFE6   	movff	btemp,postinc1
 21617  0198A6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21618  0198AC  0E06               	movlw	6
 21619  0198AE  6EE6               	movwf	postinc1,c
 21620  0198B0  ECE5  F0FE         	call	_sprintf	;wreg free
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;main.c: 550:   update_lcd(0);
 21624  0198B4  0E00               	movlw	0
 21625  0198B6  6EE6               	movwf	postinc1,c
 21626  0198B8  EC97  F0F7         	call	_update_lcd	;wreg free
 21627                           
 21628                           ;main.c: 551:   clear_adc_scan();
 21629  0198BC  ECA9  F016         	call	_clear_adc_scan	;wreg free
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;main.c: 552:   start_adc_scan();
 21633  0198C0  EC5F  F00D         	call	_start_adc_scan	;wreg free
 21634                           
 21635                           ;main.c: 553:   WaitMs(100);
 21636  0198C4  0E64               	movlw	100
 21637  0198C6  6EE6               	movwf	postinc1,c
 21638  0198C8  0E00               	movlw	0
 21639  0198CA  6EE6               	movwf	postinc1,c
 21640  0198CC  EC12  F012         	call	_WaitMs	;wreg free
 21641                           
 21642                           ;main.c: 554:  } while (++x < 64);
 21643                           ;stkvar	_x @ sp[(-9)+8]
 21644  0198D0  0EFF               	movlw	-1
 21645  0198D2  2AE3               	incf	plusw1,f,c
 21646  0198D4  0EFF               	movlw	-1
 21647  0198D6  006F FF8C  F02A    	movff	plusw1,btemp
 21648  0198DC  0E3F               	movlw	63
 21649  0198DE  642A               	cpfsgt	btemp^0,c
 21650  0198E0  D770               	goto	l17248
 21651                           
 21652                           ;main.c: 555:  cb = cb >> 6;
 21653  0198E2  0E06               	movlw	6
 21654  0198E4  6E35               	movwf	(btemp+11)^0,c
 21655                           
 21656                           ;stkvar	_cb @ sp[(-9)+4]
 21657  0198E6  50E1               	movf	fsr1l,w,c
 21658  0198E8  0FFB               	addlw	-5
 21659  0198EA  6ED9               	movwf	fsr2l,c
 21660  0198EC  50E2               	movf	fsr1h,w,c
 21661  0198EE  6EDA               	movwf	fsr2h,c
 21662  0198F0  0EFF               	movlw	255
 21663  0198F2  22DA               	addwfc	fsr2h,f,c
 21664  0198F4  2835               	incf	(btemp+11)^0,w,c
 21665  0198F6  52DE               	movf	postinc2,f,c
 21666  0198F8  D007               	goto	u16860
 21667  0198FA                     u16865:
 21668  0198FA  52DE               	movf	postinc2,f,c
 21669  0198FC  52DE               	movf	postinc2,f,c
 21670  0198FE  90D8               	bcf	status,0,c
 21671  019900  32DD               	rrcf	postdec2,f,c
 21672  019902  32DD               	rrcf	postdec2,f,c
 21673  019904  32DD               	rrcf	postdec2,f,c
 21674  019906  32DE               	rrcf	postinc2,f,c
 21675  019908                     u16860:
 21676  019908  2EE8               	decfsz	wreg,f,c
 21677  01990A  D7F7               	goto	u16865
 21678                           
 21679                           ;main.c: 556:  cp = cp >> 6;
 21680  01990C  0E06               	movlw	6
 21681  01990E  6E35               	movwf	(btemp+11)^0,c
 21682                           
 21683                           ;stkvar	_cp @ sp[(-9)+0]
 21684  019910  50E1               	movf	fsr1l,w,c
 21685  019912  0FF7               	addlw	-9
 21686  019914  6ED9               	movwf	fsr2l,c
 21687  019916  50E2               	movf	fsr1h,w,c
 21688  019918  6EDA               	movwf	fsr2h,c
 21689  01991A  0EFF               	movlw	255
 21690  01991C  22DA               	addwfc	fsr2h,f,c
 21691  01991E  2835               	incf	(btemp+11)^0,w,c
 21692  019920  52DE               	movf	postinc2,f,c
 21693  019922  D007               	goto	u16870
 21694  019924                     u16875:
 21695  019924  52DE               	movf	postinc2,f,c
 21696  019926  52DE               	movf	postinc2,f,c
 21697  019928  90D8               	bcf	status,0,c
 21698  01992A  32DD               	rrcf	postdec2,f,c
 21699  01992C  32DD               	rrcf	postdec2,f,c
 21700  01992E  32DD               	rrcf	postdec2,f,c
 21701  019930  32DE               	rrcf	postinc2,f,c
 21702  019932                     u16870:
 21703  019932  2EE8               	decfsz	wreg,f,c
 21704  019934  D7F7               	goto	u16875
 21705                           
 21706                           ;main.c: 558:  if (cal_current_zero(0, cb, cp)) {
 21707                           ;stkvar	_cp @ sp[(-9)+0]
 21708  019936  0EF7               	movlw	-9
 21709  019938  006F FF8F FFE6     	movff	plusw1,postinc1
 21710  01993E  006F FF8F FFE6     	movff	plusw1,postinc1
 21711                           
 21712                           ;stkvar	_cb @ sp[(-11)+4]
 21713  019944  0EF9               	movlw	-7
 21714  019946  006F FF8F FFE6     	movff	plusw1,postinc1
 21715  01994C  006F FF8F FFE6     	movff	plusw1,postinc1
 21716  019952  0E00               	movlw	0
 21717  019954  6EE6               	movwf	postinc1,c
 21718  019956  EC4D  F008         	call	_cal_current_zero	;wreg free
 21719  01995A  502A               	movf	btemp^0,w,c
 21720  01995C  B4D8               	btfsc	status,2,c
 21721  01995E  D075               	goto	l17286
 21722                           
 21723                           ;main.c: 559:   cal_current_zero(1, cb, cp);
 21724                           ;stkvar	_cp @ sp[(-9)+0]
 21725  019960  0EF7               	movlw	-9
 21726  019962  006F FF8F FFE6     	movff	plusw1,postinc1
 21727  019968  006F FF8F FFE6     	movff	plusw1,postinc1
 21728                           
 21729                           ;stkvar	_cb @ sp[(-11)+4]
 21730  01996E  0EF9               	movlw	-7
 21731  019970  006F FF8F FFE6     	movff	plusw1,postinc1
 21732  019976  006F FF8F FFE6     	movff	plusw1,postinc1
 21733  01997C  0E01               	movlw	1
 21734  01997E  6EE6               	movwf	postinc1,c
 21735  019980  EC4D  F008         	call	_cal_current_zero	;wreg free
 21736                           
 21737                           ;main.c: 560:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21738  019984  0E03               	movlw	low STR_57
 21739  019986  6EE6               	movwf	postinc1,c
 21740  019988  0EFE               	movlw	high STR_57
 21741  01998A  6EE6               	movwf	postinc1,c
 21742  01998C  0E00               	movlw	0
 21743  01998E  6EE6               	movwf	postinc1,c
 21744  019990  0E00               	movlw	0
 21745  019992  6EE6               	movwf	postinc1,c
 21746  019994  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21747  019998  0060  F0AB  FFE6   	movff	btemp,postinc1
 21748  01999E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21749  0199A4  0E04               	movlw	4
 21750  0199A6  6EE6               	movwf	postinc1,c
 21751  0199A8  ECE5  F0FE         	call	_sprintf	;wreg free
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;main.c: 561:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", cb, cp);
 21755                           ;stkvar	_cp @ sp[(-9)+0]
 21756  0199AC  0EF7               	movlw	-9
 21757  0199AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21758  0199B4  006F FF8F FFE6     	movff	plusw1,postinc1
 21759  0199BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21760  0199C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21761                           
 21762                           ;stkvar	_cb @ sp[(-13)+4]
 21763  0199C6  0EF7               	movlw	-9
 21764  0199C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21765  0199CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21766  0199D4  006F FF8F FFE6     	movff	plusw1,postinc1
 21767  0199DA  006F FF8F FFE6     	movff	plusw1,postinc1
 21768  0199E0  0E53               	movlw	low STR_65
 21769  0199E2  6EE6               	movwf	postinc1,c
 21770  0199E4  0EFD               	movlw	high STR_65
 21771  0199E6  6EE6               	movwf	postinc1,c
 21772  0199E8  0E00               	movlw	0
 21773  0199EA  6EE6               	movwf	postinc1,c
 21774  0199EC  0E01               	movlw	1
 21775  0199EE  6EE6               	movwf	postinc1,c
 21776  0199F0  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21777  0199F4  0060  F0AB  FFE6   	movff	btemp,postinc1
 21778  0199FA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21779  019A00  0E0C               	movlw	12
 21780  019A02  6EE6               	movwf	postinc1,c
 21781  019A04  ECE5  F0FE         	call	_sprintf	;wreg free
 21782                           
 21783                           ; BSR set to: 0
 21784                           ;main.c: 562:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set         ");
 21785  019A08  0EED               	movlw	low STR_66
 21786  019A0A  6EE6               	movwf	postinc1,c
 21787  019A0C  0EFD               	movlw	high STR_66
 21788  019A0E  6EE6               	movwf	postinc1,c
 21789  019A10  0E00               	movlw	0
 21790  019A12  6EE6               	movwf	postinc1,c
 21791  019A14  0E02               	movlw	2
 21792  019A16  6EE6               	movwf	postinc1,c
 21793  019A18  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21794  019A1C  0060  F0AB  FFE6   	movff	btemp,postinc1
 21795  019A22  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21796  019A28  0E04               	movlw	4
 21797  019A2A  6EE6               	movwf	postinc1,c
 21798  019A2C  ECE5  F0FE         	call	_sprintf	;wreg free
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;main.c: 563:   update_lcd(0);
 21802  019A30  0E00               	movlw	0
 21803  019A32  6EE6               	movwf	postinc1,c
 21804  019A34  EC97  F0F7         	call	_update_lcd	;wreg free
 21805                           
 21806                           ;main.c: 564:   WaitMs(2000);
 21807  019A38  0ED0               	movlw	208
 21808  019A3A  6EE6               	movwf	postinc1,c
 21809  019A3C  0E07               	movlw	7
 21810  019A3E  6EE6               	movwf	postinc1,c
 21811  019A40  EC12  F012         	call	_WaitMs	;wreg free
 21812                           
 21813                           ;main.c: 565:   write_cal_data();
 21814  019A44  ECF4  F0F8         	call	_write_cal_data	;wreg free
 21815                           
 21816                           ;main.c: 566:  } else {
 21817  019A48  D05A               	goto	l1524
 21818  019A4A                     l17286:
 21819                           
 21820                           ;main.c: 567:   sprintf(get_vterm_ptr(0, 0), "Battery and PV       ");
 21821  019A4A  0E03               	movlw	low STR_57
 21822  019A4C  6EE6               	movwf	postinc1,c
 21823  019A4E  0EFE               	movlw	high STR_57
 21824  019A50  6EE6               	movwf	postinc1,c
 21825  019A52  0E00               	movlw	0
 21826  019A54  6EE6               	movwf	postinc1,c
 21827  019A56  0E00               	movlw	0
 21828  019A58  6EE6               	movwf	postinc1,c
 21829  019A5A  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21830  019A5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21831  019A64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21832  019A6A  0E04               	movlw	4
 21833  019A6C  6EE6               	movwf	postinc1,c
 21834  019A6E  ECE5  F0FE         	call	_sprintf	;wreg free
 21835                           
 21836                           ;main.c: 568:   sprintf(get_vterm_ptr(1, 0), " %ld %ld             ", get_raw_result(C_B
      +                          ATT), get_raw_result(C_PV));
 21837  019A72  0E01               	movlw	1
 21838  019A74  6EE6               	movwf	postinc1,c
 21839  019A76  EC16  F015         	call	_get_raw_result	;wreg free
 21840  019A7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 21841  019A80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21842  019A86  0E00               	movlw	0
 21843  019A88  6EE6               	movwf	postinc1,c
 21844  019A8A  EC16  F015         	call	_get_raw_result	;wreg free
 21845  019A8E  0060  F0AB  FFE6   	movff	btemp,postinc1
 21846  019A94  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21847  019A9A  0E53               	movlw	low STR_65
 21848  019A9C  6EE6               	movwf	postinc1,c
 21849  019A9E  0EFD               	movlw	high STR_65
 21850  019AA0  6EE6               	movwf	postinc1,c
 21851  019AA2  0E00               	movlw	0
 21852  019AA4  6EE6               	movwf	postinc1,c
 21853  019AA6  0E01               	movlw	1
 21854  019AA8  6EE6               	movwf	postinc1,c
 21855  019AAA  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21856  019AAE  0060  F0AB  FFE6   	movff	btemp,postinc1
 21857  019AB4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21858  019ABA  0E08               	movlw	8
 21859  019ABC  6EE6               	movwf	postinc1,c
 21860  019ABE  ECE5  F0FE         	call	_sprintf	;wreg free
 21861                           
 21862                           ;main.c: 569:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range    ");
 21863  019AC2  0E71               	movlw	low STR_69
 21864  019AC4  6EE6               	movwf	postinc1,c
 21865  019AC6  0EFE               	movlw	high STR_69
 21866  019AC8  6EE6               	movwf	postinc1,c
 21867  019ACA  0E00               	movlw	0
 21868  019ACC  6EE6               	movwf	postinc1,c
 21869  019ACE  0E02               	movlw	2
 21870  019AD0  6EE6               	movwf	postinc1,c
 21871  019AD2  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 21872  019AD6  0060  F0AB  FFE6   	movff	btemp,postinc1
 21873  019ADC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 21874  019AE2  0E04               	movlw	4
 21875  019AE4  6EE6               	movwf	postinc1,c
 21876  019AE6  ECE5  F0FE         	call	_sprintf	;wreg free
 21877                           
 21878                           ;main.c: 570:   update_lcd(0);
 21879  019AEA  0E00               	movlw	0
 21880  019AEC  6EE6               	movwf	postinc1,c
 21881  019AEE  EC97  F0F7         	call	_update_lcd	;wreg free
 21882                           
 21883                           ;main.c: 571:   WaitMs(2000);
 21884  019AF2  0ED0               	movlw	208
 21885  019AF4  6EE6               	movwf	postinc1,c
 21886  019AF6  0E07               	movlw	7
 21887  019AF8  6EE6               	movwf	postinc1,c
 21888  019AFA  EC12  F012         	call	_WaitMs	;wreg free
 21889  019AFE                     l1524:
 21890                           
 21891                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 21892  019AFE  0EF7               	movlw	247
 21893  019B00  26E1               	addwf	fsr1l,f,c
 21894  019B02  0EFF               	movlw	255
 21895  019B04  22E2               	addwfc	fsr1h,f,c
 21896  019B06  0012               	return		;funcret
 21897  019B08                     __end_of_current_sensor_cal:
 21898                           	opt callstack 0
 21899                           
 21900 ;; *************** function _write_cal_data *****************
 21901 ;; Defined at:
 21902 ;;		line 408 in file "daq.c"
 21903 ;; Parameters:    Size  Location     Type
 21904 ;;		None
 21905 ;; Auto vars:     Size  Location     Type
 21906 ;;  x               2  [STACK] unsigned short 
 21907 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 21908 ;;		 -> R(155), 
 21909 ;;  y               2  [STACK] unsigned short 
 21910 ;;  crcVal          1  [STACK] unsigned char 
 21911 ;; Return value:  Size  Location     Type
 21912 ;;                  1  [STACK] void 
 21913 ;; Registers used:
 21914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 21915 ;; Tracked objects:
 21916 ;;		On entry : 0/39
 21917 ;;		On exit  : 0/0
 21918 ;;		Unchanged: 0/0
 21919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21924 ;;Total ram usage:        0 bytes
 21925 ;; Hardware stack levels used:    1
 21926 ;; Hardware stack levels required when called:   17
 21927 ;; This function calls:
 21928 ;;		_CRC_8BitDataWrite
 21929 ;;		_CRC_CalculatedResultGet
 21930 ;;		_CRC_Initialize
 21931 ;;		_CRC_IsBusy
 21932 ;;		_CRC_Start
 21933 ;;		_DATAEE_WriteByte
 21934 ;; This function is called by:
 21935 ;;		_main
 21936 ;;		_current_sensor_cal
 21937 ;; This function uses a reentrant model
 21938 ;;
 21939                           
 21940                           	psect	text59
 21941  01F1E8                     __ptext59:
 21942                           	opt callstack 0
 21943  01F1E8                     _write_cal_data:
 21944                           	opt callstack 0
 21945                           
 21946                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21947  01F1E8  0E07               	movlw	7
 21948  01F1EA  26E1               	addwf	fsr1l,f,c
 21949  01F1EC  0E00               	movlw	0
 21950  01F1EE  22E2               	addwfc	fsr1h,f,c
 21951                           
 21952                           ;daq.c: 410:  uint16_t x = 0, y;
 21953                           ;stkvar	_x @ sp[(-7)+0]
 21954                           
 21955                           ;incstack = 0
 21956  01F1F0  0EF9               	movlw	-7
 21957  01F1F2  6AE3               	clrf	plusw1,c
 21958  01F1F4  0EFA               	movlw	-6
 21959  01F1F6  6AE3               	clrf	plusw1,c
 21960                           
 21961                           ;daq.c: 411:  uint8_t *r_cal_ptr, crcVal;;daq.c: 413:  y = sizeof(R);
 21962  01F1F8  0E9B               	movlw	155
 21963  01F1FA  6E34               	movwf	(btemp+10)^0,c
 21964  01F1FC  0E00               	movlw	0
 21965  01F1FE  6E35               	movwf	(btemp+11)^0,c
 21966                           
 21967                           ;stkvar	_y @ sp[(-7)+4]
 21968  01F200  0EFD               	movlw	-3
 21969  01F202  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 21970  01F208  0EFE               	movlw	-2
 21971  01F20A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 21972                           
 21973                           ;daq.c: 414:  R.crc = 0x42;
 21974  01F210  0E42               	movlw	66
 21975  01F212  0101               	movlb	1	; () banked
 21976  01F214  6F9A               	movwf	(_R+154)& (0+255),b	;volatile
 21977                           
 21978                           ; BSR set to: 1
 21979                           ;daq.c: 415:  r_cal_ptr = (uint8_t*) & R;
 21980                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 21981  01F216  0E01               	movlw	high _R
 21982  01F218  6E2A               	movwf	btemp^0,c
 21983  01F21A  0EFC               	movlw	-4
 21984  01F21C  0060  F0AB  FFE3   	movff	btemp,plusw1
 21985  01F222  0E00               	movlw	low _R
 21986  01F224  6E2A               	movwf	btemp^0,c
 21987  01F226  0EFB               	movlw	-5
 21988  01F228  0060  F0AB  FFE3   	movff	btemp,plusw1
 21989                           
 21990                           ; BSR set to: 1
 21991                           ;daq.c: 416:  R.checkmark = 0x1957;
 21992  01F22E  0E19               	movlw	25
 21993  01F230  6F99               	movwf	(_R+153)& (0+255),b	;volatile
 21994  01F232  0E57               	movlw	87
 21995  01F234  6F98               	movwf	(_R+152)& (0+255),b	;volatile
 21996                           
 21997                           ; BSR set to: 1
 21998                           ;daq.c: 418:  CRC_Initialize();
 21999  01F236  EC71  F009         	call	_CRC_Initialize	;wreg free
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;daq.c: 421:  CRC_Start();
 22003  01F23A  ECA6  F016         	call	_CRC_Start	;wreg free
 22004  01F23E                     l13530:
 22005                           
 22006                           ;daq.c: 424:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 22007                           ;stkvar	_x @ sp[(-7)+0]
 22008  01F23E  0EF9               	movlw	-7
 22009  01F240  006F FF8C  F034    	movff	plusw1,btemp+10
 22010  01F246  0EFA               	movlw	-6
 22011  01F248  006F FF8C  F035    	movff	plusw1,btemp+11
 22012                           
 22013                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22014  01F24E  0EFB               	movlw	-5
 22015  01F250  006F FF8C  F032    	movff	plusw1,btemp+8
 22016  01F256  0EFC               	movlw	-4
 22017  01F258  006F FF8C  F033    	movff	plusw1,btemp+9
 22018  01F25E  5034               	movf	(btemp+10)^0,w,c
 22019  01F260  2432               	addwf	(btemp+8)^0,w,c
 22020  01F262  6ED9               	movwf	fsr2l,c
 22021  01F264  5035               	movf	(btemp+11)^0,w,c
 22022  01F266  2033               	addwfc	(btemp+9)^0,w,c
 22023  01F268  6EDA               	movwf	fsr2h,c
 22024  01F26A  50DF               	movf	indf2,w,c
 22025  01F26C  6EE6               	movwf	postinc1,c
 22026                           
 22027                           ;stkvar	_x @ sp[(-8)+0]
 22028  01F26E  0EF8               	movlw	-8
 22029  01F270  006F FF8F FFE6     	movff	plusw1,postinc1
 22030  01F276  006F FF8F FFE6     	movff	plusw1,postinc1
 22031  01F27C  EC93  F00C         	call	_DATAEE_WriteByte	;wreg free
 22032                           
 22033                           ;daq.c: 425:   CRC_8BitDataWrite(r_cal_ptr[x]);
 22034                           ;stkvar	_x @ sp[(-7)+0]
 22035  01F280  0EF9               	movlw	-7
 22036  01F282  006F FF8C  F034    	movff	plusw1,btemp+10
 22037  01F288  0EFA               	movlw	-6
 22038  01F28A  006F FF8C  F035    	movff	plusw1,btemp+11
 22039                           
 22040                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 22041  01F290  0EFB               	movlw	-5
 22042  01F292  006F FF8C  F032    	movff	plusw1,btemp+8
 22043  01F298  0EFC               	movlw	-4
 22044  01F29A  006F FF8C  F033    	movff	plusw1,btemp+9
 22045  01F2A0  5034               	movf	(btemp+10)^0,w,c
 22046  01F2A2  2432               	addwf	(btemp+8)^0,w,c
 22047  01F2A4  6ED9               	movwf	fsr2l,c
 22048  01F2A6  5035               	movf	(btemp+11)^0,w,c
 22049  01F2A8  2033               	addwfc	(btemp+9)^0,w,c
 22050  01F2AA  6EDA               	movwf	fsr2h,c
 22051  01F2AC  50DF               	movf	indf2,w,c
 22052  01F2AE  6EE6               	movwf	postinc1,c
 22053  01F2B0  EC0D  F016         	call	_CRC_8BitDataWrite	;wreg free
 22054  01F2B4                     l13534:
 22055  01F2B4  EC2F  F016         	call	_CRC_IsBusy	;wreg free
 22056  01F2B8  502A               	movf	btemp^0,w,c
 22057  01F2BA  A4D8               	btfss	status,2,c
 22058  01F2BC  D7FB               	goto	l13534
 22059                           
 22060                           ;daq.c: 427:  } while (++x < y);
 22061                           ;stkvar	_y @ sp[(-7)+4]
 22062  01F2BE  0EFD               	movlw	-3
 22063  01F2C0  006F FF8C  F034    	movff	plusw1,btemp+10
 22064  01F2C6  0EFE               	movlw	-2
 22065  01F2C8  006F FF8C  F035    	movff	plusw1,btemp+11
 22066                           
 22067                           ;stkvar	_x @ sp[(-7)+0]
 22068  01F2CE  0EF9               	movlw	-7
 22069  01F2D0  50E3               	movf	plusw1,w,c
 22070  01F2D2  0F01               	addlw	1
 22071  01F2D4  6E2A               	movwf	btemp^0,c
 22072  01F2D6  0EF9               	movlw	-7
 22073  01F2D8  0060  F0AB  FFE3   	movff	btemp,plusw1
 22074  01F2DE  6A2A               	clrf	btemp^0,c
 22075  01F2E0  0EFA               	movlw	-6
 22076  01F2E2  50E3               	movf	plusw1,w,c
 22077  01F2E4  202A               	addwfc	btemp^0,w,c
 22078  01F2E6  6E2A               	movwf	btemp^0,c
 22079  01F2E8  0EFA               	movlw	-6
 22080  01F2EA  0060  F0AB  FFE3   	movff	btemp,plusw1
 22081  01F2F0  0EF9               	movlw	-7
 22082  01F2F2  006F FF8C  F032    	movff	plusw1,btemp+8
 22083  01F2F8  0EFA               	movlw	-6
 22084  01F2FA  006F FF8C  F033    	movff	plusw1,btemp+9
 22085  01F300  5034               	movf	(btemp+10)^0,w,c
 22086  01F302  5C32               	subwf	(btemp+8)^0,w,c
 22087  01F304  5035               	movf	(btemp+11)^0,w,c
 22088  01F306  5833               	subwfb	(btemp+9)^0,w,c
 22089  01F308  A0D8               	btfss	status,0,c
 22090  01F30A  D799               	goto	l13530
 22091                           
 22092                           ;daq.c: 429:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 22093  01F30C  0E00               	movlw	0
 22094  01F30E  6EE6               	movwf	postinc1,c
 22095  01F310  0E00               	movlw	0
 22096  01F312  6EE6               	movwf	postinc1,c
 22097  01F314  0E00               	movlw	0
 22098  01F316  6EE6               	movwf	postinc1,c
 22099  01F318  EC10  F0F4         	call	_CRC_CalculatedResultGet	;wreg free
 22100                           
 22101                           ;stkvar	_crcVal @ sp[(-7)+6]
 22102  01F31C  0EFF               	movlw	-1
 22103  01F31E  0060  F0AB  FFE3   	movff	btemp,plusw1
 22104                           
 22105                           ;daq.c: 431:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 22106                           ;stkvar	_crcVal @ sp[(-7)+6]
 22107  01F324  0EFF               	movlw	-1
 22108  01F326  50E3               	movf	plusw1,w,c
 22109  01F328  6EE6               	movwf	postinc1,c
 22110  01F32A  0E9A               	movlw	154
 22111  01F32C  6EE6               	movwf	postinc1,c
 22112  01F32E  0E00               	movlw	0
 22113  01F330  6EE6               	movwf	postinc1,c
 22114  01F332  EC93  F00C         	call	_DATAEE_WriteByte	;wreg free
 22115                           
 22116                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22117  01F336  0EF9               	movlw	249
 22118  01F338  26E1               	addwf	fsr1l,f,c
 22119  01F33A  0EFF               	movlw	255
 22120  01F33C  22E2               	addwfc	fsr1h,f,c
 22121  01F33E  0012               	return		;funcret
 22122  01F340                     __end_of_write_cal_data:
 22123                           	opt callstack 0
 22124                           
 22125 ;; *************** function _DATAEE_WriteByte *****************
 22126 ;; Defined at:
 22127 ;;		line 172 in file "mcc_generated_files/memory.c"
 22128 ;; Parameters:    Size  Location     Type
 22129 ;;  bAdd            2  [STACK] unsigned short 
 22130 ;;  bData           1  [STACK] unsigned char 
 22131 ;; Auto vars:     Size  Location     Type
 22132 ;;  GIEBitValue     1  [STACK] unsigned char 
 22133 ;; Return value:  Size  Location     Type
 22134 ;;                  1  [STACK] void 
 22135 ;; Registers used:
 22136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22137 ;; Tracked objects:
 22138 ;;		On entry : 0/39
 22139 ;;		On exit  : 0/0
 22140 ;;		Unchanged: 0/0
 22141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22146 ;;Total ram usage:        0 bytes
 22147 ;; Hardware stack levels used:    1
 22148 ;; Hardware stack levels required when called:   15
 22149 ;; This function calls:
 22150 ;;		Nothing
 22151 ;; This function is called by:
 22152 ;;		_write_cal_data
 22153 ;; This function uses a reentrant model
 22154 ;;
 22155                           
 22156                           	psect	text60
 22157  001926                     __ptext60:
 22158                           	opt callstack 0
 22159  001926                     _DATAEE_WriteByte:
 22160                           	opt callstack 0
 22161                           
 22162                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22163  001926  52E6               	movf	postinc1,f,c
 22164                           
 22165                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 22166                           
 22167                           ;incstack = 0
 22168  001928  AED2               	btfss	210,7,c	;volatile
 22169  00192A  D003               	goto	u12080
 22170  00192C  6A35               	clrf	(btemp+11)^0,c
 22171  00192E  2A35               	incf	(btemp+11)^0,f,c
 22172  001930  D001               	goto	u12088
 22173  001932                     u12080:
 22174  001932  6A35               	clrf	(btemp+11)^0,c
 22175  001934                     u12088:
 22176                           
 22177                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22178  001934  0EFF               	movlw	-1
 22179  001936  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22180                           
 22181                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 22182                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22183  00193C  0EFE               	movlw	254
 22184  00193E  24E1               	addwf	fsr1l,w,c
 22185  001940  6ED9               	movwf	fsr2l,c
 22186  001942  0EFF               	movlw	255
 22187  001944  20E2               	addwfc	fsr1h,w,c
 22188  001946  6EDA               	movwf	fsr2h,c
 22189  001948  50DF               	movf	indf2,w,c
 22190  00194A  0B03               	andlw	3
 22191  00194C  0139               	movlb	57	; () banked
 22192  00194E  6FE1               	movwf	225,b	;volatile
 22193                           
 22194                           ; BSR set to: 57
 22195                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 22196                           ;stkvar	_bAdd @ sp[(-1)+-2]
 22197  001950  0EFD               	movlw	-3
 22198  001952  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 22199                           
 22200                           ; BSR set to: 57
 22201                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 22202                           ;stkvar	_bData @ sp[(-1)+-3]
 22203  001958  0EFC               	movlw	-4
 22204  00195A  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 22205                           
 22206                           ; BSR set to: 57
 22207                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 22208  001960  0E3F               	movlw	-193
 22209  001962  17E5               	andwf	229,f,b	;volsfr
 22210                           
 22211                           ; BSR set to: 57
 22212                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 22213  001964  85E5               	bsf	229,2,b	;volsfr
 22214                           
 22215                           ; BSR set to: 57
 22216                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 22217  001966  9ED2               	bcf	210,7,c	;volatile
 22218                           
 22219                           ; BSR set to: 57
 22220                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 22221  001968  0E55               	movlw	85
 22222  00196A  6FE6               	movwf	230,b	;volsfr
 22223                           
 22224                           ; BSR set to: 57
 22225                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 22226  00196C  0EAA               	movlw	170
 22227  00196E  6FE6               	movwf	230,b	;volsfr
 22228                           
 22229                           ; BSR set to: 57
 22230                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 22231  001970  83E5               	bsf	229,1,b	;volsfr
 22232  001972                     l942:
 22233                           
 22234                           ; BSR set to: 57
 22235                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 22236  001972  B3E5               	btfsc	229,1,b	;volsfr
 22237  001974  D7FE               	goto	l942
 22238                           
 22239                           ; BSR set to: 57
 22240                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 22241  001976  95E5               	bcf	229,2,b	;volsfr
 22242                           
 22243                           ; BSR set to: 57
 22244                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 22245                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 22246  001978  0EFF               	movlw	-1
 22247  00197A  B0E3               	btfsc	plusw1,0,c
 22248  00197C  D002               	bra	u12105
 22249  00197E  9ED2               	bcf	210,7,c	;volatile
 22250  001980  D001               	bra	u12106
 22251  001982                     u12105:
 22252  001982  8ED2               	bsf	210,7,c	;volatile
 22253  001984                     u12106:
 22254                           
 22255                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22256  001984  52E5               	movf	postdec1,f,c
 22257  001986  52E5               	movf	postdec1,f,c
 22258  001988  52E5               	movf	postdec1,f,c
 22259  00198A  52E5               	movf	postdec1,f,c
 22260  00198C  0012               	return		;funcret
 22261  00198E                     __end_of_DATAEE_WriteByte:
 22262                           	opt callstack 0
 22263                           
 22264 ;; *************** function _CRC_Start *****************
 22265 ;; Defined at:
 22266 ;;		line 119 in file "mcc_generated_files/crc.c"
 22267 ;; Parameters:    Size  Location     Type
 22268 ;;		None
 22269 ;; Auto vars:     Size  Location     Type
 22270 ;;		None
 22271 ;; Return value:  Size  Location     Type
 22272 ;;                  1  [STACK] void 
 22273 ;; Registers used:
 22274 ;;		None
 22275 ;; Tracked objects:
 22276 ;;		On entry : 3F/0
 22277 ;;		On exit  : 3F/39
 22278 ;;		Unchanged: 0/0
 22279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22284 ;;Total ram usage:        0 bytes
 22285 ;; Hardware stack levels used:    1
 22286 ;; Hardware stack levels required when called:   15
 22287 ;; This function calls:
 22288 ;;		Nothing
 22289 ;; This function is called by:
 22290 ;;		_read_cal_data
 22291 ;;		_write_cal_data
 22292 ;; This function uses a reentrant model
 22293 ;;
 22294                           
 22295                           	psect	text61
 22296  002D4C                     __ptext61:
 22297                           	opt callstack 0
 22298  002D4C                     _CRC_Start:
 22299                           	opt callstack 14
 22300                           
 22301                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 22302                           
 22303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22304                           ;incstack = 0
 22305  002D4C  0139               	movlb	57	; () banked
 22306  002D4E  8D68               	bsf	104,6,b	;volatile
 22307                           
 22308                           ; BSR set to: 57
 22309                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 22310  002D50  0012               	return		;funcret
 22311  002D52                     __end_of_CRC_Start:
 22312                           	opt callstack 0
 22313                           
 22314 ;; *************** function _CRC_IsBusy *****************
 22315 ;; Defined at:
 22316 ;;		line 201 in file "mcc_generated_files/crc.c"
 22317 ;; Parameters:    Size  Location     Type
 22318 ;;		None
 22319 ;; Auto vars:     Size  Location     Type
 22320 ;;		None
 22321 ;; Return value:  Size  Location     Type
 22322 ;;                  1  [STACK] _Bool 
 22323 ;; Registers used:
 22324 ;;		btemp
 22325 ;; Tracked objects:
 22326 ;;		On entry : 0/39
 22327 ;;		On exit  : 0/0
 22328 ;;		Unchanged: 0/0
 22329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;Total ram usage:        0 bytes
 22335 ;; Hardware stack levels used:    1
 22336 ;; Hardware stack levels required when called:   15
 22337 ;; This function calls:
 22338 ;;		Nothing
 22339 ;; This function is called by:
 22340 ;;		_read_cal_data
 22341 ;;		_write_cal_data
 22342 ;; This function uses a reentrant model
 22343 ;;
 22344                           
 22345                           	psect	text62
 22346  002C5E                     __ptext62:
 22347                           	opt callstack 0
 22348  002C5E                     _CRC_IsBusy:
 22349                           	opt callstack 14
 22350                           
 22351                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 22352                           
 22353                           ; BSR set to: 57
 22354                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22355                           ;incstack = 0
 22356  002C5E  0139               	movlb	57	; () banked
 22357  002C60  AB68               	btfss	104,5,b	;volatile
 22358  002C62  D003               	goto	u12310
 22359  002C64  6A2A               	clrf	btemp^0,c
 22360  002C66  2A2A               	incf	btemp^0,f,c
 22361  002C68  0012               	return	
 22362  002C6A                     u12310:
 22363  002C6A  6A2A               	clrf	btemp^0,c
 22364                           
 22365                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22366  002C6C  0012               	return		;funcret
 22367  002C6E                     __end_of_CRC_IsBusy:
 22368                           	opt callstack 0
 22369                           
 22370 ;; *************** function _CRC_CalculatedResultGet *****************
 22371 ;; Defined at:
 22372 ;;		line 159 in file "mcc_generated_files/crc.c"
 22373 ;; Parameters:    Size  Location     Type
 22374 ;;  reverse         1  [STACK] _Bool 
 22375 ;;  xorValue        2  [STACK] unsigned short 
 22376 ;; Auto vars:     Size  Location     Type
 22377 ;;  result          2  [STACK] unsigned short 
 22378 ;;  mask            2  [STACK] unsigned short 
 22379 ;; Return value:  Size  Location     Type
 22380 ;;                  2  [STACK] unsigned short 
 22381 ;; Registers used:
 22382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 22383 ;; Tracked objects:
 22384 ;;		On entry : 0/39
 22385 ;;		On exit  : 0/0
 22386 ;;		Unchanged: 0/0
 22387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22392 ;;Total ram usage:        0 bytes
 22393 ;; Hardware stack levels used:    1
 22394 ;; Hardware stack levels required when called:   16
 22395 ;; This function calls:
 22396 ;;		_CRC_ReverseValue
 22397 ;; This function is called by:
 22398 ;;		_read_cal_data
 22399 ;;		_write_cal_data
 22400 ;; This function uses a reentrant model
 22401 ;;
 22402                           
 22403                           	psect	text63
 22404  01E820                     __ptext63:
 22405                           	opt callstack 0
 22406  01E820                     _CRC_CalculatedResultGet:
 22407                           	opt callstack 0
 22408                           
 22409                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22410  01E820  52E6               	movf	postinc1,f,c
 22411  01E822  52E6               	movf	postinc1,f,c
 22412  01E824  52E6               	movf	postinc1,f,c
 22413  01E826  52E6               	movf	postinc1,f,c
 22414                           
 22415                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 22416                           
 22417                           ;incstack = 0
 22418  01E828  0139               	movlb	57	; () banked
 22419  01E82A  9D68               	bcf	104,6,b	;volatile
 22420                           
 22421                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 22422  01E82C  9DA0               	bcf	160,6,b	;volatile
 22423                           
 22424                           ; BSR set to: 57
 22425                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 22426  01E82E  5169               	movf	105,w,b	;volatile
 22427  01E830  0B0F               	andlw	15
 22428  01E832  6E35               	movwf	(btemp+11)^0,c
 22429  01E834  3A35               	swapf	(btemp+11)^0,f,c
 22430  01E836  5169               	movf	105,w,b	;volatile
 22431  01E838  1835               	xorwf	(btemp+11)^0,w,c
 22432  01E83A  0B0F               	andlw	-241
 22433  01E83C  1835               	xorwf	(btemp+11)^0,w,c
 22434  01E83E  6F69               	movwf	105,b	;volatile
 22435                           
 22436                           ; BSR set to: 57
 22437                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 22438  01E840  0E08               	movlw	8
 22439  01E842  0100               	movlb	0	; () banked
 22440  01E844  65E3               	cpfsgt	(_crcObj+1)& (0+255),b
 22441  01E846  D003               	goto	l1282
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 22445  01E848  0139               	movlb	57	; () banked
 22446  01E84A  6B61               	clrf	97,b	;volatile
 22447  01E84C  D001               	goto	L19
 22448  01E84E                     l1282:
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 22452  01E84E  0139               	movlb	57	; () banked
 22453  01E850                     L19:
 22454  01E850  6B60               	clrf	96,b	;volatile
 22455                           
 22456                           ; BSR set to: 57
 22457                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 22458                           
 22459                           ;mcc_generated_files/crc.c: 176:      }
 22460  01E852  8D68               	bsf	104,6,b	;volatile
 22461  01E854                     l1284:
 22462                           
 22463                           ; BSR set to: 57
 22464  01E854  ADA0               	btfss	160,6,b	;volatile
 22465  01E856  D7FE               	goto	l1284
 22466                           
 22467                           ; BSR set to: 57
 22468                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 22469  01E858  9DA0               	bcf	160,6,b	;volatile
 22470                           
 22471                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 22472  01E85A  9D68               	bcf	104,6,b	;volatile
 22473                           
 22474                           ; BSR set to: 57
 22475                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 22476  01E85C  0060  F388  F035   	movff	_crcObj,btemp+11
 22477  01E862  0EFF               	movlw	255
 22478  01E864  2635               	addwf	(btemp+11)^0,f,c
 22479  01E866  3A35               	swapf	(btemp+11)^0,f,c
 22480  01E868  5169               	movf	105,w,b	;volatile
 22481  01E86A  1835               	xorwf	(btemp+11)^0,w,c
 22482  01E86C  0B0F               	andlw	-241
 22483  01E86E  1835               	xorwf	(btemp+11)^0,w,c
 22484  01E870  6F69               	movwf	105,b	;volatile
 22485                           
 22486                           ; BSR set to: 57
 22487                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 22488  01E872  5162               	movf	98,w,b	;volatile
 22489  01E874  006E F58C  F02A    	movff	14691,btemp	;volatile
 22490  01E87A  6A2B               	clrf	(btemp+1)^0,c
 22491  01E87C  0060  F0A8  F02B   	movff	btemp,btemp+1
 22492  01E882  6A2A               	clrf	btemp^0,c
 22493  01E884  122A               	iorwf	btemp^0,f,c
 22494  01E886  0E00               	movlw	0
 22495  01E888  122B               	iorwf	(btemp+1)^0,f,c
 22496                           
 22497                           ;stkvar	_result @ sp[(-4)+0]
 22498  01E88A  0EFC               	movlw	-4
 22499  01E88C  0060  F0AB  FFE3   	movff	btemp,plusw1
 22500  01E892  0EFD               	movlw	-3
 22501  01E894  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22502                           
 22503                           ; BSR set to: 57
 22504                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 22505  01E89A  0E10               	movlw	16
 22506  01E89C  0100               	movlb	0	; () banked
 22507  01E89E  61E3               	cpfslt	(_crcObj+1)& (0+255),b
 22508  01E8A0  D03A               	goto	l12802
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 22512  01E8A2  0EFF               	movlw	255
 22513  01E8A4  6E34               	movwf	(btemp+10)^0,c
 22514  01E8A6  0EFF               	movlw	255
 22515  01E8A8  6E35               	movwf	(btemp+11)^0,c
 22516  01E8AA  0060  F38C  F033   	movff	_crcObj+1,btemp+9
 22517  01E8B0  0E01               	movlw	1
 22518  01E8B2  6E30               	movwf	(btemp+6)^0,c
 22519  01E8B4  0E00               	movlw	0
 22520  01E8B6  6E31               	movwf	(btemp+7)^0,c
 22521  01E8B8  2A33               	incf	(btemp+9)^0,f,c
 22522  01E8BA  D003               	goto	u12294
 22523  01E8BC                     u12295:
 22524  01E8BC  90D8               	bcf	status,0,c
 22525  01E8BE  3630               	rlcf	(btemp+6)^0,f,c
 22526  01E8C0  3631               	rlcf	(btemp+7)^0,f,c
 22527  01E8C2                     u12294:
 22528  01E8C2  2E33               	decfsz	(btemp+9)^0,f,c
 22529  01E8C4  D7FB               	goto	u12295
 22530  01E8C6  5034               	movf	(btemp+10)^0,w,c
 22531  01E8C8  2630               	addwf	(btemp+6)^0,f,c
 22532  01E8CA  5035               	movf	(btemp+11)^0,w,c
 22533  01E8CC  2231               	addwfc	(btemp+7)^0,f,c
 22534                           
 22535                           ;stkvar	_mask @ sp[(-4)+2]
 22536  01E8CE  0EFE               	movlw	-2
 22537  01E8D0  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 22538  01E8D6  0EFF               	movlw	-1
 22539  01E8D8  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 22540                           
 22541                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 22542                           ;stkvar	_mask @ sp[(-4)+2]
 22543  01E8DE  0EFE               	movlw	-2
 22544  01E8E0  006F FF8C  F034    	movff	plusw1,btemp+10
 22545  01E8E6  0EFF               	movlw	-1
 22546  01E8E8  006F FF8C  F035    	movff	plusw1,btemp+11
 22547                           
 22548                           ;stkvar	_result @ sp[(-4)+0]
 22549  01E8EE  0EFC               	movlw	-4
 22550  01E8F0  006F FF8C  F02A    	movff	plusw1,btemp
 22551  01E8F6  5034               	movf	(btemp+10)^0,w,c
 22552  01E8F8  162A               	andwf	btemp^0,f,c
 22553  01E8FA  0EFC               	movlw	-4
 22554  01E8FC  0060  F0AB  FFE3   	movff	btemp,plusw1
 22555  01E902  0EFD               	movlw	-3
 22556  01E904  006F FF8C  F02A    	movff	plusw1,btemp
 22557  01E90A  5035               	movf	(btemp+11)^0,w,c
 22558  01E90C  162A               	andwf	btemp^0,f,c
 22559  01E90E  0EFD               	movlw	-3
 22560  01E910  0060  F0AB  FFE3   	movff	btemp,plusw1
 22561  01E916                     l12802:
 22562                           
 22563                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 22564                           ;stkvar	_reverse @ sp[(-4)+-1]
 22565  01E916  0EFB               	movlw	-5
 22566  01E918  50E3               	movf	plusw1,w,c
 22567  01E91A  B4D8               	btfsc	status,2,c
 22568  01E91C  D011               	goto	l12806
 22569                           
 22570                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 22571                           ;stkvar	_result @ sp[(-4)+0]
 22572  01E91E  0EFC               	movlw	-4
 22573  01E920  006F FF8F FFE6     	movff	plusw1,postinc1
 22574  01E926  006F FF8F FFE6     	movff	plusw1,postinc1
 22575  01E92C  EC81  F003         	call	_CRC_ReverseValue	;wreg free
 22576                           
 22577                           ;stkvar	_result @ sp[(-4)+0]
 22578  01E930  0EFC               	movlw	-4
 22579  01E932  0060  F0AB  FFE3   	movff	btemp,plusw1
 22580  01E938  0EFD               	movlw	-3
 22581  01E93A  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 22582  01E940                     l12806:
 22583                           
 22584                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 22585                           ;stkvar	_xorValue @ sp[(-4)+-3]
 22586  01E940  0EF9               	movlw	-7
 22587  01E942  006F FF8C  F034    	movff	plusw1,btemp+10
 22588  01E948  0EFA               	movlw	-6
 22589  01E94A  006F FF8C  F035    	movff	plusw1,btemp+11
 22590                           
 22591                           ;stkvar	_result @ sp[(-4)+0]
 22592  01E950  0EFC               	movlw	-4
 22593  01E952  006F FF8C  F02A    	movff	plusw1,btemp
 22594  01E958  5034               	movf	(btemp+10)^0,w,c
 22595  01E95A  1A2A               	xorwf	btemp^0,f,c
 22596  01E95C  0EFC               	movlw	-4
 22597  01E95E  0060  F0AB  FFE3   	movff	btemp,plusw1
 22598  01E964  0EFD               	movlw	-3
 22599  01E966  006F FF8C  F02A    	movff	plusw1,btemp
 22600  01E96C  5035               	movf	(btemp+11)^0,w,c
 22601  01E96E  1A2A               	xorwf	btemp^0,f,c
 22602  01E970  0EFD               	movlw	-3
 22603  01E972  0060  F0AB  FFE3   	movff	btemp,plusw1
 22604                           
 22605                           ;mcc_generated_files/crc.c: 198:     return result;
 22606                           ;stkvar	_result @ sp[(-4)+0]
 22607  01E978  0EFC               	movlw	-4
 22608  01E97A  006F FF8C  F02A    	movff	plusw1,btemp
 22609  01E980  0EFD               	movlw	-3
 22610  01E982  006F FF8C  F02B    	movff	plusw1,btemp+1
 22611                           
 22612                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 22613  01E988  0EF9               	movlw	249
 22614  01E98A  26E1               	addwf	fsr1l,f,c
 22615  01E98C  0EFF               	movlw	255
 22616  01E98E  22E2               	addwfc	fsr1h,f,c
 22617  01E990  0012               	return		;funcret
 22618  01E992                     __end_of_CRC_CalculatedResultGet:
 22619                           	opt callstack 0
 22620                           
 22621 ;; *************** function _CRC_ReverseValue *****************
 22622 ;; Defined at:
 22623 ;;		line 138 in file "mcc_generated_files/crc.c"
 22624 ;; Parameters:    Size  Location     Type
 22625 ;;  crc             2  [STACK] unsigned short 
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;  mask            2  [STACK] unsigned short 
 22628 ;;  reverse         2  [STACK] unsigned short 
 22629 ;; Return value:  Size  Location     Type
 22630 ;;                  2  [STACK] unsigned short 
 22631 ;; Registers used:
 22632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 22633 ;; Tracked objects:
 22634 ;;		On entry : 0/0
 22635 ;;		On exit  : 0/0
 22636 ;;		Unchanged: 0/0
 22637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22642 ;;Total ram usage:        0 bytes
 22643 ;; Hardware stack levels used:    1
 22644 ;; Hardware stack levels required when called:   15
 22645 ;; This function calls:
 22646 ;;		Nothing
 22647 ;; This function is called by:
 22648 ;;		_CRC_CalculatedResultGet
 22649 ;; This function uses a reentrant model
 22650 ;;
 22651                           
 22652                           	psect	text64
 22653  000702                     __ptext64:
 22654                           	opt callstack 0
 22655  000702                     _CRC_ReverseValue:
 22656                           	opt callstack 0
 22657                           
 22658                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22659  000702  52E6               	movf	postinc1,f,c
 22660  000704  52E6               	movf	postinc1,f,c
 22661  000706  52E6               	movf	postinc1,f,c
 22662  000708  52E6               	movf	postinc1,f,c
 22663                           
 22664                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 22665                           
 22666                           ;incstack = 0
 22667  00070A  0E01               	movlw	1
 22668  00070C  6E34               	movwf	(btemp+10)^0,c
 22669  00070E  0E00               	movlw	0
 22670  000710  6E35               	movwf	(btemp+11)^0,c
 22671                           
 22672                           ;stkvar	_mask @ sp[(-4)+0]
 22673  000712  0EFC               	movlw	-4
 22674  000714  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 22675  00071A  0EFD               	movlw	-3
 22676  00071C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 22677                           
 22678                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 22679  000722  0060  F38C  F035   	movff	_crcObj+1,btemp+11
 22680  000728  0EFF               	movlw	255
 22681  00072A  2635               	addwf	(btemp+11)^0,f,c
 22682                           
 22683                           ;stkvar	_mask @ sp[(-4)+0]
 22684  00072C  50E1               	movf	fsr1l,w,c
 22685  00072E  0FFC               	addlw	-4
 22686  000730  6ED9               	movwf	fsr2l,c
 22687  000732  50E2               	movf	fsr1h,w,c
 22688  000734  6EDA               	movwf	fsr2h,c
 22689  000736  0EFF               	movlw	255
 22690  000738  22DA               	addwfc	fsr2h,f,c
 22691  00073A  2835               	incf	(btemp+11)^0,w,c
 22692  00073C  D003               	goto	u11560
 22693  00073E                     u11565:
 22694  00073E  90D8               	bcf	status,0,c
 22695  000740  36DE               	rlcf	postinc2,f,c
 22696  000742  36DD               	rlcf	postdec2,f,c
 22697  000744                     u11560:
 22698  000744  2EE8               	decfsz	wreg,f,c
 22699  000746  D7FB               	goto	u11565
 22700                           
 22701                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 22702                           ;stkvar	_reverse @ sp[(-4)+2]
 22703  000748  0EFE               	movlw	-2
 22704  00074A  6AE3               	clrf	plusw1,c
 22705  00074C  0EFF               	movlw	-1
 22706  00074E  6AE3               	clrf	plusw1,c
 22707                           
 22708                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22709  000750  D029               	goto	l12286
 22710  000752                     l12278:
 22711                           
 22712                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 22713                           ;stkvar	_crc @ sp[(-4)+-2]
 22714  000752  0EFA               	movlw	-6
 22715  000754  A0E3               	btfss	plusw1,0,c
 22716  000756  D01C               	goto	l12282
 22717                           
 22718                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 22719                           ;stkvar	_mask @ sp[(-4)+0]
 22720  000758  0EFC               	movlw	-4
 22721  00075A  006F FF8C  F034    	movff	plusw1,btemp+10
 22722  000760  0EFD               	movlw	-3
 22723  000762  006F FF8C  F035    	movff	plusw1,btemp+11
 22724                           
 22725                           ;stkvar	_reverse @ sp[(-4)+2]
 22726  000768  0EFE               	movlw	-2
 22727  00076A  006F FF8C  F02A    	movff	plusw1,btemp
 22728  000770  5034               	movf	(btemp+10)^0,w,c
 22729  000772  122A               	iorwf	btemp^0,f,c
 22730  000774  0EFE               	movlw	-2
 22731  000776  0060  F0AB  FFE3   	movff	btemp,plusw1
 22732  00077C  0EFF               	movlw	-1
 22733  00077E  006F FF8C  F02A    	movff	plusw1,btemp
 22734  000784  5035               	movf	(btemp+11)^0,w,c
 22735  000786  122A               	iorwf	btemp^0,f,c
 22736  000788  0EFF               	movlw	-1
 22737  00078A  0060  F0AB  FFE3   	movff	btemp,plusw1
 22738  000790                     l12282:
 22739                           
 22740                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 22741                           ;stkvar	_mask @ sp[(-4)+0]
 22742  000790  90D8               	bcf	status,0,c
 22743  000792  0EFD               	movlw	-3
 22744  000794  32E3               	rrcf	plusw1,f,c
 22745  000796  0EFC               	movlw	-4
 22746  000798  32E3               	rrcf	plusw1,f,c
 22747                           
 22748                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 22749                           ;stkvar	_crc @ sp[(-4)+-2]
 22750  00079A  90D8               	bcf	status,0,c
 22751  00079C  0EFB               	movlw	-5
 22752  00079E  32E3               	rrcf	plusw1,f,c
 22753  0007A0  0EFA               	movlw	-6
 22754  0007A2  32E3               	rrcf	plusw1,f,c
 22755  0007A4                     l12286:
 22756                           
 22757                           ;mcc_generated_files/crc.c: 147:     while(crc)
 22758                           ;stkvar	_crc @ sp[(-4)+-2]
 22759  0007A4  0EFA               	movlw	-6
 22760  0007A6  006F FF8C  F02A    	movff	plusw1,btemp
 22761  0007AC  0EFB               	movlw	-5
 22762  0007AE  50E3               	movf	plusw1,w,c
 22763  0007B0  102A               	iorwf	btemp^0,w,c
 22764  0007B2  A4D8               	btfss	status,2,c
 22765  0007B4  D7CE               	goto	l12278
 22766                           
 22767                           ;mcc_generated_files/crc.c: 156:     return reverse;
 22768                           ;stkvar	_reverse @ sp[(-4)+2]
 22769  0007B6  0EFE               	movlw	-2
 22770  0007B8  006F FF8C  F02A    	movff	plusw1,btemp
 22771  0007BE  0EFF               	movlw	-1
 22772  0007C0  006F FF8C  F02B    	movff	plusw1,btemp+1
 22773                           
 22774                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22775  0007C6  0EFA               	movlw	250
 22776  0007C8  26E1               	addwf	fsr1l,f,c
 22777  0007CA  0EFF               	movlw	255
 22778  0007CC  22E2               	addwfc	fsr1h,f,c
 22779  0007CE  0012               	return		;funcret
 22780  0007D0                     __end_of_CRC_ReverseValue:
 22781                           	opt callstack 0
 22782                           
 22783 ;; *************** function _CRC_8BitDataWrite *****************
 22784 ;; Defined at:
 22785 ;;		line 125 in file "mcc_generated_files/crc.c"
 22786 ;; Parameters:    Size  Location     Type
 22787 ;;  data            1  [STACK] unsigned char 
 22788 ;; Auto vars:     Size  Location     Type
 22789 ;;		None
 22790 ;; Return value:  Size  Location     Type
 22791 ;;                  1  [STACK] _Bool 
 22792 ;; Registers used:
 22793 ;;		fsr1l, fsr1h
 22794 ;; Tracked objects:
 22795 ;;		On entry : 0/4
 22796 ;;		On exit  : 3F/39
 22797 ;;		Unchanged: 0/0
 22798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22803 ;;Total ram usage:        0 bytes
 22804 ;; Hardware stack levels used:    1
 22805 ;; Hardware stack levels required when called:   15
 22806 ;; This function calls:
 22807 ;;		Nothing
 22808 ;; This function is called by:
 22809 ;;		_read_cal_data
 22810 ;;		_write_cal_data
 22811 ;; This function uses a reentrant model
 22812 ;;
 22813                           
 22814                           	psect	text65
 22815  002C1A                     __ptext65:
 22816                           	opt callstack 0
 22817  002C1A                     _CRC_8BitDataWrite:
 22818                           	opt callstack 14
 22819                           
 22820                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 22821                           
 22822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22823                           ;incstack = 0
 22824  002C1A  0139               	movlb	57	; () banked
 22825  002C1C  B168               	btfsc	104,0,b	;volatile
 22826  002C1E  D004               	goto	l1271
 22827                           
 22828                           ; BSR set to: 57
 22829                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 22830                           ;stkvar	_data @ sp[(0)+-1]
 22831  002C20  0EFF               	movlw	-1
 22832  002C22  006F FF8F F960     	movff	plusw1,14688	;volatile
 22833  002C28                     l1271:
 22834                           
 22835                           ; BSR set to: 57
 22836                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 22837  002C28  52E5               	movf	postdec1,f,c
 22838  002C2A  0012               	return		;funcret
 22839  002C2C                     __end_of_CRC_8BitDataWrite:
 22840                           	opt callstack 0
 22841                           
 22842 ;; *************** function _start_adc_scan *****************
 22843 ;; Defined at:
 22844 ;;		line 72 in file "daq.c"
 22845 ;; Parameters:    Size  Location     Type
 22846 ;;		None
 22847 ;; Auto vars:     Size  Location     Type
 22848 ;;		None
 22849 ;; Return value:  Size  Location     Type
 22850 ;;                  1  [STACK] _Bool 
 22851 ;; Registers used:
 22852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22853 ;; Tracked objects:
 22854 ;;		On entry : 0/0
 22855 ;;		On exit  : 0/0
 22856 ;;		Unchanged: 0/0
 22857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;Total ram usage:        0 bytes
 22863 ;; Hardware stack levels used:    1
 22864 ;; Hardware stack levels required when called:   16
 22865 ;; This function calls:
 22866 ;;		_ADCC_DischargeSampleCapacitor
 22867 ;;		_ADCC_SetADIInterruptHandler
 22868 ;;		_ADCC_SetADTIInterruptHandler
 22869 ;;		_ADCC_StartConversion
 22870 ;; This function is called by:
 22871 ;;		_main
 22872 ;;		_current_sensor_cal
 22873 ;;		_update_adc_result
 22874 ;; This function uses a reentrant model
 22875 ;;
 22876                           
 22877                           	psect	text66
 22878  001ABE                     __ptext66:
 22879                           	opt callstack 0
 22880  001ABE                     _start_adc_scan:
 22881                           	opt callstack 14
 22882                           
 22883                           ;daq.c: 74:  if (R.done)
 22884                           
 22885                           ; BSR set to: 57
 22886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22887                           ;incstack = 0
 22888  001ABE  0101               	movlb	1	; () banked
 22889  001AC0  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 22890  001AC2  A4D8               	btfss	status,2,c
 22891  001AC4  0012               	return	
 22892                           
 22893                           ; BSR set to: 1
 22894                           ;daq.c: 77:  R.scan_index = 0;
 22895  001AC6  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 22896                           
 22897                           ; BSR set to: 1
 22898                           ;daq.c: 78:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 22899  001AC8  013A               	movlb	58	; () banked
 22900  001ACA  5140               	movf	64,w,b	;volatile
 22901  001ACC  006E F940  F02A    	movff	14928,btemp	;volatile
 22902  001AD2  6A2B               	clrf	(btemp+1)^0,c
 22903  001AD4  0060  F0A8  F02B   	movff	btemp,btemp+1
 22904  001ADA  6A2A               	clrf	btemp^0,c
 22905  001ADC  262A               	addwf	btemp^0,f,c
 22906  001ADE  0E00               	movlw	0
 22907  001AE0  222B               	addwfc	(btemp+1)^0,f,c
 22908  001AE2  0E77               	movlw	119
 22909  001AE4  142A               	andwf	btemp^0,w,c
 22910  001AE6  0101               	movlb	1	; () banked
 22911  001AE8  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 22912  001AEA  0E3C               	movlw	60
 22913  001AEC  142B               	andwf	(btemp+1)^0,w,c
 22914  001AEE  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 22915                           
 22916                           ; BSR set to: 1
 22917                           ;daq.c: 79:  ADCC_SetADIInterruptHandler(adc_int_handler);
 22918  001AF0  0E7A               	movlw	low _adc_int_handler
 22919  001AF2  6EE6               	movwf	postinc1,c
 22920  001AF4  0E2D               	movlw	high _adc_int_handler
 22921  001AF6  6EE6               	movwf	postinc1,c
 22922  001AF8  0E00               	movlw	low (_adc_int_handler shr (0+16))
 22923  001AFA  6EE6               	movwf	postinc1,c
 22924  001AFC  EC59  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 22925                           
 22926                           ;daq.c: 80:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 22927  001B00  0E04               	movlw	low _adc_int_t_handler
 22928  001B02  6EE6               	movwf	postinc1,c
 22929  001B04  0E15               	movlw	high _adc_int_t_handler
 22930  001B06  6EE6               	movwf	postinc1,c
 22931  001B08  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 22932  001B0A  6EE6               	movwf	postinc1,c
 22933  001B0C  EC45  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 22934                           
 22935                           ;daq.c: 81:  ADCC_DischargeSampleCapacitor();
 22936  001B10  EC93  F016         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 22937                           
 22938                           ; BSR set to: 62
 22939                           ;daq.c: 82:  ADCC_StartConversion(R.scan_index & 0xf);
 22940  001B14  0101               	movlb	1	; () banked
 22941  001B16  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 22942  001B18  0B0F               	andlw	15
 22943  001B1A  6EE6               	movwf	postinc1,c
 22944  001B1C  EC16  F016         	call	_ADCC_StartConversion	;wreg free
 22945                           
 22946                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22947  001B20  0012               	return		;funcret
 22948  001B22                     __end_of_start_adc_scan:
 22949                           	opt callstack 0
 22950                           
 22951 ;; *************** function _ADCC_StartConversion *****************
 22952 ;; Defined at:
 22953 ;;		line 128 in file "mcc_generated_files/adcc.c"
 22954 ;; Parameters:    Size  Location     Type
 22955 ;;  channel         1  [STACK] enum E16136
 22956 ;; Auto vars:     Size  Location     Type
 22957 ;;		None
 22958 ;; Return value:  Size  Location     Type
 22959 ;;                  1  [STACK] void 
 22960 ;; Registers used:
 22961 ;;		fsr1l, fsr1h
 22962 ;; Tracked objects:
 22963 ;;		On entry : 3F/1
 22964 ;;		On exit  : 3F/3E
 22965 ;;		Unchanged: 0/0
 22966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22971 ;;Total ram usage:        0 bytes
 22972 ;; Hardware stack levels used:    1
 22973 ;; Hardware stack levels required when called:   15
 22974 ;; This function calls:
 22975 ;;		Nothing
 22976 ;; This function is called by:
 22977 ;;		_start_adc_scan
 22978 ;;		_adc_int_t_handler
 22979 ;; This function uses a reentrant model
 22980 ;;
 22981                           
 22982                           	psect	text67
 22983  002C2C                     __ptext67:
 22984                           	opt callstack 0
 22985  002C2C                     _ADCC_StartConversion:
 22986                           	opt callstack 0
 22987                           
 22988                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 22989                           ;stkvar	_channel @ sp[(0)+-1]
 22990                           
 22991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22992                           ;incstack = 0
 22993 ;; hardware stack exceeded
 22994  002C2C  0EFF               	movlw	-1
 22995  002C2E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 22996                           
 22997                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 22998  002C34  013E               	movlb	62	; () banked
 22999  002C36  8FF8               	bsf	248,7,b	;volatile
 23000                           
 23001                           ; BSR set to: 62
 23002                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 23003  002C38  81F8               	bsf	248,0,b	;volatile
 23004                           
 23005                           ; BSR set to: 62
 23006                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 23007  002C3A  52E5               	movf	postdec1,f,c
 23008  002C3C  0012               	return		;funcret
 23009  002C3E                     __end_of_ADCC_StartConversion:
 23010                           	opt callstack 0
 23011                           
 23012 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 23013 ;; Defined at:
 23014 ;;		line 189 in file "mcc_generated_files/adcc.c"
 23015 ;; Parameters:    Size  Location     Type
 23016 ;;		None
 23017 ;; Auto vars:     Size  Location     Type
 23018 ;;		None
 23019 ;; Return value:  Size  Location     Type
 23020 ;;                  1  [STACK] void 
 23021 ;; Registers used:
 23022 ;;		wreg, status,2
 23023 ;; Tracked objects:
 23024 ;;		On entry : 0/1
 23025 ;;		On exit  : 3F/3E
 23026 ;;		Unchanged: 0/0
 23027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23032 ;;Total ram usage:        0 bytes
 23033 ;; Hardware stack levels used:    1
 23034 ;; Hardware stack levels required when called:   15
 23035 ;; This function calls:
 23036 ;;		Nothing
 23037 ;; This function is called by:
 23038 ;;		_start_adc_scan
 23039 ;;		_adc_int_t_handler
 23040 ;; This function uses a reentrant model
 23041 ;;
 23042                           
 23043                           	psect	text68
 23044  002D26                     __ptext68:
 23045                           	opt callstack 0
 23046  002D26                     _ADCC_DischargeSampleCapacitor:
 23047                           	opt callstack 0
 23048                           
 23049                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 23050                           
 23051                           ; BSR set to: 62
 23052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23053                           ;incstack = 0
 23054 ;; hardware stack exceeded
 23055  002D26  0E3B               	movlw	59
 23056  002D28  013E               	movlb	62	; () banked
 23057  002D2A  6FF1               	movwf	241,b	;volatile
 23058                           
 23059                           ; BSR set to: 62
 23060                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 23061  002D2C  0012               	return		;funcret
 23062  002D2E                     __end_of_ADCC_DischargeSampleCapacitor:
 23063                           	opt callstack 0
 23064                           
 23065 ;; *************** function _spinners *****************
 23066 ;; Defined at:
 23067 ;;		line 147 in file "mbmc.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  shape           1  [STACK] unsigned char 
 23070 ;;  reset           1  [STACK] const unsigned char 
 23071 ;; Auto vars:     Size  Location     Type
 23072 ;;  c               1  [STACK] unsigned char 
 23073 ;; Return value:  Size  Location     Type
 23074 ;;                  1  [STACK] unsigned char 
 23075 ;; Registers used:
 23076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 23077 ;; Tracked objects:
 23078 ;;		On entry : 0/0
 23079 ;;		On exit  : 0/0
 23080 ;;		Unchanged: 0/0
 23081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23086 ;;Total ram usage:        0 bytes
 23087 ;; Hardware stack levels used:    1
 23088 ;; Hardware stack levels required when called:   16
 23089 ;; This function calls:
 23090 ;;		_strlen
 23091 ;; This function is called by:
 23092 ;;		_main
 23093 ;;		_current_sensor_cal
 23094 ;; This function uses a reentrant model
 23095 ;;
 23096                           
 23097                           	psect	text69
 23098  0000B6                     __ptext69:
 23099                           	opt callstack 0
 23100  0000B6                     _spinners:
 23101                           	opt callstack 0
 23102                           
 23103                           ; BSR set to: 62
 23104                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23105  0000B6  52E6               	movf	postinc1,f,c
 23106                           
 23107                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 23108                           ;stkvar	_shape @ sp[(-1)+-1]
 23109                           
 23110                           ;incstack = 0
 23111  0000B8  0EFE               	movlw	-2
 23112  0000BA  006F FF8C  F02A    	movff	plusw1,btemp
 23113  0000C0  0E05               	movlw	5
 23114  0000C2  642A               	cpfsgt	btemp^0,c
 23115  0000C4  D002               	goto	l2188
 23116                           
 23117                           ;mbmc.c: 153:   shape = 0;
 23118                           ;stkvar	_shape @ sp[(-1)+-1]
 23119  0000C6  0EFE               	movlw	-2
 23120  0000C8  6AE3               	clrf	plusw1,c
 23121  0000CA                     l2188:
 23122                           
 23123                           ;mbmc.c: 154:  if (reset)
 23124                           ;stkvar	_reset @ sp[(-1)+-2]
 23125  0000CA  0EFD               	movlw	-3
 23126  0000CC  50E3               	movf	plusw1,w,c
 23127  0000CE  B4D8               	btfsc	status,2,c
 23128  0000D0  D00C               	goto	l16964
 23129                           
 23130                           ;mbmc.c: 155:   s[shape] = 0;
 23131                           ;stkvar	_shape @ sp[(-1)+-1]
 23132  0000D2  0EFE               	movlw	-2
 23133  0000D4  50E3               	movf	plusw1,w,c
 23134  0000D6  6E34               	movwf	(btemp+10)^0,c
 23135  0000D8  6A35               	clrf	(btemp+11)^0,c
 23136  0000DA  0ECD               	movlw	low spinners@s
 23137  0000DC  2434               	addwf	(btemp+10)^0,w,c
 23138  0000DE  6ED9               	movwf	fsr2l,c
 23139  0000E0  0E01               	movlw	high spinners@s
 23140  0000E2  2035               	addwfc	(btemp+11)^0,w,c
 23141  0000E4  6EDA               	movwf	fsr2h,c
 23142  0000E6  0E00               	movlw	0
 23143  0000E8  6EDF               	movwf	indf2,c
 23144  0000EA                     l16964:
 23145                           
 23146                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 23147                           ;stkvar	_shape @ sp[(-1)+-1]
 23148  0000EA  0EFE               	movlw	-2
 23149  0000EC  50E3               	movf	plusw1,w,c
 23150  0000EE  0D14               	mullw	20
 23151  0000F0  0E67               	movlw	low _spin
 23152  0000F2  6E34               	movwf	(btemp+10)^0,c
 23153  0000F4  0EF9               	movlw	high _spin
 23154  0000F6  6E35               	movwf	(btemp+11)^0,c
 23155  0000F8  50F3               	movf	243,w,c
 23156  0000FA  2634               	addwf	(btemp+10)^0,f,c
 23157  0000FC  50F4               	movf	244,w,c
 23158  0000FE  2235               	addwfc	(btemp+11)^0,f,c
 23159                           
 23160                           ;stkvar	_shape @ sp[(-1)+-1]
 23161  000100  0EFE               	movlw	-2
 23162  000102  50E3               	movf	plusw1,w,c
 23163  000104  6E32               	movwf	(btemp+8)^0,c
 23164  000106  6A33               	clrf	(btemp+9)^0,c
 23165  000108  0ECD               	movlw	low spinners@s
 23166  00010A  2432               	addwf	(btemp+8)^0,w,c
 23167  00010C  6ED9               	movwf	fsr2l,c
 23168  00010E  0E01               	movlw	high spinners@s
 23169  000110  2033               	addwfc	(btemp+9)^0,w,c
 23170  000112  6EDA               	movwf	fsr2h,c
 23171  000114  50DF               	movf	indf2,w,c
 23172  000116  2634               	addwf	(btemp+10)^0,f,c
 23173  000118  0E00               	movlw	0
 23174  00011A  2235               	addwfc	(btemp+11)^0,f,c
 23175  00011C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 23176  000122  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 23177  000128                     	if	0	;tblptru may be non-zero
 23178  000128                     	endif
 23179  000128                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23180  000128  0E00               	movlw	low (__mediumconst shr (0+16))
 23181  00012A  6EF8               	movwf	tblptru,c
 23182  00012C                     	endif
 23183                           
 23184                           ;stkvar	_c @ sp[(-1)+0]
 23185  00012C  0008               	tblrd		*
 23186  00012E  0EFF               	movlw	-1
 23187  000130  006F FFD7 FFE3     	movff	tablat,plusw1
 23188                           
 23189                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 23190                           ;stkvar	_shape @ sp[(-1)+-1]
 23191  000136  0EFE               	movlw	-2
 23192  000138  50E3               	movf	plusw1,w,c
 23193  00013A  0D14               	mullw	20
 23194  00013C  0E67               	movlw	low _spin
 23195  00013E  6E34               	movwf	(btemp+10)^0,c
 23196  000140  0EF9               	movlw	high _spin
 23197  000142  6E35               	movwf	(btemp+11)^0,c
 23198  000144  50F3               	movf	243,w,c
 23199  000146  2634               	addwf	(btemp+10)^0,f,c
 23200  000148  50F4               	movf	244,w,c
 23201  00014A  2235               	addwfc	(btemp+11)^0,f,c
 23202  00014C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 23203  000152  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 23204  000158  EC63  F007         	call	_strlen	;wreg free
 23205                           
 23206                           ;stkvar	_shape @ sp[(-1)+-1]
 23207  00015C  0EFE               	movlw	-2
 23208  00015E  50E3               	movf	plusw1,w,c
 23209  000160  6E34               	movwf	(btemp+10)^0,c
 23210  000162  6A35               	clrf	(btemp+11)^0,c
 23211  000164  0ECD               	movlw	low spinners@s
 23212  000166  2434               	addwf	(btemp+10)^0,w,c
 23213  000168  6ED9               	movwf	fsr2l,c
 23214  00016A  0E01               	movlw	high spinners@s
 23215  00016C  2035               	addwfc	(btemp+11)^0,w,c
 23216  00016E  6EDA               	movwf	fsr2h,c
 23217  000170  2ADF               	incf	indf2,f,c
 23218  000172  50DF               	movf	indf2,w,c
 23219  000174  6E34               	movwf	(btemp+10)^0,c
 23220  000176  6A35               	clrf	(btemp+11)^0,c
 23221  000178  502A               	movf	btemp^0,w,c
 23222  00017A  5C34               	subwf	(btemp+10)^0,w,c
 23223  00017C  502B               	movf	(btemp+1)^0,w,c
 23224  00017E  5835               	subwfb	(btemp+11)^0,w,c
 23225  000180  A0D8               	btfss	status,0,c
 23226  000182  D00C               	goto	l16970
 23227                           
 23228                           ;mbmc.c: 158:   s[shape] = 0;
 23229                           ;stkvar	_shape @ sp[(-1)+-1]
 23230  000184  0EFE               	movlw	-2
 23231  000186  50E3               	movf	plusw1,w,c
 23232  000188  6E34               	movwf	(btemp+10)^0,c
 23233  00018A  6A35               	clrf	(btemp+11)^0,c
 23234  00018C  0ECD               	movlw	low spinners@s
 23235  00018E  2434               	addwf	(btemp+10)^0,w,c
 23236  000190  6ED9               	movwf	fsr2l,c
 23237  000192  0E01               	movlw	high spinners@s
 23238  000194  2035               	addwfc	(btemp+11)^0,w,c
 23239  000196  6EDA               	movwf	fsr2h,c
 23240  000198  0E00               	movlw	0
 23241  00019A  6EDF               	movwf	indf2,c
 23242  00019C                     l16970:
 23243                           
 23244                           ;mbmc.c: 159:  return c;
 23245                           ;stkvar	_c @ sp[(-1)+0]
 23246  00019C  0EFF               	movlw	-1
 23247  00019E  006F FF8C  F02A    	movff	plusw1,btemp
 23248                           
 23249                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 23250  0001A4  52E5               	movf	postdec1,f,c
 23251  0001A6  52E5               	movf	postdec1,f,c
 23252  0001A8  52E5               	movf	postdec1,f,c
 23253  0001AA  0012               	return		;funcret
 23254  0001AC                     __end_of_spinners:
 23255                           	opt callstack 0
 23256                           
 23257 ;; *************** function _get_switch *****************
 23258 ;; Defined at:
 23259 ;;		line 18 in file "dio.c"
 23260 ;; Parameters:    Size  Location     Type
 23261 ;;  i               1  [STACK] const unsigned char 
 23262 ;; Auto vars:     Size  Location     Type
 23263 ;;		None
 23264 ;; Return value:  Size  Location     Type
 23265 ;;                  1  [STACK] enum E17187
 23266 ;; Registers used:
 23267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23268 ;; Tracked objects:
 23269 ;;		On entry : 0/0
 23270 ;;		On exit  : 0/0
 23271 ;;		Unchanged: 0/0
 23272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23277 ;;Total ram usage:        0 bytes
 23278 ;; Hardware stack levels used:    1
 23279 ;; Hardware stack levels required when called:   15
 23280 ;; This function calls:
 23281 ;;		Nothing
 23282 ;; This function is called by:
 23283 ;;		_main
 23284 ;;		_current_sensor_cal
 23285 ;;		_display_history
 23286 ;;		_hid_input
 23287 ;; This function uses a reentrant model
 23288 ;;
 23289                           
 23290                           	psect	text70
 23291  00264A                     __ptext70:
 23292                           	opt callstack 0
 23293  00264A                     _get_switch:
 23294                           	opt callstack 13
 23295                           
 23296                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 23297                           ;stkvar	_i @ sp[(0)+-1]
 23298                           
 23299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23300                           ;incstack = 0
 23301  00264A  0EFF               	movlw	-1
 23302  00264C  006F FF8C  F02A    	movff	plusw1,btemp
 23303  002652  0E05               	movlw	5
 23304  002654  642A               	cpfsgt	btemp^0,c
 23305  002656  D002               	goto	l12872
 23306                           
 23307                           ;dio.c: 21:   return SW_OFF;
 23308  002658  0E00               	movlw	0
 23309  00265A  D00A               	goto	L20
 23310  00265C                     l12872:
 23311                           
 23312                           ;dio.c: 23:  return S.button[i].sw;
 23313                           ;stkvar	_i @ sp[(0)+-1]
 23314  00265C  0EFF               	movlw	-1
 23315  00265E  50E3               	movf	plusw1,w,c
 23316  002660  0D05               	mullw	5
 23317  002662  0EA4               	movlw	low _S
 23318  002664  24F3               	addwf	243,w,c
 23319  002666  6ED9               	movwf	fsr2l,c
 23320  002668  0E01               	movlw	high _S
 23321  00266A  20F4               	addwfc	prodh,w,c
 23322  00266C  6EDA               	movwf	fsr2h,c
 23323  00266E  50DF               	movf	indf2,w,c
 23324  002670                     L20:
 23325  002670  6E2A               	movwf	btemp^0,c
 23326                           
 23327                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23328  002672  52E5               	movf	postdec1,f,c
 23329  002674  0012               	return		;funcret
 23330  002676                     __end_of_get_switch:
 23331                           	opt callstack 0
 23332                           
 23333 ;; *************** function _clear_adc_scan *****************
 23334 ;; Defined at:
 23335 ;;		line 103 in file "daq.c"
 23336 ;; Parameters:    Size  Location     Type
 23337 ;;		None
 23338 ;; Auto vars:     Size  Location     Type
 23339 ;;		None
 23340 ;; Return value:  Size  Location     Type
 23341 ;;                  1  [STACK] void 
 23342 ;; Registers used:
 23343 ;;		None
 23344 ;; Tracked objects:
 23345 ;;		On entry : 0/0
 23346 ;;		On exit  : 3F/1
 23347 ;;		Unchanged: 0/0
 23348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23353 ;;Total ram usage:        0 bytes
 23354 ;; Hardware stack levels used:    1
 23355 ;; Hardware stack levels required when called:   15
 23356 ;; This function calls:
 23357 ;;		Nothing
 23358 ;; This function is called by:
 23359 ;;		_main
 23360 ;;		_current_sensor_cal
 23361 ;;		_update_adc_result
 23362 ;; This function uses a reentrant model
 23363 ;;
 23364                           
 23365                           	psect	text71
 23366  002D52                     __ptext71:
 23367                           	opt callstack 0
 23368  002D52                     _clear_adc_scan:
 23369                           	opt callstack 13
 23370                           
 23371                           ;daq.c: 105:  R.done = 0;
 23372                           
 23373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23374                           ;incstack = 0
 23375  002D52  0101               	movlb	1	; () banked
 23376  002D54  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 23377                           
 23378                           ; BSR set to: 1
 23379                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23380  002D56  0012               	return		;funcret
 23381  002D58                     __end_of_clear_adc_scan:
 23382                           	opt callstack 0
 23383                           
 23384 ;; *************** function _cal_current_zero *****************
 23385 ;; Defined at:
 23386 ;;		line 329 in file "daq.c"
 23387 ;; Parameters:    Size  Location     Type
 23388 ;;  mode            1  [STACK] const _Bool 
 23389 ;;  cb              2  [STACK] const short 
 23390 ;;  cp              2  [STACK] const short 
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1  [STACK] _Bool 
 23395 ;; Registers used:
 23396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23397 ;; Tracked objects:
 23398 ;;		On entry : 0/1
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:   16
 23409 ;; This function calls:
 23410 ;;		_check_range
 23411 ;; This function is called by:
 23412 ;;		_current_sensor_cal
 23413 ;; This function uses a reentrant model
 23414 ;;
 23415                           
 23416                           	psect	text72
 23417  00109A                     __ptext72:
 23418                           	opt callstack 0
 23419  00109A                     _cal_current_zero:
 23420                           	opt callstack 13
 23421                           
 23422                           ;daq.c: 329: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 330: {;daq.c: 332:  if (!check_range(cb, 100, 4000))
 23423                           
 23424                           ; BSR set to: 1
 23425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23426                           ;incstack = 0
 23427  00109A  0EA0               	movlw	160
 23428  00109C  6EE6               	movwf	postinc1,c
 23429  00109E  0E0F               	movlw	15
 23430  0010A0  6EE6               	movwf	postinc1,c
 23431  0010A2  0E64               	movlw	100
 23432  0010A4  6EE6               	movwf	postinc1,c
 23433  0010A6  0E00               	movlw	0
 23434  0010A8  6EE6               	movwf	postinc1,c
 23435                           
 23436                           ;stkvar	_cb @ sp[(-4)+-3]
 23437  0010AA  0EF9               	movlw	-7
 23438  0010AC  006F FF8F FFE6     	movff	plusw1,postinc1
 23439  0010B2  006F FF8F FFE6     	movff	plusw1,postinc1
 23440  0010B8  ECC3  F00A         	call	_check_range	;wreg free
 23441  0010BC  502A               	movf	btemp^0,w,c
 23442  0010BE  A4D8               	btfss	status,2,c
 23443  0010C0  D002               	goto	l13572
 23444  0010C2                     u12640:
 23445                           
 23446                           ;daq.c: 333:   return 0;
 23447  0010C2  0E00               	movlw	0
 23448  0010C4  D019               	goto	L21
 23449  0010C6                     l13572:
 23450                           
 23451                           ;daq.c: 335:  if (!check_range(cp, 100, 4000))
 23452  0010C6  0EA0               	movlw	160
 23453  0010C8  6EE6               	movwf	postinc1,c
 23454  0010CA  0E0F               	movlw	15
 23455  0010CC  6EE6               	movwf	postinc1,c
 23456  0010CE  0E64               	movlw	100
 23457  0010D0  6EE6               	movwf	postinc1,c
 23458  0010D2  0E00               	movlw	0
 23459  0010D4  6EE6               	movwf	postinc1,c
 23460                           
 23461                           ;stkvar	_cp @ sp[(-4)+-5]
 23462  0010D6  0EF7               	movlw	-9
 23463  0010D8  006F FF8F FFE6     	movff	plusw1,postinc1
 23464  0010DE  006F FF8F FFE6     	movff	plusw1,postinc1
 23465  0010E4  ECC3  F00A         	call	_check_range	;wreg free
 23466  0010E8  502A               	movf	btemp^0,w,c
 23467  0010EA  B4D8               	btfsc	status,2,c
 23468  0010EC  D7EA               	goto	u12640
 23469                           
 23470                           ;daq.c: 338:  if (!mode)
 23471                           ;stkvar	_mode @ sp[(0)+-1]
 23472  0010EE  0EFF               	movlw	-1
 23473  0010F0  50E3               	movf	plusw1,w,c
 23474  0010F2  A4D8               	btfss	status,2,c
 23475  0010F4  D003               	goto	l13584
 23476  0010F6                     u12660:
 23477                           
 23478                           ;daq.c: 339:   return 1;
 23479  0010F6  0E01               	movlw	1
 23480  0010F8                     L21:
 23481  0010F8  6E2A               	movwf	btemp^0,c
 23482  0010FA  D013               	goto	l2062
 23483  0010FC                     l13584:
 23484                           
 23485                           ;daq.c: 341:  R.n_offset[0] = cb;
 23486                           ;stkvar	_cb @ sp[(0)+-3]
 23487  0010FC  0EFD               	movlw	-3
 23488  0010FE  006F FF8C  F126    	movff	plusw1,_R+38	;volatile
 23489  001104  0EFE               	movlw	-2
 23490  001106  006F FF8C  F127    	movff	plusw1,_R+39	;volatile
 23491                           
 23492                           ;daq.c: 342:  R.n_offset[1] = cp;
 23493                           ;stkvar	_cp @ sp[(0)+-5]
 23494  00110C  0EFB               	movlw	-5
 23495  00110E  006F FF8C  F128    	movff	plusw1,_R+40	;volatile
 23496  001114  0EFC               	movlw	-4
 23497  001116  006F FF8C  F129    	movff	plusw1,_R+41	;volatile
 23498                           
 23499                           ;daq.c: 343:  R.c_zero_cal = 1;
 23500  00111C  0101               	movlb	1	; () banked
 23501  00111E  8597               	bsf	(_R+151)& (0+255),2,b	;volatile
 23502  001120  D7EA               	goto	u12660
 23503  001122                     l2062:
 23504                           
 23505                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 23506  001122  0EFB               	movlw	251
 23507  001124  26E1               	addwf	fsr1l,f,c
 23508  001126  0EFF               	movlw	255
 23509  001128  22E2               	addwfc	fsr1h,f,c
 23510  00112A  0012               	return		;funcret
 23511  00112C                     __end_of_cal_current_zero:
 23512                           	opt callstack 0
 23513                           
 23514 ;; *************** function _check_range *****************
 23515 ;; Defined at:
 23516 ;;		line 317 in file "daq.c"
 23517 ;; Parameters:    Size  Location     Type
 23518 ;;  value           2  [STACK] const short 
 23519 ;;  window          2  [STACK] const short 
 23520 ;;  standard        2  [STACK] const short 
 23521 ;; Auto vars:     Size  Location     Type
 23522 ;;		None
 23523 ;; Return value:  Size  Location     Type
 23524 ;;                  1  [STACK] _Bool 
 23525 ;; Registers used:
 23526 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23527 ;; Tracked objects:
 23528 ;;		On entry : 0/1
 23529 ;;		On exit  : 0/0
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23536 ;;Total ram usage:        0 bytes
 23537 ;; Hardware stack levels used:    1
 23538 ;; Hardware stack levels required when called:   15
 23539 ;; This function calls:
 23540 ;;		Nothing
 23541 ;; This function is called by:
 23542 ;;		_cal_current_zero
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text73
 23547  001586                     __ptext73:
 23548                           	opt callstack 0
 23549  001586                     _check_range:
 23550                           	opt callstack 13
 23551                           
 23552                           ;daq.c: 317: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 318: {;daq.c: 319:  if (value > (standard + window))
 23553                           ;stkvar	_value @ sp[(0)+-2]
 23554                           ;stkvar	_window @ sp[(0)+-4]
 23555                           ;stkvar	_standard @ sp[(0)+-6]
 23556                           
 23557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23558                           ;incstack = 0
 23559  001586  0EFA               	movlw	-6
 23560  001588  006F FF8C  F034    	movff	plusw1,btemp+10
 23561  00158E  0EFB               	movlw	-5
 23562  001590  006F FF8C  F035    	movff	plusw1,btemp+11
 23563  001596  0EFC               	movlw	-4
 23564  001598  50E3               	movf	plusw1,w,c
 23565  00159A  2634               	addwf	(btemp+10)^0,f,c
 23566  00159C  0EFD               	movlw	-3
 23567  00159E  50E3               	movf	plusw1,w,c
 23568  0015A0  2235               	addwfc	(btemp+11)^0,f,c
 23569  0015A2  0EFE               	movlw	-2
 23570  0015A4  50E3               	movf	plusw1,w,c
 23571  0015A6  5C34               	subwf	(btemp+10)^0,w,c
 23572  0015A8  5035               	movf	(btemp+11)^0,w,c
 23573  0015AA  0A80               	xorlw	128
 23574  0015AC  6E2A               	movwf	btemp^0,c
 23575  0015AE  0EFF               	movlw	-1
 23576  0015B0  50E3               	movf	plusw1,w,c
 23577  0015B2  0A80               	xorlw	128
 23578  0015B4  582A               	subwfb	btemp^0,w,c
 23579  0015B6  B0D8               	btfsc	status,0,c
 23580  0015B8  D002               	goto	l12944
 23581  0015BA                     u12370:
 23582                           
 23583                           ;daq.c: 320:   return 0;
 23584  0015BA  0E00               	movlw	0
 23585  0015BC  D01E               	goto	L22
 23586  0015BE                     l12944:
 23587                           
 23588                           ;daq.c: 321:  if (value < (standard - window))
 23589                           ;stkvar	_window @ sp[(0)+-4]
 23590                           ;stkvar	_standard @ sp[(0)+-6]
 23591  0015BE  0EFA               	movlw	-6
 23592  0015C0  006F FF8C  F034    	movff	plusw1,btemp+10
 23593  0015C6  0EFB               	movlw	-5
 23594  0015C8  006F FF8C  F035    	movff	plusw1,btemp+11
 23595  0015CE  0EFC               	movlw	-4
 23596  0015D0  50E3               	movf	plusw1,w,c
 23597  0015D2  5E34               	subwf	(btemp+10)^0,f,c
 23598  0015D4  0EFD               	movlw	-3
 23599  0015D6  50E3               	movf	plusw1,w,c
 23600  0015D8  5A35               	subwfb	(btemp+11)^0,f,c
 23601                           
 23602                           ;stkvar	_value @ sp[(0)+-2]
 23603  0015DA  0EFE               	movlw	-2
 23604  0015DC  006F FF8C  F02A    	movff	plusw1,btemp
 23605  0015E2  5034               	movf	(btemp+10)^0,w,c
 23606  0015E4  5C2A               	subwf	btemp^0,w,c
 23607  0015E6  0EFF               	movlw	-1
 23608  0015E8  50E3               	movf	plusw1,w,c
 23609  0015EA  0A80               	xorlw	128
 23610  0015EC  6E2A               	movwf	btemp^0,c
 23611  0015EE  5035               	movf	(btemp+11)^0,w,c
 23612  0015F0  0A80               	xorlw	128
 23613  0015F2  582A               	subwfb	btemp^0,w,c
 23614  0015F4  A0D8               	btfss	status,0,c
 23615  0015F6  D7E1               	goto	u12370
 23616                           
 23617                           ;daq.c: 323:  return 1;
 23618  0015F8  0E01               	movlw	1
 23619  0015FA                     L22:
 23620  0015FA  6E2A               	movwf	btemp^0,c
 23621                           
 23622                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 23623  0015FC  0EFA               	movlw	250
 23624  0015FE  26E1               	addwf	fsr1l,f,c
 23625  001600  0EFF               	movlw	255
 23626  001602  22E2               	addwfc	fsr1h,f,c
 23627  001604  0012               	return		;funcret
 23628  001606                     __end_of_check_range:
 23629                           	opt callstack 0
 23630                           
 23631 ;; *************** function _convert_adc_data *****************
 23632 ;; Defined at:
 23633 ;;		line 51 in file "mbmc.c"
 23634 ;; Parameters:    Size  Location     Type
 23635 ;;		None
 23636 ;; Auto vars:     Size  Location     Type
 23637 ;;  i               1  [STACK] unsigned char 
 23638 ;; Return value:  Size  Location     Type
 23639 ;;                  1  [STACK] void 
 23640 ;; Registers used:
 23641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23642 ;; Tracked objects:
 23643 ;;		On entry : 0/2
 23644 ;;		On exit  : 0/0
 23645 ;;		Unchanged: 0/0
 23646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23651 ;;Total ram usage:        0 bytes
 23652 ;; Hardware stack levels used:    1
 23653 ;; Hardware stack levels required when called:   18
 23654 ;; This function calls:
 23655 ;;		_conv_raw_result
 23656 ;;		_lp_filter
 23657 ;; This function is called by:
 23658 ;;		_main
 23659 ;; This function uses a reentrant model
 23660 ;;
 23661                           
 23662                           	psect	text74
 23663  000A0A                     __ptext74:
 23664                           	opt callstack 0
 23665  000A0A                     _convert_adc_data:
 23666                           	opt callstack 0
 23667                           
 23668                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23669  000A0A  52E6               	movf	postinc1,f,c
 23670                           
 23671                           ;mbmc.c: 53:  uint8_t i = 0;
 23672                           ;stkvar	_i @ sp[(-1)+0]
 23673                           
 23674                           ;incstack = 0
 23675  000A0C  0EFF               	movlw	-1
 23676  000A0E  6AE3               	clrf	plusw1,c
 23677  000A10                     l14386:
 23678                           
 23679                           ;mbmc.c: 56:   if (V.calib) {
 23680  000A10  0102               	movlb	2	; () banked
 23681  000A12  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 23682  000A14  B4D8               	btfsc	status,2,c
 23683  000A16  D01B               	goto	l14390
 23684                           
 23685                           ; BSR set to: 2
 23686                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 23687  000A18  0E01               	movlw	1
 23688  000A1A  6EE6               	movwf	postinc1,c
 23689                           
 23690                           ;stkvar	_i @ sp[(-2)+0]
 23691  000A1C  0EFE               	movlw	-2
 23692  000A1E  50E3               	movf	plusw1,w,c
 23693  000A20  6EE6               	movwf	postinc1,c
 23694  000A22  0E01               	movlw	1
 23695  000A24  6EE6               	movwf	postinc1,c
 23696                           
 23697                           ;stkvar	_i @ sp[(-4)+0]
 23698  000A26  0EFC               	movlw	-4
 23699  000A28  50E3               	movf	plusw1,w,c
 23700  000A2A  6EE6               	movwf	postinc1,c
 23701  000A2C  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 23702  000A30  0060  F0AB  FFE6   	movff	btemp,postinc1
 23703  000A36  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23704  000A3C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23705  000A42  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23706  000A48  EC82  F0EE         	call	_lp_filter	;wreg free
 23707  000A4C  D01A               	goto	L23
 23708  000A4E                     l14390:
 23709                           
 23710                           ; BSR set to: 2
 23711                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 23712  000A4E  0E00               	movlw	0
 23713  000A50  6EE6               	movwf	postinc1,c
 23714                           
 23715                           ;stkvar	_i @ sp[(-2)+0]
 23716  000A52  0EFE               	movlw	-2
 23717  000A54  50E3               	movf	plusw1,w,c
 23718  000A56  6EE6               	movwf	postinc1,c
 23719  000A58  0E00               	movlw	0
 23720  000A5A  6EE6               	movwf	postinc1,c
 23721                           
 23722                           ;stkvar	_i @ sp[(-4)+0]
 23723  000A5C  0EFC               	movlw	-4
 23724  000A5E  50E3               	movf	plusw1,w,c
 23725  000A60  6EE6               	movwf	postinc1,c
 23726  000A62  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 23727  000A66  0060  F0AB  FFE6   	movff	btemp,postinc1
 23728  000A6C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23729  000A72  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 23730  000A78  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 23731  000A7E  EC82  F0EE         	call	_lp_filter	;wreg free
 23732  000A82                     L23:
 23733                           
 23734                           ;stkvar	_i @ sp[(-1)+0]
 23735  000A82  0EFF               	movlw	-1
 23736  000A84  50E3               	movf	plusw1,w,c
 23737  000A86  0D04               	mullw	4
 23738  000A88  0E81               	movlw	low _C
 23739  000A8A  24F3               	addwf	243,w,c
 23740  000A8C  6ED9               	movwf	fsr2l,c
 23741  000A8E  0E0B               	movlw	high _C
 23742  000A90  20F4               	addwfc	prodh,w,c
 23743  000A92  6EDA               	movwf	fsr2h,c
 23744  000A94  0060  F0AB  FFDE   	movff	btemp,postinc2
 23745  000A9A  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 23746  000AA0  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 23747  000AA6  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 23748                           
 23749                           ;mbmc.c: 61:  } while (++i < 16);
 23750                           ;stkvar	_i @ sp[(-1)+0]
 23751  000AAC  0EFF               	movlw	-1
 23752  000AAE  2AE3               	incf	plusw1,f,c
 23753  000AB0  0EFF               	movlw	-1
 23754  000AB2  006F FF8C  F02A    	movff	plusw1,btemp
 23755  000AB8  0E0F               	movlw	15
 23756  000ABA  642A               	cpfsgt	btemp^0,c
 23757  000ABC  D7A9               	goto	l14386
 23758                           
 23759                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23760  000ABE  52E5               	movf	postdec1,f,c
 23761  000AC0  0012               	return		;funcret
 23762  000AC2                     __end_of_convert_adc_data:
 23763                           	opt callstack 0
 23764                           
 23765 ;; *************** function _clear_hid_pflags *****************
 23766 ;; Defined at:
 23767 ;;		line 67 in file "hid.c"
 23768 ;; Parameters:    Size  Location     Type
 23769 ;;  h               2  [STACK] PTR struct H_data
 23770 ;;		 -> H(9), 
 23771 ;; Auto vars:     Size  Location     Type
 23772 ;;		None
 23773 ;; Return value:  Size  Location     Type
 23774 ;;                  1  [STACK] void 
 23775 ;; Registers used:
 23776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 23777 ;; Tracked objects:
 23778 ;;		On entry : 3E/0
 23779 ;;		On exit  : 0/0
 23780 ;;		Unchanged: 0/0
 23781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23786 ;;Total ram usage:        0 bytes
 23787 ;; Hardware stack levels used:    1
 23788 ;; Hardware stack levels required when called:   15
 23789 ;; This function calls:
 23790 ;;		Nothing
 23791 ;; This function is called by:
 23792 ;;		_main
 23793 ;; This function uses a reentrant model
 23794 ;;
 23795                           
 23796                           	psect	text75
 23797  00198E                     __ptext75:
 23798                           	opt callstack 0
 23799  00198E                     _clear_hid_pflags:
 23800                           	opt callstack 15
 23801                           
 23802                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 23803                           ;stkvar	_h @ sp[(0)+-2]
 23804                           
 23805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23806                           ;incstack = 0
 23807  00198E  0EFE               	movlw	-2
 23808  001990  006F FF8C  F034    	movff	plusw1,btemp+10
 23809  001996  0EFF               	movlw	-1
 23810  001998  006F FF8C  F035    	movff	plusw1,btemp+11
 23811  00199E  0E03               	movlw	3
 23812  0019A0  2434               	addwf	(btemp+10)^0,w,c
 23813  0019A2  6ED9               	movwf	fsr2l,c
 23814  0019A4  0E00               	movlw	0
 23815  0019A6  2035               	addwfc	(btemp+11)^0,w,c
 23816  0019A8  6EDA               	movwf	fsr2h,c
 23817  0019AA  0E00               	movlw	0
 23818  0019AC  6EDF               	movwf	indf2,c
 23819                           
 23820                           ;hid.c: 70:  h->enter_p = SW_OFF;
 23821                           ;stkvar	_h @ sp[(0)+-2]
 23822  0019AE  0EFE               	movlw	-2
 23823  0019B0  006F FF8C  F034    	movff	plusw1,btemp+10
 23824  0019B6  0EFF               	movlw	-1
 23825  0019B8  006F FF8C  F035    	movff	plusw1,btemp+11
 23826  0019BE  0E05               	movlw	5
 23827  0019C0  2434               	addwf	(btemp+10)^0,w,c
 23828  0019C2  6ED9               	movwf	fsr2l,c
 23829  0019C4  0E00               	movlw	0
 23830  0019C6  2035               	addwfc	(btemp+11)^0,w,c
 23831  0019C8  6EDA               	movwf	fsr2h,c
 23832  0019CA  0E00               	movlw	0
 23833  0019CC  6EDF               	movwf	indf2,c
 23834                           
 23835                           ;hid.c: 71:  h->calib_p = SW_OFF;
 23836                           ;stkvar	_h @ sp[(0)+-2]
 23837  0019CE  0EFE               	movlw	-2
 23838  0019D0  006F FF8C  F034    	movff	plusw1,btemp+10
 23839  0019D6  0EFF               	movlw	-1
 23840  0019D8  006F FF8C  F035    	movff	plusw1,btemp+11
 23841  0019DE  0E07               	movlw	7
 23842  0019E0  2434               	addwf	(btemp+10)^0,w,c
 23843  0019E2  6ED9               	movwf	fsr2l,c
 23844  0019E4  0E00               	movlw	0
 23845  0019E6  2035               	addwfc	(btemp+11)^0,w,c
 23846  0019E8  6EDA               	movwf	fsr2h,c
 23847  0019EA  0E00               	movlw	0
 23848  0019EC  6EDF               	movwf	indf2,c
 23849                           
 23850                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 23851  0019EE  52E5               	movf	postdec1,f,c
 23852  0019F0  52E5               	movf	postdec1,f,c
 23853  0019F2  0012               	return		;funcret
 23854  0019F4                     __end_of_clear_hid_pflags:
 23855                           	opt callstack 0
 23856                           
 23857 ;; *************** function _check_help *****************
 23858 ;; Defined at:
 23859 ;;		line 40 in file "mconfig.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;  flipper         1  [STACK] const _Bool 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  estatus         1    0        _Bool 
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  1  [STACK] _Bool 
 23866 ;; Registers used:
 23867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23868 ;; Tracked objects:
 23869 ;;		On entry : 3F/2
 23870 ;;		On exit  : 0/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23877 ;;Total ram usage:        0 bytes
 23878 ;; Hardware stack levels used:    1
 23879 ;; Hardware stack levels required when called:   27
 23880 ;; This function calls:
 23881 ;;		_StartTimer
 23882 ;;		_TimerDone
 23883 ;;		_display_help
 23884 ;;		_display_info
 23885 ;;		_get_vterm_ptr
 23886 ;;		_help_button
 23887 ;;		_mode_lamp_bright
 23888 ;;		_mode_lamp_dim
 23889 ;;		_set_display_info
 23890 ;;		_set_temp_display_help
 23891 ;;		_set_vterm
 23892 ;;		_sprintf
 23893 ;;		_update_lcd
 23894 ;;		_vterm_dump
 23895 ;; This function is called by:
 23896 ;;		_main
 23897 ;; This function uses a reentrant model
 23898 ;;
 23899                           
 23900                           	psect	text76
 23901  01D724                     __ptext76:
 23902                           	opt callstack 0
 23903  01D724                     _check_help:
 23904                           	opt callstack 3
 23905                           
 23906                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 23907                           
 23908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23909                           ;incstack = 0
 23910  01D724  ECDA  F011         	call	_help_button	;wreg free
 23911  01D728  502A               	movf	btemp^0,w,c
 23912  01D72A  B4D8               	btfsc	status,2,c
 23913  01D72C  D0D0               	goto	l17408
 23914  01D72E  EC97  F016         	call	_display_info	;wreg free
 23915  01D732  042A               	decf	btemp^0,w,c
 23916  01D734  B4D8               	btfsc	status,2,c
 23917  01D736  D0CB               	goto	l17408
 23918                           
 23919                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 23920  01D738  0EDC               	movlw	220
 23921  01D73A  6EE6               	movwf	postinc1,c
 23922  01D73C  0E05               	movlw	5
 23923  01D73E  6EE6               	movwf	postinc1,c
 23924  01D740  0E0B               	movlw	11
 23925  01D742  6EE6               	movwf	postinc1,c
 23926  01D744  EC20  F011         	call	_StartTimer	;wreg free
 23927                           
 23928                           ;mconfig.c: 48:   if (V.debug)
 23929  01D748  0102               	movlb	2	; () banked
 23930  01D74A  B39F               	btfsc	(_V+152)& (0+255),1,b	;volatile
 23931                           
 23932                           ; BSR set to: 2
 23933                           ;mconfig.c: 49:    vterm_dump();
 23934  01D74C  ECC6  F0F1         	call	_vterm_dump	;wreg free
 23935                           
 23936                           ;mconfig.c: 51:   set_vterm(1);
 23937  01D750  0E01               	movlw	1
 23938  01D752  6EE6               	movwf	postinc1,c
 23939  01D754  EC87  F015         	call	_set_vterm	;wreg free
 23940                           
 23941                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 23942  01D758  EC97  F016         	call	_display_info	;wreg free
 23943  01D75C  502A               	movf	btemp^0,w,c
 23944  01D75E  6EE6               	movwf	postinc1,c
 23945  01D760  EC37  F016         	call	_set_temp_display_help	;wreg free
 23946                           
 23947                           ; BSR set to: 2
 23948                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 23949  01D764  0E01               	movlw	1
 23950  01D766  6EE6               	movwf	postinc1,c
 23951  01D768  EC96  F015         	call	_set_display_info	;wreg free
 23952                           
 23953                           ;mconfig.c: 54:   if (flipper) {
 23954                           ;stkvar	_flipper @ sp[(0)+-1]
 23955  01D76C  0EFF               	movlw	-1
 23956  01D76E  50E3               	movf	plusw1,w,c
 23957  01D770  B4D8               	btfsc	status,2,c
 23958  01D772  D019               	goto	l17394
 23959                           
 23960                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 23961  01D774  0EB6               	movlw	low STR_75
 23962  01D776  6EE6               	movwf	postinc1,c
 23963  01D778  0EFF               	movlw	high STR_75
 23964  01D77A  6EE6               	movwf	postinc1,c
 23965  01D77C  0E71               	movlw	low STR_77
 23966  01D77E  6EE6               	movwf	postinc1,c
 23967  01D780  0EFF               	movlw	high STR_77
 23968  01D782  6EE6               	movwf	postinc1,c
 23969  01D784  0E01               	movlw	1
 23970  01D786  6EE6               	movwf	postinc1,c
 23971  01D788  0E00               	movlw	0
 23972  01D78A  6EE6               	movwf	postinc1,c
 23973  01D78C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 23974  01D790  0060  F0AB  FFE6   	movff	btemp,postinc1
 23975  01D796  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 23976  01D79C  0E06               	movlw	6
 23977  01D79E  6EE6               	movwf	postinc1,c
 23978  01D7A0  ECE5  F0FE         	call	_sprintf	;wreg free
 23979                           
 23980                           ;mconfig.c: 56:   } else {
 23981  01D7A4  D018               	goto	l1833
 23982  01D7A6                     l17394:
 23983                           
 23984                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 23985  01D7A6  0ECC               	movlw	low STR_76
 23986  01D7A8  6EE6               	movwf	postinc1,c
 23987  01D7AA  0EFF               	movlw	high STR_76
 23988  01D7AC  6EE6               	movwf	postinc1,c
 23989  01D7AE  0E71               	movlw	low STR_77
 23990  01D7B0  6EE6               	movwf	postinc1,c
 23991  01D7B2  0EFF               	movlw	high STR_77
 23992  01D7B4  6EE6               	movwf	postinc1,c
 23993  01D7B6  0E01               	movlw	1
 23994  01D7B8  6EE6               	movwf	postinc1,c
 23995  01D7BA  0E00               	movlw	0
 23996  01D7BC  6EE6               	movwf	postinc1,c
 23997  01D7BE  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 23998  01D7C2  0060  F0AB  FFE6   	movff	btemp,postinc1
 23999  01D7C8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24000  01D7CE  0E06               	movlw	6
 24001  01D7D0  6EE6               	movwf	postinc1,c
 24002  01D7D2  ECE5  F0FE         	call	_sprintf	;wreg free
 24003  01D7D6                     l1833:
 24004                           
 24005                           ; BSR set to: 0
 24006                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 24007  01D7D6  0102               	movlb	2	; () banked
 24008  01D7D8  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24009  01D7DA  32E8               	rrcf	wreg,f,c
 24010  01D7DC  32E8               	rrcf	wreg,f,c
 24011  01D7DE  0B03               	andlw	3
 24012  01D7E0  0D2C               	mullw	44
 24013  01D7E2  0E16               	movlw	22
 24014  01D7E4  26F3               	addwf	243,f,c
 24015  01D7E6  0E00               	movlw	0
 24016  01D7E8  22F4               	addwfc	244,f,c
 24017  01D7EA  0EB7               	movlw	low _T
 24018  01D7EC  6E34               	movwf	(btemp+10)^0,c
 24019  01D7EE  0EF8               	movlw	high _T
 24020  01D7F0  6E35               	movwf	(btemp+11)^0,c
 24021  01D7F2  50F3               	movf	243,w,c
 24022  01D7F4  2634               	addwf	(btemp+10)^0,f,c
 24023  01D7F6  50F4               	movf	244,w,c
 24024  01D7F8  2235               	addwfc	(btemp+11)^0,f,c
 24025  01D7FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24026  01D800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24027  01D806  0EC2               	movlw	low STR_79
 24028  01D808  6EE6               	movwf	postinc1,c
 24029  01D80A  0EFF               	movlw	high STR_79
 24030  01D80C  6EE6               	movwf	postinc1,c
 24031  01D80E  0E01               	movlw	1
 24032  01D810  6EE6               	movwf	postinc1,c
 24033  01D812  0E01               	movlw	1
 24034  01D814  6EE6               	movwf	postinc1,c
 24035  01D816  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24036  01D81A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24037  01D820  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24038  01D826  0E06               	movlw	6
 24039  01D828  6EE6               	movwf	postinc1,c
 24040  01D82A  ECE5  F0FE         	call	_sprintf	;wreg free
 24041                           
 24042                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 24043  01D82E  0102               	movlb	2	; () banked
 24044  01D830  399F               	swapf	(_V+152)& (0+255),w,b	;volatile
 24045  01D832  32E8               	rrcf	wreg,f,c
 24046  01D834  32E8               	rrcf	wreg,f,c
 24047  01D836  0B03               	andlw	3
 24048  01D838  0D2C               	mullw	44
 24049  01D83A  0EB7               	movlw	low _T
 24050  01D83C  6E34               	movwf	(btemp+10)^0,c
 24051  01D83E  0EF8               	movlw	high _T
 24052  01D840  6E35               	movwf	(btemp+11)^0,c
 24053  01D842  50F3               	movf	243,w,c
 24054  01D844  2634               	addwf	(btemp+10)^0,f,c
 24055  01D846  50F4               	movf	244,w,c
 24056  01D848  2235               	addwfc	(btemp+11)^0,f,c
 24057  01D84A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24058  01D850  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24059  01D856  0EC2               	movlw	low STR_79
 24060  01D858  6EE6               	movwf	postinc1,c
 24061  01D85A  0EFF               	movlw	high STR_79
 24062  01D85C  6EE6               	movwf	postinc1,c
 24063  01D85E  0E01               	movlw	1
 24064  01D860  6EE6               	movwf	postinc1,c
 24065  01D862  0E02               	movlw	2
 24066  01D864  6EE6               	movwf	postinc1,c
 24067  01D866  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24068  01D86A  0060  F0AB  FFE6   	movff	btemp,postinc1
 24069  01D870  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24070  01D876  0E06               	movlw	6
 24071  01D878  6EE6               	movwf	postinc1,c
 24072  01D87A  ECE5  F0FE         	call	_sprintf	;wreg free
 24073                           
 24074                           ; BSR set to: 0
 24075                           ;mconfig.c: 61:   V.help_id++;
 24076  01D87E  EE20  F29F         	lfsr	2,_V+152	;volatile
 24077  01D882  38DF               	swapf	223,w,c
 24078  01D884  6E35               	movwf	(btemp+11)^0,c
 24079  01D886  3235               	rrcf	(btemp+11)^0,f,c
 24080  01D888  3035               	rrcf	(btemp+11)^0,w,c
 24081  01D88A  0B03               	andlw	3
 24082  01D88C  6E35               	movwf	(btemp+11)^0,c
 24083  01D88E  2A35               	incf	(btemp+11)^0,f,c
 24084  01D890  3A35               	swapf	(btemp+11)^0,f,c
 24085  01D892  3635               	rlcf	(btemp+11)^0,f,c
 24086  01D894  3635               	rlcf	(btemp+11)^0,f,c
 24087  01D896  50DF               	movf	223,w,c
 24088  01D898  1835               	xorwf	(btemp+11)^0,w,c
 24089  01D89A  0B3F               	andlw	-193
 24090  01D89C  1835               	xorwf	(btemp+11)^0,w,c
 24091  01D89E  6EDF               	movwf	223,c
 24092                           
 24093                           ; BSR set to: 0
 24094                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 24095  01D8A0  0EB8               	movlw	184
 24096  01D8A2  6EE6               	movwf	postinc1,c
 24097  01D8A4  0E0B               	movlw	11
 24098  01D8A6  6EE6               	movwf	postinc1,c
 24099  01D8A8  0E09               	movlw	9
 24100  01D8AA  6EE6               	movwf	postinc1,c
 24101  01D8AC  EC20  F011         	call	_StartTimer	;wreg free
 24102                           
 24103                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 24104  01D8B0  0EB8               	movlw	184
 24105  01D8B2  6EE6               	movwf	postinc1,c
 24106  01D8B4  0E0B               	movlw	11
 24107  01D8B6  6EE6               	movwf	postinc1,c
 24108  01D8B8  0E07               	movlw	7
 24109  01D8BA  6EE6               	movwf	postinc1,c
 24110  01D8BC  EC20  F011         	call	_StartTimer	;wreg free
 24111                           
 24112                           ;mconfig.c: 64:   mode_lamp_bright();
 24113  01D8C0  EC55  F016         	call	_mode_lamp_bright	;wreg free
 24114                           
 24115                           ;mconfig.c: 65:   update_lcd(1);
 24116  01D8C4  0E01               	movlw	1
 24117  01D8C6  6EE6               	movwf	postinc1,c
 24118  01D8C8  EC97  F0F7         	call	_update_lcd	;wreg free
 24119                           
 24120                           ;mconfig.c: 67:  } else {
 24121  01D8CC  D032               	goto	l1834
 24122  01D8CE                     l17408:
 24123                           
 24124                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 24125  01D8CE  0E09               	movlw	9
 24126  01D8D0  6EE6               	movwf	postinc1,c
 24127  01D8D2  EC91  F013         	call	_TimerDone	;wreg free
 24128  01D8D6  502A               	movf	btemp^0,w,c
 24129  01D8D8  B4D8               	btfsc	status,2,c
 24130  01D8DA  D02B               	goto	l1834
 24131                           
 24132                           ;mconfig.c: 69:    set_vterm(0);
 24133  01D8DC  0E00               	movlw	0
 24134  01D8DE  6EE6               	movwf	postinc1,c
 24135  01D8E0  EC87  F015         	call	_set_vterm	;wreg free
 24136                           
 24137                           ;mconfig.c: 70:    V.help = 0;
 24138  01D8E4  0102               	movlb	2	; () banked
 24139  01D8E6  959F               	bcf	(_V+152)& (0+255),2,b	;volatile
 24140                           
 24141                           ; BSR set to: 2
 24142                           ;mconfig.c: 71:    set_display_info(display_help());
 24143  01D8E8  EC9B  F016         	call	_display_help	;wreg free
 24144  01D8EC  502A               	movf	btemp^0,w,c
 24145  01D8EE  6EE6               	movwf	postinc1,c
 24146  01D8F0  EC96  F015         	call	_set_display_info	;wreg free
 24147                           
 24148                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 24149  01D8F4  0060  FA67  FFE6   	movff	_V+146,postinc1
 24150  01D8FA  0060  FA6B  FFE6   	movff	_V+147,postinc1
 24151  01D900  ECBF  F015         	call	_mode_lamp_dim	;wreg free
 24152                           
 24153                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 24154  01D904  0E0B               	movlw	11
 24155  01D906  6EE6               	movwf	postinc1,c
 24156  01D908  EC91  F013         	call	_TimerDone	;wreg free
 24157  01D90C  502A               	movf	btemp^0,w,c
 24158  01D90E  B4D8               	btfsc	status,2,c
 24159  01D910  D010               	goto	l1834
 24160                           
 24161                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 24162  01D912  0102               	movlb	2	; () banked
 24163  01D914  51AF               	movf	(_V+168)& (0+255),w,b	;volatile
 24164  01D916  A4D8               	btfss	status,2,c
 24165  01D918  D002               	goto	u17020
 24166  01D91A  0E01               	movlw	1
 24167  01D91C  D001               	goto	u17030
 24168  01D91E                     u17020:
 24169  01D91E  0E00               	movlw	0
 24170  01D920                     u17030:
 24171  01D920  6FAF               	movwf	(_V+168)& (0+255),b	;volatile
 24172                           
 24173                           ; BSR set to: 2
 24174                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 24175  01D922  0EDC               	movlw	220
 24176  01D924  6EE6               	movwf	postinc1,c
 24177  01D926  0E05               	movlw	5
 24178  01D928  6EE6               	movwf	postinc1,c
 24179  01D92A  0E0B               	movlw	11
 24180  01D92C  6EE6               	movwf	postinc1,c
 24181  01D92E  EC20  F011         	call	_StartTimer	;wreg free
 24182  01D932                     l1834:
 24183                           
 24184                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 24185  01D932  52E5               	movf	postdec1,f,c
 24186  01D934  0012               	return		;funcret
 24187  01D936                     __end_of_check_help:
 24188                           	opt callstack 0
 24189                           
 24190 ;; *************** function _vterm_dump *****************
 24191 ;; Defined at:
 24192 ;;		line 124 in file "mconfig.c"
 24193 ;; Parameters:    Size  Location     Type
 24194 ;;		None
 24195 ;; Auto vars:     Size  Location     Type
 24196 ;;		None
 24197 ;; Return value:  Size  Location     Type
 24198 ;;                  1  [STACK] void 
 24199 ;; Registers used:
 24200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24201 ;; Tracked objects:
 24202 ;;		On entry : 3F/2
 24203 ;;		On exit  : 0/0
 24204 ;;		Unchanged: 0/0
 24205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24210 ;;Total ram usage:        0 bytes
 24211 ;; Hardware stack levels used:    1
 24212 ;; Hardware stack levels required when called:   26
 24213 ;; This function calls:
 24214 ;;		_WaitMs
 24215 ;;		_eaDogM_WriteStringAtPos
 24216 ;;		_get_vterm_ptr
 24217 ;;		_sprintf
 24218 ;;		_wait_lcd_done
 24219 ;; This function is called by:
 24220 ;;		_check_help
 24221 ;; This function uses a reentrant model
 24222 ;;
 24223                           
 24224                           	psect	text77
 24225  01E38C                     __ptext77:
 24226                           	opt callstack 0
 24227  01E38C                     _vterm_dump:
 24228                           	opt callstack 3
 24229                           
 24230                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 24231                           
 24232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24233                           ;incstack = 0
 24234  01E38C  0E01               	movlw	1
 24235  01E38E  6EE6               	movwf	postinc1,c
 24236  01E390  0E00               	movlw	0
 24237  01E392  6EE6               	movwf	postinc1,c
 24238  01E394  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24239  01E398  0060  F0AB  FFE6   	movff	btemp,postinc1
 24240  01E39E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24241  01E3A4  0E00               	movlw	0
 24242  01E3A6  6EE6               	movwf	postinc1,c
 24243  01E3A8  0E00               	movlw	0
 24244  01E3AA  6EE6               	movwf	postinc1,c
 24245  01E3AC  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24246  01E3B0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24247  01E3B6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24248  01E3BC  0EA7               	movlw	low STR_81
 24249  01E3BE  6EE6               	movwf	postinc1,c
 24250  01E3C0  0EFF               	movlw	high STR_81
 24251  01E3C2  6EE6               	movwf	postinc1,c
 24252  01E3C4  0E08               	movlw	low (_V+1)
 24253  01E3C6  6EE6               	movwf	postinc1,c
 24254  01E3C8  0E02               	movlw	high (_V+1)
 24255  01E3CA  6EE6               	movwf	postinc1,c
 24256  01E3CC  0E08               	movlw	8
 24257  01E3CE  6EE6               	movwf	postinc1,c
 24258  01E3D0  ECE5  F0FE         	call	_sprintf	;wreg free
 24259                           
 24260                           ; BSR set to: 0
 24261                           ;mconfig.c: 127:  wait_lcd_done();
 24262  01E3D4  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24263                           
 24264                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 24265  01E3D8  0E08               	movlw	low (_V+1)
 24266  01E3DA  6EE6               	movwf	postinc1,c
 24267  01E3DC  0E02               	movlw	high (_V+1)
 24268  01E3DE  6EE6               	movwf	postinc1,c
 24269  01E3E0  0E00               	movlw	0
 24270  01E3E2  6EE6               	movwf	postinc1,c
 24271  01E3E4  0E00               	movlw	0
 24272  01E3E6  6EE6               	movwf	postinc1,c
 24273  01E3E8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24274                           
 24275                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 24276  01E3EC  0E01               	movlw	1
 24277  01E3EE  6EE6               	movwf	postinc1,c
 24278  01E3F0  0E01               	movlw	1
 24279  01E3F2  6EE6               	movwf	postinc1,c
 24280  01E3F4  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24281  01E3F8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24282  01E3FE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24283  01E404  0E00               	movlw	0
 24284  01E406  6EE6               	movwf	postinc1,c
 24285  01E408  0E01               	movlw	1
 24286  01E40A  6EE6               	movwf	postinc1,c
 24287  01E40C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24288  01E410  0060  F0AB  FFE6   	movff	btemp,postinc1
 24289  01E416  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24290  01E41C  0EA7               	movlw	low STR_81
 24291  01E41E  6EE6               	movwf	postinc1,c
 24292  01E420  0EFF               	movlw	high STR_81
 24293  01E422  6EE6               	movwf	postinc1,c
 24294  01E424  0E08               	movlw	low (_V+1)
 24295  01E426  6EE6               	movwf	postinc1,c
 24296  01E428  0E02               	movlw	high (_V+1)
 24297  01E42A  6EE6               	movwf	postinc1,c
 24298  01E42C  0E08               	movlw	8
 24299  01E42E  6EE6               	movwf	postinc1,c
 24300  01E430  ECE5  F0FE         	call	_sprintf	;wreg free
 24301                           
 24302                           ; BSR set to: 0
 24303                           ;mconfig.c: 130:  wait_lcd_done();
 24304  01E434  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24305                           
 24306                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 24307  01E438  0E08               	movlw	low (_V+1)
 24308  01E43A  6EE6               	movwf	postinc1,c
 24309  01E43C  0E02               	movlw	high (_V+1)
 24310  01E43E  6EE6               	movwf	postinc1,c
 24311  01E440  0E00               	movlw	0
 24312  01E442  6EE6               	movwf	postinc1,c
 24313  01E444  0E01               	movlw	1
 24314  01E446  6EE6               	movwf	postinc1,c
 24315  01E448  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24316                           
 24317                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 24318  01E44C  0E01               	movlw	1
 24319  01E44E  6EE6               	movwf	postinc1,c
 24320  01E450  0E02               	movlw	2
 24321  01E452  6EE6               	movwf	postinc1,c
 24322  01E454  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24323  01E458  0060  F0AB  FFE6   	movff	btemp,postinc1
 24324  01E45E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24325  01E464  0E00               	movlw	0
 24326  01E466  6EE6               	movwf	postinc1,c
 24327  01E468  0E02               	movlw	2
 24328  01E46A  6EE6               	movwf	postinc1,c
 24329  01E46C  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24330  01E470  0060  F0AB  FFE6   	movff	btemp,postinc1
 24331  01E476  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24332  01E47C  0EA7               	movlw	low STR_81
 24333  01E47E  6EE6               	movwf	postinc1,c
 24334  01E480  0EFF               	movlw	high STR_81
 24335  01E482  6EE6               	movwf	postinc1,c
 24336  01E484  0E08               	movlw	low (_V+1)
 24337  01E486  6EE6               	movwf	postinc1,c
 24338  01E488  0E02               	movlw	high (_V+1)
 24339  01E48A  6EE6               	movwf	postinc1,c
 24340  01E48C  0E08               	movlw	8
 24341  01E48E  6EE6               	movwf	postinc1,c
 24342  01E490  ECE5  F0FE         	call	_sprintf	;wreg free
 24343                           
 24344                           ; BSR set to: 0
 24345                           ;mconfig.c: 133:  wait_lcd_done();
 24346  01E494  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24347                           
 24348                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 24349  01E498  0E08               	movlw	low (_V+1)
 24350  01E49A  6EE6               	movwf	postinc1,c
 24351  01E49C  0E02               	movlw	high (_V+1)
 24352  01E49E  6EE6               	movwf	postinc1,c
 24353  01E4A0  0E00               	movlw	0
 24354  01E4A2  6EE6               	movwf	postinc1,c
 24355  01E4A4  0E02               	movlw	2
 24356  01E4A6  6EE6               	movwf	postinc1,c
 24357  01E4A8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24358                           
 24359                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 24360  01E4AC  0E01               	movlw	1
 24361  01E4AE  6EE6               	movwf	postinc1,c
 24362  01E4B0  0E03               	movlw	3
 24363  01E4B2  6EE6               	movwf	postinc1,c
 24364  01E4B4  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24365  01E4B8  0060  F0AB  FFE6   	movff	btemp,postinc1
 24366  01E4BE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24367  01E4C4  0E00               	movlw	0
 24368  01E4C6  6EE6               	movwf	postinc1,c
 24369  01E4C8  0E03               	movlw	3
 24370  01E4CA  6EE6               	movwf	postinc1,c
 24371  01E4CC  EC0E  F013         	call	_get_vterm_ptr	;wreg free
 24372  01E4D0  0060  F0AB  FFE6   	movff	btemp,postinc1
 24373  01E4D6  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24374  01E4DC  0EA7               	movlw	low STR_81
 24375  01E4DE  6EE6               	movwf	postinc1,c
 24376  01E4E0  0EFF               	movlw	high STR_81
 24377  01E4E2  6EE6               	movwf	postinc1,c
 24378  01E4E4  0E08               	movlw	low (_V+1)
 24379  01E4E6  6EE6               	movwf	postinc1,c
 24380  01E4E8  0E02               	movlw	high (_V+1)
 24381  01E4EA  6EE6               	movwf	postinc1,c
 24382  01E4EC  0E08               	movlw	8
 24383  01E4EE  6EE6               	movwf	postinc1,c
 24384  01E4F0  ECE5  F0FE         	call	_sprintf	;wreg free
 24385                           
 24386                           ; BSR set to: 0
 24387                           ;mconfig.c: 136:  wait_lcd_done();
 24388  01E4F4  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24389                           
 24390                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 24391  01E4F8  0E08               	movlw	low (_V+1)
 24392  01E4FA  6EE6               	movwf	postinc1,c
 24393  01E4FC  0E02               	movlw	high (_V+1)
 24394  01E4FE  6EE6               	movwf	postinc1,c
 24395  01E500  0E00               	movlw	0
 24396  01E502  6EE6               	movwf	postinc1,c
 24397  01E504  0E03               	movlw	3
 24398  01E506  6EE6               	movwf	postinc1,c
 24399  01E508  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24400                           
 24401                           ; BSR set to: 59
 24402                           ;mconfig.c: 138:  WaitMs(3000);
 24403  01E50C  0EB8               	movlw	184
 24404  01E50E  6EE6               	movwf	postinc1,c
 24405  01E510  0E0B               	movlw	11
 24406  01E512  6EE6               	movwf	postinc1,c
 24407  01E514  EC12  F012         	call	_WaitMs	;wreg free
 24408                           
 24409                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 24410  01E518  0012               	return		;funcret
 24411  01E51A                     __end_of_vterm_dump:
 24412                           	opt callstack 0
 24413                           
 24414 ;; *************** function _sprintf *****************
 24415 ;; Defined at:
 24416 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 24417 ;; Parameters:    Size  Location     Type
 24418 ;;  s               2  [STACK] PTR unsigned char 
 24419 ;;		 -> D.lcd(640), D(642), port_data(512), V(181), 
 24420 ;;  fmt             2  [STACK] PTR const unsigned char 
 24421 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 24422 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 24423 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 24424 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 24425 ;;		 -> STR_78(19), STR_77(19), STR_73(14), STR_72(28), 
 24426 ;;		 -> STR_71(28), STR_70(28), STR_69(22), STR_68(22), 
 24427 ;;		 -> STR_67(22), STR_66(22), STR_65(22), STR_64(22), 
 24428 ;;		 -> STR_63(22), STR_62(22), STR_61(22), STR_60(21), 
 24429 ;;		 -> STR_59(22), STR_58(22), STR_57(22), STR_56(22), 
 24430 ;;		 -> STR_55(22), STR_54(22), STR_53(24), STR_52(24), 
 24431 ;;		 -> STR_51(24), STR_50(30), STR_49(24), STR_48(24), 
 24432 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(23), 
 24433 ;;		 -> STR_43(23), STR_42(23), STR_41(23), STR_40(23), 
 24434 ;;		 -> STR_39(23), STR_38(23), STR_37(23), STR_36(23), 
 24435 ;;		 -> STR_35(18), STR_34(17), STR_33(17), STR_32(22), 
 24436 ;;		 -> STR_31(22), STR_30(22), STR_29(14), STR_28(14), 
 24437 ;;		 -> STR_27(27), STR_26(27), STR_25(23), STR_24(22), 
 24438 ;;		 -> STR_23(22), STR_22(22), STR_21(22), STR_20(23), 
 24439 ;;		 -> STR_19(23), STR_18(23), STR_17(26), STR_16(22), 
 24440 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
 24441 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24442 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24443 ;;		 -> STR_2(21), STR_1(21), 
 24444 ;; Auto vars:     Size  Location     Type
 24445 ;;  f               6  [STACK] struct _IO_FILE
 24446 ;;  ap              2  [STACK] PTR void [1]
 24447 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24448 ;;  ret             2    0        int 
 24449 ;; Return value:  Size  Location     Type
 24450 ;;                  2  [STACK] int 
 24451 ;; Registers used:
 24452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24453 ;; Tracked objects:
 24454 ;;		On entry : 0/2
 24455 ;;		On exit  : 3F/0
 24456 ;;		Unchanged: 0/0
 24457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24462 ;;Total ram usage:        0 bytes
 24463 ;; Hardware stack levels used:    1
 24464 ;; Hardware stack levels required when called:   23
 24465 ;; This function calls:
 24466 ;;		_vfprintf
 24467 ;; This function is called by:
 24468 ;;		_main
 24469 ;;		_current_sensor_cal
 24470 ;;		_display_history
 24471 ;;		_check_help
 24472 ;;		_vterm_dump
 24473 ;;		_calc_bsoc
 24474 ;; This function uses a reentrant model
 24475 ;;
 24476                           
 24477                           	psect	text78
 24478  01FDCA                     __ptext78:
 24479                           	opt callstack 0
 24480  01FDCA                     _sprintf:
 24481                           	opt callstack 0
 24482                           
 24483                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24484  01FDCA  0E08               	movlw	8
 24485  01FDCC  26E1               	addwf	fsr1l,f,c
 24486  01FDCE  0E00               	movlw	0
 24487  01FDD0  22E2               	addwfc	fsr1h,f,c
 24488                           
 24489                           ;incstack = 0
 24490 ;; hardware stack exceeded
 24491  01FDD2  0EFE               	movlw	254
 24492  01FDD4  6E34               	movwf	(btemp+10)^0,c
 24493  01FDD6  0EFF               	movlw	255
 24494  01FDD8  6E35               	movwf	(btemp+11)^0,c
 24495                           
 24496                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 24497  01FDDA  0EF5               	movlw	245
 24498  01FDDC  24E1               	addwf	fsr1l,w,c
 24499  01FDDE  6E32               	movwf	(btemp+8)^0,c
 24500  01FDE0  0EFF               	movlw	255
 24501  01FDE2  20E2               	addwfc	fsr1h,w,c
 24502  01FDE4  6E33               	movwf	(btemp+9)^0,c
 24503  01FDE6  5034               	movf	(btemp+10)^0,w,c
 24504  01FDE8  2632               	addwf	(btemp+8)^0,f,c
 24505  01FDEA  5035               	movf	(btemp+11)^0,w,c
 24506  01FDEC  2233               	addwfc	(btemp+9)^0,f,c
 24507                           
 24508                           ;stkvar	_ap @ sp[(-8)+6]
 24509  01FDEE  0EFF               	movlw	-1
 24510  01FDF0  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 24511  01FDF6  0EFE               	movlw	-2
 24512  01FDF8  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 24513                           
 24514                           ;stkvar	_s @ sp[(-8)+-3]
 24515  01FDFE  0EF5               	movlw	-11
 24516  01FE00  006F FF8C  F034    	movff	plusw1,btemp+10
 24517  01FE06  0EF6               	movlw	-10
 24518  01FE08  006F FF8C  F035    	movff	plusw1,btemp+11
 24519                           
 24520                           ;stkvar	_f @ sp[(-8)+0]
 24521  01FE0E  0EF9               	movlw	-7
 24522  01FE10  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 24523  01FE16  0EF8               	movlw	-8
 24524  01FE18  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 24525                           
 24526                           ;stkvar	_f @ sp[(-8)+0]
 24527  01FE1E  0EFA               	movlw	250
 24528  01FE20  24E1               	addwf	fsr1l,w,c
 24529  01FE22  6ED9               	movwf	fsr2l,c
 24530  01FE24  0EFF               	movlw	255
 24531  01FE26  20E2               	addwfc	fsr1h,w,c
 24532  01FE28  6EDA               	movwf	fsr2h,c
 24533  01FE2A  0E00               	movlw	0
 24534  01FE2C  6EDE               	movwf	postinc2,c
 24535  01FE2E  0E00               	movlw	0
 24536  01FE30  6EDD               	movwf	postdec2,c
 24537                           
 24538                           ;stkvar	_f @ sp[(-8)+0]
 24539  01FE32  0EFC               	movlw	252
 24540  01FE34  24E1               	addwf	fsr1l,w,c
 24541  01FE36  6ED9               	movwf	fsr2l,c
 24542  01FE38  0EFF               	movlw	255
 24543  01FE3A  20E2               	addwfc	fsr1h,w,c
 24544  01FE3C  6EDA               	movwf	fsr2h,c
 24545  01FE3E  0E00               	movlw	0
 24546  01FE40  6EDE               	movwf	postinc2,c
 24547  01FE42  0E00               	movlw	0
 24548  01FE44  6EDD               	movwf	postdec2,c
 24549                           
 24550                           ;stkvar	_ap @ sp[(-8)+6]
 24551  01FE46  0EFE               	movlw	254
 24552  01FE48  24E1               	addwf	fsr1l,w,c
 24553  01FE4A  6E2A               	movwf	btemp^0,c
 24554  01FE4C  0EFF               	movlw	255
 24555  01FE4E  20E2               	addwfc	fsr1h,w,c
 24556  01FE50  6E2B               	movwf	(btemp+1)^0,c
 24557  01FE52  0060  F0AB  FFE6   	movff	btemp,postinc1
 24558  01FE58  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24559                           
 24560                           ;stkvar	_fmt @ sp[(-10)+-5]
 24561  01FE5E  0EF1               	movlw	-15
 24562  01FE60  006F FF8F FFE6     	movff	plusw1,postinc1
 24563  01FE66  006F FF8F FFE6     	movff	plusw1,postinc1
 24564                           
 24565                           ;stkvar	_f @ sp[(-12)+0]
 24566  01FE6C  0EF4               	movlw	244
 24567  01FE6E  24E1               	addwf	fsr1l,w,c
 24568  01FE70  6E2A               	movwf	btemp^0,c
 24569  01FE72  0EFF               	movlw	255
 24570  01FE74  20E2               	addwfc	fsr1h,w,c
 24571  01FE76  6E2B               	movwf	(btemp+1)^0,c
 24572  01FE78  0060  F0AB  FFE6   	movff	btemp,postinc1
 24573  01FE7E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 24574  01FE84  EC13  F006         	call	_vfprintf	;wreg free
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;stkvar	_f @ sp[(-8)+0]
 24578  01FE88  0EFA               	movlw	250
 24579  01FE8A  24E1               	addwf	fsr1l,w,c
 24580  01FE8C  6ED9               	movwf	fsr2l,c
 24581  01FE8E  0EFF               	movlw	255
 24582  01FE90  20E2               	addwfc	fsr1h,w,c
 24583  01FE92  6EDA               	movwf	fsr2h,c
 24584  01FE94  006F FF78  F034    	movff	postinc2,btemp+10
 24585  01FE9A  006F FF74  F035    	movff	postdec2,btemp+11
 24586                           
 24587                           ;stkvar	_s @ sp[(-8)+-3]
 24588  01FEA0  0EF5               	movlw	-11
 24589  01FEA2  006F FF8C  F032    	movff	plusw1,btemp+8
 24590  01FEA8  0EF6               	movlw	-10
 24591  01FEAA  006F FF8C  F033    	movff	plusw1,btemp+9
 24592  01FEB0  5034               	movf	(btemp+10)^0,w,c
 24593  01FEB2  2432               	addwf	(btemp+8)^0,w,c
 24594  01FEB4  6ED9               	movwf	fsr2l,c
 24595  01FEB6  5035               	movf	(btemp+11)^0,w,c
 24596  01FEB8  2033               	addwfc	(btemp+9)^0,w,c
 24597  01FEBA  6EDA               	movwf	fsr2h,c
 24598  01FEBC  0E00               	movlw	0
 24599  01FEBE  6EDF               	movwf	indf2,c
 24600                           
 24601                           ; BSR set to: 0
 24602                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 24603  01FEC0  0EF8               	movlw	248
 24604  01FEC2  26E1               	addwf	fsr1l,f,c
 24605  01FEC4  0EFF               	movlw	255
 24606  01FEC6  22E2               	addwfc	fsr1h,f,c
 24607  01FEC8  52E5               	movf	postdec1,f,c
 24608  01FECA  50E7               	movf	indf1,w,c
 24609  01FECC  5EE1               	subwf	fsr1l,f,c
 24610  01FECE  0E00               	movlw	0
 24611  01FED0  5AE2               	subwfb	fsr1h,f,c
 24612  01FED2  0012               	return		;funcret
 24613  01FED4                     __end_of_sprintf:
 24614                           	opt callstack 0
 24615                           
 24616 ;; *************** function _get_vterm_ptr *****************
 24617 ;; Defined at:
 24618 ;;		line 119 in file "mconfig.c"
 24619 ;; Parameters:    Size  Location     Type
 24620 ;;  line            1  [STACK] const unsigned char 
 24621 ;;  vterm           1  [STACK] const unsigned char 
 24622 ;; Auto vars:     Size  Location     Type
 24623 ;;		None
 24624 ;; Return value:  Size  Location     Type
 24625 ;;                  2  [STACK] PTR unsigned char 
 24626 ;; Registers used:
 24627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24628 ;; Tracked objects:
 24629 ;;		On entry : 0/2
 24630 ;;		On exit  : 0/0
 24631 ;;		Unchanged: 0/0
 24632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24637 ;;Total ram usage:        0 bytes
 24638 ;; Hardware stack levels used:    1
 24639 ;; Hardware stack levels required when called:   15
 24640 ;; This function calls:
 24641 ;;		Nothing
 24642 ;; This function is called by:
 24643 ;;		_main
 24644 ;;		_current_sensor_cal
 24645 ;;		_display_history
 24646 ;;		_check_help
 24647 ;;		_vterm_dump
 24648 ;; This function uses a reentrant model
 24649 ;;
 24650                           
 24651                           	psect	text79
 24652  00261C                     __ptext79:
 24653                           	opt callstack 0
 24654  00261C                     _get_vterm_ptr:
 24655                           	opt callstack 15
 24656                           
 24657                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 24658                           ;stkvar	_vterm @ sp[(0)+-2]
 24659                           
 24660                           ; BSR set to: 0
 24661                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24662                           ;incstack = 0
 24663  00261C  0EFE               	movlw	-2
 24664  00261E  50E3               	movf	plusw1,w,c
 24665  002620  0B03               	andlw	3
 24666  002622  0DA0               	mullw	160
 24667  002624  0EFF               	movlw	low _D
 24668  002626  6E2A               	movwf	btemp^0,c
 24669  002628  0E06               	movlw	high _D
 24670  00262A  6E2B               	movwf	(btemp+1)^0,c
 24671  00262C  50F3               	movf	243,w,c
 24672  00262E  262A               	addwf	btemp^0,f,c
 24673  002630  50F4               	movf	244,w,c
 24674  002632  222B               	addwfc	(btemp+1)^0,f,c
 24675                           
 24676                           ;stkvar	_line @ sp[(0)+-1]
 24677  002634  0EFF               	movlw	-1
 24678  002636  50E3               	movf	plusw1,w,c
 24679  002638  0B03               	andlw	3
 24680  00263A  0D28               	mullw	40
 24681  00263C  50F3               	movf	243,w,c
 24682  00263E  262A               	addwf	btemp^0,f,c
 24683  002640  50F4               	movf	244,w,c
 24684  002642  222B               	addwfc	(btemp+1)^0,f,c
 24685                           
 24686                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 24687  002644  52E5               	movf	postdec1,f,c
 24688  002646  52E5               	movf	postdec1,f,c
 24689  002648  0012               	return		;funcret
 24690  00264A                     __end_of_get_vterm_ptr:
 24691                           	opt callstack 0
 24692                           
 24693 ;; *************** function _WaitMs *****************
 24694 ;; Defined at:
 24695 ;;		line 32 in file "timers.c"
 24696 ;; Parameters:    Size  Location     Type
 24697 ;;  numMilliseco    2  [STACK] const unsigned short 
 24698 ;; Auto vars:     Size  Location     Type
 24699 ;;		None
 24700 ;; Return value:  Size  Location     Type
 24701 ;;                  1  [STACK] void 
 24702 ;; Registers used:
 24703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 24704 ;; Tracked objects:
 24705 ;;		On entry : 0/2
 24706 ;;		On exit  : 0/0
 24707 ;;		Unchanged: 0/0
 24708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24713 ;;Total ram usage:        0 bytes
 24714 ;; Hardware stack levels used:    1
 24715 ;; Hardware stack levels required when called:   16
 24716 ;; This function calls:
 24717 ;;		_StartTimer
 24718 ;;		_TimerDone
 24719 ;; This function is called by:
 24720 ;;		_main
 24721 ;;		_current_sensor_cal
 24722 ;;		_display_history
 24723 ;;		_vterm_dump
 24724 ;; This function uses a reentrant model
 24725 ;;
 24726                           
 24727                           	psect	text80
 24728  002424                     __ptext80:
 24729                           	opt callstack 0
 24730  002424                     _WaitMs:
 24731                           	opt callstack 13
 24732                           
 24733                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 24734                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 24735                           
 24736                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24737                           ;incstack = 0
 24738  002424  0EFE               	movlw	-2
 24739  002426  006F FF8F FFE6     	movff	plusw1,postinc1
 24740  00242C  006F FF8F FFE6     	movff	plusw1,postinc1
 24741  002432  0E00               	movlw	0
 24742  002434  6EE6               	movwf	postinc1,c
 24743  002436  EC20  F011         	call	_StartTimer	;wreg free
 24744                           
 24745                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24746  00243A  D005               	goto	l12818
 24747  00243C                     l1765:
 24748                           
 24749                           ;timers.c: 36:   __nop();
 24750  00243C  F000               	nop	
 24751                           
 24752                           ;timers.c: 37:   __nop();
 24753  00243E  F000               	nop	
 24754                           
 24755                           ;timers.c: 38:   __nop();
 24756  002440  F000               	nop	
 24757                           
 24758                           ;timers.c: 39:   __nop();
 24759  002442  F000               	nop	
 24760  002444  0004               	clrwdt		;# 
 24761  002446                     l12818:
 24762                           
 24763                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 24764  002446  0E00               	movlw	0
 24765  002448  6EE6               	movwf	postinc1,c
 24766  00244A  EC91  F013         	call	_TimerDone	;wreg free
 24767  00244E  502A               	movf	btemp^0,w,c
 24768  002450  B4D8               	btfsc	status,2,c
 24769  002452  D7F4               	goto	l1765
 24770                           
 24771                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24772  002454  52E5               	movf	postdec1,f,c
 24773  002456  52E5               	movf	postdec1,f,c
 24774  002458  0012               	return		;funcret
 24775  00245A                     __end_of_WaitMs:
 24776                           	opt callstack 0
 24777                           
 24778 ;; *************** function _update_lcd *****************
 24779 ;; Defined at:
 24780 ;;		line 85 in file "mconfig.c"
 24781 ;; Parameters:    Size  Location     Type
 24782 ;;  vterm           1  [STACK] unsigned char 
 24783 ;; Auto vars:     Size  Location     Type
 24784 ;;		None
 24785 ;; Return value:  Size  Location     Type
 24786 ;;                  1  [STACK] unsigned char 
 24787 ;; Registers used:
 24788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24789 ;; Tracked objects:
 24790 ;;		On entry : 0/0
 24791 ;;		On exit  : 0/0
 24792 ;;		Unchanged: 0/0
 24793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24798 ;;Total ram usage:        0 bytes
 24799 ;; Hardware stack levels used:    1
 24800 ;; Hardware stack levels required when called:   26
 24801 ;; This function calls:
 24802 ;;		_eaDogM_WriteStringAtPos
 24803 ;;		_wait_lcd_done
 24804 ;; This function is called by:
 24805 ;;		_main
 24806 ;;		_current_sensor_cal
 24807 ;;		_display_history
 24808 ;;		_check_help
 24809 ;; This function uses a reentrant model
 24810 ;;
 24811                           
 24812                           	psect	text81
 24813  01EF2E                     __ptext81:
 24814                           	opt callstack 0
 24815  01EF2E                     _update_lcd:
 24816                           	opt callstack 4
 24817                           
 24818                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 24819                           ;stkvar	_vterm @ sp[(0)+-1]
 24820                           
 24821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24822                           ;incstack = 0
 24823  01EF2E  0EFF               	movlw	-1
 24824  01EF30  006F FF8C  F02A    	movff	plusw1,btemp
 24825  01EF36  0E03               	movlw	3
 24826  01EF38  162A               	andwf	btemp^0,f,c
 24827  01EF3A  0EFF               	movlw	-1
 24828  01EF3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 24829                           
 24830                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 24831  01EF42  EE22  F17F         	lfsr	2,_D+640
 24832  01EF46  A0DF               	btfss	indf2,0,c
 24833  01EF48  D004               	goto	l16938
 24834                           
 24835                           ;stkvar	_vterm @ sp[(0)+-1]
 24836  01EF4A  0EFF               	movlw	-1
 24837  01EF4C  50E3               	movf	plusw1,w,c
 24838  01EF4E  B4D8               	btfsc	status,2,c
 24839  01EF50  D09C               	goto	l1841
 24840  01EF52                     l16938:
 24841                           
 24842                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 24843                           ;stkvar	_vterm @ sp[(0)+-1]
 24844  01EF52  0EFF               	movlw	-1
 24845  01EF54  50E3               	movf	plusw1,w,c
 24846  01EF56  0DA0               	mullw	160
 24847  01EF58  0E13               	movlw	low (_D+20)
 24848  01EF5A  24F3               	addwf	243,w,c
 24849  01EF5C  6ED9               	movwf	fsr2l,c
 24850  01EF5E  0E07               	movlw	high (_D+20)
 24851  01EF60  20F4               	addwfc	prodh,w,c
 24852  01EF62  6EDA               	movwf	fsr2h,c
 24853  01EF64  0E00               	movlw	0
 24854  01EF66  6EDF               	movwf	indf2,c
 24855                           
 24856                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 24857                           ;stkvar	_vterm @ sp[(0)+-1]
 24858  01EF68  0EFF               	movlw	-1
 24859  01EF6A  50E3               	movf	plusw1,w,c
 24860  01EF6C  0DA0               	mullw	160
 24861  01EF6E  0E3B               	movlw	low (_D+60)
 24862  01EF70  24F3               	addwf	243,w,c
 24863  01EF72  6ED9               	movwf	fsr2l,c
 24864  01EF74  0E07               	movlw	high (_D+60)
 24865  01EF76  20F4               	addwfc	prodh,w,c
 24866  01EF78  6EDA               	movwf	fsr2h,c
 24867  01EF7A  0E00               	movlw	0
 24868  01EF7C  6EDF               	movwf	indf2,c
 24869                           
 24870                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 24871                           ;stkvar	_vterm @ sp[(0)+-1]
 24872  01EF7E  0EFF               	movlw	-1
 24873  01EF80  50E3               	movf	plusw1,w,c
 24874  01EF82  0DA0               	mullw	160
 24875  01EF84  0E63               	movlw	low (_D+100)
 24876  01EF86  24F3               	addwf	243,w,c
 24877  01EF88  6ED9               	movwf	fsr2l,c
 24878  01EF8A  0E07               	movlw	high (_D+100)
 24879  01EF8C  20F4               	addwfc	prodh,w,c
 24880  01EF8E  6EDA               	movwf	fsr2h,c
 24881  01EF90  0E00               	movlw	0
 24882  01EF92  6EDF               	movwf	indf2,c
 24883                           
 24884                           ;mconfig.c: 95:  D.lcd[vterm][3][20] = 0;
 24885                           ;stkvar	_vterm @ sp[(0)+-1]
 24886  01EF94  0EFF               	movlw	-1
 24887  01EF96  50E3               	movf	plusw1,w,c
 24888  01EF98  0DA0               	mullw	160
 24889  01EF9A  0E8B               	movlw	low (_D+140)
 24890  01EF9C  24F3               	addwf	243,w,c
 24891  01EF9E  6ED9               	movwf	fsr2l,c
 24892  01EFA0  0E07               	movlw	high (_D+140)
 24893  01EFA2  20F4               	addwfc	prodh,w,c
 24894  01EFA4  6EDA               	movwf	fsr2h,c
 24895  01EFA6  0E00               	movlw	0
 24896  01EFA8  6EDF               	movwf	indf2,c
 24897                           
 24898                           ;mconfig.c: 96:  wait_lcd_done();
 24899  01EFAA  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24900                           
 24901                           ; BSR set to: 61
 24902                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 24903                           ;stkvar	_vterm @ sp[(0)+-1]
 24904  01EFAE  0EFF               	movlw	-1
 24905  01EFB0  50E3               	movf	plusw1,w,c
 24906  01EFB2  0DA0               	mullw	160
 24907  01EFB4  0EFF               	movlw	low _D
 24908  01EFB6  6E34               	movwf	(btemp+10)^0,c
 24909  01EFB8  0E06               	movlw	high _D
 24910  01EFBA  6E35               	movwf	(btemp+11)^0,c
 24911  01EFBC  50F3               	movf	243,w,c
 24912  01EFBE  2634               	addwf	(btemp+10)^0,f,c
 24913  01EFC0  50F4               	movf	244,w,c
 24914  01EFC2  2235               	addwfc	(btemp+11)^0,f,c
 24915  01EFC4  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24916  01EFCA  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24917  01EFD0  0E00               	movlw	0
 24918  01EFD2  6EE6               	movwf	postinc1,c
 24919  01EFD4  0E00               	movlw	0
 24920  01EFD6  6EE6               	movwf	postinc1,c
 24921  01EFD8  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24922                           
 24923                           ; BSR set to: 59
 24924                           ;mconfig.c: 98:  wait_lcd_done();
 24925  01EFDC  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24926                           
 24927                           ; BSR set to: 61
 24928                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 24929                           ;stkvar	_vterm @ sp[(0)+-1]
 24930  01EFE0  0EFF               	movlw	-1
 24931  01EFE2  50E3               	movf	plusw1,w,c
 24932  01EFE4  0DA0               	mullw	160
 24933  01EFE6  0EFF               	movlw	low _D
 24934  01EFE8  6E34               	movwf	(btemp+10)^0,c
 24935  01EFEA  0E06               	movlw	high _D
 24936  01EFEC  6E35               	movwf	(btemp+11)^0,c
 24937  01EFEE  0E28               	movlw	40
 24938  01EFF0  2634               	addwf	(btemp+10)^0,f,c
 24939  01EFF2  0E00               	movlw	0
 24940  01EFF4  2235               	addwfc	(btemp+11)^0,f,c
 24941  01EFF6  50F3               	movf	243,w,c
 24942  01EFF8  2634               	addwf	(btemp+10)^0,f,c
 24943  01EFFA  50F4               	movf	244,w,c
 24944  01EFFC  2235               	addwfc	(btemp+11)^0,f,c
 24945  01EFFE  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24946  01F004  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24947  01F00A  0E00               	movlw	0
 24948  01F00C  6EE6               	movwf	postinc1,c
 24949  01F00E  0E01               	movlw	1
 24950  01F010  6EE6               	movwf	postinc1,c
 24951  01F012  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24952                           
 24953                           ; BSR set to: 59
 24954                           ;mconfig.c: 100:  wait_lcd_done();
 24955  01F016  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24956                           
 24957                           ; BSR set to: 61
 24958                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 24959                           ;stkvar	_vterm @ sp[(0)+-1]
 24960  01F01A  0EFF               	movlw	-1
 24961  01F01C  50E3               	movf	plusw1,w,c
 24962  01F01E  0DA0               	mullw	160
 24963  01F020  0EFF               	movlw	low _D
 24964  01F022  6E34               	movwf	(btemp+10)^0,c
 24965  01F024  0E06               	movlw	high _D
 24966  01F026  6E35               	movwf	(btemp+11)^0,c
 24967  01F028  0E50               	movlw	80
 24968  01F02A  2634               	addwf	(btemp+10)^0,f,c
 24969  01F02C  0E00               	movlw	0
 24970  01F02E  2235               	addwfc	(btemp+11)^0,f,c
 24971  01F030  50F3               	movf	243,w,c
 24972  01F032  2634               	addwf	(btemp+10)^0,f,c
 24973  01F034  50F4               	movf	244,w,c
 24974  01F036  2235               	addwfc	(btemp+11)^0,f,c
 24975  01F038  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 24976  01F03E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 24977  01F044  0E00               	movlw	0
 24978  01F046  6EE6               	movwf	postinc1,c
 24979  01F048  0E02               	movlw	2
 24980  01F04A  6EE6               	movwf	postinc1,c
 24981  01F04C  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 24982                           
 24983                           ; BSR set to: 59
 24984                           ;mconfig.c: 102:  wait_lcd_done();
 24985  01F050  EC4E  F016         	call	_wait_lcd_done	;wreg free
 24986                           
 24987                           ; BSR set to: 61
 24988                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 24989                           ;stkvar	_vterm @ sp[(0)+-1]
 24990  01F054  0EFF               	movlw	-1
 24991  01F056  50E3               	movf	plusw1,w,c
 24992  01F058  0DA0               	mullw	160
 24993  01F05A  0EFF               	movlw	low _D
 24994  01F05C  6E34               	movwf	(btemp+10)^0,c
 24995  01F05E  0E06               	movlw	high _D
 24996  01F060  6E35               	movwf	(btemp+11)^0,c
 24997  01F062  0E78               	movlw	120
 24998  01F064  2634               	addwf	(btemp+10)^0,f,c
 24999  01F066  0E00               	movlw	0
 25000  01F068  2235               	addwfc	(btemp+11)^0,f,c
 25001  01F06A  50F3               	movf	243,w,c
 25002  01F06C  2634               	addwf	(btemp+10)^0,f,c
 25003  01F06E  50F4               	movf	244,w,c
 25004  01F070  2235               	addwfc	(btemp+11)^0,f,c
 25005  01F072  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 25006  01F078  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 25007  01F07E  0E00               	movlw	0
 25008  01F080  6EE6               	movwf	postinc1,c
 25009  01F082  0E03               	movlw	3
 25010  01F084  6EE6               	movwf	postinc1,c
 25011  01F086  EC96  F008         	call	_eaDogM_WriteStringAtPos	;wreg free
 25012  01F08A                     l1841:
 25013                           
 25014                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 25015  01F08A  52E5               	movf	postdec1,f,c
 25016  01F08C  0012               	return		;funcret
 25017  01F08E                     __end_of_update_lcd:
 25018                           	opt callstack 0
 25019                           
 25020 ;; *************** function _eaDogM_WriteStringAtPos *****************
 25021 ;; Defined at:
 25022 ;;		line 195 in file "eadog.c"
 25023 ;; Parameters:    Size  Location     Type
 25024 ;;  r               1  [STACK] const unsigned char 
 25025 ;;  c               1  [STACK] const unsigned char 
 25026 ;;  strPtr          2  [STACK] PTR unsigned char 
 25027 ;;		 -> D.lcd(640), D(642), V(181), 
 25028 ;; Auto vars:     Size  Location     Type
 25029 ;;  row             1  [STACK] unsigned char 
 25030 ;; Return value:  Size  Location     Type
 25031 ;;                  1  [STACK] void 
 25032 ;; Registers used:
 25033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25034 ;; Tracked objects:
 25035 ;;		On entry : 3F/3D
 25036 ;;		On exit  : 3F/3B
 25037 ;;		Unchanged: 0/0
 25038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;Total ram usage:        0 bytes
 25044 ;; Hardware stack levels used:    1
 25045 ;; Hardware stack levels required when called:   25
 25046 ;; This function calls:
 25047 ;;		_eaDogM_WriteString
 25048 ;;		_send_lcd_cmd_dma
 25049 ;;		_send_lcd_data_dma
 25050 ;;		_wait_lcd_done
 25051 ;; This function is called by:
 25052 ;;		_update_lcd
 25053 ;;		_vterm_dump
 25054 ;; This function uses a reentrant model
 25055 ;;
 25056                           
 25057                           	psect	text82
 25058  00112C                     __ptext82:
 25059                           	opt callstack 0
 25060  00112C                     _eaDogM_WriteStringAtPos:
 25061                           	opt callstack 0
 25062                           
 25063                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25064  00112C  52E6               	movf	postinc1,f,c
 25065                           
 25066                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 25067                           
 25068                           ;incstack = 0
 25069  00112E  D013               	goto	l16884
 25070  001130                     l16872:
 25071                           
 25072                           ;eadog.c: 201:   row = 0x40;
 25073                           ;stkvar	_row @ sp[(-1)+0]
 25074  001130  0EFF               	movlw	-1
 25075  001132  6AE3               	clrf	plusw1,c
 25076  001134  8CE3               	bsf	plusw1,6,c
 25077                           
 25078                           ;eadog.c: 202:   break;
 25079  001136  D025               	goto	l16886
 25080  001138                     l16874:
 25081                           
 25082                           ;eadog.c: 204:   row = 0x14;
 25083                           ;stkvar	_row @ sp[(-1)+0]
 25084  001138  0EFF               	movlw	-1
 25085  00113A  6AE3               	clrf	plusw1,c
 25086  00113C  84E3               	bsf	plusw1,2,c
 25087  00113E  88E3               	bsf	plusw1,4,c	;indir
 25088                           
 25089                           ;eadog.c: 205:   break;
 25090  001140  D020               	goto	l16886
 25091  001142                     l16876:
 25092                           
 25093                           ;eadog.c: 207:   row = 0x54;
 25094  001142  0E54               	movlw	84
 25095  001144  6E35               	movwf	(btemp+11)^0,c
 25096                           
 25097                           ;stkvar	_row @ sp[(-1)+0]
 25098  001146  0EFF               	movlw	-1
 25099  001148  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25100                           
 25101                           ;eadog.c: 208:   break;
 25102  00114E  D019               	goto	l16886
 25103  001150                     l16878:
 25104                           
 25105                           ;eadog.c: 210:   row = 0x00;
 25106                           ;stkvar	_row @ sp[(-1)+0]
 25107  001150  0EFF               	movlw	-1
 25108  001152  6AE3               	clrf	plusw1,c
 25109                           
 25110                           ;eadog.c: 211:   break;
 25111  001154  D016               	goto	l16886
 25112  001156                     l16884:
 25113                           
 25114                           ;stkvar	_r @ sp[(-1)+-1]
 25115  001156  0EFE               	movlw	-2
 25116  001158  50E3               	movf	plusw1,w,c
 25117  00115A  6E34               	movwf	(btemp+10)^0,c
 25118  00115C  6A35               	clrf	(btemp+11)^0,c
 25119                           
 25120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25121                           ; Switch size 1, requested type "simple"
 25122                           ; Number of cases is 1, Range of values is 0 to 0
 25123                           ; switch strategies available:
 25124                           ; Name         Instructions Cycles
 25125                           ; simple_byte            4     3 (average)
 25126                           ;	Chosen strategy is simple_byte
 25127  00115E  5035               	movf	(btemp+11)^0,w,c
 25128  001160  0A00               	xorlw	0	; case 0
 25129  001162  A4D8               	btfss	status,2,c
 25130  001164  D7E5               	goto	l16872
 25131                           
 25132                           ; Switch size 1, requested type "simple"
 25133                           ; Number of cases is 4, Range of values is 0 to 3
 25134                           ; switch strategies available:
 25135                           ; Name         Instructions Cycles
 25136                           ; simple_byte           13     7 (average)
 25137                           ;	Chosen strategy is simple_byte
 25138  001166  5034               	movf	(btemp+10)^0,w,c
 25139  001168  0A00               	xorlw	0	; case 0
 25140  00116A  B4D8               	btfsc	status,2,c
 25141  00116C  D7E1               	goto	l16872
 25142  00116E  0A01               	xorlw	1	; case 1
 25143  001170  B4D8               	btfsc	status,2,c
 25144  001172  D7E2               	goto	l16874
 25145  001174  0A03               	xorlw	3	; case 2
 25146  001176  B4D8               	btfsc	status,2,c
 25147  001178  D7E4               	goto	l16876
 25148  00117A  0A01               	xorlw	1	; case 3
 25149  00117C  B4D8               	btfsc	status,2,c
 25150  00117E  D7E8               	goto	l16878
 25151  001180  D7D7               	goto	l16872
 25152  001182                     l16886:
 25153                           
 25154                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 25155  001182  0E45               	movlw	69
 25156  001184  6EE6               	movwf	postinc1,c
 25157  001186  EC78  F015         	call	_send_lcd_cmd_dma	;wreg free
 25158                           
 25159                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 25160                           ;stkvar	_c @ sp[(-1)+-2]
 25161  00118A  0EFD               	movlw	-3
 25162  00118C  006F FF8C  F035    	movff	plusw1,btemp+11
 25163                           
 25164                           ;stkvar	_row @ sp[(-1)+0]
 25165  001192  0EFF               	movlw	-1
 25166  001194  50E3               	movf	plusw1,w,c
 25167  001196  2435               	addwf	(btemp+11)^0,w,c
 25168  001198  6EE6               	movwf	postinc1,c
 25169  00119A  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25170                           
 25171                           ; BSR set to: 59
 25172                           ;eadog.c: 218:  wait_lcd_done();
 25173  00119E  EC4E  F016         	call	_wait_lcd_done	;wreg free
 25174                           
 25175                           ; BSR set to: 61
 25176                           ;eadog.c: 219:  eaDogM_WriteString(strPtr);
 25177                           ;stkvar	_strPtr @ sp[(-1)+-4]
 25178  0011A2  0EFB               	movlw	-5
 25179  0011A4  006F FF8F FFE6     	movff	plusw1,postinc1
 25180  0011AA  006F FF8F FFE6     	movff	plusw1,postinc1
 25181  0011B0  ECBE  F006         	call	_eaDogM_WriteString	;wreg free
 25182                           
 25183                           ; BSR set to: 59
 25184                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 25185  0011B4  0EFB               	movlw	251
 25186  0011B6  26E1               	addwf	fsr1l,f,c
 25187  0011B8  0EFF               	movlw	255
 25188  0011BA  22E2               	addwfc	fsr1h,f,c
 25189  0011BC  0012               	return		;funcret
 25190  0011BE                     __end_of_eaDogM_WriteStringAtPos:
 25191                           	opt callstack 0
 25192                           
 25193 ;; *************** function _send_lcd_cmd_dma *****************
 25194 ;; Defined at:
 25195 ;;		line 171 in file "eadog.c"
 25196 ;; Parameters:    Size  Location     Type
 25197 ;;  strPtr          1  [STACK] const unsigned char 
 25198 ;; Auto vars:     Size  Location     Type
 25199 ;;		None
 25200 ;; Return value:  Size  Location     Type
 25201 ;;                  1  [STACK] void 
 25202 ;; Registers used:
 25203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25204 ;; Tracked objects:
 25205 ;;		On entry : 0/3D
 25206 ;;		On exit  : 3F/3D
 25207 ;;		Unchanged: 0/0
 25208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25213 ;;Total ram usage:        0 bytes
 25214 ;; Hardware stack levels used:    1
 25215 ;; Hardware stack levels required when called:   18
 25216 ;; This function calls:
 25217 ;;		_send_lcd_data_dma
 25218 ;;		_wait_lcd_done
 25219 ;; This function is called by:
 25220 ;;		_eaDogM_WriteStringAtPos
 25221 ;;		_eaDogM_WriteCommand
 25222 ;; This function uses a reentrant model
 25223 ;;
 25224                           
 25225                           	psect	text83
 25226  002AF0                     __ptext83:
 25227                           	opt callstack 0
 25228  002AF0                     _send_lcd_cmd_dma:
 25229                           	opt callstack 10
 25230                           
 25231                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 25232                           
 25233                           ; BSR set to: 59
 25234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25235                           ;incstack = 0
 25236  002AF0  0EFE               	movlw	254
 25237  002AF2  6EE6               	movwf	postinc1,c
 25238  002AF4  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25239                           
 25240                           ; BSR set to: 59
 25241                           ;eadog.c: 174:  wait_lcd_done();
 25242  002AF8  EC4E  F016         	call	_wait_lcd_done	;wreg free
 25243                           
 25244                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 25245                           ;stkvar	_strPtr @ sp[(0)+-1]
 25246  002AFC  0EFF               	movlw	-1
 25247  002AFE  50E3               	movf	plusw1,w,c
 25248  002B00  6EE6               	movwf	postinc1,c
 25249  002B02  EC34  F010         	call	_send_lcd_data_dma	;wreg free
 25250                           
 25251                           ; BSR set to: 59
 25252                           ;eadog.c: 176:  wait_lcd_done();
 25253  002B06  EC4E  F016         	call	_wait_lcd_done	;wreg free
 25254                           
 25255                           ; BSR set to: 61
 25256                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25257  002B0A  52E5               	movf	postdec1,f,c
 25258  002B0C  0012               	return		;funcret
 25259  002B0E                     __end_of_send_lcd_cmd_dma:
 25260                           	opt callstack 0
 25261                           
 25262 ;; *************** function _wait_lcd_done *****************
 25263 ;; Defined at:
 25264 ;;		line 443 in file "eadog.c"
 25265 ;; Parameters:    Size  Location     Type
 25266 ;;		None
 25267 ;; Auto vars:     Size  Location     Type
 25268 ;;		None
 25269 ;; Return value:  Size  Location     Type
 25270 ;;                  1  [STACK] void 
 25271 ;; Registers used:
 25272 ;;		None
 25273 ;; Tracked objects:
 25274 ;;		On entry : 0/2
 25275 ;;		On exit  : 3F/3D
 25276 ;;		Unchanged: 0/0
 25277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25282 ;;Total ram usage:        0 bytes
 25283 ;; Hardware stack levels used:    1
 25284 ;; Hardware stack levels required when called:   15
 25285 ;; This function calls:
 25286 ;;		Nothing
 25287 ;; This function is called by:
 25288 ;;		_main
 25289 ;;		_send_lcd_cmd_dma
 25290 ;;		_eaDogM_WriteStringAtPos
 25291 ;;		_update_lcd
 25292 ;;		_vterm_dump
 25293 ;; This function uses a reentrant model
 25294 ;;
 25295                           
 25296                           	psect	text84
 25297  002C9C                     __ptext84:
 25298                           	opt callstack 0
 25299  002C9C                     _wait_lcd_done:
 25300                           	opt callstack 15
 25301                           
 25302                           ;eadog.c: 445:  while (spi_link.LCD_DATA);
 25303                           
 25304                           ; BSR set to: 61
 25305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25306                           ;incstack = 0
 25307  002C9C  0100               	movlb	0	; () banked
 25308  002C9E  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 25309  002CA0  D7FD               	goto	_wait_lcd_done
 25310  002CA2                     u10880:
 25311  002CA2  013D               	movlb	61	; () banked
 25312  002CA4  BB17               	btfsc	23,5,b	;volatile
 25313  002CA6  0012               	return	
 25314  002CA8  D7FC               	goto	u10880
 25315  002CAA                     __end_of_wait_lcd_done:
 25316                           	opt callstack 0
 25317                           
 25318 ;; *************** function _send_lcd_data_dma *****************
 25319 ;; Defined at:
 25320 ;;		line 182 in file "eadog.c"
 25321 ;; Parameters:    Size  Location     Type
 25322 ;;  strPtr          1  [STACK] const unsigned char 
 25323 ;; Auto vars:     Size  Location     Type
 25324 ;;		None
 25325 ;; Return value:  Size  Location     Type
 25326 ;;                  1  [STACK] void 
 25327 ;; Registers used:
 25328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 25329 ;; Tracked objects:
 25330 ;;		On entry : 0/3D
 25331 ;;		On exit  : 3F/3B
 25332 ;;		Unchanged: 0/0
 25333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25338 ;;Total ram usage:        0 bytes
 25339 ;; Hardware stack levels used:    1
 25340 ;; Hardware stack levels required when called:   17
 25341 ;; This function calls:
 25342 ;;		_ringBufS_flush
 25343 ;;		_ringBufS_put_dma
 25344 ;;		_start_lcd
 25345 ;;		_wait_lcd_set
 25346 ;; This function is called by:
 25347 ;;		_send_lcd_cmd_dma
 25348 ;;		_eaDogM_WriteStringAtPos
 25349 ;; This function uses a reentrant model
 25350 ;;
 25351                           
 25352                           	psect	text85
 25353  002068                     __ptext85:
 25354                           	opt callstack 0
 25355  002068                     _send_lcd_data_dma:
 25356                           	opt callstack 11
 25357                           
 25358                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 25359                           
 25360                           ; BSR set to: 61
 25361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25362                           ;incstack = 0
 25363  002068  ECAC  F016         	call	_wait_lcd_set	;wreg free
 25364                           
 25365                           ; BSR set to: 0
 25366                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 25367  00206C  0E00               	movlw	0
 25368  00206E  6EE6               	movwf	postinc1,c
 25369  002070  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25370  002076  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25371  00207C  ECDF  F008         	call	_ringBufS_flush	;wreg free
 25372  002080  94BC               	bcf	188,2,c	;volatile
 25373                           
 25374                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 25375  002082  013B               	movlb	59	; () banked
 25376  002084  9FFC               	bcf	252,7,b	;volatile
 25377                           
 25378                           ; BSR set to: 59
 25379                           ;eadog.c: 189:  DMA1SSZ = 1;
 25380  002086  0E00               	movlw	0
 25381  002088  6FF8               	movwf	248,b	;volatile
 25382  00208A  0E01               	movlw	1
 25383  00208C  6FF7               	movwf	247,b	;volatile
 25384                           
 25385                           ; BSR set to: 59
 25386                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 25387  00208E  8FFC               	bsf	252,7,b	;volatile
 25388                           
 25389                           ; BSR set to: 59
 25390                           ;eadog.c: 191:  ringBufS_put_dma(spi_link.tx1a, strPtr);
 25391                           ;stkvar	_strPtr @ sp[(0)+-1]
 25392  002090  0EFF               	movlw	-1
 25393  002092  50E3               	movf	plusw1,w,c
 25394  002094  6EE6               	movwf	postinc1,c
 25395  002096  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25396  00209C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25397  0020A2  EC69  F006         	call	_ringBufS_put_dma	;wreg free
 25398                           
 25399                           ;eadog.c: 192:  start_lcd();
 25400  0020A6  ECAF  F016         	call	_start_lcd	;wreg free
 25401                           
 25402                           ; BSR set to: 59
 25403                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 25404  0020AA  52E5               	movf	postdec1,f,c
 25405  0020AC  0012               	return		;funcret
 25406  0020AE                     __end_of_send_lcd_data_dma:
 25407                           	opt callstack 0
 25408                           
 25409 ;; *************** function _eaDogM_WriteString *****************
 25410 ;; Defined at:
 25411 ;;		line 151 in file "eadog.c"
 25412 ;; Parameters:    Size  Location     Type
 25413 ;;  strPtr          2  [STACK] PTR unsigned char 
 25414 ;;		 -> D.lcd(640), D(642), V(181), 
 25415 ;; Auto vars:     Size  Location     Type
 25416 ;;		None
 25417 ;; Return value:  Size  Location     Type
 25418 ;;                  1  [STACK] void 
 25419 ;; Registers used:
 25420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 25421 ;; Tracked objects:
 25422 ;;		On entry : 3F/3D
 25423 ;;		On exit  : 3F/3B
 25424 ;;		Unchanged: 0/0
 25425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25430 ;;Total ram usage:        0 bytes
 25431 ;; Hardware stack levels used:    1
 25432 ;; Hardware stack levels required when called:   24
 25433 ;; This function calls:
 25434 ;;		_printf
 25435 ;;		_ringBufS_flush
 25436 ;;		_start_lcd
 25437 ;;		_strlen
 25438 ;;		_wait_lcd_set
 25439 ;; This function is called by:
 25440 ;;		_eaDogM_WriteStringAtPos
 25441 ;; This function uses a reentrant model
 25442 ;;
 25443                           
 25444                           	psect	text86
 25445  000D7C                     __ptext86:
 25446                           	opt callstack 0
 25447  000D7C                     _eaDogM_WriteString:
 25448                           	opt callstack 4
 25449                           
 25450                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 25451                           
 25452                           ; BSR set to: 59
 25453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25454                           ;incstack = 0
 25455  000D7C  ECAC  F016         	call	_wait_lcd_set	;wreg free
 25456                           
 25457                           ; BSR set to: 0
 25458                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 25459  000D80  0E00               	movlw	0
 25460  000D82  6EE6               	movwf	postinc1,c
 25461  000D84  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 25462  000D8A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 25463  000D90  ECDF  F008         	call	_ringBufS_flush	;wreg free
 25464  000D94  94BC               	bcf	188,2,c	;volatile
 25465                           
 25466                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 25467                           ;stkvar	_strPtr @ sp[(0)+-2]
 25468  000D96  0EFE               	movlw	-2
 25469  000D98  006F FF8F FFE6     	movff	plusw1,postinc1
 25470  000D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25471  000DA4  EC63  F007         	call	_strlen	;wreg free
 25472  000DA8  502B               	movf	(btemp+1)^0,w,c
 25473  000DAA  E104               	bnz	u16170
 25474  000DAC  0E41               	movlw	65
 25475  000DAE  5C2A               	subwf	btemp^0,w,c
 25476  000DB0  A0D8               	btfss	status,0,c
 25477  000DB2  D010               	goto	l16616
 25478  000DB4                     u16170:
 25479                           
 25480                           ;stkvar	_strPtr @ sp[(0)+-2]
 25481  000DB4  0EFE               	movlw	-2
 25482  000DB6  006F FF8C  F034    	movff	plusw1,btemp+10
 25483  000DBC  0EFF               	movlw	-1
 25484  000DBE  006F FF8C  F035    	movff	plusw1,btemp+11
 25485  000DC4  0E40               	movlw	64
 25486  000DC6  2434               	addwf	(btemp+10)^0,w,c
 25487  000DC8  6ED9               	movwf	fsr2l,c
 25488  000DCA  0E00               	movlw	0
 25489  000DCC  2035               	addwfc	(btemp+11)^0,w,c
 25490  000DCE  6EDA               	movwf	fsr2h,c
 25491  000DD0  0E00               	movlw	0
 25492  000DD2  6EDF               	movwf	indf2,c
 25493  000DD4                     l16616:
 25494                           
 25495                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 25496  000DD4  013B               	movlb	59	; () banked
 25497  000DD6  9FFC               	bcf	252,7,b	;volatile
 25498                           
 25499                           ; BSR set to: 59
 25500                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 25501                           ;stkvar	_strPtr @ sp[(0)+-2]
 25502  000DD8  0EFE               	movlw	-2
 25503  000DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 25504  000DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 25505  000DE6  EC63  F007         	call	_strlen	;wreg free
 25506  000DEA  0060  F0AB  FBF7   	movff	btemp,15351	;volatile
 25507  000DF0  0060  F0AF  FBF8   	movff	btemp+1,15352	;volatile
 25508                           
 25509                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 25510  000DF6  013B               	movlb	59	; () banked
 25511  000DF8  8FFC               	bsf	252,7,b	;volatile
 25512                           
 25513                           ; BSR set to: 59
 25514                           ;eadog.c: 161:  printf("%s", strPtr);
 25515                           ;stkvar	_strPtr @ sp[(0)+-2]
 25516  000DFA  0EFE               	movlw	-2
 25517  000DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 25518  000E02  006F FF8F FFE6     	movff	plusw1,postinc1
 25519  000E08  0EFC               	movlw	low STR_74
 25520  000E0A  6EE6               	movwf	postinc1,c
 25521  000E0C  0EFF               	movlw	high STR_74
 25522  000E0E  6EE6               	movwf	postinc1,c
 25523  000E10  0E04               	movlw	4
 25524  000E12  6EE6               	movwf	postinc1,c
 25525  000E14  EC91  F00D         	call	_printf	;wreg free
 25526                           
 25527                           ; BSR set to: 0
 25528                           ;eadog.c: 162:  start_lcd();
 25529  000E18  ECAF  F016         	call	_start_lcd	;wreg free
 25530                           
 25531                           ; BSR set to: 59
 25532                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 25533  000E1C  52E5               	movf	postdec1,f,c
 25534  000E1E  52E5               	movf	postdec1,f,c
 25535  000E20  0012               	return		;funcret
 25536  000E22                     __end_of_eaDogM_WriteString:
 25537                           	opt callstack 0
 25538                           
 25539 ;; *************** function _wait_lcd_set *****************
 25540 ;; Defined at:
 25541 ;;		line 433 in file "eadog.c"
 25542 ;; Parameters:    Size  Location     Type
 25543 ;;		None
 25544 ;; Auto vars:     Size  Location     Type
 25545 ;;		None
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  1  [STACK] void 
 25548 ;; Registers used:
 25549 ;;		None
 25550 ;; Tracked objects:
 25551 ;;		On entry : 0/3D
 25552 ;;		On exit  : 3F/0
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25559 ;;Total ram usage:        0 bytes
 25560 ;; Hardware stack levels used:    1
 25561 ;; Hardware stack levels required when called:   15
 25562 ;; This function calls:
 25563 ;;		Nothing
 25564 ;; This function is called by:
 25565 ;;		_eaDogM_WriteString
 25566 ;;		_send_lcd_data_dma
 25567 ;; This function uses a reentrant model
 25568 ;;
 25569                           
 25570                           	psect	text87
 25571  002D58                     __ptext87:
 25572                           	opt callstack 0
 25573  002D58                     _wait_lcd_set:
 25574                           	opt callstack 12
 25575                           
 25576                           ;eadog.c: 435:  spi_link.LCD_DATA = 1;
 25577                           
 25578                           ; BSR set to: 59
 25579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25580                           ;incstack = 0
 25581  002D58  0100               	movlb	0	; () banked
 25582  002D5A  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 25583                           
 25584                           ; BSR set to: 0
 25585                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 25586  002D5C  0012               	return		;funcret
 25587  002D5E                     __end_of_wait_lcd_set:
 25588                           	opt callstack 0
 25589                           
 25590 ;; *************** function _start_lcd *****************
 25591 ;; Defined at:
 25592 ;;		line 428 in file "eadog.c"
 25593 ;; Parameters:    Size  Location     Type
 25594 ;;		None
 25595 ;; Auto vars:     Size  Location     Type
 25596 ;;		None
 25597 ;; Return value:  Size  Location     Type
 25598 ;;                  1  [STACK] void 
 25599 ;; Registers used:
 25600 ;;		None
 25601 ;; Tracked objects:
 25602 ;;		On entry : 0/3B
 25603 ;;		On exit  : 3F/3B
 25604 ;;		Unchanged: 0/0
 25605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25610 ;;Total ram usage:        0 bytes
 25611 ;; Hardware stack levels used:    1
 25612 ;; Hardware stack levels required when called:   15
 25613 ;; This function calls:
 25614 ;;		Nothing
 25615 ;; This function is called by:
 25616 ;;		_eaDogM_WriteString
 25617 ;;		_send_lcd_data_dma
 25618 ;; This function uses a reentrant model
 25619 ;;
 25620                           
 25621                           	psect	text88
 25622  002D5E                     __ptext88:
 25623                           	opt callstack 0
 25624  002D5E                     _start_lcd:
 25625                           	opt callstack 12
 25626                           
 25627                           ;eadog.c: 430:  DMA1CON0bits.DMA1SIRQEN = 1;
 25628                           
 25629                           ; BSR set to: 0
 25630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25631                           ;incstack = 0
 25632  002D5E  013B               	movlb	59	; () banked
 25633  002D60  8DFC               	bsf	252,6,b	;volatile
 25634                           
 25635                           ; BSR set to: 59
 25636                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25637  002D62  0012               	return		;funcret
 25638  002D64                     __end_of_start_lcd:
 25639                           	opt callstack 0
 25640                           
 25641 ;; *************** function _ringBufS_flush *****************
 25642 ;; Defined at:
 25643 ;;		line 76 in file "ringbufs.c"
 25644 ;; Parameters:    Size  Location     Type
 25645 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25646 ;;		 -> ring_buf1(67), 
 25647 ;;  clearBuffer     1  [STACK] const char 
 25648 ;; Auto vars:     Size  Location     Type
 25649 ;;		None
 25650 ;; Return value:  Size  Location     Type
 25651 ;;                  1  [STACK] void 
 25652 ;; Registers used:
 25653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25654 ;; Tracked objects:
 25655 ;;		On entry : 3F/0
 25656 ;;		On exit  : 0/0
 25657 ;;		Unchanged: 0/0
 25658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25663 ;;Total ram usage:        0 bytes
 25664 ;; Hardware stack levels used:    1
 25665 ;; Hardware stack levels required when called:   16
 25666 ;; This function calls:
 25667 ;;		_memset
 25668 ;; This function is called by:
 25669 ;;		_eaDogM_WriteString
 25670 ;;		_send_lcd_data_dma
 25671 ;; This function uses a reentrant model
 25672 ;;
 25673                           
 25674                           	psect	text89
 25675  0011BE                     __ptext89:
 25676                           	opt callstack 0
 25677  0011BE                     _ringBufS_flush:
 25678                           	opt callstack 11
 25679                           
 25680                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 25681                           ;stkvar	__this @ sp[(0)+-2]
 25682                           
 25683                           ; BSR set to: 59
 25684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25685                           ;incstack = 0
 25686  0011BE  0EFE               	movlw	-2
 25687  0011C0  006F FF8C  F034    	movff	plusw1,btemp+10
 25688  0011C6  0EFF               	movlw	-1
 25689  0011C8  006F FF8C  F035    	movff	plusw1,btemp+11
 25690  0011CE  0E42               	movlw	66
 25691  0011D0  2434               	addwf	(btemp+10)^0,w,c
 25692  0011D2  6ED9               	movwf	fsr2l,c
 25693  0011D4  0E00               	movlw	0
 25694  0011D6  2035               	addwfc	(btemp+11)^0,w,c
 25695  0011D8  6EDA               	movwf	fsr2h,c
 25696  0011DA  0E00               	movlw	0
 25697  0011DC  6EDF               	movwf	indf2,c
 25698                           
 25699                           ;ringbufs.c: 79:  _this->head = 0;
 25700                           ;stkvar	__this @ sp[(0)+-2]
 25701  0011DE  0EFE               	movlw	-2
 25702  0011E0  006F FF8C  F034    	movff	plusw1,btemp+10
 25703  0011E6  0EFF               	movlw	-1
 25704  0011E8  006F FF8C  F035    	movff	plusw1,btemp+11
 25705  0011EE  0E40               	movlw	64
 25706  0011F0  2434               	addwf	(btemp+10)^0,w,c
 25707  0011F2  6ED9               	movwf	fsr2l,c
 25708  0011F4  0E00               	movlw	0
 25709  0011F6  2035               	addwfc	(btemp+11)^0,w,c
 25710  0011F8  6EDA               	movwf	fsr2h,c
 25711  0011FA  0E00               	movlw	0
 25712  0011FC  6EDF               	movwf	indf2,c
 25713                           
 25714                           ;ringbufs.c: 80:  _this->tail = 0;
 25715                           ;stkvar	__this @ sp[(0)+-2]
 25716  0011FE  0EFE               	movlw	-2
 25717  001200  006F FF8C  F034    	movff	plusw1,btemp+10
 25718  001206  0EFF               	movlw	-1
 25719  001208  006F FF8C  F035    	movff	plusw1,btemp+11
 25720  00120E  0E41               	movlw	65
 25721  001210  2434               	addwf	(btemp+10)^0,w,c
 25722  001212  6ED9               	movwf	fsr2l,c
 25723  001214  0E00               	movlw	0
 25724  001216  2035               	addwfc	(btemp+11)^0,w,c
 25725  001218  6EDA               	movwf	fsr2h,c
 25726  00121A  0E00               	movlw	0
 25727  00121C  6EDF               	movwf	indf2,c
 25728                           
 25729                           ;ringbufs.c: 81:  if (clearBuffer) {
 25730                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 25731  00121E  0EFD               	movlw	-3
 25732  001220  50E3               	movf	plusw1,w,c
 25733  001222  B4D8               	btfsc	status,2,c
 25734  001224  D011               	goto	l1750
 25735                           
 25736                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 25737  001226  0E40               	movlw	64
 25738  001228  6EE6               	movwf	postinc1,c
 25739  00122A  0E00               	movlw	0
 25740  00122C  6EE6               	movwf	postinc1,c
 25741  00122E  0E00               	movlw	0
 25742  001230  6EE6               	movwf	postinc1,c
 25743  001232  0E00               	movlw	0
 25744  001234  6EE6               	movwf	postinc1,c
 25745                           
 25746                           ;stkvar	__this @ sp[(-4)+-2]
 25747  001236  0EFA               	movlw	-6
 25748  001238  006F FF8F FFE6     	movff	plusw1,postinc1
 25749  00123E  006F FF8F FFE6     	movff	plusw1,postinc1
 25750  001244  EC4F  F0DA         	call	_memset	;wreg free
 25751  001248                     l1750:
 25752                           
 25753                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 25754  001248  52E5               	movf	postdec1,f,c
 25755  00124A  52E5               	movf	postdec1,f,c
 25756  00124C  52E5               	movf	postdec1,f,c
 25757  00124E  0012               	return		;funcret
 25758  001250                     __end_of_ringBufS_flush:
 25759                           	opt callstack 0
 25760                           
 25761 ;; *************** function _memset *****************
 25762 ;; Defined at:
 25763 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 25764 ;; Parameters:    Size  Location     Type
 25765 ;;  dest            2  [STACK] PTR void 
 25766 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25767 ;;  c               2  [STACK] int 
 25768 ;;  n               2  [STACK] unsigned int 
 25769 ;; Auto vars:     Size  Location     Type
 25770 ;;  s               2  [STACK] PTR unsigned char 
 25771 ;;		 -> ring_buf2(67), ring_buf1(67), 
 25772 ;;  k               2  [STACK] unsigned int 
 25773 ;; Return value:  Size  Location     Type
 25774 ;;                  2  [STACK] PTR void 
 25775 ;; Registers used:
 25776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 25777 ;; Tracked objects:
 25778 ;;		On entry : 0/0
 25779 ;;		On exit  : 0/0
 25780 ;;		Unchanged: 0/0
 25781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25786 ;;Total ram usage:        0 bytes
 25787 ;; Hardware stack levels used:    1
 25788 ;; Hardware stack levels required when called:   15
 25789 ;; This function calls:
 25790 ;;		Nothing
 25791 ;; This function is called by:
 25792 ;;		_ringBufS_init
 25793 ;;		_ringBufS_flush
 25794 ;; This function uses a reentrant model
 25795 ;;
 25796                           
 25797                           	psect	text90
 25798  01B49E                     __ptext90:
 25799                           	opt callstack 0
 25800  01B49E                     _memset:
 25801                           	opt callstack 0
 25802                           
 25803                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25804  01B49E  52E6               	movf	postinc1,f,c
 25805  01B4A0  52E6               	movf	postinc1,f,c
 25806  01B4A2  52E6               	movf	postinc1,f,c
 25807  01B4A4  52E6               	movf	postinc1,f,c
 25808                           
 25809                           ;stkvar	_dest @ sp[(-4)+-2]
 25810                           
 25811                           ;incstack = 0
 25812  01B4A6  0EFA               	movlw	-6
 25813  01B4A8  006F FF8C  F034    	movff	plusw1,btemp+10
 25814  01B4AE  0EFB               	movlw	-5
 25815  01B4B0  006F FF8C  F035    	movff	plusw1,btemp+11
 25816                           
 25817                           ;stkvar	_s @ sp[(-4)+0]
 25818  01B4B6  0EFD               	movlw	-3
 25819  01B4B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 25820  01B4BE  0EFC               	movlw	-4
 25821  01B4C0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 25822                           
 25823                           ;stkvar	_n @ sp[(-4)+-6]
 25824  01B4C6  0EF6               	movlw	-10
 25825  01B4C8  006F FF8C  F02A    	movff	plusw1,btemp
 25826  01B4CE  0EF7               	movlw	-9
 25827  01B4D0  50E3               	movf	plusw1,w,c
 25828  01B4D2  102A               	iorwf	btemp^0,w,c
 25829  01B4D4  B4D8               	btfsc	status,2,c
 25830  01B4D6  D154               	goto	u14350
 25831                           
 25832                           ;stkvar	_c @ sp[(-4)+-4]
 25833                           ;stkvar	_s @ sp[(-4)+0]
 25834  01B4D8  0EFC               	movlw	-4
 25835  01B4DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25836  01B4E0  0EFD               	movlw	-3
 25837  01B4E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25838  01B4E8  0EF8               	movlw	-8
 25839  01B4EA  006F FF8F FFDF     	movff	plusw1,indf2
 25840                           
 25841                           ;stkvar	_c @ sp[(-4)+-4]
 25842                           ;stkvar	_n @ sp[(-4)+-6]
 25843                           ;stkvar	_s @ sp[(-4)+0]
 25844  01B4F0  0EFC               	movlw	-4
 25845  01B4F2  006F FF8C  F034    	movff	plusw1,btemp+10
 25846  01B4F8  0EFD               	movlw	-3
 25847  01B4FA  006F FF8C  F035    	movff	plusw1,btemp+11
 25848  01B500  0EF6               	movlw	-10
 25849  01B502  50E3               	movf	plusw1,w,c
 25850  01B504  2634               	addwf	(btemp+10)^0,f,c
 25851  01B506  0EF7               	movlw	-9
 25852  01B508  50E3               	movf	plusw1,w,c
 25853  01B50A  2235               	addwfc	(btemp+11)^0,f,c
 25854  01B50C  0EFF               	movlw	255
 25855  01B50E  2434               	addwf	(btemp+10)^0,w,c
 25856  01B510  6ED9               	movwf	fsr2l,c
 25857  01B512  0EFF               	movlw	255
 25858  01B514  2035               	addwfc	(btemp+11)^0,w,c
 25859  01B516  6EDA               	movwf	fsr2h,c
 25860  01B518  0EF8               	movlw	-8
 25861  01B51A  006F FF8F FFDF     	movff	plusw1,indf2
 25862                           
 25863                           ;stkvar	_n @ sp[(-4)+-6]
 25864  01B520  0EF7               	movlw	-9
 25865  01B522  50E3               	movf	plusw1,w,c
 25866  01B524  E108               	bnz	l15432
 25867  01B526  0EF6               	movlw	-10
 25868  01B528  006F FF8C  F02A    	movff	plusw1,btemp
 25869  01B52E  0E03               	movlw	3
 25870  01B530  5E2A               	subwf	btemp^0,f,c
 25871  01B532  A0D8               	btfss	status,0,c
 25872  01B534  D125               	goto	u14350
 25873  01B536                     l15432:
 25874                           
 25875                           ;stkvar	_c @ sp[(-4)+-4]
 25876                           ;stkvar	_s @ sp[(-4)+0]
 25877  01B536  0EFC               	movlw	-4
 25878  01B538  006F FF8C  F034    	movff	plusw1,btemp+10
 25879  01B53E  0EFD               	movlw	-3
 25880  01B540  006F FF8C  F035    	movff	plusw1,btemp+11
 25881  01B546  0E01               	movlw	1
 25882  01B548  2434               	addwf	(btemp+10)^0,w,c
 25883  01B54A  6ED9               	movwf	fsr2l,c
 25884  01B54C  0E00               	movlw	0
 25885  01B54E  2035               	addwfc	(btemp+11)^0,w,c
 25886  01B550  6EDA               	movwf	fsr2h,c
 25887  01B552  0EF8               	movlw	-8
 25888  01B554  006F FF8F FFDF     	movff	plusw1,indf2
 25889                           
 25890                           ;stkvar	_c @ sp[(-4)+-4]
 25891                           ;stkvar	_s @ sp[(-4)+0]
 25892  01B55A  0EFC               	movlw	-4
 25893  01B55C  006F FF8C  F034    	movff	plusw1,btemp+10
 25894  01B562  0EFD               	movlw	-3
 25895  01B564  006F FF8C  F035    	movff	plusw1,btemp+11
 25896  01B56A  0E02               	movlw	2
 25897  01B56C  2434               	addwf	(btemp+10)^0,w,c
 25898  01B56E  6ED9               	movwf	fsr2l,c
 25899  01B570  0E00               	movlw	0
 25900  01B572  2035               	addwfc	(btemp+11)^0,w,c
 25901  01B574  6EDA               	movwf	fsr2h,c
 25902  01B576  0EF8               	movlw	-8
 25903  01B578  006F FF8F FFDF     	movff	plusw1,indf2
 25904                           
 25905                           ;stkvar	_c @ sp[(-4)+-4]
 25906                           ;stkvar	_n @ sp[(-4)+-6]
 25907                           ;stkvar	_s @ sp[(-4)+0]
 25908  01B57E  0EFC               	movlw	-4
 25909  01B580  006F FF8C  F034    	movff	plusw1,btemp+10
 25910  01B586  0EFD               	movlw	-3
 25911  01B588  006F FF8C  F035    	movff	plusw1,btemp+11
 25912  01B58E  0EF6               	movlw	-10
 25913  01B590  50E3               	movf	plusw1,w,c
 25914  01B592  2634               	addwf	(btemp+10)^0,f,c
 25915  01B594  0EF7               	movlw	-9
 25916  01B596  50E3               	movf	plusw1,w,c
 25917  01B598  2235               	addwfc	(btemp+11)^0,f,c
 25918  01B59A  0EFE               	movlw	254
 25919  01B59C  2434               	addwf	(btemp+10)^0,w,c
 25920  01B59E  6ED9               	movwf	fsr2l,c
 25921  01B5A0  0EFF               	movlw	255
 25922  01B5A2  2035               	addwfc	(btemp+11)^0,w,c
 25923  01B5A4  6EDA               	movwf	fsr2h,c
 25924  01B5A6  0EF8               	movlw	-8
 25925  01B5A8  006F FF8F FFDF     	movff	plusw1,indf2
 25926                           
 25927                           ;stkvar	_c @ sp[(-4)+-4]
 25928                           ;stkvar	_n @ sp[(-4)+-6]
 25929                           ;stkvar	_s @ sp[(-4)+0]
 25930  01B5AE  0EFC               	movlw	-4
 25931  01B5B0  006F FF8C  F034    	movff	plusw1,btemp+10
 25932  01B5B6  0EFD               	movlw	-3
 25933  01B5B8  006F FF8C  F035    	movff	plusw1,btemp+11
 25934  01B5BE  0EF6               	movlw	-10
 25935  01B5C0  50E3               	movf	plusw1,w,c
 25936  01B5C2  2634               	addwf	(btemp+10)^0,f,c
 25937  01B5C4  0EF7               	movlw	-9
 25938  01B5C6  50E3               	movf	plusw1,w,c
 25939  01B5C8  2235               	addwfc	(btemp+11)^0,f,c
 25940  01B5CA  0EFD               	movlw	253
 25941  01B5CC  2434               	addwf	(btemp+10)^0,w,c
 25942  01B5CE  6ED9               	movwf	fsr2l,c
 25943  01B5D0  0EFF               	movlw	255
 25944  01B5D2  2035               	addwfc	(btemp+11)^0,w,c
 25945  01B5D4  6EDA               	movwf	fsr2h,c
 25946  01B5D6  0EF8               	movlw	-8
 25947  01B5D8  006F FF8F FFDF     	movff	plusw1,indf2
 25948                           
 25949                           ;stkvar	_n @ sp[(-4)+-6]
 25950  01B5DE  0EF7               	movlw	-9
 25951  01B5E0  50E3               	movf	plusw1,w,c
 25952  01B5E2  E108               	bnz	l15438
 25953  01B5E4  0EF6               	movlw	-10
 25954  01B5E6  006F FF8C  F02A    	movff	plusw1,btemp
 25955  01B5EC  0E07               	movlw	7
 25956  01B5EE  5E2A               	subwf	btemp^0,f,c
 25957  01B5F0  A0D8               	btfss	status,0,c
 25958  01B5F2  D0C6               	goto	u14350
 25959  01B5F4                     l15438:
 25960                           
 25961                           ;stkvar	_c @ sp[(-4)+-4]
 25962                           ;stkvar	_s @ sp[(-4)+0]
 25963  01B5F4  0EFC               	movlw	-4
 25964  01B5F6  006F FF8C  F034    	movff	plusw1,btemp+10
 25965  01B5FC  0EFD               	movlw	-3
 25966  01B5FE  006F FF8C  F035    	movff	plusw1,btemp+11
 25967  01B604  0E03               	movlw	3
 25968  01B606  2434               	addwf	(btemp+10)^0,w,c
 25969  01B608  6ED9               	movwf	fsr2l,c
 25970  01B60A  0E00               	movlw	0
 25971  01B60C  2035               	addwfc	(btemp+11)^0,w,c
 25972  01B60E  6EDA               	movwf	fsr2h,c
 25973  01B610  0EF8               	movlw	-8
 25974  01B612  006F FF8F FFDF     	movff	plusw1,indf2
 25975                           
 25976                           ;stkvar	_c @ sp[(-4)+-4]
 25977                           ;stkvar	_n @ sp[(-4)+-6]
 25978                           ;stkvar	_s @ sp[(-4)+0]
 25979  01B618  0EFC               	movlw	-4
 25980  01B61A  006F FF8C  F034    	movff	plusw1,btemp+10
 25981  01B620  0EFD               	movlw	-3
 25982  01B622  006F FF8C  F035    	movff	plusw1,btemp+11
 25983  01B628  0EF6               	movlw	-10
 25984  01B62A  50E3               	movf	plusw1,w,c
 25985  01B62C  2634               	addwf	(btemp+10)^0,f,c
 25986  01B62E  0EF7               	movlw	-9
 25987  01B630  50E3               	movf	plusw1,w,c
 25988  01B632  2235               	addwfc	(btemp+11)^0,f,c
 25989  01B634  0EFC               	movlw	252
 25990  01B636  2434               	addwf	(btemp+10)^0,w,c
 25991  01B638  6ED9               	movwf	fsr2l,c
 25992  01B63A  0EFF               	movlw	255
 25993  01B63C  2035               	addwfc	(btemp+11)^0,w,c
 25994  01B63E  6EDA               	movwf	fsr2h,c
 25995  01B640  0EF8               	movlw	-8
 25996  01B642  006F FF8F FFDF     	movff	plusw1,indf2
 25997                           
 25998                           ;stkvar	_n @ sp[(-4)+-6]
 25999  01B648  0EF7               	movlw	-9
 26000  01B64A  50E3               	movf	plusw1,w,c
 26001  01B64C  E108               	bnz	l15444
 26002  01B64E  0EF6               	movlw	-10
 26003  01B650  006F FF8C  F02A    	movff	plusw1,btemp
 26004  01B656  0E09               	movlw	9
 26005  01B658  5E2A               	subwf	btemp^0,f,c
 26006  01B65A  A0D8               	btfss	status,0,c
 26007  01B65C  D091               	goto	u14350
 26008  01B65E                     l15444:
 26009                           
 26010                           ;stkvar	_s @ sp[(-4)+0]
 26011  01B65E  0EFC               	movlw	-4
 26012  01B660  006F FF8C  F034    	movff	plusw1,btemp+10
 26013  01B666  1E34               	comf	(btemp+10)^0,f,c
 26014  01B668  0EFD               	movlw	-3
 26015  01B66A  006F FF8C  F035    	movff	plusw1,btemp+11
 26016  01B670  1E35               	comf	(btemp+11)^0,f,c
 26017  01B672  2A34               	incf	(btemp+10)^0,f,c
 26018  01B674  B4D8               	btfsc	status,2,c
 26019  01B676  2A35               	incf	(btemp+11)^0,f,c
 26020  01B678  0E03               	movlw	3
 26021  01B67A  1634               	andwf	(btemp+10)^0,f,c
 26022  01B67C  0E00               	movlw	0
 26023  01B67E  1635               	andwf	(btemp+11)^0,f,c
 26024                           
 26025                           ;stkvar	_k @ sp[(-4)+2]
 26026  01B680  0EFE               	movlw	-2
 26027  01B682  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26028  01B688  0EFF               	movlw	-1
 26029  01B68A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26030                           
 26031                           ;stkvar	_k @ sp[(-4)+2]
 26032                           ;stkvar	_s @ sp[(-4)+0]
 26033  01B690  0EFC               	movlw	-4
 26034  01B692  50E3               	movf	plusw1,w,c
 26035  01B694  6E2A               	movwf	btemp^0,c
 26036  01B696  0EFE               	movlw	-2
 26037  01B698  50E3               	movf	plusw1,w,c
 26038  01B69A  262A               	addwf	btemp^0,f,c
 26039  01B69C  0EFC               	movlw	-4
 26040  01B69E  0060  F0AB  FFE3   	movff	btemp,plusw1
 26041  01B6A4  0EFD               	movlw	-3
 26042  01B6A6  50E3               	movf	plusw1,w,c
 26043  01B6A8  6E2A               	movwf	btemp^0,c
 26044  01B6AA  0EFF               	movlw	-1
 26045  01B6AC  50E3               	movf	plusw1,w,c
 26046  01B6AE  222A               	addwfc	btemp^0,f,c
 26047  01B6B0  0EFD               	movlw	-3
 26048  01B6B2  0060  F0AB  FFE3   	movff	btemp,plusw1
 26049                           
 26050                           ;stkvar	_k @ sp[(-4)+2]
 26051                           ;stkvar	_n @ sp[(-4)+-6]
 26052  01B6B8  0EF6               	movlw	-10
 26053  01B6BA  50E3               	movf	plusw1,w,c
 26054  01B6BC  6E2A               	movwf	btemp^0,c
 26055  01B6BE  0EFE               	movlw	-2
 26056  01B6C0  50E3               	movf	plusw1,w,c
 26057  01B6C2  5E2A               	subwf	btemp^0,f,c
 26058  01B6C4  0EF6               	movlw	-10
 26059  01B6C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 26060  01B6CC  0EF7               	movlw	-9
 26061  01B6CE  50E3               	movf	plusw1,w,c
 26062  01B6D0  6E2A               	movwf	btemp^0,c
 26063  01B6D2  0EFF               	movlw	-1
 26064  01B6D4  50E3               	movf	plusw1,w,c
 26065  01B6D6  5A2A               	subwfb	btemp^0,f,c
 26066  01B6D8  0EF7               	movlw	-9
 26067  01B6DA  0060  F0AB  FFE3   	movff	btemp,plusw1
 26068  01B6E0  0EFC               	movlw	252
 26069  01B6E2  6E34               	movwf	(btemp+10)^0,c
 26070  01B6E4  0EFF               	movlw	255
 26071  01B6E6  6E35               	movwf	(btemp+11)^0,c
 26072                           
 26073                           ;stkvar	_n @ sp[(-4)+-6]
 26074  01B6E8  0EF6               	movlw	-10
 26075  01B6EA  006F FF8C  F02A    	movff	plusw1,btemp
 26076  01B6F0  5034               	movf	(btemp+10)^0,w,c
 26077  01B6F2  162A               	andwf	btemp^0,f,c
 26078  01B6F4  0EF6               	movlw	-10
 26079  01B6F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 26080  01B6FC  0EF7               	movlw	-9
 26081  01B6FE  006F FF8C  F02A    	movff	plusw1,btemp
 26082  01B704  5035               	movf	(btemp+11)^0,w,c
 26083  01B706  162A               	andwf	btemp^0,f,c
 26084  01B708  0EF7               	movlw	-9
 26085  01B70A  D02E               	goto	L24
 26086  01B70C                     l15452:
 26087                           
 26088                           ;stkvar	_c @ sp[(-4)+-4]
 26089                           ;stkvar	_s @ sp[(-4)+0]
 26090  01B70C  0EFC               	movlw	-4
 26091  01B70E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26092  01B714  0EFD               	movlw	-3
 26093  01B716  006F FF8F FFDA     	movff	plusw1,fsr2h
 26094  01B71C  0EF8               	movlw	-8
 26095  01B71E  006F FF8F FFDF     	movff	plusw1,indf2
 26096                           
 26097                           ;stkvar	_n @ sp[(-4)+-6]
 26098  01B724  0EF6               	movlw	-10
 26099  01B726  006F FF8C  F02A    	movff	plusw1,btemp
 26100  01B72C  0E01               	movlw	1
 26101  01B72E  5E2A               	subwf	btemp^0,f,c
 26102  01B730  0EF6               	movlw	-10
 26103  01B732  0060  F0AB  FFE3   	movff	btemp,plusw1
 26104  01B738  0EF7               	movlw	-9
 26105  01B73A  006F FF8C  F02A    	movff	plusw1,btemp
 26106  01B740  0E00               	movlw	0
 26107  01B742  5A2A               	subwfb	btemp^0,f,c
 26108  01B744  0EF7               	movlw	-9
 26109  01B746  0060  F0AB  FFE3   	movff	btemp,plusw1
 26110                           
 26111                           ;stkvar	_s @ sp[(-4)+0]
 26112  01B74C  0EFC               	movlw	-4
 26113  01B74E  50E3               	movf	plusw1,w,c
 26114  01B750  0F01               	addlw	1
 26115  01B752  6E2A               	movwf	btemp^0,c
 26116  01B754  0EFC               	movlw	-4
 26117  01B756  0060  F0AB  FFE3   	movff	btemp,plusw1
 26118  01B75C  6A2A               	clrf	btemp^0,c
 26119  01B75E  0EFD               	movlw	-3
 26120  01B760  50E3               	movf	plusw1,w,c
 26121  01B762  202A               	addwfc	btemp^0,w,c
 26122  01B764  6E2A               	movwf	btemp^0,c
 26123  01B766  0EFD               	movlw	-3
 26124  01B768                     L24:
 26125  01B768  0060  F0AB  FFE3   	movff	btemp,plusw1
 26126                           
 26127                           ;stkvar	_n @ sp[(-4)+-6]
 26128  01B76E  0EF6               	movlw	-10
 26129  01B770  006F FF8C  F02A    	movff	plusw1,btemp
 26130  01B776  0EF7               	movlw	-9
 26131  01B778  50E3               	movf	plusw1,w,c
 26132  01B77A  102A               	iorwf	btemp^0,w,c
 26133  01B77C  A4D8               	btfss	status,2,c
 26134  01B77E  D7C6               	goto	l15452
 26135  01B780                     u14350:
 26136                           
 26137                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 26138  01B780  0EF6               	movlw	246
 26139  01B782  26E1               	addwf	fsr1l,f,c
 26140  01B784  0EFF               	movlw	255
 26141  01B786  22E2               	addwfc	fsr1h,f,c
 26142  01B788  0012               	return		;funcret
 26143  01B78A                     __end_of_memset:
 26144                           	opt callstack 0
 26145                           
 26146 ;; *************** function _printf *****************
 26147 ;; Defined at:
 26148 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 26149 ;; Parameters:    Size  Location     Type
 26150 ;;  fmt             2  [STACK] PTR const unsigned char 
 26151 ;;		 -> STR_74(3), 
 26152 ;; Auto vars:     Size  Location     Type
 26153 ;;  ap              2  [STACK] PTR void [1]
 26154 ;;		 -> ?_printf(2), ?_sprintf(2), 
 26155 ;;  ret             2    0        int 
 26156 ;; Return value:  Size  Location     Type
 26157 ;;                  2  [STACK] int 
 26158 ;; Registers used:
 26159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26160 ;; Tracked objects:
 26161 ;;		On entry : 3F/3B
 26162 ;;		On exit  : 3F/0
 26163 ;;		Unchanged: 0/0
 26164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26169 ;;Total ram usage:        0 bytes
 26170 ;; Hardware stack levels used:    1
 26171 ;; Hardware stack levels required when called:   23
 26172 ;; This function calls:
 26173 ;;		_vfprintf
 26174 ;; This function is called by:
 26175 ;;		_eaDogM_WriteString
 26176 ;; This function uses a reentrant model
 26177 ;;
 26178                           
 26179                           	psect	text91
 26180  001B22                     __ptext91:
 26181                           	opt callstack 0
 26182  001B22                     _printf:
 26183                           	opt callstack 0
 26184                           
 26185                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26186  001B22  52E6               	movf	postinc1,f,c
 26187  001B24  52E6               	movf	postinc1,f,c
 26188                           
 26189                           ;stkvar	?_printf @ sp[(-2)+-3]
 26190                           
 26191                           ;incstack = 0
 26192  001B26  0EFB               	movlw	251
 26193  001B28  24E1               	addwf	fsr1l,w,c
 26194  001B2A  6E34               	movwf	(btemp+10)^0,c
 26195  001B2C  0EFF               	movlw	255
 26196  001B2E  20E2               	addwfc	fsr1h,w,c
 26197  001B30  6E35               	movwf	(btemp+11)^0,c
 26198                           
 26199                           ;stkvar	_ap @ sp[(-2)+0]
 26200  001B32  0EFF               	movlw	-1
 26201  001B34  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26202  001B3A  0EFE               	movlw	-2
 26203  001B3C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26204                           
 26205                           ;stkvar	_ap @ sp[(-2)+0]
 26206  001B42  0EFE               	movlw	254
 26207  001B44  24E1               	addwf	fsr1l,w,c
 26208  001B46  6E2A               	movwf	btemp^0,c
 26209  001B48  0EFF               	movlw	255
 26210  001B4A  20E2               	addwfc	fsr1h,w,c
 26211  001B4C  6E2B               	movwf	(btemp+1)^0,c
 26212  001B4E  0060  F0AB  FFE6   	movff	btemp,postinc1
 26213  001B54  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26214                           
 26215                           ;stkvar	_fmt @ sp[(-4)+-3]
 26216  001B5A  0EF9               	movlw	-7
 26217  001B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 26218  001B62  006F FF8F FFE6     	movff	plusw1,postinc1
 26219  001B68  0E00               	movlw	0
 26220  001B6A  6EE6               	movwf	postinc1,c
 26221  001B6C  0E00               	movlw	0
 26222  001B6E  6EE6               	movwf	postinc1,c
 26223  001B70  EC13  F006         	call	_vfprintf	;wreg free
 26224                           
 26225                           ; BSR set to: 0
 26226                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 26227  001B74  52E5               	movf	postdec1,f,c
 26228  001B76  52E5               	movf	postdec1,f,c
 26229  001B78  52E5               	movf	postdec1,f,c
 26230  001B7A  50E7               	movf	indf1,w,c
 26231  001B7C  5EE1               	subwf	fsr1l,f,c
 26232  001B7E  0E00               	movlw	0
 26233  001B80  5AE2               	subwfb	fsr1h,f,c
 26234  001B82  0012               	return		;funcret
 26235  001B84                     __end_of_printf:
 26236                           	opt callstack 0
 26237                           
 26238 ;; *************** function _vfprintf *****************
 26239 ;; Defined at:
 26240 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26241 ;; Parameters:    Size  Location     Type
 26242 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26243 ;;		 -> f(6), NULL(0), 
 26244 ;;  fmt             2  [STACK] PTR const unsigned char 
 26245 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 26246 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 26247 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 26248 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 26249 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 26250 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 26251 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 26252 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26253 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 26254 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 26255 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 26256 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 26257 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 26258 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26259 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 26260 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 26261 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 26262 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 26263 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 26264 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 26265 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26266 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26267 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26268 ;;  ap              2  [STACK] PTR PTR void 
 26269 ;;		 -> ap(2), ap(2), 
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;  cfmt            2  [STACK] PTR unsigned char 
 26272 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 26273 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 26274 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 26275 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 26276 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 26277 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 26278 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 26279 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 26280 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 26281 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 26282 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 26283 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 26284 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 26285 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 26286 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 26287 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 26288 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 26289 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 26290 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 26291 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 26292 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 26293 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 26294 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 26295 ;; Return value:  Size  Location     Type
 26296 ;;                  2  [STACK] int 
 26297 ;; Registers used:
 26298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26299 ;; Tracked objects:
 26300 ;;		On entry : 0/2
 26301 ;;		On exit  : 3F/0
 26302 ;;		Unchanged: 0/0
 26303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26308 ;;Total ram usage:        0 bytes
 26309 ;; Hardware stack levels used:    1
 26310 ;; Hardware stack levels required when called:   22
 26311 ;; This function calls:
 26312 ;;		_vfpfcnvrt
 26313 ;; This function is called by:
 26314 ;;		_sprintf
 26315 ;;		_printf
 26316 ;; This function uses a reentrant model
 26317 ;;
 26318                           
 26319                           	psect	text92
 26320  000C26                     __ptext92:
 26321                           	opt callstack 0
 26322  000C26                     _vfprintf:
 26323                           	opt callstack 0
 26324                           
 26325                           ; BSR set to: 0
 26326                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26327  000C26  52E6               	movf	postinc1,f,c
 26328  000C28  52E6               	movf	postinc1,f,c
 26329                           
 26330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 26331                           ;stkvar	_fmt @ sp[(-2)+-4]
 26332                           
 26333                           ;incstack = 0
 26334 ;; hardware stack exceeded
 26335  000C2A  0EFA               	movlw	-6
 26336  000C2C  006F FF8C  F034    	movff	plusw1,btemp+10
 26337  000C32  0EFB               	movlw	-5
 26338  000C34  006F FF8C  F035    	movff	plusw1,btemp+11
 26339                           
 26340                           ;stkvar	_cfmt @ sp[(-2)+0]
 26341  000C3A  0EFF               	movlw	-1
 26342  000C3C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26343  000C42  0EFE               	movlw	-2
 26344  000C44  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26345                           
 26346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 26347  000C4A  0100               	movlb	0	; () banked
 26348  000C4C  6BBA               	clrf	_nout& (0+255),b
 26349  000C4E  6BBB               	clrf	(_nout+1)& (0+255),b
 26350                           
 26351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26352  000C50  D021               	goto	l16638
 26353  000C52                     l16636:
 26354                           
 26355                           ; BSR set to: 0
 26356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 26357                           ;stkvar	_ap @ sp[(-2)+-6]
 26358  000C52  0EF8               	movlw	-8
 26359  000C54  006F FF8F FFE6     	movff	plusw1,postinc1
 26360  000C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 26361                           
 26362                           ;stkvar	_cfmt @ sp[(-4)+0]
 26363  000C60  0EFC               	movlw	252
 26364  000C62  24E1               	addwf	fsr1l,w,c
 26365  000C64  6E2A               	movwf	btemp^0,c
 26366  000C66  0EFF               	movlw	255
 26367  000C68  20E2               	addwfc	fsr1h,w,c
 26368  000C6A  6E2B               	movwf	(btemp+1)^0,c
 26369  000C6C  0060  F0AB  FFE6   	movff	btemp,postinc1
 26370  000C72  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 26371                           
 26372                           ;stkvar	_fp @ sp[(-6)+-2]
 26373  000C78  0EF8               	movlw	-8
 26374  000C7A  006F FF8F FFE6     	movff	plusw1,postinc1
 26375  000C80  006F FF8F FFE6     	movff	plusw1,postinc1
 26376  000C86  EC1B  F09D         	call	_vfpfcnvrt	;wreg free
 26377  000C8A  502A               	movf	btemp^0,w,c
 26378  000C8C  0100               	movlb	0	; () banked
 26379  000C8E  27BA               	addwf	_nout& (0+255),f,b
 26380  000C90  502B               	movf	(btemp+1)^0,w,c
 26381  000C92  23BB               	addwfc	(_nout+1)& (0+255),f,b
 26382  000C94                     l16638:
 26383                           
 26384                           ; BSR set to: 0
 26385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 26386                           ;stkvar	_cfmt @ sp[(-2)+0]
 26387  000C94  50E1               	movf	fsr1l,w,c
 26388  000C96  0FFE               	addlw	-2
 26389  000C98  6ED9               	movwf	fsr2l,c
 26390  000C9A  50E2               	movf	fsr1h,w,c
 26391  000C9C  6EDA               	movwf	fsr2h,c
 26392  000C9E  0EFF               	movlw	255
 26393  000CA0  22DA               	addwfc	fsr2h,f,c
 26394  000CA2  006F FF7B FFF6     	movff	postinc2,tblptrl
 26395  000CA8  006F FF77 FFF7     	movff	postdec2,tblptrh
 26396  000CAE                     	if	0	;tblptru may be non-zero
 26397  000CAE                     	endif
 26398  000CAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26399  000CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 26400  000CB0  6EF8               	movwf	tblptru,c
 26401  000CB2                     	endif
 26402  000CB2  0008               	tblrd		*
 26403  000CB4  50F5               	movf	tablat,w,c
 26404  000CB6  0900               	iorlw	0
 26405  000CB8  A4D8               	btfss	status,2,c
 26406  000CBA  D7CB               	goto	l16636
 26407                           
 26408                           ; BSR set to: 0
 26409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 26410  000CBC  0060  F2E8  F02A   	movff	_nout,btemp
 26411  000CC2  0060  F2EC  F02B   	movff	_nout+1,btemp+1
 26412                           
 26413                           ; BSR set to: 0
 26414                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 26415  000CC8  0EF8               	movlw	248
 26416  000CCA  26E1               	addwf	fsr1l,f,c
 26417  000CCC  0EFF               	movlw	255
 26418  000CCE  22E2               	addwfc	fsr1h,f,c
 26419  000CD0  0012               	return		;funcret
 26420  000CD2                     __end_of_vfprintf:
 26421                           	opt callstack 0
 26422                           
 26423 ;; *************** function _vfpfcnvrt *****************
 26424 ;; Defined at:
 26425 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26426 ;; Parameters:    Size  Location     Type
 26427 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26428 ;;		 -> f(6), NULL(0), 
 26429 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 26430 ;;		 -> cfmt(2), 
 26431 ;;  ap              2  [STACK] PTR PTR void 
 26432 ;;		 -> ap(2), ap(2), 
 26433 ;; Auto vars:     Size  Location     Type
 26434 ;;  llu             8  [STACK] unsigned long long 
 26435 ;;  ll              8  [STACK] long long 
 26436 ;;  f               4  [STACK] long long 
 26437 ;;  ct              3  [STACK] unsigned char [3]
 26438 ;;  vp              3    0        PTR void 
 26439 ;;  cp              2  [STACK] PTR unsigned char 
 26440 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 26441 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 26442 ;;		 -> STR_3(5), V(181), 
 26443 ;;  i               2    0        int 
 26444 ;;  done            2    0        int 
 26445 ;;  c               1  [STACK] unsigned char 
 26446 ;; Return value:  Size  Location     Type
 26447 ;;                  2  [STACK] int 
 26448 ;; Registers used:
 26449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26459 ;;Total ram usage:        0 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:   21
 26462 ;; This function calls:
 26463 ;;		_atoi
 26464 ;;		_ctoa
 26465 ;;		_dtoa
 26466 ;;		_efgtoa
 26467 ;;		_fputc
 26468 ;;		_isdigit
 26469 ;;		_isupper
 26470 ;;		_stoa
 26471 ;;		_strncmp
 26472 ;;		_tolower
 26473 ;;		_utoa
 26474 ;;		_xtoa
 26475 ;; This function is called by:
 26476 ;;		_vfprintf
 26477 ;; This function uses a reentrant model
 26478 ;;
 26479                           
 26480                           	psect	text93
 26481  013A36                     __ptext93:
 26482                           	opt callstack 0
 26483  013A36                     _vfpfcnvrt:
 26484                           	opt callstack 0
 26485                           
 26486                           ; BSR set to: 0
 26487                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 26488  013A36  0E20               	movlw	32
 26489  013A38  26E1               	addwf	fsr1l,f,c
 26490  013A3A  0E00               	movlw	0
 26491  013A3C  22E2               	addwfc	fsr1h,f,c
 26492                           
 26493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 26494                           ;stkvar	_fmt @ sp[(-32)+-4]
 26495                           
 26496                           ;incstack = 0
 26497 ;; hardware stack exceeded
 26498  013A3E  0EDC               	movlw	-36
 26499  013A40  006F FF8F FFD9     	movff	plusw1,fsr2l
 26500  013A46  0EDD               	movlw	-35
 26501  013A48  006F FF8F FFDA     	movff	plusw1,fsr2h
 26502  013A4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26503  013A54  006F FF77 FFF7     	movff	postdec2,tblptrh
 26504  013A5A                     	if	0	;tblptru may be non-zero
 26505  013A5A                     	endif
 26506  013A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26507  013A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 26508  013A5C  6EF8               	movwf	tblptru,c
 26509  013A5E                     	endif
 26510  013A5E  0008               	tblrd		*
 26511  013A60  50F5               	movf	tablat,w,c
 26512  013A62  0A25               	xorlw	37
 26513  013A64  A4D8               	btfss	status,2,c
 26514  013A66  EFC2  F0A4         	goto	l16406
 26515                           
 26516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 26517                           ;stkvar	_fmt @ sp[(-32)+-4]
 26518  013A6A  0EDC               	movlw	-36
 26519  013A6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26520  013A72  0EDD               	movlw	-35
 26521  013A74  006F FF8F FFDA     	movff	plusw1,fsr2h
 26522  013A7A  2ADE               	incf	postinc2,f,c
 26523  013A7C  0E00               	movlw	0
 26524  013A7E  22DD               	addwfc	postdec2,f,c
 26525                           
 26526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 26527  013A80  6A4A               	clrf	_width^0,c
 26528  013A82  6A4B               	clrf	(_width+1)^0,c
 26529  013A84  6A4E               	clrf	_flags^0,c
 26530  013A86  6A4F               	clrf	(_flags+1)^0,c
 26531                           
 26532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 26533  013A88  684C               	setf	_prec^0,c
 26534  013A8A  684D               	setf	(_prec+1)^0,c
 26535                           
 26536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 26537                           ;stkvar	_fmt @ sp[(-32)+-4]
 26538  013A8C  0EDC               	movlw	-36
 26539  013A8E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26540  013A94  0EDD               	movlw	-35
 26541  013A96  006F FF8F FFDA     	movff	plusw1,fsr2h
 26542  013A9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26543  013AA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 26544  013AA8                     	if	0	;tblptru may be non-zero
 26545  013AA8                     	endif
 26546  013AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26547  013AA8  0E00               	movlw	low (__mediumconst shr (0+16))
 26548  013AAA  6EF8               	movwf	tblptru,c
 26549  013AAC                     	endif
 26550  013AAC  0008               	tblrd		*
 26551  013AAE  50F5               	movf	tablat,w,c
 26552  013AB0  0A2A               	xorlw	42
 26553  013AB2  A4D8               	btfss	status,2,c
 26554  013AB4  D031               	goto	l16224
 26555                           
 26556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 26557                           ;stkvar	_fmt @ sp[(-32)+-4]
 26558  013AB6  0EDC               	movlw	-36
 26559  013AB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26560  013ABE  0EDD               	movlw	-35
 26561  013AC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26562  013AC6  2ADE               	incf	postinc2,f,c
 26563  013AC8  0E00               	movlw	0
 26564  013ACA  22DD               	addwfc	postdec2,f,c
 26565                           
 26566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 26567                           ;stkvar	_ap @ sp[(-32)+-6]
 26568  013ACC  0EDA               	movlw	-38
 26569  013ACE  006F FF8F FFD9     	movff	plusw1,fsr2l
 26570  013AD4  0EDB               	movlw	-37
 26571  013AD6  006F FF8F FFDA     	movff	plusw1,fsr2h
 26572  013ADC  0E02               	movlw	2
 26573  013ADE  5EDE               	subwf	postinc2,f,c
 26574  013AE0  0E00               	movlw	0
 26575  013AE2  5ADD               	subwfb	postdec2,f,c
 26576  013AE4  006F FF78  F034    	movff	postinc2,btemp+10
 26577  013AEA  006F FF74  F035    	movff	postdec2,btemp+11
 26578  013AF0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26579  013AF6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26580  013AFC  006F FF78  F04A    	movff	postinc2,_width
 26581  013B02  006F FF74  F04B    	movff	postdec2,_width+1
 26582                           
 26583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 26584  013B08  AE4B               	btfss	(_width+1)^0,7,c
 26585  013B0A  D066               	goto	u15760
 26586                           
 26587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 26588  013B0C  804E               	bsf	_flags^0,0,c
 26589                           
 26590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 26591  013B0E  6C4A               	negf	_width^0,c
 26592  013B10  1E4B               	comf	(_width+1)^0,f,c
 26593  013B12  B0D8               	btfsc	status,0,c
 26594  013B14  2A4B               	incf	(_width+1)^0,f,c
 26595  013B16  D060               	goto	u15760
 26596  013B18                     l16224:
 26597                           
 26598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 26599                           ;stkvar	_fmt @ sp[(-32)+-4]
 26600  013B18  0EDC               	movlw	-36
 26601  013B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26602  013B20  0EDD               	movlw	-35
 26603  013B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 26604  013B28  006F FF78  F034    	movff	postinc2,btemp+10
 26605  013B2E  006F FF74  F035    	movff	postdec2,btemp+11
 26606  013B34  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26607  013B3A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26608  013B40  ECBD  F0E3         	call	_atoi	;wreg free
 26609  013B44  0060  F0A8  F04A   	movff	btemp,_width
 26610  013B4A  0060  F0AC  F04B   	movff	btemp+1,_width+1
 26611                           
 26612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26613  013B50  D00B               	goto	l16228
 26614  013B52                     l16226:
 26615                           
 26616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 26617                           ;stkvar	_fmt @ sp[(-32)+-4]
 26618  013B52  0EDC               	movlw	-36
 26619  013B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 26620  013B5A  0EDD               	movlw	-35
 26621  013B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26622  013B62  2ADE               	incf	postinc2,f,c
 26623  013B64  0E00               	movlw	0
 26624  013B66  22DD               	addwfc	postdec2,f,c
 26625  013B68                     l16228:
 26626  013B68  0ED0               	movlw	208
 26627  013B6A  6E34               	movwf	(btemp+10)^0,c
 26628  013B6C  0EFF               	movlw	255
 26629  013B6E  6E35               	movwf	(btemp+11)^0,c
 26630                           
 26631                           ;stkvar	_fmt @ sp[(-32)+-4]
 26632  013B70  0EDC               	movlw	-36
 26633  013B72  006F FF8F FFD9     	movff	plusw1,fsr2l
 26634  013B78  0EDD               	movlw	-35
 26635  013B7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26636  013B80  006F FF7B FFF6     	movff	postinc2,tblptrl
 26637  013B86  006F FF77 FFF7     	movff	postdec2,tblptrh
 26638  013B8C                     	if	0	;tblptru may be non-zero
 26639  013B8C                     	endif
 26640  013B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26641  013B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 26642  013B8E  6EF8               	movwf	tblptru,c
 26643  013B90                     	endif
 26644  013B90  0008               	tblrd		*
 26645  013B92  50F5               	movf	tablat,w,c
 26646  013B94  6E32               	movwf	(btemp+8)^0,c
 26647  013B96  6A33               	clrf	(btemp+9)^0,c
 26648  013B98  5034               	movf	(btemp+10)^0,w,c
 26649  013B9A  2632               	addwf	(btemp+8)^0,f,c
 26650  013B9C  5035               	movf	(btemp+11)^0,w,c
 26651  013B9E  2233               	addwfc	(btemp+9)^0,f,c
 26652  013BA0  5033               	movf	(btemp+9)^0,w,c
 26653  013BA2  E106               	bnz	u15740
 26654  013BA4  0E0A               	movlw	10
 26655  013BA6  5C32               	subwf	(btemp+8)^0,w,c
 26656  013BA8  B0D8               	btfsc	status,0,c
 26657  013BAA  D002               	goto	u15740
 26658  013BAC  0E01               	movlw	1
 26659  013BAE  D001               	goto	u15750
 26660  013BB0                     u15740:
 26661  013BB0  0E00               	movlw	0
 26662  013BB2                     u15750:
 26663  013BB2  6E34               	movwf	(btemp+10)^0,c
 26664  013BB4  6A35               	clrf	(btemp+11)^0,c
 26665                           
 26666                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+4]
 26667  013BB6  0EE4               	movlw	-28
 26668  013BB8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26669  013BBE  0EE5               	movlw	-27
 26670  013BC0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26671                           
 26672                           ;stkvar	_vfpfcnvrt$6667 @ sp[(-32)+4]
 26673  013BC6  0EE4               	movlw	-28
 26674  013BC8  006F FF8C  F02A    	movff	plusw1,btemp
 26675  013BCE  0EE5               	movlw	-27
 26676  013BD0  50E3               	movf	plusw1,w,c
 26677  013BD2  102A               	iorwf	btemp^0,w,c
 26678  013BD4  A4D8               	btfss	status,2,c
 26679  013BD6  D7BD               	goto	l16226
 26680  013BD8                     u15760:
 26681                           
 26682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 26683                           ;stkvar	_fmt @ sp[(-32)+-4]
 26684  013BD8  0EDC               	movlw	-36
 26685  013BDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 26686  013BE0  0EDD               	movlw	-35
 26687  013BE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 26688  013BE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 26689  013BEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 26690  013BF4                     	if	0	;tblptru may be non-zero
 26691  013BF4                     	endif
 26692  013BF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26693  013BF4  0E00               	movlw	low (__mediumconst shr (0+16))
 26694  013BF6  6EF8               	movwf	tblptru,c
 26695  013BF8                     	endif
 26696  013BF8  0008               	tblrd		*
 26697  013BFA  50F5               	movf	tablat,w,c
 26698  013BFC  0A2E               	xorlw	46
 26699  013BFE  A4D8               	btfss	status,2,c
 26700  013C00  D0AC               	goto	u15810
 26701                           
 26702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 26703  013C02  6A4C               	clrf	_prec^0,c
 26704  013C04  6A4D               	clrf	(_prec+1)^0,c
 26705                           
 26706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 26707                           ;stkvar	_fmt @ sp[(-32)+-4]
 26708  013C06  0EDC               	movlw	-36
 26709  013C08  006F FF8F FFD9     	movff	plusw1,fsr2l
 26710  013C0E  0EDD               	movlw	-35
 26711  013C10  006F FF8F FFDA     	movff	plusw1,fsr2h
 26712  013C16  2ADE               	incf	postinc2,f,c
 26713  013C18  0E00               	movlw	0
 26714  013C1A  22DD               	addwfc	postdec2,f,c
 26715                           
 26716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 26717                           ;stkvar	_fmt @ sp[(-32)+-4]
 26718  013C1C  0EDC               	movlw	-36
 26719  013C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26720  013C24  0EDD               	movlw	-35
 26721  013C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 26722  013C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 26723  013C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 26724  013C38                     	if	0	;tblptru may be non-zero
 26725  013C38                     	endif
 26726  013C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26727  013C38  0E00               	movlw	low (__mediumconst shr (0+16))
 26728  013C3A  6EF8               	movwf	tblptru,c
 26729  013C3C                     	endif
 26730  013C3C  0008               	tblrd		*
 26731  013C3E  50F5               	movf	tablat,w,c
 26732  013C40  0A2A               	xorlw	42
 26733  013C42  A4D8               	btfss	status,2,c
 26734  013C44  D02A               	goto	l16246
 26735                           
 26736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 26737                           ;stkvar	_fmt @ sp[(-32)+-4]
 26738  013C46  0EDC               	movlw	-36
 26739  013C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 26740  013C4E  0EDD               	movlw	-35
 26741  013C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 26742  013C56  2ADE               	incf	postinc2,f,c
 26743  013C58  0E00               	movlw	0
 26744  013C5A  22DD               	addwfc	postdec2,f,c
 26745                           
 26746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 26747                           ;stkvar	_ap @ sp[(-32)+-6]
 26748  013C5C  0EDA               	movlw	-38
 26749  013C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26750  013C64  0EDB               	movlw	-37
 26751  013C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 26752  013C6C  0E02               	movlw	2
 26753  013C6E  5EDE               	subwf	postinc2,f,c
 26754  013C70  0E00               	movlw	0
 26755  013C72  5ADD               	subwfb	postdec2,f,c
 26756  013C74  006F FF78  F034    	movff	postinc2,btemp+10
 26757  013C7A  006F FF74  F035    	movff	postdec2,btemp+11
 26758  013C80  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 26759  013C86  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 26760  013C8C  006F FF78  F04C    	movff	postinc2,_prec
 26761  013C92  006F FF74  F04D    	movff	postdec2,_prec+1
 26762                           
 26763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 26764  013C98  D060               	goto	u15810
 26765  013C9A                     l16246:
 26766                           
 26767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 26768                           ;stkvar	_fmt @ sp[(-32)+-4]
 26769  013C9A  0EDC               	movlw	-36
 26770  013C9C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26771  013CA2  0EDD               	movlw	-35
 26772  013CA4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26773  013CAA  006F FF78  F034    	movff	postinc2,btemp+10
 26774  013CB0  006F FF74  F035    	movff	postdec2,btemp+11
 26775  013CB6  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 26776  013CBC  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 26777  013CC2  ECBD  F0E3         	call	_atoi	;wreg free
 26778  013CC6  0060  F0A8  F04C   	movff	btemp,_prec
 26779  013CCC  0060  F0AC  F04D   	movff	btemp+1,_prec+1
 26780                           
 26781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 26782  013CD2  D00B               	goto	l16250
 26783  013CD4                     l16248:
 26784                           
 26785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 26786                           ;stkvar	_fmt @ sp[(-32)+-4]
 26787  013CD4  0EDC               	movlw	-36
 26788  013CD6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26789  013CDC  0EDD               	movlw	-35
 26790  013CDE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26791  013CE4  2ADE               	incf	postinc2,f,c
 26792  013CE6  0E00               	movlw	0
 26793  013CE8  22DD               	addwfc	postdec2,f,c
 26794  013CEA                     l16250:
 26795  013CEA  0ED0               	movlw	208
 26796  013CEC  6E34               	movwf	(btemp+10)^0,c
 26797  013CEE  0EFF               	movlw	255
 26798  013CF0  6E35               	movwf	(btemp+11)^0,c
 26799                           
 26800                           ;stkvar	_fmt @ sp[(-32)+-4]
 26801  013CF2  0EDC               	movlw	-36
 26802  013CF4  006F FF8F FFD9     	movff	plusw1,fsr2l
 26803  013CFA  0EDD               	movlw	-35
 26804  013CFC  006F FF8F FFDA     	movff	plusw1,fsr2h
 26805  013D02  006F FF7B FFF6     	movff	postinc2,tblptrl
 26806  013D08  006F FF77 FFF7     	movff	postdec2,tblptrh
 26807  013D0E                     	if	0	;tblptru may be non-zero
 26808  013D0E                     	endif
 26809  013D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26810  013D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 26811  013D10  6EF8               	movwf	tblptru,c
 26812  013D12                     	endif
 26813  013D12  0008               	tblrd		*
 26814  013D14  50F5               	movf	tablat,w,c
 26815  013D16  6E32               	movwf	(btemp+8)^0,c
 26816  013D18  6A33               	clrf	(btemp+9)^0,c
 26817  013D1A  5034               	movf	(btemp+10)^0,w,c
 26818  013D1C  2632               	addwf	(btemp+8)^0,f,c
 26819  013D1E  5035               	movf	(btemp+11)^0,w,c
 26820  013D20  2233               	addwfc	(btemp+9)^0,f,c
 26821  013D22  5033               	movf	(btemp+9)^0,w,c
 26822  013D24  E106               	bnz	u15790
 26823  013D26  0E0A               	movlw	10
 26824  013D28  5C32               	subwf	(btemp+8)^0,w,c
 26825  013D2A  B0D8               	btfsc	status,0,c
 26826  013D2C  D002               	goto	u15790
 26827  013D2E  0E01               	movlw	1
 26828  013D30  D001               	goto	u15800
 26829  013D32                     u15790:
 26830  013D32  0E00               	movlw	0
 26831  013D34                     u15800:
 26832  013D34  6E34               	movwf	(btemp+10)^0,c
 26833  013D36  6A35               	clrf	(btemp+11)^0,c
 26834                           
 26835                           ;stkvar	_vfpfcnvrt$6668 @ sp[(-32)+0]
 26836  013D38  0EE0               	movlw	-32
 26837  013D3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 26838  013D40  0EE1               	movlw	-31
 26839  013D42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 26840                           
 26841                           ;stkvar	_vfpfcnvrt$6668 @ sp[(-32)+0]
 26842  013D48  0EE0               	movlw	-32
 26843  013D4A  006F FF8C  F02A    	movff	plusw1,btemp
 26844  013D50  0EE1               	movlw	-31
 26845  013D52  50E3               	movf	plusw1,w,c
 26846  013D54  102A               	iorwf	btemp^0,w,c
 26847  013D56  A4D8               	btfss	status,2,c
 26848  013D58  D7BD               	goto	l16248
 26849  013D5A                     u15810:
 26850                           
 26851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 26852                           ;stkvar	_fmt @ sp[(-32)+-4]
 26853  013D5A  0EDC               	movlw	-36
 26854  013D5C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26855  013D62  0EDD               	movlw	-35
 26856  013D64  006F FF8F FFDA     	movff	plusw1,fsr2h
 26857  013D6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26858  013D70  006F FF77 FFF7     	movff	postdec2,tblptrh
 26859  013D76                     	if	0	;tblptru may be non-zero
 26860  013D76                     	endif
 26861  013D76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26862  013D76  0E00               	movlw	low (__mediumconst shr (0+16))
 26863  013D78  6EF8               	movwf	tblptru,c
 26864  013D7A                     	endif
 26865  013D7A  0008               	tblrd		*
 26866  013D7C  50F5               	movf	tablat,w,c
 26867  013D7E  6EE6               	movwf	postinc1,c
 26868  013D80  0E00               	movlw	0
 26869  013D82  6EE6               	movwf	postinc1,c
 26870  013D84  EC40  F00A         	call	_tolower	;wreg free
 26871                           
 26872                           ;stkvar	_ct @ sp[(-32)+26]
 26873  013D88  0EFA               	movlw	-6
 26874  013D8A  0060  F0AB  FFE3   	movff	btemp,plusw1
 26875                           
 26876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 26877                           ;stkvar	_ct @ sp[(-32)+26]
 26878  013D90  0EFA               	movlw	-6
 26879  013D92  50E3               	movf	plusw1,w,c
 26880  013D94  B4D8               	btfsc	status,2,c
 26881  013D96  D05B               	goto	l16266
 26882                           
 26883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 26884                           ;stkvar	_ct @ sp[(-32)+26]
 26885  013D98  0EFB               	movlw	251
 26886  013D9A  24E1               	addwf	fsr1l,w,c
 26887  013D9C  6ED9               	movwf	fsr2l,c
 26888  013D9E  0EFF               	movlw	255
 26889  013DA0  20E2               	addwfc	fsr1h,w,c
 26890  013DA2  6EDA               	movwf	fsr2h,c
 26891                           
 26892                           ;stkvar	_fmt @ sp[(-32)+-4]
 26893  013DA4  0EDC               	movlw	-36
 26894  013DA6  006F FF8F FFE9     	movff	plusw1,fsr0l
 26895  013DAC  0EDD               	movlw	-35
 26896  013DAE  006F FF8F FFEA     	movff	plusw1,fsr0h
 26897  013DB4  006F FFB8  F034    	movff	postinc0,btemp+10
 26898  013DBA  006F FFB4  F035    	movff	postdec0,btemp+11
 26899  013DC0  0E01               	movlw	1
 26900  013DC2  2634               	addwf	(btemp+10)^0,f,c
 26901  013DC4  0E00               	movlw	0
 26902  013DC6  2235               	addwfc	(btemp+11)^0,f,c
 26903  013DC8  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26904  013DCE  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26905  013DD4                     	if	0	;tblptru may be non-zero
 26906  013DD4                     	endif
 26907  013DD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26908  013DD4  0E00               	movlw	low (__mediumconst shr (0+16))
 26909  013DD6  6EF8               	movwf	tblptru,c
 26910  013DD8                     	endif
 26911  013DD8  0008               	tblrd		*
 26912  013DDA  50F5               	movf	tablat,w,c
 26913  013DDC  6EE6               	movwf	postinc1,c
 26914  013DDE  0E00               	movlw	0
 26915  013DE0  6EE6               	movwf	postinc1,c
 26916  013DE2  EC40  F00A         	call	_tolower	;wreg free
 26917  013DE6  502A               	movf	btemp^0,w,c
 26918  013DE8  6EDF               	movwf	indf2,c
 26919                           
 26920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 26921                           ;stkvar	_ct @ sp[(-32)+26]
 26922  013DEA  0EFB               	movlw	251
 26923  013DEC  24E1               	addwf	fsr1l,w,c
 26924  013DEE  6ED9               	movwf	fsr2l,c
 26925  013DF0  0EFF               	movlw	255
 26926  013DF2  20E2               	addwfc	fsr1h,w,c
 26927  013DF4  6EDA               	movwf	fsr2h,c
 26928  013DF6  50DF               	movf	indf2,w,c
 26929  013DF8  B4D8               	btfsc	status,2,c
 26930  013DFA  D029               	goto	l16266
 26931                           
 26932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 26933                           ;stkvar	_ct @ sp[(-32)+26]
 26934  013DFC  0EFC               	movlw	252
 26935  013DFE  24E1               	addwf	fsr1l,w,c
 26936  013E00  6ED9               	movwf	fsr2l,c
 26937  013E02  0EFF               	movlw	255
 26938  013E04  20E2               	addwfc	fsr1h,w,c
 26939  013E06  6EDA               	movwf	fsr2h,c
 26940                           
 26941                           ;stkvar	_fmt @ sp[(-32)+-4]
 26942  013E08  0EDC               	movlw	-36
 26943  013E0A  006F FF8F FFE9     	movff	plusw1,fsr0l
 26944  013E10  0EDD               	movlw	-35
 26945  013E12  006F FF8F FFEA     	movff	plusw1,fsr0h
 26946  013E18  006F FFB8  F034    	movff	postinc0,btemp+10
 26947  013E1E  006F FFB4  F035    	movff	postdec0,btemp+11
 26948  013E24  0E02               	movlw	2
 26949  013E26  2634               	addwf	(btemp+10)^0,f,c
 26950  013E28  0E00               	movlw	0
 26951  013E2A  2235               	addwfc	(btemp+11)^0,f,c
 26952  013E2C  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 26953  013E32  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 26954  013E38                     	if	0	;tblptru may be non-zero
 26955  013E38                     	endif
 26956  013E38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26957  013E38  0E00               	movlw	low (__mediumconst shr (0+16))
 26958  013E3A  6EF8               	movwf	tblptru,c
 26959  013E3C                     	endif
 26960  013E3C  0008               	tblrd		*
 26961  013E3E  50F5               	movf	tablat,w,c
 26962  013E40  6EE6               	movwf	postinc1,c
 26963  013E42  0E00               	movlw	0
 26964  013E44  6EE6               	movwf	postinc1,c
 26965  013E46  EC40  F00A         	call	_tolower	;wreg free
 26966  013E4A  502A               	movf	btemp^0,w,c
 26967  013E4C  6EDF               	movwf	indf2,c
 26968  013E4E                     l16266:
 26969                           
 26970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 26971                           ;stkvar	_fmt @ sp[(-32)+-4]
 26972  013E4E  0EDC               	movlw	-36
 26973  013E50  006F FF8F FFD9     	movff	plusw1,fsr2l
 26974  013E56  0EDD               	movlw	-35
 26975  013E58  006F FF8F FFDA     	movff	plusw1,fsr2h
 26976  013E5E  006F FF7B FFF6     	movff	postinc2,tblptrl
 26977  013E64  006F FF77 FFF7     	movff	postdec2,tblptrh
 26978  013E6A                     	if	0	;tblptru may be non-zero
 26979  013E6A                     	endif
 26980  013E6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26981  013E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 26982  013E6C  6EF8               	movwf	tblptru,c
 26983  013E6E                     	endif
 26984  013E6E  0008               	tblrd		*
 26985  013E70  50F5               	movf	tablat,w,c
 26986  013E72  0A63               	xorlw	99
 26987  013E74  A4D8               	btfss	status,2,c
 26988  013E76  D037               	goto	l16276
 26989                           
 26990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 26991                           ;stkvar	_fmt @ sp[(-32)+-4]
 26992  013E78  0EDC               	movlw	-36
 26993  013E7A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26994  013E80  0EDD               	movlw	-35
 26995  013E82  006F FF8F FFDA     	movff	plusw1,fsr2h
 26996  013E88  2ADE               	incf	postinc2,f,c
 26997  013E8A  0E00               	movlw	0
 26998  013E8C  22DD               	addwfc	postdec2,f,c
 26999                           
 27000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 27001                           ;stkvar	_ap @ sp[(-32)+-6]
 27002  013E8E  0EDA               	movlw	-38
 27003  013E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 27004  013E96  0EDB               	movlw	-37
 27005  013E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 27006  013E9E  0E02               	movlw	2
 27007  013EA0  5EDE               	subwf	postinc2,f,c
 27008  013EA2  0E00               	movlw	0
 27009  013EA4  5ADD               	subwfb	postdec2,f,c
 27010  013EA6  006F FF78  F034    	movff	postinc2,btemp+10
 27011  013EAC  006F FF74  F035    	movff	postdec2,btemp+11
 27012  013EB2  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27013  013EB8  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27014  013EBE  50DF               	movf	indf2,w,c
 27015  013EC0  6E35               	movwf	(btemp+11)^0,c
 27016                           
 27017                           ;stkvar	_c @ sp[(-32)+31]
 27018  013EC2  0EFF               	movlw	-1
 27019  013EC4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27020                           
 27021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 27022                           ;stkvar	_c @ sp[(-32)+31]
 27023  013ECA  0EFF               	movlw	-1
 27024  013ECC  50E3               	movf	plusw1,w,c
 27025  013ECE  6EE6               	movwf	postinc1,c
 27026                           
 27027                           ;stkvar	_fp @ sp[(-33)+-2]
 27028  013ED0  0EDD               	movlw	-35
 27029  013ED2  006F FF8F FFE6     	movff	plusw1,postinc1
 27030  013ED8  006F FF8F FFE6     	movff	plusw1,postinc1
 27031  013EDE  ECBA  F009         	call	_ctoa	;wreg free
 27032  013EE2  EFEC  F0A4         	goto	l2695
 27033  013EE6                     l16276:
 27034                           
 27035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 27036                           ;stkvar	_fmt @ sp[(-32)+-4]
 27037  013EE6  0EDC               	movlw	-36
 27038  013EE8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27039  013EEE  0EDD               	movlw	-35
 27040  013EF0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27041  013EF6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27042  013EFC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27043  013F02                     	if	0	;tblptru may be non-zero
 27044  013F02                     	endif
 27045  013F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27046  013F02  0E00               	movlw	low (__mediumconst shr (0+16))
 27047  013F04  6EF8               	movwf	tblptru,c
 27048  013F06                     	endif
 27049  013F06  0008               	tblrd		*
 27050  013F08  50F5               	movf	tablat,w,c
 27051  013F0A  0A64               	xorlw	100
 27052  013F0C  B4D8               	btfsc	status,2,c
 27053  013F0E  D015               	goto	u15860
 27054                           
 27055                           ;stkvar	_fmt @ sp[(-32)+-4]
 27056  013F10  0EDC               	movlw	-36
 27057  013F12  006F FF8F FFD9     	movff	plusw1,fsr2l
 27058  013F18  0EDD               	movlw	-35
 27059  013F1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27060  013F20  006F FF7B FFF6     	movff	postinc2,tblptrl
 27061  013F26  006F FF77 FFF7     	movff	postdec2,tblptrh
 27062  013F2C                     	if	0	;tblptru may be non-zero
 27063  013F2C                     	endif
 27064  013F2C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27065  013F2C  0E00               	movlw	low (__mediumconst shr (0+16))
 27066  013F2E  6EF8               	movwf	tblptru,c
 27067  013F30                     	endif
 27068  013F30  0008               	tblrd		*
 27069  013F32  50F5               	movf	tablat,w,c
 27070  013F34  0A69               	xorlw	105
 27071  013F36  A4D8               	btfss	status,2,c
 27072  013F38  D076               	goto	l16288
 27073  013F3A                     u15860:
 27074                           
 27075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 27076                           ;stkvar	_fmt @ sp[(-32)+-4]
 27077  013F3A  0EDC               	movlw	-36
 27078  013F3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27079  013F42  0EDD               	movlw	-35
 27080  013F44  006F FF8F FFDA     	movff	plusw1,fsr2h
 27081  013F4A  2ADE               	incf	postinc2,f,c
 27082  013F4C  0E00               	movlw	0
 27083  013F4E  22DD               	addwfc	postdec2,f,c
 27084                           
 27085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 27086                           ;stkvar	_ap @ sp[(-32)+-6]
 27087  013F50  0EDA               	movlw	-38
 27088  013F52  006F FF8F FFD9     	movff	plusw1,fsr2l
 27089  013F58  0EDB               	movlw	-37
 27090  013F5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27091  013F60  0E02               	movlw	2
 27092  013F62  5EDE               	subwf	postinc2,f,c
 27093  013F64  0E00               	movlw	0
 27094  013F66  5ADD               	subwfb	postdec2,f,c
 27095  013F68  006F FF78  F034    	movff	postinc2,btemp+10
 27096  013F6E  006F FF74  F035    	movff	postdec2,btemp+11
 27097  013F74  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27098  013F7A  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27099  013F80  006F FF78  F034    	movff	postinc2,btemp+10
 27100  013F86  006F FF74  F035    	movff	postdec2,btemp+11
 27101                           
 27102                           ;stkvar	_ll @ sp[(-32)+14]
 27103  013F8C  0EEE               	movlw	-18
 27104  013F8E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27105  013F94  0EEF               	movlw	-17
 27106  013F96  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27107  013F9C  6A2A               	clrf	btemp^0,c
 27108  013F9E  BEE3               	btfsc	plusw1,7,c
 27109  013FA0  682A               	setf	btemp^0,c
 27110  013FA2  0EF0               	movlw	-16
 27111  013FA4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27112  013FAA  0EF1               	movlw	-15
 27113  013FAC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27114  013FB2  0EF2               	movlw	-14
 27115  013FB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27116  013FBA  0EF3               	movlw	-13
 27117  013FBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27118  013FC2  0EF4               	movlw	-12
 27119  013FC4  0060  F0AB  FFE3   	movff	btemp,plusw1
 27120  013FCA  0EF5               	movlw	-11
 27121  013FCC  0060  F0AB  FFE3   	movff	btemp,plusw1
 27122  013FD2                     l16284:
 27123                           
 27124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 27125                           ;stkvar	_ll @ sp[(-32)+14]
 27126  013FD2  50E1               	movf	fsr1l,w,c
 27127  013FD4  0FEE               	addlw	-18
 27128  013FD6  6ED9               	movwf	fsr2l,c
 27129  013FD8  50E2               	movf	fsr1h,w,c
 27130  013FDA  6EDA               	movwf	fsr2h,c
 27131  013FDC  0EFF               	movlw	255
 27132  013FDE  22DA               	addwfc	fsr2h,f,c
 27133  013FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 27134  013FE6  006F FF7B FFE6     	movff	postinc2,postinc1
 27135  013FEC  006F FF7B FFE6     	movff	postinc2,postinc1
 27136  013FF2  006F FF7B FFE6     	movff	postinc2,postinc1
 27137  013FF8  006F FF7B FFE6     	movff	postinc2,postinc1
 27138  013FFE  006F FF7B FFE6     	movff	postinc2,postinc1
 27139  014004  006F FF7B FFE6     	movff	postinc2,postinc1
 27140  01400A  006F FF7B FFE6     	movff	postinc2,postinc1
 27141                           
 27142                           ;stkvar	_fp @ sp[(-40)+-2]
 27143  014010  0ED6               	movlw	-42
 27144  014012  006F FF8F FFE6     	movff	plusw1,postinc1
 27145  014018  006F FF8F FFE6     	movff	plusw1,postinc1
 27146  01401E  EC0A  F0C9         	call	_dtoa	;wreg free
 27147  014022  EFEC  F0A4         	goto	l2695
 27148  014026                     l16288:
 27149                           
 27150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 27151  014026  0E02               	movlw	2
 27152  014028  6EE6               	movwf	postinc1,c
 27153  01402A  0E00               	movlw	0
 27154  01402C  6EE6               	movwf	postinc1,c
 27155  01402E  0EED               	movlw	low STR_104
 27156  014030  6EE6               	movwf	postinc1,c
 27157  014032  0EFF               	movlw	high STR_104
 27158  014034  6EE6               	movwf	postinc1,c
 27159                           
 27160                           ;stkvar	_fmt @ sp[(-36)+-4]
 27161  014036  0ED8               	movlw	-40
 27162  014038  006F FF8F FFD9     	movff	plusw1,fsr2l
 27163  01403E  0ED9               	movlw	-39
 27164  014040  006F FF8F FFDA     	movff	plusw1,fsr2h
 27165  014046  006F FF78  F034    	movff	postinc2,btemp+10
 27166  01404C  006F FF74  F035    	movff	postdec2,btemp+11
 27167  014052  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27168  014058  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27169  01405E  EC74  F0E9         	call	_strncmp	;wreg free
 27170  014062  502A               	movf	btemp^0,w,c
 27171  014064  102B               	iorwf	(btemp+1)^0,w,c
 27172  014066  B4D8               	btfsc	status,2,c
 27173  014068  D022               	goto	u15880
 27174  01406A  0E02               	movlw	2
 27175  01406C  6EE6               	movwf	postinc1,c
 27176  01406E  0E00               	movlw	0
 27177  014070  6EE6               	movwf	postinc1,c
 27178  014072  0EF3               	movlw	low STR_108
 27179  014074  6EE6               	movwf	postinc1,c
 27180  014076  0EFF               	movlw	high STR_108
 27181  014078  6EE6               	movwf	postinc1,c
 27182                           
 27183                           ;stkvar	_fmt @ sp[(-36)+-4]
 27184  01407A  0ED8               	movlw	-40
 27185  01407C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27186  014082  0ED9               	movlw	-39
 27187  014084  006F FF8F FFDA     	movff	plusw1,fsr2h
 27188  01408A  006F FF78  F034    	movff	postinc2,btemp+10
 27189  014090  006F FF74  F035    	movff	postdec2,btemp+11
 27190  014096  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27191  01409C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27192  0140A2  EC74  F0E9         	call	_strncmp	;wreg free
 27193  0140A6  502A               	movf	btemp^0,w,c
 27194  0140A8  102B               	iorwf	(btemp+1)^0,w,c
 27195  0140AA  A4D8               	btfss	status,2,c
 27196  0140AC  D069               	goto	l16300
 27197  0140AE                     u15880:
 27198                           
 27199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 27200                           ;stkvar	_fmt @ sp[(-32)+-4]
 27201  0140AE  0EDC               	movlw	-36
 27202  0140B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27203  0140B6  0EDD               	movlw	-35
 27204  0140B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27205  0140BE  0E02               	movlw	2
 27206  0140C0  26DE               	addwf	postinc2,f,c
 27207  0140C2  0E00               	movlw	0
 27208  0140C4  22DD               	addwfc	postdec2,f,c
 27209                           
 27210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 27211                           ;stkvar	_ap @ sp[(-32)+-6]
 27212  0140C6  0EDA               	movlw	-38
 27213  0140C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27214  0140CE  0EDB               	movlw	-37
 27215  0140D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27216  0140D6  0E04               	movlw	4
 27217  0140D8  5EDE               	subwf	postinc2,f,c
 27218  0140DA  0E00               	movlw	0
 27219  0140DC  5ADD               	subwfb	postdec2,f,c
 27220  0140DE  006F FF78  F034    	movff	postinc2,btemp+10
 27221  0140E4  006F FF74  F035    	movff	postdec2,btemp+11
 27222  0140EA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27223  0140F0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27224  0140F6  006F FF78  F032    	movff	postinc2,btemp+8
 27225  0140FC  006F FF78  F033    	movff	postinc2,btemp+9
 27226  014102  006F FF78  F034    	movff	postinc2,btemp+10
 27227  014108  006F FF78  F035    	movff	postinc2,btemp+11
 27228  01410E  0060  F0C8  F03A   	movff	btemp+8,btemp+16
 27229  014114  0060  F0CC  F03B   	movff	btemp+9,btemp+17
 27230  01411A  0060  F0D0  F03C   	movff	btemp+10,btemp+18
 27231  014120  0060  F0D4  F03D   	movff	btemp+11,btemp+19
 27232  014126  6A3E               	clrf	(btemp+20)^0,c
 27233  014128  BE3D               	btfsc	(btemp+19)^0,7,c
 27234  01412A  683E               	setf	(btemp+20)^0,c
 27235  01412C  0060  F0F8  F03F   	movff	btemp+20,btemp+21
 27236  014132  0060  F0F8  F040   	movff	btemp+20,btemp+22
 27237  014138  0060  F0F8  F041   	movff	btemp+20,btemp+23
 27238                           
 27239                           ;stkvar	_ll @ sp[(-32)+14]
 27240  01413E  0EEE               	movlw	-18
 27241  014140  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27242  014146  0EEF               	movlw	-17
 27243  014148  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27244  01414E  0EF0               	movlw	-16
 27245  014150  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27246  014156  0EF1               	movlw	-15
 27247  014158  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27248  01415E  0EF2               	movlw	-14
 27249  014160  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27250  014166  0EF3               	movlw	-13
 27251  014168  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27252  01416E  0EF4               	movlw	-12
 27253  014170  0060  F103  FFE3   	movff	btemp+22,plusw1
 27254  014176  0EF5               	movlw	-11
 27255  014178  0060  F107  FFE3   	movff	btemp+23,plusw1
 27256  01417E  D729               	goto	l16284
 27257  014180                     l16300:
 27258                           
 27259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 27260                           ;stkvar	_ct @ sp[(-32)+26]
 27261  014180  0EFA               	movlw	-6
 27262  014182  006F FF8C  F02A    	movff	plusw1,btemp
 27263  014188  0E66               	movlw	102
 27264  01418A  182A               	xorwf	btemp^0,w,c
 27265  01418C  A4D8               	btfss	status,2,c
 27266  01418E  D06E               	goto	l16312
 27267                           
 27268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 27269                           ;stkvar	_fmt @ sp[(-32)+-4]
 27270  014190  0EDC               	movlw	-36
 27271  014192  006F FF8F FFD9     	movff	plusw1,fsr2l
 27272  014198  0EDD               	movlw	-35
 27273  01419A  006F FF8F FFDA     	movff	plusw1,fsr2h
 27274  0141A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 27275  0141A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 27276  0141AC                     	if	0	;tblptru may be non-zero
 27277  0141AC                     	endif
 27278  0141AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27279  0141AC  0E00               	movlw	low (__mediumconst shr (0+16))
 27280  0141AE  6EF8               	movwf	tblptru,c
 27281  0141B0                     	endif
 27282                           
 27283                           ;stkvar	_c @ sp[(-32)+31]
 27284  0141B0  0008               	tblrd		*
 27285  0141B2  0EFF               	movlw	-1
 27286  0141B4  006F FFD7 FFE3     	movff	tablat,plusw1
 27287                           
 27288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 27289                           ;stkvar	_fmt @ sp[(-32)+-4]
 27290  0141BA  0EDC               	movlw	-36
 27291  0141BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27292  0141C2  0EDD               	movlw	-35
 27293  0141C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27294  0141CA  2ADE               	incf	postinc2,f,c
 27295  0141CC  0E00               	movlw	0
 27296  0141CE  22DD               	addwfc	postdec2,f,c
 27297                           
 27298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 27299                           ;stkvar	_ap @ sp[(-32)+-6]
 27300  0141D0  0EDA               	movlw	-38
 27301  0141D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27302  0141D8  0EDB               	movlw	-37
 27303  0141DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27304  0141E0  0E04               	movlw	4
 27305  0141E2  5EDE               	subwf	postinc2,f,c
 27306  0141E4  0E00               	movlw	0
 27307  0141E6  5ADD               	subwfb	postdec2,f,c
 27308  0141E8  006F FF78  F034    	movff	postinc2,btemp+10
 27309  0141EE  006F FF74  F035    	movff	postdec2,btemp+11
 27310  0141F4  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27311  0141FA  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27312  014200  006F FF78  F032    	movff	postinc2,btemp+8
 27313  014206  006F FF78  F033    	movff	postinc2,btemp+9
 27314  01420C  006F FF78  F034    	movff	postinc2,btemp+10
 27315  014212  006F FF78  F035    	movff	postinc2,btemp+11
 27316                           
 27317                           ;stkvar	_f @ sp[(-32)+22]
 27318  014218  0EF6               	movlw	-10
 27319  01421A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27320  014220  0EF7               	movlw	-9
 27321  014222  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27322  014228  0EF8               	movlw	-8
 27323  01422A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27324  014230  0EF9               	movlw	-7
 27325  014232  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27326  014238                     l16308:
 27327                           
 27328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 27329                           ;stkvar	_c @ sp[(-32)+31]
 27330  014238  0EFF               	movlw	-1
 27331  01423A  50E3               	movf	plusw1,w,c
 27332  01423C  6EE6               	movwf	postinc1,c
 27333                           
 27334                           ;stkvar	_f @ sp[(-33)+22]
 27335  01423E  0EF5               	movlw	-11
 27336  014240  006F FF8F FFE6     	movff	plusw1,postinc1
 27337  014246  006F FF8F FFE6     	movff	plusw1,postinc1
 27338  01424C  006F FF8F FFE6     	movff	plusw1,postinc1
 27339  014252  006F FF8F FFE6     	movff	plusw1,postinc1
 27340                           
 27341                           ;stkvar	_fp @ sp[(-37)+-2]
 27342  014258  0ED9               	movlw	-39
 27343  01425A  006F FF8F FFE6     	movff	plusw1,postinc1
 27344  014260  006F FF8F FFE6     	movff	plusw1,postinc1
 27345  014266  EC90  F08B         	call	_efgtoa	;wreg free
 27346  01426A  D3B6               	goto	l2695
 27347  01426C                     l16312:
 27348                           
 27349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 27350  01426C  0E02               	movlw	2
 27351  01426E  6EE6               	movwf	postinc1,c
 27352  014270  0E00               	movlw	0
 27353  014272  6EE6               	movwf	postinc1,c
 27354  014274  0EF0               	movlw	low STR_113
 27355  014276  6EE6               	movwf	postinc1,c
 27356  014278  0EFF               	movlw	high STR_113
 27357  01427A  6EE6               	movwf	postinc1,c
 27358                           
 27359                           ;stkvar	_ct @ sp[(-36)+26]
 27360  01427C  0EF6               	movlw	246
 27361  01427E  24E1               	addwf	fsr1l,w,c
 27362  014280  6E2A               	movwf	btemp^0,c
 27363  014282  0EFF               	movlw	255
 27364  014284  20E2               	addwfc	fsr1h,w,c
 27365  014286  6E2B               	movwf	(btemp+1)^0,c
 27366  014288  0060  F0AB  FFE6   	movff	btemp,postinc1
 27367  01428E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 27368  014294  EC74  F0E9         	call	_strncmp	;wreg free
 27369  014298  502A               	movf	btemp^0,w,c
 27370  01429A  102B               	iorwf	(btemp+1)^0,w,c
 27371  01429C  A4D8               	btfss	status,2,c
 27372  01429E  D096               	goto	l16332
 27373                           
 27374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 27375                           ;stkvar	_fmt @ sp[(-32)+-4]
 27376  0142A0  0EDC               	movlw	-36
 27377  0142A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27378  0142A8  0EDD               	movlw	-35
 27379  0142AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27380  0142B0  006F FF78  F034    	movff	postinc2,btemp+10
 27381  0142B6  006F FF74  F035    	movff	postdec2,btemp+11
 27382  0142BC  0E01               	movlw	1
 27383  0142BE  2634               	addwf	(btemp+10)^0,f,c
 27384  0142C0  0E00               	movlw	0
 27385  0142C2  2235               	addwfc	(btemp+11)^0,f,c
 27386  0142C4  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27387  0142CA  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27388  0142D0                     	if	0	;tblptru may be non-zero
 27389  0142D0                     	endif
 27390  0142D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27391  0142D0  0E00               	movlw	low (__mediumconst shr (0+16))
 27392  0142D2  6EF8               	movwf	tblptru,c
 27393  0142D4                     	endif
 27394                           
 27395                           ;stkvar	_c @ sp[(-32)+31]
 27396  0142D4  0008               	tblrd		*
 27397  0142D6  0EFF               	movlw	-1
 27398  0142D8  006F FFD7 FFE3     	movff	tablat,plusw1
 27399  0142DE  0EBF               	movlw	191
 27400  0142E0  6E34               	movwf	(btemp+10)^0,c
 27401  0142E2  0EFF               	movlw	255
 27402  0142E4  6E35               	movwf	(btemp+11)^0,c
 27403                           
 27404                           ;stkvar	_fmt @ sp[(-32)+-4]
 27405  0142E6  0EDC               	movlw	-36
 27406  0142E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27407  0142EE  0EDD               	movlw	-35
 27408  0142F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27409  0142F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27410  0142FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27411  014302                     	if	0	;tblptru may be non-zero
 27412  014302                     	endif
 27413  014302                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27414  014302  0E00               	movlw	low (__mediumconst shr (0+16))
 27415  014304  6EF8               	movwf	tblptru,c
 27416  014306                     	endif
 27417  014306  0008               	tblrd		*
 27418  014308  50F5               	movf	tablat,w,c
 27419  01430A  6E32               	movwf	(btemp+8)^0,c
 27420  01430C  6A33               	clrf	(btemp+9)^0,c
 27421  01430E  5034               	movf	(btemp+10)^0,w,c
 27422  014310  2632               	addwf	(btemp+8)^0,f,c
 27423  014312  5035               	movf	(btemp+11)^0,w,c
 27424  014314  2233               	addwfc	(btemp+9)^0,f,c
 27425  014316  5033               	movf	(btemp+9)^0,w,c
 27426  014318  E106               	bnz	u15910
 27427  01431A  0E1A               	movlw	26
 27428  01431C  5C32               	subwf	(btemp+8)^0,w,c
 27429  01431E  B0D8               	btfsc	status,0,c
 27430  014320  D002               	goto	u15910
 27431  014322  0E01               	movlw	1
 27432  014324  D001               	goto	u15920
 27433  014326                     u15910:
 27434  014326  0E00               	movlw	0
 27435  014328                     u15920:
 27436  014328  6E34               	movwf	(btemp+10)^0,c
 27437  01432A  6A35               	clrf	(btemp+11)^0,c
 27438                           
 27439                           ;stkvar	_vfpfcnvrt$6679 @ sp[(-32)+2]
 27440  01432C  0EE2               	movlw	-30
 27441  01432E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27442  014334  0EE3               	movlw	-29
 27443  014336  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27444                           
 27445                           ;stkvar	_vfpfcnvrt$6679 @ sp[(-32)+2]
 27446  01433C  0EE2               	movlw	-30
 27447  01433E  006F FF8C  F02A    	movff	plusw1,btemp
 27448  014344  0EE3               	movlw	-29
 27449  014346  50E3               	movf	plusw1,w,c
 27450  014348  102A               	iorwf	btemp^0,w,c
 27451                           
 27452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 27453                           ;stkvar	_ap @ sp[(-32)+-6]
 27454                           
 27455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 27456                           
 27457                           ;stkvar	_f @ sp[(-32)+22]
 27458                           
 27459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 27460                           ;stkvar	_ap @ sp[(-32)+-6]
 27461  01434A  0EDA               	movlw	-38
 27462  01434C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27463  014352  0EDB               	movlw	-37
 27464  014354  006F FF8F FFDA     	movff	plusw1,fsr2h
 27465  01435A  0E04               	movlw	4
 27466  01435C  5EDE               	subwf	postinc2,f,c
 27467  01435E  0E00               	movlw	0
 27468  014360  5ADD               	subwfb	postdec2,f,c
 27469  014362  006F FF78  F034    	movff	postinc2,btemp+10
 27470  014368  006F FF74  F035    	movff	postdec2,btemp+11
 27471  01436E  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27472  014374  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27473  01437A  006F FF78  F032    	movff	postinc2,btemp+8
 27474  014380  006F FF78  F033    	movff	postinc2,btemp+9
 27475  014386  006F FF78  F034    	movff	postinc2,btemp+10
 27476  01438C  006F FF78  F035    	movff	postinc2,btemp+11
 27477                           
 27478                           ;stkvar	_f @ sp[(-32)+22]
 27479  014392  0EF6               	movlw	-10
 27480  014394  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 27481  01439A  0EF7               	movlw	-9
 27482  01439C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 27483  0143A2  0EF8               	movlw	-8
 27484  0143A4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27485  0143AA  0EF9               	movlw	-7
 27486  0143AC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27487                           
 27488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 27489                           ;stkvar	_fmt @ sp[(-32)+-4]
 27490  0143B2  0EDC               	movlw	-36
 27491  0143B4  006F FF8F FFD9     	movff	plusw1,fsr2l
 27492  0143BA  0EDD               	movlw	-35
 27493  0143BC  006F FF8F FFDA     	movff	plusw1,fsr2h
 27494  0143C2  0E02               	movlw	2
 27495  0143C4  26DE               	addwf	postinc2,f,c
 27496  0143C6  0E00               	movlw	0
 27497  0143C8  22DD               	addwfc	postdec2,f,c
 27498  0143CA  D736               	goto	l16308
 27499  0143CC                     l16332:
 27500                           
 27501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 27502                           ;stkvar	_fmt @ sp[(-32)+-4]
 27503  0143CC  0EDC               	movlw	-36
 27504  0143CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27505  0143D4  0EDD               	movlw	-35
 27506  0143D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27507  0143DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 27508  0143E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 27509  0143E8                     	if	0	;tblptru may be non-zero
 27510  0143E8                     	endif
 27511  0143E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27512  0143E8  0E00               	movlw	low (__mediumconst shr (0+16))
 27513  0143EA  6EF8               	movwf	tblptru,c
 27514  0143EC                     	endif
 27515  0143EC  0008               	tblrd		*
 27516  0143EE  50F5               	movf	tablat,w,c
 27517  0143F0  0A73               	xorlw	115
 27518  0143F2  A4D8               	btfss	status,2,c
 27519  0143F4  D042               	goto	l16342
 27520                           
 27521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 27522                           ;stkvar	_fmt @ sp[(-32)+-4]
 27523  0143F6  0EDC               	movlw	-36
 27524  0143F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27525  0143FE  0EDD               	movlw	-35
 27526  014400  006F FF8F FFDA     	movff	plusw1,fsr2h
 27527  014406  2ADE               	incf	postinc2,f,c
 27528  014408  0E00               	movlw	0
 27529  01440A  22DD               	addwfc	postdec2,f,c
 27530                           
 27531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 27532                           ;stkvar	_ap @ sp[(-32)+-6]
 27533  01440C  0EDA               	movlw	-38
 27534  01440E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27535  014414  0EDB               	movlw	-37
 27536  014416  006F FF8F FFDA     	movff	plusw1,fsr2h
 27537  01441C  0E02               	movlw	2
 27538  01441E  5EDE               	subwf	postinc2,f,c
 27539  014420  0E00               	movlw	0
 27540  014422  5ADD               	subwfb	postdec2,f,c
 27541  014424  006F FF78  F034    	movff	postinc2,btemp+10
 27542  01442A  006F FF74  F035    	movff	postdec2,btemp+11
 27543  014430  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27544  014436  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27545  01443C  006F FF78  F034    	movff	postinc2,btemp+10
 27546  014442  006F FF74  F035    	movff	postdec2,btemp+11
 27547                           
 27548                           ;stkvar	_cp @ sp[(-32)+29]
 27549  014448  0EFE               	movlw	-2
 27550  01444A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 27551  014450  0EFD               	movlw	-3
 27552  014452  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 27553                           
 27554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 27555                           ;stkvar	_cp @ sp[(-32)+29]
 27556  014458  0EFD               	movlw	-3
 27557  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 27558  014460  006F FF8F FFE6     	movff	plusw1,postinc1
 27559                           
 27560                           ;stkvar	_fp @ sp[(-34)+-2]
 27561  014466  0EDC               	movlw	-36
 27562  014468  006F FF8F FFE6     	movff	plusw1,postinc1
 27563  01446E  006F FF8F FFE6     	movff	plusw1,postinc1
 27564  014474  EC9E  F0DE         	call	_stoa	;wreg free
 27565  014478  D2AF               	goto	l2695
 27566  01447A                     l16342:
 27567                           
 27568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 27569                           ;stkvar	_fmt @ sp[(-32)+-4]
 27570  01447A  0EDC               	movlw	-36
 27571  01447C  006F FF8F FFD9     	movff	plusw1,fsr2l
 27572  014482  0EDD               	movlw	-35
 27573  014484  006F FF8F FFDA     	movff	plusw1,fsr2h
 27574  01448A  006F FF7B FFF6     	movff	postinc2,tblptrl
 27575  014490  006F FF77 FFF7     	movff	postdec2,tblptrh
 27576  014496                     	if	0	;tblptru may be non-zero
 27577  014496                     	endif
 27578  014496                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27579  014496  0E00               	movlw	low (__mediumconst shr (0+16))
 27580  014498  6EF8               	movwf	tblptru,c
 27581  01449A                     	endif
 27582  01449A  0008               	tblrd		*
 27583  01449C  50F5               	movf	tablat,w,c
 27584  01449E  0A75               	xorlw	117
 27585  0144A0  A4D8               	btfss	status,2,c
 27586  0144A2  D07C               	goto	l16352
 27587                           
 27588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 27589                           ;stkvar	_fmt @ sp[(-32)+-4]
 27590  0144A4  0EDC               	movlw	-36
 27591  0144A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 27592  0144AC  0EDD               	movlw	-35
 27593  0144AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 27594  0144B4  2ADE               	incf	postinc2,f,c
 27595  0144B6  0E00               	movlw	0
 27596  0144B8  22DD               	addwfc	postdec2,f,c
 27597                           
 27598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27599                           ;stkvar	_ap @ sp[(-32)+-6]
 27600  0144BA  0EDA               	movlw	-38
 27601  0144BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 27602  0144C2  0EDB               	movlw	-37
 27603  0144C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 27604  0144CA  0E02               	movlw	2
 27605  0144CC  5EDE               	subwf	postinc2,f,c
 27606  0144CE  0E00               	movlw	0
 27607  0144D0  5ADD               	subwfb	postdec2,f,c
 27608  0144D2  006F FF78  F034    	movff	postinc2,btemp+10
 27609  0144D8  006F FF74  F035    	movff	postdec2,btemp+11
 27610  0144DE  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27611  0144E4  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27612  0144EA  006F FF78  F034    	movff	postinc2,btemp+10
 27613  0144F0  006F FF74  F035    	movff	postdec2,btemp+11
 27614  0144F6  5034               	movf	(btemp+10)^0,w,c
 27615  0144F8  6E3A               	movwf	(btemp+16)^0,c
 27616  0144FA  5035               	movf	(btemp+11)^0,w,c
 27617  0144FC  6E3B               	movwf	(btemp+17)^0,c
 27618  0144FE  6A3C               	clrf	(btemp+18)^0,c
 27619  014500  6A3D               	clrf	(btemp+19)^0,c
 27620  014502  6A3E               	clrf	(btemp+20)^0,c
 27621  014504  6A3F               	clrf	(btemp+21)^0,c
 27622  014506  6A40               	clrf	(btemp+22)^0,c
 27623  014508  6A41               	clrf	(btemp+23)^0,c
 27624                           
 27625                           ;stkvar	_llu @ sp[(-32)+6]
 27626  01450A  0EE6               	movlw	-26
 27627  01450C  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27628  014512  0EE7               	movlw	-25
 27629  014514  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27630  01451A  0EE8               	movlw	-24
 27631  01451C  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27632  014522  0EE9               	movlw	-23
 27633  014524  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27634  01452A  0EEA               	movlw	-22
 27635  01452C  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27636  014532  0EEB               	movlw	-21
 27637  014534  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27638  01453A  0EEC               	movlw	-20
 27639  01453C  0060  F103  FFE3   	movff	btemp+22,plusw1
 27640  014542  0EED               	movlw	-19
 27641  014544  0060  F107  FFE3   	movff	btemp+23,plusw1
 27642                           
 27643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 27644                           ;stkvar	_llu @ sp[(-32)+6]
 27645  01454A  50E1               	movf	fsr1l,w,c
 27646  01454C  0FE6               	addlw	-26
 27647  01454E  6ED9               	movwf	fsr2l,c
 27648  014550  50E2               	movf	fsr1h,w,c
 27649  014552  6EDA               	movwf	fsr2h,c
 27650  014554  0EFF               	movlw	255
 27651  014556  22DA               	addwfc	fsr2h,f,c
 27652  014558  006F FF7B FFE6     	movff	postinc2,postinc1
 27653  01455E  006F FF7B FFE6     	movff	postinc2,postinc1
 27654  014564  006F FF7B FFE6     	movff	postinc2,postinc1
 27655  01456A  006F FF7B FFE6     	movff	postinc2,postinc1
 27656  014570  006F FF7B FFE6     	movff	postinc2,postinc1
 27657  014576  006F FF7B FFE6     	movff	postinc2,postinc1
 27658  01457C  006F FF7B FFE6     	movff	postinc2,postinc1
 27659  014582  006F FF7B FFE6     	movff	postinc2,postinc1
 27660                           
 27661                           ;stkvar	_fp @ sp[(-40)+-2]
 27662  014588  0ED6               	movlw	-42
 27663  01458A  006F FF8F FFE6     	movff	plusw1,postinc1
 27664  014590  006F FF8F FFE6     	movff	plusw1,postinc1
 27665  014596  EC31  F0D7         	call	_utoa	;wreg free
 27666  01459A  D21E               	goto	l2695
 27667  01459C                     l16352:
 27668                           
 27669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 27670  01459C  0E02               	movlw	2
 27671  01459E  6EE6               	movwf	postinc1,c
 27672  0145A0  0E00               	movlw	0
 27673  0145A2  6EE6               	movwf	postinc1,c
 27674  0145A4  0EF6               	movlw	low STR_118
 27675  0145A6  6EE6               	movwf	postinc1,c
 27676  0145A8  0EFF               	movlw	high STR_118
 27677  0145AA  6EE6               	movwf	postinc1,c
 27678                           
 27679                           ;stkvar	_fmt @ sp[(-36)+-4]
 27680  0145AC  0ED8               	movlw	-40
 27681  0145AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27682  0145B4  0ED9               	movlw	-39
 27683  0145B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27684  0145BC  006F FF78  F034    	movff	postinc2,btemp+10
 27685  0145C2  006F FF74  F035    	movff	postdec2,btemp+11
 27686  0145C8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27687  0145CE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27688  0145D4  EC74  F0E9         	call	_strncmp	;wreg free
 27689  0145D8  502A               	movf	btemp^0,w,c
 27690  0145DA  102B               	iorwf	(btemp+1)^0,w,c
 27691  0145DC  A4D8               	btfss	status,2,c
 27692  0145DE  D039               	goto	l16362
 27693                           
 27694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 27695                           ;stkvar	_fmt @ sp[(-32)+-4]
 27696  0145E0  0EDC               	movlw	-36
 27697  0145E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27698  0145E8  0EDD               	movlw	-35
 27699  0145EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27700  0145F0  0E02               	movlw	2
 27701  0145F2  26DE               	addwf	postinc2,f,c
 27702  0145F4  0E00               	movlw	0
 27703  0145F6  22DD               	addwfc	postdec2,f,c
 27704                           
 27705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27706                           ;stkvar	_ap @ sp[(-32)+-6]
 27707  0145F8  0EDA               	movlw	-38
 27708  0145FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 27709  014600  0EDB               	movlw	-37
 27710  014602  006F FF8F FFDA     	movff	plusw1,fsr2h
 27711  014608  0E04               	movlw	4
 27712  01460A  5EDE               	subwf	postinc2,f,c
 27713  01460C  0E00               	movlw	0
 27714  01460E  5ADD               	subwfb	postdec2,f,c
 27715  014610  006F FF78  F034    	movff	postinc2,btemp+10
 27716  014616  006F FF74  F035    	movff	postdec2,btemp+11
 27717  01461C  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27718  014622  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27719  014628  006F FF78  F032    	movff	postinc2,btemp+8
 27720  01462E  006F FF78  F033    	movff	postinc2,btemp+9
 27721  014634  006F FF78  F034    	movff	postinc2,btemp+10
 27722  01463A  006F FF78  F035    	movff	postinc2,btemp+11
 27723  014640  5032               	movf	(btemp+8)^0,w,c
 27724  014642  6E3A               	movwf	(btemp+16)^0,c
 27725  014644  5033               	movf	(btemp+9)^0,w,c
 27726  014646  6E3B               	movwf	(btemp+17)^0,c
 27727  014648  5034               	movf	(btemp+10)^0,w,c
 27728  01464A  6E3C               	movwf	(btemp+18)^0,c
 27729  01464C  5035               	movf	(btemp+11)^0,w,c
 27730  01464E  6E3D               	movwf	(btemp+19)^0,c
 27731  014650  D758               	goto	L25
 27732  014652                     l16362:
 27733                           
 27734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 27735                           ;stkvar	_fmt @ sp[(-32)+-4]
 27736  014652  0EDC               	movlw	-36
 27737  014654  006F FF8F FFD9     	movff	plusw1,fsr2l
 27738  01465A  0EDD               	movlw	-35
 27739  01465C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27740  014662  006F FF7B FFF6     	movff	postinc2,tblptrl
 27741  014668  006F FF77 FFF7     	movff	postdec2,tblptrh
 27742  01466E                     	if	0	;tblptru may be non-zero
 27743  01466E                     	endif
 27744  01466E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27745  01466E  0E00               	movlw	low (__mediumconst shr (0+16))
 27746  014670  6EF8               	movwf	tblptru,c
 27747  014672                     	endif
 27748  014672  0008               	tblrd		*
 27749  014674  50F5               	movf	tablat,w,c
 27750  014676  0A78               	xorlw	120
 27751  014678  B4D8               	btfsc	status,2,c
 27752  01467A  D015               	goto	u15980
 27753                           
 27754                           ;stkvar	_fmt @ sp[(-32)+-4]
 27755  01467C  0EDC               	movlw	-36
 27756  01467E  006F FF8F FFD9     	movff	plusw1,fsr2l
 27757  014684  0EDD               	movlw	-35
 27758  014686  006F FF8F FFDA     	movff	plusw1,fsr2h
 27759  01468C  006F FF7B FFF6     	movff	postinc2,tblptrl
 27760  014692  006F FF77 FFF7     	movff	postdec2,tblptrh
 27761  014698                     	if	0	;tblptru may be non-zero
 27762  014698                     	endif
 27763  014698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27764  014698  0E00               	movlw	low (__mediumconst shr (0+16))
 27765  01469A  6EF8               	movwf	tblptru,c
 27766  01469C                     	endif
 27767  01469C  0008               	tblrd		*
 27768  01469E  50F5               	movf	tablat,w,c
 27769  0146A0  0A58               	xorlw	88
 27770  0146A2  A4D8               	btfss	status,2,c
 27771  0146A4  D094               	goto	l16376
 27772  0146A6                     u15980:
 27773                           
 27774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 27775                           ;stkvar	_fmt @ sp[(-32)+-4]
 27776  0146A6  0EDC               	movlw	-36
 27777  0146A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27778  0146AE  0EDD               	movlw	-35
 27779  0146B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27780  0146B6  006F FF7B FFF6     	movff	postinc2,tblptrl
 27781  0146BC  006F FF77 FFF7     	movff	postdec2,tblptrh
 27782  0146C2                     	if	0	;tblptru may be non-zero
 27783  0146C2                     	endif
 27784  0146C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27785  0146C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27786  0146C4  6EF8               	movwf	tblptru,c
 27787  0146C6                     	endif
 27788                           
 27789                           ;stkvar	_c @ sp[(-32)+31]
 27790  0146C6  0008               	tblrd		*
 27791  0146C8  0EFF               	movlw	-1
 27792  0146CA  006F FFD7 FFE3     	movff	tablat,plusw1
 27793                           
 27794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 27795                           ;stkvar	_fmt @ sp[(-32)+-4]
 27796  0146D0  0EDC               	movlw	-36
 27797  0146D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 27798  0146D8  0EDD               	movlw	-35
 27799  0146DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 27800  0146E0  2ADE               	incf	postinc2,f,c
 27801  0146E2  0E00               	movlw	0
 27802  0146E4  22DD               	addwfc	postdec2,f,c
 27803                           
 27804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 27805                           ;stkvar	_ap @ sp[(-32)+-6]
 27806  0146E6  0EDA               	movlw	-38
 27807  0146E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 27808  0146EE  0EDB               	movlw	-37
 27809  0146F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 27810  0146F6  0E02               	movlw	2
 27811  0146F8  5EDE               	subwf	postinc2,f,c
 27812  0146FA  0E00               	movlw	0
 27813  0146FC  5ADD               	subwfb	postdec2,f,c
 27814  0146FE  006F FF78  F034    	movff	postinc2,btemp+10
 27815  014704  006F FF74  F035    	movff	postdec2,btemp+11
 27816  01470A  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27817  014710  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27818  014716  006F FF78  F034    	movff	postinc2,btemp+10
 27819  01471C  006F FF74  F035    	movff	postdec2,btemp+11
 27820  014722  5034               	movf	(btemp+10)^0,w,c
 27821  014724  6E3A               	movwf	(btemp+16)^0,c
 27822  014726  5035               	movf	(btemp+11)^0,w,c
 27823  014728  6E3B               	movwf	(btemp+17)^0,c
 27824  01472A  6A3C               	clrf	(btemp+18)^0,c
 27825  01472C  6A3D               	clrf	(btemp+19)^0,c
 27826  01472E  6A3E               	clrf	(btemp+20)^0,c
 27827  014730  6A3F               	clrf	(btemp+21)^0,c
 27828  014732  6A40               	clrf	(btemp+22)^0,c
 27829  014734  6A41               	clrf	(btemp+23)^0,c
 27830                           
 27831                           ;stkvar	_llu @ sp[(-32)+6]
 27832  014736  0EE6               	movlw	-26
 27833  014738  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 27834  01473E  0EE7               	movlw	-25
 27835  014740  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 27836  014746  0EE8               	movlw	-24
 27837  014748  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 27838  01474E  0EE9               	movlw	-23
 27839  014750  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 27840  014756  0EEA               	movlw	-22
 27841  014758  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 27842  01475E  0EEB               	movlw	-21
 27843  014760  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 27844  014766  0EEC               	movlw	-20
 27845  014768  0060  F103  FFE3   	movff	btemp+22,plusw1
 27846  01476E  0EED               	movlw	-19
 27847  014770  0060  F107  FFE3   	movff	btemp+23,plusw1
 27848                           
 27849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 27850                           ;stkvar	_c @ sp[(-32)+31]
 27851  014776  0EFF               	movlw	-1
 27852  014778  50E3               	movf	plusw1,w,c
 27853  01477A  6EE6               	movwf	postinc1,c
 27854                           
 27855                           ;stkvar	_llu @ sp[(-33)+6]
 27856  01477C  50E1               	movf	fsr1l,w,c
 27857  01477E  0FE5               	addlw	-27
 27858  014780  6ED9               	movwf	fsr2l,c
 27859  014782  50E2               	movf	fsr1h,w,c
 27860  014784  6EDA               	movwf	fsr2h,c
 27861  014786  0EFF               	movlw	255
 27862  014788  22DA               	addwfc	fsr2h,f,c
 27863  01478A  006F FF7B FFE6     	movff	postinc2,postinc1
 27864  014790  006F FF7B FFE6     	movff	postinc2,postinc1
 27865  014796  006F FF7B FFE6     	movff	postinc2,postinc1
 27866  01479C  006F FF7B FFE6     	movff	postinc2,postinc1
 27867  0147A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27868  0147A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27869  0147AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27870  0147B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27871                           
 27872                           ;stkvar	_fp @ sp[(-41)+-2]
 27873  0147BA  0ED5               	movlw	-43
 27874  0147BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27875  0147C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27876  0147C8  ECE4  F0D1         	call	_xtoa	;wreg free
 27877  0147CC  D105               	goto	l2695
 27878  0147CE                     l16376:
 27879                           
 27880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 27881  0147CE  0E02               	movlw	2
 27882  0147D0  6EE6               	movwf	postinc1,c
 27883  0147D2  0E00               	movlw	0
 27884  0147D4  6EE6               	movwf	postinc1,c
 27885  0147D6  0EF9               	movlw	low STR_123
 27886  0147D8  6EE6               	movwf	postinc1,c
 27887  0147DA  0EFF               	movlw	high STR_123
 27888  0147DC  6EE6               	movwf	postinc1,c
 27889                           
 27890                           ;stkvar	_fmt @ sp[(-36)+-4]
 27891  0147DE  0ED8               	movlw	-40
 27892  0147E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 27893  0147E6  0ED9               	movlw	-39
 27894  0147E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 27895  0147EE  006F FF78  F034    	movff	postinc2,btemp+10
 27896  0147F4  006F FF74  F035    	movff	postdec2,btemp+11
 27897  0147FA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27898  014800  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27899  014806  EC74  F0E9         	call	_strncmp	;wreg free
 27900  01480A  502A               	movf	btemp^0,w,c
 27901  01480C  102B               	iorwf	(btemp+1)^0,w,c
 27902  01480E  B4D8               	btfsc	status,2,c
 27903  014810  D022               	goto	u16000
 27904  014812  0E02               	movlw	2
 27905  014814  6EE6               	movwf	postinc1,c
 27906  014816  0E00               	movlw	0
 27907  014818  6EE6               	movwf	postinc1,c
 27908  01481A  0EEA               	movlw	low STR_127
 27909  01481C  6EE6               	movwf	postinc1,c
 27910  01481E  0EFF               	movlw	high STR_127
 27911  014820  6EE6               	movwf	postinc1,c
 27912                           
 27913                           ;stkvar	_fmt @ sp[(-36)+-4]
 27914  014822  0ED8               	movlw	-40
 27915  014824  006F FF8F FFD9     	movff	plusw1,fsr2l
 27916  01482A  0ED9               	movlw	-39
 27917  01482C  006F FF8F FFDA     	movff	plusw1,fsr2h
 27918  014832  006F FF78  F034    	movff	postinc2,btemp+10
 27919  014838  006F FF74  F035    	movff	postdec2,btemp+11
 27920  01483E  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 27921  014844  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 27922  01484A  EC74  F0E9         	call	_strncmp	;wreg free
 27923  01484E  502A               	movf	btemp^0,w,c
 27924  014850  102B               	iorwf	(btemp+1)^0,w,c
 27925  014852  A4D8               	btfss	status,2,c
 27926  014854  D058               	goto	l16390
 27927  014856                     u16000:
 27928                           
 27929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 27930                           ;stkvar	_fmt @ sp[(-32)+-4]
 27931  014856  0EDC               	movlw	-36
 27932  014858  006F FF8F FFD9     	movff	plusw1,fsr2l
 27933  01485E  0EDD               	movlw	-35
 27934  014860  006F FF8F FFDA     	movff	plusw1,fsr2h
 27935  014866  006F FF78  F034    	movff	postinc2,btemp+10
 27936  01486C  006F FF74  F035    	movff	postdec2,btemp+11
 27937  014872  0E01               	movlw	1
 27938  014874  2634               	addwf	(btemp+10)^0,f,c
 27939  014876  0E00               	movlw	0
 27940  014878  2235               	addwfc	(btemp+11)^0,f,c
 27941  01487A  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 27942  014880  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 27943  014886                     	if	0	;tblptru may be non-zero
 27944  014886                     	endif
 27945  014886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27946  014886  0E00               	movlw	low (__mediumconst shr (0+16))
 27947  014888  6EF8               	movwf	tblptru,c
 27948  01488A                     	endif
 27949                           
 27950                           ;stkvar	_c @ sp[(-32)+31]
 27951  01488A  0008               	tblrd		*
 27952  01488C  0EFF               	movlw	-1
 27953  01488E  006F FFD7 FFE3     	movff	tablat,plusw1
 27954                           
 27955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 27956                           ;stkvar	_fmt @ sp[(-32)+-4]
 27957  014894  0EDC               	movlw	-36
 27958  014896  006F FF8F FFD9     	movff	plusw1,fsr2l
 27959  01489C  0EDD               	movlw	-35
 27960  01489E  006F FF8F FFDA     	movff	plusw1,fsr2h
 27961  0148A4  0E02               	movlw	2
 27962  0148A6  26DE               	addwf	postinc2,f,c
 27963  0148A8  0E00               	movlw	0
 27964  0148AA  22DD               	addwfc	postdec2,f,c
 27965                           
 27966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 27967                           ;stkvar	_ap @ sp[(-32)+-6]
 27968  0148AC  0EDA               	movlw	-38
 27969  0148AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 27970  0148B4  0EDB               	movlw	-37
 27971  0148B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 27972  0148BC  0E04               	movlw	4
 27973  0148BE  5EDE               	subwf	postinc2,f,c
 27974  0148C0  0E00               	movlw	0
 27975  0148C2  5ADD               	subwfb	postdec2,f,c
 27976  0148C4  006F FF78  F034    	movff	postinc2,btemp+10
 27977  0148CA  006F FF74  F035    	movff	postdec2,btemp+11
 27978  0148D0  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 27979  0148D6  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 27980  0148DC  006F FF78  F032    	movff	postinc2,btemp+8
 27981  0148E2  006F FF78  F033    	movff	postinc2,btemp+9
 27982  0148E8  006F FF78  F034    	movff	postinc2,btemp+10
 27983  0148EE  006F FF78  F035    	movff	postinc2,btemp+11
 27984  0148F4  5032               	movf	(btemp+8)^0,w,c
 27985  0148F6  6E3A               	movwf	(btemp+16)^0,c
 27986  0148F8  5033               	movf	(btemp+9)^0,w,c
 27987  0148FA  6E3B               	movwf	(btemp+17)^0,c
 27988  0148FC  5034               	movf	(btemp+10)^0,w,c
 27989  0148FE  6E3C               	movwf	(btemp+18)^0,c
 27990  014900  5035               	movf	(btemp+11)^0,w,c
 27991  014902  6E3D               	movwf	(btemp+19)^0,c
 27992  014904  D714               	goto	L26
 27993  014906                     l16390:
 27994                           
 27995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 27996                           ;stkvar	_fmt @ sp[(-32)+-4]
 27997  014906  0EDC               	movlw	-36
 27998  014908  006F FF8F FFD9     	movff	plusw1,fsr2l
 27999  01490E  0EDD               	movlw	-35
 28000  014910  006F FF8F FFDA     	movff	plusw1,fsr2h
 28001  014916  006F FF7B FFF6     	movff	postinc2,tblptrl
 28002  01491C  006F FF77 FFF7     	movff	postdec2,tblptrh
 28003  014922                     	if	0	;tblptru may be non-zero
 28004  014922                     	endif
 28005  014922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28006  014922  0E00               	movlw	low (__mediumconst shr (0+16))
 28007  014924  6EF8               	movwf	tblptru,c
 28008  014926                     	endif
 28009  014926  0008               	tblrd		*
 28010  014928  50F5               	movf	tablat,w,c
 28011  01492A  0A25               	xorlw	37
 28012  01492C  A4D8               	btfss	status,2,c
 28013  01492E  D01A               	goto	l16400
 28014                           
 28015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 28016                           ;stkvar	_fmt @ sp[(-32)+-4]
 28017  014930  0EDC               	movlw	-36
 28018  014932  006F FF8F FFD9     	movff	plusw1,fsr2l
 28019  014938  0EDD               	movlw	-35
 28020  01493A  006F FF8F FFDA     	movff	plusw1,fsr2h
 28021  014940  2ADE               	incf	postinc2,f,c
 28022  014942  0E00               	movlw	0
 28023  014944  22DD               	addwfc	postdec2,f,c
 28024                           
 28025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 28026                           ;stkvar	_fp @ sp[(-32)+-2]
 28027  014946  0EDE               	movlw	-34
 28028  014948  006F FF8F FFE6     	movff	plusw1,postinc1
 28029  01494E  006F FF8F FFE6     	movff	plusw1,postinc1
 28030  014954  0E25               	movlw	37
 28031  014956  6EE6               	movwf	postinc1,c
 28032  014958  0E00               	movlw	0
 28033  01495A  6EE6               	movwf	postinc1,c
 28034  01495C  EC24  F0FC         	call	_fputc	;wreg free
 28035  014960                     l16396:
 28036                           
 28037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 28038  014960  0E01               	movlw	1
 28039  014962  D00C               	goto	L27
 28040  014964                     l16400:
 28041                           
 28042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 28043                           ;stkvar	_fmt @ sp[(-32)+-4]
 28044  014964  0EDC               	movlw	-36
 28045  014966  006F FF8F FFD9     	movff	plusw1,fsr2l
 28046  01496C  0EDD               	movlw	-35
 28047  01496E  006F FF8F FFDA     	movff	plusw1,fsr2h
 28048  014974  2ADE               	incf	postinc2,f,c
 28049  014976  0E00               	movlw	0
 28050  014978  22DD               	addwfc	postdec2,f,c
 28051                           
 28052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 28053  01497A  0E00               	movlw	0
 28054  01497C                     L27:
 28055  01497C  6E2A               	movwf	btemp^0,c
 28056  01497E  0E00               	movlw	0
 28057  014980  6E2B               	movwf	(btemp+1)^0,c
 28058  014982  D02A               	goto	l2695
 28059  014984                     l16406:
 28060                           
 28061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 28062                           ;stkvar	_fp @ sp[(-32)+-2]
 28063  014984  0EDE               	movlw	-34
 28064  014986  006F FF8F FFE6     	movff	plusw1,postinc1
 28065  01498C  006F FF8F FFE6     	movff	plusw1,postinc1
 28066                           
 28067                           ;stkvar	_fmt @ sp[(-34)+-4]
 28068  014992  0EDA               	movlw	-38
 28069  014994  006F FF8F FFD9     	movff	plusw1,fsr2l
 28070  01499A  0EDB               	movlw	-37
 28071  01499C  006F FF8F FFDA     	movff	plusw1,fsr2h
 28072  0149A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 28073  0149A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 28074  0149AE                     	if	0	;tblptru may be non-zero
 28075  0149AE                     	endif
 28076  0149AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28077  0149AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28078  0149B0  6EF8               	movwf	tblptru,c
 28079  0149B2                     	endif
 28080  0149B2  0008               	tblrd		*
 28081  0149B4  50F5               	movf	tablat,w,c
 28082  0149B6  6EE6               	movwf	postinc1,c
 28083  0149B8  0E00               	movlw	0
 28084  0149BA  6EE6               	movwf	postinc1,c
 28085  0149BC  EC24  F0FC         	call	_fputc	;wreg free
 28086                           
 28087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 28088                           ;stkvar	_fmt @ sp[(-32)+-4]
 28089  0149C0  0EDC               	movlw	-36
 28090  0149C2  006F FF8F FFD9     	movff	plusw1,fsr2l
 28091  0149C8  0EDD               	movlw	-35
 28092  0149CA  006F FF8F FFDA     	movff	plusw1,fsr2h
 28093  0149D0  2ADE               	incf	postinc2,f,c
 28094  0149D2  0E00               	movlw	0
 28095  0149D4  22DD               	addwfc	postdec2,f,c
 28096  0149D6  D7C4               	goto	l16396
 28097  0149D8                     l2695:
 28098                           
 28099                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 28100  0149D8  0EDA               	movlw	218
 28101  0149DA  26E1               	addwf	fsr1l,f,c
 28102  0149DC  0EFF               	movlw	255
 28103  0149DE  22E2               	addwfc	fsr1h,f,c
 28104  0149E0  0012               	return		;funcret
 28105  0149E2                     __end_of_vfpfcnvrt:
 28106                           	opt callstack 0
 28107                           
 28108 ;; *************** function _xtoa *****************
 28109 ;; Defined at:
 28110 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28111 ;; Parameters:    Size  Location     Type
 28112 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28113 ;;		 -> f(6), NULL(0), 
 28114 ;;  d               8  [STACK] unsigned long long 
 28115 ;;  x               1  [STACK] unsigned char 
 28116 ;; Auto vars:     Size  Location     Type
 28117 ;;  n               8  [STACK] unsigned long long 
 28118 ;;  c               2  [STACK] int 
 28119 ;;  i               2  [STACK] int 
 28120 ;;  w               2  [STACK] int 
 28121 ;;  p               2  [STACK] int 
 28122 ;; Return value:  Size  Location     Type
 28123 ;;                  2  [STACK] int 
 28124 ;; Registers used:
 28125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28126 ;; Tracked objects:
 28127 ;;		On entry : 0/0
 28128 ;;		On exit  : 0/0
 28129 ;;		Unchanged: 0/0
 28130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28135 ;;Total ram usage:        0 bytes
 28136 ;; Hardware stack levels used:    1
 28137 ;; Hardware stack levels required when called:   20
 28138 ;; This function calls:
 28139 ;;		_isalpha
 28140 ;;		_isupper
 28141 ;;		_pad
 28142 ;;		_toupper
 28143 ;; This function is called by:
 28144 ;;		_vfpfcnvrt
 28145 ;; This function uses a reentrant model
 28146 ;;
 28147                           
 28148                           	psect	text94
 28149  01A3C8                     __ptext94:
 28150                           	opt callstack 0
 28151  01A3C8                     _xtoa:
 28152                           	opt callstack 0
 28153                           
 28154                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28155  01A3C8  0E14               	movlw	20
 28156  01A3CA  26E1               	addwf	fsr1l,f,c
 28157  01A3CC  0E00               	movlw	0
 28158  01A3CE  22E2               	addwfc	fsr1h,f,c
 28159                           
 28160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 28161                           
 28162                           ;incstack = 0
 28163 ;; hardware stack exceeded
 28164  01A3D0  AE4D               	btfss	(_prec+1)^0,7,c
 28165                           
 28166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 28167  01A3D2  924E               	bcf	_flags^0,1,c
 28168                           
 28169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 28170  01A3D4  BE4D               	btfsc	(_prec+1)^0,7,c
 28171  01A3D6  D005               	goto	u15460
 28172  01A3D8  504D               	movf	(_prec+1)^0,w,c
 28173  01A3DA  E110               	bnz	l16060
 28174  01A3DC  044C               	decf	_prec^0,w,c
 28175  01A3DE  B0D8               	btfsc	status,0,c
 28176  01A3E0  D00D               	goto	l16060
 28177  01A3E2                     u15460:
 28178  01A3E2  0E01               	movlw	1
 28179  01A3E4  6E34               	movwf	(btemp+10)^0,c
 28180  01A3E6  0E00               	movlw	0
 28181  01A3E8  6E35               	movwf	(btemp+11)^0,c
 28182                           
 28183                           ;stkvar	_p @ sp[(-20)+18]
 28184  01A3EA  0EFE               	movlw	-2
 28185  01A3EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28186  01A3F2  0EFF               	movlw	-1
 28187  01A3F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28188  01A3FA  D008               	goto	l2645
 28189  01A3FC                     l16060:
 28190                           
 28191                           ;stkvar	_p @ sp[(-20)+18]
 28192  01A3FC  0EFE               	movlw	-2
 28193  01A3FE  0060  F133  FFE3   	movff	_prec,plusw1
 28194  01A404  0EFF               	movlw	-1
 28195  01A406  0060  F137  FFE3   	movff	_prec+1,plusw1
 28196  01A40C                     l2645:
 28197                           
 28198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 28199                           ;stkvar	_w @ sp[(-20)+16]
 28200  01A40C  0EFC               	movlw	-4
 28201  01A40E  0060  F12B  FFE3   	movff	_width,plusw1
 28202  01A414  0EFD               	movlw	-3
 28203  01A416  0060  F12F  FFE3   	movff	_width+1,plusw1
 28204                           
 28205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 28206  01A41C  A84E               	btfss	_flags^0,4,c
 28207  01A41E  D00B               	goto	l16066
 28208                           
 28209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 28210                           ;stkvar	_w @ sp[(-20)+16]
 28211  01A420  50E1               	movf	fsr1l,w,c
 28212  01A422  0FFC               	addlw	-4
 28213  01A424  6ED9               	movwf	fsr2l,c
 28214  01A426  50E2               	movf	fsr1h,w,c
 28215  01A428  6EDA               	movwf	fsr2h,c
 28216  01A42A  0EFF               	movlw	255
 28217  01A42C  22DA               	addwfc	fsr2h,f,c
 28218  01A42E  0EFE               	movlw	254
 28219  01A430  26DE               	addwf	postinc2,f,c
 28220  01A432  0EFF               	movlw	255
 28221  01A434  22DD               	addwfc	postdec2,f,c
 28222  01A436                     l16066:
 28223                           
 28224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 28225                           ;stkvar	_d @ sp[(-20)+-10]
 28226  01A436  0EE2               	movlw	226
 28227  01A438  24E1               	addwf	fsr1l,w,c
 28228  01A43A  6ED9               	movwf	fsr2l,c
 28229  01A43C  0EFF               	movlw	255
 28230  01A43E  20E2               	addwfc	fsr1h,w,c
 28231  01A440  6EDA               	movwf	fsr2h,c
 28232                           
 28233                           ;stkvar	_n @ sp[(-20)+4]
 28234  01A442  0E08               	movlw	8
 28235  01A444  6E2A               	movwf	btemp^0,c
 28236  01A446  0EF0               	movlw	-16
 28237  01A448                     us1548999:
 28238  01A448  006F FF7B FFE3     	movff	postinc2,plusw1
 28239  01A44E  28E8               	incf	wreg,w,c
 28240  01A450  2E2A               	decfsz	btemp^0,f,c
 28241  01A452  D7FA               	bra	us1548999
 28242                           
 28243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 28244  01A454  0E4F               	movlw	79
 28245  01A456  6E34               	movwf	(btemp+10)^0,c
 28246  01A458  0E00               	movlw	0
 28247  01A45A  6E35               	movwf	(btemp+11)^0,c
 28248                           
 28249                           ;stkvar	_i @ sp[(-20)+14]
 28250  01A45C  0EFA               	movlw	-6
 28251  01A45E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28252  01A464  0EFB               	movlw	-5
 28253  01A466  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28254                           
 28255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 28256  01A46C  0103               	movlb	3	; () banked
 28257  01A46E  6BA3               	clrf	(_dbuf+79)& (0+255),b
 28258                           
 28259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28260  01A470  D0EE               	goto	l16104
 28261  01A472                     l16072:
 28262                           
 28263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 28264                           ;stkvar	_i @ sp[(-20)+14]
 28265  01A472  50E1               	movf	fsr1l,w,c
 28266  01A474  0FFA               	addlw	-6
 28267  01A476  6ED9               	movwf	fsr2l,c
 28268  01A478  50E2               	movf	fsr1h,w,c
 28269  01A47A  6EDA               	movwf	fsr2h,c
 28270  01A47C  0EFF               	movlw	255
 28271  01A47E  22DA               	addwfc	fsr2h,f,c
 28272  01A480  06DE               	decf	postinc2,f,c
 28273  01A482  0E00               	movlw	0
 28274  01A484  5ADD               	subwfb	postdec2,f,c
 28275                           
 28276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 28277                           ;stkvar	_n @ sp[(-20)+4]
 28278  01A486  0EF0               	movlw	-16
 28279  01A488  006F FF8C  F034    	movff	plusw1,btemp+10
 28280  01A48E  0EF1               	movlw	-15
 28281  01A490  006F FF8C  F035    	movff	plusw1,btemp+11
 28282  01A496  0E0F               	movlw	15
 28283  01A498  1634               	andwf	(btemp+10)^0,f,c
 28284  01A49A  0E00               	movlw	0
 28285  01A49C  1635               	andwf	(btemp+11)^0,f,c
 28286                           
 28287                           ;stkvar	_c @ sp[(-20)+12]
 28288  01A49E  0EF8               	movlw	-8
 28289  01A4A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28290  01A4A6  0EF9               	movlw	-7
 28291  01A4A8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28292                           
 28293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 28294                           ;stkvar	_c @ sp[(-20)+12]
 28295  01A4AE  0EF9               	movlw	-7
 28296  01A4B0  BEE3               	btfsc	plusw1,7,c
 28297  01A4B2  D00F               	goto	l16080
 28298  01A4B4  0EF9               	movlw	-7
 28299  01A4B6  50E3               	movf	plusw1,w,c
 28300  01A4B8  E108               	bnz	u15490
 28301  01A4BA  0EF8               	movlw	-8
 28302  01A4BC  006F FF8C  F02A    	movff	plusw1,btemp
 28303  01A4C2  0E0A               	movlw	10
 28304  01A4C4  5E2A               	subwf	btemp^0,f,c
 28305  01A4C6  A0D8               	btfss	status,0,c
 28306  01A4C8  D004               	goto	l16080
 28307  01A4CA                     u15490:
 28308                           
 28309                           ;stkvar	_c @ sp[(-20)+12]
 28310  01A4CA  0EF8               	movlw	-8
 28311  01A4CC  50E3               	movf	plusw1,w,c
 28312  01A4CE  0F57               	addlw	87
 28313  01A4D0  D003               	goto	L28
 28314  01A4D2                     l16080:
 28315                           
 28316                           ;stkvar	_c @ sp[(-20)+12]
 28317  01A4D2  0EF8               	movlw	-8
 28318  01A4D4  50E3               	movf	plusw1,w,c
 28319  01A4D6  0F30               	addlw	48
 28320  01A4D8                     L28:
 28321  01A4D8  6E34               	movwf	(btemp+10)^0,c
 28322  01A4DA  0EF9               	movlw	-7
 28323  01A4DC  006F FF8C  F035    	movff	plusw1,btemp+11
 28324  01A4E2  0E00               	movlw	0
 28325  01A4E4  2235               	addwfc	(btemp+11)^0,f,c
 28326                           
 28327                           ;stkvar	_c @ sp[(-20)+12]
 28328  01A4E6  0EF8               	movlw	-8
 28329  01A4E8  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28330  01A4EE  0EF9               	movlw	-7
 28331  01A4F0  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28332  01A4F6  0EBF               	movlw	191
 28333  01A4F8  6E34               	movwf	(btemp+10)^0,c
 28334  01A4FA  0EFF               	movlw	255
 28335  01A4FC  6E35               	movwf	(btemp+11)^0,c
 28336                           
 28337                           ;stkvar	_x @ sp[(-20)+-11]
 28338  01A4FE  0EE1               	movlw	-31
 28339  01A500  50E3               	movf	plusw1,w,c
 28340  01A502  6E32               	movwf	(btemp+8)^0,c
 28341  01A504  6A33               	clrf	(btemp+9)^0,c
 28342  01A506  5034               	movf	(btemp+10)^0,w,c
 28343  01A508  2632               	addwf	(btemp+8)^0,f,c
 28344  01A50A  5035               	movf	(btemp+11)^0,w,c
 28345  01A50C  2233               	addwfc	(btemp+9)^0,f,c
 28346  01A50E  5033               	movf	(btemp+9)^0,w,c
 28347  01A510  E106               	bnz	u15500
 28348  01A512  0E1A               	movlw	26
 28349  01A514  5C32               	subwf	(btemp+8)^0,w,c
 28350  01A516  B0D8               	btfsc	status,0,c
 28351  01A518  D002               	goto	u15500
 28352  01A51A  0E01               	movlw	1
 28353  01A51C  D001               	goto	u15510
 28354  01A51E                     u15500:
 28355  01A51E  0E00               	movlw	0
 28356  01A520                     u15510:
 28357  01A520  6E34               	movwf	(btemp+10)^0,c
 28358  01A522  6A35               	clrf	(btemp+11)^0,c
 28359                           
 28360                           ;stkvar	_xtoa$6652 @ sp[(-20)+2]
 28361  01A524  0EEE               	movlw	-18
 28362  01A526  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28363  01A52C  0EEF               	movlw	-17
 28364  01A52E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28365                           
 28366                           ;stkvar	_xtoa$6652 @ sp[(-20)+2]
 28367  01A534  0EEE               	movlw	-18
 28368  01A536  006F FF8C  F02A    	movff	plusw1,btemp
 28369  01A53C  0EEF               	movlw	-17
 28370  01A53E  50E3               	movf	plusw1,w,c
 28371  01A540  102A               	iorwf	btemp^0,w,c
 28372  01A542  B4D8               	btfsc	status,2,c
 28373  01A544  D041               	goto	l16096
 28374  01A546  0E9F               	movlw	159
 28375  01A548  6E34               	movwf	(btemp+10)^0,c
 28376  01A54A  0EFF               	movlw	255
 28377  01A54C  6E35               	movwf	(btemp+11)^0,c
 28378                           
 28379                           ;stkvar	_c @ sp[(-20)+12]
 28380  01A54E  0EF8               	movlw	-8
 28381  01A550  006F FF8C  F032    	movff	plusw1,btemp+8
 28382  01A556  0EF9               	movlw	-7
 28383  01A558  006F FF8C  F033    	movff	plusw1,btemp+9
 28384  01A55E  0E20               	movlw	32
 28385  01A560  1232               	iorwf	(btemp+8)^0,f,c
 28386  01A562  0E00               	movlw	0
 28387  01A564  1233               	iorwf	(btemp+9)^0,f,c
 28388  01A566  5034               	movf	(btemp+10)^0,w,c
 28389  01A568  2632               	addwf	(btemp+8)^0,f,c
 28390  01A56A  5035               	movf	(btemp+11)^0,w,c
 28391  01A56C  2233               	addwfc	(btemp+9)^0,f,c
 28392  01A56E  5033               	movf	(btemp+9)^0,w,c
 28393  01A570  E106               	bnz	u15530
 28394  01A572  0E1A               	movlw	26
 28395  01A574  5C32               	subwf	(btemp+8)^0,w,c
 28396  01A576  B0D8               	btfsc	status,0,c
 28397  01A578  D002               	goto	u15530
 28398  01A57A  0E01               	movlw	1
 28399  01A57C  D001               	goto	u15540
 28400  01A57E                     u15530:
 28401  01A57E  0E00               	movlw	0
 28402  01A580                     u15540:
 28403  01A580  6E34               	movwf	(btemp+10)^0,c
 28404  01A582  6A35               	clrf	(btemp+11)^0,c
 28405                           
 28406                           ;stkvar	_xtoa$6653 @ sp[(-20)+0]
 28407  01A584  0EEC               	movlw	-20
 28408  01A586  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28409  01A58C  0EED               	movlw	-19
 28410  01A58E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28411                           
 28412                           ;stkvar	_xtoa$6653 @ sp[(-20)+0]
 28413  01A594  0EEC               	movlw	-20
 28414  01A596  006F FF8C  F02A    	movff	plusw1,btemp
 28415  01A59C  0EED               	movlw	-19
 28416  01A59E  50E3               	movf	plusw1,w,c
 28417  01A5A0  102A               	iorwf	btemp^0,w,c
 28418  01A5A2  B4D8               	btfsc	status,2,c
 28419  01A5A4  D011               	goto	l16096
 28420                           
 28421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 28422                           ;stkvar	_c @ sp[(-20)+12]
 28423  01A5A6  0EF8               	movlw	-8
 28424  01A5A8  006F FF8F FFE6     	movff	plusw1,postinc1
 28425  01A5AE  006F FF8F FFE6     	movff	plusw1,postinc1
 28426  01A5B4  ECFE  F009         	call	_toupper	;wreg free
 28427                           
 28428                           ;stkvar	_c @ sp[(-20)+12]
 28429  01A5B8  0EF8               	movlw	-8
 28430  01A5BA  0060  F0AB  FFE3   	movff	btemp,plusw1
 28431  01A5C0  0EF9               	movlw	-7
 28432  01A5C2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 28433  01A5C8                     l16096:
 28434                           
 28435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 28436                           ;stkvar	_c @ sp[(-20)+12]
 28437                           ;stkvar	_i @ sp[(-20)+14]
 28438  01A5C8  0EFA               	movlw	-6
 28439  01A5CA  006F FF8C  F034    	movff	plusw1,btemp+10
 28440  01A5D0  0EFB               	movlw	-5
 28441  01A5D2  006F FF8C  F035    	movff	plusw1,btemp+11
 28442  01A5D8  0E54               	movlw	low _dbuf
 28443  01A5DA  2434               	addwf	(btemp+10)^0,w,c
 28444  01A5DC  6ED9               	movwf	fsr2l,c
 28445  01A5DE  0E03               	movlw	high _dbuf
 28446  01A5E0  2035               	addwfc	(btemp+11)^0,w,c
 28447  01A5E2  6EDA               	movwf	fsr2h,c
 28448  01A5E4  0EF8               	movlw	-8
 28449  01A5E6  006F FF8F FFDF     	movff	plusw1,indf2
 28450                           
 28451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 28452                           ;stkvar	_p @ sp[(-20)+18]
 28453  01A5EC  50E1               	movf	fsr1l,w,c
 28454  01A5EE  0FFE               	addlw	-2
 28455  01A5F0  6ED9               	movwf	fsr2l,c
 28456  01A5F2  50E2               	movf	fsr1h,w,c
 28457  01A5F4  6EDA               	movwf	fsr2h,c
 28458  01A5F6  0EFF               	movlw	255
 28459  01A5F8  22DA               	addwfc	fsr2h,f,c
 28460  01A5FA  06DE               	decf	postinc2,f,c
 28461  01A5FC  0E00               	movlw	0
 28462  01A5FE  5ADD               	subwfb	postdec2,f,c
 28463                           
 28464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 28465                           ;stkvar	_w @ sp[(-20)+16]
 28466  01A600  50E1               	movf	fsr1l,w,c
 28467  01A602  0FFC               	addlw	-4
 28468  01A604  6ED9               	movwf	fsr2l,c
 28469  01A606  50E2               	movf	fsr1h,w,c
 28470  01A608  6EDA               	movwf	fsr2h,c
 28471  01A60A  0EFF               	movlw	255
 28472  01A60C  22DA               	addwfc	fsr2h,f,c
 28473  01A60E  06DE               	decf	postinc2,f,c
 28474  01A610  0E00               	movlw	0
 28475  01A612  5ADD               	subwfb	postdec2,f,c
 28476                           
 28477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 28478  01A614  0E04               	movlw	4
 28479  01A616  6E35               	movwf	(btemp+11)^0,c
 28480                           
 28481                           ;stkvar	_n @ sp[(-20)+4]
 28482  01A618  50E1               	movf	fsr1l,w,c
 28483  01A61A  0FF0               	addlw	-16
 28484  01A61C  6ED9               	movwf	fsr2l,c
 28485  01A61E  50E2               	movf	fsr1h,w,c
 28486  01A620  6EDA               	movwf	fsr2h,c
 28487  01A622  0EFF               	movlw	255
 28488  01A624  22DA               	addwfc	fsr2h,f,c
 28489  01A626  2835               	incf	(btemp+11)^0,w,c
 28490  01A628  52DE               	movf	postinc2,f,c
 28491  01A62A  D00F               	goto	u15560
 28492  01A62C                     u15565:
 28493  01A62C  52DE               	movf	postinc2,f,c
 28494  01A62E  52DE               	movf	postinc2,f,c
 28495  01A630  52DE               	movf	postinc2,f,c
 28496  01A632  52DE               	movf	postinc2,f,c
 28497  01A634  52DE               	movf	postinc2,f,c
 28498  01A636  52DE               	movf	postinc2,f,c
 28499  01A638  90D8               	bcf	status,0,c
 28500  01A63A  32DD               	rrcf	postdec2,f,c
 28501  01A63C  32DD               	rrcf	postdec2,f,c
 28502  01A63E  32DD               	rrcf	postdec2,f,c
 28503  01A640  32DD               	rrcf	postdec2,f,c
 28504  01A642  32DD               	rrcf	postdec2,f,c
 28505  01A644  32DD               	rrcf	postdec2,f,c
 28506  01A646  32DD               	rrcf	postdec2,f,c
 28507  01A648  32DE               	rrcf	postinc2,f,c
 28508  01A64A                     u15560:
 28509  01A64A  2EE8               	decfsz	wreg,f,c
 28510  01A64C  D7EF               	goto	u15565
 28511  01A64E                     l16104:
 28512                           
 28513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 28514                           ;stkvar	_i @ sp[(-20)+14]
 28515  01A64E  0EFB               	movlw	-5
 28516  01A650  BEE3               	btfsc	plusw1,7,c
 28517  01A652  D03A               	goto	u15610
 28518  01A654  0EFB               	movlw	-5
 28519  01A656  50E3               	movf	plusw1,w,c
 28520  01A658  E108               	bnz	u15570
 28521  01A65A  0EFA               	movlw	-6
 28522  01A65C  006F FF8C  F02A    	movff	plusw1,btemp
 28523  01A662  0E02               	movlw	2
 28524  01A664  5E2A               	subwf	btemp^0,f,c
 28525  01A666  A0D8               	btfss	status,0,c
 28526  01A668  D02F               	goto	u15610
 28527  01A66A                     u15570:
 28528                           
 28529                           ;stkvar	_n @ sp[(-20)+4]
 28530  01A66A  0EF0               	movlw	-16
 28531  01A66C  50E3               	movf	plusw1,w,c
 28532  01A66E  E115               	bnz	u15581
 28533  01A670  0EF1               	movlw	-15
 28534  01A672  50E3               	movf	plusw1,w,c
 28535  01A674  E112               	bnz	u15581
 28536  01A676  0EF2               	movlw	-14
 28537  01A678  50E3               	movf	plusw1,w,c
 28538  01A67A  E10F               	bnz	u15581
 28539  01A67C  0EF3               	movlw	-13
 28540  01A67E  50E3               	movf	plusw1,w,c
 28541  01A680  E10C               	bnz	u15581
 28542  01A682  0EF4               	movlw	-12
 28543  01A684  50E3               	movf	plusw1,w,c
 28544  01A686  E109               	bnz	u15581
 28545  01A688  0EF5               	movlw	-11
 28546  01A68A  50E3               	movf	plusw1,w,c
 28547  01A68C  E106               	bnz	u15581
 28548  01A68E  0EF6               	movlw	-10
 28549  01A690  50E3               	movf	plusw1,w,c
 28550  01A692  E103               	bnz	u15581
 28551  01A694  0EF7               	movlw	-9
 28552  01A696  50E3               	movf	plusw1,w,c
 28553  01A698  A4D8               	btfss	status,2,c
 28554  01A69A                     u15581:
 28555  01A69A  D6EB               	goto	l16072
 28556                           
 28557                           ;stkvar	_p @ sp[(-20)+18]
 28558  01A69C  0EFF               	movlw	-1
 28559  01A69E  BEE3               	btfsc	plusw1,7,c
 28560  01A6A0  D007               	goto	u15590
 28561  01A6A2  0EFF               	movlw	-1
 28562  01A6A4  50E3               	movf	plusw1,w,c
 28563  01A6A6  E103               	bnz	u15591
 28564  01A6A8  0EFE               	movlw	-2
 28565  01A6AA  04E3               	decf	plusw1,w,c
 28566  01A6AC  B0D8               	btfsc	status,0,c
 28567  01A6AE                     u15591:
 28568  01A6AE  D6E1               	goto	l16072
 28569  01A6B0                     u15590:
 28570                           
 28571                           ;stkvar	_w @ sp[(-20)+16]
 28572  01A6B0  0EFD               	movlw	-3
 28573  01A6B2  BEE3               	btfsc	plusw1,7,c
 28574  01A6B4  D009               	goto	u15610
 28575  01A6B6  0EFD               	movlw	-3
 28576  01A6B8  50E3               	movf	plusw1,w,c
 28577  01A6BA  E104               	bnz	u15600
 28578  01A6BC  0EFC               	movlw	-4
 28579  01A6BE  04E3               	decf	plusw1,w,c
 28580  01A6C0  A0D8               	btfss	status,0,c
 28581  01A6C2  D002               	goto	u15610
 28582  01A6C4                     u15600:
 28583  01A6C4  B24E               	btfsc	_flags^0,1,c
 28584  01A6C6  D6D5               	goto	l16072
 28585  01A6C8                     u15610:
 28586                           
 28587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 28588  01A6C8  A84E               	btfss	_flags^0,4,c
 28589  01A6CA  D036               	goto	l16120
 28590                           
 28591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 28592                           ;stkvar	_i @ sp[(-20)+14]
 28593  01A6CC  50E1               	movf	fsr1l,w,c
 28594  01A6CE  0FFA               	addlw	-6
 28595  01A6D0  6ED9               	movwf	fsr2l,c
 28596  01A6D2  50E2               	movf	fsr1h,w,c
 28597  01A6D4  6EDA               	movwf	fsr2h,c
 28598  01A6D6  0EFF               	movlw	255
 28599  01A6D8  22DA               	addwfc	fsr2h,f,c
 28600  01A6DA  06DE               	decf	postinc2,f,c
 28601  01A6DC  0E00               	movlw	0
 28602  01A6DE  5ADD               	subwfb	postdec2,f,c
 28603                           
 28604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 28605                           ;stkvar	_x @ sp[(-20)+-11]
 28606                           ;stkvar	_i @ sp[(-20)+14]
 28607  01A6E0  0EFA               	movlw	-6
 28608  01A6E2  006F FF8C  F034    	movff	plusw1,btemp+10
 28609  01A6E8  0EFB               	movlw	-5
 28610  01A6EA  006F FF8C  F035    	movff	plusw1,btemp+11
 28611  01A6F0  0E54               	movlw	low _dbuf
 28612  01A6F2  2434               	addwf	(btemp+10)^0,w,c
 28613  01A6F4  6ED9               	movwf	fsr2l,c
 28614  01A6F6  0E03               	movlw	high _dbuf
 28615  01A6F8  2035               	addwfc	(btemp+11)^0,w,c
 28616  01A6FA  6EDA               	movwf	fsr2h,c
 28617  01A6FC  0EE1               	movlw	-31
 28618  01A6FE  006F FF8F FFDF     	movff	plusw1,indf2
 28619                           
 28620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 28621                           ;stkvar	_i @ sp[(-20)+14]
 28622  01A704  50E1               	movf	fsr1l,w,c
 28623  01A706  0FFA               	addlw	-6
 28624  01A708  6ED9               	movwf	fsr2l,c
 28625  01A70A  50E2               	movf	fsr1h,w,c
 28626  01A70C  6EDA               	movwf	fsr2h,c
 28627  01A70E  0EFF               	movlw	255
 28628  01A710  22DA               	addwfc	fsr2h,f,c
 28629  01A712  06DE               	decf	postinc2,f,c
 28630  01A714  0E00               	movlw	0
 28631  01A716  5ADD               	subwfb	postdec2,f,c
 28632                           
 28633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 28634                           ;stkvar	_i @ sp[(-20)+14]
 28635  01A718  0EFA               	movlw	-6
 28636  01A71A  006F FF8C  F034    	movff	plusw1,btemp+10
 28637  01A720  0EFB               	movlw	-5
 28638  01A722  006F FF8C  F035    	movff	plusw1,btemp+11
 28639  01A728  0E54               	movlw	low _dbuf
 28640  01A72A  2434               	addwf	(btemp+10)^0,w,c
 28641  01A72C  6ED9               	movwf	fsr2l,c
 28642  01A72E  0E03               	movlw	high _dbuf
 28643  01A730  2035               	addwfc	(btemp+11)^0,w,c
 28644  01A732  6EDA               	movwf	fsr2h,c
 28645  01A734  0E30               	movlw	48
 28646  01A736  6EDF               	movwf	indf2,c
 28647  01A738                     l16120:
 28648                           
 28649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 28650                           ;stkvar	_w @ sp[(-20)+16]
 28651  01A738  0EFC               	movlw	-4
 28652  01A73A  006F FF8F FFE6     	movff	plusw1,postinc1
 28653  01A740  006F FF8F FFE6     	movff	plusw1,postinc1
 28654                           
 28655                           ;stkvar	_i @ sp[(-22)+14]
 28656  01A746  0E54               	movlw	low _dbuf
 28657  01A748  6E34               	movwf	(btemp+10)^0,c
 28658  01A74A  0E03               	movlw	high _dbuf
 28659  01A74C  6E35               	movwf	(btemp+11)^0,c
 28660  01A74E  0EF8               	movlw	-8
 28661  01A750  50E3               	movf	plusw1,w,c
 28662  01A752  2634               	addwf	(btemp+10)^0,f,c
 28663  01A754  0EF9               	movlw	-7
 28664  01A756  50E3               	movf	plusw1,w,c
 28665  01A758  2235               	addwfc	(btemp+11)^0,f,c
 28666  01A75A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 28667  01A760  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 28668                           
 28669                           ;stkvar	_fp @ sp[(-24)+-2]
 28670  01A766  0EE6               	movlw	-26
 28671  01A768  006F FF8F FFE6     	movff	plusw1,postinc1
 28672  01A76E  006F FF8F FFE6     	movff	plusw1,postinc1
 28673  01A774  EC5B  F0FE         	call	_pad	;wreg free
 28674                           
 28675                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 28676  01A778  0EE1               	movlw	225
 28677  01A77A  26E1               	addwf	fsr1l,f,c
 28678  01A77C  0EFF               	movlw	255
 28679  01A77E  22E2               	addwfc	fsr1h,f,c
 28680  01A780  0012               	return		;funcret
 28681  01A782                     __end_of_xtoa:
 28682                           	opt callstack 0
 28683                           
 28684 ;; *************** function _toupper *****************
 28685 ;; Defined at:
 28686 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 28687 ;; Parameters:    Size  Location     Type
 28688 ;;  c               2  [STACK] int 
 28689 ;; Auto vars:     Size  Location     Type
 28690 ;;		None
 28691 ;; Return value:  Size  Location     Type
 28692 ;;                  2  [STACK] int 
 28693 ;; Registers used:
 28694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 28695 ;; Tracked objects:
 28696 ;;		On entry : 0/3
 28697 ;;		On exit  : 0/0
 28698 ;;		Unchanged: 0/0
 28699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28704 ;;Total ram usage:        0 bytes
 28705 ;; Hardware stack levels used:    1
 28706 ;; Hardware stack levels required when called:   16
 28707 ;; This function calls:
 28708 ;;		_islower
 28709 ;; This function is called by:
 28710 ;;		_xtoa
 28711 ;; This function uses a reentrant model
 28712 ;;
 28713                           
 28714                           	psect	text95
 28715  0013FC                     __ptext95:
 28716                           	opt callstack 0
 28717  0013FC                     _toupper:
 28718                           	opt callstack 0
 28719                           
 28720                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28721  0013FC  52E6               	movf	postinc1,f,c
 28722  0013FE  52E6               	movf	postinc1,f,c
 28723                           
 28724                           ;stkvar	_c @ sp[(-2)+-2]
 28725                           
 28726                           ;incstack = 0
 28727 ;; hardware stack exceeded
 28728  001400  0EFC               	movlw	-4
 28729  001402  50E3               	movf	plusw1,w,c
 28730  001404  0F9F               	addlw	159
 28731  001406  6E34               	movwf	(btemp+10)^0,c
 28732  001408  0EFD               	movlw	-3
 28733  00140A  006F FF8C  F035    	movff	plusw1,btemp+11
 28734  001410  0EFF               	movlw	255
 28735  001412  2235               	addwfc	(btemp+11)^0,f,c
 28736  001414  5035               	movf	(btemp+11)^0,w,c
 28737  001416  E106               	bnz	u8010
 28738  001418  0E1A               	movlw	26
 28739  00141A  5C34               	subwf	(btemp+10)^0,w,c
 28740  00141C  B0D8               	btfsc	status,0,c
 28741  00141E  D002               	goto	u8010
 28742  001420  0E01               	movlw	1
 28743  001422  D001               	goto	u8020
 28744  001424                     u8010:
 28745  001424  0E00               	movlw	0
 28746  001426                     u8020:
 28747  001426  6E34               	movwf	(btemp+10)^0,c
 28748  001428  6A35               	clrf	(btemp+11)^0,c
 28749                           
 28750                           ;stkvar	_toupper$7594 @ sp[(-2)+0]
 28751  00142A  0EFE               	movlw	-2
 28752  00142C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 28753  001432  0EFF               	movlw	-1
 28754  001434  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 28755                           
 28756                           ;stkvar	_toupper$7594 @ sp[(-2)+0]
 28757  00143A  0EFE               	movlw	-2
 28758  00143C  006F FF8C  F02A    	movff	plusw1,btemp
 28759  001442  0EFF               	movlw	-1
 28760  001444  50E3               	movf	plusw1,w,c
 28761  001446  102A               	iorwf	btemp^0,w,c
 28762  001448  B4D8               	btfsc	status,2,c
 28763  00144A  D00D               	goto	l10206
 28764                           
 28765                           ;stkvar	_c @ sp[(-2)+-2]
 28766  00144C  0EFC               	movlw	-4
 28767  00144E  006F FF8C  F02A    	movff	plusw1,btemp
 28768  001454  0EFD               	movlw	-3
 28769  001456  006F FF8C  F02B    	movff	plusw1,btemp+1
 28770  00145C  0E5F               	movlw	95
 28771  00145E  162A               	andwf	btemp^0,f,c
 28772  001460  0E00               	movlw	0
 28773  001462  162B               	andwf	(btemp+1)^0,f,c
 28774  001464  D008               	goto	l3842
 28775  001466                     l10206:
 28776                           
 28777                           ;stkvar	_c @ sp[(-2)+-2]
 28778  001466  0EFC               	movlw	-4
 28779  001468  006F FF8C  F02A    	movff	plusw1,btemp
 28780  00146E  0EFD               	movlw	-3
 28781  001470  006F FF8C  F02B    	movff	plusw1,btemp+1
 28782  001476                     l3842:
 28783                           
 28784                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28785  001476  52E5               	movf	postdec1,f,c
 28786  001478  52E5               	movf	postdec1,f,c
 28787  00147A  52E5               	movf	postdec1,f,c
 28788  00147C  52E5               	movf	postdec1,f,c
 28789  00147E  0012               	return		;funcret
 28790  001480                     __end_of_toupper:
 28791                           	opt callstack 0
 28792                           
 28793 ;; *************** function _islower *****************
 28794 ;; Defined at:
 28795 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 28796 ;; Parameters:    Size  Location     Type
 28797 ;;  c               2  [STACK] int 
 28798 ;; Auto vars:     Size  Location     Type
 28799 ;;		None
 28800 ;; Return value:  Size  Location     Type
 28801 ;;                  2  [STACK] int 
 28802 ;; Registers used:
 28803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 28804 ;; Tracked objects:
 28805 ;;		On entry : 0/0
 28806 ;;		On exit  : 0/0
 28807 ;;		Unchanged: 0/0
 28808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28813 ;;Total ram usage:        0 bytes
 28814 ;; Hardware stack levels used:    1
 28815 ;; Hardware stack levels required when called:   15
 28816 ;; This function calls:
 28817 ;;		Nothing
 28818 ;; This function is called by:
 28819 ;;		_toupper
 28820 ;; This function uses a reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text96
 28824  00258C                     __ptext96:
 28825                           	opt callstack 0
 28826  00258C                     _islower:
 28827                           	opt callstack 0
 28828                           
 28829                           ;stkvar	_c @ sp[(0)+-2]
 28830                           
 28831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28832                           ;incstack = 0
 28833 ;; hardware stack exceeded
 28834  00258C  0EFE               	movlw	-2
 28835  00258E  50E3               	movf	plusw1,w,c
 28836  002590  0F9F               	addlw	159
 28837  002592  6E34               	movwf	(btemp+10)^0,c
 28838  002594  0EFF               	movlw	-1
 28839  002596  006F FF8C  F035    	movff	plusw1,btemp+11
 28840  00259C  0EFF               	movlw	255
 28841  00259E  2235               	addwfc	(btemp+11)^0,f,c
 28842  0025A0  5035               	movf	(btemp+11)^0,w,c
 28843  0025A2  E106               	bnz	u7640
 28844  0025A4  0E1A               	movlw	26
 28845  0025A6  5C34               	subwf	(btemp+10)^0,w,c
 28846  0025A8  B0D8               	btfsc	status,0,c
 28847  0025AA  D002               	goto	u7640
 28848  0025AC  0E01               	movlw	1
 28849  0025AE  D001               	goto	u7650
 28850  0025B0                     u7640:
 28851  0025B0  0E00               	movlw	0
 28852  0025B2                     u7650:
 28853  0025B2  6E2A               	movwf	btemp^0,c
 28854  0025B4  6A2B               	clrf	(btemp+1)^0,c
 28855                           
 28856                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28857  0025B6  52E5               	movf	postdec1,f,c
 28858  0025B8  52E5               	movf	postdec1,f,c
 28859  0025BA  0012               	return		;funcret
 28860  0025BC                     __end_of_islower:
 28861                           	opt callstack 0
 28862                           
 28863 ;; *************** function _isalpha *****************
 28864 ;; Defined at:
 28865 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 28866 ;; Parameters:    Size  Location     Type
 28867 ;;  c               2  [STACK] int 
 28868 ;; Auto vars:     Size  Location     Type
 28869 ;;		None
 28870 ;; Return value:  Size  Location     Type
 28871 ;;                  2  [STACK] int 
 28872 ;; Registers used:
 28873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 28874 ;; Tracked objects:
 28875 ;;		On entry : 0/0
 28876 ;;		On exit  : 0/0
 28877 ;;		Unchanged: 0/0
 28878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28883 ;;Total ram usage:        0 bytes
 28884 ;; Hardware stack levels used:    1
 28885 ;; Hardware stack levels required when called:   15
 28886 ;; This function calls:
 28887 ;;		Nothing
 28888 ;; This function is called by:
 28889 ;;		_xtoa
 28890 ;; This function uses a reentrant model
 28891 ;;
 28892                           
 28893                           	psect	text97
 28894  00213A                     __ptext97:
 28895                           	opt callstack 0
 28896  00213A                     _isalpha:
 28897                           	opt callstack 0
 28898                           
 28899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28900                           ;incstack = 0
 28901 ;; hardware stack exceeded
 28902  00213A  0E9F               	movlw	159
 28903  00213C  6E34               	movwf	(btemp+10)^0,c
 28904  00213E  0EFF               	movlw	255
 28905  002140  6E35               	movwf	(btemp+11)^0,c
 28906                           
 28907                           ;stkvar	_c @ sp[(0)+-2]
 28908  002142  0EFE               	movlw	-2
 28909  002144  006F FF8C  F032    	movff	plusw1,btemp+8
 28910  00214A  0EFF               	movlw	-1
 28911  00214C  006F FF8C  F033    	movff	plusw1,btemp+9
 28912  002152  0E20               	movlw	32
 28913  002154  1232               	iorwf	(btemp+8)^0,f,c
 28914  002156  0E00               	movlw	0
 28915  002158  1233               	iorwf	(btemp+9)^0,f,c
 28916  00215A  5034               	movf	(btemp+10)^0,w,c
 28917  00215C  2632               	addwf	(btemp+8)^0,f,c
 28918  00215E  5035               	movf	(btemp+11)^0,w,c
 28919  002160  2233               	addwfc	(btemp+9)^0,f,c
 28920  002162  5033               	movf	(btemp+9)^0,w,c
 28921  002164  E106               	bnz	u7990
 28922  002166  0E1A               	movlw	26
 28923  002168  5C32               	subwf	(btemp+8)^0,w,c
 28924  00216A  B0D8               	btfsc	status,0,c
 28925  00216C  D002               	goto	u7990
 28926  00216E  0E01               	movlw	1
 28927  002170  D001               	goto	u8000
 28928  002172                     u7990:
 28929  002172  0E00               	movlw	0
 28930  002174                     u8000:
 28931  002174  6E2A               	movwf	btemp^0,c
 28932  002176  6A2B               	clrf	(btemp+1)^0,c
 28933                           
 28934                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 28935  002178  52E5               	movf	postdec1,f,c
 28936  00217A  52E5               	movf	postdec1,f,c
 28937  00217C  0012               	return		;funcret
 28938  00217E                     __end_of_isalpha:
 28939                           	opt callstack 0
 28940                           
 28941 ;; *************** function _utoa *****************
 28942 ;; Defined at:
 28943 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28946 ;;		 -> f(6), NULL(0), 
 28947 ;;  d               8  [STACK] unsigned long long 
 28948 ;; Auto vars:     Size  Location     Type
 28949 ;;  n               8  [STACK] unsigned long long 
 28950 ;;  i               2  [STACK] int 
 28951 ;;  w               2  [STACK] int 
 28952 ;;  p               2  [STACK] int 
 28953 ;; Return value:  Size  Location     Type
 28954 ;;                  2  [STACK] int 
 28955 ;; Registers used:
 28956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 28957 ;; Tracked objects:
 28958 ;;		On entry : 0/0
 28959 ;;		On exit  : 0/0
 28960 ;;		Unchanged: 0/0
 28961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28966 ;;Total ram usage:        0 bytes
 28967 ;; Hardware stack levels used:    1
 28968 ;; Hardware stack levels required when called:   20
 28969 ;; This function calls:
 28970 ;;		___lodiv
 28971 ;;		___lomod
 28972 ;;		_pad
 28973 ;; This function is called by:
 28974 ;;		_vfpfcnvrt
 28975 ;; This function uses a reentrant model
 28976 ;;
 28977                           
 28978                           	psect	text98
 28979  01AE62                     __ptext98:
 28980                           	opt callstack 0
 28981  01AE62                     _utoa:
 28982                           	opt callstack 0
 28983                           
 28984                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 28985  01AE62  0E0E               	movlw	14
 28986  01AE64  26E1               	addwf	fsr1l,f,c
 28987  01AE66  0E00               	movlw	0
 28988  01AE68  22E2               	addwfc	fsr1h,f,c
 28989                           
 28990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 28991                           
 28992                           ;incstack = 0
 28993 ;; hardware stack exceeded
 28994  01AE6A  AE4D               	btfss	(_prec+1)^0,7,c
 28995                           
 28996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 28997  01AE6C  924E               	bcf	_flags^0,1,c
 28998                           
 28999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 29000  01AE6E  BE4D               	btfsc	(_prec+1)^0,7,c
 29001  01AE70  D005               	goto	u15380
 29002  01AE72  504D               	movf	(_prec+1)^0,w,c
 29003  01AE74  E110               	bnz	l16020
 29004  01AE76  044C               	decf	_prec^0,w,c
 29005  01AE78  B0D8               	btfsc	status,0,c
 29006  01AE7A  D00D               	goto	l16020
 29007  01AE7C                     u15380:
 29008  01AE7C  0E01               	movlw	1
 29009  01AE7E  6E34               	movwf	(btemp+10)^0,c
 29010  01AE80  0E00               	movlw	0
 29011  01AE82  6E35               	movwf	(btemp+11)^0,c
 29012                           
 29013                           ;stkvar	_p @ sp[(-14)+12]
 29014  01AE84  0EFE               	movlw	-2
 29015  01AE86  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29016  01AE8C  0EFF               	movlw	-1
 29017  01AE8E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29018  01AE94  D008               	goto	l2630
 29019  01AE96                     l16020:
 29020                           
 29021                           ;stkvar	_p @ sp[(-14)+12]
 29022  01AE96  0EFE               	movlw	-2
 29023  01AE98  0060  F133  FFE3   	movff	_prec,plusw1
 29024  01AE9E  0EFF               	movlw	-1
 29025  01AEA0  0060  F137  FFE3   	movff	_prec+1,plusw1
 29026  01AEA6                     l2630:
 29027                           
 29028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 29029                           ;stkvar	_w @ sp[(-14)+10]
 29030  01AEA6  0EFC               	movlw	-4
 29031  01AEA8  0060  F12B  FFE3   	movff	_width,plusw1
 29032  01AEAE  0EFD               	movlw	-3
 29033  01AEB0  0060  F12F  FFE3   	movff	_width+1,plusw1
 29034                           
 29035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 29036                           ;stkvar	_d @ sp[(-14)+-10]
 29037  01AEB6  0EE8               	movlw	232
 29038  01AEB8  24E1               	addwf	fsr1l,w,c
 29039  01AEBA  6ED9               	movwf	fsr2l,c
 29040  01AEBC  0EFF               	movlw	255
 29041  01AEBE  20E2               	addwfc	fsr1h,w,c
 29042  01AEC0  6EDA               	movwf	fsr2h,c
 29043                           
 29044                           ;stkvar	_n @ sp[(-14)+0]
 29045  01AEC2  0E08               	movlw	8
 29046  01AEC4  6E2A               	movwf	btemp^0,c
 29047  01AEC6  0EF2               	movlw	-14
 29048  01AEC8                     us1539999:
 29049  01AEC8  006F FF7B FFE3     	movff	postinc2,plusw1
 29050  01AECE  28E8               	incf	wreg,w,c
 29051  01AED0  2E2A               	decfsz	btemp^0,f,c
 29052  01AED2  D7FA               	bra	us1539999
 29053                           
 29054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 29055  01AED4  0E4F               	movlw	79
 29056  01AED6  6E34               	movwf	(btemp+10)^0,c
 29057  01AED8  0E00               	movlw	0
 29058  01AEDA  6E35               	movwf	(btemp+11)^0,c
 29059                           
 29060                           ;stkvar	_i @ sp[(-14)+8]
 29061  01AEDC  0EFA               	movlw	-6
 29062  01AEDE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29063  01AEE4  0EFB               	movlw	-5
 29064  01AEE6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29065                           
 29066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 29067  01AEEC  0103               	movlb	3	; () banked
 29068  01AEEE  6BA3               	clrf	(_dbuf+79)& (0+255),b
 29069                           
 29070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29071  01AEF0  D0FB               	goto	l16038
 29072  01AEF2                     l16028:
 29073                           
 29074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 29075                           ;stkvar	_i @ sp[(-14)+8]
 29076  01AEF2  50E1               	movf	fsr1l,w,c
 29077  01AEF4  0FFA               	addlw	-6
 29078  01AEF6  6ED9               	movwf	fsr2l,c
 29079  01AEF8  50E2               	movf	fsr1h,w,c
 29080  01AEFA  6EDA               	movwf	fsr2h,c
 29081  01AEFC  0EFF               	movlw	255
 29082  01AEFE  22DA               	addwfc	fsr2h,f,c
 29083  01AF00  06DE               	decf	postinc2,f,c
 29084  01AF02  0E00               	movlw	0
 29085  01AF04  5ADD               	subwfb	postdec2,f,c
 29086                           
 29087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 29088  01AF06  0E0A               	movlw	10
 29089  01AF08  6EE6               	movwf	postinc1,c
 29090  01AF0A  0E00               	movlw	0
 29091  01AF0C  6EE6               	movwf	postinc1,c
 29092  01AF0E  0E00               	movlw	0
 29093  01AF10  6EE6               	movwf	postinc1,c
 29094  01AF12  0E00               	movlw	0
 29095  01AF14  6EE6               	movwf	postinc1,c
 29096  01AF16  0E00               	movlw	0
 29097  01AF18  6EE6               	movwf	postinc1,c
 29098  01AF1A  0E00               	movlw	0
 29099  01AF1C  6EE6               	movwf	postinc1,c
 29100  01AF1E  0E00               	movlw	0
 29101  01AF20  6EE6               	movwf	postinc1,c
 29102  01AF22  0E00               	movlw	0
 29103  01AF24  6EE6               	movwf	postinc1,c
 29104                           
 29105                           ;stkvar	_n @ sp[(-22)+0]
 29106  01AF26  50E1               	movf	fsr1l,w,c
 29107  01AF28  0FEA               	addlw	-22
 29108  01AF2A  6ED9               	movwf	fsr2l,c
 29109  01AF2C  50E2               	movf	fsr1h,w,c
 29110  01AF2E  6EDA               	movwf	fsr2h,c
 29111  01AF30  0EFF               	movlw	255
 29112  01AF32  22DA               	addwfc	fsr2h,f,c
 29113  01AF34  006F FF7B FFE6     	movff	postinc2,postinc1
 29114  01AF3A  006F FF7B FFE6     	movff	postinc2,postinc1
 29115  01AF40  006F FF7B FFE6     	movff	postinc2,postinc1
 29116  01AF46  006F FF7B FFE6     	movff	postinc2,postinc1
 29117  01AF4C  006F FF7B FFE6     	movff	postinc2,postinc1
 29118  01AF52  006F FF7B FFE6     	movff	postinc2,postinc1
 29119  01AF58  006F FF7B FFE6     	movff	postinc2,postinc1
 29120  01AF5E  006F FF7B FFE6     	movff	postinc2,postinc1
 29121  01AF64  ECE8  F0FA         	call	___lomod	;wreg free
 29122  01AF68  52E5               	movf	postdec1,f,c
 29123  01AF6A  006F FF9C  F041    	movff	indf1,btemp+23
 29124  01AF70  52E5               	movf	postdec1,f,c
 29125  01AF72  006F FF9C  F040    	movff	indf1,btemp+22
 29126  01AF78  52E5               	movf	postdec1,f,c
 29127  01AF7A  006F FF9C  F03F    	movff	indf1,btemp+21
 29128  01AF80  52E5               	movf	postdec1,f,c
 29129  01AF82  006F FF9C  F03E    	movff	indf1,btemp+20
 29130  01AF88  52E5               	movf	postdec1,f,c
 29131  01AF8A  006F FF9C  F03D    	movff	indf1,btemp+19
 29132  01AF90  52E5               	movf	postdec1,f,c
 29133  01AF92  006F FF9C  F03C    	movff	indf1,btemp+18
 29134  01AF98  52E5               	movf	postdec1,f,c
 29135  01AF9A  006F FF9C  F03B    	movff	indf1,btemp+17
 29136  01AFA0  52E5               	movf	postdec1,f,c
 29137  01AFA2  006F FF9C  F03A    	movff	indf1,btemp+16
 29138  01AFA8  0EF8               	movlw	248
 29139  01AFAA  26E1               	addwf	fsr1l,f,c
 29140  01AFAC  0EFF               	movlw	255
 29141  01AFAE  22E2               	addwfc	fsr1h,f,c
 29142  01AFB0  0E30               	movlw	48
 29143  01AFB2  263A               	addwf	(btemp+16)^0,f,c
 29144                           
 29145                           ;stkvar	_i @ sp[(-14)+8]
 29146  01AFB4  0EFA               	movlw	-6
 29147  01AFB6  006F FF8C  F034    	movff	plusw1,btemp+10
 29148  01AFBC  0EFB               	movlw	-5
 29149  01AFBE  006F FF8C  F035    	movff	plusw1,btemp+11
 29150  01AFC4  0E54               	movlw	low _dbuf
 29151  01AFC6  2434               	addwf	(btemp+10)^0,w,c
 29152  01AFC8  6ED9               	movwf	fsr2l,c
 29153  01AFCA  0E03               	movlw	high _dbuf
 29154  01AFCC  2035               	addwfc	(btemp+11)^0,w,c
 29155  01AFCE  6EDA               	movwf	fsr2h,c
 29156  01AFD0  0060  F0EB  FFDF   	movff	btemp+16,indf2
 29157                           
 29158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 29159                           ;stkvar	_p @ sp[(-14)+12]
 29160  01AFD6  50E1               	movf	fsr1l,w,c
 29161  01AFD8  0FFE               	addlw	-2
 29162  01AFDA  6ED9               	movwf	fsr2l,c
 29163  01AFDC  50E2               	movf	fsr1h,w,c
 29164  01AFDE  6EDA               	movwf	fsr2h,c
 29165  01AFE0  0EFF               	movlw	255
 29166  01AFE2  22DA               	addwfc	fsr2h,f,c
 29167  01AFE4  06DE               	decf	postinc2,f,c
 29168  01AFE6  0E00               	movlw	0
 29169  01AFE8  5ADD               	subwfb	postdec2,f,c
 29170                           
 29171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 29172                           ;stkvar	_w @ sp[(-14)+10]
 29173  01AFEA  50E1               	movf	fsr1l,w,c
 29174  01AFEC  0FFC               	addlw	-4
 29175  01AFEE  6ED9               	movwf	fsr2l,c
 29176  01AFF0  50E2               	movf	fsr1h,w,c
 29177  01AFF2  6EDA               	movwf	fsr2h,c
 29178  01AFF4  0EFF               	movlw	255
 29179  01AFF6  22DA               	addwfc	fsr2h,f,c
 29180  01AFF8  06DE               	decf	postinc2,f,c
 29181  01AFFA  0E00               	movlw	0
 29182  01AFFC  5ADD               	subwfb	postdec2,f,c
 29183                           
 29184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 29185  01AFFE  0E0A               	movlw	10
 29186  01B000  6EE6               	movwf	postinc1,c
 29187  01B002  0E00               	movlw	0
 29188  01B004  6EE6               	movwf	postinc1,c
 29189  01B006  0E00               	movlw	0
 29190  01B008  6EE6               	movwf	postinc1,c
 29191  01B00A  0E00               	movlw	0
 29192  01B00C  6EE6               	movwf	postinc1,c
 29193  01B00E  0E00               	movlw	0
 29194  01B010  6EE6               	movwf	postinc1,c
 29195  01B012  0E00               	movlw	0
 29196  01B014  6EE6               	movwf	postinc1,c
 29197  01B016  0E00               	movlw	0
 29198  01B018  6EE6               	movwf	postinc1,c
 29199  01B01A  0E00               	movlw	0
 29200  01B01C  6EE6               	movwf	postinc1,c
 29201                           
 29202                           ;stkvar	_n @ sp[(-22)+0]
 29203  01B01E  50E1               	movf	fsr1l,w,c
 29204  01B020  0FEA               	addlw	-22
 29205  01B022  6ED9               	movwf	fsr2l,c
 29206  01B024  50E2               	movf	fsr1h,w,c
 29207  01B026  6EDA               	movwf	fsr2h,c
 29208  01B028  0EFF               	movlw	255
 29209  01B02A  22DA               	addwfc	fsr2h,f,c
 29210  01B02C  006F FF7B FFE6     	movff	postinc2,postinc1
 29211  01B032  006F FF7B FFE6     	movff	postinc2,postinc1
 29212  01B038  006F FF7B FFE6     	movff	postinc2,postinc1
 29213  01B03E  006F FF7B FFE6     	movff	postinc2,postinc1
 29214  01B044  006F FF7B FFE6     	movff	postinc2,postinc1
 29215  01B04A  006F FF7B FFE6     	movff	postinc2,postinc1
 29216  01B050  006F FF7B FFE6     	movff	postinc2,postinc1
 29217  01B056  006F FF7B FFE6     	movff	postinc2,postinc1
 29218  01B05C  EC50  F0F3         	call	___lodiv	;wreg free
 29219  01B060  52E5               	movf	postdec1,f,c
 29220  01B062  006F FF9C  F041    	movff	indf1,btemp+23
 29221  01B068  52E5               	movf	postdec1,f,c
 29222  01B06A  006F FF9C  F040    	movff	indf1,btemp+22
 29223  01B070  52E5               	movf	postdec1,f,c
 29224  01B072  006F FF9C  F03F    	movff	indf1,btemp+21
 29225  01B078  52E5               	movf	postdec1,f,c
 29226  01B07A  006F FF9C  F03E    	movff	indf1,btemp+20
 29227  01B080  52E5               	movf	postdec1,f,c
 29228  01B082  006F FF9C  F03D    	movff	indf1,btemp+19
 29229  01B088  52E5               	movf	postdec1,f,c
 29230  01B08A  006F FF9C  F03C    	movff	indf1,btemp+18
 29231  01B090  52E5               	movf	postdec1,f,c
 29232  01B092  006F FF9C  F03B    	movff	indf1,btemp+17
 29233  01B098  52E5               	movf	postdec1,f,c
 29234  01B09A  006F FF9C  F03A    	movff	indf1,btemp+16
 29235  01B0A0  0EF8               	movlw	248
 29236  01B0A2  26E1               	addwf	fsr1l,f,c
 29237  01B0A4  0EFF               	movlw	255
 29238  01B0A6  22E2               	addwfc	fsr1h,f,c
 29239                           
 29240                           ;stkvar	_n @ sp[(-14)+0]
 29241  01B0A8  0EF2               	movlw	-14
 29242  01B0AA  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 29243  01B0B0  0EF3               	movlw	-13
 29244  01B0B2  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 29245  01B0B8  0EF4               	movlw	-12
 29246  01B0BA  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 29247  01B0C0  0EF5               	movlw	-11
 29248  01B0C2  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 29249  01B0C8  0EF6               	movlw	-10
 29250  01B0CA  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 29251  01B0D0  0EF7               	movlw	-9
 29252  01B0D2  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 29253  01B0D8  0EF8               	movlw	-8
 29254  01B0DA  0060  F103  FFE3   	movff	btemp+22,plusw1
 29255  01B0E0  0EF9               	movlw	-7
 29256  01B0E2  0060  F107  FFE3   	movff	btemp+23,plusw1
 29257  01B0E8                     l16038:
 29258                           
 29259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 29260                           ;stkvar	_i @ sp[(-14)+8]
 29261  01B0E8  0EFA               	movlw	-6
 29262  01B0EA  006F FF8C  F02A    	movff	plusw1,btemp
 29263  01B0F0  0EFB               	movlw	-5
 29264  01B0F2  50E3               	movf	plusw1,w,c
 29265  01B0F4  102A               	iorwf	btemp^0,w,c
 29266  01B0F6  B4D8               	btfsc	status,2,c
 29267  01B0F8  D02F               	goto	u15440
 29268                           
 29269                           ;stkvar	_n @ sp[(-14)+0]
 29270  01B0FA  0EF2               	movlw	-14
 29271  01B0FC  50E3               	movf	plusw1,w,c
 29272  01B0FE  E115               	bnz	u15411
 29273  01B100  0EF3               	movlw	-13
 29274  01B102  50E3               	movf	plusw1,w,c
 29275  01B104  E112               	bnz	u15411
 29276  01B106  0EF4               	movlw	-12
 29277  01B108  50E3               	movf	plusw1,w,c
 29278  01B10A  E10F               	bnz	u15411
 29279  01B10C  0EF5               	movlw	-11
 29280  01B10E  50E3               	movf	plusw1,w,c
 29281  01B110  E10C               	bnz	u15411
 29282  01B112  0EF6               	movlw	-10
 29283  01B114  50E3               	movf	plusw1,w,c
 29284  01B116  E109               	bnz	u15411
 29285  01B118  0EF7               	movlw	-9
 29286  01B11A  50E3               	movf	plusw1,w,c
 29287  01B11C  E106               	bnz	u15411
 29288  01B11E  0EF8               	movlw	-8
 29289  01B120  50E3               	movf	plusw1,w,c
 29290  01B122  E103               	bnz	u15411
 29291  01B124  0EF9               	movlw	-7
 29292  01B126  50E3               	movf	plusw1,w,c
 29293  01B128  A4D8               	btfss	status,2,c
 29294  01B12A                     u15411:
 29295  01B12A  D6E3               	goto	l16028
 29296                           
 29297                           ;stkvar	_p @ sp[(-14)+12]
 29298  01B12C  0EFF               	movlw	-1
 29299  01B12E  BEE3               	btfsc	plusw1,7,c
 29300  01B130  D007               	goto	u15420
 29301  01B132  0EFF               	movlw	-1
 29302  01B134  50E3               	movf	plusw1,w,c
 29303  01B136  E103               	bnz	u15421
 29304  01B138  0EFE               	movlw	-2
 29305  01B13A  04E3               	decf	plusw1,w,c
 29306  01B13C  B0D8               	btfsc	status,0,c
 29307  01B13E                     u15421:
 29308  01B13E  D6D9               	goto	l16028
 29309  01B140                     u15420:
 29310                           
 29311                           ;stkvar	_w @ sp[(-14)+10]
 29312  01B140  0EFD               	movlw	-3
 29313  01B142  BEE3               	btfsc	plusw1,7,c
 29314  01B144  D009               	goto	u15440
 29315  01B146  0EFD               	movlw	-3
 29316  01B148  50E3               	movf	plusw1,w,c
 29317  01B14A  E104               	bnz	u15430
 29318  01B14C  0EFC               	movlw	-4
 29319  01B14E  04E3               	decf	plusw1,w,c
 29320  01B150  A0D8               	btfss	status,0,c
 29321  01B152  D002               	goto	u15440
 29322  01B154                     u15430:
 29323  01B154  B24E               	btfsc	_flags^0,1,c
 29324  01B156  D6CD               	goto	l16028
 29325  01B158                     u15440:
 29326                           
 29327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 29328                           ;stkvar	_w @ sp[(-14)+10]
 29329  01B158  0EFC               	movlw	-4
 29330  01B15A  006F FF8F FFE6     	movff	plusw1,postinc1
 29331  01B160  006F FF8F FFE6     	movff	plusw1,postinc1
 29332                           
 29333                           ;stkvar	_i @ sp[(-16)+8]
 29334  01B166  0E54               	movlw	low _dbuf
 29335  01B168  6E34               	movwf	(btemp+10)^0,c
 29336  01B16A  0E03               	movlw	high _dbuf
 29337  01B16C  6E35               	movwf	(btemp+11)^0,c
 29338  01B16E  0EF8               	movlw	-8
 29339  01B170  50E3               	movf	plusw1,w,c
 29340  01B172  2634               	addwf	(btemp+10)^0,f,c
 29341  01B174  0EF9               	movlw	-7
 29342  01B176  50E3               	movf	plusw1,w,c
 29343  01B178  2235               	addwfc	(btemp+11)^0,f,c
 29344  01B17A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 29345  01B180  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 29346                           
 29347                           ;stkvar	_fp @ sp[(-18)+-2]
 29348  01B186  0EEC               	movlw	-20
 29349  01B188  006F FF8F FFE6     	movff	plusw1,postinc1
 29350  01B18E  006F FF8F FFE6     	movff	plusw1,postinc1
 29351  01B194  EC5B  F0FE         	call	_pad	;wreg free
 29352                           
 29353                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 29354  01B198  0EE8               	movlw	232
 29355  01B19A  26E1               	addwf	fsr1l,f,c
 29356  01B19C  0EFF               	movlw	255
 29357  01B19E  22E2               	addwfc	fsr1h,f,c
 29358  01B1A0  0012               	return		;funcret
 29359  01B1A2                     __end_of_utoa:
 29360                           	opt callstack 0
 29361                           
 29362 ;; *************** function ___lomod *****************
 29363 ;; Defined at:
 29364 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 29365 ;; Parameters:    Size  Location     Type
 29366 ;;  dividend        8  [STACK] unsigned long long 
 29367 ;;  divisor         8  [STACK] unsigned long long 
 29368 ;; Auto vars:     Size  Location     Type
 29369 ;;  counter         1  [STACK] unsigned char 
 29370 ;; Return value:  Size  Location     Type
 29371 ;;                  8  [STACK] unsigned long long 
 29372 ;; Registers used:
 29373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29374 ;; Tracked objects:
 29375 ;;		On entry : 0/3
 29376 ;;		On exit  : 0/0
 29377 ;;		Unchanged: 0/0
 29378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29383 ;;Total ram usage:        0 bytes
 29384 ;; Hardware stack levels used:    1
 29385 ;; Hardware stack levels required when called:   15
 29386 ;; This function calls:
 29387 ;;		Nothing
 29388 ;; This function is called by:
 29389 ;;		_utoa
 29390 ;; This function uses a reentrant model
 29391 ;;
 29392                           
 29393                           	psect	text99
 29394  01F5D0                     __ptext99:
 29395                           	opt callstack 0
 29396  01F5D0                     ___lomod:
 29397                           	opt callstack 0
 29398                           
 29399                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29400  01F5D0  52E6               	movf	postinc1,f,c
 29401                           
 29402                           ;stkvar	_divisor @ sp[(-1)+-16]
 29403                           
 29404                           ;incstack = 0
 29405 ;; hardware stack exceeded
 29406  01F5D2  0EEF               	movlw	-17
 29407  01F5D4  50E3               	movf	plusw1,w,c
 29408  01F5D6  E116               	bnz	u9200
 29409  01F5D8  0EF0               	movlw	-16
 29410  01F5DA  50E3               	movf	plusw1,w,c
 29411  01F5DC  E113               	bnz	u9200
 29412  01F5DE  0EF1               	movlw	-15
 29413  01F5E0  50E3               	movf	plusw1,w,c
 29414  01F5E2  E110               	bnz	u9200
 29415  01F5E4  0EF2               	movlw	-14
 29416  01F5E6  50E3               	movf	plusw1,w,c
 29417  01F5E8  E10D               	bnz	u9200
 29418  01F5EA  0EF3               	movlw	-13
 29419  01F5EC  50E3               	movf	plusw1,w,c
 29420  01F5EE  E10A               	bnz	u9200
 29421  01F5F0  0EF4               	movlw	-12
 29422  01F5F2  50E3               	movf	plusw1,w,c
 29423  01F5F4  E107               	bnz	u9200
 29424  01F5F6  0EF5               	movlw	-11
 29425  01F5F8  50E3               	movf	plusw1,w,c
 29426  01F5FA  E104               	bnz	u9200
 29427  01F5FC  0EF6               	movlw	-10
 29428  01F5FE  50E3               	movf	plusw1,w,c
 29429  01F600  B4D8               	btfsc	status,2,c
 29430  01F602  D075               	goto	u9230
 29431  01F604                     u9200:
 29432                           
 29433                           ;stkvar	_counter @ sp[(-1)+0]
 29434  01F604  0EFF               	movlw	-1
 29435  01F606  6AE3               	clrf	plusw1,c
 29436  01F608  D012               	goto	L29
 29437  01F60A                     l10842:
 29438                           
 29439                           ;stkvar	_divisor @ sp[(-1)+-16]
 29440  01F60A  90D8               	bcf	status,0,c
 29441  01F60C  0EEF               	movlw	-17
 29442  01F60E  36E3               	rlcf	plusw1,f,c
 29443  01F610  0EF0               	movlw	-16
 29444  01F612  36E3               	rlcf	plusw1,f,c
 29445  01F614  0EF1               	movlw	-15
 29446  01F616  36E3               	rlcf	plusw1,f,c
 29447  01F618  0EF2               	movlw	-14
 29448  01F61A  36E3               	rlcf	plusw1,f,c
 29449  01F61C  0EF3               	movlw	-13
 29450  01F61E  36E3               	rlcf	plusw1,f,c
 29451  01F620  0EF4               	movlw	-12
 29452  01F622  36E3               	rlcf	plusw1,f,c
 29453  01F624  0EF5               	movlw	-11
 29454  01F626  36E3               	rlcf	plusw1,f,c
 29455  01F628  0EF6               	movlw	-10
 29456  01F62A  36E3               	rlcf	plusw1,f,c
 29457                           
 29458                           ;stkvar	_counter @ sp[(-1)+0]
 29459  01F62C  0EFF               	movlw	-1
 29460  01F62E                     L29:
 29461  01F62E  2AE3               	incf	plusw1,f,c
 29462                           
 29463                           ;stkvar	_divisor @ sp[(-1)+-16]
 29464  01F630  0EF6               	movlw	-10
 29465  01F632  AEE3               	btfss	plusw1,7,c
 29466  01F634  D7EA               	goto	l10842
 29467  01F636                     u9210:
 29468                           
 29469                           ;stkvar	_divisor @ sp[(-1)+-16]
 29470                           ;stkvar	_dividend @ sp[(-1)+-8]
 29471  01F636  50E1               	movf	fsr1l,w,c
 29472  01F638  0FF7               	addlw	-9
 29473  01F63A  6ED9               	movwf	fsr2l,c
 29474  01F63C  50E2               	movf	fsr1h,w,c
 29475  01F63E  6EDA               	movwf	fsr2h,c
 29476  01F640  0EFF               	movlw	255
 29477  01F642  22DA               	addwfc	fsr2h,f,c
 29478  01F644  0EEF               	movlw	-17
 29479  01F646  50E3               	movf	plusw1,w,c
 29480  01F648  5CDE               	subwf	postinc2,w,c
 29481  01F64A  0EF0               	movlw	-16
 29482  01F64C  50E3               	movf	plusw1,w,c
 29483  01F64E  58DE               	subwfb	postinc2,w,c
 29484  01F650  0EF1               	movlw	-15
 29485  01F652  50E3               	movf	plusw1,w,c
 29486  01F654  58DE               	subwfb	postinc2,w,c
 29487  01F656  0EF2               	movlw	-14
 29488  01F658  50E3               	movf	plusw1,w,c
 29489  01F65A  58DE               	subwfb	postinc2,w,c
 29490  01F65C  0EF3               	movlw	-13
 29491  01F65E  50E3               	movf	plusw1,w,c
 29492  01F660  58DE               	subwfb	postinc2,w,c
 29493  01F662  0EF4               	movlw	-12
 29494  01F664  50E3               	movf	plusw1,w,c
 29495  01F666  58DE               	subwfb	postinc2,w,c
 29496  01F668  0EF5               	movlw	-11
 29497  01F66A  50E3               	movf	plusw1,w,c
 29498  01F66C  58DE               	subwfb	postinc2,w,c
 29499  01F66E  0EF6               	movlw	-10
 29500  01F670  50E3               	movf	plusw1,w,c
 29501  01F672  58DE               	subwfb	postinc2,w,c
 29502  01F674  A0D8               	btfss	status,0,c
 29503  01F676  D01F               	goto	l10850
 29504                           
 29505                           ;stkvar	_divisor @ sp[(-1)+-16]
 29506                           ;stkvar	_dividend @ sp[(-1)+-8]
 29507  01F678  50E1               	movf	fsr1l,w,c
 29508  01F67A  0FF7               	addlw	-9
 29509  01F67C  6ED9               	movwf	fsr2l,c
 29510  01F67E  50E2               	movf	fsr1h,w,c
 29511  01F680  6EDA               	movwf	fsr2h,c
 29512  01F682  0EFF               	movlw	255
 29513  01F684  22DA               	addwfc	fsr2h,f,c
 29514  01F686  0EEF               	movlw	-17
 29515  01F688  50E3               	movf	plusw1,w,c
 29516  01F68A  5EDE               	subwf	postinc2,f,c
 29517  01F68C  0EF0               	movlw	-16
 29518  01F68E  50E3               	movf	plusw1,w,c
 29519  01F690  5ADE               	subwfb	postinc2,f,c
 29520  01F692  0EF1               	movlw	-15
 29521  01F694  50E3               	movf	plusw1,w,c
 29522  01F696  5ADE               	subwfb	postinc2,f,c
 29523  01F698  0EF2               	movlw	-14
 29524  01F69A  50E3               	movf	plusw1,w,c
 29525  01F69C  5ADE               	subwfb	postinc2,f,c
 29526  01F69E  0EF3               	movlw	-13
 29527  01F6A0  50E3               	movf	plusw1,w,c
 29528  01F6A2  5ADE               	subwfb	postinc2,f,c
 29529  01F6A4  0EF4               	movlw	-12
 29530  01F6A6  50E3               	movf	plusw1,w,c
 29531  01F6A8  5ADE               	subwfb	postinc2,f,c
 29532  01F6AA  0EF5               	movlw	-11
 29533  01F6AC  50E3               	movf	plusw1,w,c
 29534  01F6AE  5ADE               	subwfb	postinc2,f,c
 29535  01F6B0  0EF6               	movlw	-10
 29536  01F6B2  50E3               	movf	plusw1,w,c
 29537  01F6B4  5ADE               	subwfb	postinc2,f,c
 29538  01F6B6                     l10850:
 29539                           
 29540                           ;stkvar	_divisor @ sp[(-1)+-16]
 29541  01F6B6  90D8               	bcf	status,0,c
 29542  01F6B8  0EF6               	movlw	-10
 29543  01F6BA  32E3               	rrcf	plusw1,f,c
 29544  01F6BC  0EF5               	movlw	-11
 29545  01F6BE  32E3               	rrcf	plusw1,f,c
 29546  01F6C0  0EF4               	movlw	-12
 29547  01F6C2  32E3               	rrcf	plusw1,f,c
 29548  01F6C4  0EF3               	movlw	-13
 29549  01F6C6  32E3               	rrcf	plusw1,f,c
 29550  01F6C8  0EF2               	movlw	-14
 29551  01F6CA  32E3               	rrcf	plusw1,f,c
 29552  01F6CC  0EF1               	movlw	-15
 29553  01F6CE  32E3               	rrcf	plusw1,f,c
 29554  01F6D0  0EF0               	movlw	-16
 29555  01F6D2  32E3               	rrcf	plusw1,f,c
 29556  01F6D4  0EEF               	movlw	-17
 29557  01F6D6  32E3               	rrcf	plusw1,f,c
 29558                           
 29559                           ;stkvar	_counter @ sp[(-1)+0]
 29560  01F6D8  0EFF               	movlw	-1
 29561  01F6DA  50E3               	movf	plusw1,w,c
 29562  01F6DC  6E2A               	movwf	btemp^0,c
 29563  01F6DE  0E01               	movlw	1
 29564  01F6E0  5E2A               	subwf	btemp^0,f,c
 29565  01F6E2  0EFF               	movlw	-1
 29566  01F6E4  0060  F0AB  FFE3   	movff	btemp,plusw1
 29567  01F6EA  A4D8               	btfss	status,2,c
 29568  01F6EC  D7A4               	goto	u9210
 29569  01F6EE                     u9230:
 29570                           
 29571                           ;stkvar	_dividend @ sp[(-1)+-8]
 29572  01F6EE  0EF7               	movlw	247
 29573  01F6F0  24E1               	addwf	fsr1l,w,c
 29574  01F6F2  6ED9               	movwf	fsr2l,c
 29575  01F6F4  0EFF               	movlw	255
 29576  01F6F6  20E2               	addwfc	fsr1h,w,c
 29577  01F6F8  6EDA               	movwf	fsr2h,c
 29578                           
 29579                           ;stkvar	?___lomod @ sp[(-1)+-8]
 29580  01F6FA  0E08               	movlw	8
 29581  01F6FC  6E2A               	movwf	btemp^0,c
 29582  01F6FE  0EF7               	movlw	-9
 29583  01F700                     us924999:
 29584  01F700  006F FF7B FFE3     	movff	postinc2,plusw1
 29585  01F706  28E8               	incf	wreg,w,c
 29586  01F708  2E2A               	decfsz	btemp^0,f,c
 29587  01F70A  D7FA               	bra	us924999
 29588                           
 29589                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29590  01F70C  52E5               	movf	postdec1,f,c
 29591  01F70E  0012               	return		;funcret
 29592  01F710                     __end_of___lomod:
 29593                           	opt callstack 0
 29594                           
 29595 ;; *************** function ___lodiv *****************
 29596 ;; Defined at:
 29597 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 29598 ;; Parameters:    Size  Location     Type
 29599 ;;  dividend        8  [STACK] unsigned long long 
 29600 ;;  divisor         8  [STACK] unsigned long long 
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;  quotient        8  [STACK] unsigned long long 
 29603 ;;  counter         1  [STACK] unsigned char 
 29604 ;; Return value:  Size  Location     Type
 29605 ;;                  8  [STACK] unsigned long long 
 29606 ;; Registers used:
 29607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 29608 ;; Tracked objects:
 29609 ;;		On entry : 0/3
 29610 ;;		On exit  : 0/0
 29611 ;;		Unchanged: 0/0
 29612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29617 ;;Total ram usage:        0 bytes
 29618 ;; Hardware stack levels used:    1
 29619 ;; Hardware stack levels required when called:   15
 29620 ;; This function calls:
 29621 ;;		Nothing
 29622 ;; This function is called by:
 29623 ;;		_utoa
 29624 ;; This function uses a reentrant model
 29625 ;;
 29626                           
 29627                           	psect	text100
 29628  01E6A0                     __ptext100:
 29629                           	opt callstack 0
 29630  01E6A0                     ___lodiv:
 29631                           	opt callstack 0
 29632                           
 29633                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 29634  01E6A0  0E09               	movlw	9
 29635  01E6A2  26E1               	addwf	fsr1l,f,c
 29636  01E6A4  0E00               	movlw	0
 29637  01E6A6  22E2               	addwfc	fsr1h,f,c
 29638                           
 29639                           ;stkvar	_quotient @ sp[(-9)+0]
 29640                           
 29641                           ;incstack = 0
 29642 ;; hardware stack exceeded
 29643  01E6A8  0E07               	movlw	7
 29644  01E6AA  6E2A               	movwf	btemp^0,c
 29645  01E6AC  0EF7               	movlw	-9
 29646  01E6AE                     u9141:
 29647  01E6AE  6AE3               	clrf	plusw1,c
 29648  01E6B0  2AE8               	incf	wreg,f,c
 29649  01E6B2  062A               	decf	btemp^0,f,c
 29650  01E6B4  E2FC               	bc	u9141
 29651                           
 29652                           ;stkvar	_divisor @ sp[(-9)+-16]
 29653  01E6B6  0EE7               	movlw	-25
 29654  01E6B8  50E3               	movf	plusw1,w,c
 29655  01E6BA  E116               	bnz	u9150
 29656  01E6BC  0EE8               	movlw	-24
 29657  01E6BE  50E3               	movf	plusw1,w,c
 29658  01E6C0  E113               	bnz	u9150
 29659  01E6C2  0EE9               	movlw	-23
 29660  01E6C4  50E3               	movf	plusw1,w,c
 29661  01E6C6  E110               	bnz	u9150
 29662  01E6C8  0EEA               	movlw	-22
 29663  01E6CA  50E3               	movf	plusw1,w,c
 29664  01E6CC  E10D               	bnz	u9150
 29665  01E6CE  0EEB               	movlw	-21
 29666  01E6D0  50E3               	movf	plusw1,w,c
 29667  01E6D2  E10A               	bnz	u9150
 29668  01E6D4  0EEC               	movlw	-20
 29669  01E6D6  50E3               	movf	plusw1,w,c
 29670  01E6D8  E107               	bnz	u9150
 29671  01E6DA  0EED               	movlw	-19
 29672  01E6DC  50E3               	movf	plusw1,w,c
 29673  01E6DE  E104               	bnz	u9150
 29674  01E6E0  0EEE               	movlw	-18
 29675  01E6E2  50E3               	movf	plusw1,w,c
 29676  01E6E4  B4D8               	btfsc	status,2,c
 29677  01E6E6  D088               	goto	u9180
 29678  01E6E8                     u9150:
 29679                           
 29680                           ;stkvar	_counter @ sp[(-9)+8]
 29681  01E6E8  0EFF               	movlw	-1
 29682  01E6EA  6AE3               	clrf	plusw1,c
 29683  01E6EC  D012               	goto	L30
 29684  01E6EE                     l10818:
 29685                           
 29686                           ;stkvar	_divisor @ sp[(-9)+-16]
 29687  01E6EE  90D8               	bcf	status,0,c
 29688  01E6F0  0EE7               	movlw	-25
 29689  01E6F2  36E3               	rlcf	plusw1,f,c
 29690  01E6F4  0EE8               	movlw	-24
 29691  01E6F6  36E3               	rlcf	plusw1,f,c
 29692  01E6F8  0EE9               	movlw	-23
 29693  01E6FA  36E3               	rlcf	plusw1,f,c
 29694  01E6FC  0EEA               	movlw	-22
 29695  01E6FE  36E3               	rlcf	plusw1,f,c
 29696  01E700  0EEB               	movlw	-21
 29697  01E702  36E3               	rlcf	plusw1,f,c
 29698  01E704  0EEC               	movlw	-20
 29699  01E706  36E3               	rlcf	plusw1,f,c
 29700  01E708  0EED               	movlw	-19
 29701  01E70A  36E3               	rlcf	plusw1,f,c
 29702  01E70C  0EEE               	movlw	-18
 29703  01E70E  36E3               	rlcf	plusw1,f,c
 29704                           
 29705                           ;stkvar	_counter @ sp[(-9)+8]
 29706  01E710  0EFF               	movlw	-1
 29707  01E712                     L30:
 29708  01E712  2AE3               	incf	plusw1,f,c
 29709                           
 29710                           ;stkvar	_divisor @ sp[(-9)+-16]
 29711  01E714  0EEE               	movlw	-18
 29712  01E716  AEE3               	btfss	plusw1,7,c
 29713  01E718  D7EA               	goto	l10818
 29714  01E71A                     u9160:
 29715                           
 29716                           ;stkvar	_quotient @ sp[(-9)+0]
 29717  01E71A  90D8               	bcf	status,0,c
 29718  01E71C  0EF7               	movlw	-9
 29719  01E71E  36E3               	rlcf	plusw1,f,c
 29720  01E720  0EF8               	movlw	-8
 29721  01E722  36E3               	rlcf	plusw1,f,c
 29722  01E724  0EF9               	movlw	-7
 29723  01E726  36E3               	rlcf	plusw1,f,c
 29724  01E728  0EFA               	movlw	-6
 29725  01E72A  36E3               	rlcf	plusw1,f,c
 29726  01E72C  0EFB               	movlw	-5
 29727  01E72E  36E3               	rlcf	plusw1,f,c
 29728  01E730  0EFC               	movlw	-4
 29729  01E732  36E3               	rlcf	plusw1,f,c
 29730  01E734  0EFD               	movlw	-3
 29731  01E736  36E3               	rlcf	plusw1,f,c
 29732  01E738  0EFE               	movlw	-2
 29733  01E73A  36E3               	rlcf	plusw1,f,c
 29734                           
 29735                           ;stkvar	_divisor @ sp[(-9)+-16]
 29736                           ;stkvar	_dividend @ sp[(-9)+-8]
 29737  01E73C  50E1               	movf	fsr1l,w,c
 29738  01E73E  0FEF               	addlw	-17
 29739  01E740  6ED9               	movwf	fsr2l,c
 29740  01E742  50E2               	movf	fsr1h,w,c
 29741  01E744  6EDA               	movwf	fsr2h,c
 29742  01E746  0EFF               	movlw	255
 29743  01E748  22DA               	addwfc	fsr2h,f,c
 29744  01E74A  0EE7               	movlw	-25
 29745  01E74C  50E3               	movf	plusw1,w,c
 29746  01E74E  5CDE               	subwf	postinc2,w,c
 29747  01E750  0EE8               	movlw	-24
 29748  01E752  50E3               	movf	plusw1,w,c
 29749  01E754  58DE               	subwfb	postinc2,w,c
 29750  01E756  0EE9               	movlw	-23
 29751  01E758  50E3               	movf	plusw1,w,c
 29752  01E75A  58DE               	subwfb	postinc2,w,c
 29753  01E75C  0EEA               	movlw	-22
 29754  01E75E  50E3               	movf	plusw1,w,c
 29755  01E760  58DE               	subwfb	postinc2,w,c
 29756  01E762  0EEB               	movlw	-21
 29757  01E764  50E3               	movf	plusw1,w,c
 29758  01E766  58DE               	subwfb	postinc2,w,c
 29759  01E768  0EEC               	movlw	-20
 29760  01E76A  50E3               	movf	plusw1,w,c
 29761  01E76C  58DE               	subwfb	postinc2,w,c
 29762  01E76E  0EED               	movlw	-19
 29763  01E770  50E3               	movf	plusw1,w,c
 29764  01E772  58DE               	subwfb	postinc2,w,c
 29765  01E774  0EEE               	movlw	-18
 29766  01E776  50E3               	movf	plusw1,w,c
 29767  01E778  58DE               	subwfb	postinc2,w,c
 29768  01E77A  A0D8               	btfss	status,0,c
 29769  01E77C  D021               	goto	l10830
 29770                           
 29771                           ;stkvar	_divisor @ sp[(-9)+-16]
 29772                           ;stkvar	_dividend @ sp[(-9)+-8]
 29773  01E77E  50E1               	movf	fsr1l,w,c
 29774  01E780  0FEF               	addlw	-17
 29775  01E782  6ED9               	movwf	fsr2l,c
 29776  01E784  50E2               	movf	fsr1h,w,c
 29777  01E786  6EDA               	movwf	fsr2h,c
 29778  01E788  0EFF               	movlw	255
 29779  01E78A  22DA               	addwfc	fsr2h,f,c
 29780  01E78C  0EE7               	movlw	-25
 29781  01E78E  50E3               	movf	plusw1,w,c
 29782  01E790  5EDE               	subwf	postinc2,f,c
 29783  01E792  0EE8               	movlw	-24
 29784  01E794  50E3               	movf	plusw1,w,c
 29785  01E796  5ADE               	subwfb	postinc2,f,c
 29786  01E798  0EE9               	movlw	-23
 29787  01E79A  50E3               	movf	plusw1,w,c
 29788  01E79C  5ADE               	subwfb	postinc2,f,c
 29789  01E79E  0EEA               	movlw	-22
 29790  01E7A0  50E3               	movf	plusw1,w,c
 29791  01E7A2  5ADE               	subwfb	postinc2,f,c
 29792  01E7A4  0EEB               	movlw	-21
 29793  01E7A6  50E3               	movf	plusw1,w,c
 29794  01E7A8  5ADE               	subwfb	postinc2,f,c
 29795  01E7AA  0EEC               	movlw	-20
 29796  01E7AC  50E3               	movf	plusw1,w,c
 29797  01E7AE  5ADE               	subwfb	postinc2,f,c
 29798  01E7B0  0EED               	movlw	-19
 29799  01E7B2  50E3               	movf	plusw1,w,c
 29800  01E7B4  5ADE               	subwfb	postinc2,f,c
 29801  01E7B6  0EEE               	movlw	-18
 29802  01E7B8  50E3               	movf	plusw1,w,c
 29803  01E7BA  5ADE               	subwfb	postinc2,f,c
 29804                           
 29805                           ;stkvar	_quotient @ sp[(-9)+0]
 29806  01E7BC  0EF7               	movlw	-9
 29807  01E7BE  80E3               	bsf	plusw1,0,c
 29808  01E7C0                     l10830:
 29809                           
 29810                           ;stkvar	_divisor @ sp[(-9)+-16]
 29811  01E7C0  90D8               	bcf	status,0,c
 29812  01E7C2  0EEE               	movlw	-18
 29813  01E7C4  32E3               	rrcf	plusw1,f,c
 29814  01E7C6  0EED               	movlw	-19
 29815  01E7C8  32E3               	rrcf	plusw1,f,c
 29816  01E7CA  0EEC               	movlw	-20
 29817  01E7CC  32E3               	rrcf	plusw1,f,c
 29818  01E7CE  0EEB               	movlw	-21
 29819  01E7D0  32E3               	rrcf	plusw1,f,c
 29820  01E7D2  0EEA               	movlw	-22
 29821  01E7D4  32E3               	rrcf	plusw1,f,c
 29822  01E7D6  0EE9               	movlw	-23
 29823  01E7D8  32E3               	rrcf	plusw1,f,c
 29824  01E7DA  0EE8               	movlw	-24
 29825  01E7DC  32E3               	rrcf	plusw1,f,c
 29826  01E7DE  0EE7               	movlw	-25
 29827  01E7E0  32E3               	rrcf	plusw1,f,c
 29828                           
 29829                           ;stkvar	_counter @ sp[(-9)+8]
 29830  01E7E2  0EFF               	movlw	-1
 29831  01E7E4  50E3               	movf	plusw1,w,c
 29832  01E7E6  6E2A               	movwf	btemp^0,c
 29833  01E7E8  0E01               	movlw	1
 29834  01E7EA  5E2A               	subwf	btemp^0,f,c
 29835  01E7EC  0EFF               	movlw	-1
 29836  01E7EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 29837  01E7F4  A4D8               	btfss	status,2,c
 29838  01E7F6  D791               	goto	u9160
 29839  01E7F8                     u9180:
 29840                           
 29841                           ;stkvar	_quotient @ sp[(-9)+0]
 29842  01E7F8  0EF7               	movlw	247
 29843  01E7FA  24E1               	addwf	fsr1l,w,c
 29844  01E7FC  6ED9               	movwf	fsr2l,c
 29845  01E7FE  0EFF               	movlw	255
 29846  01E800  20E2               	addwfc	fsr1h,w,c
 29847  01E802  6EDA               	movwf	fsr2h,c
 29848                           
 29849                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 29850  01E804  0E08               	movlw	8
 29851  01E806  6E2A               	movwf	btemp^0,c
 29852  01E808  0EEF               	movlw	-17
 29853  01E80A                     us919999:
 29854  01E80A  006F FF7B FFE3     	movff	postinc2,plusw1
 29855  01E810  28E8               	incf	wreg,w,c
 29856  01E812  2E2A               	decfsz	btemp^0,f,c
 29857  01E814  D7FA               	bra	us919999
 29858                           
 29859                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 29860  01E816  0EF7               	movlw	247
 29861  01E818  26E1               	addwf	fsr1l,f,c
 29862  01E81A  0EFF               	movlw	255
 29863  01E81C  22E2               	addwfc	fsr1h,f,c
 29864  01E81E  0012               	return		;funcret
 29865  01E820                     __end_of___lodiv:
 29866                           	opt callstack 0
 29867                           
 29868 ;; *************** function _strncmp *****************
 29869 ;; Defined at:
 29870 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 29871 ;; Parameters:    Size  Location     Type
 29872 ;;  _l              2  [STACK] PTR const unsigned char 
 29873 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29874 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29875 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29876 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29877 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29878 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29879 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29880 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29881 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29882 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29883 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29884 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29885 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29886 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29887 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29888 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29889 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29890 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29891 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29892 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29893 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29894 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29895 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29896 ;;  _r              2  [STACK] PTR const unsigned char 
 29897 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29898 ;;		 -> STR_110(3), STR_106(3), 
 29899 ;;  n               2  [STACK] unsigned int 
 29900 ;; Auto vars:     Size  Location     Type
 29901 ;;  r               2  [STACK] PTR const unsigned char 
 29902 ;;		 -> STR_129(3), STR_125(3), STR_120(3), STR_115(3), 
 29903 ;;		 -> STR_110(3), STR_106(3), 
 29904 ;;  l               2  [STACK] PTR const unsigned char 
 29905 ;;		 -> ct(3), STR_95(127), STR_93(3), STR_92(3), 
 29906 ;;		 -> STR_91(21), STR_90(21), STR_89(21), STR_88(21), 
 29907 ;;		 -> STR_87(21), STR_86(21), STR_85(26), STR_84(15), 
 29908 ;;		 -> STR_83(15), STR_82(15), STR_81(15), STR_80(10), 
 29909 ;;		 -> STR_79(10), STR_78(19), STR_77(19), STR_74(3), 
 29910 ;;		 -> STR_73(14), STR_72(28), STR_71(28), STR_70(28), 
 29911 ;;		 -> STR_69(22), STR_68(22), STR_67(22), STR_66(22), 
 29912 ;;		 -> STR_65(22), STR_64(22), STR_63(22), STR_62(22), 
 29913 ;;		 -> STR_61(22), STR_60(21), STR_59(22), STR_58(22), 
 29914 ;;		 -> STR_57(22), STR_56(22), STR_55(22), STR_54(22), 
 29915 ;;		 -> STR_53(24), STR_52(24), STR_51(24), STR_50(30), 
 29916 ;;		 -> STR_49(24), STR_48(24), STR_47(23), STR_46(23), 
 29917 ;;		 -> STR_45(23), STR_44(23), STR_43(23), STR_42(23), 
 29918 ;;		 -> STR_41(23), STR_40(23), STR_39(23), STR_38(23), 
 29919 ;;		 -> STR_37(23), STR_36(23), STR_35(18), STR_34(17), 
 29920 ;;		 -> STR_33(17), STR_32(22), STR_31(22), STR_30(22), 
 29921 ;;		 -> STR_29(14), STR_28(14), STR_27(27), STR_26(27), 
 29922 ;;		 -> STR_25(23), STR_24(22), STR_23(22), STR_22(22), 
 29923 ;;		 -> STR_21(22), STR_20(23), STR_19(23), STR_18(23), 
 29924 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 29925 ;;		 -> STR_13(21), STR_12(21), STR_11(21), STR_10(21), 
 29926 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 29927 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 29928 ;; Return value:  Size  Location     Type
 29929 ;;                  2  [STACK] int 
 29930 ;; Registers used:
 29931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 29932 ;; Tracked objects:
 29933 ;;		On entry : 0/0
 29934 ;;		On exit  : 0/0
 29935 ;;		Unchanged: 0/0
 29936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29941 ;;Total ram usage:        0 bytes
 29942 ;; Hardware stack levels used:    1
 29943 ;; Hardware stack levels required when called:   15
 29944 ;; This function calls:
 29945 ;;		Nothing
 29946 ;; This function is called by:
 29947 ;;		_vfpfcnvrt
 29948 ;; This function uses a reentrant model
 29949 ;;
 29950                           
 29951                           	psect	text101
 29952  01D2E8                     __ptext101:
 29953                           	opt callstack 0
 29954  01D2E8                     _strncmp:
 29955                           	opt callstack 0
 29956                           
 29957                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29958  01D2E8  52E6               	movf	postinc1,f,c
 29959  01D2EA  52E6               	movf	postinc1,f,c
 29960  01D2EC  52E6               	movf	postinc1,f,c
 29961  01D2EE  52E6               	movf	postinc1,f,c
 29962                           
 29963                           ;stkvar	__l @ sp[(-4)+-2]
 29964                           
 29965                           ;incstack = 0
 29966 ;; hardware stack exceeded
 29967  01D2F0  0EFA               	movlw	-6
 29968  01D2F2  006F FF8C  F034    	movff	plusw1,btemp+10
 29969  01D2F8  0EFB               	movlw	-5
 29970  01D2FA  006F FF8C  F035    	movff	plusw1,btemp+11
 29971                           
 29972                           ;stkvar	_l @ sp[(-4)+2]
 29973  01D300  0EFF               	movlw	-1
 29974  01D302  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29975  01D308  0EFE               	movlw	-2
 29976  01D30A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29977                           
 29978                           ;stkvar	__r @ sp[(-4)+-4]
 29979  01D310  0EF8               	movlw	-8
 29980  01D312  006F FF8C  F034    	movff	plusw1,btemp+10
 29981  01D318  0EF9               	movlw	-7
 29982  01D31A  006F FF8C  F035    	movff	plusw1,btemp+11
 29983                           
 29984                           ;stkvar	_r @ sp[(-4)+0]
 29985  01D320  0EFD               	movlw	-3
 29986  01D322  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 29987  01D328  0EFC               	movlw	-4
 29988  01D32A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 29989                           
 29990                           ;stkvar	_n @ sp[(-4)+-6]
 29991  01D330  0EF6               	movlw	-10
 29992  01D332  006F FF8C  F02A    	movff	plusw1,btemp
 29993  01D338  0E01               	movlw	1
 29994  01D33A  5E2A               	subwf	btemp^0,f,c
 29995  01D33C  0EF6               	movlw	-10
 29996  01D33E  0060  F0AB  FFE3   	movff	btemp,plusw1
 29997  01D344  0EF7               	movlw	-9
 29998  01D346  006F FF8C  F02A    	movff	plusw1,btemp
 29999  01D34C  0E00               	movlw	0
 30000  01D34E  5A2A               	subwfb	btemp^0,f,c
 30001  01D350  0EF7               	movlw	-9
 30002  01D352  0060  F0AB  FFE3   	movff	btemp,plusw1
 30003  01D358  0EF6               	movlw	-10
 30004  01D35A  28E3               	incf	plusw1,w,c
 30005  01D35C  E13F               	bnz	l11518
 30006  01D35E  0EF7               	movlw	-9
 30007  01D360  28E3               	incf	plusw1,w,c
 30008  01D362  A4D8               	btfss	status,2,c
 30009  01D364  D03B               	goto	l11518
 30010  01D366  0E00               	movlw	0
 30011  01D368  6E2A               	movwf	btemp^0,c
 30012  01D36A  0E00               	movlw	0
 30013  01D36C  6E2B               	movwf	(btemp+1)^0,c
 30014  01D36E  D0C7               	goto	l3814
 30015  01D370                     l11516:
 30016                           
 30017                           ;stkvar	_l @ sp[(-4)+2]
 30018  01D370  0EFE               	movlw	-2
 30019  01D372  50E3               	movf	plusw1,w,c
 30020  01D374  0F01               	addlw	1
 30021  01D376  6E2A               	movwf	btemp^0,c
 30022  01D378  0EFE               	movlw	-2
 30023  01D37A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30024  01D380  6A2A               	clrf	btemp^0,c
 30025  01D382  0EFF               	movlw	-1
 30026  01D384  50E3               	movf	plusw1,w,c
 30027  01D386  202A               	addwfc	btemp^0,w,c
 30028  01D388  6E2A               	movwf	btemp^0,c
 30029  01D38A  0EFF               	movlw	-1
 30030  01D38C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30031                           
 30032                           ;stkvar	_r @ sp[(-4)+0]
 30033  01D392  0EFC               	movlw	-4
 30034  01D394  50E3               	movf	plusw1,w,c
 30035  01D396  0F01               	addlw	1
 30036  01D398  6E2A               	movwf	btemp^0,c
 30037  01D39A  0EFC               	movlw	-4
 30038  01D39C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30039  01D3A2  6A2A               	clrf	btemp^0,c
 30040  01D3A4  0EFD               	movlw	-3
 30041  01D3A6  50E3               	movf	plusw1,w,c
 30042  01D3A8  202A               	addwfc	btemp^0,w,c
 30043  01D3AA  6E2A               	movwf	btemp^0,c
 30044  01D3AC  0EFD               	movlw	-3
 30045  01D3AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30046                           
 30047                           ;stkvar	_n @ sp[(-4)+-6]
 30048  01D3B4  0EF6               	movlw	-10
 30049  01D3B6  006F FF8C  F02A    	movff	plusw1,btemp
 30050  01D3BC  0E01               	movlw	1
 30051  01D3BE  5E2A               	subwf	btemp^0,f,c
 30052  01D3C0  0EF6               	movlw	-10
 30053  01D3C2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30054  01D3C8  0EF7               	movlw	-9
 30055  01D3CA  006F FF8C  F02A    	movff	plusw1,btemp
 30056  01D3D0  0E00               	movlw	0
 30057  01D3D2  5A2A               	subwfb	btemp^0,f,c
 30058  01D3D4  0EF7               	movlw	-9
 30059  01D3D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 30060  01D3DC                     l11518:
 30061                           
 30062                           ;stkvar	_l @ sp[(-4)+2]
 30063  01D3DC  0EFE               	movlw	-2
 30064  01D3DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 30065  01D3E4  0EFF               	movlw	-1
 30066  01D3E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 30067  01D3EC  0E00               	movlw	low (__mediumconst shr (0+16))
 30068  01D3EE  6EF8               	movwf	tblptru,c
 30069  01D3F0  0E1F               	movlw	(high __ramtop+-1)
 30070  01D3F2  64F7               	cpfsgt	tblptrh,c
 30071  01D3F4  D003               	bra	u10477
 30072  01D3F6  0008               	tblrd		*
 30073  01D3F8  50F5               	movf	tablat,w,c
 30074  01D3FA  D007               	bra	u10470
 30075  01D3FC                     u10477:
 30076  01D3FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30077  01D402  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30078  01D408  50EF               	movf	indf0,w,c
 30079  01D40A                     u10470:
 30080  01D40A  0900               	iorlw	0
 30081  01D40C  B4D8               	btfsc	status,2,c
 30082  01D40E  D04A               	goto	u10510
 30083                           
 30084                           ;stkvar	_r @ sp[(-4)+0]
 30085  01D410  50E1               	movf	fsr1l,w,c
 30086  01D412  0FFC               	addlw	-4
 30087  01D414  6ED9               	movwf	fsr2l,c
 30088  01D416  50E2               	movf	fsr1h,w,c
 30089  01D418  6EDA               	movwf	fsr2h,c
 30090  01D41A  0EFF               	movlw	255
 30091  01D41C  22DA               	addwfc	fsr2h,f,c
 30092  01D41E  006F FF7B FFF6     	movff	postinc2,tblptrl
 30093  01D424  006F FF77 FFF7     	movff	postdec2,tblptrh
 30094  01D42A                     	if	0	;tblptru may be non-zero
 30095  01D42A                     	endif
 30096  01D42A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30097  01D42A  0E00               	movlw	low (__mediumconst shr (0+16))
 30098  01D42C  6EF8               	movwf	tblptru,c
 30099  01D42E                     	endif
 30100  01D42E  0008               	tblrd		*
 30101  01D430  50F5               	movf	tablat,w,c
 30102  01D432  0900               	iorlw	0
 30103  01D434  B4D8               	btfsc	status,2,c
 30104  01D436  D036               	goto	u10510
 30105                           
 30106                           ;stkvar	_n @ sp[(-4)+-6]
 30107  01D438  0EF6               	movlw	-10
 30108  01D43A  006F FF8C  F02A    	movff	plusw1,btemp
 30109  01D440  0EF7               	movlw	-9
 30110  01D442  50E3               	movf	plusw1,w,c
 30111  01D444  102A               	iorwf	btemp^0,w,c
 30112  01D446  B4D8               	btfsc	status,2,c
 30113  01D448  D02D               	goto	u10510
 30114                           
 30115                           ;stkvar	_r @ sp[(-4)+0]
 30116  01D44A  50E1               	movf	fsr1l,w,c
 30117  01D44C  0FFC               	addlw	-4
 30118  01D44E  6ED9               	movwf	fsr2l,c
 30119  01D450  50E2               	movf	fsr1h,w,c
 30120  01D452  6EDA               	movwf	fsr2h,c
 30121  01D454  0EFF               	movlw	255
 30122  01D456  22DA               	addwfc	fsr2h,f,c
 30123  01D458  006F FF7B FFF6     	movff	postinc2,tblptrl
 30124  01D45E  006F FF77 FFF7     	movff	postdec2,tblptrh
 30125  01D464                     	if	0	;tblptru may be non-zero
 30126  01D464                     	endif
 30127  01D464                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30128  01D464  0E00               	movlw	low (__mediumconst shr (0+16))
 30129  01D466  6EF8               	movwf	tblptru,c
 30130  01D468                     	endif
 30131  01D468  0008               	tblrd		*
 30132  01D46A  006F FFD4  F035    	movff	tablat,btemp+11
 30133                           
 30134                           ;stkvar	_l @ sp[(-4)+2]
 30135  01D470  0EFE               	movlw	-2
 30136  01D472  006F FF8F FFF6     	movff	plusw1,tblptrl
 30137  01D478  0EFF               	movlw	-1
 30138  01D47A  006F FF8F FFF7     	movff	plusw1,tblptrh
 30139  01D480  0E00               	movlw	low (__mediumconst shr (0+16))
 30140  01D482  6EF8               	movwf	tblptru,c
 30141  01D484  0E1F               	movlw	(high __ramtop+-1)
 30142  01D486  64F7               	cpfsgt	tblptrh,c
 30143  01D488  D003               	bra	u10517
 30144  01D48A  0008               	tblrd		*
 30145  01D48C  50F5               	movf	tablat,w,c
 30146  01D48E  D007               	bra	u10515
 30147  01D490                     u10517:
 30148  01D490  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30149  01D496  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30150  01D49C  50EF               	movf	indf0,w,c
 30151  01D49E                     u10515:
 30152  01D49E  1835               	xorwf	(btemp+11)^0,w,c
 30153  01D4A0  B4D8               	btfsc	status,2,c
 30154  01D4A2  D766               	goto	l11516
 30155  01D4A4                     u10510:
 30156                           
 30157                           ;stkvar	_l @ sp[(-4)+2]
 30158  01D4A4  0EFE               	movlw	-2
 30159  01D4A6  006F FF8F FFF6     	movff	plusw1,tblptrl
 30160  01D4AC  0EFF               	movlw	-1
 30161  01D4AE  006F FF8F FFF7     	movff	plusw1,tblptrh
 30162  01D4B4  0E00               	movlw	low (__mediumconst shr (0+16))
 30163  01D4B6  6EF8               	movwf	tblptru,c
 30164  01D4B8  0E1F               	movlw	(high __ramtop+-1)
 30165  01D4BA  64F7               	cpfsgt	tblptrh,c
 30166  01D4BC  D003               	bra	u10527
 30167  01D4BE  0008               	tblrd		*
 30168  01D4C0  50F5               	movf	tablat,w,c
 30169  01D4C2  D007               	bra	u10520
 30170  01D4C4                     u10527:
 30171  01D4C4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30172  01D4CA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30173  01D4D0  50EF               	movf	indf0,w,c
 30174  01D4D2                     u10520:
 30175  01D4D2  6E2A               	movwf	btemp^0,c
 30176  01D4D4  6A2B               	clrf	(btemp+1)^0,c
 30177                           
 30178                           ;stkvar	_r @ sp[(-4)+0]
 30179  01D4D6  50E1               	movf	fsr1l,w,c
 30180  01D4D8  0FFC               	addlw	-4
 30181  01D4DA  6ED9               	movwf	fsr2l,c
 30182  01D4DC  50E2               	movf	fsr1h,w,c
 30183  01D4DE  6EDA               	movwf	fsr2h,c
 30184  01D4E0  0EFF               	movlw	255
 30185  01D4E2  22DA               	addwfc	fsr2h,f,c
 30186  01D4E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 30187  01D4EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 30188  01D4F0                     	if	0	;tblptru may be non-zero
 30189  01D4F0                     	endif
 30190  01D4F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 30191  01D4F0  0E00               	movlw	low (__mediumconst shr (0+16))
 30192  01D4F2  6EF8               	movwf	tblptru,c
 30193  01D4F4                     	endif
 30194  01D4F4  0008               	tblrd		*
 30195  01D4F6  50F5               	movf	tablat,w,c
 30196  01D4F8  5E2A               	subwf	btemp^0,f,c
 30197  01D4FA  0E00               	movlw	0
 30198  01D4FC  5A2B               	subwfb	(btemp+1)^0,f,c
 30199  01D4FE                     l3814:
 30200                           
 30201                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 30202  01D4FE  0EF6               	movlw	246
 30203  01D500  26E1               	addwf	fsr1l,f,c
 30204  01D502  0EFF               	movlw	255
 30205  01D504  22E2               	addwfc	fsr1h,f,c
 30206  01D506  0012               	return		;funcret
 30207  01D508                     __end_of_strncmp:
 30208                           	opt callstack 0
 30209                           
 30210 ;; *************** function _stoa *****************
 30211 ;; Defined at:
 30212 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30213 ;; Parameters:    Size  Location     Type
 30214 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30215 ;;		 -> f(6), NULL(0), 
 30216 ;;  s               2  [STACK] PTR unsigned char 
 30217 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_76(9), 
 30218 ;;		 -> STR_75(12), D.lcd(640), D(642), T(176), 
 30219 ;;		 -> STR_3(5), V(181), 
 30220 ;; Auto vars:     Size  Location     Type
 30221 ;;  nuls            7  [STACK] unsigned char [7]
 30222 ;;  l               2  [STACK] int 
 30223 ;;  p               2  [STACK] int 
 30224 ;;  cp              2  [STACK] PTR unsigned char 
 30225 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 30226 ;;		 -> STR_76(9), STR_75(12), D.lcd(640), D(642), 
 30227 ;;		 -> T(176), STR_3(5), V(181), 
 30228 ;;  w               2  [STACK] int 
 30229 ;;  i               2  [STACK] int 
 30230 ;; Return value:  Size  Location     Type
 30231 ;;                  2  [STACK] int 
 30232 ;; Registers used:
 30233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 30234 ;; Tracked objects:
 30235 ;;		On entry : 0/0
 30236 ;;		On exit  : 0/0
 30237 ;;		Unchanged: 0/0
 30238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30243 ;;Total ram usage:        0 bytes
 30244 ;; Hardware stack levels used:    1
 30245 ;; Hardware stack levels required when called:   18
 30246 ;; This function calls:
 30247 ;;		_fputc
 30248 ;;		_strlen
 30249 ;; This function is called by:
 30250 ;;		_vfpfcnvrt
 30251 ;; This function uses a reentrant model
 30252 ;;
 30253                           
 30254                           	psect	text102
 30255  01BD3C                     __ptext102:
 30256                           	opt callstack 0
 30257  01BD3C                     _stoa:
 30258                           	opt callstack 0
 30259                           
 30260                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30261  01BD3C  0E11               	movlw	17
 30262  01BD3E  26E1               	addwf	fsr1l,f,c
 30263  01BD40  0E00               	movlw	0
 30264  01BD42  22E2               	addwfc	fsr1h,f,c
 30265                           
 30266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 30267                           
 30268                           ;incstack = 0
 30269 ;; hardware stack exceeded
 30270  01BD44  EE20  F200         	lfsr	2,stoa@F1166
 30271                           
 30272                           ;stkvar	_nuls @ sp[(-17)+0]
 30273  01BD48  0E07               	movlw	7
 30274  01BD4A  6E2A               	movwf	btemp^0,c
 30275  01BD4C  0EEF               	movlw	-17
 30276  01BD4E                     us1527999:
 30277  01BD4E  006F FF7B FFE3     	movff	postinc2,plusw1
 30278  01BD54  28E8               	incf	wreg,w,c
 30279  01BD56  2E2A               	decfsz	btemp^0,f,c
 30280  01BD58  D7FA               	bra	us1527999
 30281                           
 30282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 30283                           ;stkvar	_s @ sp[(-17)+-4]
 30284  01BD5A  0EEB               	movlw	-21
 30285  01BD5C  006F FF8C  F034    	movff	plusw1,btemp+10
 30286  01BD62  0EEC               	movlw	-20
 30287  01BD64  006F FF8C  F035    	movff	plusw1,btemp+11
 30288                           
 30289                           ;stkvar	_cp @ sp[(-17)+11]
 30290  01BD6A  0EFB               	movlw	-5
 30291  01BD6C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30292  01BD72  0EFA               	movlw	-6
 30293  01BD74  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30294                           
 30295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 30296                           ;stkvar	_cp @ sp[(-17)+11]
 30297  01BD7A  0EFA               	movlw	-6
 30298  01BD7C  006F FF8C  F02A    	movff	plusw1,btemp
 30299  01BD82  0EFB               	movlw	-5
 30300  01BD84  50E3               	movf	plusw1,w,c
 30301  01BD86  102A               	iorwf	btemp^0,w,c
 30302  01BD88  A4D8               	btfss	status,2,c
 30303  01BD8A  D00E               	goto	l15968
 30304                           
 30305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 30306                           ;stkvar	_nuls @ sp[(-17)+0]
 30307  01BD8C  0EEF               	movlw	239
 30308  01BD8E  24E1               	addwf	fsr1l,w,c
 30309  01BD90  6E34               	movwf	(btemp+10)^0,c
 30310  01BD92  0EFF               	movlw	255
 30311  01BD94  20E2               	addwfc	fsr1h,w,c
 30312  01BD96  6E35               	movwf	(btemp+11)^0,c
 30313                           
 30314                           ;stkvar	_cp @ sp[(-17)+11]
 30315  01BD98  0EFB               	movlw	-5
 30316  01BD9A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30317  01BDA0  0EFA               	movlw	-6
 30318  01BDA2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30319  01BDA8                     l15968:
 30320                           
 30321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 30322                           ;stkvar	_cp @ sp[(-17)+11]
 30323  01BDA8  0EFA               	movlw	-6
 30324  01BDAA  006F FF8F FFE6     	movff	plusw1,postinc1
 30325  01BDB0  006F FF8F FFE6     	movff	plusw1,postinc1
 30326  01BDB6  EC63  F007         	call	_strlen	;wreg free
 30327                           
 30328                           ;stkvar	_l @ sp[(-17)+7]
 30329  01BDBA  0EF6               	movlw	-10
 30330  01BDBC  0060  F0AB  FFE3   	movff	btemp,plusw1
 30331  01BDC2  0EF7               	movlw	-9
 30332  01BDC4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30333                           
 30334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 30335                           ;stkvar	_p @ sp[(-17)+9]
 30336  01BDCA  0EF8               	movlw	-8
 30337  01BDCC  0060  F133  FFE3   	movff	_prec,plusw1
 30338  01BDD2  0EF9               	movlw	-7
 30339  01BDD4  0060  F137  FFE3   	movff	_prec+1,plusw1
 30340                           
 30341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 30342                           ;stkvar	_p @ sp[(-17)+9]
 30343  01BDDA  0EF9               	movlw	-7
 30344  01BDDC  BEE3               	btfsc	plusw1,7,c
 30345  01BDDE  D023               	goto	l2609
 30346                           
 30347                           ;stkvar	_l @ sp[(-17)+7]
 30348                           ;stkvar	_p @ sp[(-17)+9]
 30349  01BDE0  50E1               	movf	fsr1l,w,c
 30350  01BDE2  0FF8               	addlw	-8
 30351  01BDE4  6ED9               	movwf	fsr2l,c
 30352  01BDE6  50E2               	movf	fsr1h,w,c
 30353  01BDE8  6EDA               	movwf	fsr2h,c
 30354  01BDEA  0EFF               	movlw	255
 30355  01BDEC  22DA               	addwfc	fsr2h,f,c
 30356  01BDEE  0EF6               	movlw	-10
 30357  01BDF0  50E3               	movf	plusw1,w,c
 30358  01BDF2  5CDE               	subwf	postinc2,w,c
 30359  01BDF4  50DE               	movf	postinc2,w,c
 30360  01BDF6  0A80               	xorlw	128
 30361  01BDF8  6E2A               	movwf	btemp^0,c
 30362  01BDFA  0EF7               	movlw	-9
 30363  01BDFC  50E3               	movf	plusw1,w,c
 30364  01BDFE  0A80               	xorlw	128
 30365  01BE00  582A               	subwfb	btemp^0,w,c
 30366  01BE02  B0D8               	btfsc	status,0,c
 30367  01BE04  D010               	goto	l2609
 30368                           
 30369                           ;stkvar	_p @ sp[(-17)+9]
 30370                           ;stkvar	_l @ sp[(-17)+7]
 30371  01BE06  0EF8               	movlw	-8
 30372  01BE08  006F FF8C  F02A    	movff	plusw1,btemp
 30373  01BE0E  0EF6               	movlw	-10
 30374  01BE10  0060  F0AB  FFE3   	movff	btemp,plusw1
 30375  01BE16  0EF9               	movlw	-7
 30376  01BE18  006F FF8C  F02A    	movff	plusw1,btemp
 30377  01BE1E  0EF7               	movlw	-9
 30378  01BE20  0060  F0AB  FFE3   	movff	btemp,plusw1
 30379  01BE26                     l2609:
 30380                           
 30381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 30382                           ;stkvar	_l @ sp[(-17)+7]
 30383                           ;stkvar	_p @ sp[(-17)+9]
 30384  01BE26  0EF6               	movlw	-10
 30385  01BE28  006F FF8C  F02A    	movff	plusw1,btemp
 30386  01BE2E  0EF8               	movlw	-8
 30387  01BE30  0060  F0AB  FFE3   	movff	btemp,plusw1
 30388  01BE36  0EF7               	movlw	-9
 30389  01BE38  006F FF8C  F02A    	movff	plusw1,btemp
 30390  01BE3E  0EF9               	movlw	-7
 30391  01BE40  0060  F0AB  FFE3   	movff	btemp,plusw1
 30392                           
 30393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 30394                           ;stkvar	_w @ sp[(-17)+13]
 30395  01BE46  0EFC               	movlw	-4
 30396  01BE48  0060  F12B  FFE3   	movff	_width,plusw1
 30397  01BE4E  0EFD               	movlw	-3
 30398  01BE50  0060  F12F  FFE3   	movff	_width+1,plusw1
 30399                           
 30400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 30401  01BE56  A04E               	btfss	_flags^0,0,c
 30402  01BE58  D01F               	goto	l15988
 30403  01BE5A  D031               	goto	u15320
 30404  01BE5C                     l15984:
 30405                           
 30406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 30407                           ;stkvar	_fp @ sp[(-17)+-2]
 30408  01BE5C  0EED               	movlw	-19
 30409  01BE5E  006F FF8F FFE6     	movff	plusw1,postinc1
 30410  01BE64  006F FF8F FFE6     	movff	plusw1,postinc1
 30411  01BE6A  0E20               	movlw	32
 30412  01BE6C  6EE6               	movwf	postinc1,c
 30413  01BE6E  0E00               	movlw	0
 30414  01BE70  6EE6               	movwf	postinc1,c
 30415  01BE72  EC24  F0FC         	call	_fputc	;wreg free
 30416                           
 30417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 30418                           ;stkvar	_l @ sp[(-17)+7]
 30419  01BE76  0EF6               	movlw	-10
 30420  01BE78  50E3               	movf	plusw1,w,c
 30421  01BE7A  0F01               	addlw	1
 30422  01BE7C  6E2A               	movwf	btemp^0,c
 30423  01BE7E  0EF6               	movlw	-10
 30424  01BE80  0060  F0AB  FFE3   	movff	btemp,plusw1
 30425  01BE86  6A2A               	clrf	btemp^0,c
 30426  01BE88  0EF7               	movlw	-9
 30427  01BE8A  50E3               	movf	plusw1,w,c
 30428  01BE8C  202A               	addwfc	btemp^0,w,c
 30429  01BE8E  6E2A               	movwf	btemp^0,c
 30430  01BE90  0EF7               	movlw	-9
 30431  01BE92  0060  F0AB  FFE3   	movff	btemp,plusw1
 30432  01BE98                     l15988:
 30433                           
 30434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 30435                           ;stkvar	_w @ sp[(-17)+13]
 30436                           ;stkvar	_l @ sp[(-17)+7]
 30437  01BE98  50E1               	movf	fsr1l,w,c
 30438  01BE9A  0FF6               	addlw	-10
 30439  01BE9C  6ED9               	movwf	fsr2l,c
 30440  01BE9E  50E2               	movf	fsr1h,w,c
 30441  01BEA0  6EDA               	movwf	fsr2h,c
 30442  01BEA2  0EFF               	movlw	255
 30443  01BEA4  22DA               	addwfc	fsr2h,f,c
 30444  01BEA6  0EFC               	movlw	-4
 30445  01BEA8  50E3               	movf	plusw1,w,c
 30446  01BEAA  5CDE               	subwf	postinc2,w,c
 30447  01BEAC  50DE               	movf	postinc2,w,c
 30448  01BEAE  0A80               	xorlw	128
 30449  01BEB0  6E2A               	movwf	btemp^0,c
 30450  01BEB2  0EFD               	movlw	-3
 30451  01BEB4  50E3               	movf	plusw1,w,c
 30452  01BEB6  0A80               	xorlw	128
 30453  01BEB8  582A               	subwfb	btemp^0,w,c
 30454  01BEBA  A0D8               	btfss	status,0,c
 30455  01BEBC  D7CF               	goto	l15984
 30456  01BEBE                     u15320:
 30457                           
 30458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 30459                           ;stkvar	_i @ sp[(-17)+15]
 30460  01BEBE  0EFE               	movlw	-2
 30461  01BEC0  6AE3               	clrf	plusw1,c
 30462  01BEC2  0EFF               	movlw	-1
 30463  01BEC4  6AE3               	clrf	plusw1,c
 30464                           
 30465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30466  01BEC6  D045               	goto	l15998
 30467  01BEC8                     l15992:
 30468                           
 30469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 30470                           ;stkvar	_fp @ sp[(-17)+-2]
 30471  01BEC8  0EED               	movlw	-19
 30472  01BECA  006F FF8F FFE6     	movff	plusw1,postinc1
 30473  01BED0  006F FF8F FFE6     	movff	plusw1,postinc1
 30474                           
 30475                           ;stkvar	_cp @ sp[(-19)+11]
 30476  01BED6  0EF8               	movlw	-8
 30477  01BED8  006F FF8F FFF6     	movff	plusw1,tblptrl
 30478  01BEDE  0EF9               	movlw	-7
 30479  01BEE0  006F FF8F FFF7     	movff	plusw1,tblptrh
 30480  01BEE6  0E00               	movlw	low (__mediumconst shr (0+16))
 30481  01BEE8  6EF8               	movwf	tblptru,c
 30482  01BEEA  0E1F               	movlw	(high __ramtop+-1)
 30483  01BEEC  64F7               	cpfsgt	tblptrh,c
 30484  01BEEE  D003               	bra	u15337
 30485  01BEF0  0008               	tblrd		*
 30486  01BEF2  50F5               	movf	tablat,w,c
 30487  01BEF4  D007               	bra	u15330
 30488  01BEF6                     u15337:
 30489  01BEF6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 30490  01BEFC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 30491  01BF02  50EF               	movf	indf0,w,c
 30492  01BF04                     u15330:
 30493  01BF04  6EE6               	movwf	postinc1,c
 30494  01BF06  0E00               	movlw	0
 30495  01BF08  6EE6               	movwf	postinc1,c
 30496  01BF0A  EC24  F0FC         	call	_fputc	;wreg free
 30497                           
 30498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 30499                           ;stkvar	_cp @ sp[(-17)+11]
 30500  01BF0E  0EFA               	movlw	-6
 30501  01BF10  50E3               	movf	plusw1,w,c
 30502  01BF12  0F01               	addlw	1
 30503  01BF14  6E2A               	movwf	btemp^0,c
 30504  01BF16  0EFA               	movlw	-6
 30505  01BF18  0060  F0AB  FFE3   	movff	btemp,plusw1
 30506  01BF1E  6A2A               	clrf	btemp^0,c
 30507  01BF20  0EFB               	movlw	-5
 30508  01BF22  50E3               	movf	plusw1,w,c
 30509  01BF24  202A               	addwfc	btemp^0,w,c
 30510  01BF26  6E2A               	movwf	btemp^0,c
 30511  01BF28  0EFB               	movlw	-5
 30512  01BF2A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30513                           
 30514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 30515                           ;stkvar	_i @ sp[(-17)+15]
 30516  01BF30  0EFE               	movlw	-2
 30517  01BF32  50E3               	movf	plusw1,w,c
 30518  01BF34  0F01               	addlw	1
 30519  01BF36  6E2A               	movwf	btemp^0,c
 30520  01BF38  0EFE               	movlw	-2
 30521  01BF3A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30522  01BF40  6A2A               	clrf	btemp^0,c
 30523  01BF42  0EFF               	movlw	-1
 30524  01BF44  50E3               	movf	plusw1,w,c
 30525  01BF46  202A               	addwfc	btemp^0,w,c
 30526  01BF48  6E2A               	movwf	btemp^0,c
 30527  01BF4A  0EFF               	movlw	-1
 30528  01BF4C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30529  01BF52                     l15998:
 30530                           
 30531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 30532                           ;stkvar	_p @ sp[(-17)+9]
 30533                           ;stkvar	_i @ sp[(-17)+15]
 30534  01BF52  50E1               	movf	fsr1l,w,c
 30535  01BF54  0FFE               	addlw	-2
 30536  01BF56  6ED9               	movwf	fsr2l,c
 30537  01BF58  50E2               	movf	fsr1h,w,c
 30538  01BF5A  6EDA               	movwf	fsr2h,c
 30539  01BF5C  0EFF               	movlw	255
 30540  01BF5E  22DA               	addwfc	fsr2h,f,c
 30541  01BF60  0EF8               	movlw	-8
 30542  01BF62  50E3               	movf	plusw1,w,c
 30543  01BF64  5CDE               	subwf	postinc2,w,c
 30544  01BF66  50DE               	movf	postinc2,w,c
 30545  01BF68  0A80               	xorlw	128
 30546  01BF6A  6E2A               	movwf	btemp^0,c
 30547  01BF6C  0EF9               	movlw	-7
 30548  01BF6E  50E3               	movf	plusw1,w,c
 30549  01BF70  0A80               	xorlw	128
 30550  01BF72  582A               	subwfb	btemp^0,w,c
 30551  01BF74  A0D8               	btfss	status,0,c
 30552  01BF76  D7A8               	goto	l15992
 30553                           
 30554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 30555  01BF78  B04E               	btfsc	_flags^0,0,c
 30556  01BF7A  D01F               	goto	l16006
 30557  01BF7C  D031               	goto	u15360
 30558  01BF7E                     l16002:
 30559                           
 30560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 30561                           ;stkvar	_fp @ sp[(-17)+-2]
 30562  01BF7E  0EED               	movlw	-19
 30563  01BF80  006F FF8F FFE6     	movff	plusw1,postinc1
 30564  01BF86  006F FF8F FFE6     	movff	plusw1,postinc1
 30565  01BF8C  0E20               	movlw	32
 30566  01BF8E  6EE6               	movwf	postinc1,c
 30567  01BF90  0E00               	movlw	0
 30568  01BF92  6EE6               	movwf	postinc1,c
 30569  01BF94  EC24  F0FC         	call	_fputc	;wreg free
 30570                           
 30571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 30572                           ;stkvar	_l @ sp[(-17)+7]
 30573  01BF98  0EF6               	movlw	-10
 30574  01BF9A  50E3               	movf	plusw1,w,c
 30575  01BF9C  0F01               	addlw	1
 30576  01BF9E  6E2A               	movwf	btemp^0,c
 30577  01BFA0  0EF6               	movlw	-10
 30578  01BFA2  0060  F0AB  FFE3   	movff	btemp,plusw1
 30579  01BFA8  6A2A               	clrf	btemp^0,c
 30580  01BFAA  0EF7               	movlw	-9
 30581  01BFAC  50E3               	movf	plusw1,w,c
 30582  01BFAE  202A               	addwfc	btemp^0,w,c
 30583  01BFB0  6E2A               	movwf	btemp^0,c
 30584  01BFB2  0EF7               	movlw	-9
 30585  01BFB4  0060  F0AB  FFE3   	movff	btemp,plusw1
 30586  01BFBA                     l16006:
 30587                           
 30588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 30589                           ;stkvar	_w @ sp[(-17)+13]
 30590                           ;stkvar	_l @ sp[(-17)+7]
 30591  01BFBA  50E1               	movf	fsr1l,w,c
 30592  01BFBC  0FF6               	addlw	-10
 30593  01BFBE  6ED9               	movwf	fsr2l,c
 30594  01BFC0  50E2               	movf	fsr1h,w,c
 30595  01BFC2  6EDA               	movwf	fsr2h,c
 30596  01BFC4  0EFF               	movlw	255
 30597  01BFC6  22DA               	addwfc	fsr2h,f,c
 30598  01BFC8  0EFC               	movlw	-4
 30599  01BFCA  50E3               	movf	plusw1,w,c
 30600  01BFCC  5CDE               	subwf	postinc2,w,c
 30601  01BFCE  50DE               	movf	postinc2,w,c
 30602  01BFD0  0A80               	xorlw	128
 30603  01BFD2  6E2A               	movwf	btemp^0,c
 30604  01BFD4  0EFD               	movlw	-3
 30605  01BFD6  50E3               	movf	plusw1,w,c
 30606  01BFD8  0A80               	xorlw	128
 30607  01BFDA  582A               	subwfb	btemp^0,w,c
 30608  01BFDC  A0D8               	btfss	status,0,c
 30609  01BFDE  D7CF               	goto	l16002
 30610  01BFE0                     u15360:
 30611                           
 30612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 30613                           ;stkvar	_l @ sp[(-17)+7]
 30614  01BFE0  0EF6               	movlw	-10
 30615  01BFE2  006F FF8C  F02A    	movff	plusw1,btemp
 30616  01BFE8  0EF7               	movlw	-9
 30617  01BFEA  006F FF8C  F02B    	movff	plusw1,btemp+1
 30618                           
 30619                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 30620  01BFF0  0EEB               	movlw	235
 30621  01BFF2  26E1               	addwf	fsr1l,f,c
 30622  01BFF4  0EFF               	movlw	255
 30623  01BFF6  22E2               	addwfc	fsr1h,f,c
 30624  01BFF8  0012               	return		;funcret
 30625  01BFFA                     __end_of_stoa:
 30626                           	opt callstack 0
 30627                           
 30628 ;; *************** function _efgtoa *****************
 30629 ;; Defined at:
 30630 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 30631 ;; Parameters:    Size  Location     Type
 30632 ;;  fp              2  [STACK] PTR struct _IO_FILE
 30633 ;;		 -> f(6), NULL(0), 
 30634 ;;  f               4  [STACK] PTR struct _IO_FILE
 30635 ;;  c               1  [STACK] unsigned char 
 30636 ;; Auto vars:     Size  Location     Type
 30637 ;;  u               4  [STACK] unsigned char 
 30638 ;;  g               4  [STACK] unsigned char 
 30639 ;;  l               4  [STACK] unsigned char 
 30640 ;;  h               4  [STACK] unsigned char 
 30641 ;;  ou              4  [STACK] unsigned char 
 30642 ;;  n               2  [STACK] int 
 30643 ;;  e               2  [STACK] int 
 30644 ;;  i               2  [STACK] int 
 30645 ;;  w               2  [STACK] int 
 30646 ;;  p               2  [STACK] int 
 30647 ;;  sign            2  [STACK] int 
 30648 ;;  d               2  [STACK] int 
 30649 ;;  ne              2  [STACK] int 
 30650 ;;  m               2  [STACK] int 
 30651 ;;  pp              2  [STACK] int 
 30652 ;;  t               2  [STACK] int 
 30653 ;;  mode            1  [STACK] unsigned char 
 30654 ;;  nmode           1  [STACK] unsigned char 
 30655 ;; Return value:  Size  Location     Type
 30656 ;;                  2  [STACK] int 
 30657 ;; Registers used:
 30658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 30659 ;; Tracked objects:
 30660 ;;		On entry : 0/0
 30661 ;;		On exit  : 0/0
 30662 ;;		Unchanged: 0/0
 30663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30668 ;;Total ram usage:        0 bytes
 30669 ;; Hardware stack levels used:    1
 30670 ;; Hardware stack levels required when called:   20
 30671 ;; This function calls:
 30672 ;;		___awdiv
 30673 ;;		___awmod
 30674 ;;		___fladd
 30675 ;;		___fldiv
 30676 ;;		___fleq
 30677 ;;		___flge
 30678 ;;		___flmul
 30679 ;;		___flneg
 30680 ;;		___flsub
 30681 ;;		___fltol
 30682 ;;		___fpclassifyf
 30683 ;;		_floorf
 30684 ;;		_isupper
 30685 ;;		_pad
 30686 ;;		_strcpy
 30687 ;;		_tolower
 30688 ;; This function is called by:
 30689 ;;		_vfpfcnvrt
 30690 ;; This function uses a reentrant model
 30691 ;;
 30692                           
 30693                           	psect	text103
 30694  011720                     __ptext103:
 30695                           	opt callstack 0
 30696  011720                     _efgtoa:
 30697                           	opt callstack 0
 30698                           
 30699                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30700  011720  0E38               	movlw	56
 30701  011722  26E1               	addwf	fsr1l,f,c
 30702  011724  0E00               	movlw	0
 30703  011726  22E2               	addwfc	fsr1h,f,c
 30704                           
 30705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 30706                           ;stkvar	_sign @ sp[(-56)+42]
 30707                           
 30708                           ;incstack = 0
 30709 ;; hardware stack exceeded
 30710  011728  0EF2               	movlw	-14
 30711  01172A  6AE3               	clrf	plusw1,c
 30712  01172C  0EF3               	movlw	-13
 30713  01172E  6AE3               	clrf	plusw1,c
 30714                           
 30715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 30716                           ;stkvar	_f @ sp[(-56)+-6]
 30717  011730  0EC2               	movlw	-62
 30718  011732  006F FF8C  F032    	movff	plusw1,btemp+8
 30719  011738  0EC3               	movlw	-61
 30720  01173A  006F FF8C  F033    	movff	plusw1,btemp+9
 30721  011740  0EC4               	movlw	-60
 30722  011742  006F FF8C  F034    	movff	plusw1,btemp+10
 30723  011748  0EC5               	movlw	-59
 30724  01174A  006F FF8C  F035    	movff	plusw1,btemp+11
 30725                           
 30726                           ;stkvar	_g @ sp[(-56)+16]
 30727  011750  0ED8               	movlw	-40
 30728  011752  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 30729  011758  0ED9               	movlw	-39
 30730  01175A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 30731  011760  0EDA               	movlw	-38
 30732  011762  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30733  011768  0EDB               	movlw	-37
 30734  01176A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30735                           
 30736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 30737                           ;stkvar	_g @ sp[(-56)+16]
 30738  011770  0EDB               	movlw	-37
 30739  011772  AEE3               	btfss	plusw1,7,c
 30740  011774  D02B               	goto	l15666
 30741                           
 30742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 30743  011776  0E01               	movlw	1
 30744  011778  6E34               	movwf	(btemp+10)^0,c
 30745  01177A  0E00               	movlw	0
 30746  01177C  6E35               	movwf	(btemp+11)^0,c
 30747                           
 30748                           ;stkvar	_sign @ sp[(-56)+42]
 30749  01177E  0EF2               	movlw	-14
 30750  011780  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30751  011786  0EF3               	movlw	-13
 30752  011788  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30753                           
 30754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 30755                           ;stkvar	_g @ sp[(-56)+16]
 30756  01178E  0ED8               	movlw	-40
 30757  011790  006F FF8F FFE6     	movff	plusw1,postinc1
 30758  011796  006F FF8F FFE6     	movff	plusw1,postinc1
 30759  01179C  006F FF8F FFE6     	movff	plusw1,postinc1
 30760  0117A2  006F FF8F FFE6     	movff	plusw1,postinc1
 30761  0117A8  ECA4  F00F         	call	___flneg	;wreg free
 30762                           
 30763                           ;stkvar	_g @ sp[(-56)+16]
 30764  0117AC  0ED8               	movlw	-40
 30765  0117AE  0060  F0AB  FFE3   	movff	btemp,plusw1
 30766  0117B4  0ED9               	movlw	-39
 30767  0117B6  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 30768  0117BC  0EDA               	movlw	-38
 30769  0117BE  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 30770  0117C4  0EDB               	movlw	-37
 30771  0117C6  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 30772  0117CC                     l15666:
 30773                           
 30774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 30775                           ;stkvar	_n @ sp[(-56)+32]
 30776  0117CC  0EE8               	movlw	-24
 30777  0117CE  6AE3               	clrf	plusw1,c
 30778  0117D0  0EE9               	movlw	-23
 30779  0117D2  6AE3               	clrf	plusw1,c
 30780                           
 30781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 30782                           ;stkvar	_w @ sp[(-56)+38]
 30783  0117D4  0EEE               	movlw	-18
 30784  0117D6  0060  F12B  FFE3   	movff	_width,plusw1
 30785  0117DC  0EEF               	movlw	-17
 30786  0117DE  0060  F12F  FFE3   	movff	_width+1,plusw1
 30787                           
 30788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 30789                           ;stkvar	_sign @ sp[(-56)+42]
 30790  0117E4  0EF2               	movlw	-14
 30791  0117E6  006F FF8C  F02A    	movff	plusw1,btemp
 30792  0117EC  0EF3               	movlw	-13
 30793  0117EE  50E3               	movf	plusw1,w,c
 30794  0117F0  102A               	iorwf	btemp^0,w,c
 30795  0117F2  A4D8               	btfss	status,2,c
 30796  0117F4  D002               	goto	u14770
 30797  0117F6  A44E               	btfss	_flags^0,2,c
 30798  0117F8  D036               	goto	l15686
 30799  0117FA                     u14770:
 30800                           
 30801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 30802                           ;stkvar	_sign @ sp[(-56)+42]
 30803  0117FA  0EF2               	movlw	-14
 30804  0117FC  006F FF8C  F02A    	movff	plusw1,btemp
 30805  011802  0EF3               	movlw	-13
 30806  011804  50E3               	movf	plusw1,w,c
 30807  011806  102A               	iorwf	btemp^0,w,c
 30808  011808  A4D8               	btfss	status,2,c
 30809  01180A  D002               	goto	l15678
 30810  01180C  0E2B               	movlw	43
 30811  01180E  D001               	goto	L31
 30812  011810                     l15678:
 30813  011810  0E2D               	movlw	45
 30814  011812                     L31:
 30815  011812  6E34               	movwf	(btemp+10)^0,c
 30816  011814  0E00               	movlw	0
 30817  011816  6E35               	movwf	(btemp+11)^0,c
 30818                           
 30819                           ;stkvar	_efgtoa$6614 @ sp[(-56)+10]
 30820  011818  0ED2               	movlw	-46
 30821  01181A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30822  011820  0ED3               	movlw	-45
 30823  011822  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30824                           
 30825                           ;stkvar	_efgtoa$6614 @ sp[(-56)+10]
 30826  011828  0ED2               	movlw	-46
 30827  01182A  006F FF8C  F354    	movff	plusw1,_dbuf
 30828                           
 30829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 30830                           ;stkvar	_n @ sp[(-56)+32]
 30831  011830  0EE8               	movlw	-24
 30832  011832  50E3               	movf	plusw1,w,c
 30833  011834  0F01               	addlw	1
 30834  011836  6E2A               	movwf	btemp^0,c
 30835  011838  0EE8               	movlw	-24
 30836  01183A  0060  F0AB  FFE3   	movff	btemp,plusw1
 30837  011840  6A2A               	clrf	btemp^0,c
 30838  011842  0EE9               	movlw	-23
 30839  011844  50E3               	movf	plusw1,w,c
 30840  011846  202A               	addwfc	btemp^0,w,c
 30841  011848  6E2A               	movwf	btemp^0,c
 30842  01184A  0EE9               	movlw	-23
 30843  01184C  0060  F0AB  FFE3   	movff	btemp,plusw1
 30844                           
 30845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 30846                           ;stkvar	_w @ sp[(-56)+38]
 30847  011852  50E1               	movf	fsr1l,w,c
 30848  011854  0FEE               	addlw	-18
 30849  011856  6ED9               	movwf	fsr2l,c
 30850  011858  50E2               	movf	fsr1h,w,c
 30851  01185A  6EDA               	movwf	fsr2h,c
 30852  01185C  0EFF               	movlw	255
 30853  01185E  22DA               	addwfc	fsr2h,f,c
 30854  011860  06DE               	decf	postinc2,f,c
 30855  011862  0E00               	movlw	0
 30856  011864  5ADD               	subwfb	postdec2,f,c
 30857  011866                     l15686:
 30858                           
 30859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30860                           ;stkvar	_g @ sp[(-56)+16]
 30861  011866  0ED8               	movlw	-40
 30862  011868  006F FF8F FFE6     	movff	plusw1,postinc1
 30863  01186E  006F FF8F FFE6     	movff	plusw1,postinc1
 30864  011874  006F FF8F FFE6     	movff	plusw1,postinc1
 30865  01187A  006F FF8F FFE6     	movff	plusw1,postinc1
 30866  011880  EC31  F0F0         	call	___fpclassifyf	;wreg free
 30867  011884  042A               	decf	btemp^0,w,c
 30868  011886  102B               	iorwf	(btemp+1)^0,w,c
 30869  011888  A4D8               	btfss	status,2,c
 30870  01188A  D076               	goto	l15704
 30871  01188C  0EBF               	movlw	191
 30872  01188E  6E34               	movwf	(btemp+10)^0,c
 30873  011890  0EFF               	movlw	255
 30874  011892  6E35               	movwf	(btemp+11)^0,c
 30875                           
 30876                           ;stkvar	_c @ sp[(-56)+-7]
 30877  011894  0EC1               	movlw	-63
 30878  011896  50E3               	movf	plusw1,w,c
 30879  011898  6E32               	movwf	(btemp+8)^0,c
 30880  01189A  6A33               	clrf	(btemp+9)^0,c
 30881  01189C  5034               	movf	(btemp+10)^0,w,c
 30882  01189E  2632               	addwf	(btemp+8)^0,f,c
 30883  0118A0  5035               	movf	(btemp+11)^0,w,c
 30884  0118A2  2233               	addwfc	(btemp+9)^0,f,c
 30885  0118A4  5033               	movf	(btemp+9)^0,w,c
 30886  0118A6  E106               	bnz	u14800
 30887  0118A8  0E1A               	movlw	26
 30888  0118AA  5C32               	subwf	(btemp+8)^0,w,c
 30889  0118AC  B0D8               	btfsc	status,0,c
 30890  0118AE  D002               	goto	u14800
 30891  0118B0  0E01               	movlw	1
 30892  0118B2  D001               	goto	u14810
 30893  0118B4                     u14800:
 30894  0118B4  0E00               	movlw	0
 30895  0118B6                     u14810:
 30896  0118B6  6E34               	movwf	(btemp+10)^0,c
 30897  0118B8  6A35               	clrf	(btemp+11)^0,c
 30898                           
 30899                           ;stkvar	_efgtoa$6615 @ sp[(-56)+8]
 30900  0118BA  0ED0               	movlw	-48
 30901  0118BC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 30902  0118C2  0ED1               	movlw	-47
 30903  0118C4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 30904                           
 30905                           ;stkvar	_efgtoa$6615 @ sp[(-56)+8]
 30906  0118CA  0ED0               	movlw	-48
 30907  0118CC  006F FF8C  F02A    	movff	plusw1,btemp
 30908  0118D2  0ED1               	movlw	-47
 30909  0118D4  50E3               	movf	plusw1,w,c
 30910  0118D6  102A               	iorwf	btemp^0,w,c
 30911  0118D8  B4D8               	btfsc	status,2,c
 30912  0118DA  D017               	goto	l15696
 30913                           
 30914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 30915  0118DC  0EDA               	movlw	low STR_96
 30916  0118DE  6EE6               	movwf	postinc1,c
 30917  0118E0  0EFF               	movlw	high STR_96
 30918  0118E2  6EE6               	movwf	postinc1,c
 30919                           
 30920                           ;stkvar	_n @ sp[(-58)+32]
 30921  0118E4  0E54               	movlw	low _dbuf
 30922  0118E6  6E34               	movwf	(btemp+10)^0,c
 30923  0118E8  0E03               	movlw	high _dbuf
 30924  0118EA  6E35               	movwf	(btemp+11)^0,c
 30925  0118EC  0EE6               	movlw	-26
 30926  0118EE  50E3               	movf	plusw1,w,c
 30927  0118F0  2634               	addwf	(btemp+10)^0,f,c
 30928  0118F2  0EE7               	movlw	-25
 30929  0118F4  50E3               	movf	plusw1,w,c
 30930  0118F6  2235               	addwfc	(btemp+11)^0,f,c
 30931  0118F8  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30932  0118FE  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30933  011904  EC17  F003         	call	_strcpy	;wreg free
 30934                           
 30935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 30936  011908  D016               	goto	l15698
 30937  01190A                     l15696:
 30938                           
 30939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 30940  01190A  0EE2               	movlw	low STR_97
 30941  01190C  6EE6               	movwf	postinc1,c
 30942  01190E  0EFF               	movlw	high STR_97
 30943  011910  6EE6               	movwf	postinc1,c
 30944                           
 30945                           ;stkvar	_n @ sp[(-58)+32]
 30946  011912  0E54               	movlw	low _dbuf
 30947  011914  6E34               	movwf	(btemp+10)^0,c
 30948  011916  0E03               	movlw	high _dbuf
 30949  011918  6E35               	movwf	(btemp+11)^0,c
 30950  01191A  0EE6               	movlw	-26
 30951  01191C  50E3               	movf	plusw1,w,c
 30952  01191E  2634               	addwf	(btemp+10)^0,f,c
 30953  011920  0EE7               	movlw	-25
 30954  011922  50E3               	movf	plusw1,w,c
 30955  011924  2235               	addwfc	(btemp+11)^0,f,c
 30956  011926  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 30957  01192C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 30958  011932  EC17  F003         	call	_strcpy	;wreg free
 30959  011936                     l15698:
 30960                           
 30961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 30962                           ;stkvar	_w @ sp[(-56)+38]
 30963  011936  50E1               	movf	fsr1l,w,c
 30964  011938  0FEE               	addlw	-18
 30965  01193A  6ED9               	movwf	fsr2l,c
 30966  01193C  50E2               	movf	fsr1h,w,c
 30967  01193E  6EDA               	movwf	fsr2h,c
 30968  011940  0EFF               	movlw	255
 30969  011942  22DA               	addwfc	fsr2h,f,c
 30970  011944  0EFD               	movlw	253
 30971  011946  26DE               	addwf	postinc2,f,c
 30972  011948  0EFF               	movlw	255
 30973  01194A  22DD               	addwfc	postdec2,f,c
 30974  01194C                     l15700:
 30975                           
 30976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 30977                           ;stkvar	_w @ sp[(-56)+38]
 30978  01194C  0EEE               	movlw	-18
 30979  01194E  006F FF8F FFE6     	movff	plusw1,postinc1
 30980  011954  006F FF8F FFE6     	movff	plusw1,postinc1
 30981  01195A  0E54               	movlw	low _dbuf
 30982  01195C  6EE6               	movwf	postinc1,c
 30983  01195E  0E03               	movlw	high _dbuf
 30984  011960  6EE6               	movwf	postinc1,c
 30985                           
 30986                           ;stkvar	_fp @ sp[(-60)+-2]
 30987  011962  0EC2               	movlw	-62
 30988  011964  006F FF8F FFE6     	movff	plusw1,postinc1
 30989  01196A  006F FF8F FFE6     	movff	plusw1,postinc1
 30990  011970  EC5B  F0FE         	call	_pad	;wreg free
 30991  011974  EFAD  F094         	goto	l2527
 30992  011978                     l15704:
 30993                           
 30994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 30995                           ;stkvar	_g @ sp[(-56)+16]
 30996  011978  0ED8               	movlw	-40
 30997  01197A  006F FF8F FFE6     	movff	plusw1,postinc1
 30998  011980  006F FF8F FFE6     	movff	plusw1,postinc1
 30999  011986  006F FF8F FFE6     	movff	plusw1,postinc1
 31000  01198C  006F FF8F FFE6     	movff	plusw1,postinc1
 31001  011992  EC31  F0F0         	call	___fpclassifyf	;wreg free
 31002  011996  502A               	movf	btemp^0,w,c
 31003  011998  102B               	iorwf	(btemp+1)^0,w,c
 31004  01199A  A4D8               	btfss	status,2,c
 31005  01199C  D056               	goto	l15722
 31006  01199E  0EBF               	movlw	191
 31007  0119A0  6E34               	movwf	(btemp+10)^0,c
 31008  0119A2  0EFF               	movlw	255
 31009  0119A4  6E35               	movwf	(btemp+11)^0,c
 31010                           
 31011                           ;stkvar	_c @ sp[(-56)+-7]
 31012  0119A6  0EC1               	movlw	-63
 31013  0119A8  50E3               	movf	plusw1,w,c
 31014  0119AA  6E32               	movwf	(btemp+8)^0,c
 31015  0119AC  6A33               	clrf	(btemp+9)^0,c
 31016  0119AE  5034               	movf	(btemp+10)^0,w,c
 31017  0119B0  2632               	addwf	(btemp+8)^0,f,c
 31018  0119B2  5035               	movf	(btemp+11)^0,w,c
 31019  0119B4  2233               	addwfc	(btemp+9)^0,f,c
 31020  0119B6  5033               	movf	(btemp+9)^0,w,c
 31021  0119B8  E106               	bnz	u14840
 31022  0119BA  0E1A               	movlw	26
 31023  0119BC  5C32               	subwf	(btemp+8)^0,w,c
 31024  0119BE  B0D8               	btfsc	status,0,c
 31025  0119C0  D002               	goto	u14840
 31026  0119C2  0E01               	movlw	1
 31027  0119C4  D001               	goto	u14850
 31028  0119C6                     u14840:
 31029  0119C6  0E00               	movlw	0
 31030  0119C8                     u14850:
 31031  0119C8  6E34               	movwf	(btemp+10)^0,c
 31032  0119CA  6A35               	clrf	(btemp+11)^0,c
 31033                           
 31034                           ;stkvar	_efgtoa$6619 @ sp[(-56)+6]
 31035  0119CC  0ECE               	movlw	-50
 31036  0119CE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31037  0119D4  0ECF               	movlw	-49
 31038  0119D6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31039                           
 31040                           ;stkvar	_efgtoa$6619 @ sp[(-56)+6]
 31041  0119DC  0ECE               	movlw	-50
 31042  0119DE  006F FF8C  F02A    	movff	plusw1,btemp
 31043  0119E4  0ECF               	movlw	-49
 31044  0119E6  50E3               	movf	plusw1,w,c
 31045  0119E8  102A               	iorwf	btemp^0,w,c
 31046  0119EA  B4D8               	btfsc	status,2,c
 31047  0119EC  D017               	goto	l15714
 31048                           
 31049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 31050  0119EE  0EDE               	movlw	low STR_100
 31051  0119F0  6EE6               	movwf	postinc1,c
 31052  0119F2  0EFF               	movlw	high STR_100
 31053  0119F4  6EE6               	movwf	postinc1,c
 31054                           
 31055                           ;stkvar	_n @ sp[(-58)+32]
 31056  0119F6  0E54               	movlw	low _dbuf
 31057  0119F8  6E34               	movwf	(btemp+10)^0,c
 31058  0119FA  0E03               	movlw	high _dbuf
 31059  0119FC  6E35               	movwf	(btemp+11)^0,c
 31060  0119FE  0EE6               	movlw	-26
 31061  011A00  50E3               	movf	plusw1,w,c
 31062  011A02  2634               	addwf	(btemp+10)^0,f,c
 31063  011A04  0EE7               	movlw	-25
 31064  011A06  50E3               	movf	plusw1,w,c
 31065  011A08  2235               	addwfc	(btemp+11)^0,f,c
 31066  011A0A  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31067  011A10  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31068  011A16  EC17  F003         	call	_strcpy	;wreg free
 31069                           
 31070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 31071  011A1A  D78D               	goto	l15698
 31072  011A1C                     l15714:
 31073                           
 31074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 31075  011A1C  0EE6               	movlw	low STR_101
 31076  011A1E  6EE6               	movwf	postinc1,c
 31077  011A20  0EFF               	movlw	high STR_101
 31078  011A22  6EE6               	movwf	postinc1,c
 31079                           
 31080                           ;stkvar	_n @ sp[(-58)+32]
 31081  011A24  0E54               	movlw	low _dbuf
 31082  011A26  6E34               	movwf	(btemp+10)^0,c
 31083  011A28  0E03               	movlw	high _dbuf
 31084  011A2A  6E35               	movwf	(btemp+11)^0,c
 31085  011A2C  0EE6               	movlw	-26
 31086  011A2E  50E3               	movf	plusw1,w,c
 31087  011A30  2634               	addwf	(btemp+10)^0,f,c
 31088  011A32  0EE7               	movlw	-25
 31089  011A34  50E3               	movf	plusw1,w,c
 31090  011A36  2235               	addwfc	(btemp+11)^0,f,c
 31091  011A38  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 31092  011A3E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 31093  011A44  EC17  F003         	call	_strcpy	;wreg free
 31094  011A48  D776               	goto	l15698
 31095  011A4A                     l15722:
 31096                           
 31097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 31098  011A4A  0E00               	movlw	0
 31099  011A4C  6E32               	movwf	(btemp+8)^0,c
 31100  011A4E  0E00               	movlw	0
 31101  011A50  6E33               	movwf	(btemp+9)^0,c
 31102  011A52  0E80               	movlw	128
 31103  011A54  6E34               	movwf	(btemp+10)^0,c
 31104  011A56  0E3F               	movlw	63
 31105  011A58  6E35               	movwf	(btemp+11)^0,c
 31106                           
 31107                           ;stkvar	_u @ sp[(-56)+12]
 31108  011A5A  0ED4               	movlw	-44
 31109  011A5C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31110  011A62  0ED5               	movlw	-43
 31111  011A64  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31112  011A6A  0ED6               	movlw	-42
 31113  011A6C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31114  011A72  0ED7               	movlw	-41
 31115  011A74  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31116                           
 31117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 31118                           ;stkvar	_e @ sp[(-56)+34]
 31119  011A7A  0EEA               	movlw	-22
 31120  011A7C  6AE3               	clrf	plusw1,c
 31121  011A7E  0EEB               	movlw	-21
 31122  011A80  6AE3               	clrf	plusw1,c
 31123                           
 31124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 31125  011A82  0E00               	movlw	0
 31126  011A84  6EE6               	movwf	postinc1,c
 31127  011A86  0E00               	movlw	0
 31128  011A88  6EE6               	movwf	postinc1,c
 31129  011A8A  0E00               	movlw	0
 31130  011A8C  6EE6               	movwf	postinc1,c
 31131  011A8E  0E00               	movlw	0
 31132  011A90  6EE6               	movwf	postinc1,c
 31133                           
 31134                           ;stkvar	_g @ sp[(-60)+16]
 31135  011A92  0ED4               	movlw	-44
 31136  011A94  006F FF8F FFE6     	movff	plusw1,postinc1
 31137  011A9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31138  011AA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31139  011AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31140  011AAC  ECE8  F003         	call	___fleq	;wreg free
 31141  011AB0  A02A               	btfss	btemp& (0+255),0,c
 31142  011AB2  D039               	goto	l15734
 31143  011AB4  D0BC               	goto	u14890
 31144  011AB6                     l15730:
 31145                           
 31146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 31147  011AB6  0E00               	movlw	0
 31148  011AB8  6EE6               	movwf	postinc1,c
 31149  011ABA  0E00               	movlw	0
 31150  011ABC  6EE6               	movwf	postinc1,c
 31151  011ABE  0E20               	movlw	32
 31152  011AC0  6EE6               	movwf	postinc1,c
 31153  011AC2  0E41               	movlw	65
 31154  011AC4  6EE6               	movwf	postinc1,c
 31155                           
 31156                           ;stkvar	_u @ sp[(-60)+12]
 31157  011AC6  0ED0               	movlw	-48
 31158  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 31159  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 31160  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 31161  011ADA  006F FF8F FFE6     	movff	plusw1,postinc1
 31162  011AE0  EC32  F0B3         	call	___flmul	;wreg free
 31163                           
 31164                           ;stkvar	_u @ sp[(-56)+12]
 31165  011AE4  0ED4               	movlw	-44
 31166  011AE6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31167  011AEC  0ED5               	movlw	-43
 31168  011AEE  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31169  011AF4  0ED6               	movlw	-42
 31170  011AF6  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31171  011AFC  0ED7               	movlw	-41
 31172  011AFE  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31173                           
 31174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 31175                           ;stkvar	_e @ sp[(-56)+34]
 31176  011B04  0EEA               	movlw	-22
 31177  011B06  50E3               	movf	plusw1,w,c
 31178  011B08  0F01               	addlw	1
 31179  011B0A  6E2A               	movwf	btemp^0,c
 31180  011B0C  0EEA               	movlw	-22
 31181  011B0E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31182  011B14  6A2A               	clrf	btemp^0,c
 31183  011B16  0EEB               	movlw	-21
 31184  011B18  50E3               	movf	plusw1,w,c
 31185  011B1A  202A               	addwfc	btemp^0,w,c
 31186  011B1C  6E2A               	movwf	btemp^0,c
 31187  011B1E  0EEB               	movlw	-21
 31188  011B20  0060  F0AB  FFE3   	movff	btemp,plusw1
 31189  011B26                     l15734:
 31190                           
 31191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 31192  011B26  0E00               	movlw	0
 31193  011B28  6EE6               	movwf	postinc1,c
 31194  011B2A  0E00               	movlw	0
 31195  011B2C  6EE6               	movwf	postinc1,c
 31196  011B2E  0E20               	movlw	32
 31197  011B30  6EE6               	movwf	postinc1,c
 31198  011B32  0E41               	movlw	65
 31199  011B34  6EE6               	movwf	postinc1,c
 31200                           
 31201                           ;stkvar	_u @ sp[(-60)+12]
 31202  011B36  0ED0               	movlw	-48
 31203  011B38  006F FF8F FFE6     	movff	plusw1,postinc1
 31204  011B3E  006F FF8F FFE6     	movff	plusw1,postinc1
 31205  011B44  006F FF8F FFE6     	movff	plusw1,postinc1
 31206  011B4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31207  011B50  EC32  F0B3         	call	___flmul	;wreg free
 31208  011B54  0060  F0AB  FFE6   	movff	btemp,postinc1
 31209  011B5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31210  011B60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31211  011B66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31212                           
 31213                           ;stkvar	_g @ sp[(-60)+16]
 31214  011B6C  0ED4               	movlw	-44
 31215  011B6E  006F FF8F FFE6     	movff	plusw1,postinc1
 31216  011B74  006F FF8F FFE6     	movff	plusw1,postinc1
 31217  011B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 31218  011B80  006F FF8F FFE6     	movff	plusw1,postinc1
 31219  011B86  EC35  F0F6         	call	___flge	;wreg free
 31220  011B8A  A02A               	btfss	btemp& (0+255),0,c
 31221  011B8C  D032               	goto	l15740
 31222  011B8E  D793               	goto	l15730
 31223  011B90                     l15736:
 31224                           
 31225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 31226  011B90  0E00               	movlw	0
 31227  011B92  6EE6               	movwf	postinc1,c
 31228  011B94  0E00               	movlw	0
 31229  011B96  6EE6               	movwf	postinc1,c
 31230  011B98  0E20               	movlw	32
 31231  011B9A  6EE6               	movwf	postinc1,c
 31232  011B9C  0E41               	movlw	65
 31233  011B9E  6EE6               	movwf	postinc1,c
 31234                           
 31235                           ;stkvar	_u @ sp[(-60)+12]
 31236  011BA0  0ED0               	movlw	-48
 31237  011BA2  006F FF8F FFE6     	movff	plusw1,postinc1
 31238  011BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 31239  011BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 31240  011BB4  006F FF8F FFE6     	movff	plusw1,postinc1
 31241  011BBA  EC64  F0C1         	call	___fldiv	;wreg free
 31242                           
 31243                           ;stkvar	_u @ sp[(-56)+12]
 31244  011BBE  0ED4               	movlw	-44
 31245  011BC0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31246  011BC6  0ED5               	movlw	-43
 31247  011BC8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31248  011BCE  0ED6               	movlw	-42
 31249  011BD0  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31250  011BD6  0ED7               	movlw	-41
 31251  011BD8  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31252                           
 31253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 31254                           ;stkvar	_e @ sp[(-56)+34]
 31255  011BDE  50E1               	movf	fsr1l,w,c
 31256  011BE0  0FEA               	addlw	-22
 31257  011BE2  6ED9               	movwf	fsr2l,c
 31258  011BE4  50E2               	movf	fsr1h,w,c
 31259  011BE6  6EDA               	movwf	fsr2h,c
 31260  011BE8  0EFF               	movlw	255
 31261  011BEA  22DA               	addwfc	fsr2h,f,c
 31262  011BEC  06DE               	decf	postinc2,f,c
 31263  011BEE  0E00               	movlw	0
 31264  011BF0  5ADD               	subwfb	postdec2,f,c
 31265  011BF2                     l15740:
 31266                           
 31267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 31268                           ;stkvar	_u @ sp[(-56)+12]
 31269  011BF2  0ED4               	movlw	-44
 31270  011BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 31271  011BFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31272  011C00  006F FF8F FFE6     	movff	plusw1,postinc1
 31273  011C06  006F FF8F FFE6     	movff	plusw1,postinc1
 31274                           
 31275                           ;stkvar	_g @ sp[(-60)+16]
 31276  011C0C  0ED4               	movlw	-44
 31277  011C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 31278  011C14  006F FF8F FFE6     	movff	plusw1,postinc1
 31279  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 31280  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 31281  011C26  EC35  F0F6         	call	___flge	;wreg free
 31282  011C2A  A02A               	btfss	btemp& (0+255),0,c
 31283  011C2C  D7B1               	goto	l15736
 31284  011C2E                     u14890:
 31285                           
 31286                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 31287                           ;stkvar	_c @ sp[(-56)+-7]
 31288  011C2E  0EC1               	movlw	-63
 31289  011C30  50E3               	movf	plusw1,w,c
 31290  011C32  6EE6               	movwf	postinc1,c
 31291  011C34  0E00               	movlw	0
 31292  011C36  6EE6               	movwf	postinc1,c
 31293  011C38  EC40  F00A         	call	_tolower	;wreg free
 31294                           
 31295                           ;stkvar	_mode @ sp[(-56)+54]
 31296  011C3C  0EFE               	movlw	-2
 31297  011C3E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31298                           
 31299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 31300                           ;stkvar	_mode @ sp[(-56)+54]
 31301                           ;stkvar	_nmode @ sp[(-56)+55]
 31302  011C44  0EFE               	movlw	-2
 31303  011C46  006F FF8C  F02A    	movff	plusw1,btemp
 31304  011C4C  0EFF               	movlw	-1
 31305  011C4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31306                           
 31307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 31308                           ;stkvar	_mode @ sp[(-56)+54]
 31309  011C54  0EFE               	movlw	-2
 31310  011C56  006F FF8C  F02A    	movff	plusw1,btemp
 31311  011C5C  0E67               	movlw	103
 31312  011C5E  182A               	xorwf	btemp^0,w,c
 31313  011C60  A4D8               	btfss	status,2,c
 31314  011C62  D025               	goto	l15758
 31315                           
 31316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 31317  011C64  504C               	movf	_prec^0,w,c
 31318  011C66  104D               	iorwf	(_prec+1)^0,w,c
 31319  011C68  A4D8               	btfss	status,2,c
 31320  011C6A  D004               	goto	l15752
 31321                           
 31322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 31323  011C6C  0E00               	movlw	0
 31324  011C6E  6E4D               	movwf	(_prec+1)^0,c
 31325  011C70  0E01               	movlw	1
 31326  011C72  6E4C               	movwf	_prec^0,c
 31327  011C74                     l15752:
 31328                           
 31329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 31330  011C74  BE4D               	btfsc	(_prec+1)^0,7,c
 31331  011C76  D005               	goto	u14920
 31332  011C78  504D               	movf	(_prec+1)^0,w,c
 31333  011C7A  E110               	bnz	l15756
 31334  011C7C  044C               	decf	_prec^0,w,c
 31335  011C7E  B0D8               	btfsc	status,0,c
 31336  011C80  D00D               	goto	l15756
 31337  011C82                     u14920:
 31338  011C82  0E06               	movlw	6
 31339  011C84  6E34               	movwf	(btemp+10)^0,c
 31340  011C86  0E00               	movlw	0
 31341  011C88  6E35               	movwf	(btemp+11)^0,c
 31342                           
 31343                           ;stkvar	_p @ sp[(-56)+40]
 31344  011C8A  0EF0               	movlw	-16
 31345  011C8C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31346  011C92  0EF1               	movlw	-15
 31347  011C94  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31348  011C9A  D00C               	goto	l15764
 31349  011C9C                     l15756:
 31350                           
 31351                           ;stkvar	_p @ sp[(-56)+40]
 31352  011C9C  0EF0               	movlw	-16
 31353  011C9E  0060  F133  FFE3   	movff	_prec,plusw1
 31354  011CA4  0EF1               	movlw	-15
 31355  011CA6  0060  F137  FFE3   	movff	_prec+1,plusw1
 31356  011CAC  D003               	goto	l15764
 31357  011CAE                     l15758:
 31358                           
 31359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 31360  011CAE  AE4D               	btfss	(_prec+1)^0,7,c
 31361  011CB0  D7F5               	goto	l15756
 31362  011CB2  D7E7               	goto	u14920
 31363  011CB4                     l15764:
 31364                           
 31365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 31366                           ;stkvar	_mode @ sp[(-56)+54]
 31367  011CB4  0EFE               	movlw	-2
 31368  011CB6  006F FF8C  F02A    	movff	plusw1,btemp
 31369  011CBC  0E67               	movlw	103
 31370  011CBE  182A               	xorwf	btemp^0,w,c
 31371  011CC0  A4D8               	btfss	status,2,c
 31372  011CC2  D02F               	goto	l15774
 31373                           
 31374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 31375                           ;stkvar	_e @ sp[(-56)+34]
 31376  011CC4  0EEB               	movlw	-21
 31377  011CC6  AEE3               	btfss	plusw1,7,c
 31378  011CC8  D00E               	goto	u14950
 31379  011CCA  0EEA               	movlw	-22
 31380  011CCC  006F FF8C  F02A    	movff	plusw1,btemp
 31381  011CD2  0EFC               	movlw	252
 31382  011CD4  5E2A               	subwf	btemp^0,f,c
 31383  011CD6  0EEB               	movlw	-21
 31384  011CD8  006F FF8C  F02A    	movff	plusw1,btemp
 31385  011CDE  0EFF               	movlw	255
 31386  011CE0  5A2A               	subwfb	btemp^0,f,c
 31387  011CE2  A0D8               	btfss	status,0,c
 31388  011CE4  D018               	goto	l15772
 31389  011CE6                     u14950:
 31390                           
 31391                           ;stkvar	_e @ sp[(-56)+34]
 31392                           ;stkvar	_p @ sp[(-56)+40]
 31393  011CE6  0EF0               	movlw	-16
 31394  011CE8  50E3               	movf	plusw1,w,c
 31395  011CEA  0FFF               	addlw	255
 31396  011CEC  6E34               	movwf	(btemp+10)^0,c
 31397  011CEE  0EF1               	movlw	-15
 31398  011CF0  006F FF8C  F035    	movff	plusw1,btemp+11
 31399  011CF6  0EFF               	movlw	255
 31400  011CF8  2235               	addwfc	(btemp+11)^0,f,c
 31401  011CFA  0EEA               	movlw	-22
 31402  011CFC  50E3               	movf	plusw1,w,c
 31403  011CFE  5C34               	subwf	(btemp+10)^0,w,c
 31404  011D00  5035               	movf	(btemp+11)^0,w,c
 31405  011D02  0A80               	xorlw	128
 31406  011D04  6E2A               	movwf	btemp^0,c
 31407  011D06  0EEB               	movlw	-21
 31408  011D08  50E3               	movf	plusw1,w,c
 31409  011D0A  0A80               	xorlw	128
 31410  011D0C  582A               	subwfb	btemp^0,w,c
 31411  011D0E  A0D8               	btfss	status,0,c
 31412  011D10  D002               	goto	l15772
 31413                           
 31414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 31415  011D12  0E66               	movlw	102
 31416  011D14  D001               	goto	L32
 31417  011D16                     l15772:
 31418                           
 31419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 31420  011D16  0E65               	movlw	101
 31421  011D18                     L32:
 31422  011D18  6E35               	movwf	(btemp+11)^0,c
 31423                           
 31424                           ;stkvar	_nmode @ sp[(-56)+55]
 31425  011D1A  0EFF               	movlw	-1
 31426  011D1C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31427  011D22                     l15774:
 31428                           
 31429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 31430                           ;stkvar	_p @ sp[(-56)+40]
 31431                           ;stkvar	_m @ sp[(-56)+48]
 31432  011D22  0EF0               	movlw	-16
 31433  011D24  006F FF8C  F02A    	movff	plusw1,btemp
 31434  011D2A  0EF8               	movlw	-8
 31435  011D2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31436  011D32  0EF1               	movlw	-15
 31437  011D34  006F FF8C  F02A    	movff	plusw1,btemp
 31438  011D3A  0EF9               	movlw	-7
 31439  011D3C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31440                           
 31441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 31442                           ;stkvar	_mode @ sp[(-56)+54]
 31443  011D42  0EFE               	movlw	-2
 31444  011D44  006F FF8C  F02A    	movff	plusw1,btemp
 31445  011D4A  0E67               	movlw	103
 31446  011D4C  182A               	xorwf	btemp^0,w,c
 31447  011D4E  A4D8               	btfss	status,2,c
 31448  011D50  D00B               	goto	u14990
 31449                           
 31450                           ;stkvar	_nmode @ sp[(-56)+55]
 31451  011D52  0EFF               	movlw	-1
 31452  011D54  006F FF8C  F02A    	movff	plusw1,btemp
 31453  011D5A  0E66               	movlw	102
 31454  011D5C  182A               	xorwf	btemp^0,w,c
 31455  011D5E  A4D8               	btfss	status,2,c
 31456  011D60  D014               	goto	l2556
 31457                           
 31458                           ;stkvar	_e @ sp[(-56)+34]
 31459  011D62  0EEB               	movlw	-21
 31460  011D64  AEE3               	btfss	plusw1,7,c
 31461  011D66  D011               	goto	l2556
 31462  011D68                     u14990:
 31463                           
 31464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 31465                           ;stkvar	_m @ sp[(-56)+48]
 31466  011D68  0EF8               	movlw	-8
 31467  011D6A  50E3               	movf	plusw1,w,c
 31468  011D6C  0F01               	addlw	1
 31469  011D6E  6E2A               	movwf	btemp^0,c
 31470  011D70  0EF8               	movlw	-8
 31471  011D72  0060  F0AB  FFE3   	movff	btemp,plusw1
 31472  011D78  6A2A               	clrf	btemp^0,c
 31473  011D7A  0EF9               	movlw	-7
 31474  011D7C  50E3               	movf	plusw1,w,c
 31475  011D7E  202A               	addwfc	btemp^0,w,c
 31476  011D80  6E2A               	movwf	btemp^0,c
 31477  011D82  0EF9               	movlw	-7
 31478  011D84  0060  F0AB  FFE3   	movff	btemp,plusw1
 31479  011D8A                     l2556:
 31480                           
 31481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 31482                           ;stkvar	_nmode @ sp[(-56)+55]
 31483  011D8A  0EFF               	movlw	-1
 31484  011D8C  006F FF8C  F02A    	movff	plusw1,btemp
 31485  011D92  0E66               	movlw	102
 31486  011D94  182A               	xorwf	btemp^0,w,c
 31487  011D96  A4D8               	btfss	status,2,c
 31488  011D98  D03B               	goto	l15794
 31489                           
 31490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 31491                           ;stkvar	_e @ sp[(-56)+34]
 31492  011D9A  0EEB               	movlw	-21
 31493  011D9C  AEE3               	btfss	plusw1,7,c
 31494  011D9E  D01C               	goto	l15790
 31495                           
 31496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 31497  011DA0  0E00               	movlw	0
 31498  011DA2  6E32               	movwf	(btemp+8)^0,c
 31499  011DA4  0E00               	movlw	0
 31500  011DA6  6E33               	movwf	(btemp+9)^0,c
 31501  011DA8  0E80               	movlw	128
 31502  011DAA  6E34               	movwf	(btemp+10)^0,c
 31503  011DAC  0E3F               	movlw	63
 31504  011DAE  6E35               	movwf	(btemp+11)^0,c
 31505                           
 31506                           ;stkvar	_u @ sp[(-56)+12]
 31507  011DB0  0ED4               	movlw	-44
 31508  011DB2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31509  011DB8  0ED5               	movlw	-43
 31510  011DBA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31511  011DC0  0ED6               	movlw	-42
 31512  011DC2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31513  011DC8  0ED7               	movlw	-41
 31514  011DCA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31515                           
 31516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 31517                           ;stkvar	_e @ sp[(-56)+34]
 31518  011DD0  0EEA               	movlw	-22
 31519  011DD2  6AE3               	clrf	plusw1,c
 31520  011DD4  0EEB               	movlw	-21
 31521  011DD6  6AE3               	clrf	plusw1,c
 31522  011DD8                     l15790:
 31523                           
 31524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 31525                           ;stkvar	_mode @ sp[(-56)+54]
 31526  011DD8  0EFE               	movlw	-2
 31527  011DDA  006F FF8C  F02A    	movff	plusw1,btemp
 31528  011DE0  0E67               	movlw	103
 31529  011DE2  182A               	xorwf	btemp^0,w,c
 31530  011DE4  B4D8               	btfsc	status,2,c
 31531  011DE6  D014               	goto	l15794
 31532                           
 31533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 31534                           ;stkvar	_e @ sp[(-56)+34]
 31535                           ;stkvar	_m @ sp[(-56)+48]
 31536  011DE8  0EF8               	movlw	-8
 31537  011DEA  50E3               	movf	plusw1,w,c
 31538  011DEC  6E2A               	movwf	btemp^0,c
 31539  011DEE  0EEA               	movlw	-22
 31540  011DF0  50E3               	movf	plusw1,w,c
 31541  011DF2  262A               	addwf	btemp^0,f,c
 31542  011DF4  0EF8               	movlw	-8
 31543  011DF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 31544  011DFC  0EF9               	movlw	-7
 31545  011DFE  50E3               	movf	plusw1,w,c
 31546  011E00  6E2A               	movwf	btemp^0,c
 31547  011E02  0EEB               	movlw	-21
 31548  011E04  50E3               	movf	plusw1,w,c
 31549  011E06  222A               	addwfc	btemp^0,f,c
 31550  011E08  0EF9               	movlw	-7
 31551  011E0A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31552  011E10                     l15794:
 31553                           
 31554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 31555                           ;stkvar	_i @ sp[(-56)+36]
 31556  011E10  0EEC               	movlw	-20
 31557  011E12  6AE3               	clrf	plusw1,c
 31558  011E14  0EED               	movlw	-19
 31559  011E16  6AE3               	clrf	plusw1,c
 31560                           
 31561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 31562                           ;stkvar	_g @ sp[(-56)+16]
 31563  011E18  0ED8               	movlw	-40
 31564  011E1A  006F FF8C  F032    	movff	plusw1,btemp+8
 31565  011E20  0ED9               	movlw	-39
 31566  011E22  006F FF8C  F033    	movff	plusw1,btemp+9
 31567  011E28  0EDA               	movlw	-38
 31568  011E2A  006F FF8C  F034    	movff	plusw1,btemp+10
 31569  011E30  0EDB               	movlw	-37
 31570  011E32  006F FF8C  F035    	movff	plusw1,btemp+11
 31571                           
 31572                           ;stkvar	_h @ sp[(-56)+24]
 31573  011E38  0EE0               	movlw	-32
 31574  011E3A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31575  011E40  0EE1               	movlw	-31
 31576  011E42  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31577  011E48  0EE2               	movlw	-30
 31578  011E4A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31579  011E50  0EE3               	movlw	-29
 31580  011E52  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31581                           
 31582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 31583                           ;stkvar	_u @ sp[(-56)+12]
 31584  011E58  0ED4               	movlw	-44
 31585  011E5A  006F FF8C  F032    	movff	plusw1,btemp+8
 31586  011E60  0ED5               	movlw	-43
 31587  011E62  006F FF8C  F033    	movff	plusw1,btemp+9
 31588  011E68  0ED6               	movlw	-42
 31589  011E6A  006F FF8C  F034    	movff	plusw1,btemp+10
 31590  011E70  0ED7               	movlw	-41
 31591  011E72  006F FF8C  F035    	movff	plusw1,btemp+11
 31592                           
 31593                           ;stkvar	_ou @ sp[(-56)+28]
 31594  011E78  0EE4               	movlw	-28
 31595  011E7A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31596  011E80  0EE5               	movlw	-27
 31597  011E82  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31598  011E88  0EE6               	movlw	-26
 31599  011E8A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31600  011E90  0EE7               	movlw	-25
 31601  011E92  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31602                           
 31603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31604  011E98  D0D6               	goto	l15810
 31605  011E9A                     l15800:
 31606                           
 31607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 31608                           ;stkvar	_u @ sp[(-56)+12]
 31609  011E9A  0ED4               	movlw	-44
 31610  011E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 31611  011EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 31612  011EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 31613  011EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 31614                           
 31615                           ;stkvar	_h @ sp[(-60)+24]
 31616  011EB4  0EDC               	movlw	-36
 31617  011EB6  006F FF8F FFE6     	movff	plusw1,postinc1
 31618  011EBC  006F FF8F FFE6     	movff	plusw1,postinc1
 31619  011EC2  006F FF8F FFE6     	movff	plusw1,postinc1
 31620  011EC8  006F FF8F FFE6     	movff	plusw1,postinc1
 31621  011ECE  EC64  F0C1         	call	___fldiv	;wreg free
 31622  011ED2  0060  F0AB  FFE6   	movff	btemp,postinc1
 31623  011ED8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31624  011EDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31625  011EE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31626  011EEA  EC7B  F0D5         	call	_floorf	;wreg free
 31627                           
 31628                           ;stkvar	_l @ sp[(-56)+20]
 31629  011EEE  0EDC               	movlw	-36
 31630  011EF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 31631  011EF6  0EDD               	movlw	-35
 31632  011EF8  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31633  011EFE  0EDE               	movlw	-34
 31634  011F00  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31635  011F06  0EDF               	movlw	-33
 31636  011F08  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31637                           
 31638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 31639                           ;stkvar	_l @ sp[(-56)+20]
 31640  011F0E  0EDC               	movlw	-36
 31641  011F10  006F FF8F FFE6     	movff	plusw1,postinc1
 31642  011F16  006F FF8F FFE6     	movff	plusw1,postinc1
 31643  011F1C  006F FF8F FFE6     	movff	plusw1,postinc1
 31644  011F22  006F FF8F FFE6     	movff	plusw1,postinc1
 31645  011F28  ECC9  F0F4         	call	___fltol	;wreg free
 31646  011F2C  0060  F0A8  F034   	movff	btemp,btemp+10
 31647  011F32  0060  F0AC  F035   	movff	btemp+1,btemp+11
 31648                           
 31649                           ;stkvar	_d @ sp[(-56)+44]
 31650  011F38  0EF4               	movlw	-12
 31651  011F3A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31652  011F40  0EF5               	movlw	-11
 31653  011F42  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31654                           
 31655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 31656                           ;stkvar	_u @ sp[(-56)+12]
 31657  011F48  0ED4               	movlw	-44
 31658  011F4A  006F FF8F FFE6     	movff	plusw1,postinc1
 31659  011F50  006F FF8F FFE6     	movff	plusw1,postinc1
 31660  011F56  006F FF8F FFE6     	movff	plusw1,postinc1
 31661  011F5C  006F FF8F FFE6     	movff	plusw1,postinc1
 31662                           
 31663                           ;stkvar	_l @ sp[(-60)+20]
 31664  011F62  0ED8               	movlw	-40
 31665  011F64  006F FF8F FFE6     	movff	plusw1,postinc1
 31666  011F6A  006F FF8F FFE6     	movff	plusw1,postinc1
 31667  011F70  006F FF8F FFE6     	movff	plusw1,postinc1
 31668  011F76  006F FF8F FFE6     	movff	plusw1,postinc1
 31669  011F7C  EC32  F0B3         	call	___flmul	;wreg free
 31670  011F80  0060  F0AB  FFE6   	movff	btemp,postinc1
 31671  011F86  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31672  011F8C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31673  011F92  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31674                           
 31675                           ;stkvar	_h @ sp[(-60)+24]
 31676  011F98  0EDC               	movlw	-36
 31677  011F9A  006F FF8F FFE6     	movff	plusw1,postinc1
 31678  011FA0  006F FF8F FFE6     	movff	plusw1,postinc1
 31679  011FA6  006F FF8F FFE6     	movff	plusw1,postinc1
 31680  011FAC  006F FF8F FFE6     	movff	plusw1,postinc1
 31681  011FB2  EC7A  F010         	call	___flsub	;wreg free
 31682                           
 31683                           ;stkvar	_h @ sp[(-56)+24]
 31684  011FB6  0EE0               	movlw	-32
 31685  011FB8  0060  F0AB  FFE3   	movff	btemp,plusw1
 31686  011FBE  0EE1               	movlw	-31
 31687  011FC0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31688  011FC6  0EE2               	movlw	-30
 31689  011FC8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31690  011FCE  0EE3               	movlw	-29
 31691  011FD0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31692                           
 31693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 31694  011FD6  0E00               	movlw	0
 31695  011FD8  6EE6               	movwf	postinc1,c
 31696  011FDA  0E00               	movlw	0
 31697  011FDC  6EE6               	movwf	postinc1,c
 31698  011FDE  0E20               	movlw	32
 31699  011FE0  6EE6               	movwf	postinc1,c
 31700  011FE2  0E41               	movlw	65
 31701  011FE4  6EE6               	movwf	postinc1,c
 31702                           
 31703                           ;stkvar	_u @ sp[(-60)+12]
 31704  011FE6  0ED0               	movlw	-48
 31705  011FE8  006F FF8F FFE6     	movff	plusw1,postinc1
 31706  011FEE  006F FF8F FFE6     	movff	plusw1,postinc1
 31707  011FF4  006F FF8F FFE6     	movff	plusw1,postinc1
 31708  011FFA  006F FF8F FFE6     	movff	plusw1,postinc1
 31709  012000  EC64  F0C1         	call	___fldiv	;wreg free
 31710                           
 31711                           ;stkvar	_u @ sp[(-56)+12]
 31712  012004  0ED4               	movlw	-44
 31713  012006  0060  F0AB  FFE3   	movff	btemp,plusw1
 31714  01200C  0ED5               	movlw	-43
 31715  01200E  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31716  012014  0ED6               	movlw	-42
 31717  012016  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31718  01201C  0ED7               	movlw	-41
 31719  01201E  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31720                           
 31721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 31722                           ;stkvar	_i @ sp[(-56)+36]
 31723  012024  0EEC               	movlw	-20
 31724  012026  50E3               	movf	plusw1,w,c
 31725  012028  0F01               	addlw	1
 31726  01202A  6E2A               	movwf	btemp^0,c
 31727  01202C  0EEC               	movlw	-20
 31728  01202E  0060  F0AB  FFE3   	movff	btemp,plusw1
 31729  012034  6A2A               	clrf	btemp^0,c
 31730  012036  0EED               	movlw	-19
 31731  012038  50E3               	movf	plusw1,w,c
 31732  01203A  202A               	addwfc	btemp^0,w,c
 31733  01203C  6E2A               	movwf	btemp^0,c
 31734  01203E  0EED               	movlw	-19
 31735  012040  0060  F0AB  FFE3   	movff	btemp,plusw1
 31736  012046                     l15810:
 31737                           
 31738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 31739                           ;stkvar	_m @ sp[(-56)+48]
 31740                           ;stkvar	_i @ sp[(-56)+36]
 31741  012046  50E1               	movf	fsr1l,w,c
 31742  012048  0FEC               	addlw	-20
 31743  01204A  6ED9               	movwf	fsr2l,c
 31744  01204C  50E2               	movf	fsr1h,w,c
 31745  01204E  6EDA               	movwf	fsr2h,c
 31746  012050  0EFF               	movlw	255
 31747  012052  22DA               	addwfc	fsr2h,f,c
 31748  012054  0EF8               	movlw	-8
 31749  012056  50E3               	movf	plusw1,w,c
 31750  012058  5CDE               	subwf	postinc2,w,c
 31751  01205A  50DE               	movf	postinc2,w,c
 31752  01205C  0A80               	xorlw	128
 31753  01205E  6E2A               	movwf	btemp^0,c
 31754  012060  0EF9               	movlw	-7
 31755  012062  50E3               	movf	plusw1,w,c
 31756  012064  0A80               	xorlw	128
 31757  012066  582A               	subwfb	btemp^0,w,c
 31758  012068  A0D8               	btfss	status,0,c
 31759  01206A  D717               	goto	l15800
 31760                           
 31761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 31762  01206C  0E00               	movlw	0
 31763  01206E  6EE6               	movwf	postinc1,c
 31764  012070  0E00               	movlw	0
 31765  012072  6EE6               	movwf	postinc1,c
 31766  012074  0EA0               	movlw	160
 31767  012076  6EE6               	movwf	postinc1,c
 31768  012078  0E40               	movlw	64
 31769  01207A  6EE6               	movwf	postinc1,c
 31770                           
 31771                           ;stkvar	_u @ sp[(-60)+12]
 31772  01207C  0ED0               	movlw	-48
 31773  01207E  006F FF8F FFE6     	movff	plusw1,postinc1
 31774  012084  006F FF8F FFE6     	movff	plusw1,postinc1
 31775  01208A  006F FF8F FFE6     	movff	plusw1,postinc1
 31776  012090  006F FF8F FFE6     	movff	plusw1,postinc1
 31777  012096  EC32  F0B3         	call	___flmul	;wreg free
 31778                           
 31779                           ;stkvar	_l @ sp[(-56)+20]
 31780  01209A  0EDC               	movlw	-36
 31781  01209C  0060  F0AB  FFE3   	movff	btemp,plusw1
 31782  0120A2  0EDD               	movlw	-35
 31783  0120A4  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31784  0120AA  0EDE               	movlw	-34
 31785  0120AC  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31786  0120B2  0EDF               	movlw	-33
 31787  0120B4  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31788                           
 31789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 31790                           ;stkvar	_l @ sp[(-56)+20]
 31791  0120BA  0EDC               	movlw	-36
 31792  0120BC  006F FF8F FFE6     	movff	plusw1,postinc1
 31793  0120C2  006F FF8F FFE6     	movff	plusw1,postinc1
 31794  0120C8  006F FF8F FFE6     	movff	plusw1,postinc1
 31795  0120CE  006F FF8F FFE6     	movff	plusw1,postinc1
 31796                           
 31797                           ;stkvar	_h @ sp[(-60)+24]
 31798  0120D4  0EDC               	movlw	-36
 31799  0120D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31800  0120DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31801  0120E2  006F FF8F FFE6     	movff	plusw1,postinc1
 31802  0120E8  006F FF8F FFE6     	movff	plusw1,postinc1
 31803  0120EE  EC35  F0F6         	call	___flge	;wreg free
 31804  0120F2  A02A               	btfss	btemp& (0+255),0,c
 31805  0120F4  D021               	goto	u15060
 31806                           
 31807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 31808                           ;stkvar	_l @ sp[(-56)+20]
 31809                           
 31810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 31811                           
 31812                           ;stkvar	_l @ sp[(-56)+20]
 31813                           
 31814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 31815  0120F6  0EDC               	movlw	-36
 31816  0120F8  006F FF8F FFE6     	movff	plusw1,postinc1
 31817  0120FE  006F FF8F FFE6     	movff	plusw1,postinc1
 31818  012104  006F FF8F FFE6     	movff	plusw1,postinc1
 31819  01210A  006F FF8F FFE6     	movff	plusw1,postinc1
 31820                           
 31821                           ;stkvar	_h @ sp[(-60)+24]
 31822  012110  0EDC               	movlw	-36
 31823  012112  006F FF8F FFE6     	movff	plusw1,postinc1
 31824  012118  006F FF8F FFE6     	movff	plusw1,postinc1
 31825  01211E  006F FF8F FFE6     	movff	plusw1,postinc1
 31826  012124  006F FF8F FFE6     	movff	plusw1,postinc1
 31827  01212A  ECE8  F003         	call	___fleq	;wreg free
 31828  01212E  A02A               	btfss	btemp& (0+255),0,c
 31829  012130  D01B               	goto	l15824
 31830                           
 31831                           ;stkvar	_d @ sp[(-56)+44]
 31832  012132  0EF4               	movlw	-12
 31833  012134  B0E3               	btfsc	plusw1,0,c
 31834  012136  D018               	goto	l15824
 31835  012138                     u15060:
 31836                           
 31837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 31838  012138  0E00               	movlw	0
 31839  01213A  6E32               	movwf	(btemp+8)^0,c
 31840  01213C  0E00               	movlw	0
 31841  01213E  6E33               	movwf	(btemp+9)^0,c
 31842  012140  0E00               	movlw	0
 31843  012142  6E34               	movwf	(btemp+10)^0,c
 31844  012144  0E00               	movlw	0
 31845  012146  6E35               	movwf	(btemp+11)^0,c
 31846                           
 31847                           ;stkvar	_l @ sp[(-56)+20]
 31848  012148  0EDC               	movlw	-36
 31849  01214A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31850  012150  0EDD               	movlw	-35
 31851  012152  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31852  012158  0EDE               	movlw	-34
 31853  01215A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31854  012160  0EDF               	movlw	-33
 31855  012162  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31856  012168                     l15824:
 31857                           
 31858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 31859                           ;stkvar	_l @ sp[(-56)+20]
 31860  012168  0EDC               	movlw	-36
 31861  01216A  006F FF8F FFE6     	movff	plusw1,postinc1
 31862  012170  006F FF8F FFE6     	movff	plusw1,postinc1
 31863  012176  006F FF8F FFE6     	movff	plusw1,postinc1
 31864  01217C  006F FF8F FFE6     	movff	plusw1,postinc1
 31865                           
 31866                           ;stkvar	_g @ sp[(-60)+16]
 31867  012182  0ED4               	movlw	-44
 31868  012184  006F FF8F FFE6     	movff	plusw1,postinc1
 31869  01218A  006F FF8F FFE6     	movff	plusw1,postinc1
 31870  012190  006F FF8F FFE6     	movff	plusw1,postinc1
 31871  012196  006F FF8F FFE6     	movff	plusw1,postinc1
 31872  01219C  EC47  F0B7         	call	___fladd	;wreg free
 31873                           
 31874                           ;stkvar	_h @ sp[(-56)+24]
 31875  0121A0  0EE0               	movlw	-32
 31876  0121A2  0060  F0AB  FFE3   	movff	btemp,plusw1
 31877  0121A8  0EE1               	movlw	-31
 31878  0121AA  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31879  0121B0  0EE2               	movlw	-30
 31880  0121B2  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31881  0121B8  0EE3               	movlw	-29
 31882  0121BA  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31883                           
 31884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 31885                           ;stkvar	_ou @ sp[(-56)+28]
 31886  0121C0  0EE4               	movlw	-28
 31887  0121C2  006F FF8C  F032    	movff	plusw1,btemp+8
 31888  0121C8  0EE5               	movlw	-27
 31889  0121CA  006F FF8C  F033    	movff	plusw1,btemp+9
 31890  0121D0  0EE6               	movlw	-26
 31891  0121D2  006F FF8C  F034    	movff	plusw1,btemp+10
 31892  0121D8  0EE7               	movlw	-25
 31893  0121DA  006F FF8C  F035    	movff	plusw1,btemp+11
 31894                           
 31895                           ;stkvar	_u @ sp[(-56)+12]
 31896  0121E0  0ED4               	movlw	-44
 31897  0121E2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 31898  0121E8  0ED5               	movlw	-43
 31899  0121EA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 31900  0121F0  0ED6               	movlw	-42
 31901  0121F2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 31902  0121F8  0ED7               	movlw	-41
 31903  0121FA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 31904                           
 31905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 31906                           ;stkvar	_nmode @ sp[(-56)+55]
 31907  012200  0EFF               	movlw	-1
 31908  012202  006F FF8C  F02A    	movff	plusw1,btemp
 31909  012208  0E65               	movlw	101
 31910  01220A  182A               	xorwf	btemp^0,w,c
 31911  01220C  B4D8               	btfsc	status,2,c
 31912  01220E  D011               	goto	l15832
 31913                           
 31914                           ;stkvar	_e @ sp[(-56)+34]
 31915                           ;stkvar	_ne @ sp[(-56)+46]
 31916  012210  0EEA               	movlw	-22
 31917  012212  006F FF8C  F02A    	movff	plusw1,btemp
 31918  012218  0EF6               	movlw	-10
 31919  01221A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31920  012220  0EEB               	movlw	-21
 31921  012222  006F FF8C  F02A    	movff	plusw1,btemp
 31922  012228  0EF7               	movlw	-9
 31923  01222A  0060  F0AB  FFE3   	movff	btemp,plusw1
 31924  012230  D004               	goto	l2571
 31925  012232                     l15832:
 31926                           
 31927                           ;stkvar	_ne @ sp[(-56)+46]
 31928  012232  0EF6               	movlw	-10
 31929  012234  6AE3               	clrf	plusw1,c
 31930  012236  0EF7               	movlw	-9
 31931  012238  6AE3               	clrf	plusw1,c
 31932  01223A                     l2571:
 31933                           
 31934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 31935                           ;stkvar	_pp @ sp[(-56)+50]
 31936  01223A  0EFA               	movlw	-6
 31937  01223C  6AE3               	clrf	plusw1,c
 31938  01223E  0EFB               	movlw	-5
 31939  012240  6AE3               	clrf	plusw1,c
 31940                           
 31941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 31942                           ;stkvar	_t @ sp[(-56)+52]
 31943  012242  0EFC               	movlw	-4
 31944  012244  6AE3               	clrf	plusw1,c
 31945  012246  0EFD               	movlw	-3
 31946  012248  6AE3               	clrf	plusw1,c
 31947                           
 31948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 31949                           ;stkvar	_i @ sp[(-56)+36]
 31950  01224A  0EEC               	movlw	-20
 31951  01224C  6AE3               	clrf	plusw1,c
 31952  01224E  0EED               	movlw	-19
 31953  012250  6AE3               	clrf	plusw1,c
 31954                           
 31955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 31956  012252  D1B7               	goto	l15884
 31957  012254                     l15834:
 31958                           
 31959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 31960                           ;stkvar	_u @ sp[(-56)+12]
 31961  012254  0ED4               	movlw	-44
 31962  012256  006F FF8F FFE6     	movff	plusw1,postinc1
 31963  01225C  006F FF8F FFE6     	movff	plusw1,postinc1
 31964  012262  006F FF8F FFE6     	movff	plusw1,postinc1
 31965  012268  006F FF8F FFE6     	movff	plusw1,postinc1
 31966                           
 31967                           ;stkvar	_h @ sp[(-60)+24]
 31968  01226E  0EDC               	movlw	-36
 31969  012270  006F FF8F FFE6     	movff	plusw1,postinc1
 31970  012276  006F FF8F FFE6     	movff	plusw1,postinc1
 31971  01227C  006F FF8F FFE6     	movff	plusw1,postinc1
 31972  012282  006F FF8F FFE6     	movff	plusw1,postinc1
 31973  012288  EC64  F0C1         	call	___fldiv	;wreg free
 31974  01228C  0060  F0AB  FFE6   	movff	btemp,postinc1
 31975  012292  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 31976  012298  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 31977  01229E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 31978  0122A4  EC7B  F0D5         	call	_floorf	;wreg free
 31979                           
 31980                           ;stkvar	_l @ sp[(-56)+20]
 31981  0122A8  0EDC               	movlw	-36
 31982  0122AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 31983  0122B0  0EDD               	movlw	-35
 31984  0122B2  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 31985  0122B8  0EDE               	movlw	-34
 31986  0122BA  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 31987  0122C0  0EDF               	movlw	-33
 31988  0122C2  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 31989                           
 31990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 31991                           ;stkvar	_l @ sp[(-56)+20]
 31992  0122C8  0EDC               	movlw	-36
 31993  0122CA  006F FF8F FFE6     	movff	plusw1,postinc1
 31994  0122D0  006F FF8F FFE6     	movff	plusw1,postinc1
 31995  0122D6  006F FF8F FFE6     	movff	plusw1,postinc1
 31996  0122DC  006F FF8F FFE6     	movff	plusw1,postinc1
 31997  0122E2  ECC9  F0F4         	call	___fltol	;wreg free
 31998  0122E6  0060  F0A8  F034   	movff	btemp,btemp+10
 31999  0122EC  0060  F0AC  F035   	movff	btemp+1,btemp+11
 32000                           
 32001                           ;stkvar	_d @ sp[(-56)+44]
 32002  0122F2  0EF4               	movlw	-12
 32003  0122F4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32004  0122FA  0EF5               	movlw	-11
 32005  0122FC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32006                           
 32007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 32008  012302  B84E               	btfsc	_flags^0,4,c
 32009  012304  D026               	goto	l15848
 32010                           
 32011                           ;stkvar	_d @ sp[(-56)+44]
 32012  012306  0EF4               	movlw	-12
 32013  012308  006F FF8C  F02A    	movff	plusw1,btemp
 32014  01230E  0EF5               	movlw	-11
 32015  012310  50E3               	movf	plusw1,w,c
 32016  012312  102A               	iorwf	btemp^0,w,c
 32017  012314  A4D8               	btfss	status,2,c
 32018  012316  D01D               	goto	l15848
 32019                           
 32020                           ;stkvar	_mode @ sp[(-56)+54]
 32021  012318  0EFE               	movlw	-2
 32022  01231A  006F FF8C  F02A    	movff	plusw1,btemp
 32023  012320  0E67               	movlw	103
 32024  012322  182A               	xorwf	btemp^0,w,c
 32025  012324  A4D8               	btfss	status,2,c
 32026  012326  D015               	goto	l15848
 32027                           
 32028                           ;stkvar	_ne @ sp[(-56)+46]
 32029  012328  0EF7               	movlw	-9
 32030  01232A  AEE3               	btfss	plusw1,7,c
 32031  01232C  D012               	goto	l15848
 32032                           
 32033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 32034                           ;stkvar	_t @ sp[(-56)+52]
 32035  01232E  0EFC               	movlw	-4
 32036  012330  50E3               	movf	plusw1,w,c
 32037  012332  0F01               	addlw	1
 32038  012334  6E2A               	movwf	btemp^0,c
 32039  012336  0EFC               	movlw	-4
 32040  012338  0060  F0AB  FFE3   	movff	btemp,plusw1
 32041  01233E  6A2A               	clrf	btemp^0,c
 32042  012340  0EFD               	movlw	-3
 32043  012342  50E3               	movf	plusw1,w,c
 32044  012344  202A               	addwfc	btemp^0,w,c
 32045  012346  6E2A               	movwf	btemp^0,c
 32046  012348  0EFD               	movlw	-3
 32047  01234A  0060  F0AB  FFE3   	movff	btemp,plusw1
 32048                           
 32049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 32050  012350  D0AF               	goto	l15876
 32051  012352                     l15848:
 32052                           
 32053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 32054                           ;stkvar	_pp @ sp[(-56)+50]
 32055  012352  0EFA               	movlw	-6
 32056  012354  006F FF8C  F02A    	movff	plusw1,btemp
 32057  01235A  0EFB               	movlw	-5
 32058  01235C  50E3               	movf	plusw1,w,c
 32059  01235E  102A               	iorwf	btemp^0,w,c
 32060  012360  A4D8               	btfss	status,2,c
 32061  012362  D070               	goto	l15868
 32062                           
 32063                           ;stkvar	_ne @ sp[(-56)+46]
 32064  012364  0EF7               	movlw	-9
 32065  012366  AEE3               	btfss	plusw1,7,c
 32066  012368  D06D               	goto	l15868
 32067                           
 32068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 32069                           ;stkvar	_n @ sp[(-56)+32]
 32070  01236A  0EE8               	movlw	-24
 32071  01236C  006F FF8C  F034    	movff	plusw1,btemp+10
 32072  012372  0EE9               	movlw	-23
 32073  012374  006F FF8C  F035    	movff	plusw1,btemp+11
 32074  01237A  0E54               	movlw	low _dbuf
 32075  01237C  2434               	addwf	(btemp+10)^0,w,c
 32076  01237E  6ED9               	movwf	fsr2l,c
 32077  012380  0E03               	movlw	high _dbuf
 32078  012382  2035               	addwfc	(btemp+11)^0,w,c
 32079  012384  6EDA               	movwf	fsr2h,c
 32080  012386  0E2E               	movlw	46
 32081  012388  6EDF               	movwf	indf2,c
 32082                           
 32083                           ;stkvar	_n @ sp[(-56)+32]
 32084  01238A  0EE8               	movlw	-24
 32085  01238C  50E3               	movf	plusw1,w,c
 32086  01238E  0F01               	addlw	1
 32087  012390  6E2A               	movwf	btemp^0,c
 32088  012392  0EE8               	movlw	-24
 32089  012394  0060  F0AB  FFE3   	movff	btemp,plusw1
 32090  01239A  6A2A               	clrf	btemp^0,c
 32091  01239C  0EE9               	movlw	-23
 32092  01239E  50E3               	movf	plusw1,w,c
 32093  0123A0  202A               	addwfc	btemp^0,w,c
 32094  0123A2  6E2A               	movwf	btemp^0,c
 32095  0123A4  0EE9               	movlw	-23
 32096  0123A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 32097                           
 32098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 32099                           ;stkvar	_w @ sp[(-56)+38]
 32100  0123AC  50E1               	movf	fsr1l,w,c
 32101  0123AE  0FEE               	addlw	-18
 32102  0123B0  6ED9               	movwf	fsr2l,c
 32103  0123B2  50E2               	movf	fsr1h,w,c
 32104  0123B4  6EDA               	movwf	fsr2h,c
 32105  0123B6  0EFF               	movlw	255
 32106  0123B8  22DA               	addwfc	fsr2h,f,c
 32107  0123BA  06DE               	decf	postinc2,f,c
 32108  0123BC  0E00               	movlw	0
 32109  0123BE  5ADD               	subwfb	postdec2,f,c
 32110                           
 32111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 32112  0123C0  0E01               	movlw	1
 32113  0123C2  6E34               	movwf	(btemp+10)^0,c
 32114  0123C4  0E00               	movlw	0
 32115  0123C6  6E35               	movwf	(btemp+11)^0,c
 32116                           
 32117                           ;stkvar	_pp @ sp[(-56)+50]
 32118  0123C8  0EFA               	movlw	-6
 32119  0123CA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32120  0123D0  0EFB               	movlw	-5
 32121  0123D2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32122  0123D8  D035               	goto	l15868
 32123  0123DA                     l15860:
 32124                           
 32125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 32126                           ;stkvar	_n @ sp[(-56)+32]
 32127  0123DA  0EE8               	movlw	-24
 32128  0123DC  006F FF8C  F034    	movff	plusw1,btemp+10
 32129  0123E2  0EE9               	movlw	-23
 32130  0123E4  006F FF8C  F035    	movff	plusw1,btemp+11
 32131  0123EA  0E54               	movlw	low _dbuf
 32132  0123EC  2434               	addwf	(btemp+10)^0,w,c
 32133  0123EE  6ED9               	movwf	fsr2l,c
 32134  0123F0  0E03               	movlw	high _dbuf
 32135  0123F2  2035               	addwfc	(btemp+11)^0,w,c
 32136  0123F4  6EDA               	movwf	fsr2h,c
 32137  0123F6  0E30               	movlw	48
 32138  0123F8  6EDF               	movwf	indf2,c
 32139                           
 32140                           ;stkvar	_n @ sp[(-56)+32]
 32141  0123FA  0EE8               	movlw	-24
 32142  0123FC  50E3               	movf	plusw1,w,c
 32143  0123FE  0F01               	addlw	1
 32144  012400  6E2A               	movwf	btemp^0,c
 32145  012402  0EE8               	movlw	-24
 32146  012404  0060  F0AB  FFE3   	movff	btemp,plusw1
 32147  01240A  6A2A               	clrf	btemp^0,c
 32148  01240C  0EE9               	movlw	-23
 32149  01240E  50E3               	movf	plusw1,w,c
 32150  012410  202A               	addwfc	btemp^0,w,c
 32151  012412  6E2A               	movwf	btemp^0,c
 32152  012414  0EE9               	movlw	-23
 32153  012416  0060  F0AB  FFE3   	movff	btemp,plusw1
 32154                           
 32155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 32156                           ;stkvar	_w @ sp[(-56)+38]
 32157  01241C  50E1               	movf	fsr1l,w,c
 32158  01241E  0FEE               	addlw	-18
 32159  012420  6ED9               	movwf	fsr2l,c
 32160  012422  50E2               	movf	fsr1h,w,c
 32161  012424  6EDA               	movwf	fsr2h,c
 32162  012426  0EFF               	movlw	255
 32163  012428  22DA               	addwfc	fsr2h,f,c
 32164  01242A  06DE               	decf	postinc2,f,c
 32165  01242C  0E00               	movlw	0
 32166  01242E  5ADD               	subwfb	postdec2,f,c
 32167                           
 32168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 32169                           ;stkvar	_t @ sp[(-56)+52]
 32170  012430  50E1               	movf	fsr1l,w,c
 32171  012432  0FFC               	addlw	-4
 32172  012434  6ED9               	movwf	fsr2l,c
 32173  012436  50E2               	movf	fsr1h,w,c
 32174  012438  6EDA               	movwf	fsr2h,c
 32175  01243A  0EFF               	movlw	255
 32176  01243C  22DA               	addwfc	fsr2h,f,c
 32177  01243E  06DE               	decf	postinc2,f,c
 32178  012440  0E00               	movlw	0
 32179  012442  5ADD               	subwfb	postdec2,f,c
 32180  012444                     l15868:
 32181                           
 32182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 32183                           ;stkvar	_t @ sp[(-56)+52]
 32184  012444  0EFC               	movlw	-4
 32185  012446  006F FF8C  F02A    	movff	plusw1,btemp
 32186  01244C  0EFD               	movlw	-3
 32187  01244E  50E3               	movf	plusw1,w,c
 32188  012450  102A               	iorwf	btemp^0,w,c
 32189  012452  A4D8               	btfss	status,2,c
 32190  012454  D7C2               	goto	l15860
 32191                           
 32192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 32193                           ;stkvar	_n @ sp[(-56)+32]
 32194  012456  0EE8               	movlw	-24
 32195  012458  006F FF8C  F034    	movff	plusw1,btemp+10
 32196  01245E  0EE9               	movlw	-23
 32197  012460  006F FF8C  F035    	movff	plusw1,btemp+11
 32198  012466  0E54               	movlw	low _dbuf
 32199  012468  2434               	addwf	(btemp+10)^0,w,c
 32200  01246A  6ED9               	movwf	fsr2l,c
 32201  01246C  0E03               	movlw	high _dbuf
 32202  01246E  2035               	addwfc	(btemp+11)^0,w,c
 32203  012470  6EDA               	movwf	fsr2h,c
 32204                           
 32205                           ;stkvar	_d @ sp[(-56)+44]
 32206  012472  0EF4               	movlw	-12
 32207  012474  50E3               	movf	plusw1,w,c
 32208  012476  0F30               	addlw	48
 32209  012478  6EDF               	movwf	indf2,c
 32210                           
 32211                           ;stkvar	_n @ sp[(-56)+32]
 32212  01247A  0EE8               	movlw	-24
 32213  01247C  50E3               	movf	plusw1,w,c
 32214  01247E  0F01               	addlw	1
 32215  012480  6E2A               	movwf	btemp^0,c
 32216  012482  0EE8               	movlw	-24
 32217  012484  0060  F0AB  FFE3   	movff	btemp,plusw1
 32218  01248A  6A2A               	clrf	btemp^0,c
 32219  01248C  0EE9               	movlw	-23
 32220  01248E  50E3               	movf	plusw1,w,c
 32221  012490  202A               	addwfc	btemp^0,w,c
 32222  012492  6E2A               	movwf	btemp^0,c
 32223  012494  0EE9               	movlw	-23
 32224  012496  0060  F0AB  FFE3   	movff	btemp,plusw1
 32225                           
 32226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 32227                           ;stkvar	_w @ sp[(-56)+38]
 32228  01249C  50E1               	movf	fsr1l,w,c
 32229  01249E  0FEE               	addlw	-18
 32230  0124A0  6ED9               	movwf	fsr2l,c
 32231  0124A2  50E2               	movf	fsr1h,w,c
 32232  0124A4  6EDA               	movwf	fsr2h,c
 32233  0124A6  0EFF               	movlw	255
 32234  0124A8  22DA               	addwfc	fsr2h,f,c
 32235  0124AA  06DE               	decf	postinc2,f,c
 32236  0124AC  0E00               	movlw	0
 32237  0124AE  5ADD               	subwfb	postdec2,f,c
 32238  0124B0                     l15876:
 32239                           
 32240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 32241                           ;stkvar	_u @ sp[(-56)+12]
 32242  0124B0  0ED4               	movlw	-44
 32243  0124B2  006F FF8F FFE6     	movff	plusw1,postinc1
 32244  0124B8  006F FF8F FFE6     	movff	plusw1,postinc1
 32245  0124BE  006F FF8F FFE6     	movff	plusw1,postinc1
 32246  0124C4  006F FF8F FFE6     	movff	plusw1,postinc1
 32247                           
 32248                           ;stkvar	_l @ sp[(-60)+20]
 32249  0124CA  0ED8               	movlw	-40
 32250  0124CC  006F FF8F FFE6     	movff	plusw1,postinc1
 32251  0124D2  006F FF8F FFE6     	movff	plusw1,postinc1
 32252  0124D8  006F FF8F FFE6     	movff	plusw1,postinc1
 32253  0124DE  006F FF8F FFE6     	movff	plusw1,postinc1
 32254  0124E4  EC32  F0B3         	call	___flmul	;wreg free
 32255  0124E8  0060  F0AB  FFE6   	movff	btemp,postinc1
 32256  0124EE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 32257  0124F4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 32258  0124FA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 32259                           
 32260                           ;stkvar	_h @ sp[(-60)+24]
 32261  012500  0EDC               	movlw	-36
 32262  012502  006F FF8F FFE6     	movff	plusw1,postinc1
 32263  012508  006F FF8F FFE6     	movff	plusw1,postinc1
 32264  01250E  006F FF8F FFE6     	movff	plusw1,postinc1
 32265  012514  006F FF8F FFE6     	movff	plusw1,postinc1
 32266  01251A  EC7A  F010         	call	___flsub	;wreg free
 32267                           
 32268                           ;stkvar	_h @ sp[(-56)+24]
 32269  01251E  0EE0               	movlw	-32
 32270  012520  0060  F0AB  FFE3   	movff	btemp,plusw1
 32271  012526  0EE1               	movlw	-31
 32272  012528  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32273  01252E  0EE2               	movlw	-30
 32274  012530  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32275  012536  0EE3               	movlw	-29
 32276  012538  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32277                           
 32278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 32279  01253E  0E00               	movlw	0
 32280  012540  6EE6               	movwf	postinc1,c
 32281  012542  0E00               	movlw	0
 32282  012544  6EE6               	movwf	postinc1,c
 32283  012546  0E20               	movlw	32
 32284  012548  6EE6               	movwf	postinc1,c
 32285  01254A  0E41               	movlw	65
 32286  01254C  6EE6               	movwf	postinc1,c
 32287                           
 32288                           ;stkvar	_u @ sp[(-60)+12]
 32289  01254E  0ED0               	movlw	-48
 32290  012550  006F FF8F FFE6     	movff	plusw1,postinc1
 32291  012556  006F FF8F FFE6     	movff	plusw1,postinc1
 32292  01255C  006F FF8F FFE6     	movff	plusw1,postinc1
 32293  012562  006F FF8F FFE6     	movff	plusw1,postinc1
 32294  012568  EC64  F0C1         	call	___fldiv	;wreg free
 32295                           
 32296                           ;stkvar	_u @ sp[(-56)+12]
 32297  01256C  0ED4               	movlw	-44
 32298  01256E  0060  F0AB  FFE3   	movff	btemp,plusw1
 32299  012574  0ED5               	movlw	-43
 32300  012576  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32301  01257C  0ED6               	movlw	-42
 32302  01257E  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 32303  012584  0ED7               	movlw	-41
 32304  012586  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 32305                           
 32306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 32307                           ;stkvar	_ne @ sp[(-56)+46]
 32308  01258C  50E1               	movf	fsr1l,w,c
 32309  01258E  0FF6               	addlw	-10
 32310  012590  6ED9               	movwf	fsr2l,c
 32311  012592  50E2               	movf	fsr1h,w,c
 32312  012594  6EDA               	movwf	fsr2h,c
 32313  012596  0EFF               	movlw	255
 32314  012598  22DA               	addwfc	fsr2h,f,c
 32315  01259A  06DE               	decf	postinc2,f,c
 32316  01259C  0E00               	movlw	0
 32317  01259E  5ADD               	subwfb	postdec2,f,c
 32318                           
 32319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 32320                           ;stkvar	_i @ sp[(-56)+36]
 32321  0125A0  0EEC               	movlw	-20
 32322  0125A2  50E3               	movf	plusw1,w,c
 32323  0125A4  0F01               	addlw	1
 32324  0125A6  6E2A               	movwf	btemp^0,c
 32325  0125A8  0EEC               	movlw	-20
 32326  0125AA  0060  F0AB  FFE3   	movff	btemp,plusw1
 32327  0125B0  6A2A               	clrf	btemp^0,c
 32328  0125B2  0EED               	movlw	-19
 32329  0125B4  50E3               	movf	plusw1,w,c
 32330  0125B6  202A               	addwfc	btemp^0,w,c
 32331  0125B8  6E2A               	movwf	btemp^0,c
 32332  0125BA  0EED               	movlw	-19
 32333  0125BC  0060  F0AB  FFE3   	movff	btemp,plusw1
 32334  0125C2                     l15884:
 32335                           
 32336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 32337                           ;stkvar	_m @ sp[(-56)+48]
 32338                           ;stkvar	_i @ sp[(-56)+36]
 32339  0125C2  50E1               	movf	fsr1l,w,c
 32340  0125C4  0FEC               	addlw	-20
 32341  0125C6  6ED9               	movwf	fsr2l,c
 32342  0125C8  50E2               	movf	fsr1h,w,c
 32343  0125CA  6EDA               	movwf	fsr2h,c
 32344  0125CC  0EFF               	movlw	255
 32345  0125CE  22DA               	addwfc	fsr2h,f,c
 32346  0125D0  0EF8               	movlw	-8
 32347  0125D2  50E3               	movf	plusw1,w,c
 32348  0125D4  5CDE               	subwf	postinc2,w,c
 32349  0125D6  50DE               	movf	postinc2,w,c
 32350  0125D8  0A80               	xorlw	128
 32351  0125DA  6E2A               	movwf	btemp^0,c
 32352  0125DC  0EF9               	movlw	-7
 32353  0125DE  50E3               	movf	plusw1,w,c
 32354  0125E0  0A80               	xorlw	128
 32355  0125E2  582A               	subwfb	btemp^0,w,c
 32356  0125E4  B0D8               	btfsc	status,0,c
 32357  0125E6  D00E               	goto	u15160
 32358                           
 32359                           ;stkvar	_n @ sp[(-56)+32]
 32360  0125E8  0EE9               	movlw	-23
 32361  0125EA  BEE3               	btfsc	plusw1,7,c
 32362  0125EC  D633               	goto	l15834
 32363  0125EE  0EE9               	movlw	-23
 32364  0125F0  50E3               	movf	plusw1,w,c
 32365  0125F2  E108               	bnz	u15160
 32366  0125F4  0EE8               	movlw	-24
 32367  0125F6  006F FF8C  F02A    	movff	plusw1,btemp
 32368  0125FC  0E4B               	movlw	75
 32369  0125FE  5E2A               	subwf	btemp^0,f,c
 32370  012600  A0D8               	btfss	status,0,c
 32371  012602  D628               	goto	l15834
 32372  012604                     u15160:
 32373                           
 32374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 32375                           ;stkvar	_pp @ sp[(-56)+50]
 32376  012604  0EFA               	movlw	-6
 32377  012606  006F FF8C  F02A    	movff	plusw1,btemp
 32378  01260C  0EFB               	movlw	-5
 32379  01260E  50E3               	movf	plusw1,w,c
 32380  012610  102A               	iorwf	btemp^0,w,c
 32381  012612  B4D8               	btfsc	status,2,c
 32382  012614  A84E               	btfss	_flags^0,4,c
 32383  012616  D021               	goto	l15896
 32384                           
 32385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 32386                           ;stkvar	_n @ sp[(-56)+32]
 32387  012618  0EE8               	movlw	-24
 32388  01261A  006F FF8C  F034    	movff	plusw1,btemp+10
 32389  012620  0EE9               	movlw	-23
 32390  012622  006F FF8C  F035    	movff	plusw1,btemp+11
 32391  012628  0E54               	movlw	low _dbuf
 32392  01262A  2434               	addwf	(btemp+10)^0,w,c
 32393  01262C  6ED9               	movwf	fsr2l,c
 32394  01262E  0E03               	movlw	high _dbuf
 32395  012630  2035               	addwfc	(btemp+11)^0,w,c
 32396  012632  6EDA               	movwf	fsr2h,c
 32397  012634  0E2E               	movlw	46
 32398  012636  6EDF               	movwf	indf2,c
 32399                           
 32400                           ;stkvar	_n @ sp[(-56)+32]
 32401  012638  0EE8               	movlw	-24
 32402  01263A  50E3               	movf	plusw1,w,c
 32403  01263C  0F01               	addlw	1
 32404  01263E  6E2A               	movwf	btemp^0,c
 32405  012640  0EE8               	movlw	-24
 32406  012642  0060  F0AB  FFE3   	movff	btemp,plusw1
 32407  012648  6A2A               	clrf	btemp^0,c
 32408  01264A  0EE9               	movlw	-23
 32409  01264C  50E3               	movf	plusw1,w,c
 32410  01264E  202A               	addwfc	btemp^0,w,c
 32411  012650  6E2A               	movwf	btemp^0,c
 32412  012652  0EE9               	movlw	-23
 32413  012654  0060  F0AB  FFE3   	movff	btemp,plusw1
 32414  01265A                     l15896:
 32415                           
 32416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 32417                           ;stkvar	_n @ sp[(-56)+32]
 32418  01265A  0EE8               	movlw	-24
 32419  01265C  006F FF8C  F034    	movff	plusw1,btemp+10
 32420  012662  0EE9               	movlw	-23
 32421  012664  006F FF8C  F035    	movff	plusw1,btemp+11
 32422  01266A  0E54               	movlw	low _dbuf
 32423  01266C  2434               	addwf	(btemp+10)^0,w,c
 32424  01266E  6ED9               	movwf	fsr2l,c
 32425  012670  0E03               	movlw	high _dbuf
 32426  012672  2035               	addwfc	(btemp+11)^0,w,c
 32427  012674  6EDA               	movwf	fsr2h,c
 32428  012676  0E00               	movlw	0
 32429  012678  6EDF               	movwf	indf2,c
 32430                           
 32431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 32432                           ;stkvar	_nmode @ sp[(-56)+55]
 32433  01267A  0EFF               	movlw	-1
 32434  01267C  006F FF8C  F02A    	movff	plusw1,btemp
 32435  012682  0E65               	movlw	101
 32436  012684  182A               	xorwf	btemp^0,w,c
 32437  012686  A4D8               	btfss	status,2,c
 32438  012688  EFA6  F08C         	goto	l15700
 32439                           
 32440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 32441  01268C  0E4F               	movlw	79
 32442  01268E  6E34               	movwf	(btemp+10)^0,c
 32443  012690  0E00               	movlw	0
 32444  012692  6E35               	movwf	(btemp+11)^0,c
 32445                           
 32446                           ;stkvar	_i @ sp[(-56)+36]
 32447  012694  0EEC               	movlw	-20
 32448  012696  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32449  01269C  0EED               	movlw	-19
 32450  01269E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32451                           
 32452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 32453                           ;stkvar	_i @ sp[(-56)+36]
 32454  0126A4  0EEC               	movlw	-20
 32455  0126A6  006F FF8C  F034    	movff	plusw1,btemp+10
 32456  0126AC  0EED               	movlw	-19
 32457  0126AE  006F FF8C  F035    	movff	plusw1,btemp+11
 32458  0126B4  0E54               	movlw	low _dbuf
 32459  0126B6  2434               	addwf	(btemp+10)^0,w,c
 32460  0126B8  6ED9               	movwf	fsr2l,c
 32461  0126BA  0E03               	movlw	high _dbuf
 32462  0126BC  2035               	addwfc	(btemp+11)^0,w,c
 32463  0126BE  6EDA               	movwf	fsr2h,c
 32464  0126C0  0E00               	movlw	0
 32465  0126C2  6EDF               	movwf	indf2,c
 32466                           
 32467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 32468                           ;stkvar	_sign @ sp[(-56)+42]
 32469  0126C4  0EF2               	movlw	-14
 32470  0126C6  6AE3               	clrf	plusw1,c
 32471  0126C8  0EF3               	movlw	-13
 32472  0126CA  6AE3               	clrf	plusw1,c
 32473                           
 32474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 32475                           ;stkvar	_e @ sp[(-56)+34]
 32476  0126CC  0EEB               	movlw	-21
 32477  0126CE  AEE3               	btfss	plusw1,7,c
 32478  0126D0  D012               	goto	l15910
 32479                           
 32480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 32481  0126D2  0E01               	movlw	1
 32482  0126D4  6E34               	movwf	(btemp+10)^0,c
 32483  0126D6  0E00               	movlw	0
 32484  0126D8  6E35               	movwf	(btemp+11)^0,c
 32485                           
 32486                           ;stkvar	_sign @ sp[(-56)+42]
 32487  0126DA  0EF2               	movlw	-14
 32488  0126DC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32489  0126E2  0EF3               	movlw	-13
 32490  0126E4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32491                           
 32492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 32493                           ;stkvar	_e @ sp[(-56)+34]
 32494                           ;stkvar	_e @ sp[(-56)+34]
 32495  0126EA  0EEA               	movlw	-22
 32496  0126EC  6CE3               	negf	plusw1,c
 32497  0126EE  0EEB               	movlw	-21
 32498  0126F0  1EE3               	comf	plusw1,f,c
 32499  0126F2  B0D8               	btfsc	status,0,c
 32500  0126F4  2AE3               	incf	plusw1,f,c
 32501  0126F6                     l15910:
 32502                           
 32503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 32504  0126F6  0E02               	movlw	2
 32505  0126F8  6E34               	movwf	(btemp+10)^0,c
 32506  0126FA  0E00               	movlw	0
 32507  0126FC  6E35               	movwf	(btemp+11)^0,c
 32508                           
 32509                           ;stkvar	_p @ sp[(-56)+40]
 32510  0126FE  0EF0               	movlw	-16
 32511  012700  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32512  012706  0EF1               	movlw	-15
 32513  012708  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32514                           
 32515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32516  01270E  D051               	goto	l15922
 32517  012710                     l15912:
 32518                           
 32519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 32520                           ;stkvar	_i @ sp[(-56)+36]
 32521  012710  50E1               	movf	fsr1l,w,c
 32522  012712  0FEC               	addlw	-20
 32523  012714  6ED9               	movwf	fsr2l,c
 32524  012716  50E2               	movf	fsr1h,w,c
 32525  012718  6EDA               	movwf	fsr2h,c
 32526  01271A  0EFF               	movlw	255
 32527  01271C  22DA               	addwfc	fsr2h,f,c
 32528  01271E  06DE               	decf	postinc2,f,c
 32529  012720  0E00               	movlw	0
 32530  012722  5ADD               	subwfb	postdec2,f,c
 32531                           
 32532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 32533                           ;stkvar	_i @ sp[(-56)+36]
 32534  012724  0EEC               	movlw	-20
 32535  012726  006F FF8C  F034    	movff	plusw1,btemp+10
 32536  01272C  0EED               	movlw	-19
 32537  01272E  006F FF8C  F035    	movff	plusw1,btemp+11
 32538  012734  0E54               	movlw	low _dbuf
 32539  012736  2434               	addwf	(btemp+10)^0,w,c
 32540  012738  6ED9               	movwf	fsr2l,c
 32541  01273A  0E03               	movlw	high _dbuf
 32542  01273C  2035               	addwfc	(btemp+11)^0,w,c
 32543  01273E  6EDA               	movwf	fsr2h,c
 32544  012740  0E0A               	movlw	10
 32545  012742  6EE6               	movwf	postinc1,c
 32546  012744  0E00               	movlw	0
 32547  012746  6EE6               	movwf	postinc1,c
 32548                           
 32549                           ;stkvar	_e @ sp[(-58)+34]
 32550  012748  0EE8               	movlw	-24
 32551  01274A  006F FF8F FFE6     	movff	plusw1,postinc1
 32552  012750  006F FF8F FFE6     	movff	plusw1,postinc1
 32553  012756  ECCF  F0FD         	call	___awmod	;wreg free
 32554  01275A  502A               	movf	btemp^0,w,c
 32555  01275C  0F30               	addlw	48
 32556  01275E  6EDF               	movwf	indf2,c
 32557                           
 32558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 32559  012760  0E0A               	movlw	10
 32560  012762  6EE6               	movwf	postinc1,c
 32561  012764  0E00               	movlw	0
 32562  012766  6EE6               	movwf	postinc1,c
 32563                           
 32564                           ;stkvar	_e @ sp[(-58)+34]
 32565  012768  0EE8               	movlw	-24
 32566  01276A  006F FF8F FFE6     	movff	plusw1,postinc1
 32567  012770  006F FF8F FFE6     	movff	plusw1,postinc1
 32568  012776  ECA0  F0F9         	call	___awdiv	;wreg free
 32569                           
 32570                           ;stkvar	_e @ sp[(-56)+34]
 32571  01277A  0EEA               	movlw	-22
 32572  01277C  0060  F0AB  FFE3   	movff	btemp,plusw1
 32573  012782  0EEB               	movlw	-21
 32574  012784  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 32575                           
 32576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 32577                           ;stkvar	_p @ sp[(-56)+40]
 32578  01278A  50E1               	movf	fsr1l,w,c
 32579  01278C  0FF0               	addlw	-16
 32580  01278E  6ED9               	movwf	fsr2l,c
 32581  012790  50E2               	movf	fsr1h,w,c
 32582  012792  6EDA               	movwf	fsr2h,c
 32583  012794  0EFF               	movlw	255
 32584  012796  22DA               	addwfc	fsr2h,f,c
 32585  012798  06DE               	decf	postinc2,f,c
 32586  01279A  0E00               	movlw	0
 32587  01279C  5ADD               	subwfb	postdec2,f,c
 32588                           
 32589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 32590                           ;stkvar	_w @ sp[(-56)+38]
 32591  01279E  50E1               	movf	fsr1l,w,c
 32592  0127A0  0FEE               	addlw	-18
 32593  0127A2  6ED9               	movwf	fsr2l,c
 32594  0127A4  50E2               	movf	fsr1h,w,c
 32595  0127A6  6EDA               	movwf	fsr2h,c
 32596  0127A8  0EFF               	movlw	255
 32597  0127AA  22DA               	addwfc	fsr2h,f,c
 32598  0127AC  06DE               	decf	postinc2,f,c
 32599  0127AE  0E00               	movlw	0
 32600  0127B0  5ADD               	subwfb	postdec2,f,c
 32601  0127B2                     l15922:
 32602                           
 32603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 32604                           ;stkvar	_e @ sp[(-56)+34]
 32605  0127B2  0EEA               	movlw	-22
 32606  0127B4  006F FF8C  F02A    	movff	plusw1,btemp
 32607  0127BA  0EEB               	movlw	-21
 32608  0127BC  50E3               	movf	plusw1,w,c
 32609  0127BE  102A               	iorwf	btemp^0,w,c
 32610  0127C0  A4D8               	btfss	status,2,c
 32611  0127C2  D7A6               	goto	l15912
 32612                           
 32613                           ;stkvar	_p @ sp[(-56)+40]
 32614  0127C4  0EF1               	movlw	-15
 32615  0127C6  BEE3               	btfsc	plusw1,7,c
 32616  0127C8  D007               	goto	u15220
 32617  0127CA  0EF1               	movlw	-15
 32618  0127CC  50E3               	movf	plusw1,w,c
 32619  0127CE  E1A0               	bnz	l15912
 32620  0127D0  0EF0               	movlw	-16
 32621  0127D2  04E3               	decf	plusw1,w,c
 32622  0127D4  B0D8               	btfsc	status,0,c
 32623  0127D6  D79C               	goto	l15912
 32624  0127D8                     u15220:
 32625                           
 32626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 32627                           ;stkvar	_i @ sp[(-56)+36]
 32628  0127D8  50E1               	movf	fsr1l,w,c
 32629  0127DA  0FEC               	addlw	-20
 32630  0127DC  6ED9               	movwf	fsr2l,c
 32631  0127DE  50E2               	movf	fsr1h,w,c
 32632  0127E0  6EDA               	movwf	fsr2h,c
 32633  0127E2  0EFF               	movlw	255
 32634  0127E4  22DA               	addwfc	fsr2h,f,c
 32635  0127E6  06DE               	decf	postinc2,f,c
 32636  0127E8  0E00               	movlw	0
 32637  0127EA  5ADD               	subwfb	postdec2,f,c
 32638                           
 32639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 32640                           ;stkvar	_sign @ sp[(-56)+42]
 32641  0127EC  0EF2               	movlw	-14
 32642  0127EE  006F FF8C  F02A    	movff	plusw1,btemp
 32643  0127F4  0EF3               	movlw	-13
 32644  0127F6  50E3               	movf	plusw1,w,c
 32645  0127F8  102A               	iorwf	btemp^0,w,c
 32646  0127FA  A4D8               	btfss	status,2,c
 32647  0127FC  D002               	goto	l15932
 32648  0127FE  0E2B               	movlw	43
 32649  012800  D001               	goto	L33
 32650  012802                     l15932:
 32651  012802  0E2D               	movlw	45
 32652  012804                     L33:
 32653  012804  6E34               	movwf	(btemp+10)^0,c
 32654  012806  0E00               	movlw	0
 32655  012808  6E35               	movwf	(btemp+11)^0,c
 32656                           
 32657                           ;stkvar	_efgtoa$6623 @ sp[(-56)+4]
 32658  01280A  0ECC               	movlw	-52
 32659  01280C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32660  012812  0ECD               	movlw	-51
 32661  012814  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32662                           
 32663                           ;stkvar	_efgtoa$6623 @ sp[(-56)+4]
 32664                           ;stkvar	_i @ sp[(-56)+36]
 32665  01281A  0EEC               	movlw	-20
 32666  01281C  006F FF8C  F034    	movff	plusw1,btemp+10
 32667  012822  0EED               	movlw	-19
 32668  012824  006F FF8C  F035    	movff	plusw1,btemp+11
 32669  01282A  0E54               	movlw	low _dbuf
 32670  01282C  2434               	addwf	(btemp+10)^0,w,c
 32671  01282E  6ED9               	movwf	fsr2l,c
 32672  012830  0E03               	movlw	high _dbuf
 32673  012832  2035               	addwfc	(btemp+11)^0,w,c
 32674  012834  6EDA               	movwf	fsr2h,c
 32675  012836  0ECC               	movlw	-52
 32676  012838  006F FF8F FFDF     	movff	plusw1,indf2
 32677                           
 32678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 32679                           ;stkvar	_w @ sp[(-56)+38]
 32680  01283E  50E1               	movf	fsr1l,w,c
 32681  012840  0FEE               	addlw	-18
 32682  012842  6ED9               	movwf	fsr2l,c
 32683  012844  50E2               	movf	fsr1h,w,c
 32684  012846  6EDA               	movwf	fsr2h,c
 32685  012848  0EFF               	movlw	255
 32686  01284A  22DA               	addwfc	fsr2h,f,c
 32687  01284C  06DE               	decf	postinc2,f,c
 32688  01284E  0E00               	movlw	0
 32689  012850  5ADD               	subwfb	postdec2,f,c
 32690                           
 32691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 32692                           ;stkvar	_i @ sp[(-56)+36]
 32693  012852  50E1               	movf	fsr1l,w,c
 32694  012854  0FEC               	addlw	-20
 32695  012856  6ED9               	movwf	fsr2l,c
 32696  012858  50E2               	movf	fsr1h,w,c
 32697  01285A  6EDA               	movwf	fsr2h,c
 32698  01285C  0EFF               	movlw	255
 32699  01285E  22DA               	addwfc	fsr2h,f,c
 32700  012860  06DE               	decf	postinc2,f,c
 32701  012862  0E00               	movlw	0
 32702  012864  5ADD               	subwfb	postdec2,f,c
 32703  012866  0EBF               	movlw	191
 32704  012868  6E34               	movwf	(btemp+10)^0,c
 32705  01286A  0EFF               	movlw	255
 32706  01286C  6E35               	movwf	(btemp+11)^0,c
 32707                           
 32708                           ;stkvar	_c @ sp[(-56)+-7]
 32709  01286E  0EC1               	movlw	-63
 32710  012870  50E3               	movf	plusw1,w,c
 32711  012872  6E32               	movwf	(btemp+8)^0,c
 32712  012874  6A33               	clrf	(btemp+9)^0,c
 32713  012876  5034               	movf	(btemp+10)^0,w,c
 32714  012878  2632               	addwf	(btemp+8)^0,f,c
 32715  01287A  5035               	movf	(btemp+11)^0,w,c
 32716  01287C  2233               	addwfc	(btemp+9)^0,f,c
 32717  01287E  5033               	movf	(btemp+9)^0,w,c
 32718  012880  E106               	bnz	u15240
 32719  012882  0E1A               	movlw	26
 32720  012884  5C32               	subwf	(btemp+8)^0,w,c
 32721  012886  B0D8               	btfsc	status,0,c
 32722  012888  D002               	goto	u15240
 32723  01288A  0E01               	movlw	1
 32724  01288C  D001               	goto	u15250
 32725  01288E                     u15240:
 32726  01288E  0E00               	movlw	0
 32727  012890                     u15250:
 32728  012890  6E34               	movwf	(btemp+10)^0,c
 32729  012892  6A35               	clrf	(btemp+11)^0,c
 32730                           
 32731                           ;stkvar	_efgtoa$6625 @ sp[(-56)+0]
 32732  012894  0EC8               	movlw	-56
 32733  012896  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32734  01289C  0EC9               	movlw	-55
 32735  01289E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32736                           
 32737                           ;stkvar	_efgtoa$6625 @ sp[(-56)+0]
 32738  0128A4  0EC8               	movlw	-56
 32739  0128A6  006F FF8C  F02A    	movff	plusw1,btemp
 32740  0128AC  0EC9               	movlw	-55
 32741  0128AE  50E3               	movf	plusw1,w,c
 32742  0128B0  102A               	iorwf	btemp^0,w,c
 32743  0128B2  A4D8               	btfss	status,2,c
 32744  0128B4  D002               	goto	l15948
 32745  0128B6  0E65               	movlw	101
 32746  0128B8  D001               	goto	L34
 32747  0128BA                     l15948:
 32748  0128BA  0E45               	movlw	69
 32749  0128BC                     L34:
 32750  0128BC  6E34               	movwf	(btemp+10)^0,c
 32751  0128BE  0E00               	movlw	0
 32752  0128C0  6E35               	movwf	(btemp+11)^0,c
 32753                           
 32754                           ;stkvar	_efgtoa$6624 @ sp[(-56)+2]
 32755  0128C2  0ECA               	movlw	-54
 32756  0128C4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32757  0128CA  0ECB               	movlw	-53
 32758  0128CC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32759                           
 32760                           ;stkvar	_efgtoa$6624 @ sp[(-56)+2]
 32761                           ;stkvar	_i @ sp[(-56)+36]
 32762  0128D2  0EEC               	movlw	-20
 32763  0128D4  006F FF8C  F034    	movff	plusw1,btemp+10
 32764  0128DA  0EED               	movlw	-19
 32765  0128DC  006F FF8C  F035    	movff	plusw1,btemp+11
 32766  0128E2  0E54               	movlw	low _dbuf
 32767  0128E4  2434               	addwf	(btemp+10)^0,w,c
 32768  0128E6  6ED9               	movwf	fsr2l,c
 32769  0128E8  0E03               	movlw	high _dbuf
 32770  0128EA  2035               	addwfc	(btemp+11)^0,w,c
 32771  0128EC  6EDA               	movwf	fsr2h,c
 32772  0128EE  0ECA               	movlw	-54
 32773  0128F0  006F FF8F FFDF     	movff	plusw1,indf2
 32774                           
 32775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 32776                           ;stkvar	_w @ sp[(-56)+38]
 32777  0128F6  50E1               	movf	fsr1l,w,c
 32778  0128F8  0FEE               	addlw	-18
 32779  0128FA  6ED9               	movwf	fsr2l,c
 32780  0128FC  50E2               	movf	fsr1h,w,c
 32781  0128FE  6EDA               	movwf	fsr2h,c
 32782  012900  0EFF               	movlw	255
 32783  012902  22DA               	addwfc	fsr2h,f,c
 32784  012904  06DE               	decf	postinc2,f,c
 32785  012906  0E00               	movlw	0
 32786  012908  5ADD               	subwfb	postdec2,f,c
 32787                           
 32788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 32789                           ;stkvar	_i @ sp[(-56)+36]
 32790  01290A  0EEC               	movlw	-20
 32791  01290C  006F FF8C  F034    	movff	plusw1,btemp+10
 32792  012912  0EED               	movlw	-19
 32793  012914  006F FF8C  F035    	movff	plusw1,btemp+11
 32794  01291A  0E54               	movlw	low _dbuf
 32795  01291C  2434               	addwf	(btemp+10)^0,w,c
 32796  01291E  6E32               	movwf	(btemp+8)^0,c
 32797  012920  0E03               	movlw	high _dbuf
 32798  012922  2035               	addwfc	(btemp+11)^0,w,c
 32799  012924  6E33               	movwf	(btemp+9)^0,c
 32800  012926  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 32801  01292C  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 32802                           
 32803                           ;stkvar	_n @ sp[(-58)+32]
 32804  012932  0E54               	movlw	low _dbuf
 32805  012934  6E34               	movwf	(btemp+10)^0,c
 32806  012936  0E03               	movlw	high _dbuf
 32807  012938  6E35               	movwf	(btemp+11)^0,c
 32808  01293A  0EE6               	movlw	-26
 32809  01293C  50E3               	movf	plusw1,w,c
 32810  01293E  2634               	addwf	(btemp+10)^0,f,c
 32811  012940  0EE7               	movlw	-25
 32812  012942  50E3               	movf	plusw1,w,c
 32813  012944  2235               	addwfc	(btemp+11)^0,f,c
 32814  012946  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 32815  01294C  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 32816  012952  EC17  F003         	call	_strcpy	;wreg free
 32817  012956  EFA6  F08C         	goto	l15700
 32818  01295A                     l2527:
 32819                           
 32820                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 32821  01295A  0EC1               	movlw	193
 32822  01295C  26E1               	addwf	fsr1l,f,c
 32823  01295E  0EFF               	movlw	255
 32824  012960  22E2               	addwfc	fsr1h,f,c
 32825  012962  0012               	return		;funcret
 32826  012964                     __end_of_efgtoa:
 32827                           	opt callstack 0
 32828                           
 32829 ;; *************** function _tolower *****************
 32830 ;; Defined at:
 32831 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 32832 ;; Parameters:    Size  Location     Type
 32833 ;;  c               2  [STACK] int 
 32834 ;; Auto vars:     Size  Location     Type
 32835 ;;		None
 32836 ;; Return value:  Size  Location     Type
 32837 ;;                  2  [STACK] int 
 32838 ;; Registers used:
 32839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 32840 ;; Tracked objects:
 32841 ;;		On entry : 0/0
 32842 ;;		On exit  : 0/0
 32843 ;;		Unchanged: 0/0
 32844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32849 ;;Total ram usage:        0 bytes
 32850 ;; Hardware stack levels used:    1
 32851 ;; Hardware stack levels required when called:   16
 32852 ;; This function calls:
 32853 ;;		_isupper
 32854 ;; This function is called by:
 32855 ;;		_efgtoa
 32856 ;;		_vfpfcnvrt
 32857 ;; This function uses a reentrant model
 32858 ;;
 32859                           
 32860                           	psect	text104
 32861  001480                     __ptext104:
 32862                           	opt callstack 0
 32863  001480                     _tolower:
 32864                           	opt callstack 0
 32865                           
 32866                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32867  001480  52E6               	movf	postinc1,f,c
 32868  001482  52E6               	movf	postinc1,f,c
 32869                           
 32870                           ;stkvar	_c @ sp[(-2)+-2]
 32871                           
 32872                           ;incstack = 0
 32873 ;; hardware stack exceeded
 32874  001484  0EFC               	movlw	-4
 32875  001486  50E3               	movf	plusw1,w,c
 32876  001488  0FBF               	addlw	191
 32877  00148A  6E34               	movwf	(btemp+10)^0,c
 32878  00148C  0EFD               	movlw	-3
 32879  00148E  006F FF8C  F035    	movff	plusw1,btemp+11
 32880  001494  0EFF               	movlw	255
 32881  001496  2235               	addwfc	(btemp+11)^0,f,c
 32882  001498  5035               	movf	(btemp+11)^0,w,c
 32883  00149A  E106               	bnz	u7860
 32884  00149C  0E1A               	movlw	26
 32885  00149E  5C34               	subwf	(btemp+10)^0,w,c
 32886  0014A0  B0D8               	btfsc	status,0,c
 32887  0014A2  D002               	goto	u7860
 32888  0014A4  0E01               	movlw	1
 32889  0014A6  D001               	goto	u7870
 32890  0014A8                     u7860:
 32891  0014A8  0E00               	movlw	0
 32892  0014AA                     u7870:
 32893  0014AA  6E34               	movwf	(btemp+10)^0,c
 32894  0014AC  6A35               	clrf	(btemp+11)^0,c
 32895                           
 32896                           ;stkvar	_tolower$7579 @ sp[(-2)+0]
 32897  0014AE  0EFE               	movlw	-2
 32898  0014B0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 32899  0014B6  0EFF               	movlw	-1
 32900  0014B8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 32901                           
 32902                           ;stkvar	_tolower$7579 @ sp[(-2)+0]
 32903  0014BE  0EFE               	movlw	-2
 32904  0014C0  006F FF8C  F02A    	movff	plusw1,btemp
 32905  0014C6  0EFF               	movlw	-1
 32906  0014C8  50E3               	movf	plusw1,w,c
 32907  0014CA  102A               	iorwf	btemp^0,w,c
 32908  0014CC  B4D8               	btfsc	status,2,c
 32909  0014CE  D00D               	goto	l10150
 32910                           
 32911                           ;stkvar	_c @ sp[(-2)+-2]
 32912  0014D0  0EFC               	movlw	-4
 32913  0014D2  006F FF8C  F02A    	movff	plusw1,btemp
 32914  0014D8  0EFD               	movlw	-3
 32915  0014DA  006F FF8C  F02B    	movff	plusw1,btemp+1
 32916  0014E0  0E20               	movlw	32
 32917  0014E2  122A               	iorwf	btemp^0,f,c
 32918  0014E4  0E00               	movlw	0
 32919  0014E6  122B               	iorwf	(btemp+1)^0,f,c
 32920  0014E8  D008               	goto	l3829
 32921  0014EA                     l10150:
 32922                           
 32923                           ;stkvar	_c @ sp[(-2)+-2]
 32924  0014EA  0EFC               	movlw	-4
 32925  0014EC  006F FF8C  F02A    	movff	plusw1,btemp
 32926  0014F2  0EFD               	movlw	-3
 32927  0014F4  006F FF8C  F02B    	movff	plusw1,btemp+1
 32928  0014FA                     l3829:
 32929                           
 32930                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 32931  0014FA  52E5               	movf	postdec1,f,c
 32932  0014FC  52E5               	movf	postdec1,f,c
 32933  0014FE  52E5               	movf	postdec1,f,c
 32934  001500  52E5               	movf	postdec1,f,c
 32935  001502  0012               	return		;funcret
 32936  001504                     __end_of_tolower:
 32937                           	opt callstack 0
 32938                           
 32939 ;; *************** function _isupper *****************
 32940 ;; Defined at:
 32941 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 32942 ;; Parameters:    Size  Location     Type
 32943 ;;  c               2  [STACK] int 
 32944 ;; Auto vars:     Size  Location     Type
 32945 ;;		None
 32946 ;; Return value:  Size  Location     Type
 32947 ;;                  2  [STACK] int 
 32948 ;; Registers used:
 32949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 32950 ;; Tracked objects:
 32951 ;;		On entry : 0/0
 32952 ;;		On exit  : 0/0
 32953 ;;		Unchanged: 0/0
 32954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32959 ;;Total ram usage:        0 bytes
 32960 ;; Hardware stack levels used:    1
 32961 ;; Hardware stack levels required when called:   15
 32962 ;; This function calls:
 32963 ;;		Nothing
 32964 ;; This function is called by:
 32965 ;;		_efgtoa
 32966 ;;		_xtoa
 32967 ;;		_vfpfcnvrt
 32968 ;;		_tolower
 32969 ;; This function uses a reentrant model
 32970 ;;
 32971                           
 32972                           	psect	text105
 32973  0025BC                     __ptext105:
 32974                           	opt callstack 0
 32975  0025BC                     _isupper:
 32976                           	opt callstack 0
 32977                           
 32978                           ;stkvar	_c @ sp[(0)+-2]
 32979                           
 32980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32981                           ;incstack = 0
 32982 ;; hardware stack exceeded
 32983  0025BC  0EFE               	movlw	-2
 32984  0025BE  50E3               	movf	plusw1,w,c
 32985  0025C0  0FBF               	addlw	191
 32986  0025C2  6E34               	movwf	(btemp+10)^0,c
 32987  0025C4  0EFF               	movlw	-1
 32988  0025C6  006F FF8C  F035    	movff	plusw1,btemp+11
 32989  0025CC  0EFF               	movlw	255
 32990  0025CE  2235               	addwfc	(btemp+11)^0,f,c
 32991  0025D0  5035               	movf	(btemp+11)^0,w,c
 32992  0025D2  E106               	bnz	u7200
 32993  0025D4  0E1A               	movlw	26
 32994  0025D6  5C34               	subwf	(btemp+10)^0,w,c
 32995  0025D8  B0D8               	btfsc	status,0,c
 32996  0025DA  D002               	goto	u7200
 32997  0025DC  0E01               	movlw	1
 32998  0025DE  D001               	goto	u7210
 32999  0025E0                     u7200:
 33000  0025E0  0E00               	movlw	0
 33001  0025E2                     u7210:
 33002  0025E2  6E2A               	movwf	btemp^0,c
 33003  0025E4  6A2B               	clrf	(btemp+1)^0,c
 33004                           
 33005                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 33006  0025E6  52E5               	movf	postdec1,f,c
 33007  0025E8  52E5               	movf	postdec1,f,c
 33008  0025EA  0012               	return		;funcret
 33009  0025EC                     __end_of_isupper:
 33010                           	opt callstack 0
 33011                           
 33012 ;; *************** function _strcpy *****************
 33013 ;; Defined at:
 33014 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 33015 ;; Parameters:    Size  Location     Type
 33016 ;;  dest            2  [STACK] PTR unsigned char 
 33017 ;;		 -> dbuf(80), 
 33018 ;;  src             2  [STACK] PTR const unsigned char 
 33019 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 33020 ;;		 -> dbuf(80), 
 33021 ;; Auto vars:     Size  Location     Type
 33022 ;;  d               2  [STACK] PTR unsigned char 
 33023 ;;		 -> dbuf(80), 
 33024 ;;  s               2  [STACK] PTR const unsigned char 
 33025 ;;		 -> STR_101(4), STR_100(4), STR_97(4), STR_96(4), 
 33026 ;;		 -> dbuf(80), 
 33027 ;; Return value:  Size  Location     Type
 33028 ;;                  2  [STACK] PTR unsigned char 
 33029 ;; Registers used:
 33030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 33031 ;; Tracked objects:
 33032 ;;		On entry : 0/0
 33033 ;;		On exit  : 0/0
 33034 ;;		Unchanged: 0/0
 33035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33040 ;;Total ram usage:        0 bytes
 33041 ;; Hardware stack levels used:    1
 33042 ;; Hardware stack levels required when called:   15
 33043 ;; This function calls:
 33044 ;;		Nothing
 33045 ;; This function is called by:
 33046 ;;		_efgtoa
 33047 ;; This function uses a reentrant model
 33048 ;;
 33049                           
 33050                           	psect	text106
 33051  00062E                     __ptext106:
 33052                           	opt callstack 0
 33053  00062E                     _strcpy:
 33054                           	opt callstack 0
 33055                           
 33056                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33057  00062E  52E6               	movf	postinc1,f,c
 33058  000630  52E6               	movf	postinc1,f,c
 33059  000632  52E6               	movf	postinc1,f,c
 33060  000634  52E6               	movf	postinc1,f,c
 33061                           
 33062                           ;stkvar	_src @ sp[(-4)+-4]
 33063                           
 33064                           ;incstack = 0
 33065 ;; hardware stack exceeded
 33066  000636  0EF8               	movlw	-8
 33067  000638  006F FF8C  F034    	movff	plusw1,btemp+10
 33068  00063E  0EF9               	movlw	-7
 33069  000640  006F FF8C  F035    	movff	plusw1,btemp+11
 33070                           
 33071                           ;stkvar	_s @ sp[(-4)+2]
 33072  000646  0EFF               	movlw	-1
 33073  000648  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33074  00064E  0EFE               	movlw	-2
 33075  000650  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33076                           
 33077                           ;stkvar	_dest @ sp[(-4)+-2]
 33078  000656  0EFA               	movlw	-6
 33079  000658  006F FF8C  F034    	movff	plusw1,btemp+10
 33080  00065E  0EFB               	movlw	-5
 33081  000660  006F FF8C  F035    	movff	plusw1,btemp+11
 33082                           
 33083                           ;stkvar	_d @ sp[(-4)+0]
 33084  000666  0EFD               	movlw	-3
 33085  000668  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33086  00066E  0EFC               	movlw	-4
 33087  000670  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33088  000676                     l15484:
 33089                           
 33090                           ;stkvar	_s @ sp[(-4)+2]
 33091  000676  50E1               	movf	fsr1l,w,c
 33092  000678  0FFE               	addlw	-2
 33093  00067A  6ED9               	movwf	fsr2l,c
 33094  00067C  50E2               	movf	fsr1h,w,c
 33095  00067E  6EDA               	movwf	fsr2h,c
 33096  000680  0EFF               	movlw	255
 33097  000682  22DA               	addwfc	fsr2h,f,c
 33098  000684  006F FF7C  F034    	movff	indf2,btemp+10
 33099  00068A  0E01               	movlw	1
 33100  00068C  26DE               	addwf	postinc2,f,c
 33101  00068E  006F FF7C  F035    	movff	indf2,btemp+11
 33102  000694  0E00               	movlw	0
 33103  000696  22DD               	addwfc	postdec2,f,c
 33104  000698  0060  F0D3  FFF6   	movff	btemp+10,tblptrl
 33105  00069E  0060  F0D7  FFF7   	movff	btemp+11,tblptrh
 33106  0006A4  0E00               	movlw	low (__mediumconst shr (0+16))
 33107  0006A6  6EF8               	movwf	tblptru,c
 33108                           
 33109                           ;stkvar	_d @ sp[(-4)+0]
 33110  0006A8  50E1               	movf	fsr1l,w,c
 33111  0006AA  0FFC               	addlw	-4
 33112  0006AC  6ED9               	movwf	fsr2l,c
 33113  0006AE  50E2               	movf	fsr1h,w,c
 33114  0006B0  6EDA               	movwf	fsr2h,c
 33115  0006B2  0EFF               	movlw	255
 33116  0006B4  22DA               	addwfc	fsr2h,f,c
 33117  0006B6  006F FF7C  F034    	movff	indf2,btemp+10
 33118  0006BC  0E01               	movlw	1
 33119  0006BE  26DE               	addwf	postinc2,f,c
 33120  0006C0  006F FF7C  F035    	movff	indf2,btemp+11
 33121  0006C6  0E00               	movlw	0
 33122  0006C8  22DD               	addwfc	postdec2,f,c
 33123  0006CA  0060  F0D3  FFD9   	movff	btemp+10,fsr2l
 33124  0006D0  0060  F0D7  FFDA   	movff	btemp+11,fsr2h
 33125  0006D6  0E1F               	movlw	(high __ramtop+-1)
 33126  0006D8  64F7               	cpfsgt	tblptrh,c
 33127  0006DA  D003               	bra	u14407
 33128  0006DC  0008               	tblrd		*
 33129  0006DE  50F5               	movf	tablat,w,c
 33130  0006E0  D007               	bra	u14400
 33131  0006E2                     u14407:
 33132  0006E2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 33133  0006E8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 33134  0006EE  50EF               	movf	indf0,w,c
 33135  0006F0                     u14400:
 33136  0006F0  6EDF               	movwf	indf2,c
 33137  0006F2  50DF               	movf	indf2,w,c
 33138  0006F4  A4D8               	btfss	status,2,c
 33139  0006F6  D7BF               	goto	l15484
 33140                           
 33141                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 33142  0006F8  0EF8               	movlw	248
 33143  0006FA  26E1               	addwf	fsr1l,f,c
 33144  0006FC  0EFF               	movlw	255
 33145  0006FE  22E2               	addwfc	fsr1h,f,c
 33146  000700  0012               	return		;funcret
 33147  000702                     __end_of_strcpy:
 33148                           	opt callstack 0
 33149                           
 33150 ;; *************** function _floorf *****************
 33151 ;; Defined at:
 33152 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 33153 ;; Parameters:    Size  Location     Type
 33154 ;;  x               4  [STACK] float 
 33155 ;; Auto vars:     Size  Location     Type
 33156 ;;  u               4  [STACK] struct .
 33157 ;;  m               4  [STACK] unsigned long 
 33158 ;;  e               2  [STACK] int 
 33159 ;; Return value:  Size  Location     Type
 33160 ;;                  4  [STACK] float 
 33161 ;; Registers used:
 33162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 33163 ;; Tracked objects:
 33164 ;;		On entry : 0/0
 33165 ;;		On exit  : 0/0
 33166 ;;		Unchanged: 0/0
 33167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33172 ;;Total ram usage:        0 bytes
 33173 ;; Hardware stack levels used:    1
 33174 ;; Hardware stack levels required when called:   15
 33175 ;; This function calls:
 33176 ;;		Nothing
 33177 ;; This function is called by:
 33178 ;;		_efgtoa
 33179 ;; This function uses a reentrant model
 33180 ;;
 33181                           
 33182                           	psect	text107
 33183  01AAF6                     __ptext107:
 33184                           	opt callstack 0
 33185  01AAF6                     _floorf:
 33186                           	opt callstack 0
 33187                           
 33188                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 33189  01AAF6  0E0A               	movlw	10
 33190  01AAF8  26E1               	addwf	fsr1l,f,c
 33191  01AAFA  0E00               	movlw	0
 33192  01AAFC  22E2               	addwfc	fsr1h,f,c
 33193                           
 33194                           ;incstack = 0
 33195 ;; hardware stack exceeded
 33196  01AAFE  0060  F1D0  F032   	movff	floorf@F524,btemp+8
 33197  01AB04  0060  F1D4  F033   	movff	floorf@F524+1,btemp+9
 33198  01AB0A  0060  F1D8  F034   	movff	floorf@F524+2,btemp+10
 33199  01AB10  0060  F1DC  F035   	movff	floorf@F524+3,btemp+11
 33200                           
 33201                           ;stkvar	_u @ sp[(-10)+0]
 33202  01AB16  0EF6               	movlw	-10
 33203  01AB18  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33204  01AB1E  0EF7               	movlw	-9
 33205  01AB20  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33206  01AB26  0EF8               	movlw	-8
 33207  01AB28  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33208  01AB2E  0EF9               	movlw	-7
 33209  01AB30  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33210                           
 33211                           ;stkvar	_x @ sp[(-10)+-4]
 33212  01AB36  0EF2               	movlw	-14
 33213  01AB38  006F FF8C  F032    	movff	plusw1,btemp+8
 33214  01AB3E  0EF3               	movlw	-13
 33215  01AB40  006F FF8C  F033    	movff	plusw1,btemp+9
 33216  01AB46  0EF4               	movlw	-12
 33217  01AB48  006F FF8C  F034    	movff	plusw1,btemp+10
 33218  01AB4E  0EF5               	movlw	-11
 33219  01AB50  006F FF8C  F035    	movff	plusw1,btemp+11
 33220                           
 33221                           ;stkvar	_u @ sp[(-10)+0]
 33222  01AB56  0EF6               	movlw	-10
 33223  01AB58  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33224  01AB5E  0EF7               	movlw	-9
 33225  01AB60  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33226  01AB66  0EF8               	movlw	-8
 33227  01AB68  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33228  01AB6E  0EF9               	movlw	-7
 33229  01AB70  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33230  01AB76  0E81               	movlw	129
 33231  01AB78  6E34               	movwf	(btemp+10)^0,c
 33232  01AB7A  0EFF               	movlw	255
 33233  01AB7C  6E35               	movwf	(btemp+11)^0,c
 33234                           
 33235                           ;stkvar	_u @ sp[(-10)+0]
 33236  01AB7E  0EF6               	movlw	-10
 33237  01AB80  006F FF8C  F02E    	movff	plusw1,btemp+4
 33238  01AB86  0EF7               	movlw	-9
 33239  01AB88  006F FF8C  F02F    	movff	plusw1,btemp+5
 33240  01AB8E  0EF8               	movlw	-8
 33241  01AB90  006F FF8C  F030    	movff	plusw1,btemp+6
 33242  01AB96  0EF9               	movlw	-7
 33243  01AB98  006F FF8C  F031    	movff	plusw1,btemp+7
 33244  01AB9E  0E18               	movlw	24
 33245  01ABA0  D005               	goto	u7890
 33246  01ABA2                     u7895:
 33247  01ABA2  90D8               	bcf	status,0,c
 33248  01ABA4  3231               	rrcf	(btemp+7)^0,f,c
 33249  01ABA6  3230               	rrcf	(btemp+6)^0,f,c
 33250  01ABA8  322F               	rrcf	(btemp+5)^0,f,c
 33251  01ABAA  322E               	rrcf	(btemp+4)^0,f,c
 33252  01ABAC                     u7890:
 33253  01ABAC  2EE8               	decfsz	wreg,f,c
 33254  01ABAE  D7F9               	goto	u7895
 33255  01ABB0  0060  F0B8  F032   	movff	btemp+4,btemp+8
 33256  01ABB6  0060  F0BC  F033   	movff	btemp+5,btemp+9
 33257  01ABBC  0EFF               	movlw	255
 33258  01ABBE  1632               	andwf	(btemp+8)^0,f,c
 33259  01ABC0  0E00               	movlw	0
 33260  01ABC2  1633               	andwf	(btemp+9)^0,f,c
 33261  01ABC4  5034               	movf	(btemp+10)^0,w,c
 33262  01ABC6  2632               	addwf	(btemp+8)^0,f,c
 33263  01ABC8  5035               	movf	(btemp+11)^0,w,c
 33264  01ABCA  2233               	addwfc	(btemp+9)^0,f,c
 33265                           
 33266                           ;stkvar	_e @ sp[(-10)+8]
 33267  01ABCC  0EFE               	movlw	-2
 33268  01ABCE  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33269  01ABD4  0EFF               	movlw	-1
 33270  01ABD6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33271                           
 33272                           ;stkvar	_e @ sp[(-10)+8]
 33273  01ABDC  0EFF               	movlw	-1
 33274  01ABDE  BEE3               	btfsc	plusw1,7,c
 33275  01ABE0  D019               	goto	l10164
 33276  01ABE2  0EFF               	movlw	-1
 33277  01ABE4  50E3               	movf	plusw1,w,c
 33278  01ABE6  E108               	bnz	u7900
 33279  01ABE8  0EFE               	movlw	-2
 33280  01ABEA  006F FF8C  F02A    	movff	plusw1,btemp
 33281  01ABF0  0E17               	movlw	23
 33282  01ABF2  5E2A               	subwf	btemp^0,f,c
 33283  01ABF4  A0D8               	btfss	status,0,c
 33284  01ABF6  D00E               	goto	l10164
 33285  01ABF8                     u7900:
 33286                           
 33287                           ;stkvar	_x @ sp[(-10)+-4]
 33288  01ABF8  0EF2               	movlw	-14
 33289  01ABFA  006F FF8C  F02A    	movff	plusw1,btemp
 33290  01AC00  0EF3               	movlw	-13
 33291  01AC02  006F FF8C  F02B    	movff	plusw1,btemp+1
 33292  01AC08  0EF4               	movlw	-12
 33293  01AC0A  006F FF8C  F02C    	movff	plusw1,btemp+2
 33294  01AC10  0EF5               	movlw	-11
 33295  01AC12  D11F               	goto	L35
 33296  01AC14                     l10164:
 33297                           
 33298                           ;stkvar	_e @ sp[(-10)+8]
 33299  01AC14  0EFF               	movlw	-1
 33300  01AC16  BEE3               	btfsc	plusw1,7,c
 33301  01AC18  D0B4               	goto	l10180
 33302                           
 33303                           ;stkvar	_e @ sp[(-10)+8]
 33304  01AC1A  0EFE               	movlw	-2
 33305  01AC1C  006F FF8C  F035    	movff	plusw1,btemp+11
 33306  01AC22  0EFF               	movlw	255
 33307  01AC24  6E2E               	movwf	(btemp+4)^0,c
 33308  01AC26  0EFF               	movlw	255
 33309  01AC28  6E2F               	movwf	(btemp+5)^0,c
 33310  01AC2A  0E7F               	movlw	127
 33311  01AC2C  6E30               	movwf	(btemp+6)^0,c
 33312  01AC2E  0E00               	movlw	0
 33313  01AC30  6E31               	movwf	(btemp+7)^0,c
 33314  01AC32                     u7925:
 33315  01AC32  6635               	tstfsz	(btemp+11)^0,c
 33316  01AC34  D001               	goto	u7926
 33317  01AC36  D007               	goto	u7927
 33318  01AC38                     u7926:
 33319  01AC38  3431               	rlcf	(btemp+7)^0,w,c
 33320  01AC3A  3231               	rrcf	(btemp+7)^0,f,c
 33321  01AC3C  3230               	rrcf	(btemp+6)^0,f,c
 33322  01AC3E  322F               	rrcf	(btemp+5)^0,f,c
 33323  01AC40  322E               	rrcf	(btemp+4)^0,f,c
 33324  01AC42  2E35               	decfsz	(btemp+11)^0,f,c
 33325  01AC44  D7F6               	goto	u7925
 33326  01AC46                     u7927:
 33327                           
 33328                           ;stkvar	_m @ sp[(-10)+4]
 33329  01AC46  0EFA               	movlw	-6
 33330  01AC48  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 33331  01AC4E  0EFB               	movlw	-5
 33332  01AC50  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 33333  01AC56  0EFC               	movlw	-4
 33334  01AC58  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33335  01AC5E  0EFD               	movlw	-3
 33336  01AC60  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33337                           
 33338                           ;stkvar	_m @ sp[(-10)+4]
 33339                           ;stkvar	_u @ sp[(-10)+0]
 33340  01AC66  0EF6               	movlw	-10
 33341  01AC68  006F FF8C  F032    	movff	plusw1,btemp+8
 33342  01AC6E  0EF7               	movlw	-9
 33343  01AC70  006F FF8C  F033    	movff	plusw1,btemp+9
 33344  01AC76  0EF8               	movlw	-8
 33345  01AC78  006F FF8C  F034    	movff	plusw1,btemp+10
 33346  01AC7E  0EF9               	movlw	-7
 33347  01AC80  006F FF8C  F035    	movff	plusw1,btemp+11
 33348  01AC86  0EFA               	movlw	-6
 33349  01AC88  50E3               	movf	plusw1,w,c
 33350  01AC8A  1632               	andwf	(btemp+8)^0,f,c
 33351  01AC8C  0EFB               	movlw	-5
 33352  01AC8E  50E3               	movf	plusw1,w,c
 33353  01AC90  1633               	andwf	(btemp+9)^0,f,c
 33354  01AC92  0EFC               	movlw	-4
 33355  01AC94  50E3               	movf	plusw1,w,c
 33356  01AC96  1634               	andwf	(btemp+10)^0,f,c
 33357  01AC98  0EFD               	movlw	-3
 33358  01AC9A  50E3               	movf	plusw1,w,c
 33359  01AC9C  1635               	andwf	(btemp+11)^0,f,c
 33360  01AC9E  5032               	movf	(btemp+8)^0,w,c
 33361  01ACA0  1033               	iorwf	(btemp+9)^0,w,c
 33362  01ACA2  1034               	iorwf	(btemp+10)^0,w,c
 33363  01ACA4  1035               	iorwf	(btemp+11)^0,w,c
 33364  01ACA6  B4D8               	btfsc	status,2,c
 33365  01ACA8  D7A7               	goto	u7900
 33366                           
 33367                           ;stkvar	_u @ sp[(-10)+0]
 33368  01ACAA  0EF6               	movlw	-10
 33369  01ACAC  006F FF8C  F032    	movff	plusw1,btemp+8
 33370  01ACB2  0EF7               	movlw	-9
 33371  01ACB4  006F FF8C  F033    	movff	plusw1,btemp+9
 33372  01ACBA  0EF8               	movlw	-8
 33373  01ACBC  006F FF8C  F034    	movff	plusw1,btemp+10
 33374  01ACC2  0EF9               	movlw	-7
 33375  01ACC4  006F FF8C  F035    	movff	plusw1,btemp+11
 33376  01ACCA  0E20               	movlw	32
 33377  01ACCC  D005               	goto	u7940
 33378  01ACCE                     u7945:
 33379  01ACCE  90D8               	bcf	status,0,c
 33380  01ACD0  3235               	rrcf	(btemp+11)^0,f,c
 33381  01ACD2  3234               	rrcf	(btemp+10)^0,f,c
 33382  01ACD4  3233               	rrcf	(btemp+9)^0,f,c
 33383  01ACD6  3232               	rrcf	(btemp+8)^0,f,c
 33384  01ACD8                     u7940:
 33385  01ACD8  2EE8               	decfsz	wreg,f,c
 33386  01ACDA  D7F9               	goto	u7945
 33387  01ACDC  5032               	movf	(btemp+8)^0,w,c
 33388  01ACDE  B4D8               	btfsc	status,2,c
 33389  01ACE0  D028               	goto	l10178
 33390                           
 33391                           ;stkvar	_m @ sp[(-10)+4]
 33392                           ;stkvar	_u @ sp[(-10)+0]
 33393  01ACE2  0EF6               	movlw	-10
 33394  01ACE4  50E3               	movf	plusw1,w,c
 33395  01ACE6  6E2A               	movwf	btemp^0,c
 33396  01ACE8  0EFA               	movlw	-6
 33397  01ACEA  50E3               	movf	plusw1,w,c
 33398  01ACEC  262A               	addwf	btemp^0,f,c
 33399  01ACEE  0EF6               	movlw	-10
 33400  01ACF0  0060  F0AB  FFE3   	movff	btemp,plusw1
 33401  01ACF6  0EF7               	movlw	-9
 33402  01ACF8  50E3               	movf	plusw1,w,c
 33403  01ACFA  6E2A               	movwf	btemp^0,c
 33404  01ACFC  0EFB               	movlw	-5
 33405  01ACFE  50E3               	movf	plusw1,w,c
 33406  01AD00  222A               	addwfc	btemp^0,f,c
 33407  01AD02  0EF7               	movlw	-9
 33408  01AD04  0060  F0AB  FFE3   	movff	btemp,plusw1
 33409  01AD0A  0EF8               	movlw	-8
 33410  01AD0C  50E3               	movf	plusw1,w,c
 33411  01AD0E  6E2A               	movwf	btemp^0,c
 33412  01AD10  0EFC               	movlw	-4
 33413  01AD12  50E3               	movf	plusw1,w,c
 33414  01AD14  222A               	addwfc	btemp^0,f,c
 33415  01AD16  0EF8               	movlw	-8
 33416  01AD18  0060  F0AB  FFE3   	movff	btemp,plusw1
 33417  01AD1E  0EF9               	movlw	-7
 33418  01AD20  50E3               	movf	plusw1,w,c
 33419  01AD22  6E2A               	movwf	btemp^0,c
 33420  01AD24  0EFD               	movlw	-3
 33421  01AD26  50E3               	movf	plusw1,w,c
 33422  01AD28  222A               	addwfc	btemp^0,f,c
 33423  01AD2A  0EF9               	movlw	-7
 33424  01AD2C  0060  F0AB  FFE3   	movff	btemp,plusw1
 33425  01AD32                     l10178:
 33426                           
 33427                           ;stkvar	_m @ sp[(-10)+4]
 33428  01AD32  0EFA               	movlw	-6
 33429  01AD34  006F FF8C  F032    	movff	plusw1,btemp+8
 33430  01AD3A  0EFB               	movlw	-5
 33431  01AD3C  006F FF8C  F033    	movff	plusw1,btemp+9
 33432  01AD42  0EFC               	movlw	-4
 33433  01AD44  006F FF8C  F034    	movff	plusw1,btemp+10
 33434  01AD4A  0EFD               	movlw	-3
 33435  01AD4C  006F FF8C  F035    	movff	plusw1,btemp+11
 33436  01AD52  1C32               	comf	(btemp+8)^0,w,c
 33437  01AD54  6E2E               	movwf	(btemp+4)^0,c
 33438  01AD56  1C33               	comf	(btemp+9)^0,w,c
 33439  01AD58  6E2F               	movwf	(btemp+5)^0,c
 33440  01AD5A  1C34               	comf	(btemp+10)^0,w,c
 33441  01AD5C  6E30               	movwf	(btemp+6)^0,c
 33442  01AD5E  1C35               	comf	(btemp+11)^0,w,c
 33443  01AD60  6E31               	movwf	(btemp+7)^0,c
 33444                           
 33445                           ;stkvar	_u @ sp[(-10)+0]
 33446  01AD62  50E1               	movf	fsr1l,w,c
 33447  01AD64  0FF6               	addlw	-10
 33448  01AD66  6ED9               	movwf	fsr2l,c
 33449  01AD68  50E2               	movf	fsr1h,w,c
 33450  01AD6A  6EDA               	movwf	fsr2h,c
 33451  01AD6C  0EFF               	movlw	255
 33452  01AD6E  22DA               	addwfc	fsr2h,f,c
 33453  01AD70  502E               	movf	(btemp+4)^0,w,c
 33454  01AD72  16DE               	andwf	postinc2,f,c
 33455  01AD74  502F               	movf	(btemp+5)^0,w,c
 33456  01AD76  16DE               	andwf	postinc2,f,c
 33457  01AD78  5030               	movf	(btemp+6)^0,w,c
 33458  01AD7A  16DE               	andwf	postinc2,f,c
 33459  01AD7C  5031               	movf	(btemp+7)^0,w,c
 33460  01AD7E  16DE               	andwf	postinc2,f,c
 33461  01AD80  D05B               	goto	l10188
 33462  01AD82                     l10180:
 33463                           
 33464                           ;stkvar	_u @ sp[(-10)+0]
 33465  01AD82  0EF6               	movlw	-10
 33466  01AD84  006F FF8C  F032    	movff	plusw1,btemp+8
 33467  01AD8A  0EF7               	movlw	-9
 33468  01AD8C  006F FF8C  F033    	movff	plusw1,btemp+9
 33469  01AD92  0EF8               	movlw	-8
 33470  01AD94  006F FF8C  F034    	movff	plusw1,btemp+10
 33471  01AD9A  0EF9               	movlw	-7
 33472  01AD9C  006F FF8C  F035    	movff	plusw1,btemp+11
 33473  01ADA2  0E20               	movlw	32
 33474  01ADA4  D005               	goto	u7960
 33475  01ADA6                     u7965:
 33476  01ADA6  90D8               	bcf	status,0,c
 33477  01ADA8  3235               	rrcf	(btemp+11)^0,f,c
 33478  01ADAA  3234               	rrcf	(btemp+10)^0,f,c
 33479  01ADAC  3233               	rrcf	(btemp+9)^0,f,c
 33480  01ADAE  3232               	rrcf	(btemp+8)^0,f,c
 33481  01ADB0                     u7960:
 33482  01ADB0  2EE8               	decfsz	wreg,f,c
 33483  01ADB2  D7F9               	goto	u7965
 33484  01ADB4  6632               	tstfsz	(btemp+8)^0,c
 33485  01ADB6  D009               	goto	l10184
 33486                           
 33487                           ;stkvar	_u @ sp[(-10)+0]
 33488  01ADB8  0EF6               	movlw	-10
 33489  01ADBA  6AE3               	clrf	plusw1,c
 33490  01ADBC  0EF7               	movlw	-9
 33491  01ADBE  6AE3               	clrf	plusw1,c
 33492  01ADC0  0EF8               	movlw	-8
 33493  01ADC2  6AE3               	clrf	plusw1,c
 33494  01ADC4  0EF9               	movlw	-7
 33495  01ADC6  6AE3               	clrf	plusw1,c
 33496  01ADC8  D037               	goto	l10188
 33497  01ADCA                     l10184:
 33498                           
 33499                           ;stkvar	_u @ sp[(-10)+0]
 33500  01ADCA  0EF6               	movlw	-10
 33501  01ADCC  006F FF8C  F032    	movff	plusw1,btemp+8
 33502  01ADD2  0EF7               	movlw	-9
 33503  01ADD4  006F FF8C  F033    	movff	plusw1,btemp+9
 33504  01ADDA  0EF8               	movlw	-8
 33505  01ADDC  006F FF8C  F034    	movff	plusw1,btemp+10
 33506  01ADE2  0EF9               	movlw	-7
 33507  01ADE4  006F FF8C  F035    	movff	plusw1,btemp+11
 33508  01ADEA  90D8               	bcf	status,0,c
 33509  01ADEC  3432               	rlcf	(btemp+8)^0,w,c
 33510  01ADEE  6E2E               	movwf	(btemp+4)^0,c
 33511  01ADF0  3433               	rlcf	(btemp+9)^0,w,c
 33512  01ADF2  6E2F               	movwf	(btemp+5)^0,c
 33513  01ADF4  3434               	rlcf	(btemp+10)^0,w,c
 33514  01ADF6  6E30               	movwf	(btemp+6)^0,c
 33515  01ADF8  3435               	rlcf	(btemp+11)^0,w,c
 33516  01ADFA  6E31               	movwf	(btemp+7)^0,c
 33517  01ADFC  502E               	movf	(btemp+4)^0,w,c
 33518  01ADFE  102F               	iorwf	(btemp+5)^0,w,c
 33519  01AE00  1030               	iorwf	(btemp+6)^0,w,c
 33520  01AE02  1031               	iorwf	(btemp+7)^0,w,c
 33521  01AE04  B4D8               	btfsc	status,2,c
 33522  01AE06  D018               	goto	l10188
 33523  01AE08  0E00               	movlw	0
 33524  01AE0A  6E32               	movwf	(btemp+8)^0,c
 33525  01AE0C  0E00               	movlw	0
 33526  01AE0E  6E33               	movwf	(btemp+9)^0,c
 33527  01AE10  0E80               	movlw	128
 33528  01AE12  6E34               	movwf	(btemp+10)^0,c
 33529  01AE14  0EBF               	movlw	191
 33530  01AE16  6E35               	movwf	(btemp+11)^0,c
 33531                           
 33532                           ;stkvar	_u @ sp[(-10)+0]
 33533  01AE18  0EF6               	movlw	-10
 33534  01AE1A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33535  01AE20  0EF7               	movlw	-9
 33536  01AE22  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33537  01AE28  0EF8               	movlw	-8
 33538  01AE2A  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33539  01AE30  0EF9               	movlw	-7
 33540  01AE32  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33541  01AE38                     l10188:
 33542                           
 33543                           ;stkvar	_u @ sp[(-10)+0]
 33544  01AE38  0EF6               	movlw	-10
 33545  01AE3A  006F FF8C  F02A    	movff	plusw1,btemp
 33546  01AE40  0EF7               	movlw	-9
 33547  01AE42  006F FF8C  F02B    	movff	plusw1,btemp+1
 33548  01AE48  0EF8               	movlw	-8
 33549  01AE4A  006F FF8C  F02C    	movff	plusw1,btemp+2
 33550  01AE50  0EF9               	movlw	-7
 33551  01AE52                     L35:
 33552  01AE52  006F FF8C  F02D    	movff	plusw1,btemp+3
 33553                           
 33554                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33555  01AE58  0EF2               	movlw	242
 33556  01AE5A  26E1               	addwf	fsr1l,f,c
 33557  01AE5C  0EFF               	movlw	255
 33558  01AE5E  22E2               	addwfc	fsr1h,f,c
 33559  01AE60  0012               	return		;funcret
 33560  01AE62                     __end_of_floorf:
 33561                           	opt callstack 0
 33562                           
 33563 ;; *************** function ___fpclassifyf *****************
 33564 ;; Defined at:
 33565 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 33566 ;; Parameters:    Size  Location     Type
 33567 ;;  x               4  [STACK] float 
 33568 ;; Auto vars:     Size  Location     Type
 33569 ;;  u               4  [STACK] struct .
 33570 ;;  e               2  [STACK] int 
 33571 ;; Return value:  Size  Location     Type
 33572 ;;                  2  [STACK] int 
 33573 ;; Registers used:
 33574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 33575 ;; Tracked objects:
 33576 ;;		On entry : 0/0
 33577 ;;		On exit  : 0/0
 33578 ;;		Unchanged: 0/0
 33579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33584 ;;Total ram usage:        0 bytes
 33585 ;; Hardware stack levels used:    1
 33586 ;; Hardware stack levels required when called:   15
 33587 ;; This function calls:
 33588 ;;		Nothing
 33589 ;; This function is called by:
 33590 ;;		_efgtoa
 33591 ;; This function uses a reentrant model
 33592 ;;
 33593                           
 33594                           	psect	text108
 33595  01E062                     __ptext108:
 33596                           	opt callstack 0
 33597  01E062                     ___fpclassifyf:
 33598                           	opt callstack 0
 33599                           
 33600                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33601  01E062  0E06               	movlw	6
 33602  01E064  26E1               	addwf	fsr1l,f,c
 33603  01E066  0E00               	movlw	0
 33604  01E068  22E2               	addwfc	fsr1h,f,c
 33605                           
 33606                           ;incstack = 0
 33607 ;; hardware stack exceeded
 33608  01E06A  0060  F1F0  F032   	movff	___fpclassifyf@F463,btemp+8
 33609  01E070  0060  F1F4  F033   	movff	___fpclassifyf@F463+1,btemp+9
 33610  01E076  0060  F1F8  F034   	movff	___fpclassifyf@F463+2,btemp+10
 33611  01E07C  0060  F1FC  F035   	movff	___fpclassifyf@F463+3,btemp+11
 33612                           
 33613                           ;stkvar	_u @ sp[(-6)+0]
 33614  01E082  0EFA               	movlw	-6
 33615  01E084  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33616  01E08A  0EFB               	movlw	-5
 33617  01E08C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33618  01E092  0EFC               	movlw	-4
 33619  01E094  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33620  01E09A  0EFD               	movlw	-3
 33621  01E09C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33622                           
 33623                           ;stkvar	_x @ sp[(-6)+-4]
 33624  01E0A2  0EF6               	movlw	-10
 33625  01E0A4  006F FF8C  F032    	movff	plusw1,btemp+8
 33626  01E0AA  0EF7               	movlw	-9
 33627  01E0AC  006F FF8C  F033    	movff	plusw1,btemp+9
 33628  01E0B2  0EF8               	movlw	-8
 33629  01E0B4  006F FF8C  F034    	movff	plusw1,btemp+10
 33630  01E0BA  0EF9               	movlw	-7
 33631  01E0BC  006F FF8C  F035    	movff	plusw1,btemp+11
 33632                           
 33633                           ;stkvar	_u @ sp[(-6)+0]
 33634  01E0C2  0EFA               	movlw	-6
 33635  01E0C4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33636  01E0CA  0EFB               	movlw	-5
 33637  01E0CC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 33638  01E0D2  0EFC               	movlw	-4
 33639  01E0D4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 33640  01E0DA  0EFD               	movlw	-3
 33641  01E0DC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 33642                           
 33643                           ;stkvar	_u @ sp[(-6)+0]
 33644  01E0E2  0EFA               	movlw	-6
 33645  01E0E4  006F FF8C  F032    	movff	plusw1,btemp+8
 33646  01E0EA  0EFB               	movlw	-5
 33647  01E0EC  006F FF8C  F033    	movff	plusw1,btemp+9
 33648  01E0F2  0EFC               	movlw	-4
 33649  01E0F4  006F FF8C  F034    	movff	plusw1,btemp+10
 33650  01E0FA  0EFD               	movlw	-3
 33651  01E0FC  006F FF8C  F035    	movff	plusw1,btemp+11
 33652  01E102  0E18               	movlw	24
 33653  01E104  D005               	goto	u7770
 33654  01E106                     u7775:
 33655  01E106  90D8               	bcf	status,0,c
 33656  01E108  3235               	rrcf	(btemp+11)^0,f,c
 33657  01E10A  3234               	rrcf	(btemp+10)^0,f,c
 33658  01E10C  3233               	rrcf	(btemp+9)^0,f,c
 33659  01E10E  3232               	rrcf	(btemp+8)^0,f,c
 33660  01E110                     u7770:
 33661  01E110  2EE8               	decfsz	wreg,f,c
 33662  01E112  D7F9               	goto	u7775
 33663  01E114  0060  F0C8  F030   	movff	btemp+8,btemp+6
 33664  01E11A  0060  F0CC  F031   	movff	btemp+9,btemp+7
 33665  01E120  0EFF               	movlw	255
 33666  01E122  1630               	andwf	(btemp+6)^0,f,c
 33667  01E124  0E00               	movlw	0
 33668  01E126  1631               	andwf	(btemp+7)^0,f,c
 33669                           
 33670                           ;stkvar	_e @ sp[(-6)+4]
 33671  01E128  0EFE               	movlw	-2
 33672  01E12A  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 33673  01E130  0EFF               	movlw	-1
 33674  01E132  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 33675                           
 33676                           ;stkvar	_e @ sp[(-6)+4]
 33677  01E138  0EFE               	movlw	-2
 33678  01E13A  006F FF8C  F02A    	movff	plusw1,btemp
 33679  01E140  0EFF               	movlw	-1
 33680  01E142  50E3               	movf	plusw1,w,c
 33681  01E144  102A               	iorwf	btemp^0,w,c
 33682  01E146  A4D8               	btfss	status,2,c
 33683  01E148  D023               	goto	l10126
 33684                           
 33685                           ;stkvar	_u @ sp[(-6)+0]
 33686  01E14A  0EFA               	movlw	-6
 33687  01E14C  006F FF8C  F032    	movff	plusw1,btemp+8
 33688  01E152  0EFB               	movlw	-5
 33689  01E154  006F FF8C  F033    	movff	plusw1,btemp+9
 33690  01E15A  0EFC               	movlw	-4
 33691  01E15C  006F FF8C  F034    	movff	plusw1,btemp+10
 33692  01E162  0EFD               	movlw	-3
 33693  01E164  006F FF8C  F035    	movff	plusw1,btemp+11
 33694  01E16A  90D8               	bcf	status,0,c
 33695  01E16C  3432               	rlcf	(btemp+8)^0,w,c
 33696  01E16E  6E2E               	movwf	(btemp+4)^0,c
 33697  01E170  3433               	rlcf	(btemp+9)^0,w,c
 33698  01E172  6E2F               	movwf	(btemp+5)^0,c
 33699  01E174  3434               	rlcf	(btemp+10)^0,w,c
 33700  01E176  6E30               	movwf	(btemp+6)^0,c
 33701  01E178  3435               	rlcf	(btemp+11)^0,w,c
 33702  01E17A  6E31               	movwf	(btemp+7)^0,c
 33703  01E17C  502E               	movf	(btemp+4)^0,w,c
 33704  01E17E  102F               	iorwf	(btemp+5)^0,w,c
 33705  01E180  1030               	iorwf	(btemp+6)^0,w,c
 33706  01E182  1031               	iorwf	(btemp+7)^0,w,c
 33707  01E184  A4D8               	btfss	status,2,c
 33708  01E186  D002               	goto	l10122
 33709  01E188  0E02               	movlw	2
 33710  01E18A  D02E               	goto	L36
 33711  01E18C                     l10122:
 33712  01E18C  0E03               	movlw	3
 33713  01E18E  D02C               	goto	L36
 33714  01E190                     l10126:
 33715                           
 33716                           ;stkvar	_e @ sp[(-6)+4]
 33717  01E190  0EFE               	movlw	-2
 33718  01E192  28E3               	incf	plusw1,w,c
 33719  01E194  E128               	bnz	l10132
 33720  01E196  0EFF               	movlw	-1
 33721  01E198  50E3               	movf	plusw1,w,c
 33722  01E19A  A4D8               	btfss	status,2,c
 33723  01E19C  D024               	goto	l10132
 33724                           
 33725                           ;stkvar	_u @ sp[(-6)+0]
 33726  01E19E  0EFA               	movlw	-6
 33727  01E1A0  006F FF8C  F032    	movff	plusw1,btemp+8
 33728  01E1A6  0EFB               	movlw	-5
 33729  01E1A8  006F FF8C  F033    	movff	plusw1,btemp+9
 33730  01E1AE  0EFC               	movlw	-4
 33731  01E1B0  006F FF8C  F034    	movff	plusw1,btemp+10
 33732  01E1B6  0EFD               	movlw	-3
 33733  01E1B8  006F FF8C  F035    	movff	plusw1,btemp+11
 33734  01E1BE  0E09               	movlw	9
 33735  01E1C0                     u7815:
 33736  01E1C0  90D8               	bcf	status,0,c
 33737  01E1C2  3632               	rlcf	(btemp+8)^0,f,c
 33738  01E1C4  3633               	rlcf	(btemp+9)^0,f,c
 33739  01E1C6  3634               	rlcf	(btemp+10)^0,f,c
 33740  01E1C8  3635               	rlcf	(btemp+11)^0,f,c
 33741  01E1CA  2EE8               	decfsz	wreg,f,c
 33742  01E1CC  D7F9               	goto	u7815
 33743  01E1CE  5032               	movf	(btemp+8)^0,w,c
 33744  01E1D0  1033               	iorwf	(btemp+9)^0,w,c
 33745  01E1D2  1034               	iorwf	(btemp+10)^0,w,c
 33746  01E1D4  1035               	iorwf	(btemp+11)^0,w,c
 33747  01E1D6  A4D8               	btfss	status,2,c
 33748  01E1D8  D002               	goto	u7820
 33749  01E1DA  0E01               	movlw	1
 33750  01E1DC  D001               	goto	u7830
 33751  01E1DE                     u7820:
 33752  01E1DE  0E00               	movlw	0
 33753  01E1E0                     u7830:
 33754  01E1E0  6E2A               	movwf	btemp^0,c
 33755  01E1E2  6A2B               	clrf	(btemp+1)^0,c
 33756  01E1E4  D004               	goto	l3409
 33757  01E1E6                     l10132:
 33758  01E1E6  0E04               	movlw	4
 33759  01E1E8                     L36:
 33760  01E1E8  6E2A               	movwf	btemp^0,c
 33761  01E1EA  0E00               	movlw	0
 33762  01E1EC  6E2B               	movwf	(btemp+1)^0,c
 33763  01E1EE                     l3409:
 33764                           
 33765                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 33766  01E1EE  0EF6               	movlw	246
 33767  01E1F0  26E1               	addwf	fsr1l,f,c
 33768  01E1F2  0EFF               	movlw	255
 33769  01E1F4  22E2               	addwfc	fsr1h,f,c
 33770  01E1F6  0012               	return		;funcret
 33771  01E1F8                     __end_of___fpclassifyf:
 33772                           	opt callstack 0
 33773                           
 33774 ;; *************** function ___fltol *****************
 33775 ;; Defined at:
 33776 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 33777 ;; Parameters:    Size  Location     Type
 33778 ;;  f1              4  [STACK] int 
 33779 ;; Auto vars:     Size  Location     Type
 33780 ;;  exp1            1  [STACK] unsigned char 
 33781 ;;  sign1           1  [STACK] unsigned char 
 33782 ;; Return value:  Size  Location     Type
 33783 ;;                  4  [STACK] long 
 33784 ;; Registers used:
 33785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 33786 ;; Tracked objects:
 33787 ;;		On entry : 0/0
 33788 ;;		On exit  : 0/0
 33789 ;;		Unchanged: 0/0
 33790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33795 ;;Total ram usage:        0 bytes
 33796 ;; Hardware stack levels used:    1
 33797 ;; Hardware stack levels required when called:   15
 33798 ;; This function calls:
 33799 ;;		Nothing
 33800 ;; This function is called by:
 33801 ;;		_main
 33802 ;;		_convert_dac_raw
 33803 ;;		_load_hist_data
 33804 ;;		_calc_bsoc
 33805 ;;		_init_bsoc
 33806 ;;		_efgtoa
 33807 ;; This function uses a reentrant model
 33808 ;;
 33809                           
 33810                           	psect	text109
 33811  01E992                     __ptext109:
 33812                           	opt callstack 0
 33813  01E992                     ___fltol:
 33814                           	opt callstack 0
 33815                           
 33816                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33817  01E992  52E6               	movf	postinc1,f,c
 33818  01E994  52E6               	movf	postinc1,f,c
 33819                           
 33820                           ;stkvar	_f1 @ sp[(-2)+-4]
 33821                           
 33822                           ;incstack = 0
 33823 ;; hardware stack exceeded
 33824  01E996  0EFA               	movlw	-6
 33825  01E998  006F FF8C  F032    	movff	plusw1,btemp+8
 33826  01E99E  0EFB               	movlw	-5
 33827  01E9A0  006F FF8C  F033    	movff	plusw1,btemp+9
 33828  01E9A6  0EFC               	movlw	-4
 33829  01E9A8  006F FF8C  F034    	movff	plusw1,btemp+10
 33830  01E9AE  0EFD               	movlw	-3
 33831  01E9B0  006F FF8C  F035    	movff	plusw1,btemp+11
 33832  01E9B6  0E18               	movlw	24
 33833  01E9B8  D005               	goto	u9040
 33834  01E9BA                     u9045:
 33835  01E9BA  90D8               	bcf	status,0,c
 33836  01E9BC  3235               	rrcf	(btemp+11)^0,f,c
 33837  01E9BE  3234               	rrcf	(btemp+10)^0,f,c
 33838  01E9C0  3233               	rrcf	(btemp+9)^0,f,c
 33839  01E9C2  3232               	rrcf	(btemp+8)^0,f,c
 33840  01E9C4                     u9040:
 33841  01E9C4  2EE8               	decfsz	wreg,f,c
 33842  01E9C6  D7F9               	goto	u9045
 33843                           
 33844                           ;stkvar	_exp1 @ sp[(-2)+0]
 33845  01E9C8  0EFE               	movlw	-2
 33846  01E9CA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33847  01E9D0  0EFE               	movlw	-2
 33848  01E9D2  50E3               	movf	plusw1,w,c
 33849  01E9D4  A4D8               	btfss	status,2,c
 33850  01E9D6  D006               	goto	l10778
 33851  01E9D8                     u9050:
 33852  01E9D8  0E00               	movlw	0
 33853  01E9DA  6E2A               	movwf	btemp^0,c
 33854  01E9DC  6A2B               	clrf	(btemp+1)^0,c
 33855  01E9DE  6A2C               	clrf	(btemp+2)^0,c
 33856  01E9E0  6A2D               	clrf	(btemp+3)^0,c
 33857  01E9E2  D08B               	goto	l3025
 33858  01E9E4                     l10778:
 33859                           
 33860                           ;stkvar	_f1 @ sp[(-2)+-4]
 33861  01E9E4  0EFA               	movlw	-6
 33862  01E9E6  006F FF8C  F032    	movff	plusw1,btemp+8
 33863  01E9EC  0EFB               	movlw	-5
 33864  01E9EE  006F FF8C  F033    	movff	plusw1,btemp+9
 33865  01E9F4  0EFC               	movlw	-4
 33866  01E9F6  006F FF8C  F034    	movff	plusw1,btemp+10
 33867  01E9FC  0EFD               	movlw	-3
 33868  01E9FE  006F FF8C  F035    	movff	plusw1,btemp+11
 33869  01EA04  0E20               	movlw	32
 33870  01EA06  D005               	goto	u9060
 33871  01EA08                     u9065:
 33872  01EA08  90D8               	bcf	status,0,c
 33873  01EA0A  3235               	rrcf	(btemp+11)^0,f,c
 33874  01EA0C  3234               	rrcf	(btemp+10)^0,f,c
 33875  01EA0E  3233               	rrcf	(btemp+9)^0,f,c
 33876  01EA10  3232               	rrcf	(btemp+8)^0,f,c
 33877  01EA12                     u9060:
 33878  01EA12  2EE8               	decfsz	wreg,f,c
 33879  01EA14  D7F9               	goto	u9065
 33880                           
 33881                           ;stkvar	_sign1 @ sp[(-2)+1]
 33882  01EA16  0EFF               	movlw	-1
 33883  01EA18  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 33884                           
 33885                           ;stkvar	_f1 @ sp[(-2)+-4]
 33886  01EA1E  0EFC               	movlw	-4
 33887  01EA20  8EE3               	bsf	plusw1,7,c
 33888                           
 33889                           ;stkvar	_f1 @ sp[(-2)+-4]
 33890  01EA22  50E1               	movf	fsr1l,w,c
 33891  01EA24  0FFA               	addlw	-6
 33892  01EA26  6ED9               	movwf	fsr2l,c
 33893  01EA28  50E2               	movf	fsr1h,w,c
 33894  01EA2A  6EDA               	movwf	fsr2h,c
 33895  01EA2C  0EFF               	movlw	255
 33896  01EA2E  22DA               	addwfc	fsr2h,f,c
 33897  01EA30  0EFF               	movlw	255
 33898  01EA32  16DE               	andwf	postinc2,f,c
 33899  01EA34  0EFF               	movlw	255
 33900  01EA36  16DE               	andwf	postinc2,f,c
 33901  01EA38  0EFF               	movlw	255
 33902  01EA3A  16DE               	andwf	postinc2,f,c
 33903  01EA3C  0E00               	movlw	0
 33904  01EA3E  16DE               	andwf	postinc2,f,c
 33905                           
 33906                           ;stkvar	_exp1 @ sp[(-2)+0]
 33907  01EA40  0EFE               	movlw	-2
 33908  01EA42  006F FF8C  F02A    	movff	plusw1,btemp
 33909  01EA48  0E96               	movlw	150
 33910  01EA4A  5E2A               	subwf	btemp^0,f,c
 33911  01EA4C  0EFE               	movlw	-2
 33912  01EA4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 33913                           
 33914                           ;stkvar	_exp1 @ sp[(-2)+0]
 33915  01EA54  0EFE               	movlw	-2
 33916  01EA56  AEE3               	btfss	plusw1,7,c
 33917  01EA58  D014               	goto	l10796
 33918                           
 33919                           ;stkvar	_exp1 @ sp[(-2)+0]
 33920  01EA5A  0EFE               	movlw	-2
 33921  01EA5C  50E3               	movf	plusw1,w,c
 33922  01EA5E  0A80               	xorlw	128
 33923  01EA60  0F97               	addlw	151
 33924  01EA62  A0D8               	btfss	status,0,c
 33925  01EA64  D7B9               	goto	u9050
 33926  01EA66                     l10794:
 33927                           
 33928                           ;stkvar	_f1 @ sp[(-2)+-4]
 33929  01EA66  90D8               	bcf	status,0,c
 33930  01EA68  0EFD               	movlw	-3
 33931  01EA6A  32E3               	rrcf	plusw1,f,c
 33932  01EA6C  0EFC               	movlw	-4
 33933  01EA6E  32E3               	rrcf	plusw1,f,c
 33934  01EA70  0EFB               	movlw	-5
 33935  01EA72  32E3               	rrcf	plusw1,f,c
 33936  01EA74  0EFA               	movlw	-6
 33937  01EA76  32E3               	rrcf	plusw1,f,c
 33938                           
 33939                           ;stkvar	_exp1 @ sp[(-2)+0]
 33940  01EA78  0EFE               	movlw	-2
 33941  01EA7A  2AE3               	incf	plusw1,f,c
 33942  01EA7C  B4D8               	btfsc	status,2,c
 33943  01EA7E  D018               	goto	u9110
 33944  01EA80  D7F2               	goto	l10794
 33945  01EA82                     l10796:
 33946                           
 33947                           ;stkvar	_exp1 @ sp[(-2)+0]
 33948  01EA82  0EFE               	movlw	-2
 33949  01EA84  006F FF8C  F02A    	movff	plusw1,btemp
 33950  01EA8A  0E1F               	movlw	31
 33951  01EA8C  642A               	cpfsgt	btemp^0,c
 33952  01EA8E  D00C               	goto	l10804
 33953  01EA90  D7A3               	goto	u9050
 33954  01EA92                     l10802:
 33955                           
 33956                           ;stkvar	_f1 @ sp[(-2)+-4]
 33957  01EA92  90D8               	bcf	status,0,c
 33958  01EA94  0EFA               	movlw	-6
 33959  01EA96  36E3               	rlcf	plusw1,f,c
 33960  01EA98  0EFB               	movlw	-5
 33961  01EA9A  36E3               	rlcf	plusw1,f,c
 33962  01EA9C  0EFC               	movlw	-4
 33963  01EA9E  36E3               	rlcf	plusw1,f,c
 33964  01EAA0  0EFD               	movlw	-3
 33965  01EAA2  36E3               	rlcf	plusw1,f,c
 33966                           
 33967                           ;stkvar	_exp1 @ sp[(-2)+0]
 33968  01EAA4  0EFE               	movlw	-2
 33969  01EAA6  06E3               	decf	plusw1,f,c
 33970  01EAA8                     l10804:
 33971                           
 33972                           ;stkvar	_exp1 @ sp[(-2)+0]
 33973  01EAA8  0EFE               	movlw	-2
 33974  01EAAA  50E3               	movf	plusw1,w,c
 33975  01EAAC  A4D8               	btfss	status,2,c
 33976  01EAAE  D7F1               	goto	l10802
 33977  01EAB0                     u9110:
 33978                           
 33979                           ;stkvar	_sign1 @ sp[(-2)+1]
 33980  01EAB0  0EFF               	movlw	-1
 33981  01EAB2  50E3               	movf	plusw1,w,c
 33982  01EAB4  B4D8               	btfsc	status,2,c
 33983  01EAB6  D011               	goto	u9130
 33984                           
 33985                           ;stkvar	_f1 @ sp[(-2)+-4]
 33986                           ;stkvar	_f1 @ sp[(-2)+-4]
 33987  01EAB8  0EFA               	movlw	-6
 33988  01EABA  6CE3               	negf	plusw1,c
 33989  01EABC  0EFB               	movlw	-5
 33990  01EABE  1EE3               	comf	plusw1,f,c
 33991  01EAC0  0EFC               	movlw	-4
 33992  01EAC2  1EE3               	comf	plusw1,f,c
 33993  01EAC4  0EFD               	movlw	-3
 33994  01EAC6  1EE3               	comf	plusw1,f,c
 33995  01EAC8  E308               	bnc	u9130
 33996  01EACA  0EFB               	movlw	-5
 33997  01EACC  2AE3               	incf	plusw1,f,c
 33998  01EACE  E305               	bnc	u9130
 33999  01EAD0  0EFC               	movlw	-4
 34000  01EAD2  2AE3               	incf	plusw1,f,c
 34001  01EAD4  E302               	bnc	u9130
 34002  01EAD6  0EFD               	movlw	-3
 34003  01EAD8  2AE3               	incf	plusw1,f,c
 34004  01EADA                     u9130:
 34005                           
 34006                           ;stkvar	_f1 @ sp[(-2)+-4]
 34007  01EADA  0EFA               	movlw	-6
 34008  01EADC  006F FF8C  F02A    	movff	plusw1,btemp
 34009  01EAE2  0EFB               	movlw	-5
 34010  01EAE4  006F FF8C  F02B    	movff	plusw1,btemp+1
 34011  01EAEA  0EFC               	movlw	-4
 34012  01EAEC  006F FF8C  F02C    	movff	plusw1,btemp+2
 34013  01EAF2  0EFD               	movlw	-3
 34014  01EAF4  006F FF8C  F02D    	movff	plusw1,btemp+3
 34015  01EAFA                     l3025:
 34016                           
 34017                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34018  01EAFA  0EFA               	movlw	250
 34019  01EAFC  26E1               	addwf	fsr1l,f,c
 34020  01EAFE  0EFF               	movlw	255
 34021  01EB00  22E2               	addwfc	fsr1h,f,c
 34022  01EB02  0012               	return		;funcret
 34023  01EB04                     __end_of___fltol:
 34024                           	opt callstack 0
 34025                           
 34026 ;; *************** function ___flneg *****************
 34027 ;; Defined at:
 34028 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 34029 ;; Parameters:    Size  Location     Type
 34030 ;;  f1              4  [STACK] long 
 34031 ;; Auto vars:     Size  Location     Type
 34032 ;;		None
 34033 ;; Return value:  Size  Location     Type
 34034 ;;                  4  [STACK] long 
 34035 ;; Registers used:
 34036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 34037 ;; Tracked objects:
 34038 ;;		On entry : 0/0
 34039 ;;		On exit  : 0/0
 34040 ;;		Unchanged: 0/0
 34041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34046 ;;Total ram usage:        0 bytes
 34047 ;; Hardware stack levels used:    1
 34048 ;; Hardware stack levels required when called:   15
 34049 ;; This function calls:
 34050 ;;		Nothing
 34051 ;; This function is called by:
 34052 ;;		_calc_bsoc
 34053 ;;		_efgtoa
 34054 ;; This function uses a reentrant model
 34055 ;;
 34056                           
 34057                           	psect	text110
 34058  001F48                     __ptext110:
 34059                           	opt callstack 0
 34060  001F48                     ___flneg:
 34061                           	opt callstack 0
 34062                           
 34063                           ;stkvar	_f1 @ sp[(0)+-4]
 34064                           
 34065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34066                           ;incstack = 0
 34067 ;; hardware stack exceeded
 34068  001F48  0EFC               	movlw	-4
 34069  001F4A  50E3               	movf	plusw1,w,c
 34070  001F4C  E10A               	bnz	u9030
 34071  001F4E  0EFD               	movlw	-3
 34072  001F50  50E3               	movf	plusw1,w,c
 34073  001F52  E107               	bnz	u9030
 34074  001F54  0EFE               	movlw	-2
 34075  001F56  50E3               	movf	plusw1,w,c
 34076  001F58  E104               	bnz	u9030
 34077  001F5A  0EFF               	movlw	-1
 34078  001F5C  50E3               	movf	plusw1,w,c
 34079  001F5E  B4D8               	btfsc	status,2,c
 34080  001F60  D002               	goto	l10768
 34081  001F62                     u9030:
 34082                           
 34083                           ;stkvar	_f1 @ sp[(0)+-4]
 34084  001F62  0EFF               	movlw	-1
 34085  001F64  7EE3               	btg	plusw1,7,c
 34086  001F66                     l10768:
 34087                           
 34088                           ;stkvar	_f1 @ sp[(0)+-4]
 34089  001F66  0EFC               	movlw	-4
 34090  001F68  006F FF8C  F02A    	movff	plusw1,btemp
 34091  001F6E  0EFD               	movlw	-3
 34092  001F70  006F FF8C  F02B    	movff	plusw1,btemp+1
 34093  001F76  0EFE               	movlw	-2
 34094  001F78  006F FF8C  F02C    	movff	plusw1,btemp+2
 34095  001F7E  0EFF               	movlw	-1
 34096  001F80  006F FF8C  F02D    	movff	plusw1,btemp+3
 34097                           
 34098                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34099  001F86  52E5               	movf	postdec1,f,c
 34100  001F88  52E5               	movf	postdec1,f,c
 34101  001F8A  52E5               	movf	postdec1,f,c
 34102  001F8C  52E5               	movf	postdec1,f,c
 34103  001F8E  0012               	return		;funcret
 34104  001F90                     __end_of___flneg:
 34105                           	opt callstack 0
 34106                           
 34107 ;; *************** function ___fleq *****************
 34108 ;; Defined at:
 34109 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 34110 ;; Parameters:    Size  Location     Type
 34111 ;;  ff1             4  [STACK] long 
 34112 ;;  ff2             4  [STACK] long 
 34113 ;; Auto vars:     Size  Location     Type
 34114 ;;		None
 34115 ;; Return value:  Size  Location     Type
 34116 ;;		None               void
 34117 ;; Registers used:
 34118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 34119 ;; Tracked objects:
 34120 ;;		On entry : 0/0
 34121 ;;		On exit  : 0/0
 34122 ;;		Unchanged: 0/0
 34123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34128 ;;Total ram usage:        0 bytes
 34129 ;; Hardware stack levels used:    1
 34130 ;; Hardware stack levels required when called:   15
 34131 ;; This function calls:
 34132 ;;		Nothing
 34133 ;; This function is called by:
 34134 ;;		_efgtoa
 34135 ;; This function uses a reentrant model
 34136 ;;
 34137                           
 34138                           	psect	text111
 34139  0007D0                     __ptext111:
 34140                           	opt callstack 0
 34141  0007D0                     ___fleq:
 34142                           	opt callstack 0
 34143                           
 34144                           ;stkvar	_ff1 @ sp[(0)+-4]
 34145                           
 34146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34147                           ;incstack = 0
 34148 ;; hardware stack exceeded
 34149  0007D0  50E1               	movf	fsr1l,w,c
 34150  0007D2  0FFC               	addlw	-4
 34151  0007D4  6ED9               	movwf	fsr2l,c
 34152  0007D6  50E2               	movf	fsr1h,w,c
 34153  0007D8  6EDA               	movwf	fsr2h,c
 34154  0007DA  0EFF               	movlw	255
 34155  0007DC  22DA               	addwfc	fsr2h,f,c
 34156  0007DE  0E00               	movlw	0
 34157  0007E0  14DE               	andwf	postinc2,w,c
 34158  0007E2  6E32               	movwf	(btemp+8)^0,c
 34159  0007E4  0E00               	movlw	0
 34160  0007E6  14DE               	andwf	postinc2,w,c
 34161  0007E8  6E33               	movwf	(btemp+9)^0,c
 34162  0007EA  0E80               	movlw	128
 34163  0007EC  14DE               	andwf	postinc2,w,c
 34164  0007EE  6E34               	movwf	(btemp+10)^0,c
 34165  0007F0  0E7F               	movlw	127
 34166  0007F2  14DE               	andwf	postinc2,w,c
 34167  0007F4  6E35               	movwf	(btemp+11)^0,c
 34168  0007F6  5032               	movf	(btemp+8)^0,w,c
 34169  0007F8  1033               	iorwf	(btemp+9)^0,w,c
 34170  0007FA  1034               	iorwf	(btemp+10)^0,w,c
 34171  0007FC  1035               	iorwf	(btemp+11)^0,w,c
 34172  0007FE  A4D8               	btfss	status,2,c
 34173  000800  D008               	goto	l10726
 34174                           
 34175                           ;stkvar	_ff1 @ sp[(0)+-4]
 34176  000802  0EFC               	movlw	-4
 34177  000804  6AE3               	clrf	plusw1,c
 34178  000806  0EFD               	movlw	-3
 34179  000808  6AE3               	clrf	plusw1,c
 34180  00080A  0EFE               	movlw	-2
 34181  00080C  6AE3               	clrf	plusw1,c
 34182  00080E  0EFF               	movlw	-1
 34183  000810  6AE3               	clrf	plusw1,c
 34184  000812                     l10726:
 34185                           
 34186                           ;stkvar	_ff2 @ sp[(0)+-8]
 34187  000812  50E1               	movf	fsr1l,w,c
 34188  000814  0FF8               	addlw	-8
 34189  000816  6ED9               	movwf	fsr2l,c
 34190  000818  50E2               	movf	fsr1h,w,c
 34191  00081A  6EDA               	movwf	fsr2h,c
 34192  00081C  0EFF               	movlw	255
 34193  00081E  22DA               	addwfc	fsr2h,f,c
 34194  000820  0E00               	movlw	0
 34195  000822  14DE               	andwf	postinc2,w,c
 34196  000824  6E32               	movwf	(btemp+8)^0,c
 34197  000826  0E00               	movlw	0
 34198  000828  14DE               	andwf	postinc2,w,c
 34199  00082A  6E33               	movwf	(btemp+9)^0,c
 34200  00082C  0E80               	movlw	128
 34201  00082E  14DE               	andwf	postinc2,w,c
 34202  000830  6E34               	movwf	(btemp+10)^0,c
 34203  000832  0E7F               	movlw	127
 34204  000834  14DE               	andwf	postinc2,w,c
 34205  000836  6E35               	movwf	(btemp+11)^0,c
 34206  000838  5032               	movf	(btemp+8)^0,w,c
 34207  00083A  1033               	iorwf	(btemp+9)^0,w,c
 34208  00083C  1034               	iorwf	(btemp+10)^0,w,c
 34209  00083E  1035               	iorwf	(btemp+11)^0,w,c
 34210  000840  A4D8               	btfss	status,2,c
 34211  000842  D008               	goto	l10730
 34212                           
 34213                           ;stkvar	_ff2 @ sp[(0)+-8]
 34214  000844  0EF8               	movlw	-8
 34215  000846  6AE3               	clrf	plusw1,c
 34216  000848  0EF9               	movlw	-7
 34217  00084A  6AE3               	clrf	plusw1,c
 34218  00084C  0EFA               	movlw	-6
 34219  00084E  6AE3               	clrf	plusw1,c
 34220  000850  0EFB               	movlw	-5
 34221  000852  6AE3               	clrf	plusw1,c
 34222  000854                     l10730:
 34223                           
 34224                           ;stkvar	_ff2 @ sp[(0)+-8]
 34225                           ;stkvar	_ff1 @ sp[(0)+-4]
 34226  000854  50E1               	movf	fsr1l,w,c
 34227  000856  0FFC               	addlw	-4
 34228  000858  6ED9               	movwf	fsr2l,c
 34229  00085A  50E2               	movf	fsr1h,w,c
 34230  00085C  6EDA               	movwf	fsr2h,c
 34231  00085E  0EFF               	movlw	255
 34232  000860  22DA               	addwfc	fsr2h,f,c
 34233  000862  0EF8               	movlw	-8
 34234  000864  50E3               	movf	plusw1,w,c
 34235  000866  18DE               	xorwf	postinc2,w,c
 34236  000868  E10D               	bnz	u8970
 34237  00086A  0EF9               	movlw	-7
 34238  00086C  50E3               	movf	plusw1,w,c
 34239  00086E  18DE               	xorwf	postinc2,w,c
 34240  000870  E109               	bnz	u8970
 34241  000872  0EFA               	movlw	-6
 34242  000874  50E3               	movf	plusw1,w,c
 34243  000876  18DE               	xorwf	postinc2,w,c
 34244  000878  E105               	bnz	u8970
 34245  00087A  0EFB               	movlw	-5
 34246  00087C  50E3               	movf	plusw1,w,c
 34247  00087E  18DE               	xorwf	postinc2,w,c
 34248  000880  B4D8               	btfsc	status,2,c
 34249  000882  D002               	goto	l10734
 34250  000884                     u8970:
 34251  000884  902A               	bcf	btemp& (0+255),0,c
 34252  000886  D001               	goto	l2987
 34253  000888                     l10734:
 34254  000888  802A               	bsf	btemp& (0+255),0,c
 34255  00088A                     l2987:
 34256                           
 34257                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 34258  00088A  0EF8               	movlw	248
 34259  00088C  26E1               	addwf	fsr1l,f,c
 34260  00088E  0EFF               	movlw	255
 34261  000890  22E2               	addwfc	fsr1h,f,c
 34262  000892  0012               	return		;funcret
 34263  000894                     __end_of___fleq:
 34264                           	opt callstack 0
 34265                           
 34266 ;; *************** function ___awmod *****************
 34267 ;; Defined at:
 34268 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 34269 ;; Parameters:    Size  Location     Type
 34270 ;;  dividend        2  [STACK] int 
 34271 ;;  divisor         2  [STACK] int 
 34272 ;; Auto vars:     Size  Location     Type
 34273 ;;  sign            1  [STACK] unsigned char 
 34274 ;;  counter         1  [STACK] unsigned char 
 34275 ;; Return value:  Size  Location     Type
 34276 ;;                  2  [STACK] int 
 34277 ;; Registers used:
 34278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34279 ;; Tracked objects:
 34280 ;;		On entry : 0/3
 34281 ;;		On exit  : 0/0
 34282 ;;		Unchanged: 0/0
 34283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34288 ;;Total ram usage:        0 bytes
 34289 ;; Hardware stack levels used:    1
 34290 ;; Hardware stack levels required when called:   15
 34291 ;; This function calls:
 34292 ;;		Nothing
 34293 ;; This function is called by:
 34294 ;;		_efgtoa
 34295 ;;		_asctime
 34296 ;; This function uses a reentrant model
 34297 ;;
 34298                           
 34299                           	psect	text112
 34300  01FB9E                     __ptext112:
 34301                           	opt callstack 0
 34302  01FB9E                     ___awmod:
 34303                           	opt callstack 0
 34304                           
 34305                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34306  01FB9E  52E6               	movf	postinc1,f,c
 34307  01FBA0  52E6               	movf	postinc1,f,c
 34308                           
 34309                           ;stkvar	_sign @ sp[(-2)+0]
 34310                           
 34311                           ;incstack = 0
 34312 ;; hardware stack exceeded
 34313  01FBA2  0EFE               	movlw	-2
 34314  01FBA4  6AE3               	clrf	plusw1,c
 34315                           
 34316                           ;stkvar	_dividend @ sp[(-2)+-2]
 34317  01FBA6  0EFD               	movlw	-3
 34318  01FBA8  AEE3               	btfss	plusw1,7,c
 34319  01FBAA  D009               	goto	l15540
 34320                           
 34321                           ;stkvar	_dividend @ sp[(-2)+-2]
 34322                           ;stkvar	_dividend @ sp[(-2)+-2]
 34323  01FBAC  0EFC               	movlw	-4
 34324  01FBAE  6CE3               	negf	plusw1,c
 34325  01FBB0  0EFD               	movlw	-3
 34326  01FBB2  1EE3               	comf	plusw1,f,c
 34327  01FBB4  B0D8               	btfsc	status,0,c
 34328  01FBB6  2AE3               	incf	plusw1,f,c
 34329                           
 34330                           ;stkvar	_sign @ sp[(-2)+0]
 34331  01FBB8  0EFE               	movlw	-2
 34332  01FBBA  6AE3               	clrf	plusw1,c
 34333  01FBBC  2AE3               	incf	plusw1,f,c
 34334  01FBBE                     l15540:
 34335                           
 34336                           ;stkvar	_divisor @ sp[(-2)+-4]
 34337  01FBBE  0EFB               	movlw	-5
 34338  01FBC0  AEE3               	btfss	plusw1,7,c
 34339  01FBC2  D006               	goto	l15544
 34340                           
 34341                           ;stkvar	_divisor @ sp[(-2)+-4]
 34342                           ;stkvar	_divisor @ sp[(-2)+-4]
 34343  01FBC4  0EFA               	movlw	-6
 34344  01FBC6  6CE3               	negf	plusw1,c
 34345  01FBC8  0EFB               	movlw	-5
 34346  01FBCA  1EE3               	comf	plusw1,f,c
 34347  01FBCC  B0D8               	btfsc	status,0,c
 34348  01FBCE  2AE3               	incf	plusw1,f,c
 34349  01FBD0                     l15544:
 34350                           
 34351                           ;stkvar	_divisor @ sp[(-2)+-4]
 34352  01FBD0  0EFA               	movlw	-6
 34353  01FBD2  006F FF8C  F02A    	movff	plusw1,btemp
 34354  01FBD8  0EFB               	movlw	-5
 34355  01FBDA  50E3               	movf	plusw1,w,c
 34356  01FBDC  102A               	iorwf	btemp^0,w,c
 34357  01FBDE  B4D8               	btfsc	status,2,c
 34358  01FBE0  D053               	goto	u14540
 34359                           
 34360                           ;stkvar	_counter @ sp[(-2)+1]
 34361  01FBE2  0EFF               	movlw	-1
 34362  01FBE4  6AE3               	clrf	plusw1,c
 34363  01FBE6  D012               	goto	L37
 34364  01FBE8                     l15548:
 34365                           
 34366                           ;stkvar	_divisor @ sp[(-2)+-4]
 34367  01FBE8  0EFA               	movlw	-6
 34368  01FBEA  50E3               	movf	plusw1,w,c
 34369  01FBEC  90D8               	bcf	status,0,c
 34370  01FBEE  34E8               	rlcf	wreg,w,c
 34371  01FBF0  6E2A               	movwf	btemp^0,c
 34372  01FBF2  0EFA               	movlw	-6
 34373  01FBF4  0060  F0AB  FFE3   	movff	btemp,plusw1
 34374  01FBFA  0EFB               	movlw	-5
 34375  01FBFC  50E3               	movf	plusw1,w,c
 34376  01FBFE  34E8               	rlcf	wreg,w,c
 34377  01FC00  6E2A               	movwf	btemp^0,c
 34378  01FC02  0EFB               	movlw	-5
 34379  01FC04  0060  F0AB  FFE3   	movff	btemp,plusw1
 34380                           
 34381                           ;stkvar	_counter @ sp[(-2)+1]
 34382  01FC0A  0EFF               	movlw	-1
 34383  01FC0C                     L37:
 34384  01FC0C  2AE3               	incf	plusw1,f,c
 34385                           
 34386                           ;stkvar	_divisor @ sp[(-2)+-4]
 34387  01FC0E  0EFB               	movlw	-5
 34388  01FC10  AEE3               	btfss	plusw1,7,c
 34389  01FC12  D7EA               	goto	l15548
 34390  01FC14                     u14520:
 34391                           
 34392                           ;stkvar	_divisor @ sp[(-2)+-4]
 34393  01FC14  0EFA               	movlw	-6
 34394  01FC16  006F FF8C  F034    	movff	plusw1,btemp+10
 34395  01FC1C  0EFB               	movlw	-5
 34396  01FC1E  006F FF8C  F035    	movff	plusw1,btemp+11
 34397                           
 34398                           ;stkvar	_dividend @ sp[(-2)+-2]
 34399  01FC24  0EFC               	movlw	-4
 34400  01FC26  006F FF8C  F032    	movff	plusw1,btemp+8
 34401  01FC2C  0EFD               	movlw	-3
 34402  01FC2E  006F FF8C  F033    	movff	plusw1,btemp+9
 34403  01FC34  5034               	movf	(btemp+10)^0,w,c
 34404  01FC36  5C32               	subwf	(btemp+8)^0,w,c
 34405  01FC38  5035               	movf	(btemp+11)^0,w,c
 34406  01FC3A  5833               	subwfb	(btemp+9)^0,w,c
 34407  01FC3C  A0D8               	btfss	status,0,c
 34408  01FC3E  D014               	goto	l15558
 34409                           
 34410                           ;stkvar	_divisor @ sp[(-2)+-4]
 34411                           ;stkvar	_dividend @ sp[(-2)+-2]
 34412  01FC40  0EFC               	movlw	-4
 34413  01FC42  50E3               	movf	plusw1,w,c
 34414  01FC44  6E2A               	movwf	btemp^0,c
 34415  01FC46  0EFA               	movlw	-6
 34416  01FC48  50E3               	movf	plusw1,w,c
 34417  01FC4A  5E2A               	subwf	btemp^0,f,c
 34418  01FC4C  0EFC               	movlw	-4
 34419  01FC4E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34420  01FC54  0EFD               	movlw	-3
 34421  01FC56  50E3               	movf	plusw1,w,c
 34422  01FC58  6E2A               	movwf	btemp^0,c
 34423  01FC5A  0EFB               	movlw	-5
 34424  01FC5C  50E3               	movf	plusw1,w,c
 34425  01FC5E  5A2A               	subwfb	btemp^0,f,c
 34426  01FC60  0EFD               	movlw	-3
 34427  01FC62  0060  F0AB  FFE3   	movff	btemp,plusw1
 34428  01FC68                     l15558:
 34429                           
 34430                           ;stkvar	_divisor @ sp[(-2)+-4]
 34431  01FC68  90D8               	bcf	status,0,c
 34432  01FC6A  0EFB               	movlw	-5
 34433  01FC6C  32E3               	rrcf	plusw1,f,c
 34434  01FC6E  0EFA               	movlw	-6
 34435  01FC70  32E3               	rrcf	plusw1,f,c
 34436                           
 34437                           ;stkvar	_counter @ sp[(-2)+1]
 34438  01FC72  0EFF               	movlw	-1
 34439  01FC74  50E3               	movf	plusw1,w,c
 34440  01FC76  6E2A               	movwf	btemp^0,c
 34441  01FC78  0E01               	movlw	1
 34442  01FC7A  5E2A               	subwf	btemp^0,f,c
 34443  01FC7C  0EFF               	movlw	-1
 34444  01FC7E  0060  F0AB  FFE3   	movff	btemp,plusw1
 34445  01FC84  A4D8               	btfss	status,2,c
 34446  01FC86  D7C6               	goto	u14520
 34447  01FC88                     u14540:
 34448                           
 34449                           ;stkvar	_sign @ sp[(-2)+0]
 34450  01FC88  0EFE               	movlw	-2
 34451  01FC8A  50E3               	movf	plusw1,w,c
 34452  01FC8C  B4D8               	btfsc	status,2,c
 34453  01FC8E  D006               	goto	l15566
 34454                           
 34455                           ;stkvar	_dividend @ sp[(-2)+-2]
 34456                           ;stkvar	_dividend @ sp[(-2)+-2]
 34457  01FC90  0EFC               	movlw	-4
 34458  01FC92  6CE3               	negf	plusw1,c
 34459  01FC94  0EFD               	movlw	-3
 34460  01FC96  1EE3               	comf	plusw1,f,c
 34461  01FC98  B0D8               	btfsc	status,0,c
 34462  01FC9A  2AE3               	incf	plusw1,f,c
 34463  01FC9C                     l15566:
 34464                           
 34465                           ;stkvar	_dividend @ sp[(-2)+-2]
 34466  01FC9C  0EFC               	movlw	-4
 34467  01FC9E  006F FF8C  F02A    	movff	plusw1,btemp
 34468  01FCA4  0EFD               	movlw	-3
 34469  01FCA6  006F FF8C  F02B    	movff	plusw1,btemp+1
 34470                           
 34471                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34472  01FCAC  0EFA               	movlw	250
 34473  01FCAE  26E1               	addwf	fsr1l,f,c
 34474  01FCB0  0EFF               	movlw	255
 34475  01FCB2  22E2               	addwfc	fsr1h,f,c
 34476  01FCB4  0012               	return		;funcret
 34477  01FCB6                     __end_of___awmod:
 34478                           	opt callstack 0
 34479                           
 34480 ;; *************** function ___awdiv *****************
 34481 ;; Defined at:
 34482 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 34483 ;; Parameters:    Size  Location     Type
 34484 ;;  dividend        2  [STACK] int 
 34485 ;;  divisor         2  [STACK] int 
 34486 ;; Auto vars:     Size  Location     Type
 34487 ;;  quotient        2  [STACK] int 
 34488 ;;  sign            1  [STACK] unsigned char 
 34489 ;;  counter         1  [STACK] unsigned char 
 34490 ;; Return value:  Size  Location     Type
 34491 ;;                  2  [STACK] int 
 34492 ;; Registers used:
 34493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 34494 ;; Tracked objects:
 34495 ;;		On entry : 0/3
 34496 ;;		On exit  : 0/0
 34497 ;;		Unchanged: 0/0
 34498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34503 ;;Total ram usage:        0 bytes
 34504 ;; Hardware stack levels used:    1
 34505 ;; Hardware stack levels required when called:   15
 34506 ;; This function calls:
 34507 ;;		Nothing
 34508 ;; This function is called by:
 34509 ;;		_efgtoa
 34510 ;;		_put2d
 34511 ;;		_asctime
 34512 ;;		_scan_trans
 34513 ;; This function uses a reentrant model
 34514 ;;
 34515                           
 34516                           	psect	text113
 34517  01F340                     __ptext113:
 34518                           	opt callstack 0
 34519  01F340                     ___awdiv:
 34520                           	opt callstack 0
 34521                           
 34522                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34523  01F340  52E6               	movf	postinc1,f,c
 34524  01F342  52E6               	movf	postinc1,f,c
 34525  01F344  52E6               	movf	postinc1,f,c
 34526  01F346  52E6               	movf	postinc1,f,c
 34527                           
 34528                           ;stkvar	_sign @ sp[(-4)+2]
 34529                           
 34530                           ;incstack = 0
 34531 ;; hardware stack exceeded
 34532  01F348  0EFE               	movlw	-2
 34533  01F34A  6AE3               	clrf	plusw1,c
 34534                           
 34535                           ;stkvar	_divisor @ sp[(-4)+-4]
 34536  01F34C  0EF9               	movlw	-7
 34537  01F34E  AEE3               	btfss	plusw1,7,c
 34538  01F350  D009               	goto	l15494
 34539                           
 34540                           ;stkvar	_divisor @ sp[(-4)+-4]
 34541                           ;stkvar	_divisor @ sp[(-4)+-4]
 34542  01F352  0EF8               	movlw	-8
 34543  01F354  6CE3               	negf	plusw1,c
 34544  01F356  0EF9               	movlw	-7
 34545  01F358  1EE3               	comf	plusw1,f,c
 34546  01F35A  B0D8               	btfsc	status,0,c
 34547  01F35C  2AE3               	incf	plusw1,f,c
 34548                           
 34549                           ;stkvar	_sign @ sp[(-4)+2]
 34550  01F35E  0EFE               	movlw	-2
 34551  01F360  6AE3               	clrf	plusw1,c
 34552  01F362  2AE3               	incf	plusw1,f,c
 34553  01F364                     l15494:
 34554                           
 34555                           ;stkvar	_dividend @ sp[(-4)+-2]
 34556  01F364  0EFB               	movlw	-5
 34557  01F366  AEE3               	btfss	plusw1,7,c
 34558  01F368  D008               	goto	l15500
 34559                           
 34560                           ;stkvar	_dividend @ sp[(-4)+-2]
 34561                           ;stkvar	_dividend @ sp[(-4)+-2]
 34562  01F36A  0EFA               	movlw	-6
 34563  01F36C  6CE3               	negf	plusw1,c
 34564  01F36E  0EFB               	movlw	-5
 34565  01F370  1EE3               	comf	plusw1,f,c
 34566  01F372  B0D8               	btfsc	status,0,c
 34567  01F374  2AE3               	incf	plusw1,f,c
 34568                           
 34569                           ;stkvar	_sign @ sp[(-4)+2]
 34570  01F376  0EFE               	movlw	-2
 34571  01F378  70E3               	btg	plusw1,0,c
 34572  01F37A                     l15500:
 34573                           
 34574                           ;stkvar	_quotient @ sp[(-4)+0]
 34575  01F37A  0EFC               	movlw	-4
 34576  01F37C  6AE3               	clrf	plusw1,c
 34577  01F37E  0EFD               	movlw	-3
 34578  01F380  6AE3               	clrf	plusw1,c
 34579                           
 34580                           ;stkvar	_divisor @ sp[(-4)+-4]
 34581  01F382  0EF8               	movlw	-8
 34582  01F384  006F FF8C  F02A    	movff	plusw1,btemp
 34583  01F38A  0EF9               	movlw	-7
 34584  01F38C  50E3               	movf	plusw1,w,c
 34585  01F38E  102A               	iorwf	btemp^0,w,c
 34586  01F390  B4D8               	btfsc	status,2,c
 34587  01F392  D066               	goto	u14470
 34588                           
 34589                           ;stkvar	_counter @ sp[(-4)+3]
 34590  01F394  0EFF               	movlw	-1
 34591  01F396  6AE3               	clrf	plusw1,c
 34592  01F398  D012               	goto	L38
 34593  01F39A                     l15506:
 34594                           
 34595                           ;stkvar	_divisor @ sp[(-4)+-4]
 34596  01F39A  0EF8               	movlw	-8
 34597  01F39C  50E3               	movf	plusw1,w,c
 34598  01F39E  90D8               	bcf	status,0,c
 34599  01F3A0  34E8               	rlcf	wreg,w,c
 34600  01F3A2  6E2A               	movwf	btemp^0,c
 34601  01F3A4  0EF8               	movlw	-8
 34602  01F3A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34603  01F3AC  0EF9               	movlw	-7
 34604  01F3AE  50E3               	movf	plusw1,w,c
 34605  01F3B0  34E8               	rlcf	wreg,w,c
 34606  01F3B2  6E2A               	movwf	btemp^0,c
 34607  01F3B4  0EF9               	movlw	-7
 34608  01F3B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 34609                           
 34610                           ;stkvar	_counter @ sp[(-4)+3]
 34611  01F3BC  0EFF               	movlw	-1
 34612  01F3BE                     L38:
 34613  01F3BE  2AE3               	incf	plusw1,f,c
 34614                           
 34615                           ;stkvar	_divisor @ sp[(-4)+-4]
 34616  01F3C0  0EF9               	movlw	-7
 34617  01F3C2  AEE3               	btfss	plusw1,7,c
 34618  01F3C4  D7EA               	goto	l15506
 34619  01F3C6                     u14450:
 34620                           
 34621                           ;stkvar	_quotient @ sp[(-4)+0]
 34622  01F3C6  0EFC               	movlw	-4
 34623  01F3C8  50E3               	movf	plusw1,w,c
 34624  01F3CA  90D8               	bcf	status,0,c
 34625  01F3CC  34E8               	rlcf	wreg,w,c
 34626  01F3CE  6E2A               	movwf	btemp^0,c
 34627  01F3D0  0EFC               	movlw	-4
 34628  01F3D2  0060  F0AB  FFE3   	movff	btemp,plusw1
 34629  01F3D8  0EFD               	movlw	-3
 34630  01F3DA  50E3               	movf	plusw1,w,c
 34631  01F3DC  34E8               	rlcf	wreg,w,c
 34632  01F3DE  6E2A               	movwf	btemp^0,c
 34633  01F3E0  0EFD               	movlw	-3
 34634  01F3E2  0060  F0AB  FFE3   	movff	btemp,plusw1
 34635                           
 34636                           ;stkvar	_divisor @ sp[(-4)+-4]
 34637  01F3E8  0EF8               	movlw	-8
 34638  01F3EA  006F FF8C  F034    	movff	plusw1,btemp+10
 34639  01F3F0  0EF9               	movlw	-7
 34640  01F3F2  006F FF8C  F035    	movff	plusw1,btemp+11
 34641                           
 34642                           ;stkvar	_dividend @ sp[(-4)+-2]
 34643  01F3F8  0EFA               	movlw	-6
 34644  01F3FA  006F FF8C  F032    	movff	plusw1,btemp+8
 34645  01F400  0EFB               	movlw	-5
 34646  01F402  006F FF8C  F033    	movff	plusw1,btemp+9
 34647  01F408  5034               	movf	(btemp+10)^0,w,c
 34648  01F40A  5C32               	subwf	(btemp+8)^0,w,c
 34649  01F40C  5035               	movf	(btemp+11)^0,w,c
 34650  01F40E  5833               	subwfb	(btemp+9)^0,w,c
 34651  01F410  A0D8               	btfss	status,0,c
 34652  01F412  D016               	goto	l15520
 34653                           
 34654                           ;stkvar	_divisor @ sp[(-4)+-4]
 34655                           ;stkvar	_dividend @ sp[(-4)+-2]
 34656  01F414  0EFA               	movlw	-6
 34657  01F416  50E3               	movf	plusw1,w,c
 34658  01F418  6E2A               	movwf	btemp^0,c
 34659  01F41A  0EF8               	movlw	-8
 34660  01F41C  50E3               	movf	plusw1,w,c
 34661  01F41E  5E2A               	subwf	btemp^0,f,c
 34662  01F420  0EFA               	movlw	-6
 34663  01F422  0060  F0AB  FFE3   	movff	btemp,plusw1
 34664  01F428  0EFB               	movlw	-5
 34665  01F42A  50E3               	movf	plusw1,w,c
 34666  01F42C  6E2A               	movwf	btemp^0,c
 34667  01F42E  0EF9               	movlw	-7
 34668  01F430  50E3               	movf	plusw1,w,c
 34669  01F432  5A2A               	subwfb	btemp^0,f,c
 34670  01F434  0EFB               	movlw	-5
 34671  01F436  0060  F0AB  FFE3   	movff	btemp,plusw1
 34672                           
 34673                           ;stkvar	_quotient @ sp[(-4)+0]
 34674  01F43C  0EFC               	movlw	-4
 34675  01F43E  80E3               	bsf	plusw1,0,c
 34676  01F440                     l15520:
 34677                           
 34678                           ;stkvar	_divisor @ sp[(-4)+-4]
 34679  01F440  90D8               	bcf	status,0,c
 34680  01F442  0EF9               	movlw	-7
 34681  01F444  32E3               	rrcf	plusw1,f,c
 34682  01F446  0EF8               	movlw	-8
 34683  01F448  32E3               	rrcf	plusw1,f,c
 34684                           
 34685                           ;stkvar	_counter @ sp[(-4)+3]
 34686  01F44A  0EFF               	movlw	-1
 34687  01F44C  50E3               	movf	plusw1,w,c
 34688  01F44E  6E2A               	movwf	btemp^0,c
 34689  01F450  0E01               	movlw	1
 34690  01F452  5E2A               	subwf	btemp^0,f,c
 34691  01F454  0EFF               	movlw	-1
 34692  01F456  0060  F0AB  FFE3   	movff	btemp,plusw1
 34693  01F45C  A4D8               	btfss	status,2,c
 34694  01F45E  D7B3               	goto	u14450
 34695  01F460                     u14470:
 34696                           
 34697                           ;stkvar	_sign @ sp[(-4)+2]
 34698  01F460  0EFE               	movlw	-2
 34699  01F462  50E3               	movf	plusw1,w,c
 34700  01F464  B4D8               	btfsc	status,2,c
 34701  01F466  D006               	goto	l15528
 34702                           
 34703                           ;stkvar	_quotient @ sp[(-4)+0]
 34704                           ;stkvar	_quotient @ sp[(-4)+0]
 34705  01F468  0EFC               	movlw	-4
 34706  01F46A  6CE3               	negf	plusw1,c
 34707  01F46C  0EFD               	movlw	-3
 34708  01F46E  1EE3               	comf	plusw1,f,c
 34709  01F470  B0D8               	btfsc	status,0,c
 34710  01F472  2AE3               	incf	plusw1,f,c
 34711  01F474                     l15528:
 34712                           
 34713                           ;stkvar	_quotient @ sp[(-4)+0]
 34714  01F474  0EFC               	movlw	-4
 34715  01F476  006F FF8C  F02A    	movff	plusw1,btemp
 34716  01F47C  0EFD               	movlw	-3
 34717  01F47E  006F FF8C  F02B    	movff	plusw1,btemp+1
 34718                           
 34719                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 34720  01F484  0EF8               	movlw	248
 34721  01F486  26E1               	addwf	fsr1l,f,c
 34722  01F488  0EFF               	movlw	255
 34723  01F48A  22E2               	addwfc	fsr1h,f,c
 34724  01F48C  0012               	return		;funcret
 34725  01F48E                     __end_of___awdiv:
 34726                           	opt callstack 0
 34727                           
 34728 ;; *************** function _dtoa *****************
 34729 ;; Defined at:
 34730 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34731 ;; Parameters:    Size  Location     Type
 34732 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34733 ;;		 -> f(6), NULL(0), 
 34734 ;;  d               8  [STACK] long long 
 34735 ;; Auto vars:     Size  Location     Type
 34736 ;;  n               8  [STACK] long long 
 34737 ;;  i               2  [STACK] int 
 34738 ;;  s               2  [STACK] int 
 34739 ;;  w               2  [STACK] int 
 34740 ;;  p               2  [STACK] int 
 34741 ;; Return value:  Size  Location     Type
 34742 ;;                  2  [STACK] int 
 34743 ;; Registers used:
 34744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 34745 ;; Tracked objects:
 34746 ;;		On entry : 0/0
 34747 ;;		On exit  : 0/0
 34748 ;;		Unchanged: 0/0
 34749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34754 ;;Total ram usage:        0 bytes
 34755 ;; Hardware stack levels used:    1
 34756 ;; Hardware stack levels required when called:   20
 34757 ;; This function calls:
 34758 ;;		___aodiv
 34759 ;;		___aomod
 34760 ;;		_abs
 34761 ;;		_pad
 34762 ;; This function is called by:
 34763 ;;		_vfpfcnvrt
 34764 ;; This function uses a reentrant model
 34765 ;;
 34766                           
 34767                           	psect	text114
 34768  019214                     __ptext114:
 34769                           	opt callstack 0
 34770  019214                     _dtoa:
 34771                           	opt callstack 0
 34772                           
 34773                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 34774  019214  0E12               	movlw	18
 34775  019216  26E1               	addwf	fsr1l,f,c
 34776  019218  0E00               	movlw	0
 34777  01921A  22E2               	addwfc	fsr1h,f,c
 34778                           
 34779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 34780                           ;stkvar	_d @ sp[(-18)+-10]
 34781                           
 34782                           ;incstack = 0
 34783 ;; hardware stack exceeded
 34784  01921C  0EE4               	movlw	228
 34785  01921E  24E1               	addwf	fsr1l,w,c
 34786  019220  6ED9               	movwf	fsr2l,c
 34787  019222  0EFF               	movlw	255
 34788  019224  20E2               	addwfc	fsr1h,w,c
 34789  019226  6EDA               	movwf	fsr2h,c
 34790                           
 34791                           ;stkvar	_n @ sp[(-18)+2]
 34792  019228  0E08               	movlw	8
 34793  01922A  6E2A               	movwf	btemp^0,c
 34794  01922C  0EF0               	movlw	-16
 34795  01922E                     us1458999:
 34796  01922E  006F FF7B FFE3     	movff	postinc2,plusw1
 34797  019234  28E8               	incf	wreg,w,c
 34798  019236  2E2A               	decfsz	btemp^0,f,c
 34799  019238  D7FA               	bra	us1458999
 34800                           
 34801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 34802                           ;stkvar	_n @ sp[(-18)+2]
 34803  01923A  0EF7               	movlw	-9
 34804  01923C  AEE3               	btfss	plusw1,7,c
 34805  01923E  D002               	goto	u14590
 34806  019240  0E01               	movlw	1
 34807  019242  D001               	goto	u14600
 34808  019244                     u14590:
 34809  019244  0E00               	movlw	0
 34810  019246                     u14600:
 34811  019246  6E34               	movwf	(btemp+10)^0,c
 34812  019248  6A35               	clrf	(btemp+11)^0,c
 34813                           
 34814                           ;stkvar	_s @ sp[(-18)+12]
 34815  01924A  0EFA               	movlw	-6
 34816  01924C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34817  019252  0EFB               	movlw	-5
 34818  019254  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34819                           
 34820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 34821                           ;stkvar	_s @ sp[(-18)+12]
 34822  01925A  0EFA               	movlw	-6
 34823  01925C  006F FF8C  F02A    	movff	plusw1,btemp
 34824  019262  0EFB               	movlw	-5
 34825  019264  50E3               	movf	plusw1,w,c
 34826  019266  102A               	iorwf	btemp^0,w,c
 34827  019268  B4D8               	btfsc	status,2,c
 34828  01926A  D025               	goto	u14620
 34829                           
 34830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 34831                           ;stkvar	_n @ sp[(-18)+2]
 34832                           ;stkvar	_n @ sp[(-18)+2]
 34833  01926C  0EF0               	movlw	-16
 34834  01926E  6CE3               	negf	plusw1,c
 34835  019270  0EF1               	movlw	-15
 34836  019272  1EE3               	comf	plusw1,f,c
 34837  019274  0EF2               	movlw	-14
 34838  019276  1EE3               	comf	plusw1,f,c
 34839  019278  0EF3               	movlw	-13
 34840  01927A  1EE3               	comf	plusw1,f,c
 34841  01927C  0EF4               	movlw	-12
 34842  01927E  1EE3               	comf	plusw1,f,c
 34843  019280  0EF5               	movlw	-11
 34844  019282  1EE3               	comf	plusw1,f,c
 34845  019284  0EF6               	movlw	-10
 34846  019286  1EE3               	comf	plusw1,f,c
 34847  019288  0EF7               	movlw	-9
 34848  01928A  1EE3               	comf	plusw1,f,c
 34849  01928C  E314               	bnc	u14620
 34850  01928E  0EF1               	movlw	-15
 34851  019290  2AE3               	incf	plusw1,f,c
 34852  019292  E311               	bnc	u14620
 34853  019294  0EF2               	movlw	-14
 34854  019296  2AE3               	incf	plusw1,f,c
 34855  019298  E30E               	bnc	u14620
 34856  01929A  0EF3               	movlw	-13
 34857  01929C  2AE3               	incf	plusw1,f,c
 34858  01929E  E30B               	bnc	u14620
 34859  0192A0  0EF4               	movlw	-12
 34860  0192A2  2AE3               	incf	plusw1,f,c
 34861  0192A4  E308               	bnc	u14620
 34862  0192A6  0EF5               	movlw	-11
 34863  0192A8  2AE3               	incf	plusw1,f,c
 34864  0192AA  E305               	bnc	u14620
 34865  0192AC  0EF6               	movlw	-10
 34866  0192AE  2AE3               	incf	plusw1,f,c
 34867  0192B0  E302               	bnc	u14620
 34868  0192B2  0EF7               	movlw	-9
 34869  0192B4  2AE3               	incf	plusw1,f,c
 34870  0192B6                     u14620:
 34871                           
 34872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 34873  0192B6  AE4D               	btfss	(_prec+1)^0,7,c
 34874                           
 34875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 34876  0192B8  924E               	bcf	_flags^0,1,c
 34877                           
 34878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 34879  0192BA  BE4D               	btfsc	(_prec+1)^0,7,c
 34880  0192BC  D005               	goto	u14640
 34881  0192BE  504D               	movf	(_prec+1)^0,w,c
 34882  0192C0  E110               	bnz	l15606
 34883  0192C2  044C               	decf	_prec^0,w,c
 34884  0192C4  B0D8               	btfsc	status,0,c
 34885  0192C6  D00D               	goto	l15606
 34886  0192C8                     u14640:
 34887  0192C8  0E01               	movlw	1
 34888  0192CA  6E34               	movwf	(btemp+10)^0,c
 34889  0192CC  0E00               	movlw	0
 34890  0192CE  6E35               	movwf	(btemp+11)^0,c
 34891                           
 34892                           ;stkvar	_p @ sp[(-18)+16]
 34893  0192D0  0EFE               	movlw	-2
 34894  0192D2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34895  0192D8  0EFF               	movlw	-1
 34896  0192DA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34897  0192E0  D008               	goto	l2491
 34898  0192E2                     l15606:
 34899                           
 34900                           ;stkvar	_p @ sp[(-18)+16]
 34901  0192E2  0EFE               	movlw	-2
 34902  0192E4  0060  F133  FFE3   	movff	_prec,plusw1
 34903  0192EA  0EFF               	movlw	-1
 34904  0192EC  0060  F137  FFE3   	movff	_prec+1,plusw1
 34905  0192F2                     l2491:
 34906                           
 34907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 34908                           ;stkvar	_w @ sp[(-18)+14]
 34909  0192F2  0EFC               	movlw	-4
 34910  0192F4  0060  F12B  FFE3   	movff	_width,plusw1
 34911  0192FA  0EFD               	movlw	-3
 34912  0192FC  0060  F12F  FFE3   	movff	_width+1,plusw1
 34913                           
 34914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 34915                           ;stkvar	_s @ sp[(-18)+12]
 34916  019302  0EFA               	movlw	-6
 34917  019304  006F FF8C  F02A    	movff	plusw1,btemp
 34918  01930A  0EFB               	movlw	-5
 34919  01930C  50E3               	movf	plusw1,w,c
 34920  01930E  102A               	iorwf	btemp^0,w,c
 34921  019310  A4D8               	btfss	status,2,c
 34922  019312  D002               	goto	u14660
 34923  019314  A44E               	btfss	_flags^0,2,c
 34924  019316  D00A               	goto	l15614
 34925  019318                     u14660:
 34926                           
 34927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 34928                           ;stkvar	_w @ sp[(-18)+14]
 34929  019318  50E1               	movf	fsr1l,w,c
 34930  01931A  0FFC               	addlw	-4
 34931  01931C  6ED9               	movwf	fsr2l,c
 34932  01931E  50E2               	movf	fsr1h,w,c
 34933  019320  6EDA               	movwf	fsr2h,c
 34934  019322  0EFF               	movlw	255
 34935  019324  22DA               	addwfc	fsr2h,f,c
 34936  019326  06DE               	decf	postinc2,f,c
 34937  019328  0E00               	movlw	0
 34938  01932A  5ADD               	subwfb	postdec2,f,c
 34939  01932C                     l15614:
 34940                           
 34941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 34942  01932C  0E4F               	movlw	79
 34943  01932E  6E34               	movwf	(btemp+10)^0,c
 34944  019330  0E00               	movlw	0
 34945  019332  6E35               	movwf	(btemp+11)^0,c
 34946                           
 34947                           ;stkvar	_i @ sp[(-18)+10]
 34948  019334  0EF8               	movlw	-8
 34949  019336  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 34950  01933C  0EF9               	movlw	-7
 34951  01933E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 34952                           
 34953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 34954  019344  0103               	movlb	3	; () banked
 34955  019346  6BA3               	clrf	(_dbuf+79)& (0+255),b
 34956                           
 34957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 34958  019348  D109               	goto	l15628
 34959  01934A                     l15618:
 34960                           
 34961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 34962                           ;stkvar	_i @ sp[(-18)+10]
 34963  01934A  50E1               	movf	fsr1l,w,c
 34964  01934C  0FF8               	addlw	-8
 34965  01934E  6ED9               	movwf	fsr2l,c
 34966  019350  50E2               	movf	fsr1h,w,c
 34967  019352  6EDA               	movwf	fsr2h,c
 34968  019354  0EFF               	movlw	255
 34969  019356  22DA               	addwfc	fsr2h,f,c
 34970  019358  06DE               	decf	postinc2,f,c
 34971  01935A  0E00               	movlw	0
 34972  01935C  5ADD               	subwfb	postdec2,f,c
 34973                           
 34974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 34975  01935E  0E0A               	movlw	10
 34976  019360  6EE6               	movwf	postinc1,c
 34977  019362  0E00               	movlw	0
 34978  019364  6EE6               	movwf	postinc1,c
 34979  019366  0E00               	movlw	0
 34980  019368  6EE6               	movwf	postinc1,c
 34981  01936A  0E00               	movlw	0
 34982  01936C  6EE6               	movwf	postinc1,c
 34983  01936E  0E00               	movlw	0
 34984  019370  6EE6               	movwf	postinc1,c
 34985  019372  0E00               	movlw	0
 34986  019374  6EE6               	movwf	postinc1,c
 34987  019376  0E00               	movlw	0
 34988  019378  6EE6               	movwf	postinc1,c
 34989  01937A  0E00               	movlw	0
 34990  01937C  6EE6               	movwf	postinc1,c
 34991                           
 34992                           ;stkvar	_n @ sp[(-26)+2]
 34993  01937E  50E1               	movf	fsr1l,w,c
 34994  019380  0FE8               	addlw	-24
 34995  019382  6ED9               	movwf	fsr2l,c
 34996  019384  50E2               	movf	fsr1h,w,c
 34997  019386  6EDA               	movwf	fsr2h,c
 34998  019388  0EFF               	movlw	255
 34999  01938A  22DA               	addwfc	fsr2h,f,c
 35000  01938C  006F FF7B FFE6     	movff	postinc2,postinc1
 35001  019392  006F FF7B FFE6     	movff	postinc2,postinc1
 35002  019398  006F FF7B FFE6     	movff	postinc2,postinc1
 35003  01939E  006F FF7B FFE6     	movff	postinc2,postinc1
 35004  0193A4  006F FF7B FFE6     	movff	postinc2,postinc1
 35005  0193AA  006F FF7B FFE6     	movff	postinc2,postinc1
 35006  0193B0  006F FF7B FFE6     	movff	postinc2,postinc1
 35007  0193B6  006F FF7B FFE6     	movff	postinc2,postinc1
 35008  0193BC  EC3C  F0E7         	call	___aomod	;wreg free
 35009  0193C0  52E5               	movf	postdec1,f,c
 35010  0193C2  006F FF9C  F041    	movff	indf1,btemp+23
 35011  0193C8  52E5               	movf	postdec1,f,c
 35012  0193CA  006F FF9C  F040    	movff	indf1,btemp+22
 35013  0193D0  52E5               	movf	postdec1,f,c
 35014  0193D2  006F FF9C  F03F    	movff	indf1,btemp+21
 35015  0193D8  52E5               	movf	postdec1,f,c
 35016  0193DA  006F FF9C  F03E    	movff	indf1,btemp+20
 35017  0193E0  52E5               	movf	postdec1,f,c
 35018  0193E2  006F FF9C  F03D    	movff	indf1,btemp+19
 35019  0193E8  52E5               	movf	postdec1,f,c
 35020  0193EA  006F FF9C  F03C    	movff	indf1,btemp+18
 35021  0193F0  52E5               	movf	postdec1,f,c
 35022  0193F2  006F FF9C  F03B    	movff	indf1,btemp+17
 35023  0193F8  52E5               	movf	postdec1,f,c
 35024  0193FA  006F FF9C  F03A    	movff	indf1,btemp+16
 35025  019400  0EF8               	movlw	248
 35026  019402  26E1               	addwf	fsr1l,f,c
 35027  019404  0EFF               	movlw	255
 35028  019406  22E2               	addwfc	fsr1h,f,c
 35029  019408  0060  F0E8  F034   	movff	btemp+16,btemp+10
 35030  01940E  0060  F0EC  F035   	movff	btemp+17,btemp+11
 35031  019414  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35032  01941A  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35033  019420  EC57  F010         	call	_abs	;wreg free
 35034  019424  0E30               	movlw	48
 35035  019426  262A               	addwf	btemp^0,f,c
 35036                           
 35037                           ;stkvar	_i @ sp[(-18)+10]
 35038  019428  0EF8               	movlw	-8
 35039  01942A  006F FF8C  F034    	movff	plusw1,btemp+10
 35040  019430  0EF9               	movlw	-7
 35041  019432  006F FF8C  F035    	movff	plusw1,btemp+11
 35042  019438  0E54               	movlw	low _dbuf
 35043  01943A  2434               	addwf	(btemp+10)^0,w,c
 35044  01943C  6ED9               	movwf	fsr2l,c
 35045  01943E  0E03               	movlw	high _dbuf
 35046  019440  2035               	addwfc	(btemp+11)^0,w,c
 35047  019442  6EDA               	movwf	fsr2h,c
 35048  019444  0060  F0AB  FFDF   	movff	btemp,indf2
 35049                           
 35050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 35051                           ;stkvar	_p @ sp[(-18)+16]
 35052  01944A  50E1               	movf	fsr1l,w,c
 35053  01944C  0FFE               	addlw	-2
 35054  01944E  6ED9               	movwf	fsr2l,c
 35055  019450  50E2               	movf	fsr1h,w,c
 35056  019452  6EDA               	movwf	fsr2h,c
 35057  019454  0EFF               	movlw	255
 35058  019456  22DA               	addwfc	fsr2h,f,c
 35059  019458  06DE               	decf	postinc2,f,c
 35060  01945A  0E00               	movlw	0
 35061  01945C  5ADD               	subwfb	postdec2,f,c
 35062                           
 35063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 35064                           ;stkvar	_w @ sp[(-18)+14]
 35065  01945E  50E1               	movf	fsr1l,w,c
 35066  019460  0FFC               	addlw	-4
 35067  019462  6ED9               	movwf	fsr2l,c
 35068  019464  50E2               	movf	fsr1h,w,c
 35069  019466  6EDA               	movwf	fsr2h,c
 35070  019468  0EFF               	movlw	255
 35071  01946A  22DA               	addwfc	fsr2h,f,c
 35072  01946C  06DE               	decf	postinc2,f,c
 35073  01946E  0E00               	movlw	0
 35074  019470  5ADD               	subwfb	postdec2,f,c
 35075                           
 35076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 35077  019472  0E0A               	movlw	10
 35078  019474  6EE6               	movwf	postinc1,c
 35079  019476  0E00               	movlw	0
 35080  019478  6EE6               	movwf	postinc1,c
 35081  01947A  0E00               	movlw	0
 35082  01947C  6EE6               	movwf	postinc1,c
 35083  01947E  0E00               	movlw	0
 35084  019480  6EE6               	movwf	postinc1,c
 35085  019482  0E00               	movlw	0
 35086  019484  6EE6               	movwf	postinc1,c
 35087  019486  0E00               	movlw	0
 35088  019488  6EE6               	movwf	postinc1,c
 35089  01948A  0E00               	movlw	0
 35090  01948C  6EE6               	movwf	postinc1,c
 35091  01948E  0E00               	movlw	0
 35092  019490  6EE6               	movwf	postinc1,c
 35093                           
 35094                           ;stkvar	_n @ sp[(-26)+2]
 35095  019492  50E1               	movf	fsr1l,w,c
 35096  019494  0FE8               	addlw	-24
 35097  019496  6ED9               	movwf	fsr2l,c
 35098  019498  50E2               	movf	fsr1h,w,c
 35099  01949A  6EDA               	movwf	fsr2h,c
 35100  01949C  0EFF               	movlw	255
 35101  01949E  22DA               	addwfc	fsr2h,f,c
 35102  0194A0  006F FF7B FFE6     	movff	postinc2,postinc1
 35103  0194A6  006F FF7B FFE6     	movff	postinc2,postinc1
 35104  0194AC  006F FF7B FFE6     	movff	postinc2,postinc1
 35105  0194B2  006F FF7B FFE6     	movff	postinc2,postinc1
 35106  0194B8  006F FF7B FFE6     	movff	postinc2,postinc1
 35107  0194BE  006F FF7B FFE6     	movff	postinc2,postinc1
 35108  0194C4  006F FF7B FFE6     	movff	postinc2,postinc1
 35109  0194CA  006F FF7B FFE6     	movff	postinc2,postinc1
 35110  0194D0  EC7D  F0E2         	call	___aodiv	;wreg free
 35111  0194D4  52E5               	movf	postdec1,f,c
 35112  0194D6  006F FF9C  F041    	movff	indf1,btemp+23
 35113  0194DC  52E5               	movf	postdec1,f,c
 35114  0194DE  006F FF9C  F040    	movff	indf1,btemp+22
 35115  0194E4  52E5               	movf	postdec1,f,c
 35116  0194E6  006F FF9C  F03F    	movff	indf1,btemp+21
 35117  0194EC  52E5               	movf	postdec1,f,c
 35118  0194EE  006F FF9C  F03E    	movff	indf1,btemp+20
 35119  0194F4  52E5               	movf	postdec1,f,c
 35120  0194F6  006F FF9C  F03D    	movff	indf1,btemp+19
 35121  0194FC  52E5               	movf	postdec1,f,c
 35122  0194FE  006F FF9C  F03C    	movff	indf1,btemp+18
 35123  019504  52E5               	movf	postdec1,f,c
 35124  019506  006F FF9C  F03B    	movff	indf1,btemp+17
 35125  01950C  52E5               	movf	postdec1,f,c
 35126  01950E  006F FF9C  F03A    	movff	indf1,btemp+16
 35127  019514  0EF8               	movlw	248
 35128  019516  26E1               	addwf	fsr1l,f,c
 35129  019518  0EFF               	movlw	255
 35130  01951A  22E2               	addwfc	fsr1h,f,c
 35131                           
 35132                           ;stkvar	_n @ sp[(-18)+2]
 35133  01951C  0EF0               	movlw	-16
 35134  01951E  0060  F0EB  FFE3   	movff	btemp+16,plusw1
 35135  019524  0EF1               	movlw	-15
 35136  019526  0060  F0EF  FFE3   	movff	btemp+17,plusw1
 35137  01952C  0EF2               	movlw	-14
 35138  01952E  0060  F0F3  FFE3   	movff	btemp+18,plusw1
 35139  019534  0EF3               	movlw	-13
 35140  019536  0060  F0F7  FFE3   	movff	btemp+19,plusw1
 35141  01953C  0EF4               	movlw	-12
 35142  01953E  0060  F0FB  FFE3   	movff	btemp+20,plusw1
 35143  019544  0EF5               	movlw	-11
 35144  019546  0060  F0FF  FFE3   	movff	btemp+21,plusw1
 35145  01954C  0EF6               	movlw	-10
 35146  01954E  0060  F103  FFE3   	movff	btemp+22,plusw1
 35147  019554  0EF7               	movlw	-9
 35148  019556  0060  F107  FFE3   	movff	btemp+23,plusw1
 35149  01955C                     l15628:
 35150                           
 35151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 35152                           ;stkvar	_i @ sp[(-18)+10]
 35153  01955C  0EF9               	movlw	-7
 35154  01955E  BEE3               	btfsc	plusw1,7,c
 35155  019560  D036               	goto	u14710
 35156  019562  0EF9               	movlw	-7
 35157  019564  50E3               	movf	plusw1,w,c
 35158  019566  E104               	bnz	u14670
 35159  019568  0EF8               	movlw	-8
 35160  01956A  04E3               	decf	plusw1,w,c
 35161  01956C  A0D8               	btfss	status,0,c
 35162  01956E  D02F               	goto	u14710
 35163  019570                     u14670:
 35164                           
 35165                           ;stkvar	_n @ sp[(-18)+2]
 35166  019570  0EF0               	movlw	-16
 35167  019572  50E3               	movf	plusw1,w,c
 35168  019574  E115               	bnz	u14681
 35169  019576  0EF1               	movlw	-15
 35170  019578  50E3               	movf	plusw1,w,c
 35171  01957A  E112               	bnz	u14681
 35172  01957C  0EF2               	movlw	-14
 35173  01957E  50E3               	movf	plusw1,w,c
 35174  019580  E10F               	bnz	u14681
 35175  019582  0EF3               	movlw	-13
 35176  019584  50E3               	movf	plusw1,w,c
 35177  019586  E10C               	bnz	u14681
 35178  019588  0EF4               	movlw	-12
 35179  01958A  50E3               	movf	plusw1,w,c
 35180  01958C  E109               	bnz	u14681
 35181  01958E  0EF5               	movlw	-11
 35182  019590  50E3               	movf	plusw1,w,c
 35183  019592  E106               	bnz	u14681
 35184  019594  0EF6               	movlw	-10
 35185  019596  50E3               	movf	plusw1,w,c
 35186  019598  E103               	bnz	u14681
 35187  01959A  0EF7               	movlw	-9
 35188  01959C  50E3               	movf	plusw1,w,c
 35189  01959E  A4D8               	btfss	status,2,c
 35190  0195A0                     u14681:
 35191  0195A0  D6D4               	goto	l15618
 35192                           
 35193                           ;stkvar	_p @ sp[(-18)+16]
 35194  0195A2  0EFF               	movlw	-1
 35195  0195A4  BEE3               	btfsc	plusw1,7,c
 35196  0195A6  D007               	goto	u14690
 35197  0195A8  0EFF               	movlw	-1
 35198  0195AA  50E3               	movf	plusw1,w,c
 35199  0195AC  E103               	bnz	u14691
 35200  0195AE  0EFE               	movlw	-2
 35201  0195B0  04E3               	decf	plusw1,w,c
 35202  0195B2  B0D8               	btfsc	status,0,c
 35203  0195B4                     u14691:
 35204  0195B4  D6CA               	goto	l15618
 35205  0195B6                     u14690:
 35206                           
 35207                           ;stkvar	_w @ sp[(-18)+14]
 35208  0195B6  0EFD               	movlw	-3
 35209  0195B8  BEE3               	btfsc	plusw1,7,c
 35210  0195BA  D009               	goto	u14710
 35211  0195BC  0EFD               	movlw	-3
 35212  0195BE  50E3               	movf	plusw1,w,c
 35213  0195C0  E104               	bnz	u14700
 35214  0195C2  0EFC               	movlw	-4
 35215  0195C4  04E3               	decf	plusw1,w,c
 35216  0195C6  A0D8               	btfss	status,0,c
 35217  0195C8  D002               	goto	u14710
 35218  0195CA                     u14700:
 35219  0195CA  B24E               	btfsc	_flags^0,1,c
 35220  0195CC  D6BE               	goto	l15618
 35221  0195CE                     u14710:
 35222                           
 35223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 35224                           ;stkvar	_s @ sp[(-18)+12]
 35225  0195CE  0EFA               	movlw	-6
 35226  0195D0  006F FF8C  F02A    	movff	plusw1,btemp
 35227  0195D6  0EFB               	movlw	-5
 35228  0195D8  50E3               	movf	plusw1,w,c
 35229  0195DA  102A               	iorwf	btemp^0,w,c
 35230  0195DC  A4D8               	btfss	status,2,c
 35231  0195DE  D002               	goto	u14730
 35232  0195E0  A44E               	btfss	_flags^0,2,c
 35233  0195E2  D033               	goto	l15652
 35234  0195E4                     u14730:
 35235                           
 35236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 35237                           ;stkvar	_i @ sp[(-18)+10]
 35238  0195E4  50E1               	movf	fsr1l,w,c
 35239  0195E6  0FF8               	addlw	-8
 35240  0195E8  6ED9               	movwf	fsr2l,c
 35241  0195EA  50E2               	movf	fsr1h,w,c
 35242  0195EC  6EDA               	movwf	fsr2h,c
 35243  0195EE  0EFF               	movlw	255
 35244  0195F0  22DA               	addwfc	fsr2h,f,c
 35245  0195F2  06DE               	decf	postinc2,f,c
 35246  0195F4  0E00               	movlw	0
 35247  0195F6  5ADD               	subwfb	postdec2,f,c
 35248                           
 35249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 35250                           ;stkvar	_s @ sp[(-18)+12]
 35251  0195F8  0EFA               	movlw	-6
 35252  0195FA  006F FF8C  F02A    	movff	plusw1,btemp
 35253  019600  0EFB               	movlw	-5
 35254  019602  50E3               	movf	plusw1,w,c
 35255  019604  102A               	iorwf	btemp^0,w,c
 35256  019606  A4D8               	btfss	status,2,c
 35257  019608  D002               	goto	l15648
 35258  01960A  0E2B               	movlw	43
 35259  01960C  D001               	goto	L39
 35260  01960E                     l15648:
 35261  01960E  0E2D               	movlw	45
 35262  019610                     L39:
 35263  019610  6E34               	movwf	(btemp+10)^0,c
 35264  019612  0E00               	movlw	0
 35265  019614  6E35               	movwf	(btemp+11)^0,c
 35266                           
 35267                           ;stkvar	_dtoa$6591 @ sp[(-18)+0]
 35268  019616  0EEE               	movlw	-18
 35269  019618  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 35270  01961E  0EEF               	movlw	-17
 35271  019620  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 35272                           
 35273                           ;stkvar	_dtoa$6591 @ sp[(-18)+0]
 35274                           ;stkvar	_i @ sp[(-18)+10]
 35275  019626  0EF8               	movlw	-8
 35276  019628  006F FF8C  F034    	movff	plusw1,btemp+10
 35277  01962E  0EF9               	movlw	-7
 35278  019630  006F FF8C  F035    	movff	plusw1,btemp+11
 35279  019636  0E54               	movlw	low _dbuf
 35280  019638  2434               	addwf	(btemp+10)^0,w,c
 35281  01963A  6ED9               	movwf	fsr2l,c
 35282  01963C  0E03               	movlw	high _dbuf
 35283  01963E  2035               	addwfc	(btemp+11)^0,w,c
 35284  019640  6EDA               	movwf	fsr2h,c
 35285  019642  0EEE               	movlw	-18
 35286  019644  006F FF8F FFDF     	movff	plusw1,indf2
 35287  01964A                     l15652:
 35288                           
 35289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 35290                           ;stkvar	_w @ sp[(-18)+14]
 35291  01964A  0EFC               	movlw	-4
 35292  01964C  006F FF8F FFE6     	movff	plusw1,postinc1
 35293  019652  006F FF8F FFE6     	movff	plusw1,postinc1
 35294                           
 35295                           ;stkvar	_i @ sp[(-20)+10]
 35296  019658  0E54               	movlw	low _dbuf
 35297  01965A  6E34               	movwf	(btemp+10)^0,c
 35298  01965C  0E03               	movlw	high _dbuf
 35299  01965E  6E35               	movwf	(btemp+11)^0,c
 35300  019660  0EF6               	movlw	-10
 35301  019662  50E3               	movf	plusw1,w,c
 35302  019664  2634               	addwf	(btemp+10)^0,f,c
 35303  019666  0EF7               	movlw	-9
 35304  019668  50E3               	movf	plusw1,w,c
 35305  01966A  2235               	addwfc	(btemp+11)^0,f,c
 35306  01966C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 35307  019672  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 35308                           
 35309                           ;stkvar	_fp @ sp[(-22)+-2]
 35310  019678  0EE8               	movlw	-24
 35311  01967A  006F FF8F FFE6     	movff	plusw1,postinc1
 35312  019680  006F FF8F FFE6     	movff	plusw1,postinc1
 35313  019686  EC5B  F0FE         	call	_pad	;wreg free
 35314                           
 35315                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 35316  01968A  0EE4               	movlw	228
 35317  01968C  26E1               	addwf	fsr1l,f,c
 35318  01968E  0EFF               	movlw	255
 35319  019690  22E2               	addwfc	fsr1h,f,c
 35320  019692  0012               	return		;funcret
 35321  019694                     __end_of_dtoa:
 35322                           	opt callstack 0
 35323                           
 35324 ;; *************** function _abs *****************
 35325 ;; Defined at:
 35326 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 35327 ;; Parameters:    Size  Location     Type
 35328 ;;  a               2  [STACK] int 
 35329 ;; Auto vars:     Size  Location     Type
 35330 ;;		None
 35331 ;; Return value:  Size  Location     Type
 35332 ;;                  2  [STACK] int 
 35333 ;; Registers used:
 35334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 35335 ;; Tracked objects:
 35336 ;;		On entry : 0/3
 35337 ;;		On exit  : 0/0
 35338 ;;		Unchanged: 0/0
 35339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35344 ;;Total ram usage:        0 bytes
 35345 ;; Hardware stack levels used:    1
 35346 ;; Hardware stack levels required when called:   15
 35347 ;; This function calls:
 35348 ;;		Nothing
 35349 ;; This function is called by:
 35350 ;;		_dtoa
 35351 ;; This function uses a reentrant model
 35352 ;;
 35353                           
 35354                           	psect	text115
 35355  0020AE                     __ptext115:
 35356                           	opt callstack 0
 35357  0020AE                     _abs:
 35358                           	opt callstack 0
 35359                           
 35360                           ;stkvar	_a @ sp[(0)+-2]
 35361                           
 35362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35363                           ;incstack = 0
 35364 ;; hardware stack exceeded
 35365  0020AE  0EFF               	movlw	-1
 35366  0020B0  BEE3               	btfsc	plusw1,7,c
 35367  0020B2  D007               	goto	u7760
 35368  0020B4  0EFF               	movlw	-1
 35369  0020B6  50E3               	movf	plusw1,w,c
 35370  0020B8  E112               	bnz	l10108
 35371  0020BA  0EFE               	movlw	-2
 35372  0020BC  04E3               	decf	plusw1,w,c
 35373  0020BE  B0D8               	btfsc	status,0,c
 35374  0020C0  D00E               	goto	l10108
 35375  0020C2                     u7760:
 35376                           
 35377                           ;stkvar	_a @ sp[(0)+-2]
 35378  0020C2  0EFE               	movlw	-2
 35379  0020C4  006F FF8C  F02A    	movff	plusw1,btemp
 35380  0020CA  1E2A               	comf	btemp^0,f,c
 35381  0020CC  0EFF               	movlw	-1
 35382  0020CE  006F FF8C  F02B    	movff	plusw1,btemp+1
 35383  0020D4  1E2B               	comf	(btemp+1)^0,f,c
 35384  0020D6  2A2A               	incf	btemp^0,f,c
 35385  0020D8  B4D8               	btfsc	status,2,c
 35386  0020DA  2A2B               	incf	(btemp+1)^0,f,c
 35387  0020DC  D008               	goto	l3417
 35388  0020DE                     l10108:
 35389                           
 35390                           ;stkvar	_a @ sp[(0)+-2]
 35391  0020DE  0EFE               	movlw	-2
 35392  0020E0  006F FF8C  F02A    	movff	plusw1,btemp
 35393  0020E6  0EFF               	movlw	-1
 35394  0020E8  006F FF8C  F02B    	movff	plusw1,btemp+1
 35395  0020EE                     l3417:
 35396                           
 35397                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 35398  0020EE  52E5               	movf	postdec1,f,c
 35399  0020F0  52E5               	movf	postdec1,f,c
 35400  0020F2  0012               	return		;funcret
 35401  0020F4                     __end_of_abs:
 35402                           	opt callstack 0
 35403                           
 35404 ;; *************** function ___aomod *****************
 35405 ;; Defined at:
 35406 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;  dividend        8  [STACK] long long 
 35409 ;;  divisor         8  [STACK] long long 
 35410 ;; Auto vars:     Size  Location     Type
 35411 ;;  sign            1  [STACK] unsigned char 
 35412 ;;  counter         1  [STACK] unsigned char 
 35413 ;; Return value:  Size  Location     Type
 35414 ;;                  8  [STACK] long long 
 35415 ;; Registers used:
 35416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35417 ;; Tracked objects:
 35418 ;;		On entry : 0/0
 35419 ;;		On exit  : 0/0
 35420 ;;		Unchanged: 0/0
 35421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35426 ;;Total ram usage:        0 bytes
 35427 ;; Hardware stack levels used:    1
 35428 ;; Hardware stack levels required when called:   15
 35429 ;; This function calls:
 35430 ;;		Nothing
 35431 ;; This function is called by:
 35432 ;;		_dtoa
 35433 ;;		___secs_to_tm
 35434 ;;		_rule_to_secs
 35435 ;;		___year_to_secs
 35436 ;; This function uses a reentrant model
 35437 ;;
 35438                           
 35439                           	psect	text116
 35440  01CE78                     __ptext116:
 35441                           	opt callstack 0
 35442  01CE78                     ___aomod:
 35443                           	opt callstack 0
 35444                           
 35445                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 35446  01CE78  52E6               	movf	postinc1,f,c
 35447  01CE7A  52E6               	movf	postinc1,f,c
 35448                           
 35449                           ;stkvar	_sign @ sp[(-2)+0]
 35450                           
 35451                           ;incstack = 0
 35452 ;; hardware stack exceeded
 35453  01CE7C  0EFE               	movlw	-2
 35454  01CE7E  6AE3               	clrf	plusw1,c
 35455                           
 35456                           ;stkvar	_dividend @ sp[(-2)+-8]
 35457  01CE80  0EFD               	movlw	-3
 35458  01CE82  AEE3               	btfss	plusw1,7,c
 35459  01CE84  D028               	goto	l10292
 35460                           
 35461                           ;stkvar	_dividend @ sp[(-2)+-8]
 35462                           ;stkvar	_dividend @ sp[(-2)+-8]
 35463  01CE86  0EF6               	movlw	-10
 35464  01CE88  6CE3               	negf	plusw1,c
 35465  01CE8A  0EF7               	movlw	-9
 35466  01CE8C  1EE3               	comf	plusw1,f,c
 35467  01CE8E  0EF8               	movlw	-8
 35468  01CE90  1EE3               	comf	plusw1,f,c
 35469  01CE92  0EF9               	movlw	-7
 35470  01CE94  1EE3               	comf	plusw1,f,c
 35471  01CE96  0EFA               	movlw	-6
 35472  01CE98  1EE3               	comf	plusw1,f,c
 35473  01CE9A  0EFB               	movlw	-5
 35474  01CE9C  1EE3               	comf	plusw1,f,c
 35475  01CE9E  0EFC               	movlw	-4
 35476  01CEA0  1EE3               	comf	plusw1,f,c
 35477  01CEA2  0EFD               	movlw	-3
 35478  01CEA4  1EE3               	comf	plusw1,f,c
 35479  01CEA6  E314               	bnc	u8250
 35480  01CEA8  0EF7               	movlw	-9
 35481  01CEAA  2AE3               	incf	plusw1,f,c
 35482  01CEAC  E311               	bnc	u8250
 35483  01CEAE  0EF8               	movlw	-8
 35484  01CEB0  2AE3               	incf	plusw1,f,c
 35485  01CEB2  E30E               	bnc	u8250
 35486  01CEB4  0EF9               	movlw	-7
 35487  01CEB6  2AE3               	incf	plusw1,f,c
 35488  01CEB8  E30B               	bnc	u8250
 35489  01CEBA  0EFA               	movlw	-6
 35490  01CEBC  2AE3               	incf	plusw1,f,c
 35491  01CEBE  E308               	bnc	u8250
 35492  01CEC0  0EFB               	movlw	-5
 35493  01CEC2  2AE3               	incf	plusw1,f,c
 35494  01CEC4  E305               	bnc	u8250
 35495  01CEC6  0EFC               	movlw	-4
 35496  01CEC8  2AE3               	incf	plusw1,f,c
 35497  01CECA  E302               	bnc	u8250
 35498  01CECC  0EFD               	movlw	-3
 35499  01CECE  2AE3               	incf	plusw1,f,c
 35500  01CED0                     u8250:
 35501                           
 35502                           ;stkvar	_sign @ sp[(-2)+0]
 35503  01CED0  0EFE               	movlw	-2
 35504  01CED2  6AE3               	clrf	plusw1,c
 35505  01CED4  2AE3               	incf	plusw1,f,c
 35506  01CED6                     l10292:
 35507                           
 35508                           ;stkvar	_divisor @ sp[(-2)+-16]
 35509  01CED6  0EF5               	movlw	-11
 35510  01CED8  AEE3               	btfss	plusw1,7,c
 35511  01CEDA  D025               	goto	u8270
 35512                           
 35513                           ;stkvar	_divisor @ sp[(-2)+-16]
 35514                           ;stkvar	_divisor @ sp[(-2)+-16]
 35515  01CEDC  0EEE               	movlw	-18
 35516  01CEDE  6CE3               	negf	plusw1,c
 35517  01CEE0  0EEF               	movlw	-17
 35518  01CEE2  1EE3               	comf	plusw1,f,c
 35519  01CEE4  0EF0               	movlw	-16
 35520  01CEE6  1EE3               	comf	plusw1,f,c
 35521  01CEE8  0EF1               	movlw	-15
 35522  01CEEA  1EE3               	comf	plusw1,f,c
 35523  01CEEC  0EF2               	movlw	-14
 35524  01CEEE  1EE3               	comf	plusw1,f,c
 35525  01CEF0  0EF3               	movlw	-13
 35526  01CEF2  1EE3               	comf	plusw1,f,c
 35527  01CEF4  0EF4               	movlw	-12
 35528  01CEF6  1EE3               	comf	plusw1,f,c
 35529  01CEF8  0EF5               	movlw	-11
 35530  01CEFA  1EE3               	comf	plusw1,f,c
 35531  01CEFC  E314               	bnc	u8270
 35532  01CEFE  0EEF               	movlw	-17
 35533  01CF00  2AE3               	incf	plusw1,f,c
 35534  01CF02  E311               	bnc	u8270
 35535  01CF04  0EF0               	movlw	-16
 35536  01CF06  2AE3               	incf	plusw1,f,c
 35537  01CF08  E30E               	bnc	u8270
 35538  01CF0A  0EF1               	movlw	-15
 35539  01CF0C  2AE3               	incf	plusw1,f,c
 35540  01CF0E  E30B               	bnc	u8270
 35541  01CF10  0EF2               	movlw	-14
 35542  01CF12  2AE3               	incf	plusw1,f,c
 35543  01CF14  E308               	bnc	u8270
 35544  01CF16  0EF3               	movlw	-13
 35545  01CF18  2AE3               	incf	plusw1,f,c
 35546  01CF1A  E305               	bnc	u8270
 35547  01CF1C  0EF4               	movlw	-12
 35548  01CF1E  2AE3               	incf	plusw1,f,c
 35549  01CF20  E302               	bnc	u8270
 35550  01CF22  0EF5               	movlw	-11
 35551  01CF24  2AE3               	incf	plusw1,f,c
 35552  01CF26                     u8270:
 35553                           
 35554                           ;stkvar	_divisor @ sp[(-2)+-16]
 35555  01CF26  0EEE               	movlw	-18
 35556  01CF28  50E3               	movf	plusw1,w,c
 35557  01CF2A  E116               	bnz	u8280
 35558  01CF2C  0EEF               	movlw	-17
 35559  01CF2E  50E3               	movf	plusw1,w,c
 35560  01CF30  E113               	bnz	u8280
 35561  01CF32  0EF0               	movlw	-16
 35562  01CF34  50E3               	movf	plusw1,w,c
 35563  01CF36  E110               	bnz	u8280
 35564  01CF38  0EF1               	movlw	-15
 35565  01CF3A  50E3               	movf	plusw1,w,c
 35566  01CF3C  E10D               	bnz	u8280
 35567  01CF3E  0EF2               	movlw	-14
 35568  01CF40  50E3               	movf	plusw1,w,c
 35569  01CF42  E10A               	bnz	u8280
 35570  01CF44  0EF3               	movlw	-13
 35571  01CF46  50E3               	movf	plusw1,w,c
 35572  01CF48  E107               	bnz	u8280
 35573  01CF4A  0EF4               	movlw	-12
 35574  01CF4C  50E3               	movf	plusw1,w,c
 35575  01CF4E  E104               	bnz	u8280
 35576  01CF50  0EF5               	movlw	-11
 35577  01CF52  50E3               	movf	plusw1,w,c
 35578  01CF54  B4D8               	btfsc	status,2,c
 35579  01CF56  D075               	goto	u8310
 35580  01CF58                     u8280:
 35581                           
 35582                           ;stkvar	_counter @ sp[(-2)+1]
 35583  01CF58  0EFF               	movlw	-1
 35584  01CF5A  6AE3               	clrf	plusw1,c
 35585  01CF5C  D012               	goto	L40
 35586  01CF5E                     l10300:
 35587                           
 35588                           ;stkvar	_divisor @ sp[(-2)+-16]
 35589  01CF5E  90D8               	bcf	status,0,c
 35590  01CF60  0EEE               	movlw	-18
 35591  01CF62  36E3               	rlcf	plusw1,f,c
 35592  01CF64  0EEF               	movlw	-17
 35593  01CF66  36E3               	rlcf	plusw1,f,c
 35594  01CF68  0EF0               	movlw	-16
 35595  01CF6A  36E3               	rlcf	plusw1,f,c
 35596  01CF6C  0EF1               	movlw	-15
 35597  01CF6E  36E3               	rlcf	plusw1,f,c
 35598  01CF70  0EF2               	movlw	-14
 35599  01CF72  36E3               	rlcf	plusw1,f,c
 35600  01CF74  0EF3               	movlw	-13
 35601  01CF76  36E3               	rlcf	plusw1,f,c
 35602  01CF78  0EF4               	movlw	-12
 35603  01CF7A  36E3               	rlcf	plusw1,f,c
 35604  01CF7C  0EF5               	movlw	-11
 35605  01CF7E  36E3               	rlcf	plusw1,f,c
 35606                           
 35607                           ;stkvar	_counter @ sp[(-2)+1]
 35608  01CF80  0EFF               	movlw	-1
 35609  01CF82                     L40:
 35610  01CF82  2AE3               	incf	plusw1,f,c
 35611                           
 35612                           ;stkvar	_divisor @ sp[(-2)+-16]
 35613  01CF84  0EF5               	movlw	-11
 35614  01CF86  AEE3               	btfss	plusw1,7,c
 35615  01CF88  D7EA               	goto	l10300
 35616  01CF8A                     u8290:
 35617                           
 35618                           ;stkvar	_divisor @ sp[(-2)+-16]
 35619                           ;stkvar	_dividend @ sp[(-2)+-8]
 35620  01CF8A  50E1               	movf	fsr1l,w,c
 35621  01CF8C  0FF6               	addlw	-10
 35622  01CF8E  6ED9               	movwf	fsr2l,c
 35623  01CF90  50E2               	movf	fsr1h,w,c
 35624  01CF92  6EDA               	movwf	fsr2h,c
 35625  01CF94  0EFF               	movlw	255
 35626  01CF96  22DA               	addwfc	fsr2h,f,c
 35627  01CF98  0EEE               	movlw	-18
 35628  01CF9A  50E3               	movf	plusw1,w,c
 35629  01CF9C  5CDE               	subwf	postinc2,w,c
 35630  01CF9E  0EEF               	movlw	-17
 35631  01CFA0  50E3               	movf	plusw1,w,c
 35632  01CFA2  58DE               	subwfb	postinc2,w,c
 35633  01CFA4  0EF0               	movlw	-16
 35634  01CFA6  50E3               	movf	plusw1,w,c
 35635  01CFA8  58DE               	subwfb	postinc2,w,c
 35636  01CFAA  0EF1               	movlw	-15
 35637  01CFAC  50E3               	movf	plusw1,w,c
 35638  01CFAE  58DE               	subwfb	postinc2,w,c
 35639  01CFB0  0EF2               	movlw	-14
 35640  01CFB2  50E3               	movf	plusw1,w,c
 35641  01CFB4  58DE               	subwfb	postinc2,w,c
 35642  01CFB6  0EF3               	movlw	-13
 35643  01CFB8  50E3               	movf	plusw1,w,c
 35644  01CFBA  58DE               	subwfb	postinc2,w,c
 35645  01CFBC  0EF4               	movlw	-12
 35646  01CFBE  50E3               	movf	plusw1,w,c
 35647  01CFC0  58DE               	subwfb	postinc2,w,c
 35648  01CFC2  0EF5               	movlw	-11
 35649  01CFC4  50E3               	movf	plusw1,w,c
 35650  01CFC6  58DE               	subwfb	postinc2,w,c
 35651  01CFC8  A0D8               	btfss	status,0,c
 35652  01CFCA  D01F               	goto	l10308
 35653                           
 35654                           ;stkvar	_divisor @ sp[(-2)+-16]
 35655                           ;stkvar	_dividend @ sp[(-2)+-8]
 35656  01CFCC  50E1               	movf	fsr1l,w,c
 35657  01CFCE  0FF6               	addlw	-10
 35658  01CFD0  6ED9               	movwf	fsr2l,c
 35659  01CFD2  50E2               	movf	fsr1h,w,c
 35660  01CFD4  6EDA               	movwf	fsr2h,c
 35661  01CFD6  0EFF               	movlw	255
 35662  01CFD8  22DA               	addwfc	fsr2h,f,c
 35663  01CFDA  0EEE               	movlw	-18
 35664  01CFDC  50E3               	movf	plusw1,w,c
 35665  01CFDE  5EDE               	subwf	postinc2,f,c
 35666  01CFE0  0EEF               	movlw	-17
 35667  01CFE2  50E3               	movf	plusw1,w,c
 35668  01CFE4  5ADE               	subwfb	postinc2,f,c
 35669  01CFE6  0EF0               	movlw	-16
 35670  01CFE8  50E3               	movf	plusw1,w,c
 35671  01CFEA  5ADE               	subwfb	postinc2,f,c
 35672  01CFEC  0EF1               	movlw	-15
 35673  01CFEE  50E3               	movf	plusw1,w,c
 35674  01CFF0  5ADE               	subwfb	postinc2,f,c
 35675  01CFF2  0EF2               	movlw	-14
 35676  01CFF4  50E3               	movf	plusw1,w,c
 35677  01CFF6  5ADE               	subwfb	postinc2,f,c
 35678  01CFF8  0EF3               	movlw	-13
 35679  01CFFA  50E3               	movf	plusw1,w,c
 35680  01CFFC  5ADE               	subwfb	postinc2,f,c
 35681  01CFFE  0EF4               	movlw	-12
 35682  01D000  50E3               	movf	plusw1,w,c
 35683  01D002  5ADE               	subwfb	postinc2,f,c
 35684  01D004  0EF5               	movlw	-11
 35685  01D006  50E3               	movf	plusw1,w,c
 35686  01D008  5ADE               	subwfb	postinc2,f,c
 35687  01D00A                     l10308:
 35688                           
 35689                           ;stkvar	_divisor @ sp[(-2)+-16]
 35690  01D00A  90D8               	bcf	status,0,c
 35691  01D00C  0EF5               	movlw	-11
 35692  01D00E  32E3               	rrcf	plusw1,f,c
 35693  01D010  0EF4               	movlw	-12
 35694  01D012  32E3               	rrcf	plusw1,f,c
 35695  01D014  0EF3               	movlw	-13
 35696  01D016  32E3               	rrcf	plusw1,f,c
 35697  01D018  0EF2               	movlw	-14
 35698  01D01A  32E3               	rrcf	plusw1,f,c
 35699  01D01C  0EF1               	movlw	-15
 35700  01D01E  32E3               	rrcf	plusw1,f,c
 35701  01D020  0EF0               	movlw	-16
 35702  01D022  32E3               	rrcf	plusw1,f,c
 35703  01D024  0EEF               	movlw	-17
 35704  01D026  32E3               	rrcf	plusw1,f,c
 35705  01D028  0EEE               	movlw	-18
 35706  01D02A  32E3               	rrcf	plusw1,f,c
 35707                           
 35708                           ;stkvar	_counter @ sp[(-2)+1]
 35709  01D02C  0EFF               	movlw	-1
 35710  01D02E  50E3               	movf	plusw1,w,c
 35711  01D030  6E2A               	movwf	btemp^0,c
 35712  01D032  0E01               	movlw	1
 35713  01D034  5E2A               	subwf	btemp^0,f,c
 35714  01D036  0EFF               	movlw	-1
 35715  01D038  0060  F0AB  FFE3   	movff	btemp,plusw1
 35716  01D03E  A4D8               	btfss	status,2,c
 35717  01D040  D7A4               	goto	u8290
 35718  01D042                     u8310:
 35719                           
 35720                           ;stkvar	_sign @ sp[(-2)+0]
 35721  01D042  0EFE               	movlw	-2
 35722  01D044  50E3               	movf	plusw1,w,c
 35723  01D046  B4D8               	btfsc	status,2,c
 35724  01D048  D025               	goto	u8330
 35725                           
 35726                           ;stkvar	_dividend @ sp[(-2)+-8]
 35727                           ;stkvar	_dividend @ sp[(-2)+-8]
 35728  01D04A  0EF6               	movlw	-10
 35729  01D04C  6CE3               	negf	plusw1,c
 35730  01D04E  0EF7               	movlw	-9
 35731  01D050  1EE3               	comf	plusw1,f,c
 35732  01D052  0EF8               	movlw	-8
 35733  01D054  1EE3               	comf	plusw1,f,c
 35734  01D056  0EF9               	movlw	-7
 35735  01D058  1EE3               	comf	plusw1,f,c
 35736  01D05A  0EFA               	movlw	-6
 35737  01D05C  1EE3               	comf	plusw1,f,c
 35738  01D05E  0EFB               	movlw	-5
 35739  01D060  1EE3               	comf	plusw1,f,c
 35740  01D062  0EFC               	movlw	-4
 35741  01D064  1EE3               	comf	plusw1,f,c
 35742  01D066  0EFD               	movlw	-3
 35743  01D068  1EE3               	comf	plusw1,f,c
 35744  01D06A  E314               	bnc	u8330
 35745  01D06C  0EF7               	movlw	-9
 35746  01D06E  2AE3               	incf	plusw1,f,c
 35747  01D070  E311               	bnc	u8330
 35748  01D072  0EF8               	movlw	-8
 35749  01D074  2AE3               	incf	plusw1,f,c
 35750  01D076  E30E               	bnc	u8330
 35751  01D078  0EF9               	movlw	-7
 35752  01D07A  2AE3               	incf	plusw1,f,c
 35753  01D07C  E30B               	bnc	u8330
 35754  01D07E  0EFA               	movlw	-6
 35755  01D080  2AE3               	incf	plusw1,f,c
 35756  01D082  E308               	bnc	u8330
 35757  01D084  0EFB               	movlw	-5
 35758  01D086  2AE3               	incf	plusw1,f,c
 35759  01D088  E305               	bnc	u8330
 35760  01D08A  0EFC               	movlw	-4
 35761  01D08C  2AE3               	incf	plusw1,f,c
 35762  01D08E  E302               	bnc	u8330
 35763  01D090  0EFD               	movlw	-3
 35764  01D092  2AE3               	incf	plusw1,f,c
 35765  01D094                     u8330:
 35766                           
 35767                           ;stkvar	_dividend @ sp[(-2)+-8]
 35768  01D094  0EF6               	movlw	246
 35769  01D096  24E1               	addwf	fsr1l,w,c
 35770  01D098  6ED9               	movwf	fsr2l,c
 35771  01D09A  0EFF               	movlw	255
 35772  01D09C  20E2               	addwfc	fsr1h,w,c
 35773  01D09E  6EDA               	movwf	fsr2h,c
 35774                           
 35775                           ;stkvar	?___aomod @ sp[(-2)+-8]
 35776  01D0A0  0E08               	movlw	8
 35777  01D0A2  6E2A               	movwf	btemp^0,c
 35778  01D0A4  0EF6               	movlw	-10
 35779  01D0A6                     us834999:
 35780  01D0A6  006F FF7B FFE3     	movff	postinc2,plusw1
 35781  01D0AC  28E8               	incf	wreg,w,c
 35782  01D0AE  2E2A               	decfsz	btemp^0,f,c
 35783  01D0B0  D7FA               	bra	us834999
 35784                           
 35785                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 35786  01D0B2  52E5               	movf	postdec1,f,c
 35787  01D0B4  52E5               	movf	postdec1,f,c
 35788  01D0B6  0012               	return		;funcret
 35789  01D0B8                     __end_of___aomod:
 35790                           	opt callstack 0
 35791                           
 35792 ;; *************** function ___aodiv *****************
 35793 ;; Defined at:
 35794 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 35795 ;; Parameters:    Size  Location     Type
 35796 ;;  dividend        8  [STACK] long long 
 35797 ;;  divisor         8  [STACK] long long 
 35798 ;; Auto vars:     Size  Location     Type
 35799 ;;  quotient        8  [STACK] long long 
 35800 ;;  sign            1  [STACK] unsigned char 
 35801 ;;  counter         1  [STACK] unsigned char 
 35802 ;; Return value:  Size  Location     Type
 35803 ;;                  8  [STACK] long long 
 35804 ;; Registers used:
 35805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 35806 ;; Tracked objects:
 35807 ;;		On entry : 0/0
 35808 ;;		On exit  : 0/0
 35809 ;;		Unchanged: 0/0
 35810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35815 ;;Total ram usage:        0 bytes
 35816 ;; Hardware stack levels used:    1
 35817 ;; Hardware stack levels required when called:   15
 35818 ;; This function calls:
 35819 ;;		Nothing
 35820 ;; This function is called by:
 35821 ;;		_dtoa
 35822 ;;		___secs_to_tm
 35823 ;;		___secs_to_zone
 35824 ;;		___year_to_secs
 35825 ;; This function uses a reentrant model
 35826 ;;
 35827                           
 35828                           	psect	text117
 35829  01C4FA                     __ptext117:
 35830                           	opt callstack 0
 35831  01C4FA                     ___aodiv:
 35832                           	opt callstack 0
 35833                           
 35834                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 35835  01C4FA  0E0A               	movlw	10
 35836  01C4FC  26E1               	addwf	fsr1l,f,c
 35837  01C4FE  0E00               	movlw	0
 35838  01C500  22E2               	addwfc	fsr1h,f,c
 35839                           
 35840                           ;stkvar	_sign @ sp[(-10)+8]
 35841                           
 35842                           ;incstack = 0
 35843 ;; hardware stack exceeded
 35844  01C502  0EFE               	movlw	-2
 35845  01C504  6AE3               	clrf	plusw1,c
 35846                           
 35847                           ;stkvar	_divisor @ sp[(-10)+-16]
 35848  01C506  0EED               	movlw	-19
 35849  01C508  AEE3               	btfss	plusw1,7,c
 35850  01C50A  D028               	goto	l10248
 35851                           
 35852                           ;stkvar	_divisor @ sp[(-10)+-16]
 35853                           ;stkvar	_divisor @ sp[(-10)+-16]
 35854  01C50C  0EE6               	movlw	-26
 35855  01C50E  6CE3               	negf	plusw1,c
 35856  01C510  0EE7               	movlw	-25
 35857  01C512  1EE3               	comf	plusw1,f,c
 35858  01C514  0EE8               	movlw	-24
 35859  01C516  1EE3               	comf	plusw1,f,c
 35860  01C518  0EE9               	movlw	-23
 35861  01C51A  1EE3               	comf	plusw1,f,c
 35862  01C51C  0EEA               	movlw	-22
 35863  01C51E  1EE3               	comf	plusw1,f,c
 35864  01C520  0EEB               	movlw	-21
 35865  01C522  1EE3               	comf	plusw1,f,c
 35866  01C524  0EEC               	movlw	-20
 35867  01C526  1EE3               	comf	plusw1,f,c
 35868  01C528  0EED               	movlw	-19
 35869  01C52A  1EE3               	comf	plusw1,f,c
 35870  01C52C  E314               	bnc	u8130
 35871  01C52E  0EE7               	movlw	-25
 35872  01C530  2AE3               	incf	plusw1,f,c
 35873  01C532  E311               	bnc	u8130
 35874  01C534  0EE8               	movlw	-24
 35875  01C536  2AE3               	incf	plusw1,f,c
 35876  01C538  E30E               	bnc	u8130
 35877  01C53A  0EE9               	movlw	-23
 35878  01C53C  2AE3               	incf	plusw1,f,c
 35879  01C53E  E30B               	bnc	u8130
 35880  01C540  0EEA               	movlw	-22
 35881  01C542  2AE3               	incf	plusw1,f,c
 35882  01C544  E308               	bnc	u8130
 35883  01C546  0EEB               	movlw	-21
 35884  01C548  2AE3               	incf	plusw1,f,c
 35885  01C54A  E305               	bnc	u8130
 35886  01C54C  0EEC               	movlw	-20
 35887  01C54E  2AE3               	incf	plusw1,f,c
 35888  01C550  E302               	bnc	u8130
 35889  01C552  0EED               	movlw	-19
 35890  01C554  2AE3               	incf	plusw1,f,c
 35891  01C556                     u8130:
 35892                           
 35893                           ;stkvar	_sign @ sp[(-10)+8]
 35894  01C556  0EFE               	movlw	-2
 35895  01C558  6AE3               	clrf	plusw1,c
 35896  01C55A  2AE3               	incf	plusw1,f,c
 35897  01C55C                     l10248:
 35898                           
 35899                           ;stkvar	_dividend @ sp[(-10)+-8]
 35900  01C55C  0EF5               	movlw	-11
 35901  01C55E  AEE3               	btfss	plusw1,7,c
 35902  01C560  D027               	goto	l10254
 35903                           
 35904                           ;stkvar	_dividend @ sp[(-10)+-8]
 35905                           ;stkvar	_dividend @ sp[(-10)+-8]
 35906  01C562  0EEE               	movlw	-18
 35907  01C564  6CE3               	negf	plusw1,c
 35908  01C566  0EEF               	movlw	-17
 35909  01C568  1EE3               	comf	plusw1,f,c
 35910  01C56A  0EF0               	movlw	-16
 35911  01C56C  1EE3               	comf	plusw1,f,c
 35912  01C56E  0EF1               	movlw	-15
 35913  01C570  1EE3               	comf	plusw1,f,c
 35914  01C572  0EF2               	movlw	-14
 35915  01C574  1EE3               	comf	plusw1,f,c
 35916  01C576  0EF3               	movlw	-13
 35917  01C578  1EE3               	comf	plusw1,f,c
 35918  01C57A  0EF4               	movlw	-12
 35919  01C57C  1EE3               	comf	plusw1,f,c
 35920  01C57E  0EF5               	movlw	-11
 35921  01C580  1EE3               	comf	plusw1,f,c
 35922  01C582  E314               	bnc	u8150
 35923  01C584  0EEF               	movlw	-17
 35924  01C586  2AE3               	incf	plusw1,f,c
 35925  01C588  E311               	bnc	u8150
 35926  01C58A  0EF0               	movlw	-16
 35927  01C58C  2AE3               	incf	plusw1,f,c
 35928  01C58E  E30E               	bnc	u8150
 35929  01C590  0EF1               	movlw	-15
 35930  01C592  2AE3               	incf	plusw1,f,c
 35931  01C594  E30B               	bnc	u8150
 35932  01C596  0EF2               	movlw	-14
 35933  01C598  2AE3               	incf	plusw1,f,c
 35934  01C59A  E308               	bnc	u8150
 35935  01C59C  0EF3               	movlw	-13
 35936  01C59E  2AE3               	incf	plusw1,f,c
 35937  01C5A0  E305               	bnc	u8150
 35938  01C5A2  0EF4               	movlw	-12
 35939  01C5A4  2AE3               	incf	plusw1,f,c
 35940  01C5A6  E302               	bnc	u8150
 35941  01C5A8  0EF5               	movlw	-11
 35942  01C5AA  2AE3               	incf	plusw1,f,c
 35943  01C5AC                     u8150:
 35944                           
 35945                           ;stkvar	_sign @ sp[(-10)+8]
 35946  01C5AC  0EFE               	movlw	-2
 35947  01C5AE  70E3               	btg	plusw1,0,c
 35948  01C5B0                     l10254:
 35949                           
 35950                           ;stkvar	_quotient @ sp[(-10)+0]
 35951  01C5B0  0E07               	movlw	7
 35952  01C5B2  6E2A               	movwf	btemp^0,c
 35953  01C5B4  0EF6               	movlw	-10
 35954  01C5B6                     u8161:
 35955  01C5B6  6AE3               	clrf	plusw1,c
 35956  01C5B8  2AE8               	incf	wreg,f,c
 35957  01C5BA  062A               	decf	btemp^0,f,c
 35958  01C5BC  E2FC               	bc	u8161
 35959                           
 35960                           ;stkvar	_divisor @ sp[(-10)+-16]
 35961  01C5BE  0EE6               	movlw	-26
 35962  01C5C0  50E3               	movf	plusw1,w,c
 35963  01C5C2  E116               	bnz	u8170
 35964  01C5C4  0EE7               	movlw	-25
 35965  01C5C6  50E3               	movf	plusw1,w,c
 35966  01C5C8  E113               	bnz	u8170
 35967  01C5CA  0EE8               	movlw	-24
 35968  01C5CC  50E3               	movf	plusw1,w,c
 35969  01C5CE  E110               	bnz	u8170
 35970  01C5D0  0EE9               	movlw	-23
 35971  01C5D2  50E3               	movf	plusw1,w,c
 35972  01C5D4  E10D               	bnz	u8170
 35973  01C5D6  0EEA               	movlw	-22
 35974  01C5D8  50E3               	movf	plusw1,w,c
 35975  01C5DA  E10A               	bnz	u8170
 35976  01C5DC  0EEB               	movlw	-21
 35977  01C5DE  50E3               	movf	plusw1,w,c
 35978  01C5E0  E107               	bnz	u8170
 35979  01C5E2  0EEC               	movlw	-20
 35980  01C5E4  50E3               	movf	plusw1,w,c
 35981  01C5E6  E104               	bnz	u8170
 35982  01C5E8  0EED               	movlw	-19
 35983  01C5EA  50E3               	movf	plusw1,w,c
 35984  01C5EC  B4D8               	btfsc	status,2,c
 35985  01C5EE  D088               	goto	u8200
 35986  01C5F0                     u8170:
 35987                           
 35988                           ;stkvar	_counter @ sp[(-10)+9]
 35989  01C5F0  0EFF               	movlw	-1
 35990  01C5F2  6AE3               	clrf	plusw1,c
 35991  01C5F4  D012               	goto	L41
 35992  01C5F6                     l10260:
 35993                           
 35994                           ;stkvar	_divisor @ sp[(-10)+-16]
 35995  01C5F6  90D8               	bcf	status,0,c
 35996  01C5F8  0EE6               	movlw	-26
 35997  01C5FA  36E3               	rlcf	plusw1,f,c
 35998  01C5FC  0EE7               	movlw	-25
 35999  01C5FE  36E3               	rlcf	plusw1,f,c
 36000  01C600  0EE8               	movlw	-24
 36001  01C602  36E3               	rlcf	plusw1,f,c
 36002  01C604  0EE9               	movlw	-23
 36003  01C606  36E3               	rlcf	plusw1,f,c
 36004  01C608  0EEA               	movlw	-22
 36005  01C60A  36E3               	rlcf	plusw1,f,c
 36006  01C60C  0EEB               	movlw	-21
 36007  01C60E  36E3               	rlcf	plusw1,f,c
 36008  01C610  0EEC               	movlw	-20
 36009  01C612  36E3               	rlcf	plusw1,f,c
 36010  01C614  0EED               	movlw	-19
 36011  01C616  36E3               	rlcf	plusw1,f,c
 36012                           
 36013                           ;stkvar	_counter @ sp[(-10)+9]
 36014  01C618  0EFF               	movlw	-1
 36015  01C61A                     L41:
 36016  01C61A  2AE3               	incf	plusw1,f,c
 36017                           
 36018                           ;stkvar	_divisor @ sp[(-10)+-16]
 36019  01C61C  0EED               	movlw	-19
 36020  01C61E  AEE3               	btfss	plusw1,7,c
 36021  01C620  D7EA               	goto	l10260
 36022  01C622                     u8180:
 36023                           
 36024                           ;stkvar	_quotient @ sp[(-10)+0]
 36025  01C622  90D8               	bcf	status,0,c
 36026  01C624  0EF6               	movlw	-10
 36027  01C626  36E3               	rlcf	plusw1,f,c
 36028  01C628  0EF7               	movlw	-9
 36029  01C62A  36E3               	rlcf	plusw1,f,c
 36030  01C62C  0EF8               	movlw	-8
 36031  01C62E  36E3               	rlcf	plusw1,f,c
 36032  01C630  0EF9               	movlw	-7
 36033  01C632  36E3               	rlcf	plusw1,f,c
 36034  01C634  0EFA               	movlw	-6
 36035  01C636  36E3               	rlcf	plusw1,f,c
 36036  01C638  0EFB               	movlw	-5
 36037  01C63A  36E3               	rlcf	plusw1,f,c
 36038  01C63C  0EFC               	movlw	-4
 36039  01C63E  36E3               	rlcf	plusw1,f,c
 36040  01C640  0EFD               	movlw	-3
 36041  01C642  36E3               	rlcf	plusw1,f,c
 36042                           
 36043                           ;stkvar	_divisor @ sp[(-10)+-16]
 36044                           ;stkvar	_dividend @ sp[(-10)+-8]
 36045  01C644  50E1               	movf	fsr1l,w,c
 36046  01C646  0FEE               	addlw	-18
 36047  01C648  6ED9               	movwf	fsr2l,c
 36048  01C64A  50E2               	movf	fsr1h,w,c
 36049  01C64C  6EDA               	movwf	fsr2h,c
 36050  01C64E  0EFF               	movlw	255
 36051  01C650  22DA               	addwfc	fsr2h,f,c
 36052  01C652  0EE6               	movlw	-26
 36053  01C654  50E3               	movf	plusw1,w,c
 36054  01C656  5CDE               	subwf	postinc2,w,c
 36055  01C658  0EE7               	movlw	-25
 36056  01C65A  50E3               	movf	plusw1,w,c
 36057  01C65C  58DE               	subwfb	postinc2,w,c
 36058  01C65E  0EE8               	movlw	-24
 36059  01C660  50E3               	movf	plusw1,w,c
 36060  01C662  58DE               	subwfb	postinc2,w,c
 36061  01C664  0EE9               	movlw	-23
 36062  01C666  50E3               	movf	plusw1,w,c
 36063  01C668  58DE               	subwfb	postinc2,w,c
 36064  01C66A  0EEA               	movlw	-22
 36065  01C66C  50E3               	movf	plusw1,w,c
 36066  01C66E  58DE               	subwfb	postinc2,w,c
 36067  01C670  0EEB               	movlw	-21
 36068  01C672  50E3               	movf	plusw1,w,c
 36069  01C674  58DE               	subwfb	postinc2,w,c
 36070  01C676  0EEC               	movlw	-20
 36071  01C678  50E3               	movf	plusw1,w,c
 36072  01C67A  58DE               	subwfb	postinc2,w,c
 36073  01C67C  0EED               	movlw	-19
 36074  01C67E  50E3               	movf	plusw1,w,c
 36075  01C680  58DE               	subwfb	postinc2,w,c
 36076  01C682  A0D8               	btfss	status,0,c
 36077  01C684  D021               	goto	l10272
 36078                           
 36079                           ;stkvar	_divisor @ sp[(-10)+-16]
 36080                           ;stkvar	_dividend @ sp[(-10)+-8]
 36081  01C686  50E1               	movf	fsr1l,w,c
 36082  01C688  0FEE               	addlw	-18
 36083  01C68A  6ED9               	movwf	fsr2l,c
 36084  01C68C  50E2               	movf	fsr1h,w,c
 36085  01C68E  6EDA               	movwf	fsr2h,c
 36086  01C690  0EFF               	movlw	255
 36087  01C692  22DA               	addwfc	fsr2h,f,c
 36088  01C694  0EE6               	movlw	-26
 36089  01C696  50E3               	movf	plusw1,w,c
 36090  01C698  5EDE               	subwf	postinc2,f,c
 36091  01C69A  0EE7               	movlw	-25
 36092  01C69C  50E3               	movf	plusw1,w,c
 36093  01C69E  5ADE               	subwfb	postinc2,f,c
 36094  01C6A0  0EE8               	movlw	-24
 36095  01C6A2  50E3               	movf	plusw1,w,c
 36096  01C6A4  5ADE               	subwfb	postinc2,f,c
 36097  01C6A6  0EE9               	movlw	-23
 36098  01C6A8  50E3               	movf	plusw1,w,c
 36099  01C6AA  5ADE               	subwfb	postinc2,f,c
 36100  01C6AC  0EEA               	movlw	-22
 36101  01C6AE  50E3               	movf	plusw1,w,c
 36102  01C6B0  5ADE               	subwfb	postinc2,f,c
 36103  01C6B2  0EEB               	movlw	-21
 36104  01C6B4  50E3               	movf	plusw1,w,c
 36105  01C6B6  5ADE               	subwfb	postinc2,f,c
 36106  01C6B8  0EEC               	movlw	-20
 36107  01C6BA  50E3               	movf	plusw1,w,c
 36108  01C6BC  5ADE               	subwfb	postinc2,f,c
 36109  01C6BE  0EED               	movlw	-19
 36110  01C6C0  50E3               	movf	plusw1,w,c
 36111  01C6C2  5ADE               	subwfb	postinc2,f,c
 36112                           
 36113                           ;stkvar	_quotient @ sp[(-10)+0]
 36114  01C6C4  0EF6               	movlw	-10
 36115  01C6C6  80E3               	bsf	plusw1,0,c
 36116  01C6C8                     l10272:
 36117                           
 36118                           ;stkvar	_divisor @ sp[(-10)+-16]
 36119  01C6C8  90D8               	bcf	status,0,c
 36120  01C6CA  0EED               	movlw	-19
 36121  01C6CC  32E3               	rrcf	plusw1,f,c
 36122  01C6CE  0EEC               	movlw	-20
 36123  01C6D0  32E3               	rrcf	plusw1,f,c
 36124  01C6D2  0EEB               	movlw	-21
 36125  01C6D4  32E3               	rrcf	plusw1,f,c
 36126  01C6D6  0EEA               	movlw	-22
 36127  01C6D8  32E3               	rrcf	plusw1,f,c
 36128  01C6DA  0EE9               	movlw	-23
 36129  01C6DC  32E3               	rrcf	plusw1,f,c
 36130  01C6DE  0EE8               	movlw	-24
 36131  01C6E0  32E3               	rrcf	plusw1,f,c
 36132  01C6E2  0EE7               	movlw	-25
 36133  01C6E4  32E3               	rrcf	plusw1,f,c
 36134  01C6E6  0EE6               	movlw	-26
 36135  01C6E8  32E3               	rrcf	plusw1,f,c
 36136                           
 36137                           ;stkvar	_counter @ sp[(-10)+9]
 36138  01C6EA  0EFF               	movlw	-1
 36139  01C6EC  50E3               	movf	plusw1,w,c
 36140  01C6EE  6E2A               	movwf	btemp^0,c
 36141  01C6F0  0E01               	movlw	1
 36142  01C6F2  5E2A               	subwf	btemp^0,f,c
 36143  01C6F4  0EFF               	movlw	-1
 36144  01C6F6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36145  01C6FC  A4D8               	btfss	status,2,c
 36146  01C6FE  D791               	goto	u8180
 36147  01C700                     u8200:
 36148                           
 36149                           ;stkvar	_sign @ sp[(-10)+8]
 36150  01C700  0EFE               	movlw	-2
 36151  01C702  50E3               	movf	plusw1,w,c
 36152  01C704  B4D8               	btfsc	status,2,c
 36153  01C706  D025               	goto	u8220
 36154                           
 36155                           ;stkvar	_quotient @ sp[(-10)+0]
 36156                           ;stkvar	_quotient @ sp[(-10)+0]
 36157  01C708  0EF6               	movlw	-10
 36158  01C70A  6CE3               	negf	plusw1,c
 36159  01C70C  0EF7               	movlw	-9
 36160  01C70E  1EE3               	comf	plusw1,f,c
 36161  01C710  0EF8               	movlw	-8
 36162  01C712  1EE3               	comf	plusw1,f,c
 36163  01C714  0EF9               	movlw	-7
 36164  01C716  1EE3               	comf	plusw1,f,c
 36165  01C718  0EFA               	movlw	-6
 36166  01C71A  1EE3               	comf	plusw1,f,c
 36167  01C71C  0EFB               	movlw	-5
 36168  01C71E  1EE3               	comf	plusw1,f,c
 36169  01C720  0EFC               	movlw	-4
 36170  01C722  1EE3               	comf	plusw1,f,c
 36171  01C724  0EFD               	movlw	-3
 36172  01C726  1EE3               	comf	plusw1,f,c
 36173  01C728  E314               	bnc	u8220
 36174  01C72A  0EF7               	movlw	-9
 36175  01C72C  2AE3               	incf	plusw1,f,c
 36176  01C72E  E311               	bnc	u8220
 36177  01C730  0EF8               	movlw	-8
 36178  01C732  2AE3               	incf	plusw1,f,c
 36179  01C734  E30E               	bnc	u8220
 36180  01C736  0EF9               	movlw	-7
 36181  01C738  2AE3               	incf	plusw1,f,c
 36182  01C73A  E30B               	bnc	u8220
 36183  01C73C  0EFA               	movlw	-6
 36184  01C73E  2AE3               	incf	plusw1,f,c
 36185  01C740  E308               	bnc	u8220
 36186  01C742  0EFB               	movlw	-5
 36187  01C744  2AE3               	incf	plusw1,f,c
 36188  01C746  E305               	bnc	u8220
 36189  01C748  0EFC               	movlw	-4
 36190  01C74A  2AE3               	incf	plusw1,f,c
 36191  01C74C  E302               	bnc	u8220
 36192  01C74E  0EFD               	movlw	-3
 36193  01C750  2AE3               	incf	plusw1,f,c
 36194  01C752                     u8220:
 36195                           
 36196                           ;stkvar	_quotient @ sp[(-10)+0]
 36197  01C752  0EF6               	movlw	246
 36198  01C754  24E1               	addwf	fsr1l,w,c
 36199  01C756  6ED9               	movwf	fsr2l,c
 36200  01C758  0EFF               	movlw	255
 36201  01C75A  20E2               	addwfc	fsr1h,w,c
 36202  01C75C  6EDA               	movwf	fsr2h,c
 36203                           
 36204                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 36205  01C75E  0E08               	movlw	8
 36206  01C760  6E2A               	movwf	btemp^0,c
 36207  01C762  0EEE               	movlw	-18
 36208  01C764                     us823999:
 36209  01C764  006F FF7B FFE3     	movff	postinc2,plusw1
 36210  01C76A  28E8               	incf	wreg,w,c
 36211  01C76C  2E2A               	decfsz	btemp^0,f,c
 36212  01C76E  D7FA               	bra	us823999
 36213                           
 36214                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 36215  01C770  0EF6               	movlw	246
 36216  01C772  26E1               	addwf	fsr1l,f,c
 36217  01C774  0EFF               	movlw	255
 36218  01C776  22E2               	addwfc	fsr1h,f,c
 36219  01C778  0012               	return		;funcret
 36220  01C77A                     __end_of___aodiv:
 36221                           	opt callstack 0
 36222                           
 36223 ;; *************** function _ctoa *****************
 36224 ;; Defined at:
 36225 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36226 ;; Parameters:    Size  Location     Type
 36227 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36228 ;;		 -> f(6), NULL(0), 
 36229 ;;  c               1  [STACK] unsigned char 
 36230 ;; Auto vars:     Size  Location     Type
 36231 ;;  w               2  [STACK] int 
 36232 ;;  l               2    0        int 
 36233 ;; Return value:  Size  Location     Type
 36234 ;;                  2  [STACK] int 
 36235 ;; Registers used:
 36236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36237 ;; Tracked objects:
 36238 ;;		On entry : 0/0
 36239 ;;		On exit  : 0/0
 36240 ;;		Unchanged: 0/0
 36241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36246 ;;Total ram usage:        0 bytes
 36247 ;; Hardware stack levels used:    1
 36248 ;; Hardware stack levels required when called:   20
 36249 ;; This function calls:
 36250 ;;		_pad
 36251 ;; This function is called by:
 36252 ;;		_vfpfcnvrt
 36253 ;; This function uses a reentrant model
 36254 ;;
 36255                           
 36256                           	psect	text118
 36257  001374                     __ptext118:
 36258                           	opt callstack 0
 36259  001374                     _ctoa:
 36260                           	opt callstack 0
 36261                           
 36262                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36263  001374  52E6               	movf	postinc1,f,c
 36264  001376  52E6               	movf	postinc1,f,c
 36265                           
 36266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 36267                           
 36268                           ;incstack = 0
 36269 ;; hardware stack exceeded
 36270  001378  504A               	movf	_width^0,w,c
 36271  00137A  104B               	iorwf	(_width+1)^0,w,c
 36272  00137C  A4D8               	btfss	status,2,c
 36273  00137E  D009               	goto	l15580
 36274                           
 36275                           ;stkvar	_w @ sp[(-2)+0]
 36276  001380  0EFE               	movlw	-2
 36277  001382  0060  F12B  FFE3   	movff	_width,plusw1
 36278  001388  0EFF               	movlw	-1
 36279  00138A  0060  F12F  FFE3   	movff	_width+1,plusw1
 36280  001390  D016               	goto	l15582
 36281  001392                     l15580:
 36282  001392  0EFF               	movlw	255
 36283  001394  6E34               	movwf	(btemp+10)^0,c
 36284  001396  0EFF               	movlw	255
 36285  001398  6E35               	movwf	(btemp+11)^0,c
 36286  00139A  0060  F128  F032   	movff	_width,btemp+8
 36287  0013A0  0060  F12C  F033   	movff	_width+1,btemp+9
 36288  0013A6  5034               	movf	(btemp+10)^0,w,c
 36289  0013A8  2632               	addwf	(btemp+8)^0,f,c
 36290  0013AA  5035               	movf	(btemp+11)^0,w,c
 36291  0013AC  2233               	addwfc	(btemp+9)^0,f,c
 36292                           
 36293                           ;stkvar	_w @ sp[(-2)+0]
 36294  0013AE  0EFE               	movlw	-2
 36295  0013B0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 36296  0013B6  0EFF               	movlw	-1
 36297  0013B8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 36298  0013BE                     l15582:
 36299                           
 36300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 36301                           ;stkvar	_c @ sp[(-2)+-3]
 36302  0013BE  0EFB               	movlw	-5
 36303  0013C0  006F FF8C  F354    	movff	plusw1,_dbuf
 36304                           
 36305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 36306  0013C6  0103               	movlb	3	; () banked
 36307  0013C8  6B55               	clrf	(_dbuf+1)& (0+255),b
 36308                           
 36309                           ; BSR set to: 3
 36310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 36311                           ;stkvar	_w @ sp[(-2)+0]
 36312  0013CA  0EFE               	movlw	-2
 36313  0013CC  006F FF8F FFE6     	movff	plusw1,postinc1
 36314  0013D2  006F FF8F FFE6     	movff	plusw1,postinc1
 36315  0013D8  0E54               	movlw	low _dbuf
 36316  0013DA  6EE6               	movwf	postinc1,c
 36317  0013DC  0E03               	movlw	high _dbuf
 36318  0013DE  6EE6               	movwf	postinc1,c
 36319                           
 36320                           ;stkvar	_fp @ sp[(-6)+-2]
 36321  0013E0  0EF8               	movlw	-8
 36322  0013E2  006F FF8F FFE6     	movff	plusw1,postinc1
 36323  0013E8  006F FF8F FFE6     	movff	plusw1,postinc1
 36324  0013EE  EC5B  F0FE         	call	_pad	;wreg free
 36325                           
 36326                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 36327  0013F2  0EFB               	movlw	251
 36328  0013F4  26E1               	addwf	fsr1l,f,c
 36329  0013F6  0EFF               	movlw	255
 36330  0013F8  22E2               	addwfc	fsr1h,f,c
 36331  0013FA  0012               	return		;funcret
 36332  0013FC                     __end_of_ctoa:
 36333                           	opt callstack 0
 36334                           
 36335 ;; *************** function _pad *****************
 36336 ;; Defined at:
 36337 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 36338 ;; Parameters:    Size  Location     Type
 36339 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36340 ;;		 -> f(6), NULL(0), 
 36341 ;;  buf             2  [STACK] PTR unsigned char 
 36342 ;;		 -> dbuf(80), 
 36343 ;;  p               2  [STACK] int 
 36344 ;; Auto vars:     Size  Location     Type
 36345 ;;  w               2  [STACK] int 
 36346 ;;  i               2  [STACK] int 
 36347 ;; Return value:  Size  Location     Type
 36348 ;;                  2  [STACK] int 
 36349 ;; Registers used:
 36350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 36351 ;; Tracked objects:
 36352 ;;		On entry : 0/3
 36353 ;;		On exit  : 0/0
 36354 ;;		Unchanged: 0/0
 36355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36360 ;;Total ram usage:        0 bytes
 36361 ;; Hardware stack levels used:    1
 36362 ;; Hardware stack levels required when called:   19
 36363 ;; This function calls:
 36364 ;;		_fputc
 36365 ;;		_fputs
 36366 ;;		_strlen
 36367 ;; This function is called by:
 36368 ;;		_ctoa
 36369 ;;		_dtoa
 36370 ;;		_efgtoa
 36371 ;;		_utoa
 36372 ;;		_xtoa
 36373 ;; This function uses a reentrant model
 36374 ;;
 36375                           
 36376                           	psect	text119
 36377  01FCB6                     __ptext119:
 36378                           	opt callstack 0
 36379  01FCB6                     _pad:
 36380                           	opt callstack 0
 36381                           
 36382                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36383  01FCB6  52E6               	movf	postinc1,f,c
 36384  01FCB8  52E6               	movf	postinc1,f,c
 36385  01FCBA  52E6               	movf	postinc1,f,c
 36386  01FCBC  52E6               	movf	postinc1,f,c
 36387                           
 36388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 36389                           
 36390                           ;incstack = 0
 36391 ;; hardware stack exceeded
 36392  01FCBE  A04E               	btfss	_flags^0,0,c
 36393  01FCC0  D010               	goto	l15464
 36394                           
 36395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 36396                           ;stkvar	_fp @ sp[(-4)+-2]
 36397  01FCC2  0EFA               	movlw	-6
 36398  01FCC4  006F FF8F FFE6     	movff	plusw1,postinc1
 36399  01FCCA  006F FF8F FFE6     	movff	plusw1,postinc1
 36400                           
 36401                           ;stkvar	_buf @ sp[(-6)+-4]
 36402  01FCD0  0EF6               	movlw	-10
 36403  01FCD2  006F FF8F FFE6     	movff	plusw1,postinc1
 36404  01FCD8  006F FF8F FFE6     	movff	plusw1,postinc1
 36405  01FCDE  EC01  F008         	call	_fputs	;wreg free
 36406  01FCE2                     l15464:
 36407                           
 36408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 36409                           ;stkvar	_p @ sp[(-4)+-6]
 36410  01FCE2  0EF7               	movlw	-9
 36411  01FCE4  BEE3               	btfsc	plusw1,7,c
 36412  01FCE6  D011               	goto	l15468
 36413                           
 36414                           ;stkvar	_p @ sp[(-4)+-6]
 36415                           ;stkvar	_w @ sp[(-4)+0]
 36416  01FCE8  0EF6               	movlw	-10
 36417  01FCEA  006F FF8C  F02A    	movff	plusw1,btemp
 36418  01FCF0  0EFC               	movlw	-4
 36419  01FCF2  0060  F0AB  FFE3   	movff	btemp,plusw1
 36420  01FCF8  0EF7               	movlw	-9
 36421  01FCFA  006F FF8C  F02A    	movff	plusw1,btemp
 36422  01FD00  0EFD               	movlw	-3
 36423  01FD02  0060  F0AB  FFE3   	movff	btemp,plusw1
 36424  01FD08  D004               	goto	l2471
 36425  01FD0A                     l15468:
 36426                           
 36427                           ;stkvar	_w @ sp[(-4)+0]
 36428  01FD0A  0EFC               	movlw	-4
 36429  01FD0C  6AE3               	clrf	plusw1,c
 36430  01FD0E  0EFD               	movlw	-3
 36431  01FD10  6AE3               	clrf	plusw1,c
 36432  01FD12                     l2471:
 36433                           
 36434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 36435                           ;stkvar	_i @ sp[(-4)+2]
 36436  01FD12  0EFE               	movlw	-2
 36437  01FD14  6AE3               	clrf	plusw1,c
 36438  01FD16  0EFF               	movlw	-1
 36439  01FD18  6AE3               	clrf	plusw1,c
 36440                           
 36441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36442  01FD1A  D01E               	goto	l15474
 36443  01FD1C                     l15470:
 36444                           
 36445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 36446                           ;stkvar	_fp @ sp[(-4)+-2]
 36447  01FD1C  0EFA               	movlw	-6
 36448  01FD1E  006F FF8F FFE6     	movff	plusw1,postinc1
 36449  01FD24  006F FF8F FFE6     	movff	plusw1,postinc1
 36450  01FD2A  0E20               	movlw	32
 36451  01FD2C  6EE6               	movwf	postinc1,c
 36452  01FD2E  0E00               	movlw	0
 36453  01FD30  6EE6               	movwf	postinc1,c
 36454  01FD32  EC24  F0FC         	call	_fputc	;wreg free
 36455                           
 36456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 36457                           ;stkvar	_i @ sp[(-4)+2]
 36458  01FD36  0EFE               	movlw	-2
 36459  01FD38  50E3               	movf	plusw1,w,c
 36460  01FD3A  0F01               	addlw	1
 36461  01FD3C  6E2A               	movwf	btemp^0,c
 36462  01FD3E  0EFE               	movlw	-2
 36463  01FD40  0060  F0AB  FFE3   	movff	btemp,plusw1
 36464  01FD46  6A2A               	clrf	btemp^0,c
 36465  01FD48  0EFF               	movlw	-1
 36466  01FD4A  50E3               	movf	plusw1,w,c
 36467  01FD4C  202A               	addwfc	btemp^0,w,c
 36468  01FD4E  6E2A               	movwf	btemp^0,c
 36469  01FD50  0EFF               	movlw	-1
 36470  01FD52  0060  F0AB  FFE3   	movff	btemp,plusw1
 36471  01FD58                     l15474:
 36472                           
 36473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 36474                           ;stkvar	_w @ sp[(-4)+0]
 36475                           ;stkvar	_i @ sp[(-4)+2]
 36476  01FD58  50E1               	movf	fsr1l,w,c
 36477  01FD5A  0FFE               	addlw	-2
 36478  01FD5C  6ED9               	movwf	fsr2l,c
 36479  01FD5E  50E2               	movf	fsr1h,w,c
 36480  01FD60  6EDA               	movwf	fsr2h,c
 36481  01FD62  0EFF               	movlw	255
 36482  01FD64  22DA               	addwfc	fsr2h,f,c
 36483  01FD66  0EFC               	movlw	-4
 36484  01FD68  50E3               	movf	plusw1,w,c
 36485  01FD6A  5CDE               	subwf	postinc2,w,c
 36486  01FD6C  50DE               	movf	postinc2,w,c
 36487  01FD6E  0A80               	xorlw	128
 36488  01FD70  6E2A               	movwf	btemp^0,c
 36489  01FD72  0EFD               	movlw	-3
 36490  01FD74  50E3               	movf	plusw1,w,c
 36491  01FD76  0A80               	xorlw	128
 36492  01FD78  582A               	subwfb	btemp^0,w,c
 36493  01FD7A  A0D8               	btfss	status,0,c
 36494  01FD7C  D7CF               	goto	l15470
 36495                           
 36496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 36497  01FD7E  B04E               	btfsc	_flags^0,0,c
 36498  01FD80  D010               	goto	l15478
 36499                           
 36500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 36501                           ;stkvar	_fp @ sp[(-4)+-2]
 36502  01FD82  0EFA               	movlw	-6
 36503  01FD84  006F FF8F FFE6     	movff	plusw1,postinc1
 36504  01FD8A  006F FF8F FFE6     	movff	plusw1,postinc1
 36505                           
 36506                           ;stkvar	_buf @ sp[(-6)+-4]
 36507  01FD90  0EF6               	movlw	-10
 36508  01FD92  006F FF8F FFE6     	movff	plusw1,postinc1
 36509  01FD98  006F FF8F FFE6     	movff	plusw1,postinc1
 36510  01FD9E  EC01  F008         	call	_fputs	;wreg free
 36511  01FDA2                     l15478:
 36512                           
 36513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 36514                           ;stkvar	_w @ sp[(-4)+0]
 36515                           ;stkvar	_buf @ sp[(-4)+-4]
 36516  01FDA2  0EF8               	movlw	-8
 36517  01FDA4  006F FF8F FFE6     	movff	plusw1,postinc1
 36518  01FDAA  006F FF8F FFE6     	movff	plusw1,postinc1
 36519  01FDB0  EC63  F007         	call	_strlen	;wreg free
 36520  01FDB4  0EFC               	movlw	-4
 36521  01FDB6  50E3               	movf	plusw1,w,c
 36522  01FDB8  262A               	addwf	btemp^0,f,c
 36523  01FDBA  0EFD               	movlw	-3
 36524  01FDBC  50E3               	movf	plusw1,w,c
 36525  01FDBE  222B               	addwfc	(btemp+1)^0,f,c
 36526                           
 36527                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 36528  01FDC0  0EF6               	movlw	246
 36529  01FDC2  26E1               	addwf	fsr1l,f,c
 36530  01FDC4  0EFF               	movlw	255
 36531  01FDC6  22E2               	addwfc	fsr1h,f,c
 36532  01FDC8  0012               	return		;funcret
 36533  01FDCA                     __end_of_pad:
 36534                           	opt callstack 0
 36535                           
 36536 ;; *************** function _strlen *****************
 36537 ;; Defined at:
 36538 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 36539 ;; Parameters:    Size  Location     Type
 36540 ;;  s               2  [STACK] PTR const unsigned char 
 36541 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36542 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 36543 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36544 ;;		 -> STR_3(5), V(181), 
 36545 ;; Auto vars:     Size  Location     Type
 36546 ;;  a               2  [STACK] PTR const unsigned char 
 36547 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 36548 ;;		 -> dbuf(80), spin(120), STR_76(9), STR_75(12), 
 36549 ;;		 -> D.lcd(640), D(642), T(176), port_data(512), 
 36550 ;;		 -> STR_3(5), V(181), 
 36551 ;; Return value:  Size  Location     Type
 36552 ;;                  2  [STACK] unsigned int 
 36553 ;; Registers used:
 36554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 36555 ;; Tracked objects:
 36556 ;;		On entry : 0/0
 36557 ;;		On exit  : 0/0
 36558 ;;		Unchanged: 0/0
 36559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36564 ;;Total ram usage:        0 bytes
 36565 ;; Hardware stack levels used:    1
 36566 ;; Hardware stack levels required when called:   15
 36567 ;; This function calls:
 36568 ;;		Nothing
 36569 ;; This function is called by:
 36570 ;;		_eaDogM_WriteString
 36571 ;;		_spinners
 36572 ;;		_calc_bsoc
 36573 ;;		_pad
 36574 ;;		_stoa
 36575 ;; This function uses a reentrant model
 36576 ;;
 36577                           
 36578                           	psect	text120
 36579  000EC6                     __ptext120:
 36580                           	opt callstack 0
 36581  000EC6                     _strlen:
 36582                           	opt callstack 0
 36583                           
 36584                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36585  000EC6  52E6               	movf	postinc1,f,c
 36586  000EC8  52E6               	movf	postinc1,f,c
 36587                           
 36588                           ;stkvar	_s @ sp[(-2)+-2]
 36589                           
 36590                           ;incstack = 0
 36591 ;; hardware stack exceeded
 36592  000ECA  0EFC               	movlw	-4
 36593  000ECC  006F FF8C  F034    	movff	plusw1,btemp+10
 36594  000ED2  0EFD               	movlw	-3
 36595  000ED4  006F FF8C  F035    	movff	plusw1,btemp+11
 36596                           
 36597                           ;stkvar	_a @ sp[(-2)+0]
 36598  000EDA  0EFF               	movlw	-1
 36599  000EDC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36600  000EE2  0EFE               	movlw	-2
 36601  000EE4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 36602  000EEA  D011               	goto	l15404
 36603  000EEC                     l15402:
 36604                           
 36605                           ;stkvar	_s @ sp[(-2)+-2]
 36606  000EEC  0EFC               	movlw	-4
 36607  000EEE  50E3               	movf	plusw1,w,c
 36608  000EF0  0F01               	addlw	1
 36609  000EF2  6E2A               	movwf	btemp^0,c
 36610  000EF4  0EFC               	movlw	-4
 36611  000EF6  0060  F0AB  FFE3   	movff	btemp,plusw1
 36612  000EFC  6A2A               	clrf	btemp^0,c
 36613  000EFE  0EFD               	movlw	-3
 36614  000F00  50E3               	movf	plusw1,w,c
 36615  000F02  202A               	addwfc	btemp^0,w,c
 36616  000F04  6E2A               	movwf	btemp^0,c
 36617  000F06  0EFD               	movlw	-3
 36618  000F08  0060  F0AB  FFE3   	movff	btemp,plusw1
 36619  000F0E                     l15404:
 36620                           
 36621                           ;stkvar	_s @ sp[(-2)+-2]
 36622  000F0E  0EFC               	movlw	-4
 36623  000F10  006F FF8F FFF6     	movff	plusw1,tblptrl
 36624  000F16  0EFD               	movlw	-3
 36625  000F18  006F FF8F FFF7     	movff	plusw1,tblptrh
 36626  000F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 36627  000F20  6EF8               	movwf	tblptru,c
 36628  000F22  0E1F               	movlw	(high __ramtop+-1)
 36629  000F24  64F7               	cpfsgt	tblptrh,c
 36630  000F26  D003               	bra	u14287
 36631  000F28  0008               	tblrd		*
 36632  000F2A  50F5               	movf	tablat,w,c
 36633  000F2C  D007               	bra	u14280
 36634  000F2E                     u14287:
 36635  000F2E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 36636  000F34  006F FFDF FFEA     	movff	tblptrh,fsr0h
 36637  000F3A  50EF               	movf	indf0,w,c
 36638  000F3C                     u14280:
 36639  000F3C  0900               	iorlw	0
 36640  000F3E  A4D8               	btfss	status,2,c
 36641  000F40  D7D5               	goto	l15402
 36642                           
 36643                           ;stkvar	_a @ sp[(-2)+0]
 36644                           ;stkvar	_s @ sp[(-2)+-2]
 36645  000F42  0EFC               	movlw	-4
 36646  000F44  006F FF8C  F02A    	movff	plusw1,btemp
 36647  000F4A  0EFD               	movlw	-3
 36648  000F4C  006F FF8C  F02B    	movff	plusw1,btemp+1
 36649  000F52  0EFE               	movlw	-2
 36650  000F54  50E3               	movf	plusw1,w,c
 36651  000F56  5E2A               	subwf	btemp^0,f,c
 36652  000F58  0EFF               	movlw	-1
 36653  000F5A  50E3               	movf	plusw1,w,c
 36654  000F5C  5A2B               	subwfb	(btemp+1)^0,f,c
 36655                           
 36656                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 36657  000F5E  52E5               	movf	postdec1,f,c
 36658  000F60  52E5               	movf	postdec1,f,c
 36659  000F62  52E5               	movf	postdec1,f,c
 36660  000F64  52E5               	movf	postdec1,f,c
 36661  000F66  0012               	return		;funcret
 36662  000F68                     __end_of_strlen:
 36663                           	opt callstack 0
 36664                           
 36665 ;; *************** function _fputs *****************
 36666 ;; Defined at:
 36667 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 36668 ;; Parameters:    Size  Location     Type
 36669 ;;  s               2  [STACK] PTR const unsigned char 
 36670 ;;		 -> dbuf(80), 
 36671 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36672 ;;		 -> f(6), NULL(0), 
 36673 ;; Auto vars:     Size  Location     Type
 36674 ;;  i               2  [STACK] int 
 36675 ;;  c               1  [STACK] unsigned char 
 36676 ;; Return value:  Size  Location     Type
 36677 ;;                  2  [STACK] int 
 36678 ;; Registers used:
 36679 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36680 ;; Tracked objects:
 36681 ;;		On entry : 0/3
 36682 ;;		On exit  : 0/0
 36683 ;;		Unchanged: 0/0
 36684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36689 ;;Total ram usage:        0 bytes
 36690 ;; Hardware stack levels used:    1
 36691 ;; Hardware stack levels required when called:   18
 36692 ;; This function calls:
 36693 ;;		_fputc
 36694 ;; This function is called by:
 36695 ;;		_pad
 36696 ;; This function uses a reentrant model
 36697 ;;
 36698                           
 36699                           	psect	text121
 36700  001002                     __ptext121:
 36701                           	opt callstack 0
 36702  001002                     _fputs:
 36703                           	opt callstack 0
 36704                           
 36705                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36706  001002  52E6               	movf	postinc1,f,c
 36707  001004  52E6               	movf	postinc1,f,c
 36708  001006  52E6               	movf	postinc1,f,c
 36709                           
 36710                           ;stkvar	_i @ sp[(-3)+0]
 36711                           
 36712                           ;incstack = 0
 36713 ;; hardware stack exceeded
 36714  001008  0EFD               	movlw	-3
 36715  00100A  6AE3               	clrf	plusw1,c
 36716  00100C  0EFE               	movlw	-2
 36717  00100E  6AE3               	clrf	plusw1,c
 36718  001010  D01F               	goto	l15416
 36719  001012                     l15412:
 36720                           
 36721                           ;stkvar	_fp @ sp[(-3)+-4]
 36722  001012  0EF9               	movlw	-7
 36723  001014  006F FF8F FFE6     	movff	plusw1,postinc1
 36724  00101A  006F FF8F FFE6     	movff	plusw1,postinc1
 36725                           
 36726                           ;stkvar	_c @ sp[(-5)+2]
 36727  001020  0EFD               	movlw	-3
 36728  001022  50E3               	movf	plusw1,w,c
 36729  001024  6EE6               	movwf	postinc1,c
 36730  001026  0E00               	movlw	0
 36731  001028  6EE6               	movwf	postinc1,c
 36732  00102A  EC24  F0FC         	call	_fputc	;wreg free
 36733                           
 36734                           ;stkvar	_i @ sp[(-3)+0]
 36735  00102E  0EFD               	movlw	-3
 36736  001030  50E3               	movf	plusw1,w,c
 36737  001032  0F01               	addlw	1
 36738  001034  6E2A               	movwf	btemp^0,c
 36739  001036  0EFD               	movlw	-3
 36740  001038  0060  F0AB  FFE3   	movff	btemp,plusw1
 36741  00103E  6A2A               	clrf	btemp^0,c
 36742  001040  0EFE               	movlw	-2
 36743  001042  50E3               	movf	plusw1,w,c
 36744  001044  202A               	addwfc	btemp^0,w,c
 36745  001046  6E2A               	movwf	btemp^0,c
 36746  001048  0EFE               	movlw	-2
 36747  00104A  0060  F0AB  FFE3   	movff	btemp,plusw1
 36748  001050                     l15416:
 36749                           
 36750                           ;stkvar	_i @ sp[(-3)+0]
 36751  001050  0EFD               	movlw	-3
 36752  001052  006F FF8C  F034    	movff	plusw1,btemp+10
 36753  001058  0EFE               	movlw	-2
 36754  00105A  006F FF8C  F035    	movff	plusw1,btemp+11
 36755                           
 36756                           ;stkvar	_s @ sp[(-3)+-2]
 36757  001060  0EFB               	movlw	-5
 36758  001062  006F FF8C  F032    	movff	plusw1,btemp+8
 36759  001068  0EFC               	movlw	-4
 36760  00106A  006F FF8C  F033    	movff	plusw1,btemp+9
 36761  001070  5034               	movf	(btemp+10)^0,w,c
 36762  001072  2432               	addwf	(btemp+8)^0,w,c
 36763  001074  6ED9               	movwf	fsr2l,c
 36764  001076  5035               	movf	(btemp+11)^0,w,c
 36765  001078  2033               	addwfc	(btemp+9)^0,w,c
 36766  00107A  6EDA               	movwf	fsr2h,c
 36767  00107C  50DF               	movf	indf2,w,c
 36768  00107E  6E35               	movwf	(btemp+11)^0,c
 36769                           
 36770                           ;stkvar	_c @ sp[(-3)+2]
 36771  001080  0EFF               	movlw	-1
 36772  001082  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 36773  001088  0EFF               	movlw	-1
 36774  00108A  50E3               	movf	plusw1,w,c
 36775  00108C  A4D8               	btfss	status,2,c
 36776  00108E  D7C1               	goto	l15412
 36777                           
 36778                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36779  001090  0EF9               	movlw	249
 36780  001092  26E1               	addwf	fsr1l,f,c
 36781  001094  0EFF               	movlw	255
 36782  001096  22E2               	addwfc	fsr1h,f,c
 36783  001098  0012               	return		;funcret
 36784  00109A                     __end_of_fputs:
 36785                           	opt callstack 0
 36786                           
 36787 ;; *************** function _fputc *****************
 36788 ;; Defined at:
 36789 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 36790 ;; Parameters:    Size  Location     Type
 36791 ;;  c               2  [STACK] int 
 36792 ;;  fp              2  [STACK] PTR struct _IO_FILE
 36793 ;;		 -> f(6), NULL(0), 
 36794 ;; Auto vars:     Size  Location     Type
 36795 ;;		None
 36796 ;; Return value:  Size  Location     Type
 36797 ;;                  2  [STACK] int 
 36798 ;; Registers used:
 36799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 36800 ;; Tracked objects:
 36801 ;;		On entry : 0/0
 36802 ;;		On exit  : 0/0
 36803 ;;		Unchanged: 0/0
 36804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36809 ;;Total ram usage:        0 bytes
 36810 ;; Hardware stack levels used:    1
 36811 ;; Hardware stack levels required when called:   17
 36812 ;; This function calls:
 36813 ;;		_putch
 36814 ;; This function is called by:
 36815 ;;		_pad
 36816 ;;		_stoa
 36817 ;;		_vfpfcnvrt
 36818 ;;		_fputs
 36819 ;; This function uses a reentrant model
 36820 ;;
 36821                           
 36822                           	psect	text122
 36823  01F848                     __ptext122:
 36824                           	opt callstack 0
 36825  01F848                     _fputc:
 36826                           	opt callstack 0
 36827                           
 36828                           ;stkvar	_fp @ sp[(0)+-4]
 36829                           
 36830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36831                           ;incstack = 0
 36832 ;; hardware stack exceeded
 36833  01F848  0EFC               	movlw	-4
 36834  01F84A  006F FF8C  F02A    	movff	plusw1,btemp
 36835  01F850  0EFD               	movlw	-3
 36836  01F852  50E3               	movf	plusw1,w,c
 36837  01F854  102A               	iorwf	btemp^0,w,c
 36838  01F856  B4D8               	btfsc	status,2,c
 36839  01F858  D009               	goto	u14250
 36840                           
 36841                           ;stkvar	_fp @ sp[(0)+-4]
 36842  01F85A  0EFC               	movlw	-4
 36843  01F85C  006F FF8C  F02A    	movff	plusw1,btemp
 36844  01F862  0EFD               	movlw	-3
 36845  01F864  50E3               	movf	plusw1,w,c
 36846  01F866  102A               	iorwf	btemp^0,w,c
 36847  01F868  A4D8               	btfss	status,2,c
 36848  01F86A  D006               	goto	l15390
 36849  01F86C                     u14250:
 36850                           
 36851                           ;stkvar	_c @ sp[(0)+-2]
 36852  01F86C  0EFE               	movlw	-2
 36853  01F86E  50E3               	movf	plusw1,w,c
 36854  01F870  6EE6               	movwf	postinc1,c
 36855  01F872  ECA5  F015         	call	_putch	;wreg free
 36856  01F876  D075               	goto	l3547
 36857  01F878                     l15390:
 36858                           
 36859                           ;stkvar	_fp @ sp[(0)+-4]
 36860  01F878  0EFC               	movlw	-4
 36861  01F87A  006F FF8C  F034    	movff	plusw1,btemp+10
 36862  01F880  0EFD               	movlw	-3
 36863  01F882  006F FF8C  F035    	movff	plusw1,btemp+11
 36864  01F888  0E04               	movlw	4
 36865  01F88A  2434               	addwf	(btemp+10)^0,w,c
 36866  01F88C  6ED9               	movwf	fsr2l,c
 36867  01F88E  0E00               	movlw	0
 36868  01F890  2035               	addwfc	(btemp+11)^0,w,c
 36869  01F892  6EDA               	movwf	fsr2h,c
 36870  01F894  50DE               	movf	postinc2,w,c
 36871  01F896  10DE               	iorwf	postinc2,w,c
 36872  01F898  B4D8               	btfsc	status,2,c
 36873  01F89A  D026               	goto	u14270
 36874                           
 36875                           ;stkvar	_fp @ sp[(0)+-4]
 36876  01F89C  0EFC               	movlw	-4
 36877  01F89E  006F FF8C  F034    	movff	plusw1,btemp+10
 36878  01F8A4  0EFD               	movlw	-3
 36879  01F8A6  006F FF8C  F035    	movff	plusw1,btemp+11
 36880  01F8AC  0E04               	movlw	4
 36881  01F8AE  2434               	addwf	(btemp+10)^0,w,c
 36882  01F8B0  6ED9               	movwf	fsr2l,c
 36883  01F8B2  0E00               	movlw	0
 36884  01F8B4  2035               	addwfc	(btemp+11)^0,w,c
 36885  01F8B6  6EDA               	movwf	fsr2h,c
 36886                           
 36887                           ;stkvar	_fp @ sp[(0)+-4]
 36888  01F8B8  0EFC               	movlw	-4
 36889  01F8BA  006F FF8C  F034    	movff	plusw1,btemp+10
 36890  01F8C0  0EFD               	movlw	-3
 36891  01F8C2  006F FF8C  F035    	movff	plusw1,btemp+11
 36892  01F8C8  0E02               	movlw	2
 36893  01F8CA  2434               	addwf	(btemp+10)^0,w,c
 36894  01F8CC  6EE9               	movwf	fsr0l,c
 36895  01F8CE  0E00               	movlw	0
 36896  01F8D0  2035               	addwfc	(btemp+11)^0,w,c
 36897  01F8D2  6EEA               	movwf	fsr0h,c
 36898  01F8D4  50DE               	movf	postinc2,w,c
 36899  01F8D6  5CEE               	subwf	postinc0,w,c
 36900  01F8D8  50EE               	movf	postinc0,w,c
 36901  01F8DA  0A80               	xorlw	128
 36902  01F8DC  6E2A               	movwf	btemp^0,c
 36903  01F8DE  50DE               	movf	postinc2,w,c
 36904  01F8E0  0A80               	xorlw	128
 36905  01F8E2  582A               	subwfb	btemp^0,w,c
 36906  01F8E4  B0D8               	btfsc	status,0,c
 36907  01F8E6  D03D               	goto	l3547
 36908  01F8E8                     u14270:
 36909                           
 36910                           ;stkvar	_c @ sp[(0)+-2]
 36911                           ;stkvar	_fp @ sp[(0)+-4]
 36912  01F8E8  0EFC               	movlw	-4
 36913  01F8EA  006F FF8C  F034    	movff	plusw1,btemp+10
 36914  01F8F0  0EFD               	movlw	-3
 36915  01F8F2  006F FF8C  F035    	movff	plusw1,btemp+11
 36916  01F8F8  0E02               	movlw	2
 36917  01F8FA  2434               	addwf	(btemp+10)^0,w,c
 36918  01F8FC  6ED9               	movwf	fsr2l,c
 36919  01F8FE  0E00               	movlw	0
 36920  01F900  2035               	addwfc	(btemp+11)^0,w,c
 36921  01F902  6EDA               	movwf	fsr2h,c
 36922  01F904  006F FF78  F034    	movff	postinc2,btemp+10
 36923  01F90A  006F FF74  F035    	movff	postdec2,btemp+11
 36924                           
 36925                           ;stkvar	_fp @ sp[(0)+-4]
 36926  01F910  0EFC               	movlw	-4
 36927  01F912  006F FF8F FFD9     	movff	plusw1,fsr2l
 36928  01F918  0EFD               	movlw	-3
 36929  01F91A  006F FF8F FFDA     	movff	plusw1,fsr2h
 36930  01F920  006F FF78  F032    	movff	postinc2,btemp+8
 36931  01F926  006F FF74  F033    	movff	postdec2,btemp+9
 36932  01F92C  5034               	movf	(btemp+10)^0,w,c
 36933  01F92E  2432               	addwf	(btemp+8)^0,w,c
 36934  01F930  6ED9               	movwf	fsr2l,c
 36935  01F932  5035               	movf	(btemp+11)^0,w,c
 36936  01F934  2033               	addwfc	(btemp+9)^0,w,c
 36937  01F936  6EDA               	movwf	fsr2h,c
 36938  01F938  0EFE               	movlw	-2
 36939  01F93A  006F FF8F FFDF     	movff	plusw1,indf2
 36940                           
 36941                           ;stkvar	_fp @ sp[(0)+-4]
 36942  01F940  0EFC               	movlw	-4
 36943  01F942  006F FF8C  F034    	movff	plusw1,btemp+10
 36944  01F948  0EFD               	movlw	-3
 36945  01F94A  006F FF8C  F035    	movff	plusw1,btemp+11
 36946  01F950  0E02               	movlw	2
 36947  01F952  2434               	addwf	(btemp+10)^0,w,c
 36948  01F954  6ED9               	movwf	fsr2l,c
 36949  01F956  0E00               	movlw	0
 36950  01F958  2035               	addwfc	(btemp+11)^0,w,c
 36951  01F95A  6EDA               	movwf	fsr2h,c
 36952  01F95C  2ADE               	incf	postinc2,f,c
 36953  01F95E  0E00               	movlw	0
 36954  01F960  22DD               	addwfc	postdec2,f,c
 36955  01F962                     l3547:
 36956                           
 36957                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 36958  01F962  52E5               	movf	postdec1,f,c
 36959  01F964  52E5               	movf	postdec1,f,c
 36960  01F966  52E5               	movf	postdec1,f,c
 36961  01F968  52E5               	movf	postdec1,f,c
 36962  01F96A  0012               	return		;funcret
 36963  01F96C                     __end_of_fputc:
 36964                           	opt callstack 0
 36965                           
 36966 ;; *************** function _putch *****************
 36967 ;; Defined at:
 36968 ;;		line 420 in file "eadog.c"
 36969 ;; Parameters:    Size  Location     Type
 36970 ;;  c               1  [STACK] unsigned char 
 36971 ;; Auto vars:     Size  Location     Type
 36972 ;;		None
 36973 ;; Return value:  Size  Location     Type
 36974 ;;                  1  [STACK] void 
 36975 ;; Registers used:
 36976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 36977 ;; Tracked objects:
 36978 ;;		On entry : 0/0
 36979 ;;		On exit  : 0/0
 36980 ;;		Unchanged: 0/0
 36981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36986 ;;Total ram usage:        0 bytes
 36987 ;; Hardware stack levels used:    1
 36988 ;; Hardware stack levels required when called:   16
 36989 ;; This function calls:
 36990 ;;		_ringBufS_put_dma
 36991 ;; This function is called by:
 36992 ;;		_fputc
 36993 ;; This function uses a reentrant model
 36994 ;;
 36995                           
 36996                           	psect	text123
 36997  002B4A                     __ptext123:
 36998                           	opt callstack 0
 36999  002B4A                     _putch:
 37000                           	opt callstack 0
 37001                           
 37002                           ;eadog.c: 420: void putch(char c);eadog.c: 421: {;eadog.c: 422:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 37003                           ;stkvar	_c @ sp[(0)+-1]
 37004                           
 37005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37006                           ;incstack = 0
 37007 ;; hardware stack exceeded
 37008  002B4A  0EFF               	movlw	-1
 37009  002B4C  50E3               	movf	plusw1,w,c
 37010  002B4E  6EE6               	movwf	postinc1,c
 37011  002B50  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 37012  002B56  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 37013  002B5C  EC69  F006         	call	_ringBufS_put_dma	;wreg free
 37014                           
 37015                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 37016  002B60  52E5               	movf	postdec1,f,c
 37017  002B62  0012               	return		;funcret
 37018  002B64                     __end_of_putch:
 37019                           	opt callstack 0
 37020                           
 37021 ;; *************** function _ringBufS_put_dma *****************
 37022 ;; Defined at:
 37023 ;;		line 67 in file "ringbufs.c"
 37024 ;; Parameters:    Size  Location     Type
 37025 ;;  _this           2  [STACK] PTR struct ringBufS_t
 37026 ;;		 -> ring_buf1(67), 
 37027 ;;  c               1  [STACK] const unsigned char 
 37028 ;; Auto vars:     Size  Location     Type
 37029 ;;		None
 37030 ;; Return value:  Size  Location     Type
 37031 ;;                  1  [STACK] void 
 37032 ;; Registers used:
 37033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 37034 ;; Tracked objects:
 37035 ;;		On entry : 0/3B
 37036 ;;		On exit  : 0/0
 37037 ;;		Unchanged: 0/0
 37038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37043 ;;Total ram usage:        0 bytes
 37044 ;; Hardware stack levels used:    1
 37045 ;; Hardware stack levels required when called:   15
 37046 ;; This function calls:
 37047 ;;		Nothing
 37048 ;; This function is called by:
 37049 ;;		_send_lcd_data_dma
 37050 ;;		_putch
 37051 ;; This function uses a reentrant model
 37052 ;;
 37053                           
 37054                           	psect	text124
 37055  000CD2                     __ptext124:
 37056                           	opt callstack 0
 37057  000CD2                     _ringBufS_put_dma:
 37058                           	opt callstack 0
 37059                           
 37060                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 37061                           ;stkvar	__this @ sp[(0)+-2]
 37062                           
 37063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37064                           ;incstack = 0
 37065 ;; hardware stack exceeded
 37066  000CD2  0EFE               	movlw	-2
 37067  000CD4  006F FF8C  F034    	movff	plusw1,btemp+10
 37068  000CDA  0EFF               	movlw	-1
 37069  000CDC  006F FF8C  F035    	movff	plusw1,btemp+11
 37070  000CE2  0E42               	movlw	66
 37071  000CE4  2434               	addwf	(btemp+10)^0,w,c
 37072  000CE6  6ED9               	movwf	fsr2l,c
 37073  000CE8  0E00               	movlw	0
 37074  000CEA  2035               	addwfc	(btemp+11)^0,w,c
 37075  000CEC  6EDA               	movwf	fsr2h,c
 37076  000CEE  0E40               	movlw	64
 37077  000CF0  60DF               	cpfslt	indf2,c
 37078  000CF2  D040               	goto	l1746
 37079                           
 37080                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 37081                           ;stkvar	_c @ sp[(0)+-3]
 37082                           ;stkvar	__this @ sp[(0)+-2]
 37083  000CF4  0EFE               	movlw	-2
 37084  000CF6  006F FF8C  F034    	movff	plusw1,btemp+10
 37085  000CFC  0EFF               	movlw	-1
 37086  000CFE  006F FF8C  F035    	movff	plusw1,btemp+11
 37087  000D04  0E40               	movlw	64
 37088  000D06  2434               	addwf	(btemp+10)^0,w,c
 37089  000D08  6ED9               	movwf	fsr2l,c
 37090  000D0A  0E00               	movlw	0
 37091  000D0C  2035               	addwfc	(btemp+11)^0,w,c
 37092  000D0E  6EDA               	movwf	fsr2h,c
 37093  000D10  50DF               	movf	indf2,w,c
 37094  000D12  6E35               	movwf	(btemp+11)^0,c
 37095                           
 37096                           ;stkvar	__this @ sp[(0)+-2]
 37097  000D14  0EFE               	movlw	-2
 37098  000D16  006F FF8C  F032    	movff	plusw1,btemp+8
 37099  000D1C  0EFF               	movlw	-1
 37100  000D1E  006F FF8C  F033    	movff	plusw1,btemp+9
 37101  000D24  5035               	movf	(btemp+11)^0,w,c
 37102  000D26  2432               	addwf	(btemp+8)^0,w,c
 37103  000D28  6ED9               	movwf	fsr2l,c
 37104  000D2A  0E00               	movlw	0
 37105  000D2C  2033               	addwfc	(btemp+9)^0,w,c
 37106  000D2E  6EDA               	movwf	fsr2h,c
 37107  000D30  0EFD               	movlw	-3
 37108  000D32  006F FF8F FFDF     	movff	plusw1,indf2
 37109                           
 37110                           ;ringbufs.c: 71:   ++_this->head;
 37111                           ;stkvar	__this @ sp[(0)+-2]
 37112  000D38  0EFE               	movlw	-2
 37113  000D3A  006F FF8C  F034    	movff	plusw1,btemp+10
 37114  000D40  0EFF               	movlw	-1
 37115  000D42  006F FF8C  F035    	movff	plusw1,btemp+11
 37116  000D48  0E40               	movlw	64
 37117  000D4A  2434               	addwf	(btemp+10)^0,w,c
 37118  000D4C  6ED9               	movwf	fsr2l,c
 37119  000D4E  0E00               	movlw	0
 37120  000D50  2035               	addwfc	(btemp+11)^0,w,c
 37121  000D52  6EDA               	movwf	fsr2h,c
 37122  000D54  2ADF               	incf	indf2,f,c
 37123                           
 37124                           ;ringbufs.c: 72:   ++_this->count;
 37125                           ;stkvar	__this @ sp[(0)+-2]
 37126  000D56  0EFE               	movlw	-2
 37127  000D58  006F FF8C  F034    	movff	plusw1,btemp+10
 37128  000D5E  0EFF               	movlw	-1
 37129  000D60  006F FF8C  F035    	movff	plusw1,btemp+11
 37130  000D66  0E42               	movlw	66
 37131  000D68  2434               	addwf	(btemp+10)^0,w,c
 37132  000D6A  6ED9               	movwf	fsr2l,c
 37133  000D6C  0E00               	movlw	0
 37134  000D6E  2035               	addwfc	(btemp+11)^0,w,c
 37135  000D70  6EDA               	movwf	fsr2h,c
 37136  000D72  2ADF               	incf	indf2,f,c
 37137  000D74                     l1746:
 37138                           
 37139                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 37140  000D74  52E5               	movf	postdec1,f,c
 37141  000D76  52E5               	movf	postdec1,f,c
 37142  000D78  52E5               	movf	postdec1,f,c
 37143  000D7A  0012               	return		;funcret
 37144  000D7C                     __end_of_ringBufS_put_dma:
 37145                           	opt callstack 0
 37146                           
 37147 ;; *************** function _atoi *****************
 37148 ;; Defined at:
 37149 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 37150 ;; Parameters:    Size  Location     Type
 37151 ;;  s               2  [STACK] PTR const unsigned char 
 37152 ;;		 -> STR_95(127), STR_93(3), STR_92(3), STR_91(21), 
 37153 ;;		 -> STR_90(21), STR_89(21), STR_88(21), STR_87(21), 
 37154 ;;		 -> STR_86(21), STR_85(26), STR_84(15), STR_83(15), 
 37155 ;;		 -> STR_82(15), STR_81(15), STR_80(10), STR_79(10), 
 37156 ;;		 -> STR_78(19), STR_77(19), STR_74(3), STR_73(14), 
 37157 ;;		 -> STR_72(28), STR_71(28), STR_70(28), STR_69(22), 
 37158 ;;		 -> STR_68(22), STR_67(22), STR_66(22), STR_65(22), 
 37159 ;;		 -> STR_64(22), STR_63(22), STR_62(22), STR_61(22), 
 37160 ;;		 -> STR_60(21), STR_59(22), STR_58(22), STR_57(22), 
 37161 ;;		 -> STR_56(22), STR_55(22), STR_54(22), STR_53(24), 
 37162 ;;		 -> STR_52(24), STR_51(24), STR_50(30), STR_49(24), 
 37163 ;;		 -> STR_48(24), STR_47(23), STR_46(23), STR_45(23), 
 37164 ;;		 -> STR_44(23), STR_43(23), STR_42(23), STR_41(23), 
 37165 ;;		 -> STR_40(23), STR_39(23), STR_38(23), STR_37(23), 
 37166 ;;		 -> STR_36(23), STR_35(18), STR_34(17), STR_33(17), 
 37167 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(14), 
 37168 ;;		 -> STR_28(14), STR_27(27), STR_26(27), STR_25(23), 
 37169 ;;		 -> STR_24(22), STR_23(22), STR_22(22), STR_21(22), 
 37170 ;;		 -> STR_20(23), STR_19(23), STR_18(23), STR_17(26), 
 37171 ;;		 -> STR_16(22), STR_15(21), STR_14(21), STR_13(21), 
 37172 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 37173 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 37174 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 37175 ;; Auto vars:     Size  Location     Type
 37176 ;;  n               2  [STACK] int 
 37177 ;;  neg             2  [STACK] int 
 37178 ;; Return value:  Size  Location     Type
 37179 ;;                  2  [STACK] int 
 37180 ;; Registers used:
 37181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 37182 ;; Tracked objects:
 37183 ;;		On entry : 0/0
 37184 ;;		On exit  : 0/0
 37185 ;;		Unchanged: 0/0
 37186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37191 ;;Total ram usage:        0 bytes
 37192 ;; Hardware stack levels used:    1
 37193 ;; Hardware stack levels required when called:   16
 37194 ;; This function calls:
 37195 ;;		_isdigit
 37196 ;;		_isspace
 37197 ;; This function is called by:
 37198 ;;		_vfpfcnvrt
 37199 ;; This function uses a reentrant model
 37200 ;;
 37201                           
 37202                           	psect	text125
 37203  01C77A                     __ptext125:
 37204                           	opt callstack 0
 37205  01C77A                     _atoi:
 37206                           	opt callstack 0
 37207                           
 37208                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37209  01C77A  0E09               	movlw	9
 37210  01C77C  26E1               	addwf	fsr1l,f,c
 37211  01C77E  0E00               	movlw	0
 37212  01C780  22E2               	addwfc	fsr1h,f,c
 37213                           
 37214                           ;stkvar	_n @ sp[(-9)+5]
 37215                           
 37216                           ;incstack = 0
 37217 ;; hardware stack exceeded
 37218  01C782  0EFC               	movlw	-4
 37219  01C784  6AE3               	clrf	plusw1,c
 37220  01C786  0EFD               	movlw	-3
 37221  01C788  6AE3               	clrf	plusw1,c
 37222                           
 37223                           ;stkvar	_neg @ sp[(-9)+7]
 37224  01C78A  0EFE               	movlw	-2
 37225  01C78C  6AE3               	clrf	plusw1,c
 37226  01C78E  0EFF               	movlw	-1
 37227  01C790  6AE3               	clrf	plusw1,c
 37228  01C792  D011               	goto	l11466
 37229  01C794                     l11464:
 37230                           
 37231                           ;stkvar	_s @ sp[(-9)+-2]
 37232  01C794  0EF5               	movlw	-11
 37233  01C796  50E3               	movf	plusw1,w,c
 37234  01C798  0F01               	addlw	1
 37235  01C79A  6E2A               	movwf	btemp^0,c
 37236  01C79C  0EF5               	movlw	-11
 37237  01C79E  0060  F0AB  FFE3   	movff	btemp,plusw1
 37238  01C7A4  6A2A               	clrf	btemp^0,c
 37239  01C7A6  0EF6               	movlw	-10
 37240  01C7A8  50E3               	movf	plusw1,w,c
 37241  01C7AA  202A               	addwfc	btemp^0,w,c
 37242  01C7AC  6E2A               	movwf	btemp^0,c
 37243  01C7AE  0EF6               	movlw	-10
 37244  01C7B0  0060  F0AB  FFE3   	movff	btemp,plusw1
 37245  01C7B6                     l11466:
 37246                           
 37247                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 37248  01C7B6  0EFB               	movlw	-5
 37249  01C7B8  6AE3               	clrf	plusw1,c
 37250  01C7BA  2AE3               	incf	plusw1,f,c
 37251                           
 37252                           ;stkvar	_s @ sp[(-9)+-2]
 37253  01C7BC  50E1               	movf	fsr1l,w,c
 37254  01C7BE  0FF5               	addlw	-11
 37255  01C7C0  6ED9               	movwf	fsr2l,c
 37256  01C7C2  50E2               	movf	fsr1h,w,c
 37257  01C7C4  6EDA               	movwf	fsr2h,c
 37258  01C7C6  0EFF               	movlw	255
 37259  01C7C8  22DA               	addwfc	fsr2h,f,c
 37260  01C7CA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37261  01C7D0  006F FF77 FFF7     	movff	postdec2,tblptrh
 37262  01C7D6                     	if	0	;tblptru may be non-zero
 37263  01C7D6                     	endif
 37264  01C7D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37265  01C7D6  0E00               	movlw	low (__mediumconst shr (0+16))
 37266  01C7D8  6EF8               	movwf	tblptru,c
 37267  01C7DA                     	endif
 37268  01C7DA  0008               	tblrd		*
 37269  01C7DC  50F5               	movf	tablat,w,c
 37270  01C7DE  0A20               	xorlw	32
 37271  01C7E0  B4D8               	btfsc	status,2,c
 37272  01C7E2  D023               	goto	l11474
 37273  01C7E4  0EF7               	movlw	247
 37274  01C7E6  6E34               	movwf	(btemp+10)^0,c
 37275  01C7E8  0EFF               	movlw	255
 37276  01C7EA  6E35               	movwf	(btemp+11)^0,c
 37277                           
 37278                           ;stkvar	_s @ sp[(-9)+-2]
 37279  01C7EC  50E1               	movf	fsr1l,w,c
 37280  01C7EE  0FF5               	addlw	-11
 37281  01C7F0  6ED9               	movwf	fsr2l,c
 37282  01C7F2  50E2               	movf	fsr1h,w,c
 37283  01C7F4  6EDA               	movwf	fsr2h,c
 37284  01C7F6  0EFF               	movlw	255
 37285  01C7F8  22DA               	addwfc	fsr2h,f,c
 37286  01C7FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 37287  01C800  006F FF77 FFF7     	movff	postdec2,tblptrh
 37288  01C806                     	if	0	;tblptru may be non-zero
 37289  01C806                     	endif
 37290  01C806                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37291  01C806  0E00               	movlw	low (__mediumconst shr (0+16))
 37292  01C808  6EF8               	movwf	tblptru,c
 37293  01C80A                     	endif
 37294  01C80A  0008               	tblrd		*
 37295  01C80C  50F5               	movf	tablat,w,c
 37296  01C80E  6E32               	movwf	(btemp+8)^0,c
 37297  01C810  6A33               	clrf	(btemp+9)^0,c
 37298  01C812  5034               	movf	(btemp+10)^0,w,c
 37299  01C814  2632               	addwf	(btemp+8)^0,f,c
 37300  01C816  5035               	movf	(btemp+11)^0,w,c
 37301  01C818  2233               	addwfc	(btemp+9)^0,f,c
 37302  01C81A  5033               	movf	(btemp+9)^0,w,c
 37303  01C81C  E104               	bnz	u10400
 37304  01C81E  0E05               	movlw	5
 37305  01C820  5C32               	subwf	(btemp+8)^0,w,c
 37306  01C822  A0D8               	btfss	status,0,c
 37307  01C824  D002               	goto	l11474
 37308  01C826                     u10400:
 37309                           
 37310                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 37311  01C826  0EFB               	movlw	-5
 37312  01C828  6AE3               	clrf	plusw1,c
 37313  01C82A                     l11474:
 37314                           
 37315                           ;stkvar	_atoi$7210 @ sp[(-9)+4]
 37316  01C82A  0EFB               	movlw	-5
 37317  01C82C  50E3               	movf	plusw1,w,c
 37318  01C82E  6E34               	movwf	(btemp+10)^0,c
 37319  01C830  6A35               	clrf	(btemp+11)^0,c
 37320                           
 37321                           ;stkvar	_atoi$7209 @ sp[(-9)+2]
 37322  01C832  0EF9               	movlw	-7
 37323  01C834  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37324  01C83A  0EFA               	movlw	-6
 37325  01C83C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37326                           
 37327                           ;stkvar	_atoi$7209 @ sp[(-9)+2]
 37328  01C842  0EF9               	movlw	-7
 37329  01C844  006F FF8C  F02A    	movff	plusw1,btemp
 37330  01C84A  0EFA               	movlw	-6
 37331  01C84C  50E3               	movf	plusw1,w,c
 37332  01C84E  102A               	iorwf	btemp^0,w,c
 37333  01C850  B4D8               	btfsc	status,2,c
 37334  01C852  D01F               	goto	l11484
 37335  01C854  D79F               	goto	l11464
 37336  01C856                     l11480:
 37337  01C856  0E01               	movlw	1
 37338  01C858  6E34               	movwf	(btemp+10)^0,c
 37339  01C85A  0E00               	movlw	0
 37340  01C85C  6E35               	movwf	(btemp+11)^0,c
 37341                           
 37342                           ;stkvar	_neg @ sp[(-9)+7]
 37343  01C85E  0EFE               	movlw	-2
 37344  01C860  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37345  01C866  0EFF               	movlw	-1
 37346  01C868  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37347  01C86E                     l11482:
 37348                           
 37349                           ;stkvar	_s @ sp[(-9)+-2]
 37350  01C86E  0EF5               	movlw	-11
 37351  01C870  50E3               	movf	plusw1,w,c
 37352  01C872  0F01               	addlw	1
 37353  01C874  6E2A               	movwf	btemp^0,c
 37354  01C876  0EF5               	movlw	-11
 37355  01C878  0060  F0AB  FFE3   	movff	btemp,plusw1
 37356  01C87E  6A2A               	clrf	btemp^0,c
 37357  01C880  0EF6               	movlw	-10
 37358  01C882  50E3               	movf	plusw1,w,c
 37359  01C884  202A               	addwfc	btemp^0,w,c
 37360  01C886  6E2A               	movwf	btemp^0,c
 37361  01C888  0EF6               	movlw	-10
 37362  01C88A  0060  F0AB  FFE3   	movff	btemp,plusw1
 37363  01C890  D053               	goto	l11490
 37364  01C892                     l11484:
 37365                           
 37366                           ;stkvar	_s @ sp[(-9)+-2]
 37367  01C892  50E1               	movf	fsr1l,w,c
 37368  01C894  0FF5               	addlw	-11
 37369  01C896  6ED9               	movwf	fsr2l,c
 37370  01C898  50E2               	movf	fsr1h,w,c
 37371  01C89A  6EDA               	movwf	fsr2h,c
 37372  01C89C  0EFF               	movlw	255
 37373  01C89E  22DA               	addwfc	fsr2h,f,c
 37374  01C8A0  006F FF7B FFF6     	movff	postinc2,tblptrl
 37375  01C8A6  006F FF77 FFF7     	movff	postdec2,tblptrh
 37376  01C8AC                     	if	0	;tblptru may be non-zero
 37377  01C8AC                     	endif
 37378  01C8AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37379  01C8AC  0E00               	movlw	low (__mediumconst shr (0+16))
 37380  01C8AE  6EF8               	movwf	tblptru,c
 37381  01C8B0                     	endif
 37382  01C8B0  0008               	tblrd		*
 37383  01C8B2  50F5               	movf	tablat,w,c
 37384  01C8B4  6E34               	movwf	(btemp+10)^0,c
 37385  01C8B6  6A35               	clrf	(btemp+11)^0,c
 37386                           
 37387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37388                           ; Switch size 1, requested type "simple"
 37389                           ; Number of cases is 1, Range of values is 0 to 0
 37390                           ; switch strategies available:
 37391                           ; Name         Instructions Cycles
 37392                           ; simple_byte            4     3 (average)
 37393                           ;	Chosen strategy is simple_byte
 37394  01C8B8  5035               	movf	(btemp+11)^0,w,c
 37395  01C8BA  0A00               	xorlw	0	; case 0
 37396  01C8BC  A4D8               	btfss	status,2,c
 37397  01C8BE  D03C               	goto	l11490
 37398                           
 37399                           ; Switch size 1, requested type "simple"
 37400                           ; Number of cases is 2, Range of values is 43 to 45
 37401                           ; switch strategies available:
 37402                           ; Name         Instructions Cycles
 37403                           ; simple_byte            7     4 (average)
 37404                           ;	Chosen strategy is simple_byte
 37405  01C8C0  5034               	movf	(btemp+10)^0,w,c
 37406  01C8C2  0A2B               	xorlw	43	; case 43
 37407  01C8C4  B4D8               	btfsc	status,2,c
 37408  01C8C6  D7D3               	goto	l11482
 37409  01C8C8  0A06               	xorlw	6	; case 45
 37410  01C8CA  B4D8               	btfsc	status,2,c
 37411  01C8CC  D7C4               	goto	l11480
 37412  01C8CE  D034               	goto	l11490
 37413  01C8D0                     l11486:
 37414                           
 37415                           ;stkvar	_n @ sp[(-9)+5]
 37416  01C8D0  0EFC               	movlw	-4
 37417  01C8D2  006F FF8C  F034    	movff	plusw1,btemp+10
 37418  01C8D8  0EFD               	movlw	-3
 37419  01C8DA  006F FF8C  F035    	movff	plusw1,btemp+11
 37420  01C8E0  0E0A               	movlw	10
 37421  01C8E2  0234               	mulwf	(btemp+10)^0,c
 37422  01C8E4  006F FFCC  F032    	movff	prodl,btemp+8
 37423  01C8EA  006F FFD0  F033    	movff	prodh,btemp+9
 37424  01C8F0  0235               	mulwf	(btemp+11)^0,c
 37425  01C8F2  50F3               	movf	prodl,w,c
 37426  01C8F4  2633               	addwf	(btemp+9)^0,f,c
 37427                           
 37428                           ;stkvar	_s @ sp[(-9)+-2]
 37429  01C8F6  50E1               	movf	fsr1l,w,c
 37430  01C8F8  0FF5               	addlw	-11
 37431  01C8FA  6ED9               	movwf	fsr2l,c
 37432  01C8FC  50E2               	movf	fsr1h,w,c
 37433  01C8FE  6EDA               	movwf	fsr2h,c
 37434  01C900  0EFF               	movlw	255
 37435  01C902  22DA               	addwfc	fsr2h,f,c
 37436  01C904  006F FF7B FFF6     	movff	postinc2,tblptrl
 37437  01C90A  006F FF77 FFF7     	movff	postdec2,tblptrh
 37438  01C910                     	if	0	;tblptru may be non-zero
 37439  01C910                     	endif
 37440  01C910                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37441  01C910  0E00               	movlw	low (__mediumconst shr (0+16))
 37442  01C912  6EF8               	movwf	tblptru,c
 37443  01C914                     	endif
 37444  01C914  0008               	tblrd		*
 37445  01C916  50F5               	movf	tablat,w,c
 37446  01C918  5E32               	subwf	(btemp+8)^0,f,c
 37447  01C91A  0E00               	movlw	0
 37448  01C91C  5A33               	subwfb	(btemp+9)^0,f,c
 37449  01C91E  0E30               	movlw	48
 37450  01C920  2632               	addwf	(btemp+8)^0,f,c
 37451  01C922  0E00               	movlw	0
 37452  01C924  2233               	addwfc	(btemp+9)^0,f,c
 37453                           
 37454                           ;stkvar	_n @ sp[(-9)+5]
 37455  01C926  0EFC               	movlw	-4
 37456  01C928  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 37457  01C92E  0EFD               	movlw	-3
 37458  01C930  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 37459  01C936  D79B               	goto	l11482
 37460  01C938                     l11490:
 37461  01C938  0ED0               	movlw	208
 37462  01C93A  6E34               	movwf	(btemp+10)^0,c
 37463  01C93C  0EFF               	movlw	255
 37464  01C93E  6E35               	movwf	(btemp+11)^0,c
 37465                           
 37466                           ;stkvar	_s @ sp[(-9)+-2]
 37467  01C940  50E1               	movf	fsr1l,w,c
 37468  01C942  0FF5               	addlw	-11
 37469  01C944  6ED9               	movwf	fsr2l,c
 37470  01C946  50E2               	movf	fsr1h,w,c
 37471  01C948  6EDA               	movwf	fsr2h,c
 37472  01C94A  0EFF               	movlw	255
 37473  01C94C  22DA               	addwfc	fsr2h,f,c
 37474  01C94E  006F FF7B FFF6     	movff	postinc2,tblptrl
 37475  01C954  006F FF77 FFF7     	movff	postdec2,tblptrh
 37476  01C95A                     	if	0	;tblptru may be non-zero
 37477  01C95A                     	endif
 37478  01C95A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 37479  01C95A  0E00               	movlw	low (__mediumconst shr (0+16))
 37480  01C95C  6EF8               	movwf	tblptru,c
 37481  01C95E                     	endif
 37482  01C95E  0008               	tblrd		*
 37483  01C960  50F5               	movf	tablat,w,c
 37484  01C962  6E32               	movwf	(btemp+8)^0,c
 37485  01C964  6A33               	clrf	(btemp+9)^0,c
 37486  01C966  5034               	movf	(btemp+10)^0,w,c
 37487  01C968  2632               	addwf	(btemp+8)^0,f,c
 37488  01C96A  5035               	movf	(btemp+11)^0,w,c
 37489  01C96C  2233               	addwfc	(btemp+9)^0,f,c
 37490  01C96E  5033               	movf	(btemp+9)^0,w,c
 37491  01C970  E106               	bnz	u10420
 37492  01C972  0E0A               	movlw	10
 37493  01C974  5C32               	subwf	(btemp+8)^0,w,c
 37494  01C976  B0D8               	btfsc	status,0,c
 37495  01C978  D002               	goto	u10420
 37496  01C97A  0E01               	movlw	1
 37497  01C97C  D001               	goto	u10430
 37498  01C97E                     u10420:
 37499  01C97E  0E00               	movlw	0
 37500  01C980                     u10430:
 37501  01C980  6E34               	movwf	(btemp+10)^0,c
 37502  01C982  6A35               	clrf	(btemp+11)^0,c
 37503                           
 37504                           ;stkvar	_atoi$7211 @ sp[(-9)+0]
 37505  01C984  0EF7               	movlw	-9
 37506  01C986  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 37507  01C98C  0EF8               	movlw	-8
 37508  01C98E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 37509                           
 37510                           ;stkvar	_atoi$7211 @ sp[(-9)+0]
 37511  01C994  0EF7               	movlw	-9
 37512  01C996  006F FF8C  F02A    	movff	plusw1,btemp
 37513  01C99C  0EF8               	movlw	-8
 37514  01C99E  50E3               	movf	plusw1,w,c
 37515  01C9A0  102A               	iorwf	btemp^0,w,c
 37516  01C9A2  A4D8               	btfss	status,2,c
 37517  01C9A4  D795               	goto	l11486
 37518                           
 37519                           ;stkvar	_neg @ sp[(-9)+7]
 37520  01C9A6  0EFE               	movlw	-2
 37521  01C9A8  006F FF8C  F02A    	movff	plusw1,btemp
 37522  01C9AE  0EFF               	movlw	-1
 37523  01C9B0  50E3               	movf	plusw1,w,c
 37524  01C9B2  102A               	iorwf	btemp^0,w,c
 37525  01C9B4  A4D8               	btfss	status,2,c
 37526  01C9B6  D00E               	goto	l11500
 37527                           
 37528                           ;stkvar	_n @ sp[(-9)+5]
 37529  01C9B8  0EFC               	movlw	-4
 37530  01C9BA  006F FF8C  F02A    	movff	plusw1,btemp
 37531  01C9C0  1E2A               	comf	btemp^0,f,c
 37532  01C9C2  0EFD               	movlw	-3
 37533  01C9C4  006F FF8C  F02B    	movff	plusw1,btemp+1
 37534  01C9CA  1E2B               	comf	(btemp+1)^0,f,c
 37535  01C9CC  2A2A               	incf	btemp^0,f,c
 37536  01C9CE  B4D8               	btfsc	status,2,c
 37537  01C9D0  2A2B               	incf	(btemp+1)^0,f,c
 37538  01C9D2  D008               	goto	l3458
 37539  01C9D4                     l11500:
 37540                           
 37541                           ;stkvar	_n @ sp[(-9)+5]
 37542  01C9D4  0EFC               	movlw	-4
 37543  01C9D6  006F FF8C  F02A    	movff	plusw1,btemp
 37544  01C9DC  0EFD               	movlw	-3
 37545  01C9DE  006F FF8C  F02B    	movff	plusw1,btemp+1
 37546  01C9E4                     l3458:
 37547                           
 37548                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37549  01C9E4  0EF5               	movlw	245
 37550  01C9E6  26E1               	addwf	fsr1l,f,c
 37551  01C9E8  0EFF               	movlw	255
 37552  01C9EA  22E2               	addwfc	fsr1h,f,c
 37553  01C9EC  0012               	return		;funcret
 37554  01C9EE                     __end_of_atoi:
 37555                           	opt callstack 0
 37556                           
 37557 ;; *************** function _isspace *****************
 37558 ;; Defined at:
 37559 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 37560 ;; Parameters:    Size  Location     Type
 37561 ;;  c               2  [STACK] int 
 37562 ;; Auto vars:     Size  Location     Type
 37563 ;;		None
 37564 ;; Return value:  Size  Location     Type
 37565 ;;                  2  [STACK] int 
 37566 ;; Registers used:
 37567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37568 ;; Tracked objects:
 37569 ;;		On entry : 0/0
 37570 ;;		On exit  : 0/0
 37571 ;;		Unchanged: 0/0
 37572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37577 ;;Total ram usage:        0 bytes
 37578 ;; Hardware stack levels used:    1
 37579 ;; Hardware stack levels required when called:   15
 37580 ;; This function calls:
 37581 ;;		Nothing
 37582 ;; This function is called by:
 37583 ;;		_atoi
 37584 ;; This function uses a reentrant model
 37585 ;;
 37586                           
 37587                           	psect	text126
 37588  001E08                     __ptext126:
 37589                           	opt callstack 0
 37590  001E08                     _isspace:
 37591                           	opt callstack 0
 37592                           
 37593                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37594  001E08  52E6               	movf	postinc1,f,c
 37595                           
 37596                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 37597                           
 37598                           ;incstack = 0
 37599 ;; hardware stack exceeded
 37600  001E0A  0EFF               	movlw	-1
 37601  001E0C  6AE3               	clrf	plusw1,c
 37602  001E0E  2AE3               	incf	plusw1,f,c
 37603                           
 37604                           ;stkvar	_c @ sp[(-1)+-2]
 37605  001E10  0EFD               	movlw	-3
 37606  001E12  006F FF8C  F02A    	movff	plusw1,btemp
 37607  001E18  0E20               	movlw	32
 37608  001E1A  182A               	xorwf	btemp^0,w,c
 37609  001E1C  E104               	bnz	u9250
 37610  001E1E  0EFE               	movlw	-2
 37611  001E20  50E3               	movf	plusw1,w,c
 37612  001E22  B4D8               	btfsc	status,2,c
 37613  001E24  D012               	goto	l10866
 37614  001E26                     u9250:
 37615                           
 37616                           ;stkvar	_c @ sp[(-1)+-2]
 37617  001E26  0EFD               	movlw	-3
 37618  001E28  50E3               	movf	plusw1,w,c
 37619  001E2A  0FF7               	addlw	247
 37620  001E2C  6E34               	movwf	(btemp+10)^0,c
 37621  001E2E  0EFE               	movlw	-2
 37622  001E30  006F FF8C  F035    	movff	plusw1,btemp+11
 37623  001E36  0EFF               	movlw	255
 37624  001E38  2235               	addwfc	(btemp+11)^0,f,c
 37625  001E3A  5035               	movf	(btemp+11)^0,w,c
 37626  001E3C  E104               	bnz	u9260
 37627  001E3E  0E05               	movlw	5
 37628  001E40  5C34               	subwf	(btemp+10)^0,w,c
 37629  001E42  A0D8               	btfss	status,0,c
 37630  001E44  D002               	goto	l10866
 37631  001E46                     u9260:
 37632                           
 37633                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 37634  001E46  0EFF               	movlw	-1
 37635  001E48  6AE3               	clrf	plusw1,c
 37636  001E4A                     l10866:
 37637                           
 37638                           ;stkvar	_isspace$7260 @ sp[(-1)+0]
 37639  001E4A  0EFF               	movlw	-1
 37640  001E4C  50E3               	movf	plusw1,w,c
 37641  001E4E  6E2A               	movwf	btemp^0,c
 37642  001E50  6A2B               	clrf	(btemp+1)^0,c
 37643                           
 37644                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37645  001E52  52E5               	movf	postdec1,f,c
 37646  001E54  52E5               	movf	postdec1,f,c
 37647  001E56  52E5               	movf	postdec1,f,c
 37648  001E58  0012               	return		;funcret
 37649  001E5A                     __end_of_isspace:
 37650                           	opt callstack 0
 37651                           
 37652 ;; *************** function _isdigit *****************
 37653 ;; Defined at:
 37654 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 37655 ;; Parameters:    Size  Location     Type
 37656 ;;  c               2  [STACK] int 
 37657 ;; Auto vars:     Size  Location     Type
 37658 ;;		None
 37659 ;; Return value:  Size  Location     Type
 37660 ;;                  2  [STACK] int 
 37661 ;; Registers used:
 37662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 37663 ;; Tracked objects:
 37664 ;;		On entry : 0/0
 37665 ;;		On exit  : 0/0
 37666 ;;		Unchanged: 0/0
 37667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37672 ;;Total ram usage:        0 bytes
 37673 ;; Hardware stack levels used:    1
 37674 ;; Hardware stack levels required when called:   15
 37675 ;; This function calls:
 37676 ;;		Nothing
 37677 ;; This function is called by:
 37678 ;;		_vfpfcnvrt
 37679 ;;		_atoi
 37680 ;; This function uses a reentrant model
 37681 ;;
 37682                           
 37683                           	psect	text127
 37684  0025EC                     __ptext127:
 37685                           	opt callstack 0
 37686  0025EC                     _isdigit:
 37687                           	opt callstack 0
 37688                           
 37689                           ;stkvar	_c @ sp[(0)+-2]
 37690                           
 37691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37692                           ;incstack = 0
 37693 ;; hardware stack exceeded
 37694  0025EC  0EFE               	movlw	-2
 37695  0025EE  50E3               	movf	plusw1,w,c
 37696  0025F0  0FD0               	addlw	208
 37697  0025F2  6E34               	movwf	(btemp+10)^0,c
 37698  0025F4  0EFF               	movlw	-1
 37699  0025F6  006F FF8C  F035    	movff	plusw1,btemp+11
 37700  0025FC  0EFF               	movlw	255
 37701  0025FE  2235               	addwfc	(btemp+11)^0,f,c
 37702  002600  5035               	movf	(btemp+11)^0,w,c
 37703  002602  E106               	bnz	u8040
 37704  002604  0E0A               	movlw	10
 37705  002606  5C34               	subwf	(btemp+10)^0,w,c
 37706  002608  B0D8               	btfsc	status,0,c
 37707  00260A  D002               	goto	u8040
 37708  00260C  0E01               	movlw	1
 37709  00260E  D001               	goto	u8050
 37710  002610                     u8040:
 37711  002610  0E00               	movlw	0
 37712  002612                     u8050:
 37713  002612  6E2A               	movwf	btemp^0,c
 37714  002614  6A2B               	clrf	(btemp+1)^0,c
 37715                           
 37716                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 37717  002616  52E5               	movf	postdec1,f,c
 37718  002618  52E5               	movf	postdec1,f,c
 37719  00261A  0012               	return		;funcret
 37720  00261C                     __end_of_isdigit:
 37721                           	opt callstack 0
 37722                           
 37723 ;; *************** function _set_vterm *****************
 37724 ;; Defined at:
 37725 ;;		line 110 in file "mconfig.c"
 37726 ;; Parameters:    Size  Location     Type
 37727 ;;  vterm           1  [STACK] const unsigned char 
 37728 ;; Auto vars:     Size  Location     Type
 37729 ;;		None
 37730 ;; Return value:  Size  Location     Type
 37731 ;;                  1  [STACK] unsigned char 
 37732 ;; Registers used:
 37733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 37734 ;; Tracked objects:
 37735 ;;		On entry : 0/2
 37736 ;;		On exit  : 0/0
 37737 ;;		Unchanged: 0/0
 37738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37743 ;;Total ram usage:        0 bytes
 37744 ;; Hardware stack levels used:    1
 37745 ;; Hardware stack levels required when called:   15
 37746 ;; This function calls:
 37747 ;;		Nothing
 37748 ;; This function is called by:
 37749 ;;		_main
 37750 ;;		_check_help
 37751 ;; This function uses a reentrant model
 37752 ;;
 37753                           
 37754                           	psect	text128
 37755  002B0E                     __ptext128:
 37756                           	opt callstack 0
 37757  002B0E                     _set_vterm:
 37758                           	opt callstack 15
 37759                           
 37760                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 37761                           ;stkvar	_vterm @ sp[(0)+-1]
 37762                           
 37763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37764                           ;incstack = 0
 37765  002B0E  0EFF               	movlw	-1
 37766  002B10  006F FF8C  F035    	movff	plusw1,btemp+11
 37767  002B16  0E03               	movlw	3
 37768  002B18  1635               	andwf	(btemp+11)^0,f,c
 37769  002B1A  EE22  F17F         	lfsr	2,_D+640
 37770  002B1E  50DF               	movf	223,w,c
 37771  002B20  1835               	xorwf	(btemp+11)^0,w,c
 37772  002B22  0BFE               	andlw	-2
 37773  002B24  1835               	xorwf	(btemp+11)^0,w,c
 37774  002B26  6EDF               	movwf	223,c
 37775                           
 37776                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 37777  002B28  52E5               	movf	postdec1,f,c
 37778  002B2A  0012               	return		;funcret
 37779  002B2C                     __end_of_set_vterm:
 37780                           	opt callstack 0
 37781                           
 37782 ;; *************** function _set_temp_display_help *****************
 37783 ;; Defined at:
 37784 ;;		line 217 in file "mconfig.c"
 37785 ;; Parameters:    Size  Location     Type
 37786 ;;  new_response    1  [STACK] const enum E16677
 37787 ;; Auto vars:     Size  Location     Type
 37788 ;;		None
 37789 ;; Return value:  Size  Location     Type
 37790 ;;                  1  [STACK] enum E16677
 37791 ;; Registers used:
 37792 ;;		wreg, fsr1l, fsr1h
 37793 ;; Tracked objects:
 37794 ;;		On entry : 0/2
 37795 ;;		On exit  : 3F/2
 37796 ;;		Unchanged: 0/0
 37797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37802 ;;Total ram usage:        0 bytes
 37803 ;; Hardware stack levels used:    1
 37804 ;; Hardware stack levels required when called:   15
 37805 ;; This function calls:
 37806 ;;		Nothing
 37807 ;; This function is called by:
 37808 ;;		_check_help
 37809 ;; This function uses a reentrant model
 37810 ;;
 37811                           
 37812                           	psect	text129
 37813  002C6E                     __ptext129:
 37814                           	opt callstack 0
 37815  002C6E                     _set_temp_display_help:
 37816                           	opt callstack 14
 37817                           
 37818                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 37819                           
 37820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37821                           ;incstack = 0
 37822  002C6E  0102               	movlb	2	; () banked
 37823  002C70  51A9               	movf	(_V+162)& (0+255),w,b	;volatile
 37824                           
 37825                           ; BSR set to: 2
 37826                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 37827                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37828  002C72  0EFF               	movlw	-1
 37829  002C74  006F FF8C  F2A9    	movff	plusw1,_V+162	;volatile
 37830                           
 37831                           ; BSR set to: 2
 37832                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 37833  002C7A  52E5               	movf	postdec1,f,c
 37834  002C7C  0012               	return		;funcret
 37835  002C7E                     __end_of_set_temp_display_help:
 37836                           	opt callstack 0
 37837                           
 37838 ;; *************** function _set_display_info *****************
 37839 ;; Defined at:
 37840 ;;		line 206 in file "mconfig.c"
 37841 ;; Parameters:    Size  Location     Type
 37842 ;;  new_response    1  [STACK] const enum E16677
 37843 ;; Auto vars:     Size  Location     Type
 37844 ;;		None
 37845 ;; Return value:  Size  Location     Type
 37846 ;;                  1  [STACK] enum E17160
 37847 ;; Registers used:
 37848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 37849 ;; Tracked objects:
 37850 ;;		On entry : 0/2
 37851 ;;		On exit  : 0/0
 37852 ;;		Unchanged: 0/0
 37853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37858 ;;Total ram usage:        0 bytes
 37859 ;; Hardware stack levels used:    1
 37860 ;; Hardware stack levels required when called:   16
 37861 ;; This function calls:
 37862 ;;		_TimerDone
 37863 ;; This function is called by:
 37864 ;;		_main
 37865 ;;		_check_help
 37866 ;; This function uses a reentrant model
 37867 ;;
 37868                           
 37869                           	psect	text130
 37870  002B2C                     __ptext130:
 37871                           	opt callstack 0
 37872  002B2C                     _set_display_info:
 37873                           	opt callstack 14
 37874                           
 37875                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 37876                           
 37877                           ; BSR set to: 2
 37878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37879                           ;incstack = 0
 37880  002B2C  0E07               	movlw	7
 37881  002B2E  6EE6               	movwf	postinc1,c
 37882  002B30  EC91  F013         	call	_TimerDone	;wreg free
 37883  002B34  502A               	movf	btemp^0,w,c
 37884  002B36  B4D8               	btfsc	status,2,c
 37885  002B38  D006               	goto	l1881
 37886                           
 37887                           ;mconfig.c: 211:   old_info = V.response.info;
 37888  002B3A  0102               	movlb	2	; () banked
 37889  002B3C  51A8               	movf	(_V+161)& (0+255),w,b	;volatile
 37890                           
 37891                           ; BSR set to: 2
 37892                           ;mconfig.c: 212:   V.response.info = new_response_info;
 37893                           ;stkvar	_new_response_info @ sp[(0)+-1]
 37894  002B3E  0EFF               	movlw	-1
 37895  002B40  006F FF8C  F2A8    	movff	plusw1,_V+161	;volatile
 37896  002B46                     l1881:
 37897                           
 37898                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 37899  002B46  52E5               	movf	postdec1,f,c
 37900  002B48  0012               	return		;funcret
 37901  002B4A                     __end_of_set_display_info:
 37902                           	opt callstack 0
 37903                           
 37904 ;; *************** function _mode_lamp_dim *****************
 37905 ;; Defined at:
 37906 ;;		line 13 in file "mconfig.c"
 37907 ;; Parameters:    Size  Location     Type
 37908 ;;  level           2  [STACK] const unsigned short 
 37909 ;; Auto vars:     Size  Location     Type
 37910 ;;		None
 37911 ;; Return value:  Size  Location     Type
 37912 ;;                  1  [STACK] void 
 37913 ;; Registers used:
 37914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37915 ;; Tracked objects:
 37916 ;;		On entry : 0/2
 37917 ;;		On exit  : 0/0
 37918 ;;		Unchanged: 0/0
 37919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37924 ;;Total ram usage:        0 bytes
 37925 ;; Hardware stack levels used:    1
 37926 ;; Hardware stack levels required when called:   16
 37927 ;; This function calls:
 37928 ;;		_PWM8_LoadDutyValue
 37929 ;; This function is called by:
 37930 ;;		_main
 37931 ;;		_check_help
 37932 ;; This function uses a reentrant model
 37933 ;;
 37934                           
 37935                           	psect	text131
 37936  002B7E                     __ptext131:
 37937                           	opt callstack 0
 37938  002B7E                     _mode_lamp_dim:
 37939                           	opt callstack 14
 37940                           
 37941                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 37942                           ;stkvar	_level @ sp[(0)+-2]
 37943                           
 37944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37945                           ;incstack = 0
 37946  002B7E  0EFE               	movlw	-2
 37947  002B80  006F FF8F FFE6     	movff	plusw1,postinc1
 37948  002B86  006F FF8F FFE6     	movff	plusw1,postinc1
 37949  002B8C  ECBF  F010         	call	_PWM8_LoadDutyValue	;wreg free
 37950                           
 37951                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 37952  002B90  52E5               	movf	postdec1,f,c
 37953  002B92  52E5               	movf	postdec1,f,c
 37954  002B94  0012               	return		;funcret
 37955  002B96                     __end_of_mode_lamp_dim:
 37956                           	opt callstack 0
 37957                           
 37958 ;; *************** function _mode_lamp_bright *****************
 37959 ;; Defined at:
 37960 ;;		line 18 in file "mconfig.c"
 37961 ;; Parameters:    Size  Location     Type
 37962 ;;		None
 37963 ;; Auto vars:     Size  Location     Type
 37964 ;;		None
 37965 ;; Return value:  Size  Location     Type
 37966 ;;                  1  [STACK] void 
 37967 ;; Registers used:
 37968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37969 ;; Tracked objects:
 37970 ;;		On entry : 0/0
 37971 ;;		On exit  : 0/0
 37972 ;;		Unchanged: 0/0
 37973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37978 ;;Total ram usage:        0 bytes
 37979 ;; Hardware stack levels used:    1
 37980 ;; Hardware stack levels required when called:   16
 37981 ;; This function calls:
 37982 ;;		_PWM8_LoadDutyValue
 37983 ;; This function is called by:
 37984 ;;		_check_help
 37985 ;; This function uses a reentrant model
 37986 ;;
 37987                           
 37988                           	psect	text132
 37989  002CAA                     __ptext132:
 37990                           	opt callstack 0
 37991  002CAA                     _mode_lamp_bright:
 37992                           	opt callstack 13
 37993                           
 37994                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 37995                           
 37996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37997                           ;incstack = 0
 37998  002CAA  0E2C               	movlw	44
 37999  002CAC  6EE6               	movwf	postinc1,c
 38000  002CAE  0E01               	movlw	1
 38001  002CB0  6EE6               	movwf	postinc1,c
 38002  002CB2  ECBF  F010         	call	_PWM8_LoadDutyValue	;wreg free
 38003                           
 38004                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 38005  002CB6  0012               	return		;funcret
 38006  002CB8                     __end_of_mode_lamp_bright:
 38007                           	opt callstack 0
 38008                           
 38009 ;; *************** function _PWM8_LoadDutyValue *****************
 38010 ;; Defined at:
 38011 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 38012 ;; Parameters:    Size  Location     Type
 38013 ;;  dutyValue       2  [STACK] unsigned short 
 38014 ;; Auto vars:     Size  Location     Type
 38015 ;;		None
 38016 ;; Return value:  Size  Location     Type
 38017 ;;                  1  [STACK] void 
 38018 ;; Registers used:
 38019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 38020 ;; Tracked objects:
 38021 ;;		On entry : 0/2
 38022 ;;		On exit  : 0/0
 38023 ;;		Unchanged: 0/0
 38024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38029 ;;Total ram usage:        0 bytes
 38030 ;; Hardware stack levels used:    1
 38031 ;; Hardware stack levels required when called:   15
 38032 ;; This function calls:
 38033 ;;		Nothing
 38034 ;; This function is called by:
 38035 ;;		_mode_lamp_dim
 38036 ;;		_mode_lamp_bright
 38037 ;; This function uses a reentrant model
 38038 ;;
 38039                           
 38040                           	psect	text133
 38041  00217E                     __ptext133:
 38042                           	opt callstack 0
 38043  00217E                     _PWM8_LoadDutyValue:
 38044                           	opt callstack 14
 38045                           
 38046                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 38047                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38048                           
 38049                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38050                           ;incstack = 0
 38051  00217E  0EFE               	movlw	-2
 38052  002180  006F FF8C  F034    	movff	plusw1,btemp+10
 38053  002186  0EFF               	movlw	-1
 38054  002188  006F FF8C  F035    	movff	plusw1,btemp+11
 38055  00218E  90D8               	bcf	status,0,c
 38056  002190  3235               	rrcf	(btemp+11)^0,f,c
 38057  002192  3234               	rrcf	(btemp+10)^0,f,c
 38058  002194  90D8               	bcf	status,0,c
 38059  002196  3235               	rrcf	(btemp+11)^0,f,c
 38060  002198  3234               	rrcf	(btemp+10)^0,f,c
 38061  00219A  5034               	movf	(btemp+10)^0,w,c
 38062  00219C  6E61               	movwf	97,c	;volatile
 38063                           
 38064                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 38065                           ;stkvar	_dutyValue @ sp[(0)+-2]
 38066  00219E  0EFE               	movlw	-2
 38067  0021A0  006F FF8C  F035    	movff	plusw1,btemp+11
 38068  0021A6  0E03               	movlw	3
 38069  0021A8  1635               	andwf	(btemp+11)^0,f,c
 38070  0021AA  0E06               	movlw	6
 38071  0021AC  6E2A               	movwf	btemp^0,c
 38072  0021AE                     u12245:
 38073  0021AE  90D8               	bcf	status,0,c
 38074  0021B0  3635               	rlcf	(btemp+11)^0,f,c
 38075  0021B2  2E2A               	decfsz	btemp^0,f,c
 38076  0021B4  D7FC               	goto	u12245
 38077  0021B6  5035               	movf	(btemp+11)^0,w,c
 38078  0021B8  6E60               	movwf	96,c	;volatile
 38079                           
 38080                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38081  0021BA  52E5               	movf	postdec1,f,c
 38082  0021BC  52E5               	movf	postdec1,f,c
 38083  0021BE  0012               	return		;funcret
 38084  0021C0                     __end_of_PWM8_LoadDutyValue:
 38085                           	opt callstack 0
 38086                           
 38087 ;; *************** function _help_button *****************
 38088 ;; Defined at:
 38089 ;;		line 26 in file "mconfig.c"
 38090 ;; Parameters:    Size  Location     Type
 38091 ;;		None
 38092 ;; Auto vars:     Size  Location     Type
 38093 ;;		None
 38094 ;; Return value:  Size  Location     Type
 38095 ;;                  1  [STACK] _Bool 
 38096 ;; Registers used:
 38097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38098 ;; Tracked objects:
 38099 ;;		On entry : 0/2
 38100 ;;		On exit  : 0/0
 38101 ;;		Unchanged: 0/0
 38102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38107 ;;Total ram usage:        0 bytes
 38108 ;; Hardware stack levels used:    1
 38109 ;; Hardware stack levels required when called:   16
 38110 ;; This function calls:
 38111 ;;		_StartTimer
 38112 ;;		_TimerDone
 38113 ;; This function is called by:
 38114 ;;		_check_help
 38115 ;; This function uses a reentrant model
 38116 ;;
 38117                           
 38118                           	psect	text134
 38119  0023B4                     __ptext134:
 38120                           	opt callstack 0
 38121  0023B4                     _help_button:
 38122                           	opt callstack 13
 38123                           
 38124                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 38125                           
 38126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38127                           ;incstack = 0
 38128  0023B4  B0CB               	btfsc	203,0,c	;volatile
 38129  0023B6  D00C               	goto	l1824
 38130                           
 38131                           ;mconfig.c: 29:   V.help = 1;
 38132  0023B8  0102               	movlb	2	; () banked
 38133  0023BA  859F               	bsf	(_V+152)& (0+255),2,b	;volatile
 38134                           
 38135                           ; BSR set to: 2
 38136                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 38137  0023BC  0E08               	movlw	8
 38138  0023BE  6EE6               	movwf	postinc1,c
 38139  0023C0  EC91  F013         	call	_TimerDone	;wreg free
 38140  0023C4  502A               	movf	btemp^0,w,c
 38141  0023C6  B4D8               	btfsc	status,2,c
 38142  0023C8  D003               	goto	l1824
 38143                           
 38144                           ;mconfig.c: 31:    return 1;
 38145  0023CA  0E01               	movlw	1
 38146  0023CC  6E2A               	movwf	btemp^0,c
 38147  0023CE  0012               	return	
 38148  0023D0                     l1824:
 38149                           
 38150                           ;mconfig.c: 34:  if (!V.help)
 38151  0023D0  0102               	movlb	2	; () banked
 38152  0023D2  B59F               	btfsc	(_V+152)& (0+255),2,b	;volatile
 38153  0023D4  D008               	goto	l13624
 38154                           
 38155                           ; BSR set to: 2
 38156                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 38157  0023D6  0E2C               	movlw	44
 38158  0023D8  6EE6               	movwf	postinc1,c
 38159  0023DA  0E01               	movlw	1
 38160  0023DC  6EE6               	movwf	postinc1,c
 38161  0023DE  0E08               	movlw	8
 38162  0023E0  6EE6               	movwf	postinc1,c
 38163  0023E2  EC20  F011         	call	_StartTimer	;wreg free
 38164  0023E6                     l13624:
 38165                           
 38166                           ;mconfig.c: 37:  return 0;
 38167  0023E6  0E00               	movlw	0
 38168  0023E8  6E2A               	movwf	btemp^0,c
 38169                           
 38170                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 38171  0023EA  0012               	return		;funcret
 38172  0023EC                     __end_of_help_button:
 38173                           	opt callstack 0
 38174                           
 38175 ;; *************** function _TimerDone *****************
 38176 ;; Defined at:
 38177 ;;		line 20 in file "timers.c"
 38178 ;; Parameters:    Size  Location     Type
 38179 ;;  timer           1  [STACK] const unsigned char 
 38180 ;; Auto vars:     Size  Location     Type
 38181 ;;		None
 38182 ;; Return value:  Size  Location     Type
 38183 ;;                  1  [STACK] _Bool 
 38184 ;; Registers used:
 38185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38186 ;; Tracked objects:
 38187 ;;		On entry : 0/2
 38188 ;;		On exit  : 0/0
 38189 ;;		Unchanged: 0/0
 38190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38195 ;;Total ram usage:        0 bytes
 38196 ;; Hardware stack levels used:    1
 38197 ;; Hardware stack levels required when called:   15
 38198 ;; This function calls:
 38199 ;;		Nothing
 38200 ;; This function is called by:
 38201 ;;		_main
 38202 ;;		_WaitMs
 38203 ;;		_help_button
 38204 ;;		_check_help
 38205 ;;		_set_display_info
 38206 ;;		_update_adc_result
 38207 ;;		_esr_check
 38208 ;; This function uses a reentrant model
 38209 ;;
 38210                           
 38211                           	psect	text135
 38212  002722                     __ptext135:
 38213                           	opt callstack 0
 38214  002722                     _TimerDone:
 38215                           	opt callstack 14
 38216                           
 38217                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38218                           ;incstack = 0
 38219  002722  0004               	clrwdt		;# 
 38220                           
 38221                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 38222                           ;stkvar	_timer @ sp[(0)+-1]
 38223  002724  0EFF               	movlw	-1
 38224  002726  50E3               	movf	plusw1,w,c
 38225  002728  0D02               	mullw	2
 38226  00272A  0EBC               	movlw	low _tickCount
 38227  00272C  24F3               	addwf	243,w,c
 38228  00272E  6ED9               	movwf	fsr2l,c
 38229  002730  0E02               	movlw	high _tickCount
 38230  002732  20F4               	addwfc	prodh,w,c
 38231  002734  6EDA               	movwf	fsr2h,c
 38232  002736  50DE               	movf	postinc2,w,c
 38233  002738  10DE               	iorwf	postinc2,w,c
 38234  00273A  A4D8               	btfss	status,2,c
 38235  00273C  D002               	goto	l12380
 38236                           
 38237                           ;timers.c: 24:   return 1;
 38238  00273E  0E01               	movlw	1
 38239  002740  D001               	goto	L42
 38240  002742                     l12380:
 38241                           
 38242                           ;timers.c: 26:  return 0;
 38243  002742  0E00               	movlw	0
 38244  002744                     L42:
 38245  002744  6E2A               	movwf	btemp^0,c
 38246                           
 38247                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 38248  002746  52E5               	movf	postdec1,f,c
 38249  002748  0012               	return		;funcret
 38250  00274A                     __end_of_TimerDone:
 38251                           	opt callstack 0
 38252                           
 38253 ;; *************** function _StartTimer *****************
 38254 ;; Defined at:
 38255 ;;		line 12 in file "timers.c"
 38256 ;; Parameters:    Size  Location     Type
 38257 ;;  timer           1  [STACK] const unsigned char 
 38258 ;;  count           2  [STACK] const unsigned short 
 38259 ;; Auto vars:     Size  Location     Type
 38260 ;;		None
 38261 ;; Return value:  Size  Location     Type
 38262 ;;                  1  [STACK] void 
 38263 ;; Registers used:
 38264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38265 ;; Tracked objects:
 38266 ;;		On entry : 0/0
 38267 ;;		On exit  : 0/0
 38268 ;;		Unchanged: 0/0
 38269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38274 ;;Total ram usage:        0 bytes
 38275 ;; Hardware stack levels used:    1
 38276 ;; Hardware stack levels required when called:   15
 38277 ;; This function calls:
 38278 ;;		Nothing
 38279 ;; This function is called by:
 38280 ;;		_main
 38281 ;;		_WaitMs
 38282 ;;		_help_button
 38283 ;;		_check_help
 38284 ;;		_update_adc_result
 38285 ;;		_calc_bsoc
 38286 ;;		_esr_check
 38287 ;; This function uses a reentrant model
 38288 ;;
 38289                           
 38290                           	psect	text136
 38291  002240                     __ptext136:
 38292                           	opt callstack 0
 38293  002240                     _StartTimer:
 38294                           	opt callstack 0
 38295                           
 38296                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 38297                           ;stkvar	_count @ sp[(0)+-3]
 38298                           
 38299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38300                           ;incstack = 0
 38301 ;; hardware stack exceeded
 38302  002240  0EFD               	movlw	-3
 38303  002242  006F FF8C  F034    	movff	plusw1,btemp+10
 38304  002248  0EFE               	movlw	-2
 38305  00224A  006F FF8C  F035    	movff	plusw1,btemp+11
 38306  002250  90D8               	bcf	status,0,c
 38307  002252  3434               	rlcf	(btemp+10)^0,w,c
 38308  002254  6E32               	movwf	(btemp+8)^0,c
 38309  002256  3435               	rlcf	(btemp+11)^0,w,c
 38310  002258  6E33               	movwf	(btemp+9)^0,c
 38311                           
 38312                           ;stkvar	_timer @ sp[(0)+-1]
 38313  00225A  0EFF               	movlw	-1
 38314  00225C  50E3               	movf	plusw1,w,c
 38315  00225E  0D02               	mullw	2
 38316  002260  0EBC               	movlw	low _tickCount
 38317  002262  24F3               	addwf	243,w,c
 38318  002264  6ED9               	movwf	fsr2l,c
 38319  002266  0E02               	movlw	high _tickCount
 38320  002268  20F4               	addwfc	prodh,w,c
 38321  00226A  6EDA               	movwf	fsr2h,c
 38322  00226C  0060  F0CB  FFDE   	movff	btemp+8,postinc2
 38323  002272  0060  F0CF  FFDD   	movff	btemp+9,postdec2
 38324                           
 38325                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 38326  002278  52E5               	movf	postdec1,f,c
 38327  00227A  52E5               	movf	postdec1,f,c
 38328  00227C  52E5               	movf	postdec1,f,c
 38329  00227E  0012               	return		;funcret
 38330  002280                     __end_of_StartTimer:
 38331                           	opt callstack 0
 38332                           
 38333 ;; *************** function _display_info *****************
 38334 ;; Defined at:
 38335 ;;		line 196 in file "mconfig.c"
 38336 ;; Parameters:    Size  Location     Type
 38337 ;;		None
 38338 ;; Auto vars:     Size  Location     Type
 38339 ;;		None
 38340 ;; Return value:  Size  Location     Type
 38341 ;;                  1  [STACK] enum E16677
 38342 ;; Registers used:
 38343 ;;		btemp
 38344 ;; Tracked objects:
 38345 ;;		On entry : 0/2
 38346 ;;		On exit  : 0/0
 38347 ;;		Unchanged: 0/0
 38348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38353 ;;Total ram usage:        0 bytes
 38354 ;; Hardware stack levels used:    1
 38355 ;; Hardware stack levels required when called:   15
 38356 ;; This function calls:
 38357 ;;		Nothing
 38358 ;; This function is called by:
 38359 ;;		_check_help
 38360 ;; This function uses a reentrant model
 38361 ;;
 38362                           
 38363                           	psect	text137
 38364  002D2E                     __ptext137:
 38365                           	opt callstack 0
 38366  002D2E                     _display_info:
 38367                           	opt callstack 14
 38368                           
 38369                           ;mconfig.c: 198:  return V.response.info;
 38370                           
 38371                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38372                           ;incstack = 0
 38373  002D2E  0060  FAA0  F02A   	movff	_V+161,btemp	;volatile
 38374                           
 38375                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38376  002D34  0012               	return		;funcret
 38377  002D36                     __end_of_display_info:
 38378                           	opt callstack 0
 38379                           
 38380 ;; *************** function _display_help *****************
 38381 ;; Defined at:
 38382 ;;		line 201 in file "mconfig.c"
 38383 ;; Parameters:    Size  Location     Type
 38384 ;;		None
 38385 ;; Auto vars:     Size  Location     Type
 38386 ;;		None
 38387 ;; Return value:  Size  Location     Type
 38388 ;;                  1  [STACK] enum E16677
 38389 ;; Registers used:
 38390 ;;		btemp
 38391 ;; Tracked objects:
 38392 ;;		On entry : 3F/2
 38393 ;;		On exit  : 0/0
 38394 ;;		Unchanged: 0/0
 38395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38400 ;;Total ram usage:        0 bytes
 38401 ;; Hardware stack levels used:    1
 38402 ;; Hardware stack levels required when called:   15
 38403 ;; This function calls:
 38404 ;;		Nothing
 38405 ;; This function is called by:
 38406 ;;		_check_help
 38407 ;; This function uses a reentrant model
 38408 ;;
 38409                           
 38410                           	psect	text138
 38411  002D36                     __ptext138:
 38412                           	opt callstack 0
 38413  002D36                     _display_help:
 38414                           	opt callstack 14
 38415                           
 38416                           ;mconfig.c: 203:  return V.response.help_temp;
 38417                           
 38418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38419                           ;incstack = 0
 38420  002D36  0060  FAA4  F02A   	movff	_V+162,btemp	;volatile
 38421                           
 38422                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 38423  002D3C  0012               	return		;funcret
 38424  002D3E                     __end_of_display_help:
 38425                           	opt callstack 0
 38426                           
 38427 ;; *************** function _check_enter_button *****************
 38428 ;; Defined at:
 38429 ;;		line 49 in file "hid.c"
 38430 ;; Parameters:    Size  Location     Type
 38431 ;;  h               2  [STACK] PTR struct H_data
 38432 ;;		 -> H(9), 
 38433 ;; Auto vars:     Size  Location     Type
 38434 ;;		None
 38435 ;; Return value:  Size  Location     Type
 38436 ;;                  1  [STACK] _Bool 
 38437 ;; Registers used:
 38438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 38439 ;; Tracked objects:
 38440 ;;		On entry : 0/0
 38441 ;;		On exit  : 0/0
 38442 ;;		Unchanged: 0/0
 38443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38448 ;;Total ram usage:        0 bytes
 38449 ;; Hardware stack levels used:    1
 38450 ;; Hardware stack levels required when called:   15
 38451 ;; This function calls:
 38452 ;;		Nothing
 38453 ;; This function is called by:
 38454 ;;		_main
 38455 ;; This function uses a reentrant model
 38456 ;;
 38457                           
 38458                           	psect	text139
 38459  001774                     __ptext139:
 38460                           	opt callstack 0
 38461  001774                     _check_enter_button:
 38462                           	opt callstack 15
 38463                           
 38464                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 38465                           ;stkvar	_h @ sp[(0)+-2]
 38466                           
 38467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38468                           ;incstack = 0
 38469  001774  0EFE               	movlw	-2
 38470  001776  006F FF8C  F034    	movff	plusw1,btemp+10
 38471  00177C  0EFF               	movlw	-1
 38472  00177E  006F FF8C  F035    	movff	plusw1,btemp+11
 38473  001784  0E04               	movlw	4
 38474  001786  2434               	addwf	(btemp+10)^0,w,c
 38475  001788  6ED9               	movwf	fsr2l,c
 38476  00178A  0E00               	movlw	0
 38477  00178C  2035               	addwfc	(btemp+11)^0,w,c
 38478  00178E  6EDA               	movwf	fsr2h,c
 38479  001790  50DF               	movf	indf2,w,c
 38480  001792  A4D8               	btfss	status,2,c
 38481  001794  D023               	goto	l17338
 38482                           
 38483                           ;stkvar	_h @ sp[(0)+-2]
 38484  001796  0EFE               	movlw	-2
 38485  001798  006F FF8C  F034    	movff	plusw1,btemp+10
 38486  00179E  0EFF               	movlw	-1
 38487  0017A0  006F FF8C  F035    	movff	plusw1,btemp+11
 38488  0017A6  0E05               	movlw	5
 38489  0017A8  2434               	addwf	(btemp+10)^0,w,c
 38490  0017AA  6ED9               	movwf	fsr2l,c
 38491  0017AC  0E00               	movlw	0
 38492  0017AE  2035               	addwfc	(btemp+11)^0,w,c
 38493  0017B0  6EDA               	movwf	fsr2h,c
 38494  0017B2  50DF               	movf	indf2,w,c
 38495  0017B4  A4D8               	btfss	status,2,c
 38496  0017B6  D012               	goto	l17338
 38497                           
 38498                           ;hid.c: 52:   h->wait_enter = 1;
 38499                           ;stkvar	_h @ sp[(0)+-2]
 38500  0017B8  0EFE               	movlw	-2
 38501  0017BA  006F FF8C  F034    	movff	plusw1,btemp+10
 38502  0017C0  0EFF               	movlw	-1
 38503  0017C2  006F FF8C  F035    	movff	plusw1,btemp+11
 38504  0017C8  0E04               	movlw	4
 38505  0017CA  2434               	addwf	(btemp+10)^0,w,c
 38506  0017CC  6ED9               	movwf	fsr2l,c
 38507  0017CE  0E00               	movlw	0
 38508  0017D0  2035               	addwfc	(btemp+11)^0,w,c
 38509  0017D2  6EDA               	movwf	fsr2h,c
 38510  0017D4  0E01               	movlw	1
 38511  0017D6  6EDF               	movwf	indf2,c
 38512                           
 38513                           ;hid.c: 53:   return 1;
 38514  0017D8  0E01               	movlw	1
 38515  0017DA  D001               	goto	L43
 38516  0017DC                     l17338:
 38517                           
 38518                           ;hid.c: 55:  return 0;
 38519  0017DC  0E00               	movlw	0
 38520  0017DE                     L43:
 38521  0017DE  6E2A               	movwf	btemp^0,c
 38522                           
 38523                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 38524  0017E0  52E5               	movf	postdec1,f,c
 38525  0017E2  52E5               	movf	postdec1,f,c
 38526  0017E4  0012               	return		;funcret
 38527  0017E6                     __end_of_check_enter_button:
 38528                           	opt callstack 0
 38529                           
 38530 ;; *************** function _calc_ror_data *****************
 38531 ;; Defined at:
 38532 ;;		line 103 in file "mbmc.c"
 38533 ;; Parameters:    Size  Location     Type
 38534 ;;		None
 38535 ;; Auto vars:     Size  Location     Type
 38536 ;;		None
 38537 ;; Return value:  Size  Location     Type
 38538 ;;                  1  [STACK] void 
 38539 ;; Registers used:
 38540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38541 ;; Tracked objects:
 38542 ;;		On entry : 0/0
 38543 ;;		On exit  : 0/0
 38544 ;;		Unchanged: 0/0
 38545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38550 ;;Total ram usage:        0 bytes
 38551 ;; Hardware stack levels used:    1
 38552 ;; Hardware stack levels required when called:   18
 38553 ;; This function calls:
 38554 ;;		___flge
 38555 ;;		___flsub
 38556 ;;		_conv_raw_result
 38557 ;;		_fabsf
 38558 ;; This function is called by:
 38559 ;;		_main
 38560 ;; This function uses a reentrant model
 38561 ;;
 38562                           
 38563                           	psect	text140
 38564  01E51A                     __ptext140:
 38565                           	opt callstack 0
 38566  01E51A                     _calc_ror_data:
 38567                           	opt callstack 12
 38568                           
 38569                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 38570                           
 38571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38572                           ;incstack = 0
 38573  01E51A  0060  F203  FFE6   	movff	calc_ror_data@bcror,postinc1
 38574  01E520  0060  F207  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 38575  01E526  0060  F20B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 38576  01E52C  0060  F20F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 38577  01E532  0E00               	movlw	0
 38578  01E534  6EE6               	movwf	postinc1,c
 38579  01E536  0E00               	movlw	0
 38580  01E538  6EE6               	movwf	postinc1,c
 38581  01E53A  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38582  01E53E  0060  F0AB  FFE6   	movff	btemp,postinc1
 38583  01E544  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38584  01E54A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38585  01E550  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38586  01E556  EC7A  F010         	call	___flsub	;wreg free
 38587  01E55A  0060  F0AB  FFE6   	movff	btemp,postinc1
 38588  01E560  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38589  01E566  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38590  01E56C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38591  01E572  ECBC  F005         	call	_fabsf	;wreg free
 38592  01E576  0060  F0A8  FBF1   	movff	btemp,_C+112	;volatile
 38593  01E57C  0060  F0AC  FBF2   	movff	btemp+1,_C+113	;volatile
 38594  01E582  0060  F0B0  FBF3   	movff	btemp+2,_C+114	;volatile
 38595  01E588  0060  F0B4  FBF4   	movff	btemp+3,_C+115	;volatile
 38596                           
 38597                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 38598  01E58E  0E00               	movlw	0
 38599  01E590  6EE6               	movwf	postinc1,c
 38600  01E592  0E00               	movlw	0
 38601  01E594  6EE6               	movwf	postinc1,c
 38602  01E596  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38603  01E59A  0060  F0A8  F080   	movff	btemp,calc_ror_data@bcror
 38604  01E5A0  0060  F0AC  F081   	movff	btemp+1,calc_ror_data@bcror+1
 38605  01E5A6  0060  F0B0  F082   	movff	btemp+2,calc_ror_data@bcror+2
 38606  01E5AC  0060  F0B4  F083   	movff	btemp+3,calc_ror_data@bcror+3
 38607                           
 38608                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 38609  01E5B2  0060  F213  FFE6   	movff	calc_ror_data@bvror,postinc1
 38610  01E5B8  0060  F217  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 38611  01E5BE  0060  F21B  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 38612  01E5C4  0060  F21F  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 38613  01E5CA  0E00               	movlw	0
 38614  01E5CC  6EE6               	movwf	postinc1,c
 38615  01E5CE  0E04               	movlw	4
 38616  01E5D0  6EE6               	movwf	postinc1,c
 38617  01E5D2  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38618  01E5D6  0060  F0AB  FFE6   	movff	btemp,postinc1
 38619  01E5DC  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38620  01E5E2  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38621  01E5E8  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38622  01E5EE  EC7A  F010         	call	___flsub	;wreg free
 38623  01E5F2  0060  F0AB  FFE6   	movff	btemp,postinc1
 38624  01E5F8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38625  01E5FE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38626  01E604  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38627  01E60A  ECBC  F005         	call	_fabsf	;wreg free
 38628  01E60E  0060  F0A8  FBED   	movff	btemp,_C+108	;volatile
 38629  01E614  0060  F0AC  FBEE   	movff	btemp+1,_C+109	;volatile
 38630  01E61A  0060  F0B0  FBEF   	movff	btemp+2,_C+110	;volatile
 38631  01E620  0060  F0B4  FBF0   	movff	btemp+3,_C+111	;volatile
 38632                           
 38633                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 38634  01E626  0EE7               	movlw	231
 38635  01E628  6EE6               	movwf	postinc1,c
 38636  01E62A  0E1D               	movlw	29
 38637  01E62C  6EE6               	movwf	postinc1,c
 38638  01E62E  0EA7               	movlw	167
 38639  01E630  6EE6               	movwf	postinc1,c
 38640  01E632  0E3B               	movlw	59
 38641  01E634  6EE6               	movwf	postinc1,c
 38642  01E636  EE22  F3ED         	lfsr	2,_C+108	;volatile
 38643  01E63A  006F FF7B FFE6     	movff	postinc2,postinc1
 38644  01E640  006F FF7B FFE6     	movff	postinc2,postinc1
 38645  01E646  006F FF7B FFE6     	movff	postinc2,postinc1
 38646  01E64C  006F FF7B FFE6     	movff	postinc2,postinc1
 38647  01E652  EC35  F0F6         	call	___flge	;wreg free
 38648  01E656  B02A               	btfsc	btemp& (0+255),0,c
 38649  01E658  D010               	goto	l14214
 38650                           
 38651                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 38652  01E65A  0EB0               	movlw	176
 38653  01E65C  006F FFA0  FBED    	movff	wreg,_C+108	;volatile
 38654  01E662  0E03               	movlw	3
 38655  01E664  006F FFA0  FBEE    	movff	wreg,_C+109	;volatile
 38656  01E66A  0E67               	movlw	103
 38657  01E66C  006F FFA0  FBEF    	movff	wreg,_C+110	;volatile
 38658  01E672  0E3C               	movlw	60
 38659  01E674  006F FFA0  FBF0    	movff	wreg,_C+111	;volatile
 38660  01E67A                     l14214:
 38661                           
 38662                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 38663  01E67A  0E00               	movlw	0
 38664  01E67C  6EE6               	movwf	postinc1,c
 38665  01E67E  0E04               	movlw	4
 38666  01E680  6EE6               	movwf	postinc1,c
 38667  01E682  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 38668  01E686  0060  F0A8  F084   	movff	btemp,calc_ror_data@bvror
 38669  01E68C  0060  F0AC  F085   	movff	btemp+1,calc_ror_data@bvror+1
 38670  01E692  0060  F0B0  F086   	movff	btemp+2,calc_ror_data@bvror+2
 38671  01E698  0060  F0B4  F087   	movff	btemp+3,calc_ror_data@bvror+3
 38672                           
 38673                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 38674  01E69E  0012               	return		;funcret
 38675  01E6A0                     __end_of_calc_ror_data:
 38676                           	opt callstack 0
 38677                           
 38678 ;; *************** function _fabsf *****************
 38679 ;; Defined at:
 38680 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 38681 ;; Parameters:    Size  Location     Type
 38682 ;;  x               4  [STACK] float 
 38683 ;; Auto vars:     Size  Location     Type
 38684 ;;  u               4  [STACK] struct .
 38685 ;; Return value:  Size  Location     Type
 38686 ;;                  4  [STACK] float 
 38687 ;; Registers used:
 38688 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 38689 ;; Tracked objects:
 38690 ;;		On entry : 0/0
 38691 ;;		On exit  : 0/0
 38692 ;;		Unchanged: 0/0
 38693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38698 ;;Total ram usage:        0 bytes
 38699 ;; Hardware stack levels used:    1
 38700 ;; Hardware stack levels required when called:   15
 38701 ;; This function calls:
 38702 ;;		Nothing
 38703 ;; This function is called by:
 38704 ;;		_main
 38705 ;;		_calc_ror_data
 38706 ;;		_calc_bsoc
 38707 ;;		_esr_check
 38708 ;; This function uses a reentrant model
 38709 ;;
 38710                           
 38711                           	psect	text141
 38712  000B78                     __ptext141:
 38713                           	opt callstack 0
 38714  000B78                     _fabsf:
 38715                           	opt callstack 0
 38716                           
 38717                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38718  000B78  52E6               	movf	postinc1,f,c
 38719  000B7A  52E6               	movf	postinc1,f,c
 38720  000B7C  52E6               	movf	postinc1,f,c
 38721  000B7E  52E6               	movf	postinc1,f,c
 38722                           
 38723                           ;incstack = 0
 38724 ;; hardware stack exceeded
 38725  000B80  0060  F1E0  F032   	movff	fabsf@F463,btemp+8
 38726  000B86  0060  F1E4  F033   	movff	fabsf@F463+1,btemp+9
 38727  000B8C  0060  F1E8  F034   	movff	fabsf@F463+2,btemp+10
 38728  000B92  0060  F1EC  F035   	movff	fabsf@F463+3,btemp+11
 38729                           
 38730                           ;stkvar	_u @ sp[(-4)+0]
 38731  000B98  0EFC               	movlw	-4
 38732  000B9A  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38733  000BA0  0EFD               	movlw	-3
 38734  000BA2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38735  000BA8  0EFE               	movlw	-2
 38736  000BAA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38737  000BB0  0EFF               	movlw	-1
 38738  000BB2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38739                           
 38740                           ;stkvar	_x @ sp[(-4)+-4]
 38741  000BB8  0EF8               	movlw	-8
 38742  000BBA  006F FF8C  F032    	movff	plusw1,btemp+8
 38743  000BC0  0EF9               	movlw	-7
 38744  000BC2  006F FF8C  F033    	movff	plusw1,btemp+9
 38745  000BC8  0EFA               	movlw	-6
 38746  000BCA  006F FF8C  F034    	movff	plusw1,btemp+10
 38747  000BD0  0EFB               	movlw	-5
 38748  000BD2  006F FF8C  F035    	movff	plusw1,btemp+11
 38749                           
 38750                           ;stkvar	_u @ sp[(-4)+0]
 38751  000BD8  0EFC               	movlw	-4
 38752  000BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 38753  000BE0  0EFD               	movlw	-3
 38754  000BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 38755  000BE8  0EFE               	movlw	-2
 38756  000BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 38757  000BF0  0EFF               	movlw	-1
 38758  000BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 38759                           
 38760                           ;stkvar	_u @ sp[(-4)+0]
 38761  000BF8  0EFF               	movlw	-1
 38762  000BFA  9EE3               	bcf	plusw1,7,c
 38763                           
 38764                           ;stkvar	_u @ sp[(-4)+0]
 38765  000BFC  0EFC               	movlw	-4
 38766  000BFE  006F FF8C  F02A    	movff	plusw1,btemp
 38767  000C04  0EFD               	movlw	-3
 38768  000C06  006F FF8C  F02B    	movff	plusw1,btemp+1
 38769  000C0C  0EFE               	movlw	-2
 38770  000C0E  006F FF8C  F02C    	movff	plusw1,btemp+2
 38771  000C14  0EFF               	movlw	-1
 38772  000C16  006F FF8C  F02D    	movff	plusw1,btemp+3
 38773                           
 38774                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 38775  000C1C  0EF8               	movlw	248
 38776  000C1E  26E1               	addwf	fsr1l,f,c
 38777  000C20  0EFF               	movlw	255
 38778  000C22  22E2               	addwfc	fsr1h,f,c
 38779  000C24  0012               	return		;funcret
 38780  000C26                     __end_of_fabsf:
 38781                           	opt callstack 0
 38782                           
 38783 ;; *************** function _conv_raw_result *****************
 38784 ;; Defined at:
 38785 ;;		line 135 in file "daq.c"
 38786 ;; Parameters:    Size  Location     Type
 38787 ;;  chan            1  [STACK] const enum E16605
 38788 ;;  to_what         1  [STACK] const enum E16996
 38789 ;; Auto vars:     Size  Location     Type
 38790 ;;		None
 38791 ;; Return value:  Size  Location     Type
 38792 ;;                  4  [STACK] float 
 38793 ;; Registers used:
 38794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 38795 ;; Tracked objects:
 38796 ;;		On entry : 0/0
 38797 ;;		On exit  : 0/0
 38798 ;;		Unchanged: 0/0
 38799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38804 ;;Total ram usage:        0 bytes
 38805 ;; Hardware stack levels used:    1
 38806 ;; Hardware stack levels required when called:   17
 38807 ;; This function calls:
 38808 ;;		___fldiv
 38809 ;;		___flmul
 38810 ;;		___flsub
 38811 ;;		___xxtofl
 38812 ;;		_get_raw_result
 38813 ;;		_nanf
 38814 ;; This function is called by:
 38815 ;;		_main
 38816 ;;		_convert_adc_data
 38817 ;;		_calc_ror_data
 38818 ;;		_check_day_time
 38819 ;;		_init_bsoc
 38820 ;;		_esr_check
 38821 ;; This function uses a reentrant model
 38822 ;;
 38823                           
 38824                           	psect	text142
 38825  018D58                     __ptext142:
 38826                           	opt callstack 0
 38827  018D58                     _conv_raw_result:
 38828                           	opt callstack 0
 38829                           
 38830                           ;daq.c: 135: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 136: {;daq.c: 138:  switch (to_what) {
 38831                           
 38832                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38833                           ;incstack = 0
 38834 ;; hardware stack exceeded
 38835  018D58  D24A               	goto	l12362
 38836  018D5A                     l12308:
 38837                           
 38838                           ;daq.c: 140:   if (!(0b0011110001110111 >> chan & 0x1))
 38839                           ;stkvar	_chan @ sp[(0)+-1]
 38840  018D5A  0EFF               	movlw	-1
 38841  018D5C  006F FF8C  F035    	movff	plusw1,btemp+11
 38842  018D62  0E77               	movlw	119
 38843  018D64  6E32               	movwf	(btemp+8)^0,c
 38844  018D66  0E3C               	movlw	60
 38845  018D68  6E33               	movwf	(btemp+9)^0,c
 38846  018D6A  2A35               	incf	(btemp+11)^0,f,c
 38847  018D6C  D003               	goto	u11614
 38848  018D6E                     u11615:
 38849  018D6E  3433               	rlcf	(btemp+9)^0,w,c
 38850  018D70  3233               	rrcf	(btemp+9)^0,f,c
 38851  018D72  3232               	rrcf	(btemp+8)^0,f,c
 38852  018D74                     u11614:
 38853  018D74  2E35               	decfsz	(btemp+11)^0,f,c
 38854  018D76  D7FB               	goto	u11615
 38855  018D78  B032               	btfsc	(btemp+8)^0,0,c
 38856  018D7A  D007               	goto	l12314
 38857                           
 38858                           ;daq.c: 141:    return nanf("");
 38859  018D7C  0E75               	movlw	low (STR_95+126)
 38860  018D7E  6EE6               	movwf	postinc1,c
 38861  018D80  0EFA               	movlw	high (STR_95+126)
 38862  018D82  6EE6               	movwf	postinc1,c
 38863  018D84  ECC2  F00D         	call	_nanf	;wreg free
 38864  018D88  D242               	goto	l1981
 38865  018D8A                     l12314:
 38866                           
 38867                           ;daq.c: 143:   if (0b0000000000000011 >> chan & 0x1) {
 38868                           ;stkvar	_chan @ sp[(0)+-1]
 38869  018D8A  0EFF               	movlw	-1
 38870  018D8C  006F FF8C  F035    	movff	plusw1,btemp+11
 38871  018D92  0E03               	movlw	3
 38872  018D94  6E32               	movwf	(btemp+8)^0,c
 38873  018D96  0E00               	movlw	0
 38874  018D98  6E33               	movwf	(btemp+9)^0,c
 38875  018D9A  2A35               	incf	(btemp+11)^0,f,c
 38876  018D9C  D003               	goto	u11634
 38877  018D9E                     u11635:
 38878  018D9E  3433               	rlcf	(btemp+9)^0,w,c
 38879  018DA0  3233               	rrcf	(btemp+9)^0,f,c
 38880  018DA2  3232               	rrcf	(btemp+8)^0,f,c
 38881  018DA4                     u11634:
 38882  018DA4  2E35               	decfsz	(btemp+11)^0,f,c
 38883  018DA6  D7FB               	goto	u11635
 38884  018DA8  A032               	btfss	(btemp+8)^0,0,c
 38885  018DAA  D0F3               	goto	l12328
 38886                           
 38887                           ;daq.c: 144:    if (0b0000000000000001 >> chan & 0x1) {
 38888                           ;stkvar	_chan @ sp[(0)+-1]
 38889  018DAC  0EFF               	movlw	-1
 38890  018DAE  006F FF8C  F035    	movff	plusw1,btemp+11
 38891  018DB4  0E01               	movlw	1
 38892  018DB6  6E32               	movwf	(btemp+8)^0,c
 38893  018DB8  0E00               	movlw	0
 38894  018DBA  6E33               	movwf	(btemp+9)^0,c
 38895  018DBC  2A35               	incf	(btemp+11)^0,f,c
 38896  018DBE  D003               	goto	u11654
 38897  018DC0                     u11655:
 38898  018DC0  3433               	rlcf	(btemp+9)^0,w,c
 38899  018DC2  3233               	rrcf	(btemp+9)^0,f,c
 38900  018DC4  3232               	rrcf	(btemp+8)^0,f,c
 38901  018DC6                     u11654:
 38902  018DC6  2E35               	decfsz	(btemp+11)^0,f,c
 38903  018DC8  D7FB               	goto	u11655
 38904  018DCA  A032               	btfss	(btemp+8)^0,0,c
 38905  018DCC  D071               	goto	l12324
 38906                           
 38907                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 38908  018DCE  0060  F4AB  FFE6   	movff	_R+42,postinc1
 38909  018DD4  0060  F4AF  FFE6   	movff	_R+43,postinc1
 38910  018DDA  0060  F4B3  FFE6   	movff	_R+44,postinc1
 38911  018DE0  0060  F4B7  FFE6   	movff	_R+45,postinc1
 38912  018DE6  0060  F498  F032   	movff	_R+38,btemp+8	;volatile
 38913  018DEC  0060  F49C  F033   	movff	_R+39,btemp+9	;volatile
 38914  018DF2  0E00               	movlw	0
 38915  018DF4  BE33               	btfsc	(btemp+9)^0,7,c
 38916  018DF6  0EFF               	movlw	255
 38917  018DF8  6E34               	movwf	(btemp+10)^0,c
 38918  018DFA  6E35               	movwf	(btemp+11)^0,c
 38919  018DFC  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38920  018E02  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38921  018E08  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38922  018E0E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38923  018E14  0E01               	movlw	1
 38924  018E16  6EE6               	movwf	postinc1,c
 38925  018E18  EC9B  F0EC         	call	___xxtofl	;wreg free
 38926  018E1C  0060  F0AB  FFE6   	movff	btemp,postinc1
 38927  018E22  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38928  018E28  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38929  018E2E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38930                           
 38931                           ;stkvar	_chan @ sp[(-8)+-1]
 38932  018E34  0EF7               	movlw	-9
 38933  018E36  50E3               	movf	plusw1,w,c
 38934  018E38  6EE6               	movwf	postinc1,c
 38935  018E3A  EC16  F015         	call	_get_raw_result	;wreg free
 38936  018E3E  0060  F0A8  F034   	movff	btemp,btemp+10
 38937  018E44  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38938  018E4A  5034               	movf	(btemp+10)^0,w,c
 38939  018E4C  6E2E               	movwf	(btemp+4)^0,c
 38940  018E4E  5035               	movf	(btemp+11)^0,w,c
 38941  018E50  6E2F               	movwf	(btemp+5)^0,c
 38942  018E52  6A30               	clrf	(btemp+6)^0,c
 38943  018E54  6A31               	clrf	(btemp+7)^0,c
 38944  018E56  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 38945  018E5C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 38946  018E62  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 38947  018E68  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 38948  018E6E  0E00               	movlw	0
 38949  018E70  6EE6               	movwf	postinc1,c
 38950  018E72  EC9B  F0EC         	call	___xxtofl	;wreg free
 38951  018E76  0060  F0AB  FFE6   	movff	btemp,postinc1
 38952  018E7C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38953  018E82  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38954  018E88  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38955  018E8E  EC7A  F010         	call	___flsub	;wreg free
 38956  018E92  0060  F0AB  FFE6   	movff	btemp,postinc1
 38957  018E98  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38958  018E9E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38959  018EA4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38960  018EAA  EC32  F0B3         	call	___flmul	;wreg free
 38961  018EAE  D1AF               	goto	l1981
 38962  018EB0                     l12324:
 38963                           
 38964                           ;daq.c: 147:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 38965  018EB0  0060  F4BB  FFE6   	movff	_R+46,postinc1
 38966  018EB6  0060  F4BF  FFE6   	movff	_R+47,postinc1
 38967  018EBC  0060  F4C3  FFE6   	movff	_R+48,postinc1
 38968  018EC2  0060  F4C7  FFE6   	movff	_R+49,postinc1
 38969  018EC8  0060  F4A0  F032   	movff	_R+40,btemp+8	;volatile
 38970  018ECE  0060  F4A4  F033   	movff	_R+41,btemp+9	;volatile
 38971  018ED4  0E00               	movlw	0
 38972  018ED6  BE33               	btfsc	(btemp+9)^0,7,c
 38973  018ED8  0EFF               	movlw	255
 38974  018EDA  6E34               	movwf	(btemp+10)^0,c
 38975  018EDC  6E35               	movwf	(btemp+11)^0,c
 38976  018EDE  0060  F0CB  FFE6   	movff	btemp+8,postinc1
 38977  018EE4  0060  F0CF  FFE6   	movff	btemp+9,postinc1
 38978  018EEA  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 38979  018EF0  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 38980  018EF6  0E01               	movlw	1
 38981  018EF8  6EE6               	movwf	postinc1,c
 38982  018EFA  EC9B  F0EC         	call	___xxtofl	;wreg free
 38983  018EFE  0060  F0AB  FFE6   	movff	btemp,postinc1
 38984  018F04  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 38985  018F0A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 38986  018F10  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 38987                           
 38988                           ;stkvar	_chan @ sp[(-8)+-1]
 38989  018F16  0EF7               	movlw	-9
 38990  018F18  50E3               	movf	plusw1,w,c
 38991  018F1A  6EE6               	movwf	postinc1,c
 38992  018F1C  EC16  F015         	call	_get_raw_result	;wreg free
 38993  018F20  0060  F0A8  F034   	movff	btemp,btemp+10
 38994  018F26  0060  F0AC  F035   	movff	btemp+1,btemp+11
 38995  018F2C  5034               	movf	(btemp+10)^0,w,c
 38996  018F2E  6E2E               	movwf	(btemp+4)^0,c
 38997  018F30  5035               	movf	(btemp+11)^0,w,c
 38998  018F32  6E2F               	movwf	(btemp+5)^0,c
 38999  018F34  6A30               	clrf	(btemp+6)^0,c
 39000  018F36  6A31               	clrf	(btemp+7)^0,c
 39001  018F38  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39002  018F3E  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39003  018F44  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39004  018F4A  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39005  018F50  0E00               	movlw	0
 39006  018F52  6EE6               	movwf	postinc1,c
 39007  018F54  EC9B  F0EC         	call	___xxtofl	;wreg free
 39008  018F58  0060  F0AB  FFE6   	movff	btemp,postinc1
 39009  018F5E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39010  018F64  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39011  018F6A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39012  018F70  EC7A  F010         	call	___flsub	;wreg free
 39013  018F74  0060  F0AB  FFE6   	movff	btemp,postinc1
 39014  018F7A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39015  018F80  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39016  018F86  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39017  018F8C  EC32  F0B3         	call	___flmul	;wreg free
 39018  018F90  D13E               	goto	l1981
 39019  018F92                     l12328:
 39020                           
 39021                           ;daq.c: 150:    if (0b0000100000000000 >> chan & 0x1) {
 39022                           ;stkvar	_chan @ sp[(0)+-1]
 39023  018F92  0EFF               	movlw	-1
 39024  018F94  006F FF8C  F035    	movff	plusw1,btemp+11
 39025  018F9A  0E00               	movlw	0
 39026  018F9C  6E32               	movwf	(btemp+8)^0,c
 39027  018F9E  0E08               	movlw	8
 39028  018FA0  6E33               	movwf	(btemp+9)^0,c
 39029  018FA2  2A35               	incf	(btemp+11)^0,f,c
 39030  018FA4  D003               	goto	u11674
 39031  018FA6                     u11675:
 39032  018FA6  3433               	rlcf	(btemp+9)^0,w,c
 39033  018FA8  3233               	rrcf	(btemp+9)^0,f,c
 39034  018FAA  3232               	rrcf	(btemp+8)^0,f,c
 39035  018FAC                     u11674:
 39036  018FAC  2E35               	decfsz	(btemp+11)^0,f,c
 39037  018FAE  D7FB               	goto	u11675
 39038  018FB0  A032               	btfss	(btemp+8)^0,0,c
 39039  018FB2  D008               	goto	l12336
 39040                           
 39041                           ;daq.c: 151:     return 25.0;
 39042  018FB4  0E00               	movlw	0
 39043  018FB6  6E2A               	movwf	btemp^0,c
 39044  018FB8  0E00               	movlw	0
 39045  018FBA  6E2B               	movwf	(btemp+1)^0,c
 39046  018FBC  0EC8               	movlw	200
 39047  018FBE  6E2C               	movwf	(btemp+2)^0,c
 39048  018FC0  0E41               	movlw	65
 39049  018FC2  D113               	goto	L44
 39050  018FC4                     l12336:
 39051                           
 39052                           ;daq.c: 153:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39053  018FC4  0E00               	movlw	0
 39054  018FC6  6EE6               	movwf	postinc1,c
 39055  018FC8  0E00               	movlw	0
 39056  018FCA  6EE6               	movwf	postinc1,c
 39057  018FCC  0E7A               	movlw	122
 39058  018FCE  6EE6               	movwf	postinc1,c
 39059  018FD0  0E44               	movlw	68
 39060  018FD2  6EE6               	movwf	postinc1,c
 39061  018FD4  0E61               	movlw	97
 39062  018FD6  6EE6               	movwf	postinc1,c
 39063  018FD8  0E03               	movlw	3
 39064  018FDA  6EE6               	movwf	postinc1,c
 39065  018FDC  0E84               	movlw	132
 39066  018FDE  6EE6               	movwf	postinc1,c
 39067  018FE0  0E40               	movlw	64
 39068  018FE2  6EE6               	movwf	postinc1,c
 39069                           
 39070                           ;stkvar	_chan @ sp[(-8)+-1]
 39071  018FE4  0EF7               	movlw	-9
 39072  018FE6  50E3               	movf	plusw1,w,c
 39073  018FE8  6EE6               	movwf	postinc1,c
 39074  018FEA  EC16  F015         	call	_get_raw_result	;wreg free
 39075  018FEE  0060  F0A8  F034   	movff	btemp,btemp+10
 39076  018FF4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39077  018FFA  5034               	movf	(btemp+10)^0,w,c
 39078  018FFC  6E2E               	movwf	(btemp+4)^0,c
 39079  018FFE  5035               	movf	(btemp+11)^0,w,c
 39080  019000  6E2F               	movwf	(btemp+5)^0,c
 39081  019002  6A30               	clrf	(btemp+6)^0,c
 39082  019004  6A31               	clrf	(btemp+7)^0,c
 39083  019006  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39084  01900C  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39085  019012  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39086  019018  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39087  01901E  0E00               	movlw	0
 39088  019020  6EE6               	movwf	postinc1,c
 39089  019022  EC9B  F0EC         	call	___xxtofl	;wreg free
 39090  019026  0060  F0AB  FFE6   	movff	btemp,postinc1
 39091  01902C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39092  019032  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39093  019038  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39094  01903E  EC32  F0B3         	call	___flmul	;wreg free
 39095  019042  0060  F0AB  FFE6   	movff	btemp,postinc1
 39096  019048  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39097  01904E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39098  019054  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39099  01905A  EC64  F0C1         	call	___fldiv	;wreg free
 39100  01905E  D0D7               	goto	l1981
 39101  019060                     l12340:
 39102                           
 39103                           ;daq.c: 158:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 39104                           ;stkvar	_chan @ sp[(0)+-1]
 39105  019060  0EFF               	movlw	-1
 39106  019062  006F FF8C  F035    	movff	plusw1,btemp+11
 39107  019068  0E03               	movlw	3
 39108  01906A  6E32               	movwf	(btemp+8)^0,c
 39109  01906C  0E00               	movlw	0
 39110  01906E  6E33               	movwf	(btemp+9)^0,c
 39111  019070  2A35               	incf	(btemp+11)^0,f,c
 39112  019072  D003               	goto	u11694
 39113  019074                     u11695:
 39114  019074  3433               	rlcf	(btemp+9)^0,w,c
 39115  019076  3233               	rrcf	(btemp+9)^0,f,c
 39116  019078  3232               	rrcf	(btemp+8)^0,f,c
 39117  01907A                     u11694:
 39118  01907A  2E35               	decfsz	(btemp+11)^0,f,c
 39119  01907C  D7FB               	goto	u11695
 39120  01907E  B032               	btfsc	(btemp+8)^0,0,c
 39121  019080  D011               	goto	u11720
 39122                           
 39123                           ;stkvar	_chan @ sp[(0)+-1]
 39124  019082  0EFF               	movlw	-1
 39125  019084  006F FF8C  F035    	movff	plusw1,btemp+11
 39126  01908A  0E00               	movlw	0
 39127  01908C  6E32               	movwf	(btemp+8)^0,c
 39128  01908E  0E08               	movlw	8
 39129  019090  6E33               	movwf	(btemp+9)^0,c
 39130  019092  2A35               	incf	(btemp+11)^0,f,c
 39131  019094  D003               	goto	u11714
 39132  019096                     u11715:
 39133  019096  3433               	rlcf	(btemp+9)^0,w,c
 39134  019098  3233               	rrcf	(btemp+9)^0,f,c
 39135  01909A  3232               	rrcf	(btemp+8)^0,f,c
 39136  01909C                     u11714:
 39137  01909C  2E35               	decfsz	(btemp+11)^0,f,c
 39138  01909E  D7FB               	goto	u11715
 39139  0190A0  A032               	btfss	(btemp+8)^0,0,c
 39140  0190A2  D04E               	goto	l12348
 39141  0190A4                     u11720:
 39142                           
 39143                           ;daq.c: 159:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 39144  0190A4  0E00               	movlw	0
 39145  0190A6  6EE6               	movwf	postinc1,c
 39146  0190A8  0E00               	movlw	0
 39147  0190AA  6EE6               	movwf	postinc1,c
 39148  0190AC  0E7A               	movlw	122
 39149  0190AE  6EE6               	movwf	postinc1,c
 39150  0190B0  0E44               	movlw	68
 39151  0190B2  6EE6               	movwf	postinc1,c
 39152  0190B4  0E00               	movlw	0
 39153  0190B6  6EE6               	movwf	postinc1,c
 39154  0190B8  0E00               	movlw	0
 39155  0190BA  6EE6               	movwf	postinc1,c
 39156  0190BC  0E20               	movlw	32
 39157  0190BE  6EE6               	movwf	postinc1,c
 39158  0190C0  0E3F               	movlw	63
 39159  0190C2  6EE6               	movwf	postinc1,c
 39160                           
 39161                           ;stkvar	_chan @ sp[(-8)+-1]
 39162  0190C4  0EF7               	movlw	-9
 39163  0190C6  50E3               	movf	plusw1,w,c
 39164  0190C8  6EE6               	movwf	postinc1,c
 39165  0190CA  EC16  F015         	call	_get_raw_result	;wreg free
 39166  0190CE  0060  F0A8  F034   	movff	btemp,btemp+10
 39167  0190D4  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39168  0190DA  5034               	movf	(btemp+10)^0,w,c
 39169  0190DC  6E2E               	movwf	(btemp+4)^0,c
 39170  0190DE  5035               	movf	(btemp+11)^0,w,c
 39171  0190E0  6E2F               	movwf	(btemp+5)^0,c
 39172  0190E2  6A30               	clrf	(btemp+6)^0,c
 39173  0190E4  6A31               	clrf	(btemp+7)^0,c
 39174  0190E6  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39175  0190EC  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39176  0190F2  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39177  0190F8  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39178  0190FE  0E00               	movlw	0
 39179  019100  6EE6               	movwf	postinc1,c
 39180  019102  EC9B  F0EC         	call	___xxtofl	;wreg free
 39181  019106  0060  F0AB  FFE6   	movff	btemp,postinc1
 39182  01910C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39183  019112  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39184  019118  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39185  01911E  EC32  F0B3         	call	___flmul	;wreg free
 39186  019122  0060  F0AB  FFE6   	movff	btemp,postinc1
 39187  019128  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39188  01912E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39189  019134  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39190  01913A  EC64  F0C1         	call	___fldiv	;wreg free
 39191  01913E  D067               	goto	l1981
 39192  019140                     l12348:
 39193                           
 39194                           ;daq.c: 161:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 39195  019140  0E00               	movlw	0
 39196  019142  6EE6               	movwf	postinc1,c
 39197  019144  0E00               	movlw	0
 39198  019146  6EE6               	movwf	postinc1,c
 39199  019148  0E7A               	movlw	122
 39200  01914A  6EE6               	movwf	postinc1,c
 39201  01914C  0E44               	movlw	68
 39202  01914E  6EE6               	movwf	postinc1,c
 39203  019150  0E61               	movlw	97
 39204  019152  6EE6               	movwf	postinc1,c
 39205  019154  0E03               	movlw	3
 39206  019156  6EE6               	movwf	postinc1,c
 39207  019158  0E84               	movlw	132
 39208  01915A  6EE6               	movwf	postinc1,c
 39209  01915C  0E40               	movlw	64
 39210  01915E  6EE6               	movwf	postinc1,c
 39211                           
 39212                           ;stkvar	_chan @ sp[(-8)+-1]
 39213  019160  0EF7               	movlw	-9
 39214  019162  50E3               	movf	plusw1,w,c
 39215  019164  6EE6               	movwf	postinc1,c
 39216  019166  EC16  F015         	call	_get_raw_result	;wreg free
 39217  01916A  0060  F0A8  F034   	movff	btemp,btemp+10
 39218  019170  0060  F0AC  F035   	movff	btemp+1,btemp+11
 39219  019176  5034               	movf	(btemp+10)^0,w,c
 39220  019178  6E2E               	movwf	(btemp+4)^0,c
 39221  01917A  5035               	movf	(btemp+11)^0,w,c
 39222  01917C  6E2F               	movwf	(btemp+5)^0,c
 39223  01917E  6A30               	clrf	(btemp+6)^0,c
 39224  019180  6A31               	clrf	(btemp+7)^0,c
 39225  019182  0060  F0BB  FFE6   	movff	btemp+4,postinc1
 39226  019188  0060  F0BF  FFE6   	movff	btemp+5,postinc1
 39227  01918E  0060  F0C3  FFE6   	movff	btemp+6,postinc1
 39228  019194  0060  F0C7  FFE6   	movff	btemp+7,postinc1
 39229  01919A  0E00               	movlw	0
 39230  01919C  6EE6               	movwf	postinc1,c
 39231  01919E  EC9B  F0EC         	call	___xxtofl	;wreg free
 39232  0191A2  0060  F0AB  FFE6   	movff	btemp,postinc1
 39233  0191A8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39234  0191AE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39235  0191B4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39236  0191BA  EC32  F0B3         	call	___flmul	;wreg free
 39237  0191BE  0060  F0AB  FFE6   	movff	btemp,postinc1
 39238  0191C4  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 39239  0191CA  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 39240  0191D0  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 39241  0191D6  EC64  F0C1         	call	___fldiv	;wreg free
 39242  0191DA  D019               	goto	l1981
 39243  0191DC                     l12354:
 39244                           
 39245                           ;daq.c: 164:   return 0.0;
 39246  0191DC  0E00               	movlw	0
 39247  0191DE  6E2A               	movwf	btemp^0,c
 39248  0191E0  0E00               	movlw	0
 39249  0191E2  6E2B               	movwf	(btemp+1)^0,c
 39250  0191E4  0E00               	movlw	0
 39251  0191E6  6E2C               	movwf	(btemp+2)^0,c
 39252  0191E8  0E00               	movlw	0
 39253  0191EA                     L44:
 39254  0191EA  6E2D               	movwf	(btemp+3)^0,c
 39255  0191EC  D010               	goto	l1981
 39256  0191EE                     l12362:
 39257                           
 39258                           ;stkvar	_to_what @ sp[(0)+-2]
 39259  0191EE  0EFE               	movlw	-2
 39260  0191F0  50E3               	movf	plusw1,w,c
 39261  0191F2  6E34               	movwf	(btemp+10)^0,c
 39262  0191F4  6A35               	clrf	(btemp+11)^0,c
 39263                           
 39264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39265                           ; Switch size 1, requested type "simple"
 39266                           ; Number of cases is 1, Range of values is 0 to 0
 39267                           ; switch strategies available:
 39268                           ; Name         Instructions Cycles
 39269                           ; simple_byte            4     3 (average)
 39270                           ;	Chosen strategy is simple_byte
 39271  0191F6  5035               	movf	(btemp+11)^0,w,c
 39272  0191F8  0A00               	xorlw	0	; case 0
 39273  0191FA  A4D8               	btfss	status,2,c
 39274  0191FC  D7EF               	goto	l12354
 39275                           
 39276                           ; Switch size 1, requested type "simple"
 39277                           ; Number of cases is 2, Range of values is 0 to 1
 39278                           ; switch strategies available:
 39279                           ; Name         Instructions Cycles
 39280                           ; simple_byte            7     4 (average)
 39281                           ;	Chosen strategy is simple_byte
 39282  0191FE  5034               	movf	(btemp+10)^0,w,c
 39283  019200  0A00               	xorlw	0	; case 0
 39284  019202  B4D8               	btfsc	status,2,c
 39285  019204  D5AA               	goto	l12308
 39286  019206  0A01               	xorlw	1	; case 1
 39287  019208  B4D8               	btfsc	status,2,c
 39288  01920A  D72A               	goto	l12340
 39289  01920C  D7E7               	goto	l12354
 39290  01920E                     l1981:
 39291                           
 39292                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 39293  01920E  52E5               	movf	postdec1,f,c
 39294  019210  52E5               	movf	postdec1,f,c
 39295  019212  0012               	return		;funcret
 39296  019214                     __end_of_conv_raw_result:
 39297                           	opt callstack 0
 39298                           
 39299 ;; *************** function _nanf *****************
 39300 ;; Defined at:
 39301 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 39302 ;; Parameters:    Size  Location     Type
 39303 ;;  s               2  [STACK] PTR const unsigned char 
 39304 ;;		 -> STR_134(1), STR_94(1), 
 39305 ;; Auto vars:     Size  Location     Type
 39306 ;;  u               4  [STACK] struct .
 39307 ;; Return value:  Size  Location     Type
 39308 ;;                  4  [STACK] float 
 39309 ;; Registers used:
 39310 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 39311 ;; Tracked objects:
 39312 ;;		On entry : 0/0
 39313 ;;		On exit  : 0/0
 39314 ;;		Unchanged: 0/0
 39315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39320 ;;Total ram usage:        0 bytes
 39321 ;; Hardware stack levels used:    1
 39322 ;; Hardware stack levels required when called:   15
 39323 ;; This function calls:
 39324 ;;		Nothing
 39325 ;; This function is called by:
 39326 ;;		_conv_raw_result
 39327 ;; This function uses a reentrant model
 39328 ;;
 39329                           
 39330                           	psect	text143
 39331  001B84                     __ptext143:
 39332                           	opt callstack 0
 39333  001B84                     _nanf:
 39334                           	opt callstack 0
 39335                           
 39336                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39337  001B84  52E6               	movf	postinc1,f,c
 39338  001B86  52E6               	movf	postinc1,f,c
 39339  001B88  52E6               	movf	postinc1,f,c
 39340  001B8A  52E6               	movf	postinc1,f,c
 39341                           
 39342                           ;incstack = 0
 39343 ;; hardware stack exceeded
 39344  001B8C  0EFF               	movlw	255
 39345  001B8E  6E32               	movwf	(btemp+8)^0,c
 39346  001B90  0EFF               	movlw	255
 39347  001B92  6E33               	movwf	(btemp+9)^0,c
 39348  001B94  0EFF               	movlw	255
 39349  001B96  6E34               	movwf	(btemp+10)^0,c
 39350  001B98  0E7F               	movlw	127
 39351  001B9A  6E35               	movwf	(btemp+11)^0,c
 39352                           
 39353                           ;stkvar	_u @ sp[(-4)+0]
 39354  001B9C  0EFC               	movlw	-4
 39355  001B9E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39356  001BA4  0EFD               	movlw	-3
 39357  001BA6  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39358  001BAC  0EFE               	movlw	-2
 39359  001BAE  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39360  001BB4  0EFF               	movlw	-1
 39361  001BB6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39362                           
 39363                           ;stkvar	_u @ sp[(-4)+0]
 39364  001BBC  0EFC               	movlw	-4
 39365  001BBE  006F FF8C  F02A    	movff	plusw1,btemp
 39366  001BC4  0EFD               	movlw	-3
 39367  001BC6  006F FF8C  F02B    	movff	plusw1,btemp+1
 39368  001BCC  0EFE               	movlw	-2
 39369  001BCE  006F FF8C  F02C    	movff	plusw1,btemp+2
 39370  001BD4  0EFF               	movlw	-1
 39371  001BD6  006F FF8C  F02D    	movff	plusw1,btemp+3
 39372                           
 39373                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 39374  001BDC  0EFA               	movlw	250
 39375  001BDE  26E1               	addwf	fsr1l,f,c
 39376  001BE0  0EFF               	movlw	255
 39377  001BE2  22E2               	addwfc	fsr1h,f,c
 39378  001BE4  0012               	return		;funcret
 39379  001BE6                     __end_of_nanf:
 39380                           	opt callstack 0
 39381                           
 39382 ;; *************** function _get_raw_result *****************
 39383 ;; Defined at:
 39384 ;;		line 127 in file "daq.c"
 39385 ;; Parameters:    Size  Location     Type
 39386 ;;  index           1  [STACK] const enum E16605
 39387 ;; Auto vars:     Size  Location     Type
 39388 ;;		None
 39389 ;; Return value:  Size  Location     Type
 39390 ;;                  2  [STACK] unsigned short 
 39391 ;; Registers used:
 39392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 39393 ;; Tracked objects:
 39394 ;;		On entry : 0/2
 39395 ;;		On exit  : 0/0
 39396 ;;		Unchanged: 0/0
 39397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39402 ;;Total ram usage:        0 bytes
 39403 ;; Hardware stack levels used:    1
 39404 ;; Hardware stack levels required when called:   15
 39405 ;; This function calls:
 39406 ;;		Nothing
 39407 ;; This function is called by:
 39408 ;;		_main
 39409 ;;		_current_sensor_cal
 39410 ;;		_conv_raw_result
 39411 ;; This function uses a reentrant model
 39412 ;;
 39413                           
 39414                           	psect	text144
 39415  002A2C                     __ptext144:
 39416                           	opt callstack 0
 39417  002A2C                     _get_raw_result:
 39418                           	opt callstack 0
 39419                           
 39420                           ;daq.c: 127: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 128: {;daq.c
      +                          : 129:  return R.raw_adc[index];
 39421                           ;stkvar	_index @ sp[(0)+-1]
 39422                           
 39423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39424                           ;incstack = 0
 39425 ;; hardware stack exceeded
 39426  002A2C  0EFF               	movlw	-1
 39427  002A2E  50E3               	movf	plusw1,w,c
 39428  002A30  0D02               	mullw	2
 39429  002A32  0E00               	movlw	low _R
 39430  002A34  24F3               	addwf	243,w,c
 39431  002A36  6ED9               	movwf	fsr2l,c
 39432  002A38  0E01               	movlw	high _R
 39433  002A3A  20F4               	addwfc	prodh,w,c
 39434  002A3C  6EDA               	movwf	fsr2h,c
 39435  002A3E  006F FF78  F02A    	movff	postinc2,btemp
 39436  002A44  006F FF74  F02B    	movff	postdec2,btemp+1
 39437                           
 39438                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 39439  002A4A  52E5               	movf	postdec1,f,c
 39440  002A4C  0012               	return		;funcret
 39441  002A4E                     __end_of_get_raw_result:
 39442                           	opt callstack 0
 39443                           
 39444 ;; *************** function ___xxtofl *****************
 39445 ;; Defined at:
 39446 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 39447 ;; Parameters:    Size  Location     Type
 39448 ;;  sign            1  [STACK] unsigned char 
 39449 ;;  val             4  [STACK] long 
 39450 ;; Auto vars:     Size  Location     Type
 39451 ;;  arg             4  [STACK] unsigned long 
 39452 ;;  exp             1  [STACK] unsigned char 
 39453 ;; Return value:  Size  Location     Type
 39454 ;;                  4  [STACK] unsigned char 
 39455 ;; Registers used:
 39456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 39457 ;; Tracked objects:
 39458 ;;		On entry : 0/39
 39459 ;;		On exit  : 0/0
 39460 ;;		Unchanged: 0/0
 39461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39466 ;;Total ram usage:        0 bytes
 39467 ;; Hardware stack levels used:    1
 39468 ;; Hardware stack levels required when called:   15
 39469 ;; This function calls:
 39470 ;;		Nothing
 39471 ;; This function is called by:
 39472 ;;		_conv_raw_result
 39473 ;;		_load_hist_data
 39474 ;;		_init_bsoc
 39475 ;; This function uses a reentrant model
 39476 ;;
 39477                           
 39478                           	psect	text145
 39479  01D936                     __ptext145:
 39480                           	opt callstack 0
 39481  01D936                     ___xxtofl:
 39482                           	opt callstack 0
 39483                           
 39484                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39485  01D936  0E05               	movlw	5
 39486  01D938  26E1               	addwf	fsr1l,f,c
 39487  01D93A  0E00               	movlw	0
 39488  01D93C  22E2               	addwfc	fsr1h,f,c
 39489                           
 39490                           ;stkvar	_sign @ sp[(-5)+-1]
 39491                           
 39492                           ;incstack = 0
 39493 ;; hardware stack exceeded
 39494  01D93E  0EFA               	movlw	-6
 39495  01D940  50E3               	movf	plusw1,w,c
 39496  01D942  B4D8               	btfsc	status,2,c
 39497  01D944  D01D               	goto	l12030
 39498                           
 39499                           ;stkvar	_val @ sp[(-5)+-5]
 39500  01D946  0EF9               	movlw	-7
 39501  01D948  AEE3               	btfss	plusw1,7,c
 39502  01D94A  D01A               	goto	l12030
 39503                           
 39504                           ;stkvar	_val @ sp[(-5)+-5]
 39505  01D94C  0EF6               	movlw	-10
 39506  01D94E  006F FF8C  F032    	movff	plusw1,btemp+8
 39507  01D954  0EF7               	movlw	-9
 39508  01D956  006F FF8C  F033    	movff	plusw1,btemp+9
 39509  01D95C  0EF8               	movlw	-8
 39510  01D95E  006F FF8C  F034    	movff	plusw1,btemp+10
 39511  01D964  0EF9               	movlw	-7
 39512  01D966  006F FF8C  F035    	movff	plusw1,btemp+11
 39513  01D96C  1E32               	comf	(btemp+8)^0,f,c
 39514  01D96E  1E33               	comf	(btemp+9)^0,f,c
 39515  01D970  1E34               	comf	(btemp+10)^0,f,c
 39516  01D972  1E35               	comf	(btemp+11)^0,f,c
 39517  01D974  2A32               	incf	(btemp+8)^0,f,c
 39518  01D976  0E00               	movlw	0
 39519  01D978  2233               	addwfc	(btemp+9)^0,f,c
 39520  01D97A  2234               	addwfc	(btemp+10)^0,f,c
 39521  01D97C  2235               	addwfc	(btemp+11)^0,f,c
 39522  01D97E  D010               	goto	L45
 39523  01D980                     l12030:
 39524                           
 39525                           ;stkvar	_val @ sp[(-5)+-5]
 39526  01D980  0EF6               	movlw	-10
 39527  01D982  006F FF8C  F032    	movff	plusw1,btemp+8
 39528  01D988  0EF7               	movlw	-9
 39529  01D98A  006F FF8C  F033    	movff	plusw1,btemp+9
 39530  01D990  0EF8               	movlw	-8
 39531  01D992  006F FF8C  F034    	movff	plusw1,btemp+10
 39532  01D998  0EF9               	movlw	-7
 39533  01D99A  006F FF8C  F035    	movff	plusw1,btemp+11
 39534  01D9A0                     L45:
 39535                           
 39536                           ;stkvar	_arg @ sp[(-5)+0]
 39537  01D9A0  0EFB               	movlw	-5
 39538  01D9A2  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39539  01D9A8  0EFC               	movlw	-4
 39540  01D9AA  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39541  01D9B0  0EFD               	movlw	-3
 39542  01D9B2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39543  01D9B8  0EFE               	movlw	-2
 39544  01D9BA  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39545                           
 39546                           ;stkvar	_val @ sp[(-5)+-5]
 39547  01D9C0  0EF6               	movlw	-10
 39548  01D9C2  50E3               	movf	plusw1,w,c
 39549  01D9C4  E113               	bnz	l12038
 39550  01D9C6  0EF7               	movlw	-9
 39551  01D9C8  50E3               	movf	plusw1,w,c
 39552  01D9CA  E110               	bnz	l12038
 39553  01D9CC  0EF8               	movlw	-8
 39554  01D9CE  50E3               	movf	plusw1,w,c
 39555  01D9D0  E10D               	bnz	l12038
 39556  01D9D2  0EF9               	movlw	-7
 39557  01D9D4  50E3               	movf	plusw1,w,c
 39558  01D9D6  A4D8               	btfss	status,2,c
 39559  01D9D8  D009               	goto	l12038
 39560  01D9DA  0E00               	movlw	0
 39561  01D9DC  6E2A               	movwf	btemp^0,c
 39562  01D9DE  0E00               	movlw	0
 39563  01D9E0  6E2B               	movwf	(btemp+1)^0,c
 39564  01D9E2  0E00               	movlw	0
 39565  01D9E4  6E2C               	movwf	(btemp+2)^0,c
 39566  01D9E6  0E00               	movlw	0
 39567  01D9E8  6E2D               	movwf	(btemp+3)^0,c
 39568  01D9EA  D0A2               	goto	l3386
 39569  01D9EC                     l12038:
 39570  01D9EC  0E96               	movlw	150
 39571  01D9EE  6E35               	movwf	(btemp+11)^0,c
 39572                           
 39573                           ;stkvar	_exp @ sp[(-5)+4]
 39574  01D9F0  0EFF               	movlw	-1
 39575  01D9F2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39576  01D9F8  D00B               	goto	l12042
 39577  01D9FA                     l12040:
 39578                           
 39579                           ;stkvar	_exp @ sp[(-5)+4]
 39580  01D9FA  0EFF               	movlw	-1
 39581  01D9FC  2AE3               	incf	plusw1,f,c
 39582                           
 39583                           ;stkvar	_arg @ sp[(-5)+0]
 39584  01D9FE  90D8               	bcf	status,0,c
 39585  01DA00  0EFE               	movlw	-2
 39586  01DA02  32E3               	rrcf	plusw1,f,c
 39587  01DA04  0EFD               	movlw	-3
 39588  01DA06  32E3               	rrcf	plusw1,f,c
 39589  01DA08  0EFC               	movlw	-4
 39590  01DA0A  32E3               	rrcf	plusw1,f,c
 39591  01DA0C  0EFB               	movlw	-5
 39592  01DA0E  32E3               	rrcf	plusw1,f,c
 39593  01DA10                     l12042:
 39594                           
 39595                           ;stkvar	_arg @ sp[(-5)+0]
 39596  01DA10  50E1               	movf	fsr1l,w,c
 39597  01DA12  0FFB               	addlw	-5
 39598  01DA14  6ED9               	movwf	fsr2l,c
 39599  01DA16  50E2               	movf	fsr1h,w,c
 39600  01DA18  6EDA               	movwf	fsr2h,c
 39601  01DA1A  0EFF               	movlw	255
 39602  01DA1C  22DA               	addwfc	fsr2h,f,c
 39603  01DA1E  52DE               	movf	postinc2,f,c
 39604  01DA20  52DE               	movf	postinc2,f,c
 39605  01DA22  52DE               	movf	postinc2,f,c
 39606  01DA24  0EFE               	movlw	254
 39607  01DA26  14DD               	andwf	postdec2,w,c
 39608  01DA28  B4D8               	btfsc	status,2,c
 39609  01DA2A  D018               	goto	l12050
 39610  01DA2C  D7E6               	goto	l12040
 39611  01DA2E                     l12044:
 39612                           
 39613                           ;stkvar	_exp @ sp[(-5)+4]
 39614  01DA2E  0EFF               	movlw	-1
 39615  01DA30  2AE3               	incf	plusw1,f,c
 39616                           
 39617                           ;stkvar	_arg @ sp[(-5)+0]
 39618  01DA32  50E1               	movf	fsr1l,w,c
 39619  01DA34  0FFB               	addlw	-5
 39620  01DA36  6ED9               	movwf	fsr2l,c
 39621  01DA38  50E2               	movf	fsr1h,w,c
 39622  01DA3A  6EDA               	movwf	fsr2h,c
 39623  01DA3C  0EFF               	movlw	255
 39624  01DA3E  22DA               	addwfc	fsr2h,f,c
 39625  01DA40  2ADE               	incf	postinc2,f,c
 39626  01DA42  0E00               	movlw	0
 39627  01DA44  22DE               	addwfc	postinc2,f,c
 39628  01DA46  22DE               	addwfc	postinc2,f,c
 39629  01DA48  22DE               	addwfc	postinc2,f,c
 39630                           
 39631                           ;stkvar	_arg @ sp[(-5)+0]
 39632  01DA4A  90D8               	bcf	status,0,c
 39633  01DA4C  0EFE               	movlw	-2
 39634  01DA4E  32E3               	rrcf	plusw1,f,c
 39635  01DA50  0EFD               	movlw	-3
 39636  01DA52  32E3               	rrcf	plusw1,f,c
 39637  01DA54  0EFC               	movlw	-4
 39638  01DA56  32E3               	rrcf	plusw1,f,c
 39639  01DA58  0EFB               	movlw	-5
 39640  01DA5A  32E3               	rrcf	plusw1,f,c
 39641  01DA5C                     l12050:
 39642                           
 39643                           ;stkvar	_arg @ sp[(-5)+0]
 39644  01DA5C  50E1               	movf	fsr1l,w,c
 39645  01DA5E  0FFB               	addlw	-5
 39646  01DA60  6ED9               	movwf	fsr2l,c
 39647  01DA62  50E2               	movf	fsr1h,w,c
 39648  01DA64  6EDA               	movwf	fsr2h,c
 39649  01DA66  0EFF               	movlw	255
 39650  01DA68  22DA               	addwfc	fsr2h,f,c
 39651  01DA6A  52DE               	movf	postinc2,f,c
 39652  01DA6C  52DE               	movf	postinc2,f,c
 39653  01DA6E  52DE               	movf	postinc2,f,c
 39654  01DA70  0EFF               	movlw	255
 39655  01DA72  14DD               	andwf	postdec2,w,c
 39656  01DA74  B4D8               	btfsc	status,2,c
 39657  01DA76  D00C               	goto	l12054
 39658  01DA78  D7DA               	goto	l12044
 39659  01DA7A                     l12052:
 39660                           
 39661                           ;stkvar	_exp @ sp[(-5)+4]
 39662  01DA7A  0EFF               	movlw	-1
 39663  01DA7C  06E3               	decf	plusw1,f,c
 39664                           
 39665                           ;stkvar	_arg @ sp[(-5)+0]
 39666  01DA7E  90D8               	bcf	status,0,c
 39667  01DA80  0EFB               	movlw	-5
 39668  01DA82  36E3               	rlcf	plusw1,f,c
 39669  01DA84  0EFC               	movlw	-4
 39670  01DA86  36E3               	rlcf	plusw1,f,c
 39671  01DA88  0EFD               	movlw	-3
 39672  01DA8A  36E3               	rlcf	plusw1,f,c
 39673  01DA8C  0EFE               	movlw	-2
 39674  01DA8E  36E3               	rlcf	plusw1,f,c
 39675  01DA90                     l12054:
 39676                           
 39677                           ;stkvar	_arg @ sp[(-5)+0]
 39678  01DA90  0EFD               	movlw	-3
 39679  01DA92  BEE3               	btfsc	plusw1,7,c
 39680  01DA94  D007               	goto	u11370
 39681                           
 39682                           ;stkvar	_exp @ sp[(-5)+4]
 39683  01DA96  0EFF               	movlw	-1
 39684  01DA98  006F FF8C  F02A    	movff	plusw1,btemp
 39685  01DA9E  0E02               	movlw	2
 39686  01DAA0  602A               	cpfslt	btemp^0,c
 39687  01DAA2  D7EB               	goto	l12052
 39688  01DAA4                     u11370:
 39689                           
 39690                           ;stkvar	_exp @ sp[(-5)+4]
 39691  01DAA4  0EFF               	movlw	-1
 39692  01DAA6  B0E3               	btfsc	plusw1,0,c
 39693  01DAA8  D002               	goto	l12062
 39694                           
 39695                           ;stkvar	_arg @ sp[(-5)+0]
 39696  01DAAA  0EFD               	movlw	-3
 39697  01DAAC  9EE3               	bcf	plusw1,7,c
 39698  01DAAE                     l12062:
 39699                           
 39700                           ;stkvar	_exp @ sp[(-5)+4]
 39701  01DAAE  50E1               	movf	fsr1l,w,c
 39702  01DAB0  0FFF               	addlw	-1
 39703  01DAB2  6ED9               	movwf	fsr2l,c
 39704  01DAB4  50E2               	movf	fsr1h,w,c
 39705  01DAB6  6EDA               	movwf	fsr2h,c
 39706  01DAB8  0EFF               	movlw	255
 39707  01DABA  22DA               	addwfc	fsr2h,f,c
 39708  01DABC  90D8               	bcf	status,0,c
 39709  01DABE  32DF               	rrcf	indf2,f,c
 39710                           
 39711                           ;stkvar	_exp @ sp[(-5)+4]
 39712  01DAC0  0EFF               	movlw	-1
 39713  01DAC2  006F FF8C  F035    	movff	plusw1,btemp+11
 39714  01DAC8  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 39715  01DACE  6A2F               	clrf	(btemp+5)^0,c
 39716  01DAD0  6A30               	clrf	(btemp+6)^0,c
 39717  01DAD2  6A31               	clrf	(btemp+7)^0,c
 39718  01DAD4  0060  F0B8  F031   	movff	btemp+4,btemp+7
 39719  01DADA  6A30               	clrf	(btemp+6)^0,c
 39720  01DADC  6A2F               	clrf	(btemp+5)^0,c
 39721  01DADE  6A2E               	clrf	(btemp+4)^0,c
 39722                           
 39723                           ;stkvar	_arg @ sp[(-5)+0]
 39724  01DAE0  50E1               	movf	fsr1l,w,c
 39725  01DAE2  0FFB               	addlw	-5
 39726  01DAE4  6ED9               	movwf	fsr2l,c
 39727  01DAE6  50E2               	movf	fsr1h,w,c
 39728  01DAE8  6EDA               	movwf	fsr2h,c
 39729  01DAEA  0EFF               	movlw	255
 39730  01DAEC  22DA               	addwfc	fsr2h,f,c
 39731  01DAEE  502E               	movf	(btemp+4)^0,w,c
 39732  01DAF0  12DE               	iorwf	postinc2,f,c
 39733  01DAF2  502F               	movf	(btemp+5)^0,w,c
 39734  01DAF4  12DE               	iorwf	postinc2,f,c
 39735  01DAF6  5030               	movf	(btemp+6)^0,w,c
 39736  01DAF8  12DE               	iorwf	postinc2,f,c
 39737  01DAFA  5031               	movf	(btemp+7)^0,w,c
 39738  01DAFC  12DE               	iorwf	postinc2,f,c
 39739                           
 39740                           ;stkvar	_sign @ sp[(-5)+-1]
 39741  01DAFE  0EFA               	movlw	-6
 39742  01DB00  50E3               	movf	plusw1,w,c
 39743  01DB02  B4D8               	btfsc	status,2,c
 39744  01DB04  D005               	goto	l12072
 39745                           
 39746                           ;stkvar	_val @ sp[(-5)+-5]
 39747  01DB06  0EF9               	movlw	-7
 39748  01DB08  AEE3               	btfss	plusw1,7,c
 39749  01DB0A  D002               	goto	l12072
 39750                           
 39751                           ;stkvar	_arg @ sp[(-5)+0]
 39752  01DB0C  0EFE               	movlw	-2
 39753  01DB0E  8EE3               	bsf	plusw1,7,c
 39754  01DB10                     l12072:
 39755                           
 39756                           ;stkvar	_arg @ sp[(-5)+0]
 39757  01DB10  0EFB               	movlw	-5
 39758  01DB12  006F FF8C  F02A    	movff	plusw1,btemp
 39759  01DB18  0EFC               	movlw	-4
 39760  01DB1A  006F FF8C  F02B    	movff	plusw1,btemp+1
 39761  01DB20  0EFD               	movlw	-3
 39762  01DB22  006F FF8C  F02C    	movff	plusw1,btemp+2
 39763  01DB28  0EFE               	movlw	-2
 39764  01DB2A  006F FF8C  F02D    	movff	plusw1,btemp+3
 39765  01DB30                     l3386:
 39766                           
 39767                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 39768  01DB30  0EF6               	movlw	246
 39769  01DB32  26E1               	addwf	fsr1l,f,c
 39770  01DB34  0EFF               	movlw	255
 39771  01DB36  22E2               	addwfc	fsr1h,f,c
 39772  01DB38  0012               	return		;funcret
 39773  01DB3A                     __end_of___xxtofl:
 39774                           	opt callstack 0
 39775                           
 39776 ;; *************** function ___fldiv *****************
 39777 ;; Defined at:
 39778 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 39779 ;; Parameters:    Size  Location     Type
 39780 ;;  b               4  [STACK] unsigned char 
 39781 ;;  a               4  [STACK] unsigned char 
 39782 ;; Auto vars:     Size  Location     Type
 39783 ;;  grs             4  [STACK] unsigned long 
 39784 ;;  rem             4  [STACK] unsigned long 
 39785 ;;  new_exp         2  [STACK] short 
 39786 ;;  aexp            1  [STACK] unsigned char 
 39787 ;;  bexp            1  [STACK] unsigned char 
 39788 ;;  sign            1  [STACK] unsigned char 
 39789 ;; Return value:  Size  Location     Type
 39790 ;;                  4  [STACK] unsigned char 
 39791 ;; Registers used:
 39792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 39793 ;; Tracked objects:
 39794 ;;		On entry : 0/3D
 39795 ;;		On exit  : 0/0
 39796 ;;		Unchanged: 0/0
 39797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39802 ;;Total ram usage:        0 bytes
 39803 ;; Hardware stack levels used:    1
 39804 ;; Hardware stack levels required when called:   15
 39805 ;; This function calls:
 39806 ;;		Nothing
 39807 ;; This function is called by:
 39808 ;;		_conv_raw_result
 39809 ;;		_convert_dac_raw
 39810 ;;		_calc_bsoc
 39811 ;;		_init_bsoc
 39812 ;;		_esr_check
 39813 ;;		_efgtoa
 39814 ;; This function uses a reentrant model
 39815 ;;
 39816                           
 39817                           	psect	text146
 39818  0182C8                     __ptext146:
 39819                           	opt callstack 0
 39820  0182C8                     ___fldiv:
 39821                           	opt callstack 0
 39822                           
 39823                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 39824  0182C8  0E0D               	movlw	13
 39825  0182CA  26E1               	addwf	fsr1l,f,c
 39826  0182CC  0E00               	movlw	0
 39827  0182CE  22E2               	addwfc	fsr1h,f,c
 39828                           
 39829                           ;stkvar	_b @ sp[(-13)+-4]
 39830                           
 39831                           ;incstack = 0
 39832 ;; hardware stack exceeded
 39833  0182D0  0EF2               	movlw	242
 39834  0182D2  24E1               	addwf	fsr1l,w,c
 39835  0182D4  6ED9               	movwf	fsr2l,c
 39836  0182D6  0EFF               	movlw	255
 39837  0182D8  20E2               	addwfc	fsr1h,w,c
 39838  0182DA  6EDA               	movwf	fsr2h,c
 39839  0182DC  50DF               	movf	indf2,w,c
 39840  0182DE  6E35               	movwf	(btemp+11)^0,c
 39841  0182E0  0E80               	movlw	128
 39842  0182E2  1635               	andwf	(btemp+11)^0,f,c
 39843                           
 39844                           ;stkvar	_sign @ sp[(-13)+12]
 39845  0182E4  0EFF               	movlw	-1
 39846  0182E6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39847                           
 39848                           ;stkvar	_b @ sp[(-13)+-4]
 39849  0182EC  0EF2               	movlw	242
 39850  0182EE  24E1               	addwf	fsr1l,w,c
 39851  0182F0  6ED9               	movwf	fsr2l,c
 39852  0182F2  0EFF               	movlw	255
 39853  0182F4  20E2               	addwfc	fsr1h,w,c
 39854  0182F6  6EDA               	movwf	fsr2h,c
 39855  0182F8  50DF               	movf	indf2,w,c
 39856  0182FA  6E35               	movwf	(btemp+11)^0,c
 39857  0182FC  90D8               	bcf	status,0,c
 39858  0182FE  3435               	rlcf	(btemp+11)^0,w,c
 39859  018300  6E34               	movwf	(btemp+10)^0,c
 39860                           
 39861                           ;stkvar	_bexp @ sp[(-13)+11]
 39862  018302  0EFE               	movlw	-2
 39863  018304  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39864                           
 39865                           ;stkvar	_b @ sp[(-13)+-4]
 39866  01830A  0EF1               	movlw	241
 39867  01830C  24E1               	addwf	fsr1l,w,c
 39868  01830E  6ED9               	movwf	fsr2l,c
 39869  018310  0EFF               	movlw	255
 39870  018312  20E2               	addwfc	fsr1h,w,c
 39871  018314  6EDA               	movwf	fsr2h,c
 39872  018316  AEDF               	btfss	indf2,7,c
 39873  018318  D002               	goto	l10328
 39874                           
 39875                           ;stkvar	_bexp @ sp[(-13)+11]
 39876  01831A  0EFE               	movlw	-2
 39877  01831C  80E3               	bsf	plusw1,0,c
 39878  01831E                     l10328:
 39879                           
 39880                           ;stkvar	_bexp @ sp[(-13)+11]
 39881  01831E  0EFE               	movlw	-2
 39882  018320  50E3               	movf	plusw1,w,c
 39883  018322  B4D8               	btfsc	status,2,c
 39884  018324  D027               	goto	l10338
 39885                           
 39886                           ;stkvar	_bexp @ sp[(-13)+11]
 39887  018326  0EFE               	movlw	-2
 39888  018328  28E3               	incf	plusw1,w,c
 39889  01832A  A4D8               	btfss	status,2,c
 39890  01832C  D018               	goto	l10334
 39891  01832E  0E00               	movlw	0
 39892  018330  6E32               	movwf	(btemp+8)^0,c
 39893  018332  0E00               	movlw	0
 39894  018334  6E33               	movwf	(btemp+9)^0,c
 39895  018336  0E00               	movlw	0
 39896  018338  6E34               	movwf	(btemp+10)^0,c
 39897  01833A  0E00               	movlw	0
 39898  01833C  6E35               	movwf	(btemp+11)^0,c
 39899                           
 39900                           ;stkvar	_b @ sp[(-13)+-4]
 39901  01833E  0EEF               	movlw	-17
 39902  018340  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39903  018346  0EF0               	movlw	-16
 39904  018348  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39905  01834E  0EF1               	movlw	-15
 39906  018350  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39907  018356  0EF2               	movlw	-14
 39908  018358  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39909  01835E                     l10334:
 39910                           
 39911                           ;stkvar	_b @ sp[(-13)+-4]
 39912  01835E  0EF1               	movlw	-15
 39913  018360  8EE3               	bsf	plusw1,7,c
 39914                           
 39915                           ;stkvar	_b @ sp[(-13)+-4]
 39916  018362  0EF2               	movlw	242
 39917  018364  24E1               	addwf	fsr1l,w,c
 39918  018366  6ED9               	movwf	fsr2l,c
 39919  018368  0EFF               	movlw	255
 39920  01836A  20E2               	addwfc	fsr1h,w,c
 39921  01836C  6EDA               	movwf	fsr2h,c
 39922  01836E  0E00               	movlw	0
 39923  018370  6EDF               	movwf	indf2,c
 39924  018372  D018               	goto	l10340
 39925  018374                     l10338:
 39926  018374  0E00               	movlw	0
 39927  018376  6E32               	movwf	(btemp+8)^0,c
 39928  018378  0E00               	movlw	0
 39929  01837A  6E33               	movwf	(btemp+9)^0,c
 39930  01837C  0E00               	movlw	0
 39931  01837E  6E34               	movwf	(btemp+10)^0,c
 39932  018380  0E00               	movlw	0
 39933  018382  6E35               	movwf	(btemp+11)^0,c
 39934                           
 39935                           ;stkvar	_b @ sp[(-13)+-4]
 39936  018384  0EEF               	movlw	-17
 39937  018386  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 39938  01838C  0EF0               	movlw	-16
 39939  01838E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 39940  018394  0EF1               	movlw	-15
 39941  018396  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39942  01839C  0EF2               	movlw	-14
 39943  01839E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 39944  0183A4                     l10340:
 39945                           
 39946                           ;stkvar	_a @ sp[(-13)+-8]
 39947  0183A4  0EEE               	movlw	238
 39948  0183A6  24E1               	addwf	fsr1l,w,c
 39949  0183A8  6ED9               	movwf	fsr2l,c
 39950  0183AA  0EFF               	movlw	255
 39951  0183AC  20E2               	addwfc	fsr1h,w,c
 39952  0183AE  6EDA               	movwf	fsr2h,c
 39953  0183B0  50DF               	movf	indf2,w,c
 39954  0183B2  6E35               	movwf	(btemp+11)^0,c
 39955  0183B4  0E80               	movlw	128
 39956  0183B6  1635               	andwf	(btemp+11)^0,f,c
 39957                           
 39958                           ;stkvar	_sign @ sp[(-13)+12]
 39959  0183B8  50E1               	movf	fsr1l,w,c
 39960  0183BA  0FFF               	addlw	-1
 39961  0183BC  6ED9               	movwf	fsr2l,c
 39962  0183BE  50E2               	movf	fsr1h,w,c
 39963  0183C0  6EDA               	movwf	fsr2h,c
 39964  0183C2  0EFF               	movlw	255
 39965  0183C4  22DA               	addwfc	fsr2h,f,c
 39966  0183C6  5035               	movf	(btemp+11)^0,w,c
 39967  0183C8  1ADF               	xorwf	indf2,f,c
 39968                           
 39969                           ;stkvar	_a @ sp[(-13)+-8]
 39970  0183CA  0EEE               	movlw	238
 39971  0183CC  24E1               	addwf	fsr1l,w,c
 39972  0183CE  6ED9               	movwf	fsr2l,c
 39973  0183D0  0EFF               	movlw	255
 39974  0183D2  20E2               	addwfc	fsr1h,w,c
 39975  0183D4  6EDA               	movwf	fsr2h,c
 39976  0183D6  50DF               	movf	indf2,w,c
 39977  0183D8  6E35               	movwf	(btemp+11)^0,c
 39978  0183DA  90D8               	bcf	status,0,c
 39979  0183DC  3435               	rlcf	(btemp+11)^0,w,c
 39980  0183DE  6E34               	movwf	(btemp+10)^0,c
 39981                           
 39982                           ;stkvar	_aexp @ sp[(-13)+10]
 39983  0183E0  0EFD               	movlw	-3
 39984  0183E2  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 39985                           
 39986                           ;stkvar	_a @ sp[(-13)+-8]
 39987  0183E8  0EED               	movlw	237
 39988  0183EA  24E1               	addwf	fsr1l,w,c
 39989  0183EC  6ED9               	movwf	fsr2l,c
 39990  0183EE  0EFF               	movlw	255
 39991  0183F0  20E2               	addwfc	fsr1h,w,c
 39992  0183F2  6EDA               	movwf	fsr2h,c
 39993  0183F4  AEDF               	btfss	indf2,7,c
 39994  0183F6  D002               	goto	l10348
 39995                           
 39996                           ;stkvar	_aexp @ sp[(-13)+10]
 39997  0183F8  0EFD               	movlw	-3
 39998  0183FA  80E3               	bsf	plusw1,0,c
 39999  0183FC                     l10348:
 40000                           
 40001                           ;stkvar	_aexp @ sp[(-13)+10]
 40002  0183FC  0EFD               	movlw	-3
 40003  0183FE  50E3               	movf	plusw1,w,c
 40004  018400  B4D8               	btfsc	status,2,c
 40005  018402  D027               	goto	l10358
 40006                           
 40007                           ;stkvar	_aexp @ sp[(-13)+10]
 40008  018404  0EFD               	movlw	-3
 40009  018406  28E3               	incf	plusw1,w,c
 40010  018408  A4D8               	btfss	status,2,c
 40011  01840A  D018               	goto	l10354
 40012  01840C  0E00               	movlw	0
 40013  01840E  6E32               	movwf	(btemp+8)^0,c
 40014  018410  0E00               	movlw	0
 40015  018412  6E33               	movwf	(btemp+9)^0,c
 40016  018414  0E00               	movlw	0
 40017  018416  6E34               	movwf	(btemp+10)^0,c
 40018  018418  0E00               	movlw	0
 40019  01841A  6E35               	movwf	(btemp+11)^0,c
 40020                           
 40021                           ;stkvar	_a @ sp[(-13)+-8]
 40022  01841C  0EEB               	movlw	-21
 40023  01841E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40024  018424  0EEC               	movlw	-20
 40025  018426  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40026  01842C  0EED               	movlw	-19
 40027  01842E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40028  018434  0EEE               	movlw	-18
 40029  018436  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40030  01843C                     l10354:
 40031                           
 40032                           ;stkvar	_a @ sp[(-13)+-8]
 40033  01843C  0EED               	movlw	-19
 40034  01843E  8EE3               	bsf	plusw1,7,c
 40035                           
 40036                           ;stkvar	_a @ sp[(-13)+-8]
 40037  018440  0EEE               	movlw	238
 40038  018442  24E1               	addwf	fsr1l,w,c
 40039  018444  6ED9               	movwf	fsr2l,c
 40040  018446  0EFF               	movlw	255
 40041  018448  20E2               	addwfc	fsr1h,w,c
 40042  01844A  6EDA               	movwf	fsr2h,c
 40043  01844C  0E00               	movlw	0
 40044  01844E  6EDF               	movwf	indf2,c
 40045  018450  D018               	goto	l10360
 40046  018452                     l10358:
 40047  018452  0E00               	movlw	0
 40048  018454  6E32               	movwf	(btemp+8)^0,c
 40049  018456  0E00               	movlw	0
 40050  018458  6E33               	movwf	(btemp+9)^0,c
 40051  01845A  0E00               	movlw	0
 40052  01845C  6E34               	movwf	(btemp+10)^0,c
 40053  01845E  0E00               	movlw	0
 40054  018460  6E35               	movwf	(btemp+11)^0,c
 40055                           
 40056                           ;stkvar	_a @ sp[(-13)+-8]
 40057  018462  0EEB               	movlw	-21
 40058  018464  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40059  01846A  0EEC               	movlw	-20
 40060  01846C  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40061  018472  0EED               	movlw	-19
 40062  018474  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40063  01847A  0EEE               	movlw	-18
 40064  01847C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40065  018482                     l10360:
 40066                           
 40067                           ;stkvar	_a @ sp[(-13)+-8]
 40068  018482  0EEB               	movlw	-21
 40069  018484  50E3               	movf	plusw1,w,c
 40070  018486  E139               	bnz	l10372
 40071  018488  0EEC               	movlw	-20
 40072  01848A  50E3               	movf	plusw1,w,c
 40073  01848C  E136               	bnz	l10372
 40074  01848E  0EED               	movlw	-19
 40075  018490  50E3               	movf	plusw1,w,c
 40076  018492  E133               	bnz	l10372
 40077  018494  0EEE               	movlw	-18
 40078  018496  50E3               	movf	plusw1,w,c
 40079  018498  A4D8               	btfss	status,2,c
 40080  01849A  D02F               	goto	l10372
 40081                           
 40082                           ;stkvar	_b @ sp[(-13)+-4]
 40083  01849C  0EEF               	movlw	-17
 40084  01849E  6AE3               	clrf	plusw1,c
 40085  0184A0  0EF0               	movlw	-16
 40086  0184A2  6AE3               	clrf	plusw1,c
 40087  0184A4  0EF1               	movlw	-15
 40088  0184A6  6AE3               	clrf	plusw1,c
 40089  0184A8  0EF2               	movlw	-14
 40090  0184AA  6AE3               	clrf	plusw1,c
 40091                           
 40092                           ;stkvar	_b @ sp[(-13)+-4]
 40093  0184AC  0EF1               	movlw	241
 40094  0184AE  24E1               	addwf	fsr1l,w,c
 40095  0184B0  6ED9               	movwf	fsr2l,c
 40096  0184B2  0EFF               	movlw	255
 40097  0184B4  20E2               	addwfc	fsr1h,w,c
 40098  0184B6  6EDA               	movwf	fsr2h,c
 40099  0184B8  0E80               	movlw	128
 40100  0184BA  12DE               	iorwf	postinc2,f,c
 40101  0184BC  0E7F               	movlw	127
 40102  0184BE  12DD               	iorwf	postdec2,f,c
 40103  0184C0                     l10366:
 40104                           
 40105                           ;stkvar	_sign @ sp[(-13)+12]
 40106  0184C0  0EFF               	movlw	-1
 40107  0184C2  006F FF8C  F035    	movff	plusw1,btemp+11
 40108                           
 40109                           ;stkvar	_b @ sp[(-13)+-4]
 40110  0184C8  0EF2               	movlw	242
 40111  0184CA  24E1               	addwf	fsr1l,w,c
 40112  0184CC  6ED9               	movwf	fsr2l,c
 40113  0184CE  0EFF               	movlw	255
 40114  0184D0  20E2               	addwfc	fsr1h,w,c
 40115  0184D2  6EDA               	movwf	fsr2h,c
 40116  0184D4  5035               	movf	(btemp+11)^0,w,c
 40117  0184D6  12DF               	iorwf	indf2,f,c
 40118                           
 40119                           ;stkvar	_b @ sp[(-13)+-4]
 40120  0184D8  0EEF               	movlw	-17
 40121  0184DA  006F FF8C  F02A    	movff	plusw1,btemp
 40122  0184E0  0EF0               	movlw	-16
 40123  0184E2  006F FF8C  F02B    	movff	plusw1,btemp+1
 40124  0184E8  0EF1               	movlw	-15
 40125  0184EA  006F FF8C  F02C    	movff	plusw1,btemp+2
 40126  0184F0  0EF2               	movlw	-14
 40127  0184F2  006F FF8C  F02D    	movff	plusw1,btemp+3
 40128  0184F8  D19F               	goto	l3310
 40129  0184FA                     l10372:
 40130                           
 40131                           ;stkvar	_bexp @ sp[(-13)+11]
 40132  0184FA  0EFE               	movlw	-2
 40133  0184FC  50E3               	movf	plusw1,w,c
 40134  0184FE  A4D8               	btfss	status,2,c
 40135  018500  D009               	goto	l10380
 40136  018502  0E00               	movlw	0
 40137  018504  6E2A               	movwf	btemp^0,c
 40138  018506  0E00               	movlw	0
 40139  018508  6E2B               	movwf	(btemp+1)^0,c
 40140  01850A  0E00               	movlw	0
 40141  01850C  6E2C               	movwf	(btemp+2)^0,c
 40142  01850E  0E00               	movlw	0
 40143  018510  6E2D               	movwf	(btemp+3)^0,c
 40144  018512  D192               	goto	l3310
 40145  018514                     l10380:
 40146                           
 40147                           ;stkvar	_bexp @ sp[(-13)+11]
 40148  018514  0EFE               	movlw	-2
 40149  018516  50E3               	movf	plusw1,w,c
 40150  018518  6E34               	movwf	(btemp+10)^0,c
 40151  01851A  6A35               	clrf	(btemp+11)^0,c
 40152                           
 40153                           ;stkvar	_aexp @ sp[(-13)+10]
 40154  01851C  0EFD               	movlw	-3
 40155  01851E  50E3               	movf	plusw1,w,c
 40156  018520  5E34               	subwf	(btemp+10)^0,f,c
 40157  018522  0E00               	movlw	0
 40158  018524  5A35               	subwfb	(btemp+11)^0,f,c
 40159  018526  0E7F               	movlw	127
 40160  018528  2634               	addwf	(btemp+10)^0,f,c
 40161  01852A  0E00               	movlw	0
 40162  01852C  2235               	addwfc	(btemp+11)^0,f,c
 40163                           
 40164                           ;stkvar	_new_exp @ sp[(-13)+8]
 40165  01852E  0EFB               	movlw	-5
 40166  018530  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40167  018536  0EFC               	movlw	-4
 40168  018538  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40169                           
 40170                           ;stkvar	_b @ sp[(-13)+-4]
 40171  01853E  0EEF               	movlw	-17
 40172  018540  006F FF8C  F032    	movff	plusw1,btemp+8
 40173  018546  0EF0               	movlw	-16
 40174  018548  006F FF8C  F033    	movff	plusw1,btemp+9
 40175  01854E  0EF1               	movlw	-15
 40176  018550  006F FF8C  F034    	movff	plusw1,btemp+10
 40177  018556  0EF2               	movlw	-14
 40178  018558  006F FF8C  F035    	movff	plusw1,btemp+11
 40179                           
 40180                           ;stkvar	_rem @ sp[(-13)+4]
 40181  01855E  0EF7               	movlw	-9
 40182  018560  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40183  018566  0EF8               	movlw	-8
 40184  018568  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40185  01856E  0EF9               	movlw	-7
 40186  018570  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40187  018576  0EFA               	movlw	-6
 40188  018578  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40189                           
 40190                           ;stkvar	_b @ sp[(-13)+-4]
 40191  01857E  0EEF               	movlw	-17
 40192  018580  6AE3               	clrf	plusw1,c
 40193  018582  0EF0               	movlw	-16
 40194  018584  6AE3               	clrf	plusw1,c
 40195  018586  0EF1               	movlw	-15
 40196  018588  6AE3               	clrf	plusw1,c
 40197  01858A  0EF2               	movlw	-14
 40198  01858C  6AE3               	clrf	plusw1,c
 40199                           
 40200                           ;stkvar	_grs @ sp[(-13)+0]
 40201  01858E  0EF3               	movlw	-13
 40202  018590  6AE3               	clrf	plusw1,c
 40203  018592  0EF4               	movlw	-12
 40204  018594  6AE3               	clrf	plusw1,c
 40205  018596  0EF5               	movlw	-11
 40206  018598  6AE3               	clrf	plusw1,c
 40207  01859A  0EF6               	movlw	-10
 40208  01859C  6AE3               	clrf	plusw1,c
 40209                           
 40210                           ;stkvar	_aexp @ sp[(-13)+10]
 40211  01859E  0EFD               	movlw	-3
 40212  0185A0  6AE3               	clrf	plusw1,c
 40213  0185A2  D050               	goto	l10408
 40214  0185A4                     l10390:
 40215                           
 40216                           ;stkvar	_aexp @ sp[(-13)+10]
 40217  0185A4  0EFD               	movlw	-3
 40218  0185A6  50E3               	movf	plusw1,w,c
 40219  0185A8  B4D8               	btfsc	status,2,c
 40220  0185AA  D020               	goto	l10400
 40221                           
 40222                           ;stkvar	_rem @ sp[(-13)+4]
 40223  0185AC  90D8               	bcf	status,0,c
 40224  0185AE  0EF7               	movlw	-9
 40225  0185B0  36E3               	rlcf	plusw1,f,c
 40226  0185B2  0EF8               	movlw	-8
 40227  0185B4  36E3               	rlcf	plusw1,f,c
 40228  0185B6  0EF9               	movlw	-7
 40229  0185B8  36E3               	rlcf	plusw1,f,c
 40230  0185BA  0EFA               	movlw	-6
 40231  0185BC  36E3               	rlcf	plusw1,f,c
 40232                           
 40233                           ;stkvar	_b @ sp[(-13)+-4]
 40234  0185BE  90D8               	bcf	status,0,c
 40235  0185C0  0EEF               	movlw	-17
 40236  0185C2  36E3               	rlcf	plusw1,f,c
 40237  0185C4  0EF0               	movlw	-16
 40238  0185C6  36E3               	rlcf	plusw1,f,c
 40239  0185C8  0EF1               	movlw	-15
 40240  0185CA  36E3               	rlcf	plusw1,f,c
 40241  0185CC  0EF2               	movlw	-14
 40242  0185CE  36E3               	rlcf	plusw1,f,c
 40243                           
 40244                           ;stkvar	_grs @ sp[(-13)+0]
 40245  0185D0  0EF6               	movlw	-10
 40246  0185D2  AEE3               	btfss	plusw1,7,c
 40247  0185D4  D002               	goto	l10398
 40248                           
 40249                           ;stkvar	_b @ sp[(-13)+-4]
 40250  0185D6  0EEF               	movlw	-17
 40251  0185D8  80E3               	bsf	plusw1,0,c
 40252  0185DA                     l10398:
 40253                           
 40254                           ;stkvar	_grs @ sp[(-13)+0]
 40255  0185DA  90D8               	bcf	status,0,c
 40256  0185DC  0EF3               	movlw	-13
 40257  0185DE  36E3               	rlcf	plusw1,f,c
 40258  0185E0  0EF4               	movlw	-12
 40259  0185E2  36E3               	rlcf	plusw1,f,c
 40260  0185E4  0EF5               	movlw	-11
 40261  0185E6  36E3               	rlcf	plusw1,f,c
 40262  0185E8  0EF6               	movlw	-10
 40263  0185EA  36E3               	rlcf	plusw1,f,c
 40264  0185EC                     l10400:
 40265                           
 40266                           ;stkvar	_a @ sp[(-13)+-8]
 40267                           ;stkvar	_rem @ sp[(-13)+4]
 40268  0185EC  50E1               	movf	fsr1l,w,c
 40269  0185EE  0FF7               	addlw	-9
 40270  0185F0  6ED9               	movwf	fsr2l,c
 40271  0185F2  50E2               	movf	fsr1h,w,c
 40272  0185F4  6EDA               	movwf	fsr2h,c
 40273  0185F6  0EFF               	movlw	255
 40274  0185F8  22DA               	addwfc	fsr2h,f,c
 40275  0185FA  0EEB               	movlw	-21
 40276  0185FC  50E3               	movf	plusw1,w,c
 40277  0185FE  5CDE               	subwf	postinc2,w,c
 40278  018600  0EEC               	movlw	-20
 40279  018602  50E3               	movf	plusw1,w,c
 40280  018604  58DE               	subwfb	postinc2,w,c
 40281  018606  0EED               	movlw	-19
 40282  018608  50E3               	movf	plusw1,w,c
 40283  01860A  58DE               	subwfb	postinc2,w,c
 40284  01860C  0EEE               	movlw	-18
 40285  01860E  50E3               	movf	plusw1,w,c
 40286  018610  58DE               	subwfb	postinc2,w,c
 40287  018612  A0D8               	btfss	status,0,c
 40288  018614  D015               	goto	l10406
 40289                           
 40290                           ;stkvar	_grs @ sp[(-13)+0]
 40291  018616  0EF6               	movlw	-10
 40292  018618  8CE3               	bsf	plusw1,6,c
 40293                           
 40294                           ;stkvar	_a @ sp[(-13)+-8]
 40295                           ;stkvar	_rem @ sp[(-13)+4]
 40296  01861A  50E1               	movf	fsr1l,w,c
 40297  01861C  0FF7               	addlw	-9
 40298  01861E  6ED9               	movwf	fsr2l,c
 40299  018620  50E2               	movf	fsr1h,w,c
 40300  018622  6EDA               	movwf	fsr2h,c
 40301  018624  0EFF               	movlw	255
 40302  018626  22DA               	addwfc	fsr2h,f,c
 40303  018628  0EEB               	movlw	-21
 40304  01862A  50E3               	movf	plusw1,w,c
 40305  01862C  5EDE               	subwf	postinc2,f,c
 40306  01862E  0EEC               	movlw	-20
 40307  018630  50E3               	movf	plusw1,w,c
 40308  018632  5ADE               	subwfb	postinc2,f,c
 40309  018634  0EED               	movlw	-19
 40310  018636  50E3               	movf	plusw1,w,c
 40311  018638  5ADE               	subwfb	postinc2,f,c
 40312  01863A  0EEE               	movlw	-18
 40313  01863C  50E3               	movf	plusw1,w,c
 40314  01863E  5ADE               	subwfb	postinc2,f,c
 40315  018640                     l10406:
 40316                           
 40317                           ;stkvar	_aexp @ sp[(-13)+10]
 40318  018640  0EFD               	movlw	-3
 40319  018642  2AE3               	incf	plusw1,f,c
 40320  018644                     l10408:
 40321                           
 40322                           ;stkvar	_aexp @ sp[(-13)+10]
 40323  018644  0EFD               	movlw	-3
 40324  018646  006F FF8C  F02A    	movff	plusw1,btemp
 40325  01864C  0E19               	movlw	25
 40326  01864E  642A               	cpfsgt	btemp^0,c
 40327  018650  D7A9               	goto	l10390
 40328                           
 40329                           ;stkvar	_rem @ sp[(-13)+4]
 40330  018652  0EF7               	movlw	-9
 40331  018654  50E3               	movf	plusw1,w,c
 40332  018656  E10A               	bnz	u8470
 40333  018658  0EF8               	movlw	-8
 40334  01865A  50E3               	movf	plusw1,w,c
 40335  01865C  E107               	bnz	u8470
 40336  01865E  0EF9               	movlw	-7
 40337  018660  50E3               	movf	plusw1,w,c
 40338  018662  E104               	bnz	u8470
 40339  018664  0EFA               	movlw	-6
 40340  018666  50E3               	movf	plusw1,w,c
 40341  018668  B4D8               	btfsc	status,2,c
 40342  01866A  D024               	goto	l10424
 40343  01866C                     u8470:
 40344                           
 40345                           ;stkvar	_grs @ sp[(-13)+0]
 40346  01866C  0EF3               	movlw	-13
 40347  01866E  80E3               	bsf	plusw1,0,c
 40348  018670  D021               	goto	l10424
 40349  018672                     l10414:
 40350                           
 40351                           ;stkvar	_b @ sp[(-13)+-4]
 40352  018672  90D8               	bcf	status,0,c
 40353  018674  0EEF               	movlw	-17
 40354  018676  36E3               	rlcf	plusw1,f,c
 40355  018678  0EF0               	movlw	-16
 40356  01867A  36E3               	rlcf	plusw1,f,c
 40357  01867C  0EF1               	movlw	-15
 40358  01867E  36E3               	rlcf	plusw1,f,c
 40359  018680  0EF2               	movlw	-14
 40360  018682  36E3               	rlcf	plusw1,f,c
 40361                           
 40362                           ;stkvar	_grs @ sp[(-13)+0]
 40363  018684  0EF6               	movlw	-10
 40364  018686  AEE3               	btfss	plusw1,7,c
 40365  018688  D002               	goto	l10420
 40366                           
 40367                           ;stkvar	_b @ sp[(-13)+-4]
 40368  01868A  0EEF               	movlw	-17
 40369  01868C  80E3               	bsf	plusw1,0,c
 40370  01868E                     l10420:
 40371                           
 40372                           ;stkvar	_grs @ sp[(-13)+0]
 40373  01868E  90D8               	bcf	status,0,c
 40374  018690  0EF3               	movlw	-13
 40375  018692  36E3               	rlcf	plusw1,f,c
 40376  018694  0EF4               	movlw	-12
 40377  018696  36E3               	rlcf	plusw1,f,c
 40378  018698  0EF5               	movlw	-11
 40379  01869A  36E3               	rlcf	plusw1,f,c
 40380  01869C  0EF6               	movlw	-10
 40381  01869E  36E3               	rlcf	plusw1,f,c
 40382                           
 40383                           ;stkvar	_new_exp @ sp[(-13)+8]
 40384  0186A0  50E1               	movf	fsr1l,w,c
 40385  0186A2  0FFB               	addlw	-5
 40386  0186A4  6ED9               	movwf	fsr2l,c
 40387  0186A6  50E2               	movf	fsr1h,w,c
 40388  0186A8  6EDA               	movwf	fsr2h,c
 40389  0186AA  0EFF               	movlw	255
 40390  0186AC  22DA               	addwfc	fsr2h,f,c
 40391  0186AE  06DE               	decf	postinc2,f,c
 40392  0186B0  0E00               	movlw	0
 40393  0186B2  5ADD               	subwfb	postdec2,f,c
 40394  0186B4                     l10424:
 40395                           
 40396                           ;stkvar	_b @ sp[(-13)+-4]
 40397  0186B4  0EF1               	movlw	-15
 40398  0186B6  AEE3               	btfss	plusw1,7,c
 40399  0186B8  D7DC               	goto	l10414
 40400                           
 40401                           ;stkvar	_aexp @ sp[(-13)+10]
 40402  0186BA  0EFD               	movlw	-3
 40403  0186BC  6AE3               	clrf	plusw1,c
 40404                           
 40405                           ;stkvar	_grs @ sp[(-13)+0]
 40406  0186BE  0EF6               	movlw	-10
 40407  0186C0  AEE3               	btfss	plusw1,7,c
 40408  0186C2  D020               	goto	l10438
 40409                           
 40410                           ;stkvar	_grs @ sp[(-13)+0]
 40411  0186C4  50E1               	movf	fsr1l,w,c
 40412  0186C6  0FF3               	addlw	-13
 40413  0186C8  6ED9               	movwf	fsr2l,c
 40414  0186CA  50E2               	movf	fsr1h,w,c
 40415  0186CC  6EDA               	movwf	fsr2h,c
 40416  0186CE  0EFF               	movlw	255
 40417  0186D0  22DA               	addwfc	fsr2h,f,c
 40418  0186D2  0EFF               	movlw	255
 40419  0186D4  14DE               	andwf	postinc2,w,c
 40420  0186D6  6E32               	movwf	(btemp+8)^0,c
 40421  0186D8  0EFF               	movlw	255
 40422  0186DA  14DE               	andwf	postinc2,w,c
 40423  0186DC  6E33               	movwf	(btemp+9)^0,c
 40424  0186DE  0EFF               	movlw	255
 40425  0186E0  14DE               	andwf	postinc2,w,c
 40426  0186E2  6E34               	movwf	(btemp+10)^0,c
 40427  0186E4  0E7F               	movlw	127
 40428  0186E6  14DE               	andwf	postinc2,w,c
 40429  0186E8  6E35               	movwf	(btemp+11)^0,c
 40430  0186EA  5032               	movf	(btemp+8)^0,w,c
 40431  0186EC  1033               	iorwf	(btemp+9)^0,w,c
 40432  0186EE  1034               	iorwf	(btemp+10)^0,w,c
 40433  0186F0  1035               	iorwf	(btemp+11)^0,w,c
 40434  0186F2  B4D8               	btfsc	status,2,c
 40435  0186F4  D004               	goto	l10434
 40436  0186F6                     u8510:
 40437                           
 40438                           ;stkvar	_aexp @ sp[(-13)+10]
 40439  0186F6  0EFD               	movlw	-3
 40440  0186F8  6AE3               	clrf	plusw1,c
 40441  0186FA  2AE3               	incf	plusw1,f,c
 40442  0186FC  D003               	goto	l10438
 40443  0186FE                     l10434:
 40444                           
 40445                           ;stkvar	_b @ sp[(-13)+-4]
 40446  0186FE  0EEF               	movlw	-17
 40447  018700  B0E3               	btfsc	plusw1,0,c
 40448  018702  D7F9               	goto	u8510
 40449  018704                     l10438:
 40450                           
 40451                           ;stkvar	_aexp @ sp[(-13)+10]
 40452  018704  0EFD               	movlw	-3
 40453  018706  50E3               	movf	plusw1,w,c
 40454  018708  B4D8               	btfsc	status,2,c
 40455  01870A  D036               	goto	l10448
 40456                           
 40457                           ;stkvar	_b @ sp[(-13)+-4]
 40458  01870C  50E1               	movf	fsr1l,w,c
 40459  01870E  0FEF               	addlw	-17
 40460  018710  6ED9               	movwf	fsr2l,c
 40461  018712  50E2               	movf	fsr1h,w,c
 40462  018714  6EDA               	movwf	fsr2h,c
 40463  018716  0EFF               	movlw	255
 40464  018718  22DA               	addwfc	fsr2h,f,c
 40465  01871A  2ADE               	incf	postinc2,f,c
 40466  01871C  0E00               	movlw	0
 40467  01871E  22DE               	addwfc	postinc2,f,c
 40468  018720  22DE               	addwfc	postinc2,f,c
 40469  018722  22DE               	addwfc	postinc2,f,c
 40470                           
 40471                           ;stkvar	_b @ sp[(-13)+-4]
 40472  018724  0EF2               	movlw	-14
 40473  018726  A0E3               	btfss	plusw1,0,c
 40474  018728  D027               	goto	l10448
 40475  01872A  0E01               	movlw	1
 40476  01872C  6E35               	movwf	(btemp+11)^0,c
 40477                           
 40478                           ;stkvar	_b @ sp[(-13)+-4]
 40479  01872E  50E1               	movf	fsr1l,w,c
 40480  018730  0FEF               	addlw	-17
 40481  018732  6ED9               	movwf	fsr2l,c
 40482  018734  50E2               	movf	fsr1h,w,c
 40483  018736  6EDA               	movwf	fsr2h,c
 40484  018738  0EFF               	movlw	255
 40485  01873A  22DA               	addwfc	fsr2h,f,c
 40486  01873C  2835               	incf	(btemp+11)^0,w,c
 40487  01873E  52DE               	movf	postinc2,f,c
 40488  018740  D008               	goto	u8550
 40489  018742                     u8555:
 40490  018742  52DE               	movf	postinc2,f,c
 40491  018744  90D8               	bcf	status,0,c
 40492  018746  BEDC               	btfsc	preinc2,7,c
 40493  018748  80D8               	bsf	status,0,c
 40494  01874A  32DD               	rrcf	postdec2,f,c
 40495  01874C  32DD               	rrcf	postdec2,f,c
 40496  01874E  32DD               	rrcf	postdec2,f,c
 40497  018750  32DE               	rrcf	postinc2,f,c
 40498  018752                     u8550:
 40499  018752  2EE8               	decfsz	wreg,f,c
 40500  018754  D7F6               	goto	u8555
 40501                           
 40502                           ;stkvar	_new_exp @ sp[(-13)+8]
 40503  018756  0EFB               	movlw	-5
 40504  018758  50E3               	movf	plusw1,w,c
 40505  01875A  0F01               	addlw	1
 40506  01875C  6E2A               	movwf	btemp^0,c
 40507  01875E  0EFB               	movlw	-5
 40508  018760  0060  F0AB  FFE3   	movff	btemp,plusw1
 40509  018766  6A2A               	clrf	btemp^0,c
 40510  018768  0EFC               	movlw	-4
 40511  01876A  50E3               	movf	plusw1,w,c
 40512  01876C  202A               	addwfc	btemp^0,w,c
 40513  01876E  6E2A               	movwf	btemp^0,c
 40514  018770  0EFC               	movlw	-4
 40515  018772  0060  F0AB  FFE3   	movff	btemp,plusw1
 40516  018778                     l10448:
 40517                           
 40518                           ;stkvar	_new_exp @ sp[(-13)+8]
 40519  018778  0EFC               	movlw	-4
 40520  01877A  BEE3               	btfsc	plusw1,7,c
 40521  01877C  D01B               	goto	l10454
 40522  01877E  0EFC               	movlw	-4
 40523  018780  50E3               	movf	plusw1,w,c
 40524  018782  E104               	bnz	u8560
 40525  018784  0EFB               	movlw	-5
 40526  018786  28E3               	incf	plusw1,w,c
 40527  018788  A0D8               	btfss	status,0,c
 40528  01878A  D014               	goto	l10454
 40529  01878C                     u8560:
 40530  01878C  0EFF               	movlw	255
 40531  01878E  6E34               	movwf	(btemp+10)^0,c
 40532  018790  0E00               	movlw	0
 40533  018792  6E35               	movwf	(btemp+11)^0,c
 40534                           
 40535                           ;stkvar	_new_exp @ sp[(-13)+8]
 40536  018794  0EFB               	movlw	-5
 40537  018796  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40538  01879C  0EFC               	movlw	-4
 40539  01879E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40540                           
 40541                           ;stkvar	_b @ sp[(-13)+-4]
 40542  0187A4  0EEF               	movlw	-17
 40543  0187A6  6AE3               	clrf	plusw1,c
 40544  0187A8  0EF0               	movlw	-16
 40545  0187AA  6AE3               	clrf	plusw1,c
 40546  0187AC  0EF1               	movlw	-15
 40547  0187AE  6AE3               	clrf	plusw1,c
 40548  0187B0  0EF2               	movlw	-14
 40549  0187B2  6AE3               	clrf	plusw1,c
 40550  0187B4                     l10454:
 40551                           
 40552                           ;stkvar	_new_exp @ sp[(-13)+8]
 40553  0187B4  0EFC               	movlw	-4
 40554  0187B6  BEE3               	btfsc	plusw1,7,c
 40555  0187B8  D007               	goto	u8570
 40556  0187BA  0EFC               	movlw	-4
 40557  0187BC  50E3               	movf	plusw1,w,c
 40558  0187BE  E112               	bnz	l10460
 40559  0187C0  0EFB               	movlw	-5
 40560  0187C2  04E3               	decf	plusw1,w,c
 40561  0187C4  B0D8               	btfsc	status,0,c
 40562  0187C6  D00E               	goto	l10460
 40563  0187C8                     u8570:
 40564                           
 40565                           ;stkvar	_new_exp @ sp[(-13)+8]
 40566  0187C8  0EFB               	movlw	-5
 40567  0187CA  6AE3               	clrf	plusw1,c
 40568  0187CC  0EFC               	movlw	-4
 40569  0187CE  6AE3               	clrf	plusw1,c
 40570                           
 40571                           ;stkvar	_b @ sp[(-13)+-4]
 40572  0187D0  0EEF               	movlw	-17
 40573  0187D2  6AE3               	clrf	plusw1,c
 40574  0187D4  0EF0               	movlw	-16
 40575  0187D6  6AE3               	clrf	plusw1,c
 40576  0187D8  0EF1               	movlw	-15
 40577  0187DA  6AE3               	clrf	plusw1,c
 40578  0187DC  0EF2               	movlw	-14
 40579  0187DE  6AE3               	clrf	plusw1,c
 40580                           
 40581                           ;stkvar	_sign @ sp[(-13)+12]
 40582  0187E0  0EFF               	movlw	-1
 40583  0187E2  6AE3               	clrf	plusw1,c
 40584  0187E4                     l10460:
 40585                           
 40586                           ;stkvar	_new_exp @ sp[(-13)+8]
 40587                           ;stkvar	_bexp @ sp[(-13)+11]
 40588  0187E4  0EFB               	movlw	-5
 40589  0187E6  006F FF8C  F02A    	movff	plusw1,btemp
 40590  0187EC  0EFE               	movlw	-2
 40591  0187EE  0060  F0AB  FFE3   	movff	btemp,plusw1
 40592                           
 40593                           ;stkvar	_bexp @ sp[(-13)+11]
 40594  0187F4  0EFE               	movlw	-2
 40595  0187F6  A0E3               	btfss	plusw1,0,c
 40596  0187F8  D009               	goto	l10466
 40597                           
 40598                           ;stkvar	_b @ sp[(-13)+-4]
 40599  0187FA  0EF1               	movlw	241
 40600  0187FC  24E1               	addwf	fsr1l,w,c
 40601  0187FE  6ED9               	movwf	fsr2l,c
 40602  018800  0EFF               	movlw	255
 40603  018802  20E2               	addwfc	fsr1h,w,c
 40604  018804  6EDA               	movwf	fsr2h,c
 40605  018806  0E00               	movlw	0
 40606  018808  8EDB               	bsf	plusw2,7,c
 40607  01880A  D008               	goto	l10468
 40608  01880C                     l10466:
 40609                           
 40610                           ;stkvar	_b @ sp[(-13)+-4]
 40611  01880C  0EF1               	movlw	241
 40612  01880E  24E1               	addwf	fsr1l,w,c
 40613  018810  6ED9               	movwf	fsr2l,c
 40614  018812  0EFF               	movlw	255
 40615  018814  20E2               	addwfc	fsr1h,w,c
 40616  018816  6EDA               	movwf	fsr2h,c
 40617  018818  0E7F               	movlw	127
 40618  01881A  16DF               	andwf	indf2,f,c
 40619  01881C                     l10468:
 40620                           
 40621                           ;stkvar	_b @ sp[(-13)+-4]
 40622  01881C  0EF2               	movlw	242
 40623  01881E  24E1               	addwf	fsr1l,w,c
 40624  018820  6ED9               	movwf	fsr2l,c
 40625  018822  0EFF               	movlw	255
 40626  018824  20E2               	addwfc	fsr1h,w,c
 40627  018826  6EDA               	movwf	fsr2h,c
 40628                           
 40629                           ;stkvar	_bexp @ sp[(-13)+11]
 40630  018828  0EFE               	movlw	-2
 40631  01882A  006F FF8C  F035    	movff	plusw1,btemp+11
 40632  018830  90D8               	bcf	status,0,c
 40633  018832  3035               	rrcf	(btemp+11)^0,w,c
 40634  018834  6EDF               	movwf	indf2,c
 40635  018836  D644               	goto	l10366
 40636  018838                     l3310:
 40637                           
 40638                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 40639  018838  0EEB               	movlw	235
 40640  01883A  26E1               	addwf	fsr1l,f,c
 40641  01883C  0EFF               	movlw	255
 40642  01883E  22E2               	addwfc	fsr1h,f,c
 40643  018840  0012               	return		;funcret
 40644  018842                     __end_of___fldiv:
 40645                           	opt callstack 0
 40646                           
 40647 ;; *************** function ___flge *****************
 40648 ;; Defined at:
 40649 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 40650 ;; Parameters:    Size  Location     Type
 40651 ;;  ff1             4  [STACK] unsigned char 
 40652 ;;  ff2             4  [STACK] unsigned char 
 40653 ;; Auto vars:     Size  Location     Type
 40654 ;;		None
 40655 ;; Return value:  Size  Location     Type
 40656 ;;		None               void
 40657 ;; Registers used:
 40658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 40659 ;; Tracked objects:
 40660 ;;		On entry : 0/1
 40661 ;;		On exit  : 0/0
 40662 ;;		Unchanged: 0/0
 40663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40668 ;;Total ram usage:        0 bytes
 40669 ;; Hardware stack levels used:    1
 40670 ;; Hardware stack levels required when called:   15
 40671 ;; This function calls:
 40672 ;;		Nothing
 40673 ;; This function is called by:
 40674 ;;		_main
 40675 ;;		_convert_dac_raw
 40676 ;;		_calc_ror_data
 40677 ;;		_check_day_time
 40678 ;;		_calc_bsoc
 40679 ;;		_efgtoa
 40680 ;; This function uses a reentrant model
 40681 ;;
 40682                           
 40683                           	psect	text147
 40684  01EC6A                     __ptext147:
 40685                           	opt callstack 0
 40686  01EC6A                     ___flge:
 40687                           	opt callstack 0
 40688                           
 40689                           ;stkvar	_ff1 @ sp[(0)+-4]
 40690                           
 40691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40692                           ;incstack = 0
 40693 ;; hardware stack exceeded
 40694  01EC6A  50E1               	movf	fsr1l,w,c
 40695  01EC6C  0FFC               	addlw	-4
 40696  01EC6E  6ED9               	movwf	fsr2l,c
 40697  01EC70  50E2               	movf	fsr1h,w,c
 40698  01EC72  6EDA               	movwf	fsr2h,c
 40699  01EC74  0EFF               	movlw	255
 40700  01EC76  22DA               	addwfc	fsr2h,f,c
 40701  01EC78  0E00               	movlw	0
 40702  01EC7A  14DE               	andwf	postinc2,w,c
 40703  01EC7C  6E32               	movwf	(btemp+8)^0,c
 40704  01EC7E  0E00               	movlw	0
 40705  01EC80  14DE               	andwf	postinc2,w,c
 40706  01EC82  6E33               	movwf	(btemp+9)^0,c
 40707  01EC84  0E80               	movlw	128
 40708  01EC86  14DE               	andwf	postinc2,w,c
 40709  01EC88  6E34               	movwf	(btemp+10)^0,c
 40710  01EC8A  0E7F               	movlw	127
 40711  01EC8C  14DE               	andwf	postinc2,w,c
 40712  01EC8E  6E35               	movwf	(btemp+11)^0,c
 40713  01EC90  5032               	movf	(btemp+8)^0,w,c
 40714  01EC92  1033               	iorwf	(btemp+9)^0,w,c
 40715  01EC94  1034               	iorwf	(btemp+10)^0,w,c
 40716  01EC96  1035               	iorwf	(btemp+11)^0,w,c
 40717  01EC98  A4D8               	btfss	status,2,c
 40718  01EC9A  D008               	goto	l10742
 40719                           
 40720                           ;stkvar	_ff1 @ sp[(0)+-4]
 40721  01EC9C  0EFC               	movlw	-4
 40722  01EC9E  6AE3               	clrf	plusw1,c
 40723  01ECA0  0EFD               	movlw	-3
 40724  01ECA2  6AE3               	clrf	plusw1,c
 40725  01ECA4  0EFE               	movlw	-2
 40726  01ECA6  6AE3               	clrf	plusw1,c
 40727  01ECA8  0EFF               	movlw	-1
 40728  01ECAA  6AE3               	clrf	plusw1,c
 40729  01ECAC                     l10742:
 40730                           
 40731                           ;stkvar	_ff2 @ sp[(0)+-8]
 40732  01ECAC  50E1               	movf	fsr1l,w,c
 40733  01ECAE  0FF8               	addlw	-8
 40734  01ECB0  6ED9               	movwf	fsr2l,c
 40735  01ECB2  50E2               	movf	fsr1h,w,c
 40736  01ECB4  6EDA               	movwf	fsr2h,c
 40737  01ECB6  0EFF               	movlw	255
 40738  01ECB8  22DA               	addwfc	fsr2h,f,c
 40739  01ECBA  0E00               	movlw	0
 40740  01ECBC  14DE               	andwf	postinc2,w,c
 40741  01ECBE  6E32               	movwf	(btemp+8)^0,c
 40742  01ECC0  0E00               	movlw	0
 40743  01ECC2  14DE               	andwf	postinc2,w,c
 40744  01ECC4  6E33               	movwf	(btemp+9)^0,c
 40745  01ECC6  0E80               	movlw	128
 40746  01ECC8  14DE               	andwf	postinc2,w,c
 40747  01ECCA  6E34               	movwf	(btemp+10)^0,c
 40748  01ECCC  0E7F               	movlw	127
 40749  01ECCE  14DE               	andwf	postinc2,w,c
 40750  01ECD0  6E35               	movwf	(btemp+11)^0,c
 40751  01ECD2  5032               	movf	(btemp+8)^0,w,c
 40752  01ECD4  1033               	iorwf	(btemp+9)^0,w,c
 40753  01ECD6  1034               	iorwf	(btemp+10)^0,w,c
 40754  01ECD8  1035               	iorwf	(btemp+11)^0,w,c
 40755  01ECDA  A4D8               	btfss	status,2,c
 40756  01ECDC  D008               	goto	l2991
 40757                           
 40758                           ;stkvar	_ff2 @ sp[(0)+-8]
 40759  01ECDE  0EF8               	movlw	-8
 40760  01ECE0  6AE3               	clrf	plusw1,c
 40761  01ECE2  0EF9               	movlw	-7
 40762  01ECE4  6AE3               	clrf	plusw1,c
 40763  01ECE6  0EFA               	movlw	-6
 40764  01ECE8  6AE3               	clrf	plusw1,c
 40765  01ECEA  0EFB               	movlw	-5
 40766  01ECEC  6AE3               	clrf	plusw1,c
 40767  01ECEE                     l2991:
 40768                           
 40769                           ;stkvar	_ff1 @ sp[(0)+-4]
 40770  01ECEE  0EFF               	movlw	-1
 40771  01ECF0  AEE3               	btfss	plusw1,7,c
 40772  01ECF2  D024               	goto	l10748
 40773                           
 40774                           ;stkvar	_ff1 @ sp[(0)+-4]
 40775  01ECF4  0E00               	movlw	0
 40776  01ECF6  6E32               	movwf	(btemp+8)^0,c
 40777  01ECF8  0E00               	movlw	0
 40778  01ECFA  6E33               	movwf	(btemp+9)^0,c
 40779  01ECFC  0E00               	movlw	0
 40780  01ECFE  6E34               	movwf	(btemp+10)^0,c
 40781  01ED00  0E80               	movlw	128
 40782  01ED02  6E35               	movwf	(btemp+11)^0,c
 40783  01ED04  0EFC               	movlw	-4
 40784  01ED06  50E3               	movf	plusw1,w,c
 40785  01ED08  5E32               	subwf	(btemp+8)^0,f,c
 40786  01ED0A  0EFD               	movlw	-3
 40787  01ED0C  50E3               	movf	plusw1,w,c
 40788  01ED0E  5A33               	subwfb	(btemp+9)^0,f,c
 40789  01ED10  0EFE               	movlw	-2
 40790  01ED12  50E3               	movf	plusw1,w,c
 40791  01ED14  5A34               	subwfb	(btemp+10)^0,f,c
 40792  01ED16  0EFF               	movlw	-1
 40793  01ED18  50E3               	movf	plusw1,w,c
 40794  01ED1A  5A35               	subwfb	(btemp+11)^0,f,c
 40795                           
 40796                           ;stkvar	_ff1 @ sp[(0)+-4]
 40797  01ED1C  0EFC               	movlw	-4
 40798  01ED1E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40799  01ED24  0EFD               	movlw	-3
 40800  01ED26  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40801  01ED2C  0EFE               	movlw	-2
 40802  01ED2E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40803  01ED34  0EFF               	movlw	-1
 40804  01ED36  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40805  01ED3C                     l10748:
 40806                           
 40807                           ;stkvar	_ff2 @ sp[(0)+-8]
 40808  01ED3C  0EFB               	movlw	-5
 40809  01ED3E  AEE3               	btfss	plusw1,7,c
 40810  01ED40  D024               	goto	l10752
 40811                           
 40812                           ;stkvar	_ff2 @ sp[(0)+-8]
 40813  01ED42  0E00               	movlw	0
 40814  01ED44  6E32               	movwf	(btemp+8)^0,c
 40815  01ED46  0E00               	movlw	0
 40816  01ED48  6E33               	movwf	(btemp+9)^0,c
 40817  01ED4A  0E00               	movlw	0
 40818  01ED4C  6E34               	movwf	(btemp+10)^0,c
 40819  01ED4E  0E80               	movlw	128
 40820  01ED50  6E35               	movwf	(btemp+11)^0,c
 40821  01ED52  0EF8               	movlw	-8
 40822  01ED54  50E3               	movf	plusw1,w,c
 40823  01ED56  5E32               	subwf	(btemp+8)^0,f,c
 40824  01ED58  0EF9               	movlw	-7
 40825  01ED5A  50E3               	movf	plusw1,w,c
 40826  01ED5C  5A33               	subwfb	(btemp+9)^0,f,c
 40827  01ED5E  0EFA               	movlw	-6
 40828  01ED60  50E3               	movf	plusw1,w,c
 40829  01ED62  5A34               	subwfb	(btemp+10)^0,f,c
 40830  01ED64  0EFB               	movlw	-5
 40831  01ED66  50E3               	movf	plusw1,w,c
 40832  01ED68  5A35               	subwfb	(btemp+11)^0,f,c
 40833                           
 40834                           ;stkvar	_ff2 @ sp[(0)+-8]
 40835  01ED6A  0EF8               	movlw	-8
 40836  01ED6C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 40837  01ED72  0EF9               	movlw	-7
 40838  01ED74  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 40839  01ED7A  0EFA               	movlw	-6
 40840  01ED7C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 40841  01ED82  0EFB               	movlw	-5
 40842  01ED84  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 40843  01ED8A                     l10752:
 40844                           
 40845                           ;stkvar	_ff1 @ sp[(0)+-4]
 40846  01ED8A  0EFF               	movlw	-1
 40847  01ED8C  7EE3               	btg	plusw1,7,c
 40848                           
 40849                           ;stkvar	_ff2 @ sp[(0)+-8]
 40850  01ED8E  0EFB               	movlw	-5
 40851  01ED90  7EE3               	btg	plusw1,7,c
 40852                           
 40853                           ;stkvar	_ff2 @ sp[(0)+-8]
 40854                           ;stkvar	_ff1 @ sp[(0)+-4]
 40855  01ED92  50E1               	movf	fsr1l,w,c
 40856  01ED94  0FFC               	addlw	-4
 40857  01ED96  6ED9               	movwf	fsr2l,c
 40858  01ED98  50E2               	movf	fsr1h,w,c
 40859  01ED9A  6EDA               	movwf	fsr2h,c
 40860  01ED9C  0EFF               	movlw	255
 40861  01ED9E  22DA               	addwfc	fsr2h,f,c
 40862  01EDA0  0EF8               	movlw	-8
 40863  01EDA2  50E3               	movf	plusw1,w,c
 40864  01EDA4  5CDE               	subwf	postinc2,w,c
 40865  01EDA6  0EF9               	movlw	-7
 40866  01EDA8  50E3               	movf	plusw1,w,c
 40867  01EDAA  58DE               	subwfb	postinc2,w,c
 40868  01EDAC  0EFA               	movlw	-6
 40869  01EDAE  50E3               	movf	plusw1,w,c
 40870  01EDB0  58DE               	subwfb	postinc2,w,c
 40871  01EDB2  0EFB               	movlw	-5
 40872  01EDB4  50E3               	movf	plusw1,w,c
 40873  01EDB6  58DE               	subwfb	postinc2,w,c
 40874  01EDB8  B0D8               	btfsc	status,0,c
 40875  01EDBA  D002               	goto	l10760
 40876  01EDBC  902A               	bcf	btemp& (0+255),0,c
 40877  01EDBE  D001               	goto	l2998
 40878  01EDC0                     l10760:
 40879  01EDC0  802A               	bsf	btemp& (0+255),0,c
 40880  01EDC2                     l2998:
 40881                           
 40882                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 40883  01EDC2  0EF8               	movlw	248
 40884  01EDC4  26E1               	addwf	fsr1l,f,c
 40885  01EDC6  0EFF               	movlw	255
 40886  01EDC8  22E2               	addwfc	fsr1h,f,c
 40887  01EDCA  0012               	return		;funcret
 40888  01EDCC                     __end_of___flge:
 40889                           	opt callstack 0
 40890                           
 40891 ;; *************** function _calc_model_data *****************
 40892 ;; Defined at:
 40893 ;;		line 67 in file "mbmc.c"
 40894 ;; Parameters:    Size  Location     Type
 40895 ;;		None
 40896 ;; Auto vars:     Size  Location     Type
 40897 ;;		None
 40898 ;; Return value:  Size  Location     Type
 40899 ;;                  1  [STACK] void 
 40900 ;; Registers used:
 40901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 40902 ;; Tracked objects:
 40903 ;;		On entry : 3F/0
 40904 ;;		On exit  : 3F/39
 40905 ;;		Unchanged: 0/0
 40906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40911 ;;Total ram usage:        0 bytes
 40912 ;; Hardware stack levels used:    1
 40913 ;; Hardware stack levels required when called:   18
 40914 ;; This function calls:
 40915 ;;		___fladd
 40916 ;;		___flmul
 40917 ;;		___flsub
 40918 ;;		_lp_filter
 40919 ;;		_start_bsoc
 40920 ;;		_stop_bsoc
 40921 ;; This function is called by:
 40922 ;;		_main
 40923 ;; This function uses a reentrant model
 40924 ;;
 40925                           
 40926                           	psect	text148
 40927  019F6E                     __ptext148:
 40928                           	opt callstack 0
 40929  019F6E                     _calc_model_data:
 40930                           	opt callstack 12
 40931                           
 40932                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 40933                           
 40934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40935                           ;incstack = 0
 40936  019F6E  ECB2  F016         	call	_stop_bsoc	;wreg free
 40937                           
 40938                           ; BSR set to: 57
 40939                           ;mbmc.c: 72:  if (!V.calib) {
 40940  019F72  0102               	movlb	2	; () banked
 40941  019F74  51B0               	movf	(_V+169)& (0+255),w,b	;volatile
 40942  019F76  A4D8               	btfss	status,2,c
 40943  019F78  D220               	goto	l14436
 40944                           
 40945                           ; BSR set to: 2
 40946                           ;mbmc.c: 73:   C.updates++;
 40947  019F7A  EE23  F0BD         	lfsr	2,_C+316	;volatile
 40948  019F7E  2ADE               	incf	postinc2,f,c
 40949  019F80  0E00               	movlw	0
 40950  019F82  22DE               	addwfc	postinc2,f,c
 40951  019F84  22DE               	addwfc	postinc2,f,c
 40952  019F86  22DE               	addwfc	postinc2,f,c
 40953                           
 40954                           ; BSR set to: 2
 40955                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 40956  019F88  EE22  F381         	lfsr	2,_C
 40957  019F8C  006F FF78  FBC5    	movff	postinc2,_C+68	;volatile
 40958  019F92  006F FF78  FBC6    	movff	postinc2,_C+69	;volatile
 40959  019F98  006F FF78  FBC7    	movff	postinc2,_C+70	;volatile
 40960  019F9E  006F FF74  FBC8    	movff	postdec2,_C+71	;volatile
 40961                           
 40962                           ; BSR set to: 2
 40963                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 40964  019FA4  0060  F223  FFE6   	movff	calc_model_data@bcror,postinc1
 40965  019FAA  0060  F227  FFE6   	movff	calc_model_data@bcror+1,postinc1
 40966  019FB0  0060  F22B  FFE6   	movff	calc_model_data@bcror+2,postinc1
 40967  019FB6  0060  F22F  FFE6   	movff	calc_model_data@bcror+3,postinc1
 40968  019FBC  EE22  F3C5         	lfsr	2,_C+68	;volatile
 40969  019FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 40970  019FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 40971  019FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 40972  019FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 40973  019FD8  EC7A  F010         	call	___flsub	;wreg free
 40974  019FDC  0060  F0A8  FBF1   	movff	btemp,_C+112	;volatile
 40975  019FE2  0060  F0AC  FBF2   	movff	btemp+1,_C+113	;volatile
 40976  019FE8  0060  F0B0  FBF3   	movff	btemp+2,_C+114	;volatile
 40977  019FEE  0060  F0B4  FBF4   	movff	btemp+3,_C+115	;volatile
 40978                           
 40979                           ;mbmc.c: 76:   bcror = C.c_bat;
 40980  019FF4  CBC5  F088         	movff	_C+68,calc_model_data@bcror	;volatile
 40981  019FF8  CBC6  F089         	movff	_C+69,calc_model_data@bcror+1	;volatile
 40982  019FFC  CBC7  F08A         	movff	_C+70,calc_model_data@bcror+2	;volatile
 40983  01A000  CBC8  F08B         	movff	_C+71,calc_model_data@bcror+3	;volatile
 40984                           
 40985                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 40986  01A004  EE22  F385         	lfsr	2,_C+4	;volatile
 40987  01A008  006F FF78  FBC9    	movff	postinc2,_C+72	;volatile
 40988  01A00E  006F FF78  FBCA    	movff	postinc2,_C+73	;volatile
 40989  01A014  006F FF78  FBCB    	movff	postinc2,_C+74	;volatile
 40990  01A01A  006F FF74  FBCC    	movff	postdec2,_C+75	;volatile
 40991                           
 40992                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 40993  01A020  EE22  F391         	lfsr	2,_C+16	;volatile
 40994  01A024  006F FF78  FBD5    	movff	postinc2,_C+84	;volatile
 40995  01A02A  006F FF78  FBD6    	movff	postinc2,_C+85	;volatile
 40996  01A030  006F FF78  FBD7    	movff	postinc2,_C+86	;volatile
 40997  01A036  006F FF74  FBD8    	movff	postdec2,_C+87	;volatile
 40998                           
 40999                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 41000  01A03C  EE22  F3B5         	lfsr	2,_C+52	;volatile
 41001  01A040  006F FF78  FBE9    	movff	postinc2,_C+104	;volatile
 41002  01A046  006F FF78  FBEA    	movff	postinc2,_C+105	;volatile
 41003  01A04C  006F FF78  FBEB    	movff	postinc2,_C+106	;volatile
 41004  01A052  006F FF74  FBEC    	movff	postdec2,_C+107	;volatile
 41005                           
 41006                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 41007  01A058  0060  F233  FFE6   	movff	calc_model_data@bvror,postinc1
 41008  01A05E  0060  F237  FFE6   	movff	calc_model_data@bvror+1,postinc1
 41009  01A064  0060  F23B  FFE6   	movff	calc_model_data@bvror+2,postinc1
 41010  01A06A  0060  F23F  FFE6   	movff	calc_model_data@bvror+3,postinc1
 41011  01A070  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41012  01A074  006F FF7B FFE6     	movff	postinc2,postinc1
 41013  01A07A  006F FF7B FFE6     	movff	postinc2,postinc1
 41014  01A080  006F FF7B FFE6     	movff	postinc2,postinc1
 41015  01A086  006F FF7B FFE6     	movff	postinc2,postinc1
 41016  01A08C  EC7A  F010         	call	___flsub	;wreg free
 41017  01A090  0060  F0A8  FBED   	movff	btemp,_C+108	;volatile
 41018  01A096  0060  F0AC  FBEE   	movff	btemp+1,_C+109	;volatile
 41019  01A09C  0060  F0B0  FBEF   	movff	btemp+2,_C+110	;volatile
 41020  01A0A2  0060  F0B4  FBF0   	movff	btemp+3,_C+111	;volatile
 41021                           
 41022                           ;mbmc.c: 81:   bvror = C.v_bat;
 41023  01A0A8  CBD5  F08C         	movff	_C+84,calc_model_data@bvror	;volatile
 41024  01A0AC  CBD6  F08D         	movff	_C+85,calc_model_data@bvror+1	;volatile
 41025  01A0B0  CBD7  F08E         	movff	_C+86,calc_model_data@bvror+2	;volatile
 41026  01A0B4  CBD8  F08F         	movff	_C+87,calc_model_data@bvror+3	;volatile
 41027                           
 41028                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 41029  01A0B8  EE22  F395         	lfsr	2,_C+20	;volatile
 41030  01A0BC  006F FF78  FBD1    	movff	postinc2,_C+80	;volatile
 41031  01A0C2  006F FF78  FBD2    	movff	postinc2,_C+81	;volatile
 41032  01A0C8  006F FF78  FBD3    	movff	postinc2,_C+82	;volatile
 41033  01A0CE  006F FF74  FBD4    	movff	postdec2,_C+83	;volatile
 41034                           
 41035                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 41036  01A0D4  EE22  F389         	lfsr	2,_C+8	;volatile
 41037  01A0D8  006F FF78  FBCD    	movff	postinc2,_C+76	;volatile
 41038  01A0DE  006F FF78  FBCE    	movff	postinc2,_C+77	;volatile
 41039  01A0E4  006F FF78  FBCF    	movff	postinc2,_C+78	;volatile
 41040  01A0EA  006F FF74  FBD0    	movff	postdec2,_C+79	;volatile
 41041                           
 41042                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 41043  01A0F0  EE22  F3B1         	lfsr	2,_C+48	;volatile
 41044  01A0F4  006F FF78  FBE5    	movff	postinc2,_C+100	;volatile
 41045  01A0FA  006F FF78  FBE6    	movff	postinc2,_C+101	;volatile
 41046  01A100  006F FF78  FBE7    	movff	postinc2,_C+102	;volatile
 41047  01A106  006F FF74  FBE8    	movff	postdec2,_C+103	;volatile
 41048                           
 41049                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 41050  01A10C  0E01               	movlw	1
 41051  01A10E  6EE6               	movwf	postinc1,c
 41052  01A110  0E10               	movlw	16
 41053  01A112  6EE6               	movwf	postinc1,c
 41054  01A114  EE22  F381         	lfsr	2,_C
 41055  01A118  006F FF7B FFE6     	movff	postinc2,postinc1
 41056  01A11E  006F FF7B FFE6     	movff	postinc2,postinc1
 41057  01A124  006F FF7B FFE6     	movff	postinc2,postinc1
 41058  01A12A  006F FF7B FFE6     	movff	postinc2,postinc1
 41059  01A130  EE22  F385         	lfsr	2,_C+4	;volatile
 41060  01A134  006F FF7B FFE6     	movff	postinc2,postinc1
 41061  01A13A  006F FF7B FFE6     	movff	postinc2,postinc1
 41062  01A140  006F FF7B FFE6     	movff	postinc2,postinc1
 41063  01A146  006F FF7B FFE6     	movff	postinc2,postinc1
 41064  01A14C  EC7A  F010         	call	___flsub	;wreg free
 41065  01A150  0060  F0AB  FFE6   	movff	btemp,postinc1
 41066  01A156  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41067  01A15C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41068  01A162  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41069  01A168  EC82  F0EE         	call	_lp_filter	;wreg free
 41070  01A16C  0060  F0A8  FBC1   	movff	btemp,_C+64	;volatile
 41071  01A172  0060  F0AC  FBC2   	movff	btemp+1,_C+65	;volatile
 41072  01A178  0060  F0B0  FBC3   	movff	btemp+2,_C+66	;volatile
 41073  01A17E  0060  F0B4  FBC4   	movff	btemp+3,_C+67	;volatile
 41074                           
 41075                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 41076  01A184  0E01               	movlw	1
 41077  01A186  6EE6               	movwf	postinc1,c
 41078  01A188  0E11               	movlw	17
 41079  01A18A  6EE6               	movwf	postinc1,c
 41080  01A18C  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41081  01A190  006F FF7B FFE6     	movff	postinc2,postinc1
 41082  01A196  006F FF7B FFE6     	movff	postinc2,postinc1
 41083  01A19C  006F FF7B FFE6     	movff	postinc2,postinc1
 41084  01A1A2  006F FF7B FFE6     	movff	postinc2,postinc1
 41085  01A1A8  EE22  F3C1         	lfsr	2,_C+64	;volatile
 41086  01A1AC  006F FF7B FFE6     	movff	postinc2,postinc1
 41087  01A1B2  006F FF7B FFE6     	movff	postinc2,postinc1
 41088  01A1B8  006F FF7B FFE6     	movff	postinc2,postinc1
 41089  01A1BE  006F FF7B FFE6     	movff	postinc2,postinc1
 41090  01A1C4  EC32  F0B3         	call	___flmul	;wreg free
 41091  01A1C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 41092  01A1CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41093  01A1D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41094  01A1DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41095  01A1E0  EC82  F0EE         	call	_lp_filter	;wreg free
 41096  01A1E4  0060  F0A8  FBF5   	movff	btemp,_C+116	;volatile
 41097  01A1EA  0060  F0AC  FBF6   	movff	btemp+1,_C+117	;volatile
 41098  01A1F0  0060  F0B0  FBF7   	movff	btemp+2,_C+118	;volatile
 41099  01A1F6  0060  F0B4  FBF8   	movff	btemp+3,_C+119	;volatile
 41100                           
 41101                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 41102  01A1FC  0E01               	movlw	1
 41103  01A1FE  6EE6               	movwf	postinc1,c
 41104  01A200  0E12               	movlw	18
 41105  01A202  6EE6               	movwf	postinc1,c
 41106  01A204  EE22  F3D1         	lfsr	2,_C+80	;volatile
 41107  01A208  006F FF7B FFE6     	movff	postinc2,postinc1
 41108  01A20E  006F FF7B FFE6     	movff	postinc2,postinc1
 41109  01A214  006F FF7B FFE6     	movff	postinc2,postinc1
 41110  01A21A  006F FF7B FFE6     	movff	postinc2,postinc1
 41111  01A220  EE22  F3C9         	lfsr	2,_C+72	;volatile
 41112  01A224  006F FF7B FFE6     	movff	postinc2,postinc1
 41113  01A22A  006F FF7B FFE6     	movff	postinc2,postinc1
 41114  01A230  006F FF7B FFE6     	movff	postinc2,postinc1
 41115  01A236  006F FF7B FFE6     	movff	postinc2,postinc1
 41116  01A23C  EC32  F0B3         	call	___flmul	;wreg free
 41117  01A240  0060  F0AB  FFE6   	movff	btemp,postinc1
 41118  01A246  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41119  01A24C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41120  01A252  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41121  01A258  EC82  F0EE         	call	_lp_filter	;wreg free
 41122  01A25C  0060  F0A8  FBFD   	movff	btemp,_C+124	;volatile
 41123  01A262  0060  F0AC  FBFE   	movff	btemp+1,_C+125	;volatile
 41124  01A268  0060  F0B0  FBFF   	movff	btemp+2,_C+126	;volatile
 41125  01A26E  0060  F0B4  FC00   	movff	btemp+3,_C+127	;volatile
 41126                           
 41127                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 41128  01A274  0E01               	movlw	1
 41129  01A276  6EE6               	movwf	postinc1,c
 41130  01A278  0E13               	movlw	19
 41131  01A27A  6EE6               	movwf	postinc1,c
 41132  01A27C  0E00               	movlw	0
 41133  01A27E  6EE6               	movwf	postinc1,c
 41134  01A280  0E00               	movlw	0
 41135  01A282  6EE6               	movwf	postinc1,c
 41136  01A284  0E60               	movlw	96
 41137  01A286  6EE6               	movwf	postinc1,c
 41138  01A288  0EC1               	movlw	193
 41139  01A28A  6EE6               	movwf	postinc1,c
 41140  01A28C  EE22  F3E5         	lfsr	2,_C+100	;volatile
 41141  01A290  006F FF7B FFE6     	movff	postinc2,postinc1
 41142  01A296  006F FF7B FFE6     	movff	postinc2,postinc1
 41143  01A29C  006F FF7B FFE6     	movff	postinc2,postinc1
 41144  01A2A2  006F FF7B FFE6     	movff	postinc2,postinc1
 41145  01A2A8  EE22  F3C1         	lfsr	2,_C+64	;volatile
 41146  01A2AC  006F FF7B FFE6     	movff	postinc2,postinc1
 41147  01A2B2  006F FF7B FFE6     	movff	postinc2,postinc1
 41148  01A2B8  006F FF7B FFE6     	movff	postinc2,postinc1
 41149  01A2BE  006F FF7B FFE6     	movff	postinc2,postinc1
 41150  01A2C4  EC32  F0B3         	call	___flmul	;wreg free
 41151  01A2C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 41152  01A2CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41153  01A2D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41154  01A2DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41155  01A2E0  EC47  F0B7         	call	___fladd	;wreg free
 41156  01A2E4  0060  F0AB  FFE6   	movff	btemp,postinc1
 41157  01A2EA  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41158  01A2F0  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41159  01A2F6  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41160  01A2FC  EC82  F0EE         	call	_lp_filter	;wreg free
 41161  01A300  0060  F0A8  FBF9   	movff	btemp,_C+120	;volatile
 41162  01A306  0060  F0AC  FBFA   	movff	btemp+1,_C+121	;volatile
 41163  01A30C  0060  F0B0  FBFB   	movff	btemp+2,_C+122	;volatile
 41164  01A312  0060  F0B4  FBFC   	movff	btemp+3,_C+123	;volatile
 41165                           
 41166                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 41167  01A318  0E01               	movlw	1
 41168  01A31A  6EE6               	movwf	postinc1,c
 41169  01A31C  0E14               	movlw	20
 41170  01A31E  6EE6               	movwf	postinc1,c
 41171  01A320  EE22  F3D5         	lfsr	2,_C+84	;volatile
 41172  01A324  006F FF7B FFE6     	movff	postinc2,postinc1
 41173  01A32A  006F FF7B FFE6     	movff	postinc2,postinc1
 41174  01A330  006F FF7B FFE6     	movff	postinc2,postinc1
 41175  01A336  006F FF7B FFE6     	movff	postinc2,postinc1
 41176  01A33C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 41177  01A340  006F FF7B FFE6     	movff	postinc2,postinc1
 41178  01A346  006F FF7B FFE6     	movff	postinc2,postinc1
 41179  01A34C  006F FF7B FFE6     	movff	postinc2,postinc1
 41180  01A352  006F FF7B FFE6     	movff	postinc2,postinc1
 41181  01A358  EC32  F0B3         	call	___flmul	;wreg free
 41182  01A35C  0060  F0AB  FFE6   	movff	btemp,postinc1
 41183  01A362  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41184  01A368  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41185  01A36E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41186  01A374  EC82  F0EE         	call	_lp_filter	;wreg free
 41187  01A378  0060  F0A8  FC01   	movff	btemp,_C+128	;volatile
 41188  01A37E  0060  F0AC  FC02   	movff	btemp+1,_C+129	;volatile
 41189  01A384  0060  F0B0  FC03   	movff	btemp+2,_C+130	;volatile
 41190  01A38A  0060  F0B4  FC04   	movff	btemp+3,_C+131	;volatile
 41191                           
 41192                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 41193  01A390  EE22  F3F9         	lfsr	2,_C+120	;volatile
 41194  01A394  0E03               	movlw	3
 41195  01A396  AEDB               	btfss	plusw2,7,c
 41196  01A398  D010               	goto	l14436
 41197                           
 41198                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 41199  01A39A  0E17               	movlw	23
 41200  01A39C  006F FFA0  FBF9    	movff	wreg,_C+120	;volatile
 41201  01A3A2  0EB7               	movlw	183
 41202  01A3A4  006F FFA0  FBFA    	movff	wreg,_C+121	;volatile
 41203  01A3AA  0ED1               	movlw	209
 41204  01A3AC  006F FFA0  FBFB    	movff	wreg,_C+122	;volatile
 41205  01A3B2  0E38               	movlw	56
 41206  01A3B4  006F FFA0  FBFC    	movff	wreg,_C+123	;volatile
 41207  01A3BA                     l14436:
 41208                           
 41209                           ;mbmc.c: 96:  start_bsoc();
 41210  01A3BA  EC27  F015         	call	_start_bsoc	;wreg free
 41211                           
 41212                           ; BSR set to: 57
 41213                           ;mbmc.c: 97:  C.update = 1;
 41214  01A3BE  0E01               	movlw	1
 41215  01A3C0  006F FFA0  FC39    	movff	wreg,_C+184	;volatile
 41216                           
 41217                           ; BSR set to: 57
 41218                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 41219  01A3C6  0012               	return		;funcret
 41220  01A3C8                     __end_of_calc_model_data:
 41221                           	opt callstack 0
 41222                           
 41223 ;; *************** function _stop_bsoc *****************
 41224 ;; Defined at:
 41225 ;;		line 130 in file "bsoc.c"
 41226 ;; Parameters:    Size  Location     Type
 41227 ;;		None
 41228 ;; Auto vars:     Size  Location     Type
 41229 ;;		None
 41230 ;; Return value:  Size  Location     Type
 41231 ;;                  1  [STACK] void 
 41232 ;; Registers used:
 41233 ;;		None
 41234 ;; Tracked objects:
 41235 ;;		On entry : 0/1
 41236 ;;		On exit  : 3F/39
 41237 ;;		Unchanged: 0/0
 41238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41243 ;;Total ram usage:        0 bytes
 41244 ;; Hardware stack levels used:    1
 41245 ;; Hardware stack levels required when called:   15
 41246 ;; This function calls:
 41247 ;;		Nothing
 41248 ;; This function is called by:
 41249 ;;		_calc_model_data
 41250 ;;		_load_hist_data
 41251 ;; This function uses a reentrant model
 41252 ;;
 41253                           
 41254                           	psect	text149
 41255  002D64                     __ptext149:
 41256                           	opt callstack 0
 41257  002D64                     _stop_bsoc:
 41258                           	opt callstack 14
 41259                           
 41260                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 41261                           
 41262                           ; BSR set to: 57
 41263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41264                           ;incstack = 0
 41265  002D64  0139               	movlb	57	; () banked
 41266  002D66  9D96               	bcf	150,6,b	;volatile
 41267                           
 41268                           ; BSR set to: 57
 41269                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 41270  002D68  0012               	return		;funcret
 41271  002D6A                     __end_of_stop_bsoc:
 41272                           	opt callstack 0
 41273                           
 41274 ;; *************** function _start_bsoc *****************
 41275 ;; Defined at:
 41276 ;;		line 121 in file "bsoc.c"
 41277 ;; Parameters:    Size  Location     Type
 41278 ;;		None
 41279 ;; Auto vars:     Size  Location     Type
 41280 ;;		None
 41281 ;; Return value:  Size  Location     Type
 41282 ;;                  1  [STACK] void 
 41283 ;; Registers used:
 41284 ;;		wreg, status,2, status,0, btemp+11
 41285 ;; Tracked objects:
 41286 ;;		On entry : 0/39
 41287 ;;		On exit  : 3F/39
 41288 ;;		Unchanged: 0/0
 41289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41294 ;;Total ram usage:        0 bytes
 41295 ;; Hardware stack levels used:    1
 41296 ;; Hardware stack levels required when called:   15
 41297 ;; This function calls:
 41298 ;;		Nothing
 41299 ;; This function is called by:
 41300 ;;		_calc_model_data
 41301 ;;		_load_hist_data
 41302 ;; This function uses a reentrant model
 41303 ;;
 41304                           
 41305                           	psect	text150
 41306  002A4E                     __ptext150:
 41307                           	opt callstack 0
 41308  002A4E                     _start_bsoc:
 41309                           	opt callstack 14
 41310                           
 41311                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 41312                           
 41313                           ; BSR set to: 57
 41314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41315                           ;incstack = 0
 41316  002A4E  0139               	movlb	57	; () banked
 41317  002A50  8D96               	bsf	150,6,b	;volatile
 41318                           
 41319                           ; BSR set to: 57
 41320  002A52  A4BE               	btfss	190,2,c	;volatile
 41321  002A54  D002               	goto	u12780
 41322  002A56  0E01               	movlw	1
 41323  002A58  D001               	goto	u12786
 41324  002A5A                     u12780:
 41325  002A5A  0E00               	movlw	0
 41326  002A5C                     u12786:
 41327  002A5C  0AFF               	xorlw	255
 41328  002A5E  6E35               	movwf	(btemp+11)^0,c
 41329  002A60  4635               	rlncf	(btemp+11)^0,f,c
 41330  002A62  4635               	rlncf	(btemp+11)^0,f,c
 41331  002A64  50BE               	movf	190,w,c	;volatile
 41332  002A66  1835               	xorwf	(btemp+11)^0,w,c
 41333  002A68  0BFB               	andlw	-5
 41334  002A6A  1835               	xorwf	(btemp+11)^0,w,c
 41335  002A6C  6EBE               	movwf	190,c	;volatile
 41336                           
 41337                           ; BSR set to: 57
 41338                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 41339  002A6E  0012               	return		;funcret
 41340  002A70                     __end_of_start_bsoc:
 41341                           	opt callstack 0
 41342                           
 41343 ;; *************** function _lp_filter *****************
 41344 ;; Defined at:
 41345 ;;		line 29 in file "mbmc.c"
 41346 ;; Parameters:    Size  Location     Type
 41347 ;;  new             4  [STACK] const float 
 41348 ;;  bn              1  [STACK] const unsigned char 
 41349 ;;  slow            1  [STACK] const char 
 41350 ;; Auto vars:     Size  Location     Type
 41351 ;;  lp_speed        4  [STACK] float 
 41352 ;; Return value:  Size  Location     Type
 41353 ;;                  4  [STACK] float 
 41354 ;; Registers used:
 41355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41356 ;; Tracked objects:
 41357 ;;		On entry : 0/2
 41358 ;;		On exit  : 0/0
 41359 ;;		Unchanged: 0/0
 41360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41365 ;;Total ram usage:        0 bytes
 41366 ;; Hardware stack levels used:    1
 41367 ;; Hardware stack levels required when called:   17
 41368 ;; This function calls:
 41369 ;;		___fladd
 41370 ;;		___flmul
 41371 ;;		___flsub
 41372 ;; This function is called by:
 41373 ;;		_main
 41374 ;;		_convert_adc_data
 41375 ;;		_calc_model_data
 41376 ;; This function uses a reentrant model
 41377 ;;
 41378                           
 41379                           	psect	text151
 41380  01DD04                     __ptext151:
 41381                           	opt callstack 0
 41382  01DD04                     _lp_filter:
 41383                           	opt callstack 0
 41384                           
 41385                           ; BSR set to: 57
 41386                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41387  01DD04  52E6               	movf	postinc1,f,c
 41388  01DD06  52E6               	movf	postinc1,f,c
 41389  01DD08  52E6               	movf	postinc1,f,c
 41390  01DD0A  52E6               	movf	postinc1,f,c
 41391                           
 41392                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 41393                           ;stkvar	_bn @ sp[(-4)+-5]
 41394                           
 41395                           ;incstack = 0
 41396  01DD0C  0EF7               	movlw	-9
 41397  01DD0E  006F FF8C  F02A    	movff	plusw1,btemp
 41398  01DD14  0E14               	movlw	20
 41399  01DD16  642A               	cpfsgt	btemp^0,c
 41400  01DD18  D011               	goto	l13548
 41401  01DD1A                     u12610:
 41402                           
 41403                           ;mbmc.c: 35:   return new;
 41404                           ;stkvar	_new @ sp[(-4)+-4]
 41405  01DD1A  0EF8               	movlw	-8
 41406  01DD1C  006F FF8C  F02A    	movff	plusw1,btemp
 41407  01DD22  0EF9               	movlw	-7
 41408  01DD24  006F FF8C  F02B    	movff	plusw1,btemp+1
 41409  01DD2A  0EFA               	movlw	-6
 41410  01DD2C  006F FF8C  F02C    	movff	plusw1,btemp+2
 41411  01DD32  0EFB               	movlw	-5
 41412  01DD34  006F FF8C  F02D    	movff	plusw1,btemp+3
 41413  01DD3A  D0BD               	goto	l2141
 41414  01DD3C                     l13548:
 41415                           
 41416                           ;mbmc.c: 37:  if (slow == (-1)) {
 41417                           ;stkvar	_slow @ sp[(-4)+-6]
 41418  01DD3C  0EF6               	movlw	-10
 41419  01DD3E  28E3               	incf	plusw1,w,c
 41420  01DD40  A4D8               	btfss	status,2,c
 41421  01DD42  D012               	goto	l13556
 41422                           
 41423                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 41424                           ;stkvar	_bn @ sp[(-4)+-5]
 41425  01DD44  0EF7               	movlw	-9
 41426  01DD46  50E3               	movf	plusw1,w,c
 41427  01DD48  0D04               	mullw	4
 41428  01DD4A  0E00               	movlw	low lp_filter@smooth
 41429  01DD4C  24F3               	addwf	243,w,c
 41430  01DD4E  6ED9               	movwf	fsr2l,c
 41431  01DD50  0E03               	movlw	high lp_filter@smooth
 41432  01DD52  20F4               	addwfc	prodh,w,c
 41433  01DD54  6EDA               	movwf	fsr2h,c
 41434  01DD56  0E00               	movlw	0
 41435  01DD58  6EDE               	movwf	postinc2,c
 41436  01DD5A  0E00               	movlw	0
 41437  01DD5C  6EDE               	movwf	postinc2,c
 41438  01DD5E  0E00               	movlw	0
 41439  01DD60  6EDE               	movwf	postinc2,c
 41440  01DD62  0E00               	movlw	0
 41441  01DD64  6EDD               	movwf	postdec2,c
 41442  01DD66  D7D9               	goto	u12610
 41443  01DD68                     l13556:
 41444                           
 41445                           ;mbmc.c: 42:  if (slow) {
 41446                           ;stkvar	_slow @ sp[(-4)+-6]
 41447  01DD68  0EF6               	movlw	-10
 41448  01DD6A  50E3               	movf	plusw1,w,c
 41449  01DD6C  B4D8               	btfsc	status,2,c
 41450  01DD6E  D006               	goto	l13560
 41451                           
 41452                           ;mbmc.c: 43:   lp_speed = 0.06;
 41453  01DD70  0E8F               	movlw	143
 41454  01DD72  6E32               	movwf	(btemp+8)^0,c
 41455  01DD74  0EC2               	movlw	194
 41456  01DD76  6E33               	movwf	(btemp+9)^0,c
 41457  01DD78  0E75               	movlw	117
 41458  01DD7A  D005               	goto	L46
 41459  01DD7C                     l13560:
 41460                           
 41461                           ;mbmc.c: 45:   lp_speed = 0.1;
 41462  01DD7C  0ECD               	movlw	205
 41463  01DD7E  6E32               	movwf	(btemp+8)^0,c
 41464  01DD80  0ECC               	movlw	204
 41465  01DD82  6E33               	movwf	(btemp+9)^0,c
 41466  01DD84  0ECC               	movlw	204
 41467  01DD86                     L46:
 41468  01DD86  6E34               	movwf	(btemp+10)^0,c
 41469  01DD88  0E3D               	movlw	61
 41470  01DD8A  6E35               	movwf	(btemp+11)^0,c
 41471                           
 41472                           ;stkvar	_lp_speed @ sp[(-4)+0]
 41473  01DD8C  0EFC               	movlw	-4
 41474  01DD8E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41475  01DD94  0EFD               	movlw	-3
 41476  01DD96  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41477  01DD9C  0EFE               	movlw	-2
 41478  01DD9E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41479  01DDA4  0EFF               	movlw	-1
 41480  01DDA6  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41481                           
 41482                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 41483                           ;stkvar	_bn @ sp[(-4)+-5]
 41484  01DDAC  0EF7               	movlw	-9
 41485  01DDAE  50E3               	movf	plusw1,w,c
 41486  01DDB0  0D04               	mullw	4
 41487  01DDB2  0E00               	movlw	low lp_filter@smooth
 41488  01DDB4  24F3               	addwf	243,w,c
 41489  01DDB6  6ED9               	movwf	fsr2l,c
 41490  01DDB8  0E03               	movlw	high lp_filter@smooth
 41491  01DDBA  20F4               	addwfc	prodh,w,c
 41492  01DDBC  6EDA               	movwf	fsr2h,c
 41493  01DDBE  006F FF7B FFE6     	movff	postinc2,postinc1
 41494  01DDC4  006F FF7B FFE6     	movff	postinc2,postinc1
 41495  01DDCA  006F FF7B FFE6     	movff	postinc2,postinc1
 41496  01DDD0  006F FF7B FFE6     	movff	postinc2,postinc1
 41497                           
 41498                           ;stkvar	_lp_speed @ sp[(-8)+0]
 41499  01DDD6  0EF8               	movlw	-8
 41500  01DDD8  006F FF8F FFE6     	movff	plusw1,postinc1
 41501  01DDDE  006F FF8F FFE6     	movff	plusw1,postinc1
 41502  01DDE4  006F FF8F FFE6     	movff	plusw1,postinc1
 41503  01DDEA  006F FF8F FFE6     	movff	plusw1,postinc1
 41504                           
 41505                           ;stkvar	_bn @ sp[(-12)+-5]
 41506  01DDF0  0EEF               	movlw	-17
 41507  01DDF2  50E3               	movf	plusw1,w,c
 41508  01DDF4  0D04               	mullw	4
 41509  01DDF6  0E00               	movlw	low lp_filter@smooth
 41510  01DDF8  24F3               	addwf	243,w,c
 41511  01DDFA  6ED9               	movwf	fsr2l,c
 41512  01DDFC  0E03               	movlw	high lp_filter@smooth
 41513  01DDFE  20F4               	addwfc	prodh,w,c
 41514  01DE00  6EDA               	movwf	fsr2h,c
 41515  01DE02  006F FF7B FFE6     	movff	postinc2,postinc1
 41516  01DE08  006F FF7B FFE6     	movff	postinc2,postinc1
 41517  01DE0E  006F FF7B FFE6     	movff	postinc2,postinc1
 41518  01DE14  006F FF7B FFE6     	movff	postinc2,postinc1
 41519                           
 41520                           ;stkvar	_new @ sp[(-16)+-4]
 41521  01DE1A  0EEC               	movlw	-20
 41522  01DE1C  006F FF8F FFE6     	movff	plusw1,postinc1
 41523  01DE22  006F FF8F FFE6     	movff	plusw1,postinc1
 41524  01DE28  006F FF8F FFE6     	movff	plusw1,postinc1
 41525  01DE2E  006F FF8F FFE6     	movff	plusw1,postinc1
 41526  01DE34  EC7A  F010         	call	___flsub	;wreg free
 41527  01DE38  0060  F0AB  FFE6   	movff	btemp,postinc1
 41528  01DE3E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41529  01DE44  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41530  01DE4A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41531  01DE50  EC32  F0B3         	call	___flmul	;wreg free
 41532  01DE54  0060  F0AB  FFE6   	movff	btemp,postinc1
 41533  01DE5A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 41534  01DE60  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 41535  01DE66  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 41536  01DE6C  EC47  F0B7         	call	___fladd	;wreg free
 41537                           
 41538                           ;stkvar	_bn @ sp[(-4)+-5]
 41539  01DE70  0EF7               	movlw	-9
 41540  01DE72  50E3               	movf	plusw1,w,c
 41541  01DE74  0D04               	mullw	4
 41542  01DE76  0E00               	movlw	low lp_filter@smooth
 41543  01DE78  24F3               	addwf	243,w,c
 41544  01DE7A  6ED9               	movwf	fsr2l,c
 41545  01DE7C  0E03               	movlw	high lp_filter@smooth
 41546  01DE7E  20F4               	addwfc	prodh,w,c
 41547  01DE80  6EDA               	movwf	fsr2h,c
 41548  01DE82  0060  F0AB  FFDE   	movff	btemp,postinc2
 41549  01DE88  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 41550  01DE8E  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 41551  01DE94  0060  F0B7  FFDD   	movff	btemp+3,postdec2
 41552  01DE9A  52DD               	movf	postdec2,f,c
 41553  01DE9C  52DD               	movf	postdec2,f,c
 41554  01DE9E  006F FF78  F02A    	movff	postinc2,btemp
 41555  01DEA4  006F FF78  F02B    	movff	postinc2,btemp+1
 41556  01DEAA  006F FF78  F02C    	movff	postinc2,btemp+2
 41557  01DEB0  006F FF78  F02D    	movff	postinc2,btemp+3
 41558  01DEB6                     l2141:
 41559                           
 41560                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 41561  01DEB6  0EF6               	movlw	246
 41562  01DEB8  26E1               	addwf	fsr1l,f,c
 41563  01DEBA  0EFF               	movlw	255
 41564  01DEBC  22E2               	addwfc	fsr1h,f,c
 41565  01DEBE  0012               	return		;funcret
 41566  01DEC0                     __end_of_lp_filter:
 41567                           	opt callstack 0
 41568                           
 41569 ;; *************** function ___flsub *****************
 41570 ;; Defined at:
 41571 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41572 ;; Parameters:    Size  Location     Type
 41573 ;;  b               4  [STACK] float 
 41574 ;;  a               4  [STACK] float 
 41575 ;; Auto vars:     Size  Location     Type
 41576 ;;		None
 41577 ;; Return value:  Size  Location     Type
 41578 ;;                  4  [STACK] float 
 41579 ;; Registers used:
 41580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41581 ;; Tracked objects:
 41582 ;;		On entry : 0/0
 41583 ;;		On exit  : 0/0
 41584 ;;		Unchanged: 0/0
 41585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41590 ;;Total ram usage:        0 bytes
 41591 ;; Hardware stack levels used:    1
 41592 ;; Hardware stack levels required when called:   16
 41593 ;; This function calls:
 41594 ;;		___fladd
 41595 ;; This function is called by:
 41596 ;;		_conv_raw_result
 41597 ;;		_lp_filter
 41598 ;;		_calc_model_data
 41599 ;;		_calc_ror_data
 41600 ;;		_esr_check
 41601 ;;		_efgtoa
 41602 ;; This function uses a reentrant model
 41603 ;;
 41604                           
 41605                           	psect	text152
 41606  0020F4                     __ptext152:
 41607                           	opt callstack 0
 41608  0020F4                     ___flsub:
 41609                           	opt callstack 0
 41610                           
 41611                           ;stkvar	_a @ sp[(0)+-8]
 41612                           
 41613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41614                           ;incstack = 0
 41615 ;; hardware stack exceeded
 41616  0020F4  0EFB               	movlw	-5
 41617  0020F6  7EE3               	btg	plusw1,7,c
 41618                           
 41619                           ;stkvar	_a @ sp[(0)+-8]
 41620  0020F8  0EF8               	movlw	-8
 41621  0020FA  006F FF8F FFE6     	movff	plusw1,postinc1
 41622  002100  006F FF8F FFE6     	movff	plusw1,postinc1
 41623  002106  006F FF8F FFE6     	movff	plusw1,postinc1
 41624  00210C  006F FF8F FFE6     	movff	plusw1,postinc1
 41625                           
 41626                           ;stkvar	_b @ sp[(-4)+-4]
 41627  002112  0EF8               	movlw	-8
 41628  002114  006F FF8F FFE6     	movff	plusw1,postinc1
 41629  00211A  006F FF8F FFE6     	movff	plusw1,postinc1
 41630  002120  006F FF8F FFE6     	movff	plusw1,postinc1
 41631  002126  006F FF8F FFE6     	movff	plusw1,postinc1
 41632  00212C  EC47  F0B7         	call	___fladd	;wreg free
 41633                           
 41634                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41635  002130  0EF8               	movlw	248
 41636  002132  26E1               	addwf	fsr1l,f,c
 41637  002134  0EFF               	movlw	255
 41638  002136  22E2               	addwfc	fsr1h,f,c
 41639  002138  0012               	return		;funcret
 41640  00213A                     __end_of___flsub:
 41641                           	opt callstack 0
 41642                           
 41643 ;; *************** function ___fladd *****************
 41644 ;; Defined at:
 41645 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 41646 ;; Parameters:    Size  Location     Type
 41647 ;;  b               4  [STACK] float 
 41648 ;;  a               4  [STACK] float 
 41649 ;; Auto vars:     Size  Location     Type
 41650 ;;  grs             1  [STACK] unsigned char 
 41651 ;;  bexp            1  [STACK] unsigned char 
 41652 ;;  aexp            1  [STACK] unsigned char 
 41653 ;;  signs           1  [STACK] unsigned char 
 41654 ;; Return value:  Size  Location     Type
 41655 ;;                  4  [STACK] unsigned char 
 41656 ;; Registers used:
 41657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 41658 ;; Tracked objects:
 41659 ;;		On entry : 0/0
 41660 ;;		On exit  : 0/0
 41661 ;;		Unchanged: 0/0
 41662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41667 ;;Total ram usage:        0 bytes
 41668 ;; Hardware stack levels used:    1
 41669 ;; Hardware stack levels required when called:   15
 41670 ;; This function calls:
 41671 ;;		Nothing
 41672 ;; This function is called by:
 41673 ;;		_main
 41674 ;;		_lp_filter
 41675 ;;		_calc_model_data
 41676 ;;		_load_hist_data
 41677 ;;		_efgtoa
 41678 ;;		___asfladd
 41679 ;;		___flsub
 41680 ;; This function uses a reentrant model
 41681 ;;
 41682                           
 41683                           	psect	text153
 41684  016E8E                     __ptext153:
 41685                           	opt callstack 0
 41686  016E8E                     ___fladd:
 41687                           	opt callstack 0
 41688                           
 41689                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 41690  016E8E  52E6               	movf	postinc1,f,c
 41691  016E90  52E6               	movf	postinc1,f,c
 41692  016E92  52E6               	movf	postinc1,f,c
 41693  016E94  52E6               	movf	postinc1,f,c
 41694                           
 41695                           ;stkvar	_b @ sp[(-4)+-4]
 41696                           
 41697                           ;incstack = 0
 41698 ;; hardware stack exceeded
 41699  016E96  0EFB               	movlw	251
 41700  016E98  24E1               	addwf	fsr1l,w,c
 41701  016E9A  6ED9               	movwf	fsr2l,c
 41702  016E9C  0EFF               	movlw	255
 41703  016E9E  20E2               	addwfc	fsr1h,w,c
 41704  016EA0  6EDA               	movwf	fsr2h,c
 41705  016EA2  50DF               	movf	indf2,w,c
 41706  016EA4  6E35               	movwf	(btemp+11)^0,c
 41707  016EA6  0E80               	movlw	128
 41708  016EA8  1635               	andwf	(btemp+11)^0,f,c
 41709                           
 41710                           ;stkvar	_signs @ sp[(-4)+3]
 41711  016EAA  0EFF               	movlw	-1
 41712  016EAC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41713                           
 41714                           ;stkvar	_b @ sp[(-4)+-4]
 41715  016EB2  0EFB               	movlw	251
 41716  016EB4  24E1               	addwf	fsr1l,w,c
 41717  016EB6  6ED9               	movwf	fsr2l,c
 41718  016EB8  0EFF               	movlw	255
 41719  016EBA  20E2               	addwfc	fsr1h,w,c
 41720  016EBC  6EDA               	movwf	fsr2h,c
 41721  016EBE  50DF               	movf	indf2,w,c
 41722  016EC0  6E35               	movwf	(btemp+11)^0,c
 41723  016EC2  90D8               	bcf	status,0,c
 41724  016EC4  3435               	rlcf	(btemp+11)^0,w,c
 41725  016EC6  6E34               	movwf	(btemp+10)^0,c
 41726                           
 41727                           ;stkvar	_bexp @ sp[(-4)+1]
 41728  016EC8  0EFD               	movlw	-3
 41729  016ECA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41730                           
 41731                           ;stkvar	_b @ sp[(-4)+-4]
 41732  016ED0  0EFA               	movlw	250
 41733  016ED2  24E1               	addwf	fsr1l,w,c
 41734  016ED4  6ED9               	movwf	fsr2l,c
 41735  016ED6  0EFF               	movlw	255
 41736  016ED8  20E2               	addwfc	fsr1h,w,c
 41737  016EDA  6EDA               	movwf	fsr2h,c
 41738  016EDC  AEDF               	btfss	indf2,7,c
 41739  016EDE  D002               	goto	l9812
 41740                           
 41741                           ;stkvar	_bexp @ sp[(-4)+1]
 41742  016EE0  0EFD               	movlw	-3
 41743  016EE2  80E3               	bsf	plusw1,0,c
 41744  016EE4                     l9812:
 41745                           
 41746                           ;stkvar	_bexp @ sp[(-4)+1]
 41747  016EE4  0EFD               	movlw	-3
 41748  016EE6  50E3               	movf	plusw1,w,c
 41749  016EE8  B4D8               	btfsc	status,2,c
 41750  016EEA  D027               	goto	l9822
 41751                           
 41752                           ;stkvar	_bexp @ sp[(-4)+1]
 41753  016EEC  0EFD               	movlw	-3
 41754  016EEE  28E3               	incf	plusw1,w,c
 41755  016EF0  A4D8               	btfss	status,2,c
 41756  016EF2  D018               	goto	l9818
 41757  016EF4  0E00               	movlw	0
 41758  016EF6  6E32               	movwf	(btemp+8)^0,c
 41759  016EF8  0E00               	movlw	0
 41760  016EFA  6E33               	movwf	(btemp+9)^0,c
 41761  016EFC  0E00               	movlw	0
 41762  016EFE  6E34               	movwf	(btemp+10)^0,c
 41763  016F00  0E00               	movlw	0
 41764  016F02  6E35               	movwf	(btemp+11)^0,c
 41765                           
 41766                           ;stkvar	_b @ sp[(-4)+-4]
 41767  016F04  0EF8               	movlw	-8
 41768  016F06  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41769  016F0C  0EF9               	movlw	-7
 41770  016F0E  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41771  016F14  0EFA               	movlw	-6
 41772  016F16  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41773  016F1C  0EFB               	movlw	-5
 41774  016F1E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41775  016F24                     l9818:
 41776                           
 41777                           ;stkvar	_b @ sp[(-4)+-4]
 41778  016F24  0EFA               	movlw	-6
 41779  016F26  8EE3               	bsf	plusw1,7,c
 41780                           
 41781                           ;stkvar	_b @ sp[(-4)+-4]
 41782  016F28  0EFB               	movlw	251
 41783  016F2A  24E1               	addwf	fsr1l,w,c
 41784  016F2C  6ED9               	movwf	fsr2l,c
 41785  016F2E  0EFF               	movlw	255
 41786  016F30  20E2               	addwfc	fsr1h,w,c
 41787  016F32  6EDA               	movwf	fsr2h,c
 41788  016F34  0E00               	movlw	0
 41789  016F36  6EDF               	movwf	indf2,c
 41790  016F38  D018               	goto	l9824
 41791  016F3A                     l9822:
 41792  016F3A  0E00               	movlw	0
 41793  016F3C  6E32               	movwf	(btemp+8)^0,c
 41794  016F3E  0E00               	movlw	0
 41795  016F40  6E33               	movwf	(btemp+9)^0,c
 41796  016F42  0E00               	movlw	0
 41797  016F44  6E34               	movwf	(btemp+10)^0,c
 41798  016F46  0E00               	movlw	0
 41799  016F48  6E35               	movwf	(btemp+11)^0,c
 41800                           
 41801                           ;stkvar	_b @ sp[(-4)+-4]
 41802  016F4A  0EF8               	movlw	-8
 41803  016F4C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41804  016F52  0EF9               	movlw	-7
 41805  016F54  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41806  016F5A  0EFA               	movlw	-6
 41807  016F5C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41808  016F62  0EFB               	movlw	-5
 41809  016F64  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41810  016F6A                     l9824:
 41811                           
 41812                           ;stkvar	_a @ sp[(-4)+-8]
 41813  016F6A  0EF7               	movlw	247
 41814  016F6C  24E1               	addwf	fsr1l,w,c
 41815  016F6E  6ED9               	movwf	fsr2l,c
 41816  016F70  0EFF               	movlw	255
 41817  016F72  20E2               	addwfc	fsr1h,w,c
 41818  016F74  6EDA               	movwf	fsr2h,c
 41819  016F76  50DF               	movf	indf2,w,c
 41820  016F78  6E35               	movwf	(btemp+11)^0,c
 41821  016F7A  0E80               	movlw	128
 41822  016F7C  1635               	andwf	(btemp+11)^0,f,c
 41823                           
 41824                           ;stkvar	_aexp @ sp[(-4)+2]
 41825  016F7E  0EFE               	movlw	-2
 41826  016F80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41827                           
 41828                           ;stkvar	_signs @ sp[(-4)+3]
 41829                           ;stkvar	_aexp @ sp[(-4)+2]
 41830  016F86  50E1               	movf	fsr1l,w,c
 41831  016F88  0FFE               	addlw	-2
 41832  016F8A  6ED9               	movwf	fsr2l,c
 41833  016F8C  50E2               	movf	fsr1h,w,c
 41834  016F8E  6EDA               	movwf	fsr2h,c
 41835  016F90  0EFF               	movlw	255
 41836  016F92  22DA               	addwfc	fsr2h,f,c
 41837  016F94  0EFF               	movlw	-1
 41838  016F96  50E3               	movf	plusw1,w,c
 41839  016F98  18DE               	xorwf	postinc2,w,c
 41840  016F9A  B4D8               	btfsc	status,2,c
 41841  016F9C  D002               	goto	l9830
 41842                           
 41843                           ;stkvar	_signs @ sp[(-4)+3]
 41844  016F9E  0EFF               	movlw	-1
 41845  016FA0  8CE3               	bsf	plusw1,6,c
 41846  016FA2                     l9830:
 41847                           
 41848                           ;stkvar	_a @ sp[(-4)+-8]
 41849  016FA2  0EF7               	movlw	247
 41850  016FA4  24E1               	addwf	fsr1l,w,c
 41851  016FA6  6ED9               	movwf	fsr2l,c
 41852  016FA8  0EFF               	movlw	255
 41853  016FAA  20E2               	addwfc	fsr1h,w,c
 41854  016FAC  6EDA               	movwf	fsr2h,c
 41855  016FAE  50DF               	movf	indf2,w,c
 41856  016FB0  6E35               	movwf	(btemp+11)^0,c
 41857  016FB2  90D8               	bcf	status,0,c
 41858  016FB4  3435               	rlcf	(btemp+11)^0,w,c
 41859  016FB6  6E34               	movwf	(btemp+10)^0,c
 41860                           
 41861                           ;stkvar	_aexp @ sp[(-4)+2]
 41862  016FB8  0EFE               	movlw	-2
 41863  016FBA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41864                           
 41865                           ;stkvar	_a @ sp[(-4)+-8]
 41866  016FC0  0EF6               	movlw	246
 41867  016FC2  24E1               	addwf	fsr1l,w,c
 41868  016FC4  6ED9               	movwf	fsr2l,c
 41869  016FC6  0EFF               	movlw	255
 41870  016FC8  20E2               	addwfc	fsr1h,w,c
 41871  016FCA  6EDA               	movwf	fsr2h,c
 41872  016FCC  AEDF               	btfss	indf2,7,c
 41873  016FCE  D002               	goto	l9836
 41874                           
 41875                           ;stkvar	_aexp @ sp[(-4)+2]
 41876  016FD0  0EFE               	movlw	-2
 41877  016FD2  80E3               	bsf	plusw1,0,c
 41878  016FD4                     l9836:
 41879                           
 41880                           ;stkvar	_aexp @ sp[(-4)+2]
 41881  016FD4  0EFE               	movlw	-2
 41882  016FD6  50E3               	movf	plusw1,w,c
 41883  016FD8  B4D8               	btfsc	status,2,c
 41884  016FDA  D027               	goto	l9846
 41885                           
 41886                           ;stkvar	_aexp @ sp[(-4)+2]
 41887  016FDC  0EFE               	movlw	-2
 41888  016FDE  28E3               	incf	plusw1,w,c
 41889  016FE0  A4D8               	btfss	status,2,c
 41890  016FE2  D018               	goto	l9842
 41891  016FE4  0E00               	movlw	0
 41892  016FE6  6E32               	movwf	(btemp+8)^0,c
 41893  016FE8  0E00               	movlw	0
 41894  016FEA  6E33               	movwf	(btemp+9)^0,c
 41895  016FEC  0E00               	movlw	0
 41896  016FEE  6E34               	movwf	(btemp+10)^0,c
 41897  016FF0  0E00               	movlw	0
 41898  016FF2  6E35               	movwf	(btemp+11)^0,c
 41899                           
 41900                           ;stkvar	_a @ sp[(-4)+-8]
 41901  016FF4  0EF4               	movlw	-12
 41902  016FF6  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41903  016FFC  0EF5               	movlw	-11
 41904  016FFE  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41905  017004  0EF6               	movlw	-10
 41906  017006  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41907  01700C  0EF7               	movlw	-9
 41908  01700E  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41909  017014                     l9842:
 41910                           
 41911                           ;stkvar	_a @ sp[(-4)+-8]
 41912  017014  0EF6               	movlw	-10
 41913  017016  8EE3               	bsf	plusw1,7,c
 41914                           
 41915                           ;stkvar	_a @ sp[(-4)+-8]
 41916  017018  0EF7               	movlw	247
 41917  01701A  24E1               	addwf	fsr1l,w,c
 41918  01701C  6ED9               	movwf	fsr2l,c
 41919  01701E  0EFF               	movlw	255
 41920  017020  20E2               	addwfc	fsr1h,w,c
 41921  017022  6EDA               	movwf	fsr2h,c
 41922  017024  0E00               	movlw	0
 41923  017026  6EDF               	movwf	indf2,c
 41924  017028  D018               	goto	l9848
 41925  01702A                     l9846:
 41926  01702A  0E00               	movlw	0
 41927  01702C  6E32               	movwf	(btemp+8)^0,c
 41928  01702E  0E00               	movlw	0
 41929  017030  6E33               	movwf	(btemp+9)^0,c
 41930  017032  0E00               	movlw	0
 41931  017034  6E34               	movwf	(btemp+10)^0,c
 41932  017036  0E00               	movlw	0
 41933  017038  6E35               	movwf	(btemp+11)^0,c
 41934                           
 41935                           ;stkvar	_a @ sp[(-4)+-8]
 41936  01703A  0EF4               	movlw	-12
 41937  01703C  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 41938  017042  0EF5               	movlw	-11
 41939  017044  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 41940  01704A  0EF6               	movlw	-10
 41941  01704C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 41942  017052  0EF7               	movlw	-9
 41943  017054  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 41944  01705A                     l9848:
 41945                           
 41946                           ;stkvar	_bexp @ sp[(-4)+1]
 41947                           ;stkvar	_aexp @ sp[(-4)+2]
 41948  01705A  50E1               	movf	fsr1l,w,c
 41949  01705C  0FFE               	addlw	-2
 41950  01705E  6ED9               	movwf	fsr2l,c
 41951  017060  50E2               	movf	fsr1h,w,c
 41952  017062  6EDA               	movwf	fsr2h,c
 41953  017064  0EFF               	movlw	255
 41954  017066  22DA               	addwfc	fsr2h,f,c
 41955  017068  0EFD               	movlw	-3
 41956  01706A  50E3               	movf	plusw1,w,c
 41957  01706C  5CDE               	subwf	postinc2,w,c
 41958  01706E  B0D8               	btfsc	status,0,c
 41959  017070  D0A4               	goto	l9884
 41960                           
 41961                           ;stkvar	_signs @ sp[(-4)+3]
 41962  017072  0EFF               	movlw	-1
 41963  017074  ACE3               	btfss	plusw1,6,c
 41964  017076  D002               	goto	l9854
 41965                           
 41966                           ;stkvar	_signs @ sp[(-4)+3]
 41967  017078  0EFF               	movlw	-1
 41968  01707A  7EE3               	btg	plusw1,7,c
 41969  01707C                     l9854:
 41970                           
 41971                           ;stkvar	_bexp @ sp[(-4)+1]
 41972                           ;stkvar	_grs @ sp[(-4)+0]
 41973  01707C  0EFD               	movlw	-3
 41974  01707E  006F FF8C  F02A    	movff	plusw1,btemp
 41975  017084  0EFC               	movlw	-4
 41976  017086  0060  F0AB  FFE3   	movff	btemp,plusw1
 41977                           
 41978                           ;stkvar	_aexp @ sp[(-4)+2]
 41979                           ;stkvar	_bexp @ sp[(-4)+1]
 41980  01708C  0EFE               	movlw	-2
 41981  01708E  006F FF8C  F02A    	movff	plusw1,btemp
 41982  017094  0EFD               	movlw	-3
 41983  017096  0060  F0AB  FFE3   	movff	btemp,plusw1
 41984                           
 41985                           ;stkvar	_grs @ sp[(-4)+0]
 41986                           ;stkvar	_aexp @ sp[(-4)+2]
 41987  01709C  0EFC               	movlw	-4
 41988  01709E  006F FF8C  F02A    	movff	plusw1,btemp
 41989  0170A4  0EFE               	movlw	-2
 41990  0170A6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41991                           
 41992                           ;stkvar	_b @ sp[(-4)+-4]
 41993                           ;stkvar	_grs @ sp[(-4)+0]
 41994  0170AC  0EF8               	movlw	-8
 41995  0170AE  006F FF8C  F02A    	movff	plusw1,btemp
 41996  0170B4  0EFC               	movlw	-4
 41997  0170B6  0060  F0AB  FFE3   	movff	btemp,plusw1
 41998                           
 41999                           ;stkvar	_a @ sp[(-4)+-8]
 42000                           ;stkvar	_b @ sp[(-4)+-4]
 42001  0170BC  0EF4               	movlw	-12
 42002  0170BE  006F FF8C  F02A    	movff	plusw1,btemp
 42003  0170C4  0EF8               	movlw	-8
 42004  0170C6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42005                           
 42006                           ;stkvar	_grs @ sp[(-4)+0]
 42007                           ;stkvar	_a @ sp[(-4)+-8]
 42008  0170CC  0EFC               	movlw	-4
 42009  0170CE  006F FF8C  F02A    	movff	plusw1,btemp
 42010  0170D4  0EF4               	movlw	-12
 42011  0170D6  0060  F0AB  FFE3   	movff	btemp,plusw1
 42012                           
 42013                           ;stkvar	_b @ sp[(-4)+-4]
 42014  0170DC  0EF9               	movlw	249
 42015  0170DE  24E1               	addwf	fsr1l,w,c
 42016  0170E0  6ED9               	movwf	fsr2l,c
 42017  0170E2  0EFF               	movlw	255
 42018  0170E4  20E2               	addwfc	fsr1h,w,c
 42019  0170E6  6EDA               	movwf	fsr2h,c
 42020  0170E8  50DF               	movf	indf2,w,c
 42021  0170EA  6E35               	movwf	(btemp+11)^0,c
 42022                           
 42023                           ;stkvar	_grs @ sp[(-4)+0]
 42024  0170EC  0EFC               	movlw	-4
 42025  0170EE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42026                           
 42027                           ;stkvar	_a @ sp[(-4)+-8]
 42028  0170F4  0EF5               	movlw	245
 42029  0170F6  24E1               	addwf	fsr1l,w,c
 42030  0170F8  6ED9               	movwf	fsr2l,c
 42031  0170FA  0EFF               	movlw	255
 42032  0170FC  20E2               	addwfc	fsr1h,w,c
 42033  0170FE  6EDA               	movwf	fsr2h,c
 42034                           
 42035                           ;stkvar	_b @ sp[(-4)+-4]
 42036  017100  0EF9               	movlw	249
 42037  017102  24E1               	addwf	fsr1l,w,c
 42038  017104  6EE9               	movwf	fsr0l,c
 42039  017106  0EFF               	movlw	255
 42040  017108  20E2               	addwfc	fsr1h,w,c
 42041  01710A  6EEA               	movwf	fsr0h,c
 42042  01710C  006F FF7F FFEF     	movff	indf2,indf0
 42043                           
 42044                           ;stkvar	_grs @ sp[(-4)+0]
 42045                           ;stkvar	_a @ sp[(-4)+-8]
 42046  017112  0EF5               	movlw	245
 42047  017114  24E1               	addwf	fsr1l,w,c
 42048  017116  6ED9               	movwf	fsr2l,c
 42049  017118  0EFF               	movlw	255
 42050  01711A  20E2               	addwfc	fsr1h,w,c
 42051  01711C  6EDA               	movwf	fsr2h,c
 42052  01711E  0EFC               	movlw	-4
 42053  017120  006F FF8F FFDF     	movff	plusw1,indf2
 42054                           
 42055                           ;stkvar	_b @ sp[(-4)+-4]
 42056  017126  0EFA               	movlw	250
 42057  017128  24E1               	addwf	fsr1l,w,c
 42058  01712A  6ED9               	movwf	fsr2l,c
 42059  01712C  0EFF               	movlw	255
 42060  01712E  20E2               	addwfc	fsr1h,w,c
 42061  017130  6EDA               	movwf	fsr2h,c
 42062  017132  50DF               	movf	indf2,w,c
 42063  017134  6E35               	movwf	(btemp+11)^0,c
 42064                           
 42065                           ;stkvar	_grs @ sp[(-4)+0]
 42066  017136  0EFC               	movlw	-4
 42067  017138  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42068                           
 42069                           ;stkvar	_a @ sp[(-4)+-8]
 42070  01713E  0EF6               	movlw	246
 42071  017140  24E1               	addwf	fsr1l,w,c
 42072  017142  6ED9               	movwf	fsr2l,c
 42073  017144  0EFF               	movlw	255
 42074  017146  20E2               	addwfc	fsr1h,w,c
 42075  017148  6EDA               	movwf	fsr2h,c
 42076                           
 42077                           ;stkvar	_b @ sp[(-4)+-4]
 42078  01714A  0EFA               	movlw	250
 42079  01714C  24E1               	addwf	fsr1l,w,c
 42080  01714E  6EE9               	movwf	fsr0l,c
 42081  017150  0EFF               	movlw	255
 42082  017152  20E2               	addwfc	fsr1h,w,c
 42083  017154  6EEA               	movwf	fsr0h,c
 42084  017156  006F FF7F FFEF     	movff	indf2,indf0
 42085                           
 42086                           ;stkvar	_grs @ sp[(-4)+0]
 42087                           ;stkvar	_a @ sp[(-4)+-8]
 42088  01715C  0EF6               	movlw	246
 42089  01715E  24E1               	addwf	fsr1l,w,c
 42090  017160  6ED9               	movwf	fsr2l,c
 42091  017162  0EFF               	movlw	255
 42092  017164  20E2               	addwfc	fsr1h,w,c
 42093  017166  6EDA               	movwf	fsr2h,c
 42094  017168  0EFC               	movlw	-4
 42095  01716A  006F FF8F FFDF     	movff	plusw1,indf2
 42096                           
 42097                           ;stkvar	_b @ sp[(-4)+-4]
 42098  017170  0EFB               	movlw	251
 42099  017172  24E1               	addwf	fsr1l,w,c
 42100  017174  6ED9               	movwf	fsr2l,c
 42101  017176  0EFF               	movlw	255
 42102  017178  20E2               	addwfc	fsr1h,w,c
 42103  01717A  6EDA               	movwf	fsr2h,c
 42104  01717C  50DF               	movf	indf2,w,c
 42105  01717E  6E35               	movwf	(btemp+11)^0,c
 42106                           
 42107                           ;stkvar	_grs @ sp[(-4)+0]
 42108  017180  0EFC               	movlw	-4
 42109  017182  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42110                           
 42111                           ;stkvar	_a @ sp[(-4)+-8]
 42112  017188  0EF7               	movlw	247
 42113  01718A  24E1               	addwf	fsr1l,w,c
 42114  01718C  6ED9               	movwf	fsr2l,c
 42115  01718E  0EFF               	movlw	255
 42116  017190  20E2               	addwfc	fsr1h,w,c
 42117  017192  6EDA               	movwf	fsr2h,c
 42118                           
 42119                           ;stkvar	_b @ sp[(-4)+-4]
 42120  017194  0EFB               	movlw	251
 42121  017196  24E1               	addwf	fsr1l,w,c
 42122  017198  6EE9               	movwf	fsr0l,c
 42123  01719A  0EFF               	movlw	255
 42124  01719C  20E2               	addwfc	fsr1h,w,c
 42125  01719E  6EEA               	movwf	fsr0h,c
 42126  0171A0  006F FF7F FFEF     	movff	indf2,indf0
 42127                           
 42128                           ;stkvar	_grs @ sp[(-4)+0]
 42129                           ;stkvar	_a @ sp[(-4)+-8]
 42130  0171A6  0EF7               	movlw	247
 42131  0171A8  24E1               	addwf	fsr1l,w,c
 42132  0171AA  6ED9               	movwf	fsr2l,c
 42133  0171AC  0EFF               	movlw	255
 42134  0171AE  20E2               	addwfc	fsr1h,w,c
 42135  0171B0  6EDA               	movwf	fsr2h,c
 42136  0171B2  0EFC               	movlw	-4
 42137  0171B4  006F FF8F FFDF     	movff	plusw1,indf2
 42138  0171BA                     l9884:
 42139                           
 42140                           ;stkvar	_grs @ sp[(-4)+0]
 42141  0171BA  0EFC               	movlw	-4
 42142  0171BC  6AE3               	clrf	plusw1,c
 42143                           
 42144                           ;stkvar	_aexp @ sp[(-4)+2]
 42145  0171BE  0EFE               	movlw	-2
 42146  0171C0  50E3               	movf	plusw1,w,c
 42147  0171C2  6E34               	movwf	(btemp+10)^0,c
 42148  0171C4  6A35               	clrf	(btemp+11)^0,c
 42149                           
 42150                           ;stkvar	_bexp @ sp[(-4)+1]
 42151  0171C6  0EFD               	movlw	-3
 42152  0171C8  50E3               	movf	plusw1,w,c
 42153  0171CA  5E34               	subwf	(btemp+10)^0,f,c
 42154  0171CC  0E00               	movlw	0
 42155  0171CE  5A35               	subwfb	(btemp+11)^0,f,c
 42156  0171D0  BE35               	btfsc	(btemp+11)^0,7,c
 42157  0171D2  D062               	goto	l9908
 42158  0171D4  5035               	movf	(btemp+11)^0,w,c
 42159  0171D6  E104               	bnz	u7310
 42160  0171D8  0E1A               	movlw	26
 42161  0171DA  5C34               	subwf	(btemp+10)^0,w,c
 42162  0171DC  A0D8               	btfss	status,0,c
 42163  0171DE  D05C               	goto	l9908
 42164  0171E0                     u7310:
 42165                           
 42166                           ;stkvar	_b @ sp[(-4)+-4]
 42167  0171E0  0EF8               	movlw	-8
 42168  0171E2  50E3               	movf	plusw1,w,c
 42169  0171E4  E10A               	bnz	u7321
 42170  0171E6  0EF9               	movlw	-7
 42171  0171E8  50E3               	movf	plusw1,w,c
 42172  0171EA  E107               	bnz	u7321
 42173  0171EC  0EFA               	movlw	-6
 42174  0171EE  50E3               	movf	plusw1,w,c
 42175  0171F0  E104               	bnz	u7321
 42176  0171F2  0EFB               	movlw	-5
 42177  0171F4  50E3               	movf	plusw1,w,c
 42178  0171F6  B4D8               	btfsc	status,2,c
 42179  0171F8  D003               	goto	u7320
 42180  0171FA                     u7321:
 42181  0171FA  6A35               	clrf	(btemp+11)^0,c
 42182  0171FC  2A35               	incf	(btemp+11)^0,f,c
 42183  0171FE  D001               	goto	u7338
 42184  017200                     u7320:
 42185  017200  6A35               	clrf	(btemp+11)^0,c
 42186  017202                     u7338:
 42187                           
 42188                           ;stkvar	_grs @ sp[(-4)+0]
 42189  017202  0EFC               	movlw	-4
 42190  017204  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42191                           
 42192                           ;stkvar	_b @ sp[(-4)+-4]
 42193  01720A  0EF8               	movlw	-8
 42194  01720C  6AE3               	clrf	plusw1,c
 42195  01720E  0EF9               	movlw	-7
 42196  017210  6AE3               	clrf	plusw1,c
 42197  017212  0EFA               	movlw	-6
 42198  017214  6AE3               	clrf	plusw1,c
 42199  017216  0EFB               	movlw	-5
 42200  017218  6AE3               	clrf	plusw1,c
 42201                           
 42202                           ;stkvar	_aexp @ sp[(-4)+2]
 42203                           ;stkvar	_bexp @ sp[(-4)+1]
 42204  01721A  0EFE               	movlw	-2
 42205  01721C  006F FF8C  F02A    	movff	plusw1,btemp
 42206  017222  0EFD               	movlw	-3
 42207  017224  0060  F0AB  FFE3   	movff	btemp,plusw1
 42208  01722A  D042               	goto	u7370
 42209  01722C                     l9894:
 42210                           
 42211                           ;stkvar	_grs @ sp[(-4)+0]
 42212  01722C  0EFC               	movlw	-4
 42213  01722E  A0E3               	btfss	plusw1,0,c
 42214  017230  D00D               	goto	l9898
 42215                           
 42216                           ;stkvar	_grs @ sp[(-4)+0]
 42217  017232  0EFC               	movlw	-4
 42218  017234  006F FF8C  F035    	movff	plusw1,btemp+11
 42219  01723A  90D8               	bcf	status,0,c
 42220  01723C  3235               	rrcf	(btemp+11)^0,f,c
 42221  01723E  0E01               	movlw	1
 42222  017240  1235               	iorwf	(btemp+11)^0,f,c
 42223                           
 42224                           ;stkvar	_grs @ sp[(-4)+0]
 42225  017242  0EFC               	movlw	-4
 42226  017244  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42227  01724A  D009               	goto	l9900
 42228  01724C                     l9898:
 42229                           
 42230                           ;stkvar	_grs @ sp[(-4)+0]
 42231  01724C  50E1               	movf	fsr1l,w,c
 42232  01724E  0FFC               	addlw	-4
 42233  017250  6ED9               	movwf	fsr2l,c
 42234  017252  50E2               	movf	fsr1h,w,c
 42235  017254  6EDA               	movwf	fsr2h,c
 42236  017256  0EFF               	movlw	255
 42237  017258  22DA               	addwfc	fsr2h,f,c
 42238  01725A  90D8               	bcf	status,0,c
 42239  01725C  32DF               	rrcf	indf2,f,c
 42240  01725E                     l9900:
 42241                           
 42242                           ;stkvar	_b @ sp[(-4)+-4]
 42243  01725E  0EF8               	movlw	-8
 42244  017260  A0E3               	btfss	plusw1,0,c
 42245  017262  D002               	goto	l9904
 42246                           
 42247                           ;stkvar	_grs @ sp[(-4)+0]
 42248  017264  0EFC               	movlw	-4
 42249  017266  8EE3               	bsf	plusw1,7,c
 42250  017268                     l9904:
 42251  017268  0E01               	movlw	1
 42252  01726A  6E35               	movwf	(btemp+11)^0,c
 42253                           
 42254                           ;stkvar	_b @ sp[(-4)+-4]
 42255  01726C  50E1               	movf	fsr1l,w,c
 42256  01726E  0FF8               	addlw	-8
 42257  017270  6ED9               	movwf	fsr2l,c
 42258  017272  50E2               	movf	fsr1h,w,c
 42259  017274  6EDA               	movwf	fsr2h,c
 42260  017276  0EFF               	movlw	255
 42261  017278  22DA               	addwfc	fsr2h,f,c
 42262  01727A  2835               	incf	(btemp+11)^0,w,c
 42263  01727C  52DE               	movf	postinc2,f,c
 42264  01727E  D008               	goto	u7360
 42265  017280                     u7365:
 42266  017280  52DE               	movf	postinc2,f,c
 42267  017282  90D8               	bcf	status,0,c
 42268  017284  BEDC               	btfsc	preinc2,7,c
 42269  017286  80D8               	bsf	status,0,c
 42270  017288  32DD               	rrcf	postdec2,f,c
 42271  01728A  32DD               	rrcf	postdec2,f,c
 42272  01728C  32DD               	rrcf	postdec2,f,c
 42273  01728E  32DE               	rrcf	postinc2,f,c
 42274  017290                     u7360:
 42275  017290  2EE8               	decfsz	wreg,f,c
 42276  017292  D7F6               	goto	u7365
 42277                           
 42278                           ;stkvar	_bexp @ sp[(-4)+1]
 42279  017294  0EFD               	movlw	-3
 42280  017296  2AE3               	incf	plusw1,f,c
 42281  017298                     l9908:
 42282                           
 42283                           ;stkvar	_aexp @ sp[(-4)+2]
 42284                           ;stkvar	_bexp @ sp[(-4)+1]
 42285  017298  50E1               	movf	fsr1l,w,c
 42286  01729A  0FFD               	addlw	-3
 42287  01729C  6ED9               	movwf	fsr2l,c
 42288  01729E  50E2               	movf	fsr1h,w,c
 42289  0172A0  6EDA               	movwf	fsr2h,c
 42290  0172A2  0EFF               	movlw	255
 42291  0172A4  22DA               	addwfc	fsr2h,f,c
 42292  0172A6  0EFE               	movlw	-2
 42293  0172A8  50E3               	movf	plusw1,w,c
 42294  0172AA  5CDE               	subwf	postinc2,w,c
 42295  0172AC  A0D8               	btfss	status,0,c
 42296  0172AE  D7BE               	goto	l9894
 42297  0172B0                     u7370:
 42298                           
 42299                           ;stkvar	_signs @ sp[(-4)+3]
 42300  0172B0  0EFF               	movlw	-1
 42301  0172B2  BCE3               	btfsc	plusw1,6,c
 42302  0172B4  D066               	goto	l9936
 42303                           
 42304                           ;stkvar	_bexp @ sp[(-4)+1]
 42305  0172B6  0EFD               	movlw	-3
 42306  0172B8  50E3               	movf	plusw1,w,c
 42307  0172BA  B4D8               	btfsc	status,2,c
 42308  0172BC  D0F2               	goto	u7470
 42309                           
 42310                           ;stkvar	_a @ sp[(-4)+-8]
 42311                           ;stkvar	_b @ sp[(-4)+-4]
 42312  0172BE  0EF8               	movlw	-8
 42313  0172C0  50E3               	movf	plusw1,w,c
 42314  0172C2  6E2A               	movwf	btemp^0,c
 42315  0172C4  0EF4               	movlw	-12
 42316  0172C6  50E3               	movf	plusw1,w,c
 42317  0172C8  262A               	addwf	btemp^0,f,c
 42318  0172CA  0EF8               	movlw	-8
 42319  0172CC  0060  F0AB  FFE3   	movff	btemp,plusw1
 42320  0172D2  0EF9               	movlw	-7
 42321  0172D4  50E3               	movf	plusw1,w,c
 42322  0172D6  6E2A               	movwf	btemp^0,c
 42323  0172D8  0EF5               	movlw	-11
 42324  0172DA  50E3               	movf	plusw1,w,c
 42325  0172DC  222A               	addwfc	btemp^0,f,c
 42326  0172DE  0EF9               	movlw	-7
 42327  0172E0  0060  F0AB  FFE3   	movff	btemp,plusw1
 42328  0172E6  0EFA               	movlw	-6
 42329  0172E8  50E3               	movf	plusw1,w,c
 42330  0172EA  6E2A               	movwf	btemp^0,c
 42331  0172EC  0EF6               	movlw	-10
 42332  0172EE  50E3               	movf	plusw1,w,c
 42333  0172F0  222A               	addwfc	btemp^0,f,c
 42334  0172F2  0EFA               	movlw	-6
 42335  0172F4  0060  F0AB  FFE3   	movff	btemp,plusw1
 42336  0172FA  0EFB               	movlw	-5
 42337  0172FC  50E3               	movf	plusw1,w,c
 42338  0172FE  6E2A               	movwf	btemp^0,c
 42339  017300  0EF7               	movlw	-9
 42340  017302  50E3               	movf	plusw1,w,c
 42341  017304  222A               	addwfc	btemp^0,f,c
 42342  017306  0EFB               	movlw	-5
 42343  017308  0060  F0AB  FFE3   	movff	btemp,plusw1
 42344                           
 42345                           ;stkvar	_b @ sp[(-4)+-4]
 42346  01730E  0EFB               	movlw	-5
 42347  017310  A0E3               	btfss	plusw1,0,c
 42348  017312  D101               	goto	u7510
 42349                           
 42350                           ;stkvar	_grs @ sp[(-4)+0]
 42351  017314  0EFC               	movlw	-4
 42352  017316  A0E3               	btfss	plusw1,0,c
 42353  017318  D00D               	goto	l9926
 42354                           
 42355                           ;stkvar	_grs @ sp[(-4)+0]
 42356  01731A  0EFC               	movlw	-4
 42357  01731C  006F FF8C  F035    	movff	plusw1,btemp+11
 42358  017322  90D8               	bcf	status,0,c
 42359  017324  3235               	rrcf	(btemp+11)^0,f,c
 42360  017326  0E01               	movlw	1
 42361  017328  1235               	iorwf	(btemp+11)^0,f,c
 42362                           
 42363                           ;stkvar	_grs @ sp[(-4)+0]
 42364  01732A  0EFC               	movlw	-4
 42365  01732C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42366  017332  D009               	goto	l9928
 42367  017334                     l9926:
 42368                           
 42369                           ;stkvar	_grs @ sp[(-4)+0]
 42370  017334  50E1               	movf	fsr1l,w,c
 42371  017336  0FFC               	addlw	-4
 42372  017338  6ED9               	movwf	fsr2l,c
 42373  01733A  50E2               	movf	fsr1h,w,c
 42374  01733C  6EDA               	movwf	fsr2h,c
 42375  01733E  0EFF               	movlw	255
 42376  017340  22DA               	addwfc	fsr2h,f,c
 42377  017342  90D8               	bcf	status,0,c
 42378  017344  32DF               	rrcf	indf2,f,c
 42379  017346                     l9928:
 42380                           
 42381                           ;stkvar	_b @ sp[(-4)+-4]
 42382  017346  0EF8               	movlw	-8
 42383  017348  A0E3               	btfss	plusw1,0,c
 42384  01734A  D002               	goto	l9932
 42385                           
 42386                           ;stkvar	_grs @ sp[(-4)+0]
 42387  01734C  0EFC               	movlw	-4
 42388  01734E  8EE3               	bsf	plusw1,7,c
 42389  017350                     l9932:
 42390  017350  0E01               	movlw	1
 42391  017352  6E35               	movwf	(btemp+11)^0,c
 42392                           
 42393                           ;stkvar	_b @ sp[(-4)+-4]
 42394  017354  50E1               	movf	fsr1l,w,c
 42395  017356  0FF8               	addlw	-8
 42396  017358  6ED9               	movwf	fsr2l,c
 42397  01735A  50E2               	movf	fsr1h,w,c
 42398  01735C  6EDA               	movwf	fsr2h,c
 42399  01735E  0EFF               	movlw	255
 42400  017360  22DA               	addwfc	fsr2h,f,c
 42401  017362  2835               	incf	(btemp+11)^0,w,c
 42402  017364  52DE               	movf	postinc2,f,c
 42403  017366  D008               	goto	u7430
 42404  017368                     u7435:
 42405  017368  52DE               	movf	postinc2,f,c
 42406  01736A  90D8               	bcf	status,0,c
 42407  01736C  BEDC               	btfsc	preinc2,7,c
 42408  01736E  80D8               	bsf	status,0,c
 42409  017370  32DD               	rrcf	postdec2,f,c
 42410  017372  32DD               	rrcf	postdec2,f,c
 42411  017374  32DD               	rrcf	postdec2,f,c
 42412  017376  32DE               	rrcf	postinc2,f,c
 42413  017378                     u7430:
 42414  017378  2EE8               	decfsz	wreg,f,c
 42415  01737A  D7F6               	goto	u7435
 42416                           
 42417                           ;stkvar	_bexp @ sp[(-4)+1]
 42418  01737C  0EFD               	movlw	-3
 42419  01737E  2AE3               	incf	plusw1,f,c
 42420  017380  D0CA               	goto	u7510
 42421  017382                     l9936:
 42422                           
 42423                           ;stkvar	_a @ sp[(-4)+-8]
 42424                           ;stkvar	_b @ sp[(-4)+-4]
 42425  017382  50E1               	movf	fsr1l,w,c
 42426  017384  0FF8               	addlw	-8
 42427  017386  6ED9               	movwf	fsr2l,c
 42428  017388  50E2               	movf	fsr1h,w,c
 42429  01738A  6EDA               	movwf	fsr2h,c
 42430  01738C  0EFF               	movlw	255
 42431  01738E  22DA               	addwfc	fsr2h,f,c
 42432  017390  0EF4               	movlw	-12
 42433  017392  50E3               	movf	plusw1,w,c
 42434  017394  5CDE               	subwf	postinc2,w,c
 42435  017396  0EF5               	movlw	-11
 42436  017398  50E3               	movf	plusw1,w,c
 42437  01739A  58DE               	subwfb	postinc2,w,c
 42438  01739C  0EF6               	movlw	-10
 42439  01739E  50E3               	movf	plusw1,w,c
 42440  0173A0  58DE               	subwfb	postinc2,w,c
 42441  0173A2  50DE               	movf	postinc2,w,c
 42442  0173A4  0A80               	xorlw	128
 42443  0173A6  6E2A               	movwf	btemp^0,c
 42444  0173A8  0EF7               	movlw	-9
 42445  0173AA  50E3               	movf	plusw1,w,c
 42446  0173AC  0A80               	xorlw	128
 42447  0173AE  582A               	subwfb	btemp^0,w,c
 42448  0173B0  B0D8               	btfsc	status,0,c
 42449  0173B2  D053               	goto	l9948
 42450                           
 42451                           ;stkvar	_b @ sp[(-4)+-4]
 42452                           ;stkvar	_a @ sp[(-4)+-8]
 42453  0173B4  0EF4               	movlw	-12
 42454  0173B6  006F FF8C  F032    	movff	plusw1,btemp+8
 42455  0173BC  0EF5               	movlw	-11
 42456  0173BE  006F FF8C  F033    	movff	plusw1,btemp+9
 42457  0173C4  0EF6               	movlw	-10
 42458  0173C6  006F FF8C  F034    	movff	plusw1,btemp+10
 42459  0173CC  0EF7               	movlw	-9
 42460  0173CE  006F FF8C  F035    	movff	plusw1,btemp+11
 42461  0173D4  0EF8               	movlw	-8
 42462  0173D6  50E3               	movf	plusw1,w,c
 42463  0173D8  5E32               	subwf	(btemp+8)^0,f,c
 42464  0173DA  0EF9               	movlw	-7
 42465  0173DC  50E3               	movf	plusw1,w,c
 42466  0173DE  5A33               	subwfb	(btemp+9)^0,f,c
 42467  0173E0  0EFA               	movlw	-6
 42468  0173E2  50E3               	movf	plusw1,w,c
 42469  0173E4  5A34               	subwfb	(btemp+10)^0,f,c
 42470  0173E6  0EFB               	movlw	-5
 42471  0173E8  50E3               	movf	plusw1,w,c
 42472  0173EA  5A35               	subwfb	(btemp+11)^0,f,c
 42473  0173EC  0EFF               	movlw	255
 42474  0173EE  2432               	addwf	(btemp+8)^0,w,c
 42475  0173F0  6E2E               	movwf	(btemp+4)^0,c
 42476  0173F2  0EFF               	movlw	255
 42477  0173F4  2033               	addwfc	(btemp+9)^0,w,c
 42478  0173F6  6E2F               	movwf	(btemp+5)^0,c
 42479  0173F8  0EFF               	movlw	255
 42480  0173FA  2034               	addwfc	(btemp+10)^0,w,c
 42481  0173FC  6E30               	movwf	(btemp+6)^0,c
 42482  0173FE  0EFF               	movlw	255
 42483  017400  2035               	addwfc	(btemp+11)^0,w,c
 42484  017402  6E31               	movwf	(btemp+7)^0,c
 42485                           
 42486                           ;stkvar	_b @ sp[(-4)+-4]
 42487  017404  0EF8               	movlw	-8
 42488  017406  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 42489  01740C  0EF9               	movlw	-7
 42490  01740E  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 42491  017414  0EFA               	movlw	-6
 42492  017416  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 42493  01741C  0EFB               	movlw	-5
 42494  01741E  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 42495                           
 42496                           ;stkvar	_signs @ sp[(-4)+3]
 42497  017424  0EFF               	movlw	-1
 42498  017426  7EE3               	btg	plusw1,7,c
 42499                           
 42500                           ;stkvar	_grs @ sp[(-4)+0]
 42501  017428  0EFC               	movlw	-4
 42502  01742A  50E3               	movf	plusw1,w,c
 42503  01742C  0800               	sublw	0
 42504  01742E  6E35               	movwf	(btemp+11)^0,c
 42505                           
 42506                           ;stkvar	_grs @ sp[(-4)+0]
 42507  017430  0EFC               	movlw	-4
 42508  017432  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42509                           
 42510                           ;stkvar	_grs @ sp[(-4)+0]
 42511  017438  0EFC               	movlw	-4
 42512  01743A  50E3               	movf	plusw1,w,c
 42513  01743C  A4D8               	btfss	status,2,c
 42514  01743E  D020               	goto	l9950
 42515                           
 42516                           ;stkvar	_b @ sp[(-4)+-4]
 42517  017440  50E1               	movf	fsr1l,w,c
 42518  017442  0FF8               	addlw	-8
 42519  017444  6ED9               	movwf	fsr2l,c
 42520  017446  50E2               	movf	fsr1h,w,c
 42521  017448  6EDA               	movwf	fsr2h,c
 42522  01744A  0EFF               	movlw	255
 42523  01744C  22DA               	addwfc	fsr2h,f,c
 42524  01744E  2ADE               	incf	postinc2,f,c
 42525  017450  0E00               	movlw	0
 42526  017452  22DE               	addwfc	postinc2,f,c
 42527  017454  22DE               	addwfc	postinc2,f,c
 42528  017456  22DE               	addwfc	postinc2,f,c
 42529  017458  D013               	goto	l9950
 42530  01745A                     l9948:
 42531                           
 42532                           ;stkvar	_a @ sp[(-4)+-8]
 42533                           ;stkvar	_b @ sp[(-4)+-4]
 42534  01745A  50E1               	movf	fsr1l,w,c
 42535  01745C  0FF8               	addlw	-8
 42536  01745E  6ED9               	movwf	fsr2l,c
 42537  017460  50E2               	movf	fsr1h,w,c
 42538  017462  6EDA               	movwf	fsr2h,c
 42539  017464  0EFF               	movlw	255
 42540  017466  22DA               	addwfc	fsr2h,f,c
 42541  017468  0EF4               	movlw	-12
 42542  01746A  50E3               	movf	plusw1,w,c
 42543  01746C  5EDE               	subwf	postinc2,f,c
 42544  01746E  0EF5               	movlw	-11
 42545  017470  50E3               	movf	plusw1,w,c
 42546  017472  5ADE               	subwfb	postinc2,f,c
 42547  017474  0EF6               	movlw	-10
 42548  017476  50E3               	movf	plusw1,w,c
 42549  017478  5ADE               	subwfb	postinc2,f,c
 42550  01747A  0EF7               	movlw	-9
 42551  01747C  50E3               	movf	plusw1,w,c
 42552  01747E  5ADE               	subwfb	postinc2,f,c
 42553  017480                     l9950:
 42554                           
 42555                           ;stkvar	_b @ sp[(-4)+-4]
 42556  017480  0EF8               	movlw	-8
 42557  017482  50E3               	movf	plusw1,w,c
 42558  017484  E145               	bnz	l9972
 42559  017486  0EF9               	movlw	-7
 42560  017488  50E3               	movf	plusw1,w,c
 42561  01748A  E142               	bnz	l9972
 42562  01748C  0EFA               	movlw	-6
 42563  01748E  50E3               	movf	plusw1,w,c
 42564  017490  E13F               	bnz	l9972
 42565  017492  0EFB               	movlw	-5
 42566  017494  50E3               	movf	plusw1,w,c
 42567  017496  A4D8               	btfss	status,2,c
 42568  017498  D03B               	goto	l9972
 42569                           
 42570                           ;stkvar	_grs @ sp[(-4)+0]
 42571  01749A  0EFC               	movlw	-4
 42572  01749C  50E3               	movf	plusw1,w,c
 42573  01749E  A4D8               	btfss	status,2,c
 42574  0174A0  D037               	goto	l9972
 42575  0174A2                     u7470:
 42576  0174A2  0E00               	movlw	0
 42577  0174A4  6E2A               	movwf	btemp^0,c
 42578  0174A6  0E00               	movlw	0
 42579  0174A8  6E2B               	movwf	(btemp+1)^0,c
 42580  0174AA  0E00               	movlw	0
 42581  0174AC  6E2C               	movwf	(btemp+2)^0,c
 42582  0174AE  0E00               	movlw	0
 42583  0174B0  6E2D               	movwf	(btemp+3)^0,c
 42584  0174B2  D0C6               	goto	l3265
 42585  0174B4                     l9958:
 42586                           
 42587                           ;stkvar	_b @ sp[(-4)+-4]
 42588  0174B4  90D8               	bcf	status,0,c
 42589  0174B6  0EF8               	movlw	-8
 42590  0174B8  36E3               	rlcf	plusw1,f,c
 42591  0174BA  0EF9               	movlw	-7
 42592  0174BC  36E3               	rlcf	plusw1,f,c
 42593  0174BE  0EFA               	movlw	-6
 42594  0174C0  36E3               	rlcf	plusw1,f,c
 42595  0174C2  0EFB               	movlw	-5
 42596  0174C4  36E3               	rlcf	plusw1,f,c
 42597                           
 42598                           ;stkvar	_grs @ sp[(-4)+0]
 42599  0174C6  0EFC               	movlw	-4
 42600  0174C8  AEE3               	btfss	plusw1,7,c
 42601  0174CA  D002               	goto	l3277
 42602                           
 42603                           ;stkvar	_b @ sp[(-4)+-4]
 42604  0174CC  0EF8               	movlw	-8
 42605  0174CE  80E3               	bsf	plusw1,0,c
 42606  0174D0                     l3277:
 42607                           
 42608                           ;stkvar	_grs @ sp[(-4)+0]
 42609  0174D0  0EFC               	movlw	-4
 42610  0174D2  A0E3               	btfss	plusw1,0,c
 42611  0174D4  D00E               	goto	l9966
 42612                           
 42613                           ;stkvar	_grs @ sp[(-4)+0]
 42614  0174D6  0EFC               	movlw	-4
 42615  0174D8  006F FF8C  F035    	movff	plusw1,btemp+11
 42616  0174DE  90D8               	bcf	status,0,c
 42617  0174E0  3435               	rlcf	(btemp+11)^0,w,c
 42618  0174E2  6E34               	movwf	(btemp+10)^0,c
 42619  0174E4  0E01               	movlw	1
 42620  0174E6  1234               	iorwf	(btemp+10)^0,f,c
 42621                           
 42622                           ;stkvar	_grs @ sp[(-4)+0]
 42623  0174E8  0EFC               	movlw	-4
 42624  0174EA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42625  0174F0  D009               	goto	l9968
 42626  0174F2                     l9966:
 42627                           
 42628                           ;stkvar	_grs @ sp[(-4)+0]
 42629  0174F2  50E1               	movf	fsr1l,w,c
 42630  0174F4  0FFC               	addlw	-4
 42631  0174F6  6ED9               	movwf	fsr2l,c
 42632  0174F8  50E2               	movf	fsr1h,w,c
 42633  0174FA  6EDA               	movwf	fsr2h,c
 42634  0174FC  0EFF               	movlw	255
 42635  0174FE  22DA               	addwfc	fsr2h,f,c
 42636  017500  90D8               	bcf	status,0,c
 42637  017502  36DF               	rlcf	indf2,f,c
 42638  017504                     l9968:
 42639                           
 42640                           ;stkvar	_bexp @ sp[(-4)+1]
 42641  017504  0EFD               	movlw	-3
 42642  017506  50E3               	movf	plusw1,w,c
 42643  017508  B4D8               	btfsc	status,2,c
 42644  01750A  D002               	goto	l9972
 42645                           
 42646                           ;stkvar	_bexp @ sp[(-4)+1]
 42647  01750C  0EFD               	movlw	-3
 42648  01750E  06E3               	decf	plusw1,f,c
 42649  017510                     l9972:
 42650                           
 42651                           ;stkvar	_b @ sp[(-4)+-4]
 42652  017510  0EFA               	movlw	-6
 42653  017512  AEE3               	btfss	plusw1,7,c
 42654  017514  D7CF               	goto	l9958
 42655  017516                     u7510:
 42656                           
 42657                           ;stkvar	_aexp @ sp[(-4)+2]
 42658  017516  0EFE               	movlw	-2
 42659  017518  6AE3               	clrf	plusw1,c
 42660                           
 42661                           ;stkvar	_grs @ sp[(-4)+0]
 42662  01751A  0EFC               	movlw	-4
 42663  01751C  AEE3               	btfss	plusw1,7,c
 42664  01751E  D00F               	goto	l9986
 42665                           
 42666                           ;stkvar	_grs @ sp[(-4)+0]
 42667  017520  0EFC               	movlw	-4
 42668  017522  006F FF8C  F035    	movff	plusw1,btemp+11
 42669  017528  0E7F               	movlw	127
 42670  01752A  1635               	andwf	(btemp+11)^0,f,c
 42671  01752C  B4D8               	btfsc	status,2,c
 42672  01752E  D004               	goto	l9982
 42673  017530                     u7530:
 42674                           
 42675                           ;stkvar	_aexp @ sp[(-4)+2]
 42676  017530  0EFE               	movlw	-2
 42677  017532  6AE3               	clrf	plusw1,c
 42678  017534  2AE3               	incf	plusw1,f,c
 42679  017536  D003               	goto	l9986
 42680  017538                     l9982:
 42681                           
 42682                           ;stkvar	_b @ sp[(-4)+-4]
 42683  017538  0EF8               	movlw	-8
 42684  01753A  B0E3               	btfsc	plusw1,0,c
 42685  01753C  D7F9               	goto	u7530
 42686  01753E                     l9986:
 42687                           
 42688                           ;stkvar	_aexp @ sp[(-4)+2]
 42689  01753E  0EFE               	movlw	-2
 42690  017540  50E3               	movf	plusw1,w,c
 42691  017542  B4D8               	btfsc	status,2,c
 42692  017544  D02B               	goto	l9998
 42693                           
 42694                           ;stkvar	_b @ sp[(-4)+-4]
 42695  017546  50E1               	movf	fsr1l,w,c
 42696  017548  0FF8               	addlw	-8
 42697  01754A  6ED9               	movwf	fsr2l,c
 42698  01754C  50E2               	movf	fsr1h,w,c
 42699  01754E  6EDA               	movwf	fsr2h,c
 42700  017550  0EFF               	movlw	255
 42701  017552  22DA               	addwfc	fsr2h,f,c
 42702  017554  2ADE               	incf	postinc2,f,c
 42703  017556  0E00               	movlw	0
 42704  017558  22DE               	addwfc	postinc2,f,c
 42705  01755A  22DE               	addwfc	postinc2,f,c
 42706  01755C  22DE               	addwfc	postinc2,f,c
 42707                           
 42708                           ;stkvar	_b @ sp[(-4)+-4]
 42709  01755E  0EFB               	movlw	-5
 42710  017560  A0E3               	btfss	plusw1,0,c
 42711  017562  D01C               	goto	l9998
 42712  017564  0E01               	movlw	1
 42713  017566  6E35               	movwf	(btemp+11)^0,c
 42714                           
 42715                           ;stkvar	_b @ sp[(-4)+-4]
 42716  017568  50E1               	movf	fsr1l,w,c
 42717  01756A  0FF8               	addlw	-8
 42718  01756C  6ED9               	movwf	fsr2l,c
 42719  01756E  50E2               	movf	fsr1h,w,c
 42720  017570  6EDA               	movwf	fsr2h,c
 42721  017572  0EFF               	movlw	255
 42722  017574  22DA               	addwfc	fsr2h,f,c
 42723  017576  2835               	incf	(btemp+11)^0,w,c
 42724  017578  52DE               	movf	postinc2,f,c
 42725  01757A  D008               	goto	u7570
 42726  01757C                     u7575:
 42727  01757C  52DE               	movf	postinc2,f,c
 42728  01757E  90D8               	bcf	status,0,c
 42729  017580  BEDC               	btfsc	preinc2,7,c
 42730  017582  80D8               	bsf	status,0,c
 42731  017584  32DD               	rrcf	postdec2,f,c
 42732  017586  32DD               	rrcf	postdec2,f,c
 42733  017588  32DD               	rrcf	postdec2,f,c
 42734  01758A  32DE               	rrcf	postinc2,f,c
 42735  01758C                     u7570:
 42736  01758C  2EE8               	decfsz	wreg,f,c
 42737  01758E  D7F6               	goto	u7575
 42738                           
 42739                           ;stkvar	_bexp @ sp[(-4)+1]
 42740  017590  0EFD               	movlw	-3
 42741  017592  28E3               	incf	plusw1,w,c
 42742  017594  B4D8               	btfsc	status,2,c
 42743  017596  D002               	goto	l9998
 42744                           
 42745                           ;stkvar	_bexp @ sp[(-4)+1]
 42746  017598  0EFD               	movlw	-3
 42747  01759A  2AE3               	incf	plusw1,f,c
 42748  01759C                     l9998:
 42749                           
 42750                           ;stkvar	_bexp @ sp[(-4)+1]
 42751  01759C  0EFD               	movlw	-3
 42752  01759E  28E3               	incf	plusw1,w,c
 42753  0175A0  B4D8               	btfsc	status,2,c
 42754  0175A2  D004               	goto	u7600
 42755                           
 42756                           ;stkvar	_bexp @ sp[(-4)+1]
 42757  0175A4  0EFD               	movlw	-3
 42758  0175A6  50E3               	movf	plusw1,w,c
 42759  0175A8  A4D8               	btfss	status,2,c
 42760  0175AA  D00E               	goto	l10008
 42761  0175AC                     u7600:
 42762                           
 42763                           ;stkvar	_b @ sp[(-4)+-4]
 42764  0175AC  0EF8               	movlw	-8
 42765  0175AE  6AE3               	clrf	plusw1,c
 42766  0175B0  0EF9               	movlw	-7
 42767  0175B2  6AE3               	clrf	plusw1,c
 42768  0175B4  0EFA               	movlw	-6
 42769  0175B6  6AE3               	clrf	plusw1,c
 42770  0175B8  0EFB               	movlw	-5
 42771  0175BA  6AE3               	clrf	plusw1,c
 42772                           
 42773                           ;stkvar	_bexp @ sp[(-4)+1]
 42774  0175BC  0EFD               	movlw	-3
 42775  0175BE  50E3               	movf	plusw1,w,c
 42776  0175C0  A4D8               	btfss	status,2,c
 42777  0175C2  D002               	goto	l10008
 42778                           
 42779                           ;stkvar	_signs @ sp[(-4)+3]
 42780  0175C4  0EFF               	movlw	-1
 42781  0175C6  6AE3               	clrf	plusw1,c
 42782  0175C8                     l10008:
 42783                           
 42784                           ;stkvar	_bexp @ sp[(-4)+1]
 42785  0175C8  0EFD               	movlw	-3
 42786  0175CA  A0E3               	btfss	plusw1,0,c
 42787  0175CC  D009               	goto	l10012
 42788                           
 42789                           ;stkvar	_b @ sp[(-4)+-4]
 42790  0175CE  0EFA               	movlw	250
 42791  0175D0  24E1               	addwf	fsr1l,w,c
 42792  0175D2  6ED9               	movwf	fsr2l,c
 42793  0175D4  0EFF               	movlw	255
 42794  0175D6  20E2               	addwfc	fsr1h,w,c
 42795  0175D8  6EDA               	movwf	fsr2h,c
 42796  0175DA  0E00               	movlw	0
 42797  0175DC  8EDB               	bsf	plusw2,7,c
 42798  0175DE  D008               	goto	l10014
 42799  0175E0                     l10012:
 42800                           
 42801                           ;stkvar	_b @ sp[(-4)+-4]
 42802  0175E0  0EFA               	movlw	250
 42803  0175E2  24E1               	addwf	fsr1l,w,c
 42804  0175E4  6ED9               	movwf	fsr2l,c
 42805  0175E6  0EFF               	movlw	255
 42806  0175E8  20E2               	addwfc	fsr1h,w,c
 42807  0175EA  6EDA               	movwf	fsr2h,c
 42808  0175EC  0E7F               	movlw	127
 42809  0175EE  16DF               	andwf	indf2,f,c
 42810  0175F0                     l10014:
 42811                           
 42812                           ;stkvar	_b @ sp[(-4)+-4]
 42813  0175F0  0EFB               	movlw	251
 42814  0175F2  24E1               	addwf	fsr1l,w,c
 42815  0175F4  6ED9               	movwf	fsr2l,c
 42816  0175F6  0EFF               	movlw	255
 42817  0175F8  20E2               	addwfc	fsr1h,w,c
 42818  0175FA  6EDA               	movwf	fsr2h,c
 42819                           
 42820                           ;stkvar	_bexp @ sp[(-4)+1]
 42821  0175FC  0EFD               	movlw	-3
 42822  0175FE  006F FF8C  F035    	movff	plusw1,btemp+11
 42823  017604  90D8               	bcf	status,0,c
 42824  017606  3035               	rrcf	(btemp+11)^0,w,c
 42825  017608  6EDF               	movwf	indf2,c
 42826                           
 42827                           ;stkvar	_signs @ sp[(-4)+3]
 42828  01760A  0EFF               	movlw	-1
 42829  01760C  AEE3               	btfss	plusw1,7,c
 42830  01760E  D008               	goto	l10020
 42831                           
 42832                           ;stkvar	_b @ sp[(-4)+-4]
 42833  017610  0EFB               	movlw	251
 42834  017612  24E1               	addwf	fsr1l,w,c
 42835  017614  6ED9               	movwf	fsr2l,c
 42836  017616  0EFF               	movlw	255
 42837  017618  20E2               	addwfc	fsr1h,w,c
 42838  01761A  6EDA               	movwf	fsr2h,c
 42839  01761C  0E00               	movlw	0
 42840  01761E  8EDB               	bsf	plusw2,7,c
 42841  017620                     l10020:
 42842                           
 42843                           ;stkvar	_b @ sp[(-4)+-4]
 42844  017620  0EF8               	movlw	-8
 42845  017622  006F FF8C  F02A    	movff	plusw1,btemp
 42846  017628  0EF9               	movlw	-7
 42847  01762A  006F FF8C  F02B    	movff	plusw1,btemp+1
 42848  017630  0EFA               	movlw	-6
 42849  017632  006F FF8C  F02C    	movff	plusw1,btemp+2
 42850  017638  0EFB               	movlw	-5
 42851  01763A  006F FF8C  F02D    	movff	plusw1,btemp+3
 42852  017640                     l3265:
 42853                           
 42854                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 42855  017640  0EF4               	movlw	244
 42856  017642  26E1               	addwf	fsr1l,f,c
 42857  017644  0EFF               	movlw	255
 42858  017646  22E2               	addwfc	fsr1h,f,c
 42859  017648  0012               	return		;funcret
 42860  01764A                     __end_of___fladd:
 42861                           	opt callstack 0
 42862                           
 42863 ;; *************** function ___flmul *****************
 42864 ;; Defined at:
 42865 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 42866 ;; Parameters:    Size  Location     Type
 42867 ;;  b               4  [STACK] unsigned char 
 42868 ;;  a               4  [STACK] unsigned char 
 42869 ;; Auto vars:     Size  Location     Type
 42870 ;;  prod            4  [STACK] struct .
 42871 ;;  grs             4  [STACK] unsigned long 
 42872 ;;  temp            2  [STACK] struct .
 42873 ;;  bexp            1  [STACK] unsigned char 
 42874 ;;  aexp            1  [STACK] unsigned char 
 42875 ;;  sign            1  [STACK] unsigned char 
 42876 ;; Return value:  Size  Location     Type
 42877 ;;                  4  [STACK] unsigned char 
 42878 ;; Registers used:
 42879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 42880 ;; Tracked objects:
 42881 ;;		On entry : 0/39
 42882 ;;		On exit  : 0/0
 42883 ;;		Unchanged: 0/0
 42884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42889 ;;Total ram usage:        0 bytes
 42890 ;; Hardware stack levels used:    1
 42891 ;; Hardware stack levels required when called:   15
 42892 ;; This function calls:
 42893 ;;		Nothing
 42894 ;; This function is called by:
 42895 ;;		_conv_raw_result
 42896 ;;		_lp_filter
 42897 ;;		_calc_model_data
 42898 ;;		_load_hist_data
 42899 ;;		_calc_bsoc
 42900 ;;		_init_bsoc
 42901 ;;		_efgtoa
 42902 ;; This function uses a reentrant model
 42903 ;;
 42904                           
 42905                           	psect	text154
 42906  016664                     __ptext154:
 42907                           	opt callstack 0
 42908  016664                     ___flmul:
 42909                           	opt callstack 0
 42910                           
 42911                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 42912  016664  0E0D               	movlw	13
 42913  016666  26E1               	addwf	fsr1l,f,c
 42914  016668  0E00               	movlw	0
 42915  01666A  22E2               	addwfc	fsr1h,f,c
 42916                           
 42917                           ;stkvar	_b @ sp[(-13)+-4]
 42918                           
 42919                           ;incstack = 0
 42920 ;; hardware stack exceeded
 42921  01666C  0EF2               	movlw	242
 42922  01666E  24E1               	addwf	fsr1l,w,c
 42923  016670  6ED9               	movwf	fsr2l,c
 42924  016672  0EFF               	movlw	255
 42925  016674  20E2               	addwfc	fsr1h,w,c
 42926  016676  6EDA               	movwf	fsr2h,c
 42927  016678  50DF               	movf	indf2,w,c
 42928  01667A  6E35               	movwf	(btemp+11)^0,c
 42929  01667C  0E80               	movlw	128
 42930  01667E  1635               	andwf	(btemp+11)^0,f,c
 42931                           
 42932                           ;stkvar	_sign @ sp[(-13)+12]
 42933  016680  0EFF               	movlw	-1
 42934  016682  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42935                           
 42936                           ;stkvar	_b @ sp[(-13)+-4]
 42937  016688  0EF2               	movlw	242
 42938  01668A  24E1               	addwf	fsr1l,w,c
 42939  01668C  6ED9               	movwf	fsr2l,c
 42940  01668E  0EFF               	movlw	255
 42941  016690  20E2               	addwfc	fsr1h,w,c
 42942  016692  6EDA               	movwf	fsr2h,c
 42943  016694  50DF               	movf	indf2,w,c
 42944  016696  6E35               	movwf	(btemp+11)^0,c
 42945  016698  90D8               	bcf	status,0,c
 42946  01669A  3435               	rlcf	(btemp+11)^0,w,c
 42947  01669C  6E34               	movwf	(btemp+10)^0,c
 42948                           
 42949                           ;stkvar	_bexp @ sp[(-13)+10]
 42950  01669E  0EFD               	movlw	-3
 42951  0166A0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42952                           
 42953                           ;stkvar	_b @ sp[(-13)+-4]
 42954  0166A6  0EF1               	movlw	241
 42955  0166A8  24E1               	addwf	fsr1l,w,c
 42956  0166AA  6ED9               	movwf	fsr2l,c
 42957  0166AC  0EFF               	movlw	255
 42958  0166AE  20E2               	addwfc	fsr1h,w,c
 42959  0166B0  6EDA               	movwf	fsr2h,c
 42960  0166B2  AEDF               	btfss	indf2,7,c
 42961  0166B4  D002               	goto	l10484
 42962                           
 42963                           ;stkvar	_bexp @ sp[(-13)+10]
 42964  0166B6  0EFD               	movlw	-3
 42965  0166B8  80E3               	bsf	plusw1,0,c
 42966  0166BA                     l10484:
 42967                           
 42968                           ;stkvar	_bexp @ sp[(-13)+10]
 42969  0166BA  0EFD               	movlw	-3
 42970  0166BC  50E3               	movf	plusw1,w,c
 42971  0166BE  B4D8               	btfsc	status,2,c
 42972  0166C0  D01F               	goto	l10492
 42973                           
 42974                           ;stkvar	_bexp @ sp[(-13)+10]
 42975  0166C2  0EFD               	movlw	-3
 42976  0166C4  28E3               	incf	plusw1,w,c
 42977  0166C6  A4D8               	btfss	status,2,c
 42978  0166C8  D018               	goto	l10490
 42979  0166CA  0E00               	movlw	0
 42980  0166CC  6E32               	movwf	(btemp+8)^0,c
 42981  0166CE  0E00               	movlw	0
 42982  0166D0  6E33               	movwf	(btemp+9)^0,c
 42983  0166D2  0E00               	movlw	0
 42984  0166D4  6E34               	movwf	(btemp+10)^0,c
 42985  0166D6  0E00               	movlw	0
 42986  0166D8  6E35               	movwf	(btemp+11)^0,c
 42987                           
 42988                           ;stkvar	_b @ sp[(-13)+-4]
 42989  0166DA  0EEF               	movlw	-17
 42990  0166DC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 42991  0166E2  0EF0               	movlw	-16
 42992  0166E4  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 42993  0166EA  0EF1               	movlw	-15
 42994  0166EC  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 42995  0166F2  0EF2               	movlw	-14
 42996  0166F4  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 42997  0166FA                     l10490:
 42998                           
 42999                           ;stkvar	_b @ sp[(-13)+-4]
 43000  0166FA  0EF1               	movlw	-15
 43001  0166FC  8EE3               	bsf	plusw1,7,c
 43002  0166FE  D018               	goto	l10494
 43003  016700                     l10492:
 43004  016700  0E00               	movlw	0
 43005  016702  6E32               	movwf	(btemp+8)^0,c
 43006  016704  0E00               	movlw	0
 43007  016706  6E33               	movwf	(btemp+9)^0,c
 43008  016708  0E00               	movlw	0
 43009  01670A  6E34               	movwf	(btemp+10)^0,c
 43010  01670C  0E00               	movlw	0
 43011  01670E  6E35               	movwf	(btemp+11)^0,c
 43012                           
 43013                           ;stkvar	_b @ sp[(-13)+-4]
 43014  016710  0EEF               	movlw	-17
 43015  016712  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43016  016718  0EF0               	movlw	-16
 43017  01671A  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43018  016720  0EF1               	movlw	-15
 43019  016722  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43020  016728  0EF2               	movlw	-14
 43021  01672A  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43022  016730                     l10494:
 43023                           
 43024                           ;stkvar	_a @ sp[(-13)+-8]
 43025  016730  0EEE               	movlw	238
 43026  016732  24E1               	addwf	fsr1l,w,c
 43027  016734  6ED9               	movwf	fsr2l,c
 43028  016736  0EFF               	movlw	255
 43029  016738  20E2               	addwfc	fsr1h,w,c
 43030  01673A  6EDA               	movwf	fsr2h,c
 43031  01673C  50DF               	movf	indf2,w,c
 43032  01673E  6E35               	movwf	(btemp+11)^0,c
 43033  016740  0E80               	movlw	128
 43034  016742  1635               	andwf	(btemp+11)^0,f,c
 43035                           
 43036                           ;stkvar	_sign @ sp[(-13)+12]
 43037  016744  50E1               	movf	fsr1l,w,c
 43038  016746  0FFF               	addlw	-1
 43039  016748  6ED9               	movwf	fsr2l,c
 43040  01674A  50E2               	movf	fsr1h,w,c
 43041  01674C  6EDA               	movwf	fsr2h,c
 43042  01674E  0EFF               	movlw	255
 43043  016750  22DA               	addwfc	fsr2h,f,c
 43044  016752  5035               	movf	(btemp+11)^0,w,c
 43045  016754  1ADF               	xorwf	indf2,f,c
 43046                           
 43047                           ;stkvar	_a @ sp[(-13)+-8]
 43048  016756  0EEE               	movlw	238
 43049  016758  24E1               	addwf	fsr1l,w,c
 43050  01675A  6ED9               	movwf	fsr2l,c
 43051  01675C  0EFF               	movlw	255
 43052  01675E  20E2               	addwfc	fsr1h,w,c
 43053  016760  6EDA               	movwf	fsr2h,c
 43054  016762  50DF               	movf	indf2,w,c
 43055  016764  6E35               	movwf	(btemp+11)^0,c
 43056  016766  90D8               	bcf	status,0,c
 43057  016768  3435               	rlcf	(btemp+11)^0,w,c
 43058  01676A  6E34               	movwf	(btemp+10)^0,c
 43059                           
 43060                           ;stkvar	_aexp @ sp[(-13)+11]
 43061  01676C  0EFE               	movlw	-2
 43062  01676E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43063                           
 43064                           ;stkvar	_a @ sp[(-13)+-8]
 43065  016774  0EED               	movlw	237
 43066  016776  24E1               	addwf	fsr1l,w,c
 43067  016778  6ED9               	movwf	fsr2l,c
 43068  01677A  0EFF               	movlw	255
 43069  01677C  20E2               	addwfc	fsr1h,w,c
 43070  01677E  6EDA               	movwf	fsr2h,c
 43071  016780  AEDF               	btfss	indf2,7,c
 43072  016782  D002               	goto	l10502
 43073                           
 43074                           ;stkvar	_aexp @ sp[(-13)+11]
 43075  016784  0EFE               	movlw	-2
 43076  016786  80E3               	bsf	plusw1,0,c
 43077  016788                     l10502:
 43078                           
 43079                           ;stkvar	_aexp @ sp[(-13)+11]
 43080  016788  0EFE               	movlw	-2
 43081  01678A  50E3               	movf	plusw1,w,c
 43082  01678C  B4D8               	btfsc	status,2,c
 43083  01678E  D01F               	goto	l10510
 43084                           
 43085                           ;stkvar	_aexp @ sp[(-13)+11]
 43086  016790  0EFE               	movlw	-2
 43087  016792  28E3               	incf	plusw1,w,c
 43088  016794  A4D8               	btfss	status,2,c
 43089  016796  D018               	goto	l10508
 43090  016798  0E00               	movlw	0
 43091  01679A  6E32               	movwf	(btemp+8)^0,c
 43092  01679C  0E00               	movlw	0
 43093  01679E  6E33               	movwf	(btemp+9)^0,c
 43094  0167A0  0E00               	movlw	0
 43095  0167A2  6E34               	movwf	(btemp+10)^0,c
 43096  0167A4  0E00               	movlw	0
 43097  0167A6  6E35               	movwf	(btemp+11)^0,c
 43098                           
 43099                           ;stkvar	_a @ sp[(-13)+-8]
 43100  0167A8  0EEB               	movlw	-21
 43101  0167AA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43102  0167B0  0EEC               	movlw	-20
 43103  0167B2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43104  0167B8  0EED               	movlw	-19
 43105  0167BA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43106  0167C0  0EEE               	movlw	-18
 43107  0167C2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43108  0167C8                     l10508:
 43109                           
 43110                           ;stkvar	_a @ sp[(-13)+-8]
 43111  0167C8  0EED               	movlw	-19
 43112  0167CA  8EE3               	bsf	plusw1,7,c
 43113  0167CC  D018               	goto	l10512
 43114  0167CE                     l10510:
 43115  0167CE  0E00               	movlw	0
 43116  0167D0  6E32               	movwf	(btemp+8)^0,c
 43117  0167D2  0E00               	movlw	0
 43118  0167D4  6E33               	movwf	(btemp+9)^0,c
 43119  0167D6  0E00               	movlw	0
 43120  0167D8  6E34               	movwf	(btemp+10)^0,c
 43121  0167DA  0E00               	movlw	0
 43122  0167DC  6E35               	movwf	(btemp+11)^0,c
 43123                           
 43124                           ;stkvar	_a @ sp[(-13)+-8]
 43125  0167DE  0EEB               	movlw	-21
 43126  0167E0  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43127  0167E6  0EEC               	movlw	-20
 43128  0167E8  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43129  0167EE  0EED               	movlw	-19
 43130  0167F0  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43131  0167F6  0EEE               	movlw	-18
 43132  0167F8  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43133  0167FE                     l10512:
 43134                           
 43135                           ;stkvar	_aexp @ sp[(-13)+11]
 43136  0167FE  0EFE               	movlw	-2
 43137  016800  50E3               	movf	plusw1,w,c
 43138  016802  B4D8               	btfsc	status,2,c
 43139  016804  D004               	goto	u8660
 43140                           
 43141                           ;stkvar	_bexp @ sp[(-13)+10]
 43142  016806  0EFD               	movlw	-3
 43143  016808  50E3               	movf	plusw1,w,c
 43144  01680A  A4D8               	btfss	status,2,c
 43145  01680C  D009               	goto	l10520
 43146  01680E                     u8660:
 43147  01680E  0E00               	movlw	0
 43148  016810  6E2A               	movwf	btemp^0,c
 43149  016812  0E00               	movlw	0
 43150  016814  6E2B               	movwf	(btemp+1)^0,c
 43151  016816  0E00               	movlw	0
 43152  016818  6E2C               	movwf	(btemp+2)^0,c
 43153  01681A  0E00               	movlw	0
 43154  01681C  6E2D               	movwf	(btemp+3)^0,c
 43155  01681E  D332               	goto	l3346
 43156  016820                     l10520:
 43157                           
 43158                           ;stkvar	_b @ sp[(-13)+-4]
 43159  016820  0EEF               	movlw	-17
 43160  016822  006F FF8C  F035    	movff	plusw1,btemp+11
 43161                           
 43162                           ;stkvar	_a @ sp[(-13)+-8]
 43163  016828  0EED               	movlw	237
 43164  01682A  24E1               	addwf	fsr1l,w,c
 43165  01682C  6ED9               	movwf	fsr2l,c
 43166  01682E  0EFF               	movlw	255
 43167  016830  20E2               	addwfc	fsr1h,w,c
 43168  016832  6EDA               	movwf	fsr2h,c
 43169  016834  50DF               	movf	indf2,w,c
 43170  016836  0235               	mulwf	(btemp+11)^0,c
 43171                           
 43172                           ;stkvar	_temp @ sp[(-13)+8]
 43173  016838  0EFB               	movlw	-5
 43174  01683A  006F FFCF FFE3     	movff	prodl,plusw1
 43175  016840  0EFC               	movlw	-4
 43176  016842  006F FFD3 FFE3     	movff	prodh,plusw1
 43177                           
 43178                           ;stkvar	_temp @ sp[(-13)+8]
 43179  016848  0EFB               	movlw	-5
 43180  01684A  006F FF8C  F035    	movff	plusw1,btemp+11
 43181  016850  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43182  016856  6A2F               	clrf	(btemp+5)^0,c
 43183  016858  6A30               	clrf	(btemp+6)^0,c
 43184  01685A  6A31               	clrf	(btemp+7)^0,c
 43185                           
 43186                           ;stkvar	_grs @ sp[(-13)+4]
 43187  01685C  0EF7               	movlw	-9
 43188  01685E  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43189  016864  0EF8               	movlw	-8
 43190  016866  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43191  01686C  0EF9               	movlw	-7
 43192  01686E  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43193  016874  0EFA               	movlw	-6
 43194  016876  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43195                           
 43196                           ;stkvar	_temp @ sp[(-13)+8]
 43197  01687C  0EFC               	movlw	252
 43198  01687E  24E1               	addwf	fsr1l,w,c
 43199  016880  6ED9               	movwf	fsr2l,c
 43200  016882  0EFF               	movlw	255
 43201  016884  20E2               	addwfc	fsr1h,w,c
 43202  016886  6EDA               	movwf	fsr2h,c
 43203  016888  50DF               	movf	indf2,w,c
 43204  01688A  6E35               	movwf	(btemp+11)^0,c
 43205  01688C  0060  F0D4  F02E   	movff	btemp+11,btemp+4
 43206  016892  6A2F               	clrf	(btemp+5)^0,c
 43207  016894  6A30               	clrf	(btemp+6)^0,c
 43208  016896  6A31               	clrf	(btemp+7)^0,c
 43209                           
 43210                           ;stkvar	_prod @ sp[(-13)+0]
 43211  016898  0EF3               	movlw	-13
 43212  01689A  0060  F0BB  FFE3   	movff	btemp+4,plusw1
 43213  0168A0  0EF4               	movlw	-12
 43214  0168A2  0060  F0BF  FFE3   	movff	btemp+5,plusw1
 43215  0168A8  0EF5               	movlw	-11
 43216  0168AA  0060  F0C3  FFE3   	movff	btemp+6,plusw1
 43217  0168B0  0EF6               	movlw	-10
 43218  0168B2  0060  F0C7  FFE3   	movff	btemp+7,plusw1
 43219                           
 43220                           ;stkvar	_b @ sp[(-13)+-4]
 43221  0168B8  0EF0               	movlw	240
 43222  0168BA  24E1               	addwf	fsr1l,w,c
 43223  0168BC  6ED9               	movwf	fsr2l,c
 43224  0168BE  0EFF               	movlw	255
 43225  0168C0  20E2               	addwfc	fsr1h,w,c
 43226  0168C2  6EDA               	movwf	fsr2h,c
 43227  0168C4  50DF               	movf	indf2,w,c
 43228  0168C6  6E35               	movwf	(btemp+11)^0,c
 43229                           
 43230                           ;stkvar	_a @ sp[(-13)+-8]
 43231  0168C8  0EEC               	movlw	236
 43232  0168CA  24E1               	addwf	fsr1l,w,c
 43233  0168CC  6ED9               	movwf	fsr2l,c
 43234  0168CE  0EFF               	movlw	255
 43235  0168D0  20E2               	addwfc	fsr1h,w,c
 43236  0168D2  6EDA               	movwf	fsr2h,c
 43237  0168D4  50DF               	movf	indf2,w,c
 43238  0168D6  0235               	mulwf	(btemp+11)^0,c
 43239                           
 43240                           ;stkvar	_temp @ sp[(-13)+8]
 43241  0168D8  0EFB               	movlw	-5
 43242  0168DA  006F FFCF FFE3     	movff	prodl,plusw1
 43243  0168E0  0EFC               	movlw	-4
 43244  0168E2  006F FFD3 FFE3     	movff	prodh,plusw1
 43245                           
 43246                           ;stkvar	_grs @ sp[(-13)+4]
 43247  0168E8  50E1               	movf	fsr1l,w,c
 43248  0168EA  0FF7               	addlw	-9
 43249  0168EC  6ED9               	movwf	fsr2l,c
 43250  0168EE  50E2               	movf	fsr1h,w,c
 43251  0168F0  6EDA               	movwf	fsr2h,c
 43252  0168F2  0EFF               	movlw	255
 43253  0168F4  22DA               	addwfc	fsr2h,f,c
 43254                           
 43255                           ;stkvar	_temp @ sp[(-13)+8]
 43256  0168F6  0EFB               	movlw	-5
 43257  0168F8  50E3               	movf	plusw1,w,c
 43258  0168FA  26DE               	addwf	postinc2,f,c
 43259  0168FC  0E00               	movlw	0
 43260  0168FE  22DE               	addwfc	postinc2,f,c
 43261  016900  22DE               	addwfc	postinc2,f,c
 43262  016902  22DE               	addwfc	postinc2,f,c
 43263                           
 43264                           ;stkvar	_prod @ sp[(-13)+0]
 43265  016904  50E1               	movf	fsr1l,w,c
 43266  016906  0FF3               	addlw	-13
 43267  016908  6ED9               	movwf	fsr2l,c
 43268  01690A  50E2               	movf	fsr1h,w,c
 43269  01690C  6EDA               	movwf	fsr2h,c
 43270  01690E  0EFF               	movlw	255
 43271  016910  22DA               	addwfc	fsr2h,f,c
 43272                           
 43273                           ;stkvar	_temp @ sp[(-13)+8]
 43274  016912  0EFC               	movlw	252
 43275  016914  24E1               	addwf	fsr1l,w,c
 43276  016916  6EE9               	movwf	fsr0l,c
 43277  016918  0EFF               	movlw	255
 43278  01691A  20E2               	addwfc	fsr1h,w,c
 43279  01691C  6EEA               	movwf	fsr0h,c
 43280  01691E  50EF               	movf	indf0,w,c
 43281  016920  26DE               	addwf	postinc2,f,c
 43282  016922  0E00               	movlw	0
 43283  016924  22DE               	addwfc	postinc2,f,c
 43284  016926  22DE               	addwfc	postinc2,f,c
 43285  016928  22DE               	addwfc	postinc2,f,c
 43286                           
 43287                           ;stkvar	_b @ sp[(-13)+-4]
 43288  01692A  0EF1               	movlw	241
 43289  01692C  24E1               	addwf	fsr1l,w,c
 43290  01692E  6ED9               	movwf	fsr2l,c
 43291  016930  0EFF               	movlw	255
 43292  016932  20E2               	addwfc	fsr1h,w,c
 43293  016934  6EDA               	movwf	fsr2h,c
 43294  016936  50DF               	movf	indf2,w,c
 43295  016938  6E35               	movwf	(btemp+11)^0,c
 43296                           
 43297                           ;stkvar	_a @ sp[(-13)+-8]
 43298  01693A  0EEB               	movlw	-21
 43299  01693C  50E3               	movf	plusw1,w,c
 43300  01693E  0235               	mulwf	(btemp+11)^0,c
 43301                           
 43302                           ;stkvar	_temp @ sp[(-13)+8]
 43303  016940  0EFB               	movlw	-5
 43304  016942  006F FFCF FFE3     	movff	prodl,plusw1
 43305  016948  0EFC               	movlw	-4
 43306  01694A  006F FFD3 FFE3     	movff	prodh,plusw1
 43307                           
 43308                           ;stkvar	_grs @ sp[(-13)+4]
 43309  016950  50E1               	movf	fsr1l,w,c
 43310  016952  0FF7               	addlw	-9
 43311  016954  6ED9               	movwf	fsr2l,c
 43312  016956  50E2               	movf	fsr1h,w,c
 43313  016958  6EDA               	movwf	fsr2h,c
 43314  01695A  0EFF               	movlw	255
 43315  01695C  22DA               	addwfc	fsr2h,f,c
 43316                           
 43317                           ;stkvar	_temp @ sp[(-13)+8]
 43318  01695E  0EFB               	movlw	-5
 43319  016960  50E3               	movf	plusw1,w,c
 43320  016962  26DE               	addwf	postinc2,f,c
 43321  016964  0E00               	movlw	0
 43322  016966  22DE               	addwfc	postinc2,f,c
 43323  016968  22DE               	addwfc	postinc2,f,c
 43324  01696A  22DE               	addwfc	postinc2,f,c
 43325                           
 43326                           ;stkvar	_prod @ sp[(-13)+0]
 43327  01696C  50E1               	movf	fsr1l,w,c
 43328  01696E  0FF3               	addlw	-13
 43329  016970  6ED9               	movwf	fsr2l,c
 43330  016972  50E2               	movf	fsr1h,w,c
 43331  016974  6EDA               	movwf	fsr2h,c
 43332  016976  0EFF               	movlw	255
 43333  016978  22DA               	addwfc	fsr2h,f,c
 43334                           
 43335                           ;stkvar	_temp @ sp[(-13)+8]
 43336  01697A  0EFC               	movlw	252
 43337  01697C  24E1               	addwf	fsr1l,w,c
 43338  01697E  6EE9               	movwf	fsr0l,c
 43339  016980  0EFF               	movlw	255
 43340  016982  20E2               	addwfc	fsr1h,w,c
 43341  016984  6EEA               	movwf	fsr0h,c
 43342  016986  50EF               	movf	indf0,w,c
 43343  016988  26DE               	addwf	postinc2,f,c
 43344  01698A  0E00               	movlw	0
 43345  01698C  22DE               	addwfc	postinc2,f,c
 43346  01698E  22DE               	addwfc	postinc2,f,c
 43347  016990  22DE               	addwfc	postinc2,f,c
 43348                           
 43349                           ;stkvar	_grs @ sp[(-13)+4]
 43350  016992  50E1               	movf	fsr1l,w,c
 43351  016994  0FF7               	addlw	-9
 43352  016996  6ED9               	movwf	fsr2l,c
 43353  016998  50E2               	movf	fsr1h,w,c
 43354  01699A  6EDA               	movwf	fsr2h,c
 43355  01699C  0EFF               	movlw	255
 43356  01699E  22DA               	addwfc	fsr2h,f,c
 43357  0169A0  0E08               	movlw	8
 43358  0169A2                     u8675:
 43359  0169A2  90D8               	bcf	status,0,c
 43360  0169A4  36DE               	rlcf	postinc2,f,c
 43361  0169A6  36DE               	rlcf	postinc2,f,c
 43362  0169A8  36DE               	rlcf	postinc2,f,c
 43363  0169AA  36DD               	rlcf	postdec2,f,c
 43364  0169AC  52DD               	movf	postdec2,f,c
 43365  0169AE  52DD               	movf	postdec2,f,c
 43366  0169B0  2EE8               	decfsz	wreg,f,c
 43367  0169B2  D7F7               	goto	u8675
 43368                           
 43369                           ;stkvar	_b @ sp[(-13)+-4]
 43370  0169B4  0EF0               	movlw	240
 43371  0169B6  24E1               	addwf	fsr1l,w,c
 43372  0169B8  6ED9               	movwf	fsr2l,c
 43373  0169BA  0EFF               	movlw	255
 43374  0169BC  20E2               	addwfc	fsr1h,w,c
 43375  0169BE  6EDA               	movwf	fsr2h,c
 43376  0169C0  50DF               	movf	indf2,w,c
 43377  0169C2  6E35               	movwf	(btemp+11)^0,c
 43378                           
 43379                           ;stkvar	_a @ sp[(-13)+-8]
 43380  0169C4  0EEB               	movlw	-21
 43381  0169C6  50E3               	movf	plusw1,w,c
 43382  0169C8  0235               	mulwf	(btemp+11)^0,c
 43383                           
 43384                           ;stkvar	_temp @ sp[(-13)+8]
 43385  0169CA  0EFB               	movlw	-5
 43386  0169CC  006F FFCF FFE3     	movff	prodl,plusw1
 43387  0169D2  0EFC               	movlw	-4
 43388  0169D4  006F FFD3 FFE3     	movff	prodh,plusw1
 43389                           
 43390                           ;stkvar	_temp @ sp[(-13)+8]
 43391  0169DA  0EFB               	movlw	-5
 43392  0169DC  006F FF8C  F034    	movff	plusw1,btemp+10
 43393  0169E2  0EFC               	movlw	-4
 43394  0169E4  006F FF8C  F035    	movff	plusw1,btemp+11
 43395                           
 43396                           ;stkvar	_grs @ sp[(-13)+4]
 43397  0169EA  50E1               	movf	fsr1l,w,c
 43398  0169EC  0FF7               	addlw	-9
 43399  0169EE  6ED9               	movwf	fsr2l,c
 43400  0169F0  50E2               	movf	fsr1h,w,c
 43401  0169F2  6EDA               	movwf	fsr2h,c
 43402  0169F4  0EFF               	movlw	255
 43403  0169F6  22DA               	addwfc	fsr2h,f,c
 43404  0169F8  5034               	movf	(btemp+10)^0,w,c
 43405  0169FA  26DE               	addwf	postinc2,f,c
 43406  0169FC  5035               	movf	(btemp+11)^0,w,c
 43407  0169FE  22DE               	addwfc	postinc2,f,c
 43408  016A00  0E00               	movlw	0
 43409  016A02  22DE               	addwfc	postinc2,f,c
 43410  016A04  22DE               	addwfc	postinc2,f,c
 43411                           
 43412                           ;stkvar	_b @ sp[(-13)+-4]
 43413  016A06  0EEF               	movlw	-17
 43414  016A08  006F FF8C  F035    	movff	plusw1,btemp+11
 43415                           
 43416                           ;stkvar	_a @ sp[(-13)+-8]
 43417  016A0E  0EEC               	movlw	236
 43418  016A10  24E1               	addwf	fsr1l,w,c
 43419  016A12  6ED9               	movwf	fsr2l,c
 43420  016A14  0EFF               	movlw	255
 43421  016A16  20E2               	addwfc	fsr1h,w,c
 43422  016A18  6EDA               	movwf	fsr2h,c
 43423  016A1A  50DF               	movf	indf2,w,c
 43424  016A1C  0235               	mulwf	(btemp+11)^0,c
 43425                           
 43426                           ;stkvar	_temp @ sp[(-13)+8]
 43427  016A1E  0EFB               	movlw	-5
 43428  016A20  006F FFCF FFE3     	movff	prodl,plusw1
 43429  016A26  0EFC               	movlw	-4
 43430  016A28  006F FFD3 FFE3     	movff	prodh,plusw1
 43431                           
 43432                           ;stkvar	_temp @ sp[(-13)+8]
 43433  016A2E  0EFB               	movlw	-5
 43434  016A30  006F FF8C  F034    	movff	plusw1,btemp+10
 43435  016A36  0EFC               	movlw	-4
 43436  016A38  006F FF8C  F035    	movff	plusw1,btemp+11
 43437                           
 43438                           ;stkvar	_grs @ sp[(-13)+4]
 43439  016A3E  50E1               	movf	fsr1l,w,c
 43440  016A40  0FF7               	addlw	-9
 43441  016A42  6ED9               	movwf	fsr2l,c
 43442  016A44  50E2               	movf	fsr1h,w,c
 43443  016A46  6EDA               	movwf	fsr2h,c
 43444  016A48  0EFF               	movlw	255
 43445  016A4A  22DA               	addwfc	fsr2h,f,c
 43446  016A4C  5034               	movf	(btemp+10)^0,w,c
 43447  016A4E  26DE               	addwf	postinc2,f,c
 43448  016A50  5035               	movf	(btemp+11)^0,w,c
 43449  016A52  22DE               	addwfc	postinc2,f,c
 43450  016A54  0E00               	movlw	0
 43451  016A56  22DE               	addwfc	postinc2,f,c
 43452  016A58  22DE               	addwfc	postinc2,f,c
 43453                           
 43454                           ;stkvar	_grs @ sp[(-13)+4]
 43455  016A5A  50E1               	movf	fsr1l,w,c
 43456  016A5C  0FF7               	addlw	-9
 43457  016A5E  6ED9               	movwf	fsr2l,c
 43458  016A60  50E2               	movf	fsr1h,w,c
 43459  016A62  6EDA               	movwf	fsr2h,c
 43460  016A64  0EFF               	movlw	255
 43461  016A66  22DA               	addwfc	fsr2h,f,c
 43462  016A68  0E08               	movlw	8
 43463  016A6A                     u8685:
 43464  016A6A  90D8               	bcf	status,0,c
 43465  016A6C  36DE               	rlcf	postinc2,f,c
 43466  016A6E  36DE               	rlcf	postinc2,f,c
 43467  016A70  36DE               	rlcf	postinc2,f,c
 43468  016A72  36DD               	rlcf	postdec2,f,c
 43469  016A74  52DD               	movf	postdec2,f,c
 43470  016A76  52DD               	movf	postdec2,f,c
 43471  016A78  2EE8               	decfsz	wreg,f,c
 43472  016A7A  D7F7               	goto	u8685
 43473                           
 43474                           ;stkvar	_b @ sp[(-13)+-4]
 43475  016A7C  0EEF               	movlw	-17
 43476  016A7E  006F FF8C  F035    	movff	plusw1,btemp+11
 43477                           
 43478                           ;stkvar	_a @ sp[(-13)+-8]
 43479  016A84  0EEB               	movlw	-21
 43480  016A86  50E3               	movf	plusw1,w,c
 43481  016A88  0235               	mulwf	(btemp+11)^0,c
 43482                           
 43483                           ;stkvar	_temp @ sp[(-13)+8]
 43484  016A8A  0EFB               	movlw	-5
 43485  016A8C  006F FFCF FFE3     	movff	prodl,plusw1
 43486  016A92  0EFC               	movlw	-4
 43487  016A94  006F FFD3 FFE3     	movff	prodh,plusw1
 43488                           
 43489                           ;stkvar	_temp @ sp[(-13)+8]
 43490  016A9A  0EFB               	movlw	-5
 43491  016A9C  006F FF8C  F034    	movff	plusw1,btemp+10
 43492  016AA2  0EFC               	movlw	-4
 43493  016AA4  006F FF8C  F035    	movff	plusw1,btemp+11
 43494                           
 43495                           ;stkvar	_grs @ sp[(-13)+4]
 43496  016AAA  50E1               	movf	fsr1l,w,c
 43497  016AAC  0FF7               	addlw	-9
 43498  016AAE  6ED9               	movwf	fsr2l,c
 43499  016AB0  50E2               	movf	fsr1h,w,c
 43500  016AB2  6EDA               	movwf	fsr2h,c
 43501  016AB4  0EFF               	movlw	255
 43502  016AB6  22DA               	addwfc	fsr2h,f,c
 43503  016AB8  5034               	movf	(btemp+10)^0,w,c
 43504  016ABA  26DE               	addwf	postinc2,f,c
 43505  016ABC  5035               	movf	(btemp+11)^0,w,c
 43506  016ABE  22DE               	addwfc	postinc2,f,c
 43507  016AC0  0E00               	movlw	0
 43508  016AC2  22DE               	addwfc	postinc2,f,c
 43509  016AC4  22DE               	addwfc	postinc2,f,c
 43510                           
 43511                           ;stkvar	_b @ sp[(-13)+-4]
 43512  016AC6  0EF0               	movlw	240
 43513  016AC8  24E1               	addwf	fsr1l,w,c
 43514  016ACA  6ED9               	movwf	fsr2l,c
 43515  016ACC  0EFF               	movlw	255
 43516  016ACE  20E2               	addwfc	fsr1h,w,c
 43517  016AD0  6EDA               	movwf	fsr2h,c
 43518  016AD2  50DF               	movf	indf2,w,c
 43519  016AD4  6E35               	movwf	(btemp+11)^0,c
 43520                           
 43521                           ;stkvar	_a @ sp[(-13)+-8]
 43522  016AD6  0EED               	movlw	237
 43523  016AD8  24E1               	addwf	fsr1l,w,c
 43524  016ADA  6ED9               	movwf	fsr2l,c
 43525  016ADC  0EFF               	movlw	255
 43526  016ADE  20E2               	addwfc	fsr1h,w,c
 43527  016AE0  6EDA               	movwf	fsr2h,c
 43528  016AE2  50DF               	movf	indf2,w,c
 43529  016AE4  0235               	mulwf	(btemp+11)^0,c
 43530                           
 43531                           ;stkvar	_temp @ sp[(-13)+8]
 43532  016AE6  0EFB               	movlw	-5
 43533  016AE8  006F FFCF FFE3     	movff	prodl,plusw1
 43534  016AEE  0EFC               	movlw	-4
 43535  016AF0  006F FFD3 FFE3     	movff	prodh,plusw1
 43536                           
 43537                           ;stkvar	_temp @ sp[(-13)+8]
 43538  016AF6  0EFB               	movlw	-5
 43539  016AF8  006F FF8C  F034    	movff	plusw1,btemp+10
 43540  016AFE  0EFC               	movlw	-4
 43541  016B00  006F FF8C  F035    	movff	plusw1,btemp+11
 43542                           
 43543                           ;stkvar	_prod @ sp[(-13)+0]
 43544  016B06  50E1               	movf	fsr1l,w,c
 43545  016B08  0FF3               	addlw	-13
 43546  016B0A  6ED9               	movwf	fsr2l,c
 43547  016B0C  50E2               	movf	fsr1h,w,c
 43548  016B0E  6EDA               	movwf	fsr2h,c
 43549  016B10  0EFF               	movlw	255
 43550  016B12  22DA               	addwfc	fsr2h,f,c
 43551  016B14  5034               	movf	(btemp+10)^0,w,c
 43552  016B16  26DE               	addwf	postinc2,f,c
 43553  016B18  5035               	movf	(btemp+11)^0,w,c
 43554  016B1A  22DE               	addwfc	postinc2,f,c
 43555  016B1C  0E00               	movlw	0
 43556  016B1E  22DE               	addwfc	postinc2,f,c
 43557  016B20  22DE               	addwfc	postinc2,f,c
 43558                           
 43559                           ;stkvar	_b @ sp[(-13)+-4]
 43560  016B22  0EF1               	movlw	241
 43561  016B24  24E1               	addwf	fsr1l,w,c
 43562  016B26  6ED9               	movwf	fsr2l,c
 43563  016B28  0EFF               	movlw	255
 43564  016B2A  20E2               	addwfc	fsr1h,w,c
 43565  016B2C  6EDA               	movwf	fsr2h,c
 43566  016B2E  50DF               	movf	indf2,w,c
 43567  016B30  6E35               	movwf	(btemp+11)^0,c
 43568                           
 43569                           ;stkvar	_a @ sp[(-13)+-8]
 43570  016B32  0EEC               	movlw	236
 43571  016B34  24E1               	addwf	fsr1l,w,c
 43572  016B36  6ED9               	movwf	fsr2l,c
 43573  016B38  0EFF               	movlw	255
 43574  016B3A  20E2               	addwfc	fsr1h,w,c
 43575  016B3C  6EDA               	movwf	fsr2h,c
 43576  016B3E  50DF               	movf	indf2,w,c
 43577  016B40  0235               	mulwf	(btemp+11)^0,c
 43578                           
 43579                           ;stkvar	_temp @ sp[(-13)+8]
 43580  016B42  0EFB               	movlw	-5
 43581  016B44  006F FFCF FFE3     	movff	prodl,plusw1
 43582  016B4A  0EFC               	movlw	-4
 43583  016B4C  006F FFD3 FFE3     	movff	prodh,plusw1
 43584                           
 43585                           ;stkvar	_temp @ sp[(-13)+8]
 43586  016B52  0EFB               	movlw	-5
 43587  016B54  006F FF8C  F034    	movff	plusw1,btemp+10
 43588  016B5A  0EFC               	movlw	-4
 43589  016B5C  006F FF8C  F035    	movff	plusw1,btemp+11
 43590                           
 43591                           ;stkvar	_prod @ sp[(-13)+0]
 43592  016B62  50E1               	movf	fsr1l,w,c
 43593  016B64  0FF3               	addlw	-13
 43594  016B66  6ED9               	movwf	fsr2l,c
 43595  016B68  50E2               	movf	fsr1h,w,c
 43596  016B6A  6EDA               	movwf	fsr2h,c
 43597  016B6C  0EFF               	movlw	255
 43598  016B6E  22DA               	addwfc	fsr2h,f,c
 43599  016B70  5034               	movf	(btemp+10)^0,w,c
 43600  016B72  26DE               	addwf	postinc2,f,c
 43601  016B74  5035               	movf	(btemp+11)^0,w,c
 43602  016B76  22DE               	addwfc	postinc2,f,c
 43603  016B78  0E00               	movlw	0
 43604  016B7A  22DE               	addwfc	postinc2,f,c
 43605  016B7C  22DE               	addwfc	postinc2,f,c
 43606                           
 43607                           ;stkvar	_b @ sp[(-13)+-4]
 43608  016B7E  0EF1               	movlw	241
 43609  016B80  24E1               	addwf	fsr1l,w,c
 43610  016B82  6ED9               	movwf	fsr2l,c
 43611  016B84  0EFF               	movlw	255
 43612  016B86  20E2               	addwfc	fsr1h,w,c
 43613  016B88  6EDA               	movwf	fsr2h,c
 43614  016B8A  50DF               	movf	indf2,w,c
 43615  016B8C  6E35               	movwf	(btemp+11)^0,c
 43616                           
 43617                           ;stkvar	_a @ sp[(-13)+-8]
 43618  016B8E  0EED               	movlw	237
 43619  016B90  24E1               	addwf	fsr1l,w,c
 43620  016B92  6ED9               	movwf	fsr2l,c
 43621  016B94  0EFF               	movlw	255
 43622  016B96  20E2               	addwfc	fsr1h,w,c
 43623  016B98  6EDA               	movwf	fsr2h,c
 43624  016B9A  50DF               	movf	indf2,w,c
 43625  016B9C  0235               	mulwf	(btemp+11)^0,c
 43626                           
 43627                           ;stkvar	_temp @ sp[(-13)+8]
 43628  016B9E  0EFB               	movlw	-5
 43629  016BA0  006F FFCF FFE3     	movff	prodl,plusw1
 43630  016BA6  0EFC               	movlw	-4
 43631  016BA8  006F FFD3 FFE3     	movff	prodh,plusw1
 43632                           
 43633                           ;stkvar	_temp @ sp[(-13)+8]
 43634  016BAE  0EFB               	movlw	-5
 43635  016BB0  006F FF8C  F034    	movff	plusw1,btemp+10
 43636  016BB6  0EFC               	movlw	-4
 43637  016BB8  006F FF8C  F035    	movff	plusw1,btemp+11
 43638  016BBE  5034               	movf	(btemp+10)^0,w,c
 43639  016BC0  6E2E               	movwf	(btemp+4)^0,c
 43640  016BC2  5035               	movf	(btemp+11)^0,w,c
 43641  016BC4  6E2F               	movwf	(btemp+5)^0,c
 43642  016BC6  6A30               	clrf	(btemp+6)^0,c
 43643  016BC8  6A31               	clrf	(btemp+7)^0,c
 43644  016BCA  0060  F0C0  F031   	movff	btemp+6,btemp+7
 43645  016BD0  0060  F0BC  F030   	movff	btemp+5,btemp+6
 43646  016BD6  0060  F0B8  F02F   	movff	btemp+4,btemp+5
 43647  016BDC  6A2E               	clrf	(btemp+4)^0,c
 43648                           
 43649                           ;stkvar	_prod @ sp[(-13)+0]
 43650  016BDE  50E1               	movf	fsr1l,w,c
 43651  016BE0  0FF3               	addlw	-13
 43652  016BE2  6ED9               	movwf	fsr2l,c
 43653  016BE4  50E2               	movf	fsr1h,w,c
 43654  016BE6  6EDA               	movwf	fsr2h,c
 43655  016BE8  0EFF               	movlw	255
 43656  016BEA  22DA               	addwfc	fsr2h,f,c
 43657  016BEC  502E               	movf	(btemp+4)^0,w,c
 43658  016BEE  26DE               	addwf	postinc2,f,c
 43659  016BF0  502F               	movf	(btemp+5)^0,w,c
 43660  016BF2  22DE               	addwfc	postinc2,f,c
 43661  016BF4  5030               	movf	(btemp+6)^0,w,c
 43662  016BF6  22DE               	addwfc	postinc2,f,c
 43663  016BF8  5031               	movf	(btemp+7)^0,w,c
 43664  016BFA  22DE               	addwfc	postinc2,f,c
 43665                           
 43666                           ;stkvar	_prod @ sp[(-13)+0]
 43667  016BFC  50E1               	movf	fsr1l,w,c
 43668  016BFE  0FF3               	addlw	-13
 43669  016C00  6ED9               	movwf	fsr2l,c
 43670  016C02  50E2               	movf	fsr1h,w,c
 43671  016C04  6EDA               	movwf	fsr2h,c
 43672  016C06  0EFF               	movlw	255
 43673  016C08  22DA               	addwfc	fsr2h,f,c
 43674                           
 43675                           ;stkvar	_grs @ sp[(-13)+4]
 43676  016C0A  0EFA               	movlw	250
 43677  016C0C  24E1               	addwf	fsr1l,w,c
 43678  016C0E  6EE9               	movwf	fsr0l,c
 43679  016C10  0EFF               	movlw	255
 43680  016C12  20E2               	addwfc	fsr1h,w,c
 43681  016C14  6EEA               	movwf	fsr0h,c
 43682  016C16  50EF               	movf	indf0,w,c
 43683  016C18  26DE               	addwf	postinc2,f,c
 43684  016C1A  0E00               	movlw	0
 43685  016C1C  22DE               	addwfc	postinc2,f,c
 43686  016C1E  22DE               	addwfc	postinc2,f,c
 43687  016C20  22DE               	addwfc	postinc2,f,c
 43688                           
 43689                           ;stkvar	_grs @ sp[(-13)+4]
 43690  016C22  50E1               	movf	fsr1l,w,c
 43691  016C24  0FF7               	addlw	-9
 43692  016C26  6ED9               	movwf	fsr2l,c
 43693  016C28  50E2               	movf	fsr1h,w,c
 43694  016C2A  6EDA               	movwf	fsr2h,c
 43695  016C2C  0EFF               	movlw	255
 43696  016C2E  22DA               	addwfc	fsr2h,f,c
 43697  016C30  0E08               	movlw	8
 43698  016C32                     u8695:
 43699  016C32  90D8               	bcf	status,0,c
 43700  016C34  36DE               	rlcf	postinc2,f,c
 43701  016C36  36DE               	rlcf	postinc2,f,c
 43702  016C38  36DE               	rlcf	postinc2,f,c
 43703  016C3A  36DD               	rlcf	postdec2,f,c
 43704  016C3C  52DD               	movf	postdec2,f,c
 43705  016C3E  52DD               	movf	postdec2,f,c
 43706  016C40  2EE8               	decfsz	wreg,f,c
 43707  016C42  D7F7               	goto	u8695
 43708  016C44  0E82               	movlw	130
 43709  016C46  6E34               	movwf	(btemp+10)^0,c
 43710  016C48  0EFF               	movlw	255
 43711  016C4A  6E35               	movwf	(btemp+11)^0,c
 43712                           
 43713                           ;stkvar	_bexp @ sp[(-13)+10]
 43714  016C4C  0EFD               	movlw	-3
 43715  016C4E  50E3               	movf	plusw1,w,c
 43716  016C50  6E32               	movwf	(btemp+8)^0,c
 43717  016C52  6A33               	clrf	(btemp+9)^0,c
 43718                           
 43719                           ;stkvar	_aexp @ sp[(-13)+11]
 43720  016C54  0EFE               	movlw	-2
 43721  016C56  50E3               	movf	plusw1,w,c
 43722  016C58  2632               	addwf	(btemp+8)^0,f,c
 43723  016C5A  0E00               	movlw	0
 43724  016C5C  2233               	addwfc	(btemp+9)^0,f,c
 43725  016C5E  5034               	movf	(btemp+10)^0,w,c
 43726  016C60  2632               	addwf	(btemp+8)^0,f,c
 43727  016C62  5035               	movf	(btemp+11)^0,w,c
 43728  016C64  2233               	addwfc	(btemp+9)^0,f,c
 43729                           
 43730                           ;stkvar	_temp @ sp[(-13)+8]
 43731  016C66  0EFB               	movlw	-5
 43732  016C68  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43733  016C6E  0EFC               	movlw	-4
 43734  016C70  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43735  016C76  D021               	goto	l10582
 43736  016C78                     l10572:
 43737                           
 43738                           ;stkvar	_prod @ sp[(-13)+0]
 43739  016C78  90D8               	bcf	status,0,c
 43740  016C7A  0EF3               	movlw	-13
 43741  016C7C  36E3               	rlcf	plusw1,f,c
 43742  016C7E  0EF4               	movlw	-12
 43743  016C80  36E3               	rlcf	plusw1,f,c
 43744  016C82  0EF5               	movlw	-11
 43745  016C84  36E3               	rlcf	plusw1,f,c
 43746  016C86  0EF6               	movlw	-10
 43747  016C88  36E3               	rlcf	plusw1,f,c
 43748                           
 43749                           ;stkvar	_grs @ sp[(-13)+4]
 43750  016C8A  0EFA               	movlw	-6
 43751  016C8C  AEE3               	btfss	plusw1,7,c
 43752  016C8E  D002               	goto	l10578
 43753                           
 43754                           ;stkvar	_prod @ sp[(-13)+0]
 43755  016C90  0EF3               	movlw	-13
 43756  016C92  80E3               	bsf	plusw1,0,c
 43757  016C94                     l10578:
 43758                           
 43759                           ;stkvar	_grs @ sp[(-13)+4]
 43760  016C94  90D8               	bcf	status,0,c
 43761  016C96  0EF7               	movlw	-9
 43762  016C98  36E3               	rlcf	plusw1,f,c
 43763  016C9A  0EF8               	movlw	-8
 43764  016C9C  36E3               	rlcf	plusw1,f,c
 43765  016C9E  0EF9               	movlw	-7
 43766  016CA0  36E3               	rlcf	plusw1,f,c
 43767  016CA2  0EFA               	movlw	-6
 43768  016CA4  36E3               	rlcf	plusw1,f,c
 43769                           
 43770                           ;stkvar	_temp @ sp[(-13)+8]
 43771  016CA6  50E1               	movf	fsr1l,w,c
 43772  016CA8  0FFB               	addlw	-5
 43773  016CAA  6ED9               	movwf	fsr2l,c
 43774  016CAC  50E2               	movf	fsr1h,w,c
 43775  016CAE  6EDA               	movwf	fsr2h,c
 43776  016CB0  0EFF               	movlw	255
 43777  016CB2  22DA               	addwfc	fsr2h,f,c
 43778  016CB4  06DE               	decf	postinc2,f,c
 43779  016CB6  0E00               	movlw	0
 43780  016CB8  5ADD               	subwfb	postdec2,f,c
 43781  016CBA                     l10582:
 43782                           
 43783                           ;stkvar	_prod @ sp[(-13)+0]
 43784  016CBA  0EF5               	movlw	-11
 43785  016CBC  AEE3               	btfss	plusw1,7,c
 43786  016CBE  D7DC               	goto	l10572
 43787                           
 43788                           ;stkvar	_aexp @ sp[(-13)+11]
 43789  016CC0  0EFE               	movlw	-2
 43790  016CC2  6AE3               	clrf	plusw1,c
 43791                           
 43792                           ;stkvar	_grs @ sp[(-13)+4]
 43793  016CC4  0EFA               	movlw	-6
 43794  016CC6  AEE3               	btfss	plusw1,7,c
 43795  016CC8  D020               	goto	l10596
 43796                           
 43797                           ;stkvar	_grs @ sp[(-13)+4]
 43798  016CCA  50E1               	movf	fsr1l,w,c
 43799  016CCC  0FF7               	addlw	-9
 43800  016CCE  6ED9               	movwf	fsr2l,c
 43801  016CD0  50E2               	movf	fsr1h,w,c
 43802  016CD2  6EDA               	movwf	fsr2h,c
 43803  016CD4  0EFF               	movlw	255
 43804  016CD6  22DA               	addwfc	fsr2h,f,c
 43805  016CD8  0EFF               	movlw	255
 43806  016CDA  14DE               	andwf	postinc2,w,c
 43807  016CDC  6E32               	movwf	(btemp+8)^0,c
 43808  016CDE  0EFF               	movlw	255
 43809  016CE0  14DE               	andwf	postinc2,w,c
 43810  016CE2  6E33               	movwf	(btemp+9)^0,c
 43811  016CE4  0EFF               	movlw	255
 43812  016CE6  14DE               	andwf	postinc2,w,c
 43813  016CE8  6E34               	movwf	(btemp+10)^0,c
 43814  016CEA  0E7F               	movlw	127
 43815  016CEC  14DE               	andwf	postinc2,w,c
 43816  016CEE  6E35               	movwf	(btemp+11)^0,c
 43817  016CF0  5032               	movf	(btemp+8)^0,w,c
 43818  016CF2  1033               	iorwf	(btemp+9)^0,w,c
 43819  016CF4  1034               	iorwf	(btemp+10)^0,w,c
 43820  016CF6  1035               	iorwf	(btemp+11)^0,w,c
 43821  016CF8  B4D8               	btfsc	status,2,c
 43822  016CFA  D004               	goto	l10592
 43823  016CFC                     u8730:
 43824                           
 43825                           ;stkvar	_aexp @ sp[(-13)+11]
 43826  016CFC  0EFE               	movlw	-2
 43827  016CFE  6AE3               	clrf	plusw1,c
 43828  016D00  2AE3               	incf	plusw1,f,c
 43829  016D02  D003               	goto	l10596
 43830  016D04                     l10592:
 43831                           
 43832                           ;stkvar	_prod @ sp[(-13)+0]
 43833  016D04  0EF3               	movlw	-13
 43834  016D06  B0E3               	btfsc	plusw1,0,c
 43835  016D08  D7F9               	goto	u8730
 43836  016D0A                     l10596:
 43837                           
 43838                           ;stkvar	_aexp @ sp[(-13)+11]
 43839  016D0A  0EFE               	movlw	-2
 43840  016D0C  50E3               	movf	plusw1,w,c
 43841  016D0E  B4D8               	btfsc	status,2,c
 43842  016D10  D036               	goto	l10606
 43843                           
 43844                           ;stkvar	_prod @ sp[(-13)+0]
 43845  016D12  50E1               	movf	fsr1l,w,c
 43846  016D14  0FF3               	addlw	-13
 43847  016D16  6ED9               	movwf	fsr2l,c
 43848  016D18  50E2               	movf	fsr1h,w,c
 43849  016D1A  6EDA               	movwf	fsr2h,c
 43850  016D1C  0EFF               	movlw	255
 43851  016D1E  22DA               	addwfc	fsr2h,f,c
 43852  016D20  2ADE               	incf	postinc2,f,c
 43853  016D22  0E00               	movlw	0
 43854  016D24  22DE               	addwfc	postinc2,f,c
 43855  016D26  22DE               	addwfc	postinc2,f,c
 43856  016D28  22DE               	addwfc	postinc2,f,c
 43857                           
 43858                           ;stkvar	_prod @ sp[(-13)+0]
 43859  016D2A  0EF6               	movlw	-10
 43860  016D2C  A0E3               	btfss	plusw1,0,c
 43861  016D2E  D027               	goto	l10606
 43862  016D30  0E01               	movlw	1
 43863  016D32  6E35               	movwf	(btemp+11)^0,c
 43864                           
 43865                           ;stkvar	_prod @ sp[(-13)+0]
 43866  016D34  50E1               	movf	fsr1l,w,c
 43867  016D36  0FF3               	addlw	-13
 43868  016D38  6ED9               	movwf	fsr2l,c
 43869  016D3A  50E2               	movf	fsr1h,w,c
 43870  016D3C  6EDA               	movwf	fsr2h,c
 43871  016D3E  0EFF               	movlw	255
 43872  016D40  22DA               	addwfc	fsr2h,f,c
 43873  016D42  2835               	incf	(btemp+11)^0,w,c
 43874  016D44  52DE               	movf	postinc2,f,c
 43875  016D46  D008               	goto	u8770
 43876  016D48                     u8775:
 43877  016D48  52DE               	movf	postinc2,f,c
 43878  016D4A  90D8               	bcf	status,0,c
 43879  016D4C  BEDC               	btfsc	preinc2,7,c
 43880  016D4E  80D8               	bsf	status,0,c
 43881  016D50  32DD               	rrcf	postdec2,f,c
 43882  016D52  32DD               	rrcf	postdec2,f,c
 43883  016D54  32DD               	rrcf	postdec2,f,c
 43884  016D56  32DE               	rrcf	postinc2,f,c
 43885  016D58                     u8770:
 43886  016D58  2EE8               	decfsz	wreg,f,c
 43887  016D5A  D7F6               	goto	u8775
 43888                           
 43889                           ;stkvar	_temp @ sp[(-13)+8]
 43890  016D5C  0EFB               	movlw	-5
 43891  016D5E  50E3               	movf	plusw1,w,c
 43892  016D60  0F01               	addlw	1
 43893  016D62  6E2A               	movwf	btemp^0,c
 43894  016D64  0EFB               	movlw	-5
 43895  016D66  0060  F0AB  FFE3   	movff	btemp,plusw1
 43896  016D6C  6A2A               	clrf	btemp^0,c
 43897  016D6E  0EFC               	movlw	-4
 43898  016D70  50E3               	movf	plusw1,w,c
 43899  016D72  202A               	addwfc	btemp^0,w,c
 43900  016D74  6E2A               	movwf	btemp^0,c
 43901  016D76  0EFC               	movlw	-4
 43902  016D78  0060  F0AB  FFE3   	movff	btemp,plusw1
 43903  016D7E                     l10606:
 43904                           
 43905                           ;stkvar	_temp @ sp[(-13)+8]
 43906  016D7E  0EFC               	movlw	-4
 43907  016D80  BEE3               	btfsc	plusw1,7,c
 43908  016D82  D020               	goto	l10610
 43909  016D84  0EFC               	movlw	-4
 43910  016D86  50E3               	movf	plusw1,w,c
 43911  016D88  E104               	bnz	u8780
 43912  016D8A  0EFB               	movlw	-5
 43913  016D8C  28E3               	incf	plusw1,w,c
 43914  016D8E  A0D8               	btfss	status,0,c
 43915  016D90  D019               	goto	l10610
 43916  016D92                     u8780:
 43917  016D92  0E00               	movlw	0
 43918  016D94  6E32               	movwf	(btemp+8)^0,c
 43919  016D96  0E00               	movlw	0
 43920  016D98  6E33               	movwf	(btemp+9)^0,c
 43921  016D9A  0E80               	movlw	128
 43922  016D9C  6E34               	movwf	(btemp+10)^0,c
 43923  016D9E  0E7F               	movlw	127
 43924  016DA0  6E35               	movwf	(btemp+11)^0,c
 43925                           
 43926                           ;stkvar	_prod @ sp[(-13)+0]
 43927  016DA2  0EF3               	movlw	-13
 43928  016DA4  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 43929  016DAA  0EF4               	movlw	-12
 43930  016DAC  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 43931  016DB2  0EF5               	movlw	-11
 43932  016DB4  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 43933  016DBA  0EF6               	movlw	-10
 43934  016DBC  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 43935  016DC2  D044               	goto	l10626
 43936  016DC4                     l10610:
 43937                           
 43938                           ;stkvar	_temp @ sp[(-13)+8]
 43939  016DC4  0EFC               	movlw	-4
 43940  016DC6  BEE3               	btfsc	plusw1,7,c
 43941  016DC8  D007               	goto	u8790
 43942  016DCA  0EFC               	movlw	-4
 43943  016DCC  50E3               	movf	plusw1,w,c
 43944  016DCE  E10F               	bnz	l10616
 43945  016DD0  0EFB               	movlw	-5
 43946  016DD2  04E3               	decf	plusw1,w,c
 43947  016DD4  B0D8               	btfsc	status,0,c
 43948  016DD6  D00B               	goto	l10616
 43949  016DD8                     u8790:
 43950                           
 43951                           ;stkvar	_prod @ sp[(-13)+0]
 43952  016DD8  0EF3               	movlw	-13
 43953  016DDA  6AE3               	clrf	plusw1,c
 43954  016DDC  0EF4               	movlw	-12
 43955  016DDE  6AE3               	clrf	plusw1,c
 43956  016DE0  0EF5               	movlw	-11
 43957  016DE2  6AE3               	clrf	plusw1,c
 43958  016DE4  0EF6               	movlw	-10
 43959  016DE6  6AE3               	clrf	plusw1,c
 43960                           
 43961                           ;stkvar	_sign @ sp[(-13)+12]
 43962  016DE8  0EFF               	movlw	-1
 43963  016DEA  6AE3               	clrf	plusw1,c
 43964  016DEC  D02F               	goto	l10626
 43965  016DEE                     l10616:
 43966                           
 43967                           ;stkvar	_temp @ sp[(-13)+8]
 43968                           ;stkvar	_bexp @ sp[(-13)+10]
 43969  016DEE  0EFB               	movlw	-5
 43970  016DF0  006F FF8C  F02A    	movff	plusw1,btemp
 43971  016DF6  0EFD               	movlw	-3
 43972  016DF8  0060  F0AB  FFE3   	movff	btemp,plusw1
 43973                           
 43974                           ;stkvar	_prod @ sp[(-13)+0]
 43975  016DFE  50E1               	movf	fsr1l,w,c
 43976  016E00  0FF3               	addlw	-13
 43977  016E02  6ED9               	movwf	fsr2l,c
 43978  016E04  50E2               	movf	fsr1h,w,c
 43979  016E06  6EDA               	movwf	fsr2h,c
 43980  016E08  0EFF               	movlw	255
 43981  016E0A  22DA               	addwfc	fsr2h,f,c
 43982  016E0C  0EFF               	movlw	255
 43983  016E0E  16DE               	andwf	postinc2,f,c
 43984  016E10  0EFF               	movlw	255
 43985  016E12  16DE               	andwf	postinc2,f,c
 43986  016E14  0E7F               	movlw	127
 43987  016E16  16DE               	andwf	postinc2,f,c
 43988  016E18  0E00               	movlw	0
 43989  016E1A  16DE               	andwf	postinc2,f,c
 43990                           
 43991                           ;stkvar	_bexp @ sp[(-13)+10]
 43992  016E1C  0EFD               	movlw	-3
 43993  016E1E  A0E3               	btfss	plusw1,0,c
 43994  016E20  D008               	goto	l10624
 43995                           
 43996                           ;stkvar	_prod @ sp[(-13)+0]
 43997  016E22  0EF5               	movlw	245
 43998  016E24  24E1               	addwf	fsr1l,w,c
 43999  016E26  6ED9               	movwf	fsr2l,c
 44000  016E28  0EFF               	movlw	255
 44001  016E2A  20E2               	addwfc	fsr1h,w,c
 44002  016E2C  6EDA               	movwf	fsr2h,c
 44003  016E2E  0E00               	movlw	0
 44004  016E30  8EDB               	bsf	plusw2,7,c
 44005  016E32                     l10624:
 44006                           
 44007                           ;stkvar	_prod @ sp[(-13)+0]
 44008  016E32  0EF6               	movlw	246
 44009  016E34  24E1               	addwf	fsr1l,w,c
 44010  016E36  6ED9               	movwf	fsr2l,c
 44011  016E38  0EFF               	movlw	255
 44012  016E3A  20E2               	addwfc	fsr1h,w,c
 44013  016E3C  6EDA               	movwf	fsr2h,c
 44014                           
 44015                           ;stkvar	_bexp @ sp[(-13)+10]
 44016  016E3E  0EFD               	movlw	-3
 44017  016E40  006F FF8C  F035    	movff	plusw1,btemp+11
 44018  016E46  90D8               	bcf	status,0,c
 44019  016E48  3035               	rrcf	(btemp+11)^0,w,c
 44020  016E4A  6EDF               	movwf	indf2,c
 44021  016E4C                     l10626:
 44022                           
 44023                           ;stkvar	_sign @ sp[(-13)+12]
 44024  016E4C  0EFF               	movlw	-1
 44025  016E4E  006F FF8C  F035    	movff	plusw1,btemp+11
 44026                           
 44027                           ;stkvar	_prod @ sp[(-13)+0]
 44028  016E54  0EF6               	movlw	246
 44029  016E56  24E1               	addwf	fsr1l,w,c
 44030  016E58  6ED9               	movwf	fsr2l,c
 44031  016E5A  0EFF               	movlw	255
 44032  016E5C  20E2               	addwfc	fsr1h,w,c
 44033  016E5E  6EDA               	movwf	fsr2h,c
 44034  016E60  5035               	movf	(btemp+11)^0,w,c
 44035  016E62  12DF               	iorwf	indf2,f,c
 44036                           
 44037                           ;stkvar	_prod @ sp[(-13)+0]
 44038  016E64  0EF3               	movlw	-13
 44039  016E66  006F FF8C  F02A    	movff	plusw1,btemp
 44040  016E6C  0EF4               	movlw	-12
 44041  016E6E  006F FF8C  F02B    	movff	plusw1,btemp+1
 44042  016E74  0EF5               	movlw	-11
 44043  016E76  006F FF8C  F02C    	movff	plusw1,btemp+2
 44044  016E7C  0EF6               	movlw	-10
 44045  016E7E  006F FF8C  F02D    	movff	plusw1,btemp+3
 44046  016E84                     l3346:
 44047                           
 44048                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 44049  016E84  0EEB               	movlw	235
 44050  016E86  26E1               	addwf	fsr1l,f,c
 44051  016E88  0EFF               	movlw	255
 44052  016E8A  22E2               	addwfc	fsr1h,f,c
 44053  016E8C  0012               	return		;funcret
 44054  016E8E                     __end_of___flmul:
 44055                           	opt callstack 0
 44056                           
 44057 ;; *************** function _SYSTEM_Initialize *****************
 44058 ;; Defined at:
 44059 ;;		line 50 in file "mcc_generated_files/mcc.c"
 44060 ;; Parameters:    Size  Location     Type
 44061 ;;		None
 44062 ;; Auto vars:     Size  Location     Type
 44063 ;;		None
 44064 ;; Return value:  Size  Location     Type
 44065 ;;                  1  [STACK] void 
 44066 ;; Registers used:
 44067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 44068 ;; Tracked objects:
 44069 ;;		On entry : 0/0
 44070 ;;		On exit  : 3F/3C
 44071 ;;		Unchanged: 0/0
 44072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44077 ;;Total ram usage:        0 bytes
 44078 ;; Hardware stack levels used:    1
 44079 ;; Hardware stack levels required when called:   17
 44080 ;; This function calls:
 44081 ;;		_ADCC_Initialize
 44082 ;;		_CLKREF_Initialize
 44083 ;;		_CRC_Initialize
 44084 ;;		_DMA1_Initialize
 44085 ;;		_DMA2_Initialize
 44086 ;;		_EXT_INT_Initialize
 44087 ;;		_FVR_Initialize
 44088 ;;		_INTERRUPT_Initialize
 44089 ;;		_OSCILLATOR_Initialize
 44090 ;;		_PIN_MANAGER_Initialize
 44091 ;;		_PMD_Initialize
 44092 ;;		_PWM8_Initialize
 44093 ;;		_SPI1_Initialize
 44094 ;;		_TMR2_Initialize
 44095 ;;		_TMR3_Initialize
 44096 ;;		_TMR5_Initialize
 44097 ;;		_TMR6_Initialize
 44098 ;;		_UART1_Initialize
 44099 ;;		_UART2_Initialize
 44100 ;; This function is called by:
 44101 ;;		_main
 44102 ;; This function uses a reentrant model
 44103 ;;
 44104                           
 44105                           	psect	text155
 44106  001EAC                     __ptext155:
 44107                           	opt callstack 0
 44108  001EAC                     _SYSTEM_Initialize:
 44109                           	opt callstack 13
 44110                           
 44111                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 44112                           
 44113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44114                           ;incstack = 0
 44115  001EAC  ECFA  F00C         	call	_INTERRUPT_Initialize	;wreg free
 44116                           
 44117                           ; BSR set to: 57
 44118                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 44119  001EB0  EC03  F016         	call	_PMD_Initialize	;wreg free
 44120                           
 44121                           ; BSR set to: 57
 44122                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 44123  001EB4  EC28  F009         	call	_PIN_MANAGER_Initialize	;wreg free
 44124                           
 44125                           ; BSR set to: 58
 44126                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 44127  001EB8  ECF8  F015         	call	_OSCILLATOR_Initialize	;wreg free
 44128                           
 44129                           ; BSR set to: 57
 44130                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 44131  001EBC  EC9F  F016         	call	_FVR_Initialize	;wreg free
 44132                           
 44133                           ; BSR set to: 62
 44134                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 44135  001EC0  EC71  F009         	call	_CRC_Initialize	;wreg free
 44136                           
 44137                           ; BSR set to: 0
 44138                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 44139  001EC4  EC28  F00C         	call	_ADCC_Initialize	;wreg free
 44140                           
 44141                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 44142  001EC8  ECCB  F015         	call	_TMR2_Initialize	;wreg free
 44143                           
 44144                           ; BSR set to: 57
 44145                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 44146  001ECC  ECED  F015         	call	_PWM8_Initialize	;wreg free
 44147                           
 44148                           ; BSR set to: 63
 44149                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 44150  001ED0  EC7B  F012         	call	_EXT_INT_Initialize	;wreg free
 44151                           
 44152                           ; BSR set to: 57
 44153                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 44154  001ED4  EC68  F013         	call	_TMR6_Initialize	;wreg free
 44155                           
 44156                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 44157  001ED8  EC10  F010         	call	_TMR3_Initialize	;wreg free
 44158                           
 44159                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 44160  001EDC  ECEC  F00F         	call	_TMR5_Initialize	;wreg free
 44161                           
 44162                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 44163  001EE0  ECC8  F00F         	call	_UART1_Initialize	;wreg free
 44164                           
 44165                           ; BSR set to: 57
 44166                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 44167  001EE4  ECF3  F00D         	call	_UART2_Initialize	;wreg free
 44168                           
 44169                           ; BSR set to: 57
 44170                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 44171  001EE8  ECE2  F015         	call	_SPI1_Initialize	;wreg free
 44172                           
 44173                           ; BSR set to: 61
 44174                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 44175  001EEC  ECAC  F00E         	call	_DMA2_Initialize	;wreg free
 44176                           
 44177                           ; BSR set to: 59
 44178                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 44179  001EF0  ECF3  F00B         	call	_DMA1_Initialize	;wreg free
 44180                           
 44181                           ; BSR set to: 59
 44182                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 44183  001EF4  EC73  F016         	call	_CLKREF_Initialize	;wreg free
 44184                           
 44185                           ; BSR set to: 60
 44186                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 44187  001EF8  0012               	return		;funcret
 44188  001EFA                     __end_of_SYSTEM_Initialize:
 44189                           	opt callstack 0
 44190                           
 44191 ;; *************** function _UART2_Initialize *****************
 44192 ;; Defined at:
 44193 ;;		line 78 in file "mcc_generated_files/uart2.c"
 44194 ;; Parameters:    Size  Location     Type
 44195 ;;		None
 44196 ;; Auto vars:     Size  Location     Type
 44197 ;;		None
 44198 ;; Return value:  Size  Location     Type
 44199 ;;                  1  [STACK] void 
 44200 ;; Registers used:
 44201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44202 ;; Tracked objects:
 44203 ;;		On entry : 3F/39
 44204 ;;		On exit  : 3F/39
 44205 ;;		Unchanged: 0/0
 44206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44211 ;;Total ram usage:        0 bytes
 44212 ;; Hardware stack levels used:    1
 44213 ;; Hardware stack levels required when called:   16
 44214 ;; This function calls:
 44215 ;;		_UART2_SetRxInterruptHandler
 44216 ;;		_UART2_SetTxInterruptHandler
 44217 ;; This function is called by:
 44218 ;;		_SYSTEM_Initialize
 44219 ;; This function uses a reentrant model
 44220 ;;
 44221                           
 44222                           	psect	text156
 44223  001BE6                     __ptext156:
 44224                           	opt callstack 0
 44225  001BE6                     _UART2_Initialize:
 44226                           	opt callstack 13
 44227                           
 44228                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 44229                           
 44230                           ; BSR set to: 60
 44231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44232                           ;incstack = 0
 44233  001BE6  0139               	movlb	57	; () banked
 44234  001BE8  9596               	bcf	150,2,b	;volatile
 44235                           
 44236                           ; BSR set to: 57
 44237                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 44238  001BEA  0EB2               	movlw	low _UART2_Receive_ISR
 44239  001BEC  6EE6               	movwf	postinc1,c
 44240  001BEE  0E2A               	movlw	high _UART2_Receive_ISR
 44241  001BF0  6EE6               	movwf	postinc1,c
 44242  001BF2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 44243  001BF4  6EE6               	movwf	postinc1,c
 44244  001BF6  ECB9  F013         	call	_UART2_SetRxInterruptHandler	;wreg free
 44245                           
 44246                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 44247  001BFA  0139               	movlb	57	; () banked
 44248  001BFC  9796               	bcf	150,3,b	;volatile
 44249                           
 44250                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 44251  001BFE  0EA4               	movlw	low _UART2_Transmit_ISR
 44252  001C00  6EE6               	movwf	postinc1,c
 44253  001C02  0E26               	movlw	high _UART2_Transmit_ISR
 44254  001C04  6EE6               	movwf	postinc1,c
 44255  001C06  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 44256  001C08  6EE6               	movwf	postinc1,c
 44257  001C0A  ECA5  F013         	call	_UART2_SetTxInterruptHandler	;wreg free
 44258                           
 44259                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 44260  001C0E  013D               	movlb	61	; () banked
 44261  001C10  6BD4               	clrf	212,b	;volatile
 44262                           
 44263                           ; BSR set to: 61
 44264                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 44265  001C12  6BD6               	clrf	214,b	;volatile
 44266                           
 44267                           ; BSR set to: 61
 44268                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 44269  001C14  6BD8               	clrf	216,b	;volatile
 44270                           
 44271                           ; BSR set to: 61
 44272                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 44273  001C16  0EB0               	movlw	176
 44274  001C18  6FDA               	movwf	218,b	;volatile
 44275                           
 44276                           ; BSR set to: 61
 44277                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 44278  001C1A  0E80               	movlw	128
 44279  001C1C  6FDB               	movwf	219,b	;volatile
 44280                           
 44281                           ; BSR set to: 61
 44282                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 44283  001C1E  6BDC               	clrf	220,b	;volatile
 44284                           
 44285                           ; BSR set to: 61
 44286                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 44287  001C20  0E82               	movlw	130
 44288  001C22  6FDD               	movwf	221,b	;volatile
 44289                           
 44290                           ; BSR set to: 61
 44291                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 44292  001C24  0E06               	movlw	6
 44293  001C26  6FDE               	movwf	222,b	;volatile
 44294                           
 44295                           ; BSR set to: 61
 44296                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 44297  001C28  6BDF               	clrf	223,b	;volatile
 44298                           
 44299                           ; BSR set to: 61
 44300                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 44301  001C2A  6BE0               	clrf	224,b	;volatile
 44302                           
 44303                           ; BSR set to: 61
 44304                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 44305  001C2C  6BE1               	clrf	225,b	;volatile
 44306                           
 44307                           ; BSR set to: 61
 44308                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 44309  001C2E  6BE2               	clrf	226,b	;volatile
 44310                           
 44311                           ; BSR set to: 61
 44312                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 44313  001C30  0100               	movlb	0	; () banked
 44314  001C32  6BCF               	clrf	_uart2TxHead& (0+255),b	;volatile
 44315                           
 44316                           ; BSR set to: 0
 44317                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 44318  001C34  6A56               	clrf	_uart2TxTail^0,c	;volatile
 44319                           
 44320                           ; BSR set to: 0
 44321                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 44322  001C36  0E40               	movlw	64
 44323  001C38  6E55               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 44324                           
 44325                           ; BSR set to: 0
 44326                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 44327  001C3A  6A54               	clrf	_uart2RxHead^0,c	;volatile
 44328                           
 44329                           ; BSR set to: 0
 44330                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 44331  001C3C  6BCE               	clrf	_uart2RxTail& (0+255),b	;volatile
 44332                           
 44333                           ; BSR set to: 0
 44334                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 44335  001C3E  6BCD               	clrf	_uart2RxCount& (0+255),b	;volatile
 44336                           
 44337                           ; BSR set to: 0
 44338                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 44339  001C40  0139               	movlb	57	; () banked
 44340  001C42  8596               	bsf	150,2,b	;volatile
 44341                           
 44342                           ; BSR set to: 57
 44343                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44344  001C44  0012               	return		;funcret
 44345  001C46                     __end_of_UART2_Initialize:
 44346                           	opt callstack 0
 44347                           
 44348 ;; *************** function _UART2_SetTxInterruptHandler *****************
 44349 ;; Defined at:
 44350 ;;		line 252 in file "mcc_generated_files/uart2.c"
 44351 ;; Parameters:    Size  Location     Type
 44352 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44353 ;;		 -> UART2_Transmit_ISR(1), 
 44354 ;; Auto vars:     Size  Location     Type
 44355 ;;		None
 44356 ;; Return value:  Size  Location     Type
 44357 ;;                  1  [STACK] void 
 44358 ;; Registers used:
 44359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44360 ;; Tracked objects:
 44361 ;;		On entry : 3F/39
 44362 ;;		On exit  : 0/0
 44363 ;;		Unchanged: 0/0
 44364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44369 ;;Total ram usage:        0 bytes
 44370 ;; Hardware stack levels used:    1
 44371 ;; Hardware stack levels required when called:   15
 44372 ;; This function calls:
 44373 ;;		Nothing
 44374 ;; This function is called by:
 44375 ;;		_UART2_Initialize
 44376 ;; This function uses a reentrant model
 44377 ;;
 44378                           
 44379                           	psect	text157
 44380  00274A                     __ptext157:
 44381                           	opt callstack 0
 44382  00274A                     _UART2_SetTxInterruptHandler:
 44383                           	opt callstack 13
 44384                           
 44385                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 44386                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44387                           
 44388                           ; BSR set to: 57
 44389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44390                           ;incstack = 0
 44391  00274A  50E1               	movf	fsr1l,w,c
 44392  00274C  0FFD               	addlw	-3
 44393  00274E  6ED9               	movwf	fsr2l,c
 44394  002750  50E2               	movf	fsr1h,w,c
 44395  002752  6EDA               	movwf	fsr2h,c
 44396  002754  0EFF               	movlw	255
 44397  002756  22DA               	addwfc	fsr2h,f,c
 44398  002758  006F FF78  F0AA    	movff	postinc2,_UART2_TxInterruptHandler
 44399  00275E  006F FF78  F0AB    	movff	postinc2,_UART2_TxInterruptHandler+1
 44400  002764  006F FF74  F0AC    	movff	postdec2,_UART2_TxInterruptHandler+2
 44401                           
 44402                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44403  00276A  52E5               	movf	postdec1,f,c
 44404  00276C  52E5               	movf	postdec1,f,c
 44405  00276E  52E5               	movf	postdec1,f,c
 44406  002770  0012               	return		;funcret
 44407  002772                     __end_of_UART2_SetTxInterruptHandler:
 44408                           	opt callstack 0
 44409                           
 44410 ;; *************** function _UART2_SetRxInterruptHandler *****************
 44411 ;; Defined at:
 44412 ;;		line 248 in file "mcc_generated_files/uart2.c"
 44413 ;; Parameters:    Size  Location     Type
 44414 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44415 ;;		 -> UART2_Receive_ISR(1), 
 44416 ;; Auto vars:     Size  Location     Type
 44417 ;;		None
 44418 ;; Return value:  Size  Location     Type
 44419 ;;                  1  [STACK] void 
 44420 ;; Registers used:
 44421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44422 ;; Tracked objects:
 44423 ;;		On entry : 3F/39
 44424 ;;		On exit  : 0/0
 44425 ;;		Unchanged: 0/0
 44426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44431 ;;Total ram usage:        0 bytes
 44432 ;; Hardware stack levels used:    1
 44433 ;; Hardware stack levels required when called:   15
 44434 ;; This function calls:
 44435 ;;		Nothing
 44436 ;; This function is called by:
 44437 ;;		_UART2_Initialize
 44438 ;; This function uses a reentrant model
 44439 ;;
 44440                           
 44441                           	psect	text158
 44442  002772                     __ptext158:
 44443                           	opt callstack 0
 44444  002772                     _UART2_SetRxInterruptHandler:
 44445                           	opt callstack 13
 44446                           
 44447                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 44448                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44449                           
 44450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44451                           ;incstack = 0
 44452  002772  50E1               	movf	fsr1l,w,c
 44453  002774  0FFD               	addlw	-3
 44454  002776  6ED9               	movwf	fsr2l,c
 44455  002778  50E2               	movf	fsr1h,w,c
 44456  00277A  6EDA               	movwf	fsr2h,c
 44457  00277C  0EFF               	movlw	255
 44458  00277E  22DA               	addwfc	fsr2h,f,c
 44459  002780  006F FF78  F0AD    	movff	postinc2,_UART2_RxInterruptHandler
 44460  002786  006F FF78  F0AE    	movff	postinc2,_UART2_RxInterruptHandler+1
 44461  00278C  006F FF74  F0AF    	movff	postdec2,_UART2_RxInterruptHandler+2
 44462                           
 44463                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44464  002792  52E5               	movf	postdec1,f,c
 44465  002794  52E5               	movf	postdec1,f,c
 44466  002796  52E5               	movf	postdec1,f,c
 44467  002798  0012               	return		;funcret
 44468  00279A                     __end_of_UART2_SetRxInterruptHandler:
 44469                           	opt callstack 0
 44470                           
 44471 ;; *************** function _UART1_Initialize *****************
 44472 ;; Defined at:
 44473 ;;		line 75 in file "mcc_generated_files/uart1.c"
 44474 ;; Parameters:    Size  Location     Type
 44475 ;;		None
 44476 ;; Auto vars:     Size  Location     Type
 44477 ;;		None
 44478 ;; Return value:  Size  Location     Type
 44479 ;;                  1  [STACK] void 
 44480 ;; Registers used:
 44481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44482 ;; Tracked objects:
 44483 ;;		On entry : 0/39
 44484 ;;		On exit  : 3F/39
 44485 ;;		Unchanged: 0/0
 44486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44491 ;;Total ram usage:        0 bytes
 44492 ;; Hardware stack levels used:    1
 44493 ;; Hardware stack levels required when called:   16
 44494 ;; This function calls:
 44495 ;;		_UART1_SetRxInterruptHandler
 44496 ;; This function is called by:
 44497 ;;		_SYSTEM_Initialize
 44498 ;; This function uses a reentrant model
 44499 ;;
 44500                           
 44501                           	psect	text159
 44502  001F90                     __ptext159:
 44503                           	opt callstack 0
 44504  001F90                     _UART1_Initialize:
 44505                           	opt callstack 13
 44506                           
 44507                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 44508                           
 44509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44510                           ;incstack = 0
 44511  001F90  0139               	movlb	57	; () banked
 44512  001F92  9793               	bcf	147,3,b	;volatile
 44513                           
 44514                           ; BSR set to: 57
 44515                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 44516  001F94  0E70               	movlw	low _UART1_Receive_ISR
 44517  001F96  6EE6               	movwf	postinc1,c
 44518  001F98  0E2A               	movlw	high _UART1_Receive_ISR
 44519  001F9A  6EE6               	movwf	postinc1,c
 44520  001F9C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 44521  001F9E  6EE6               	movwf	postinc1,c
 44522  001FA0  ECCD  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
 44523                           
 44524                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 44525  001FA4  013D               	movlb	61	; () banked
 44526  001FA6  6BEC               	clrf	236,b	;volatile
 44527                           
 44528                           ; BSR set to: 61
 44529                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 44530  001FA8  6BED               	clrf	237,b	;volatile
 44531                           
 44532                           ; BSR set to: 61
 44533                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 44534  001FAA  6BEE               	clrf	238,b	;volatile
 44535                           
 44536                           ; BSR set to: 61
 44537                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 44538  001FAC  6BEF               	clrf	239,b	;volatile
 44539                           
 44540                           ; BSR set to: 61
 44541                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 44542  001FAE  6BF0               	clrf	240,b	;volatile
 44543                           
 44544                           ; BSR set to: 61
 44545                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 44546  001FB0  6BF1               	clrf	241,b	;volatile
 44547                           
 44548                           ; BSR set to: 61
 44549                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 44550  001FB2  0EB0               	movlw	176
 44551  001FB4  6FF2               	movwf	242,b	;volatile
 44552                           
 44553                           ; BSR set to: 61
 44554                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 44555  001FB6  0E80               	movlw	128
 44556  001FB8  6FF3               	movwf	243,b	;volatile
 44557                           
 44558                           ; BSR set to: 61
 44559                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 44560  001FBA  6BF4               	clrf	244,b	;volatile
 44561                           
 44562                           ; BSR set to: 61
 44563                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 44564  001FBC  0E8A               	movlw	138
 44565  001FBE  6FF5               	movwf	245,b	;volatile
 44566                           
 44567                           ; BSR set to: 61
 44568                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 44569  001FC0  6BF6               	clrf	246,b	;volatile
 44570                           
 44571                           ; BSR set to: 61
 44572                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 44573  001FC2  6BF7               	clrf	247,b	;volatile
 44574                           
 44575                           ; BSR set to: 61
 44576                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 44577  001FC4  6BF8               	clrf	248,b	;volatile
 44578                           
 44579                           ; BSR set to: 61
 44580                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 44581  001FC6  6BF9               	clrf	249,b	;volatile
 44582                           
 44583                           ; BSR set to: 61
 44584                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 44585  001FC8  6BFA               	clrf	250,b	;volatile
 44586                           
 44587                           ; BSR set to: 61
 44588                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 44589  001FCA  6A57               	clrf	_uart1RxHead^0,c	;volatile
 44590                           
 44591                           ; BSR set to: 61
 44592                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 44593  001FCC  0100               	movlb	0	; () banked
 44594  001FCE  6BD1               	clrf	_uart1RxTail& (0+255),b	;volatile
 44595                           
 44596                           ; BSR set to: 0
 44597                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 44598  001FD0  6BD0               	clrf	_uart1RxCount& (0+255),b	;volatile
 44599                           
 44600                           ; BSR set to: 0
 44601                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 44602  001FD2  0139               	movlb	57	; () banked
 44603  001FD4  8793               	bsf	147,3,b	;volatile
 44604                           
 44605                           ; BSR set to: 57
 44606                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 44607  001FD6  0012               	return		;funcret
 44608  001FD8                     __end_of_UART1_Initialize:
 44609                           	opt callstack 0
 44610                           
 44611 ;; *************** function _UART1_SetRxInterruptHandler *****************
 44612 ;; Defined at:
 44613 ;;		line 207 in file "mcc_generated_files/uart1.c"
 44614 ;; Parameters:    Size  Location     Type
 44615 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44616 ;;		 -> UART1_Receive_ISR(1), 
 44617 ;; Auto vars:     Size  Location     Type
 44618 ;;		None
 44619 ;; Return value:  Size  Location     Type
 44620 ;;                  1  [STACK] void 
 44621 ;; Registers used:
 44622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44623 ;; Tracked objects:
 44624 ;;		On entry : 3F/39
 44625 ;;		On exit  : 0/0
 44626 ;;		Unchanged: 0/0
 44627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44632 ;;Total ram usage:        0 bytes
 44633 ;; Hardware stack levels used:    1
 44634 ;; Hardware stack levels required when called:   15
 44635 ;; This function calls:
 44636 ;;		Nothing
 44637 ;; This function is called by:
 44638 ;;		_UART1_Initialize
 44639 ;; This function uses a reentrant model
 44640 ;;
 44641                           
 44642                           	psect	text160
 44643  00279A                     __ptext160:
 44644                           	opt callstack 0
 44645  00279A                     _UART1_SetRxInterruptHandler:
 44646                           	opt callstack 13
 44647                           
 44648                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 44649                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44650                           
 44651                           ; BSR set to: 57
 44652                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44653                           ;incstack = 0
 44654  00279A  50E1               	movf	fsr1l,w,c
 44655  00279C  0FFD               	addlw	-3
 44656  00279E  6ED9               	movwf	fsr2l,c
 44657  0027A0  50E2               	movf	fsr1h,w,c
 44658  0027A2  6EDA               	movwf	fsr2h,c
 44659  0027A4  0EFF               	movlw	255
 44660  0027A6  22DA               	addwfc	fsr2h,f,c
 44661  0027A8  006F FF78  F0A7    	movff	postinc2,_UART1_RxInterruptHandler
 44662  0027AE  006F FF78  F0A8    	movff	postinc2,_UART1_RxInterruptHandler+1
 44663  0027B4  006F FF74  F0A9    	movff	postdec2,_UART1_RxInterruptHandler+2
 44664                           
 44665                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 44666  0027BA  52E5               	movf	postdec1,f,c
 44667  0027BC  52E5               	movf	postdec1,f,c
 44668  0027BE  52E5               	movf	postdec1,f,c
 44669  0027C0  0012               	return		;funcret
 44670  0027C2                     __end_of_UART1_SetRxInterruptHandler:
 44671                           	opt callstack 0
 44672                           
 44673 ;; *************** function _TMR6_Initialize *****************
 44674 ;; Defined at:
 44675 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 44676 ;; Parameters:    Size  Location     Type
 44677 ;;		None
 44678 ;; Auto vars:     Size  Location     Type
 44679 ;;		None
 44680 ;; Return value:  Size  Location     Type
 44681 ;;                  1  [STACK] void 
 44682 ;; Registers used:
 44683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 44684 ;; Tracked objects:
 44685 ;;		On entry : 3F/39
 44686 ;;		On exit  : 0/0
 44687 ;;		Unchanged: 0/0
 44688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44693 ;;Total ram usage:        0 bytes
 44694 ;; Hardware stack levels used:    1
 44695 ;; Hardware stack levels required when called:   16
 44696 ;; This function calls:
 44697 ;;		_TMR6_SetInterruptHandler
 44698 ;; This function is called by:
 44699 ;;		_SYSTEM_Initialize
 44700 ;; This function uses a reentrant model
 44701 ;;
 44702                           
 44703                           	psect	text161
 44704  0026D0                     __ptext161:
 44705                           	opt callstack 0
 44706  0026D0                     _TMR6_Initialize:
 44707                           	opt callstack 13
 44708                           
 44709                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 44710                           
 44711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44712                           ;incstack = 0
 44713  0026D0  0E01               	movlw	1
 44714  0026D2  6E96               	movwf	150,c	;volatile
 44715                           
 44716                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 44717  0026D4  6A95               	clrf	149,c	;volatile
 44718                           
 44719                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 44720  0026D6  6A97               	clrf	151,c	;volatile
 44721                           
 44722                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 44723  0026D8  0E7C               	movlw	124
 44724  0026DA  6E93               	movwf	147,c	;volatile
 44725                           
 44726                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 44727  0026DC  6A92               	clrf	146,c	;volatile
 44728                           
 44729                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 44730  0026DE  0139               	movlb	57	; () banked
 44731  0026E0  91A9               	bcf	169,0,b	;volatile
 44732                           
 44733                           ; BSR set to: 57
 44734                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 44735  0026E2  8199               	bsf	153,0,b	;volatile
 44736                           
 44737                           ; BSR set to: 57
 44738                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 44739  0026E4  0EFA               	movlw	low _TMR6_DefaultInterruptHandler
 44740  0026E6  6EE6               	movwf	postinc1,c
 44741  0026E8  0E1E               	movlw	high _TMR6_DefaultInterruptHandler
 44742  0026EA  6EE6               	movwf	postinc1,c
 44743  0026EC  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 44744  0026EE  6EE6               	movwf	postinc1,c
 44745  0026F0  ECE1  F013         	call	_TMR6_SetInterruptHandler	;wreg free
 44746                           
 44747                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 44748  0026F4  0EE0               	movlw	224
 44749  0026F6  6E94               	movwf	148,c	;volatile
 44750                           
 44751                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44752  0026F8  0012               	return		;funcret
 44753  0026FA                     __end_of_TMR6_Initialize:
 44754                           	opt callstack 0
 44755                           
 44756 ;; *************** function _TMR6_SetInterruptHandler *****************
 44757 ;; Defined at:
 44758 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 44759 ;; Parameters:    Size  Location     Type
 44760 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44761 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 44762 ;; Auto vars:     Size  Location     Type
 44763 ;;		None
 44764 ;; Return value:  Size  Location     Type
 44765 ;;                  1  [STACK] void 
 44766 ;; Registers used:
 44767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44768 ;; Tracked objects:
 44769 ;;		On entry : 3F/39
 44770 ;;		On exit  : 0/0
 44771 ;;		Unchanged: 0/0
 44772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44777 ;;Total ram usage:        0 bytes
 44778 ;; Hardware stack levels used:    1
 44779 ;; Hardware stack levels required when called:   15
 44780 ;; This function calls:
 44781 ;;		Nothing
 44782 ;; This function is called by:
 44783 ;;		_TMR6_Initialize
 44784 ;; This function uses a reentrant model
 44785 ;;
 44786                           
 44787                           	psect	text162
 44788  0027C2                     __ptext162:
 44789                           	opt callstack 0
 44790  0027C2                     _TMR6_SetInterruptHandler:
 44791                           	opt callstack 13
 44792                           
 44793                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 44794                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44795                           
 44796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44797                           ;incstack = 0
 44798  0027C2  50E1               	movf	fsr1l,w,c
 44799  0027C4  0FFD               	addlw	-3
 44800  0027C6  6ED9               	movwf	fsr2l,c
 44801  0027C8  50E2               	movf	fsr1h,w,c
 44802  0027CA  6EDA               	movwf	fsr2h,c
 44803  0027CC  0EFF               	movlw	255
 44804  0027CE  22DA               	addwfc	fsr2h,f,c
 44805  0027D0  006F FF78  F09E    	movff	postinc2,_TMR6_InterruptHandler
 44806  0027D6  006F FF78  F09F    	movff	postinc2,_TMR6_InterruptHandler+1
 44807  0027DC  006F FF74  F0A0    	movff	postdec2,_TMR6_InterruptHandler+2
 44808                           
 44809                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44810  0027E2  52E5               	movf	postdec1,f,c
 44811  0027E4  52E5               	movf	postdec1,f,c
 44812  0027E6  52E5               	movf	postdec1,f,c
 44813  0027E8  0012               	return		;funcret
 44814  0027EA                     __end_of_TMR6_SetInterruptHandler:
 44815                           	opt callstack 0
 44816                           
 44817 ;; *************** function _TMR5_Initialize *****************
 44818 ;; Defined at:
 44819 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 44820 ;; Parameters:    Size  Location     Type
 44821 ;;		None
 44822 ;; Auto vars:     Size  Location     Type
 44823 ;;		None
 44824 ;; Return value:  Size  Location     Type
 44825 ;;                  1  [STACK] void 
 44826 ;; Registers used:
 44827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44828 ;; Tracked objects:
 44829 ;;		On entry : 0/39
 44830 ;;		On exit  : 0/0
 44831 ;;		Unchanged: 0/0
 44832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44837 ;;Total ram usage:        0 bytes
 44838 ;; Hardware stack levels used:    1
 44839 ;; Hardware stack levels required when called:   16
 44840 ;; This function calls:
 44841 ;;		_TMR5_SetInterruptHandler
 44842 ;; This function is called by:
 44843 ;;		_SYSTEM_Initialize
 44844 ;; This function uses a reentrant model
 44845 ;;
 44846                           
 44847                           	psect	text163
 44848  001FD8                     __ptext163:
 44849                           	opt callstack 0
 44850  001FD8                     _TMR5_Initialize:
 44851                           	opt callstack 13
 44852                           
 44853                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 44854                           
 44855                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44856                           ;incstack = 0
 44857  001FD8  6A9B               	clrf	155,c	;volatile
 44858                           
 44859                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 44860  001FDA  6A9C               	clrf	156,c	;volatile
 44861                           
 44862                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 44863  001FDC  0E01               	movlw	1
 44864  001FDE  6E9D               	movwf	157,c	;volatile
 44865                           
 44866                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 44867  001FE0  0E63               	movlw	99
 44868  001FE2  6E99               	movwf	153,c	;volatile
 44869                           
 44870                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 44871  001FE4  0EC0               	movlw	192
 44872  001FE6  6E98               	movwf	152,c	;volatile
 44873                           
 44874                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 44875  001FE8  5098               	movf	152,w,c	;volatile
 44876  001FEA  006F FE64  F02A    	movff	16281,btemp	;volatile
 44877  001FF0  6A2B               	clrf	(btemp+1)^0,c
 44878  001FF2  0060  F0A8  F02B   	movff	btemp,btemp+1
 44879  001FF8  6A2A               	clrf	btemp^0,c
 44880  001FFA  102A               	iorwf	btemp^0,w,c
 44881  001FFC  0100               	movlb	0	; () banked
 44882  001FFE  6FC4               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 44883  002000  502B               	movf	(btemp+1)^0,w,c
 44884  002002  6FC5               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 44885                           
 44886                           ; BSR set to: 0
 44887                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 44888  002004  0139               	movlb	57	; () banked
 44889  002006  9DA8               	bcf	168,6,b	;volatile
 44890                           
 44891                           ; BSR set to: 57
 44892                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 44893  002008  8D98               	bsf	152,6,b	;volatile
 44894                           
 44895                           ; BSR set to: 57
 44896                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 44897  00200A  0EEC               	movlw	low _TMR5_DefaultInterruptHandler
 44898  00200C  6EE6               	movwf	postinc1,c
 44899  00200E  0E23               	movlw	high _TMR5_DefaultInterruptHandler
 44900  002010  6EE6               	movwf	postinc1,c
 44901  002012  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 44902  002014  6EE6               	movwf	postinc1,c
 44903  002016  ECF5  F013         	call	_TMR5_SetInterruptHandler	;wreg free
 44904                           
 44905                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 44906  00201A  0E31               	movlw	49
 44907  00201C  6E9A               	movwf	154,c	;volatile
 44908                           
 44909                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44910  00201E  0012               	return		;funcret
 44911  002020                     __end_of_TMR5_Initialize:
 44912                           	opt callstack 0
 44913                           
 44914 ;; *************** function _TMR5_SetInterruptHandler *****************
 44915 ;; Defined at:
 44916 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 44917 ;; Parameters:    Size  Location     Type
 44918 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44919 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 44920 ;; Auto vars:     Size  Location     Type
 44921 ;;		None
 44922 ;; Return value:  Size  Location     Type
 44923 ;;                  1  [STACK] void 
 44924 ;; Registers used:
 44925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44926 ;; Tracked objects:
 44927 ;;		On entry : 3F/39
 44928 ;;		On exit  : 0/0
 44929 ;;		Unchanged: 0/0
 44930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44935 ;;Total ram usage:        0 bytes
 44936 ;; Hardware stack levels used:    1
 44937 ;; Hardware stack levels required when called:   15
 44938 ;; This function calls:
 44939 ;;		Nothing
 44940 ;; This function is called by:
 44941 ;;		_TMR5_Initialize
 44942 ;; This function uses a reentrant model
 44943 ;;
 44944                           
 44945                           	psect	text164
 44946  0027EA                     __ptext164:
 44947                           	opt callstack 0
 44948  0027EA                     _TMR5_SetInterruptHandler:
 44949                           	opt callstack 13
 44950                           
 44951                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 44952                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44953                           
 44954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44955                           ;incstack = 0
 44956  0027EA  50E1               	movf	fsr1l,w,c
 44957  0027EC  0FFD               	addlw	-3
 44958  0027EE  6ED9               	movwf	fsr2l,c
 44959  0027F0  50E2               	movf	fsr1h,w,c
 44960  0027F2  6EDA               	movwf	fsr2h,c
 44961  0027F4  0EFF               	movlw	255
 44962  0027F6  22DA               	addwfc	fsr2h,f,c
 44963  0027F8  006F FF78  F09B    	movff	postinc2,_TMR5_InterruptHandler
 44964  0027FE  006F FF78  F09C    	movff	postinc2,_TMR5_InterruptHandler+1
 44965  002804  006F FF74  F09D    	movff	postdec2,_TMR5_InterruptHandler+2
 44966                           
 44967                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44968  00280A  52E5               	movf	postdec1,f,c
 44969  00280C  52E5               	movf	postdec1,f,c
 44970  00280E  52E5               	movf	postdec1,f,c
 44971  002810  0012               	return		;funcret
 44972  002812                     __end_of_TMR5_SetInterruptHandler:
 44973                           	opt callstack 0
 44974                           
 44975 ;; *************** function _TMR3_Initialize *****************
 44976 ;; Defined at:
 44977 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 44978 ;; Parameters:    Size  Location     Type
 44979 ;;		None
 44980 ;; Auto vars:     Size  Location     Type
 44981 ;;		None
 44982 ;; Return value:  Size  Location     Type
 44983 ;;                  1  [STACK] void 
 44984 ;; Registers used:
 44985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 44986 ;; Tracked objects:
 44987 ;;		On entry : 0/39
 44988 ;;		On exit  : 0/0
 44989 ;;		Unchanged: 0/0
 44990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44995 ;;Total ram usage:        0 bytes
 44996 ;; Hardware stack levels used:    1
 44997 ;; Hardware stack levels required when called:   16
 44998 ;; This function calls:
 44999 ;;		_TMR3_SetInterruptHandler
 45000 ;; This function is called by:
 45001 ;;		_SYSTEM_Initialize
 45002 ;; This function uses a reentrant model
 45003 ;;
 45004                           
 45005                           	psect	text165
 45006  002020                     __ptext165:
 45007                           	opt callstack 0
 45008  002020                     _TMR3_Initialize:
 45009                           	opt callstack 13
 45010                           
 45011                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 45012                           
 45013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45014                           ;incstack = 0
 45015  002020  6AA7               	clrf	167,c	;volatile
 45016                           
 45017                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 45018  002022  6AA8               	clrf	168,c	;volatile
 45019                           
 45020                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 45021  002024  0E01               	movlw	1
 45022  002026  6EA9               	movwf	169,c	;volatile
 45023                           
 45024                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 45025  002028  0E3C               	movlw	60
 45026  00202A  6EA5               	movwf	165,c	;volatile
 45027                           
 45028                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 45029  00202C  0EB0               	movlw	176
 45030  00202E  6EA4               	movwf	164,c	;volatile
 45031                           
 45032                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 45033  002030  50A4               	movf	164,w,c	;volatile
 45034  002032  006F FE94  F02A    	movff	16293,btemp	;volatile
 45035  002038  6A2B               	clrf	(btemp+1)^0,c
 45036  00203A  0060  F0A8  F02B   	movff	btemp,btemp+1
 45037  002040  6A2A               	clrf	btemp^0,c
 45038  002042  102A               	iorwf	btemp^0,w,c
 45039  002044  0100               	movlb	0	; () banked
 45040  002046  6FC0               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 45041  002048  502B               	movf	(btemp+1)^0,w,c
 45042  00204A  6FC1               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 45043                           
 45044                           ; BSR set to: 0
 45045                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 45046  00204C  0139               	movlb	57	; () banked
 45047  00204E  9DA6               	bcf	166,6,b	;volatile
 45048                           
 45049                           ; BSR set to: 57
 45050                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 45051  002050  8D96               	bsf	150,6,b	;volatile
 45052                           
 45053                           ; BSR set to: 57
 45054                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 45055  002052  0E74               	movlw	low _TMR3_DefaultInterruptHandler
 45056  002054  6EE6               	movwf	postinc1,c
 45057  002056  0E2D               	movlw	high _TMR3_DefaultInterruptHandler
 45058  002058  6EE6               	movwf	postinc1,c
 45059  00205A  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 45060  00205C  6EE6               	movwf	postinc1,c
 45061  00205E  EC09  F014         	call	_TMR3_SetInterruptHandler	;wreg free
 45062                           
 45063                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 45064  002062  0E31               	movlw	49
 45065  002064  6EA6               	movwf	166,c	;volatile
 45066                           
 45067                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45068  002066  0012               	return		;funcret
 45069  002068                     __end_of_TMR3_Initialize:
 45070                           	opt callstack 0
 45071                           
 45072 ;; *************** function _TMR3_SetInterruptHandler *****************
 45073 ;; Defined at:
 45074 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45075 ;; Parameters:    Size  Location     Type
 45076 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45077 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 45078 ;; Auto vars:     Size  Location     Type
 45079 ;;		None
 45080 ;; Return value:  Size  Location     Type
 45081 ;;                  1  [STACK] void 
 45082 ;; Registers used:
 45083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45084 ;; Tracked objects:
 45085 ;;		On entry : 0/1
 45086 ;;		On exit  : 0/0
 45087 ;;		Unchanged: 0/0
 45088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45093 ;;Total ram usage:        0 bytes
 45094 ;; Hardware stack levels used:    1
 45095 ;; Hardware stack levels required when called:   15
 45096 ;; This function calls:
 45097 ;;		Nothing
 45098 ;; This function is called by:
 45099 ;;		_TMR3_Initialize
 45100 ;;		_init_bsoc
 45101 ;; This function uses a reentrant model
 45102 ;;
 45103                           
 45104                           	psect	text166
 45105  002812                     __ptext166:
 45106                           	opt callstack 0
 45107  002812                     _TMR3_SetInterruptHandler:
 45108                           	opt callstack 14
 45109                           
 45110                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 45111                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45112                           
 45113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45114                           ;incstack = 0
 45115  002812  50E1               	movf	fsr1l,w,c
 45116  002814  0FFD               	addlw	-3
 45117  002816  6ED9               	movwf	fsr2l,c
 45118  002818  50E2               	movf	fsr1h,w,c
 45119  00281A  6EDA               	movwf	fsr2h,c
 45120  00281C  0EFF               	movlw	255
 45121  00281E  22DA               	addwfc	fsr2h,f,c
 45122  002820  006F FF78  F098    	movff	postinc2,_TMR3_InterruptHandler
 45123  002826  006F FF78  F099    	movff	postinc2,_TMR3_InterruptHandler+1
 45124  00282C  006F FF74  F09A    	movff	postdec2,_TMR3_InterruptHandler+2
 45125                           
 45126                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 45127  002832  52E5               	movf	postdec1,f,c
 45128  002834  52E5               	movf	postdec1,f,c
 45129  002836  52E5               	movf	postdec1,f,c
 45130  002838  0012               	return		;funcret
 45131  00283A                     __end_of_TMR3_SetInterruptHandler:
 45132                           	opt callstack 0
 45133                           
 45134 ;; *************** function _TMR2_Initialize *****************
 45135 ;; Defined at:
 45136 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 45137 ;; Parameters:    Size  Location     Type
 45138 ;;		None
 45139 ;; Auto vars:     Size  Location     Type
 45140 ;;		None
 45141 ;; Return value:  Size  Location     Type
 45142 ;;                  1  [STACK] void 
 45143 ;; Registers used:
 45144 ;;		wreg, status,2
 45145 ;; Tracked objects:
 45146 ;;		On entry : 0/0
 45147 ;;		On exit  : 3F/39
 45148 ;;		Unchanged: 0/0
 45149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45154 ;;Total ram usage:        0 bytes
 45155 ;; Hardware stack levels used:    1
 45156 ;; Hardware stack levels required when called:   15
 45157 ;; This function calls:
 45158 ;;		Nothing
 45159 ;; This function is called by:
 45160 ;;		_SYSTEM_Initialize
 45161 ;; This function uses a reentrant model
 45162 ;;
 45163                           
 45164                           	psect	text167
 45165  002B96                     __ptext167:
 45166                           	opt callstack 0
 45167  002B96                     _TMR2_Initialize:
 45168                           	opt callstack 14
 45169                           
 45170                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 45171                           
 45172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45173                           ;incstack = 0
 45174  002B96  0E01               	movlw	1
 45175  002B98  6EAE               	movwf	174,c	;volatile
 45176                           
 45177                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 45178  002B9A  6AAD               	clrf	173,c	;volatile
 45179                           
 45180                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 45181  002B9C  6AAF               	clrf	175,c	;volatile
 45182                           
 45183                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 45184  002B9E  0E63               	movlw	99
 45185  002BA0  6EAB               	movwf	171,c	;volatile
 45186                           
 45187                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 45188  002BA2  6AAA               	clrf	170,c	;volatile
 45189                           
 45190                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 45191  002BA4  0139               	movlb	57	; () banked
 45192  002BA6  95A4               	bcf	164,2,b	;volatile
 45193                           
 45194                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 45195  002BA8  0EC0               	movlw	192
 45196  002BAA  6EAC               	movwf	172,c	;volatile
 45197                           
 45198                           ; BSR set to: 57
 45199                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45200  002BAC  0012               	return		;funcret
 45201  002BAE                     __end_of_TMR2_Initialize:
 45202                           	opt callstack 0
 45203                           
 45204 ;; *************** function _SPI1_Initialize *****************
 45205 ;; Defined at:
 45206 ;;		line 64 in file "mcc_generated_files/spi1.c"
 45207 ;; Parameters:    Size  Location     Type
 45208 ;;		None
 45209 ;; Auto vars:     Size  Location     Type
 45210 ;;		None
 45211 ;; Return value:  Size  Location     Type
 45212 ;;                  1  [STACK] void 
 45213 ;; Registers used:
 45214 ;;		wreg, status,2
 45215 ;; Tracked objects:
 45216 ;;		On entry : 3F/39
 45217 ;;		On exit  : 3F/3D
 45218 ;;		Unchanged: 0/0
 45219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45224 ;;Total ram usage:        0 bytes
 45225 ;; Hardware stack levels used:    1
 45226 ;; Hardware stack levels required when called:   15
 45227 ;; This function calls:
 45228 ;;		Nothing
 45229 ;; This function is called by:
 45230 ;;		_SYSTEM_Initialize
 45231 ;; This function uses a reentrant model
 45232 ;;
 45233                           
 45234                           	psect	text168
 45235  002BC4                     __ptext168:
 45236                           	opt callstack 0
 45237  002BC4                     _SPI1_Initialize:
 45238                           	opt callstack 14
 45239                           
 45240                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 45241                           
 45242                           ; BSR set to: 57
 45243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45244                           ;incstack = 0
 45245  002BC4  0E40               	movlw	64
 45246  002BC6  013D               	movlb	61	; () banked
 45247  002BC8  6F15               	movwf	21,b	;volatile
 45248                           
 45249                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 45250  002BCA  0E03               	movlw	3
 45251  002BCC  6F16               	movwf	22,b	;volatile
 45252                           
 45253                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 45254  002BCE  0E4F               	movlw	79
 45255  002BD0  6F19               	movwf	25,b	;volatile
 45256                           
 45257                           ; BSR set to: 61
 45258                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 45259  002BD2  6B1C               	clrf	28,b	;volatile
 45260                           
 45261                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 45262  002BD4  0E83               	movlw	131
 45263  002BD6  6F14               	movwf	20,b	;volatile
 45264                           
 45265                           ; BSR set to: 61
 45266                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45267  002BD8  0012               	return		;funcret
 45268  002BDA                     __end_of_SPI1_Initialize:
 45269                           	opt callstack 0
 45270                           
 45271 ;; *************** function _PWM8_Initialize *****************
 45272 ;; Defined at:
 45273 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 45274 ;; Parameters:    Size  Location     Type
 45275 ;;		None
 45276 ;; Auto vars:     Size  Location     Type
 45277 ;;		None
 45278 ;; Return value:  Size  Location     Type
 45279 ;;                  1  [STACK] void 
 45280 ;; Registers used:
 45281 ;;		wreg, status,2
 45282 ;; Tracked objects:
 45283 ;;		On entry : 3F/39
 45284 ;;		On exit  : 3F/3F
 45285 ;;		Unchanged: 0/0
 45286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45291 ;;Total ram usage:        0 bytes
 45292 ;; Hardware stack levels used:    1
 45293 ;; Hardware stack levels required when called:   15
 45294 ;; This function calls:
 45295 ;;		Nothing
 45296 ;; This function is called by:
 45297 ;;		_SYSTEM_Initialize
 45298 ;; This function uses a reentrant model
 45299 ;;
 45300                           
 45301                           	psect	text169
 45302  002BDA                     __ptext169:
 45303                           	opt callstack 0
 45304  002BDA                     _PWM8_Initialize:
 45305                           	opt callstack 14
 45306                           
 45307                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 45308                           
 45309                           ; BSR set to: 61
 45310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45311                           ;incstack = 0
 45312  002BDA  0E80               	movlw	128
 45313  002BDC  6E62               	movwf	98,c	;volatile
 45314                           
 45315                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 45316  002BDE  6A61               	clrf	97,c	;volatile
 45317                           
 45318                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 45319  002BE0  0E40               	movlw	64
 45320  002BE2  6E60               	movwf	96,c	;volatile
 45321                           
 45322                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 45323  002BE4  013F               	movlb	63	; () banked
 45324  002BE6  515F               	movf	95,w,b	;volatile
 45325  002BE8  0B3F               	andlw	-193
 45326  002BEA  0940               	iorlw	64
 45327  002BEC  6F5F               	movwf	95,b	;volatile
 45328                           
 45329                           ; BSR set to: 63
 45330                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45331  002BEE  0012               	return		;funcret
 45332  002BF0                     __end_of_PWM8_Initialize:
 45333                           	opt callstack 0
 45334                           
 45335 ;; *************** function _PMD_Initialize *****************
 45336 ;; Defined at:
 45337 ;;		line 91 in file "mcc_generated_files/mcc.c"
 45338 ;; Parameters:    Size  Location     Type
 45339 ;;		None
 45340 ;; Auto vars:     Size  Location     Type
 45341 ;;		None
 45342 ;; Return value:  Size  Location     Type
 45343 ;;                  1  [STACK] void 
 45344 ;; Registers used:
 45345 ;;		None
 45346 ;; Tracked objects:
 45347 ;;		On entry : 3F/39
 45348 ;;		On exit  : 3F/39
 45349 ;;		Unchanged: 0/0
 45350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45355 ;;Total ram usage:        0 bytes
 45356 ;; Hardware stack levels used:    1
 45357 ;; Hardware stack levels required when called:   15
 45358 ;; This function calls:
 45359 ;;		Nothing
 45360 ;; This function is called by:
 45361 ;;		_SYSTEM_Initialize
 45362 ;; This function uses a reentrant model
 45363 ;;
 45364                           
 45365                           	psect	text170
 45366  002C06                     __ptext170:
 45367                           	opt callstack 0
 45368  002C06                     _PMD_Initialize:
 45369                           	opt callstack 14
 45370                           
 45371                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 45372                           
 45373                           ; BSR set to: 63
 45374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45375                           ;incstack = 0
 45376  002C06  0139               	movlb	57	; () banked
 45377  002C08  6BC0               	clrf	192,b	;volatile
 45378                           
 45379                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 45380  002C0A  6BC1               	clrf	193,b	;volatile
 45381                           
 45382                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 45383  002C0C  6BC2               	clrf	194,b	;volatile
 45384                           
 45385                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 45386  002C0E  6BC3               	clrf	195,b	;volatile
 45387                           
 45388                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 45389  002C10  6BC4               	clrf	196,b	;volatile
 45390                           
 45391                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 45392  002C12  6BC5               	clrf	197,b	;volatile
 45393                           
 45394                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 45395  002C14  6BC6               	clrf	198,b	;volatile
 45396                           
 45397                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 45398  002C16  6BC7               	clrf	199,b	;volatile
 45399                           
 45400                           ; BSR set to: 57
 45401                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45402  002C18  0012               	return		;funcret
 45403  002C1A                     __end_of_PMD_Initialize:
 45404                           	opt callstack 0
 45405                           
 45406 ;; *************** function _PIN_MANAGER_Initialize *****************
 45407 ;; Defined at:
 45408 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 45409 ;; Parameters:    Size  Location     Type
 45410 ;;		None
 45411 ;; Auto vars:     Size  Location     Type
 45412 ;;		None
 45413 ;; Return value:  Size  Location     Type
 45414 ;;                  1  [STACK] void 
 45415 ;; Registers used:
 45416 ;;		wreg, status,2
 45417 ;; Tracked objects:
 45418 ;;		On entry : 3F/39
 45419 ;;		On exit  : 3F/3A
 45420 ;;		Unchanged: 0/0
 45421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45426 ;;Total ram usage:        0 bytes
 45427 ;; Hardware stack levels used:    1
 45428 ;; Hardware stack levels required when called:   15
 45429 ;; This function calls:
 45430 ;;		Nothing
 45431 ;; This function is called by:
 45432 ;;		_SYSTEM_Initialize
 45433 ;; This function uses a reentrant model
 45434 ;;
 45435                           
 45436                           	psect	text171
 45437  001250                     __ptext171:
 45438                           	opt callstack 0
 45439  001250                     _PIN_MANAGER_Initialize:
 45440                           	opt callstack 14
 45441                           
 45442                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 45443                           
 45444                           ; BSR set to: 57
 45445                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45446                           ;incstack = 0
 45447  001250  0E07               	movlw	7
 45448  001252  6EBE               	movwf	190,c	;volatile
 45449                           
 45450                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 45451  001254  6ABD               	clrf	189,c	;volatile
 45452                           
 45453                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 45454  001256  6ABA               	clrf	186,c	;volatile
 45455                           
 45456                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 45457  001258  0E23               	movlw	35
 45458  00125A  6EBF               	movwf	191,c	;volatile
 45459                           
 45460                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 45461  00125C  6ABB               	clrf	187,c	;volatile
 45462                           
 45463                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 45464  00125E  0E07               	movlw	7
 45465  001260  6EBC               	movwf	188,c	;volatile
 45466                           
 45467                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 45468  001262  6AC6               	clrf	198,c	;volatile
 45469                           
 45470                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 45471  001264  0E0C               	movlw	12
 45472  001266  6EC7               	movwf	199,c	;volatile
 45473                           
 45474                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 45475  001268  68C2               	setf	194,c	;volatile
 45476                           
 45477                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 45478  00126A  0EBF               	movlw	191
 45479  00126C  6EC3               	movwf	195,c	;volatile
 45480                           
 45481                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 45482  00126E  0E90               	movlw	144
 45483  001270  6EC4               	movwf	196,c	;volatile
 45484                           
 45485                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 45486  001272  0E0C               	movlw	12
 45487  001274  6EC5               	movwf	197,c	;volatile
 45488                           
 45489                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 45490  001276  013A               	movlb	58	; () banked
 45491  001278  6B70               	clrf	112,b	;volatile
 45492                           
 45493                           ; BSR set to: 58
 45494                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 45495  00127A  6B60               	clrf	96,b	;volatile
 45496                           
 45497                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 45498  00127C  0E3C               	movlw	60
 45499  00127E  6F50               	movwf	80,b	;volatile
 45500                           
 45501                           ; BSR set to: 58
 45502                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 45503  001280  6B80               	clrf	128,b	;volatile
 45504                           
 45505                           ; BSR set to: 58
 45506                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 45507  001282  6B90               	clrf	144,b	;volatile
 45508                           
 45509                           ; BSR set to: 58
 45510                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 45511  001284  6940               	setf	64,b	;volatile
 45512                           
 45513                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 45514  001286  0E0C               	movlw	12
 45515  001288  6F71               	movwf	113,b	;volatile
 45516                           
 45517                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 45518  00128A  0E0C               	movlw	12
 45519  00128C  6F91               	movwf	145,b	;volatile
 45520                           
 45521                           ; BSR set to: 58
 45522                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 45523  00128E  6B81               	clrf	129,b	;volatile
 45524                           
 45525                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 45526  001290  0E83               	movlw	131
 45527  001292  6F51               	movwf	81,b	;volatile
 45528                           
 45529                           ; BSR set to: 58
 45530                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 45531  001294  6B41               	clrf	65,b	;volatile
 45532                           
 45533                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 45534  001296  0E97               	movlw	151
 45535  001298  6F61               	movwf	97,b	;volatile
 45536                           
 45537                           ; BSR set to: 58
 45538                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 45539  00129A  6B82               	clrf	130,b	;volatile
 45540                           
 45541                           ; BSR set to: 58
 45542                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 45543  00129C  6B92               	clrf	146,b	;volatile
 45544                           
 45545                           ; BSR set to: 58
 45546                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 45547  00129E  6B42               	clrf	66,b	;volatile
 45548                           
 45549                           ; BSR set to: 58
 45550                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 45551  0012A0  6B52               	clrf	82,b	;volatile
 45552                           
 45553                           ; BSR set to: 58
 45554                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 45555  0012A2  6B62               	clrf	98,b	;volatile
 45556                           
 45557                           ; BSR set to: 58
 45558                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 45559  0012A4  6B72               	clrf	114,b	;volatile
 45560                           
 45561                           ; BSR set to: 58
 45562                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 45563  0012A6  6943               	setf	67,b	;volatile
 45564                           
 45565                           ; BSR set to: 58
 45566                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 45567  0012A8  6953               	setf	83,b	;volatile
 45568                           
 45569                           ; BSR set to: 58
 45570                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 45571  0012AA  6963               	setf	99,b	;volatile
 45572                           
 45573                           ; BSR set to: 58
 45574                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 45575  0012AC  6973               	setf	115,b	;volatile
 45576                           
 45577                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 45578  0012AE  0E07               	movlw	7
 45579  0012B0  6F83               	movwf	131,b	;volatile
 45580                           
 45581                           ; BSR set to: 58
 45582                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 45583  0012B2  6993               	setf	147,b	;volatile
 45584                           
 45585                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 45586  0012B4  0E0F               	movlw	15
 45587  0012B6  6FE8               	movwf	232,b	;volatile
 45588                           
 45589                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 45590  0012B8  0E13               	movlw	19
 45591  0012BA  6FDE               	movwf	222,b	;volatile
 45592                           
 45593                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 45594  0012BC  0E16               	movlw	22
 45595  0012BE  6F0E               	movwf	14,b	;volatile
 45596                           
 45597                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 45598  0012C0  0E1E               	movlw	30
 45599  0012C2  6F13               	movwf	19,b	;volatile
 45600                           
 45601                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 45602  0012C4  0E08               	movlw	8
 45603  0012C6  6FC0               	movwf	192,b	;volatile
 45604                           
 45605                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 45606  0012C8  0E10               	movlw	16
 45607  0012CA  6F19               	movwf	25,b	;volatile
 45608                           
 45609                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 45610  0012CC  0E09               	movlw	9
 45611  0012CE  6FC1               	movwf	193,b	;volatile
 45612                           
 45613                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 45614  0012D0  0E1F               	movlw	31
 45615  0012D2  6F15               	movwf	21,b	;volatile
 45616                           
 45617                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 45618  0012D4  0E13               	movlw	19
 45619  0012D6  6F16               	movwf	22,b	;volatile
 45620                           
 45621                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 45622  0012D8  0E17               	movlw	23
 45623  0012DA  6FE5               	movwf	229,b	;volatile
 45624                           
 45625                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 45626  0012DC  0E14               	movlw	20
 45627  0012DE  6FDF               	movwf	223,b	;volatile
 45628                           
 45629                           ; BSR set to: 58
 45630                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 45631  0012E0  0012               	return		;funcret
 45632  0012E2                     __end_of_PIN_MANAGER_Initialize:
 45633                           	opt callstack 0
 45634                           
 45635 ;; *************** function _OSCILLATOR_Initialize *****************
 45636 ;; Defined at:
 45637 ;;		line 73 in file "mcc_generated_files/mcc.c"
 45638 ;; Parameters:    Size  Location     Type
 45639 ;;		None
 45640 ;; Auto vars:     Size  Location     Type
 45641 ;;		None
 45642 ;; Return value:  Size  Location     Type
 45643 ;;                  1  [STACK] void 
 45644 ;; Registers used:
 45645 ;;		wreg, status,2
 45646 ;; Tracked objects:
 45647 ;;		On entry : 3F/3A
 45648 ;;		On exit  : 3F/39
 45649 ;;		Unchanged: 0/0
 45650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45655 ;;Total ram usage:        0 bytes
 45656 ;; Hardware stack levels used:    1
 45657 ;; Hardware stack levels required when called:   15
 45658 ;; This function calls:
 45659 ;;		Nothing
 45660 ;; This function is called by:
 45661 ;;		_SYSTEM_Initialize
 45662 ;; This function uses a reentrant model
 45663 ;;
 45664                           
 45665                           	psect	text172
 45666  002BF0                     __ptext172:
 45667                           	opt callstack 0
 45668  002BF0                     _OSCILLATOR_Initialize:
 45669                           	opt callstack 14
 45670                           
 45671                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 45672                           
 45673                           ; BSR set to: 58
 45674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45675                           ;incstack = 0
 45676  002BF0  0E20               	movlw	32
 45677  002BF2  0139               	movlb	57	; () banked
 45678  002BF4  6FD9               	movwf	217,b	;volatile
 45679                           
 45680                           ; BSR set to: 57
 45681                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 45682  002BF6  6BDB               	clrf	219,b	;volatile
 45683                           
 45684                           ; BSR set to: 57
 45685                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 45686  002BF8  6BDD               	clrf	221,b	;volatile
 45687                           
 45688                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 45689  002BFA  0E02               	movlw	2
 45690  002BFC  6FDF               	movwf	223,b	;volatile
 45691                           
 45692                           ; BSR set to: 57
 45693                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 45694  002BFE  6BDE               	clrf	222,b	;volatile
 45695  002C00                     l171:
 45696                           
 45697                           ; BSR set to: 57
 45698                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 45699  002C00  B1DC               	btfsc	220,0,b	;volatile
 45700  002C02  0012               	return	
 45701  002C04  D7FD               	goto	l171
 45702  002C06                     __end_of_OSCILLATOR_Initialize:
 45703                           	opt callstack 0
 45704                           
 45705 ;; *************** function _INTERRUPT_Initialize *****************
 45706 ;; Defined at:
 45707 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 45708 ;; Parameters:    Size  Location     Type
 45709 ;;		None
 45710 ;; Auto vars:     Size  Location     Type
 45711 ;;  state           1  [STACK] _Bool 
 45712 ;; Return value:  Size  Location     Type
 45713 ;;                  1  [STACK] void 
 45714 ;; Registers used:
 45715 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 45716 ;; Tracked objects:
 45717 ;;		On entry : 0/0
 45718 ;;		On exit  : 3F/39
 45719 ;;		Unchanged: 0/0
 45720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45725 ;;Total ram usage:        0 bytes
 45726 ;; Hardware stack levels used:    1
 45727 ;; Hardware stack levels required when called:   15
 45728 ;; This function calls:
 45729 ;;		Nothing
 45730 ;; This function is called by:
 45731 ;;		_SYSTEM_Initialize
 45732 ;; This function uses a reentrant model
 45733 ;;
 45734                           
 45735                           	psect	text173
 45736  0019F4                     __ptext173:
 45737                           	opt callstack 0
 45738  0019F4                     _INTERRUPT_Initialize:
 45739                           	opt callstack 0
 45740                           
 45741                           ; BSR set to: 57
 45742                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45743  0019F4  52E6               	movf	postinc1,f,c
 45744                           
 45745                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 45746                           
 45747                           ;incstack = 0
 45748  0019F6  8AD2               	bsf	210,5,c	;volatile
 45749                           
 45750                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 45751  0019F8  AED2               	btfss	16338,7,c	;volatile
 45752  0019FA  D003               	goto	u12440
 45753  0019FC  6A35               	clrf	(btemp+11)^0,c
 45754  0019FE  2A35               	incf	(btemp+11)^0,f,c
 45755  001A00  D001               	goto	u12458
 45756  001A02                     u12440:
 45757  001A02  6A35               	clrf	(btemp+11)^0,c
 45758  001A04                     u12458:
 45759                           
 45760                           ;stkvar	_state @ sp[(-1)+0]
 45761  001A04  0EFF               	movlw	-1
 45762  001A06  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 45763                           
 45764                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 45765  001A0C  9ED2               	bcf	16338,7,c	;volatile
 45766                           
 45767                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 45768  001A0E  0E55               	movlw	85
 45769  001A10  6ED4               	movwf	212,c	;volatile
 45770                           
 45771                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 45772  001A12  0EAA               	movlw	170
 45773  001A14  6ED4               	movwf	212,c	;volatile
 45774                           
 45775                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 45776  001A16  90D4               	bcf	212,0,c	;volatile
 45777                           
 45778                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 45779  001A18  0138               	movlb	56	; () banked
 45780  001A1A  6B9F               	clrf	159,b	;volatile
 45781                           
 45782                           ; BSR set to: 56
 45783                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 45784  001A1C  6B9E               	clrf	158,b	;volatile
 45785                           
 45786                           ; BSR set to: 56
 45787                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 45788  001A1E  0E08               	movlw	8
 45789  001A20  6F9D               	movwf	157,b	;volatile
 45790                           
 45791                           ; BSR set to: 56
 45792                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 45793  001A22  0E55               	movlw	85
 45794  001A24  6ED4               	movwf	212,c	;volatile
 45795                           
 45796                           ; BSR set to: 56
 45797                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 45798  001A26  0EAA               	movlw	170
 45799  001A28  6ED4               	movwf	212,c	;volatile
 45800                           
 45801                           ; BSR set to: 56
 45802                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 45803  001A2A  80D4               	bsf	212,0,c	;volatile
 45804                           
 45805                           ; BSR set to: 56
 45806                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 45807                           ;stkvar	_state @ sp[(-1)+0]
 45808  001A2C  0EFF               	movlw	-1
 45809  001A2E  B0E3               	btfsc	plusw1,0,c
 45810  001A30  D002               	bra	u12465
 45811  001A32  9ED2               	bcf	16338,7,c	;volatile
 45812  001A34  D001               	bra	u12466
 45813  001A36                     u12465:
 45814  001A36  8ED2               	bsf	16338,7,c	;volatile
 45815  001A38                     u12466:
 45816                           
 45817                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 45818  001A38  0139               	movlb	57	; () banked
 45819  001A3A  8782               	bsf	130,3,b	;volatile
 45820                           
 45821                           ; BSR set to: 57
 45822                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 45823  001A3C  8382               	bsf	130,1,b	;volatile
 45824                           
 45825                           ; BSR set to: 57
 45826                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 45827  001A3E  8182               	bsf	130,0,b	;volatile
 45828                           
 45829                           ; BSR set to: 57
 45830                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 45831  001A40  8582               	bsf	130,2,b	;volatile
 45832                           
 45833                           ; BSR set to: 57
 45834                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 45835  001A42  8786               	bsf	134,3,b	;volatile
 45836                           
 45837                           ; BSR set to: 57
 45838                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 45839  001A44  8586               	bsf	134,2,b	;volatile
 45840                           
 45841                           ; BSR set to: 57
 45842                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 45843  001A46  8783               	bsf	131,3,b	;volatile
 45844                           
 45845                           ; BSR set to: 57
 45846                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 45847  001A48  8181               	bsf	129,0,b	;volatile
 45848                           
 45849                           ; BSR set to: 57
 45850                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 45851  001A4A  9185               	bcf	133,0,b	;volatile
 45852                           
 45853                           ; BSR set to: 57
 45854                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 45855  001A4C  8189               	bsf	137,0,b	;volatile
 45856                           
 45857                           ; BSR set to: 57
 45858                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 45859  001A4E  9D88               	bcf	136,6,b	;volatile
 45860                           
 45861                           ; BSR set to: 57
 45862                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 45863  001A50  8581               	bsf	129,2,b	;volatile
 45864                           
 45865                           ; BSR set to: 57
 45866                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 45867  001A52  8781               	bsf	129,3,b	;volatile
 45868                           
 45869                           ; BSR set to: 57
 45870                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 45871  001A54  9D86               	bcf	134,6,b	;volatile
 45872                           
 45873                           ; BSR set to: 57
 45874                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 45875  001A56  52E5               	movf	postdec1,f,c
 45876  001A58  0012               	return		;funcret
 45877  001A5A                     __end_of_INTERRUPT_Initialize:
 45878                           	opt callstack 0
 45879                           
 45880 ;; *************** function _FVR_Initialize *****************
 45881 ;; Defined at:
 45882 ;;		line 58 in file "mcc_generated_files/fvr.c"
 45883 ;; Parameters:    Size  Location     Type
 45884 ;;		None
 45885 ;; Auto vars:     Size  Location     Type
 45886 ;;		None
 45887 ;; Return value:  Size  Location     Type
 45888 ;;                  1  [STACK] void 
 45889 ;; Registers used:
 45890 ;;		wreg, status,2
 45891 ;; Tracked objects:
 45892 ;;		On entry : 3F/39
 45893 ;;		On exit  : 3F/3E
 45894 ;;		Unchanged: 0/0
 45895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45900 ;;Total ram usage:        0 bytes
 45901 ;; Hardware stack levels used:    1
 45902 ;; Hardware stack levels required when called:   15
 45903 ;; This function calls:
 45904 ;;		Nothing
 45905 ;; This function is called by:
 45906 ;;		_SYSTEM_Initialize
 45907 ;; This function uses a reentrant model
 45908 ;;
 45909                           
 45910                           	psect	text174
 45911  002D3E                     __ptext174:
 45912                           	opt callstack 0
 45913  002D3E                     _FVR_Initialize:
 45914                           	opt callstack 14
 45915                           
 45916                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 45917                           
 45918                           ; BSR set to: 57
 45919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45920                           ;incstack = 0
 45921  002D3E  0EAF               	movlw	175
 45922  002D40  013E               	movlb	62	; () banked
 45923  002D42  6FC1               	movwf	193,b	;volatile
 45924                           
 45925                           ; BSR set to: 62
 45926                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45927  002D44  0012               	return		;funcret
 45928  002D46                     __end_of_FVR_Initialize:
 45929                           	opt callstack 0
 45930                           
 45931 ;; *************** function _EXT_INT_Initialize *****************
 45932 ;; Defined at:
 45933 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 45934 ;; Parameters:    Size  Location     Type
 45935 ;;		None
 45936 ;; Auto vars:     Size  Location     Type
 45937 ;;		None
 45938 ;; Return value:  Size  Location     Type
 45939 ;;                  1  [STACK] void 
 45940 ;; Registers used:
 45941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45942 ;; Tracked objects:
 45943 ;;		On entry : 3F/3F
 45944 ;;		On exit  : 3F/39
 45945 ;;		Unchanged: 0/0
 45946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45951 ;;Total ram usage:        0 bytes
 45952 ;; Hardware stack levels used:    1
 45953 ;; Hardware stack levels required when called:   16
 45954 ;; This function calls:
 45955 ;;		_INT0_SetInterruptHandler
 45956 ;;		_INT1_SetInterruptHandler
 45957 ;; This function is called by:
 45958 ;;		_SYSTEM_Initialize
 45959 ;; This function uses a reentrant model
 45960 ;;
 45961                           
 45962                           	psect	text175
 45963  0024F6                     __ptext175:
 45964                           	opt callstack 0
 45965  0024F6                     _EXT_INT_Initialize:
 45966                           	opt callstack 13
 45967                           
 45968                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 45969                           
 45970                           ; BSR set to: 62
 45971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45972                           ;incstack = 0
 45973  0024F6  0139               	movlb	57	; () banked
 45974  0024F8  91A1               	bcf	161,0,b	;volatile
 45975                           
 45976                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 45977  0024FA  90D2               	bcf	210,0,c	;volatile
 45978                           
 45979                           ; BSR set to: 57
 45980                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 45981  0024FC  0E76               	movlw	low _INT0_DefaultInterruptHandler
 45982  0024FE  6EE6               	movwf	postinc1,c
 45983  002500  0E2D               	movlw	high _INT0_DefaultInterruptHandler
 45984  002502  6EE6               	movwf	postinc1,c
 45985  002504  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 45986  002506  6EE6               	movwf	postinc1,c
 45987  002508  EC31  F014         	call	_INT0_SetInterruptHandler	;wreg free
 45988                           
 45989                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 45990  00250C  0139               	movlb	57	; () banked
 45991  00250E  8191               	bsf	145,0,b	;volatile
 45992                           
 45993                           ; BSR set to: 57
 45994                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 45995  002510  91A5               	bcf	165,0,b	;volatile
 45996                           
 45997                           ; BSR set to: 57
 45998                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 45999  002512  92D2               	bcf	210,1,c	;volatile
 46000                           
 46001                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 46002  002514  0E72               	movlw	low _INT1_DefaultInterruptHandler
 46003  002516  6EE6               	movwf	postinc1,c
 46004  002518  0E2D               	movlw	high _INT1_DefaultInterruptHandler
 46005  00251A  6EE6               	movwf	postinc1,c
 46006  00251C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 46007  00251E  6EE6               	movwf	postinc1,c
 46008  002520  EC1D  F014         	call	_INT1_SetInterruptHandler	;wreg free
 46009                           
 46010                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 46011  002524  0139               	movlb	57	; () banked
 46012  002526  8195               	bsf	149,0,b	;volatile
 46013                           
 46014                           ; BSR set to: 57
 46015                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 46016  002528  0012               	return		;funcret
 46017  00252A                     __end_of_EXT_INT_Initialize:
 46018                           	opt callstack 0
 46019                           
 46020 ;; *************** function _INT1_SetInterruptHandler *****************
 46021 ;; Defined at:
 46022 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 46023 ;; Parameters:    Size  Location     Type
 46024 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46025 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 46026 ;; Auto vars:     Size  Location     Type
 46027 ;;		None
 46028 ;; Return value:  Size  Location     Type
 46029 ;;                  1  [STACK] void 
 46030 ;; Registers used:
 46031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46032 ;; Tracked objects:
 46033 ;;		On entry : 3F/39
 46034 ;;		On exit  : 0/0
 46035 ;;		Unchanged: 0/0
 46036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46041 ;;Total ram usage:        0 bytes
 46042 ;; Hardware stack levels used:    1
 46043 ;; Hardware stack levels required when called:   15
 46044 ;; This function calls:
 46045 ;;		Nothing
 46046 ;; This function is called by:
 46047 ;;		_EXT_INT_Initialize
 46048 ;;		_start_switch_handler
 46049 ;; This function uses a reentrant model
 46050 ;;
 46051                           
 46052                           	psect	text176
 46053  00283A                     __ptext176:
 46054                           	opt callstack 0
 46055  00283A                     _INT1_SetInterruptHandler:
 46056                           	opt callstack 14
 46057                           
 46058                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 46059                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46060                           
 46061                           ; BSR set to: 57
 46062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46063                           ;incstack = 0
 46064  00283A  50E1               	movf	fsr1l,w,c
 46065  00283C  0FFD               	addlw	-3
 46066  00283E  6ED9               	movwf	fsr2l,c
 46067  002840  50E2               	movf	fsr1h,w,c
 46068  002842  6EDA               	movwf	fsr2h,c
 46069  002844  0EFF               	movlw	255
 46070  002846  22DA               	addwfc	fsr2h,f,c
 46071  002848  006F FF78  F0B0    	movff	postinc2,_INT1_InterruptHandler
 46072  00284E  006F FF78  F0B1    	movff	postinc2,_INT1_InterruptHandler+1
 46073  002854  006F FF74  F0B2    	movff	postdec2,_INT1_InterruptHandler+2
 46074                           
 46075                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46076  00285A  52E5               	movf	postdec1,f,c
 46077  00285C  52E5               	movf	postdec1,f,c
 46078  00285E  52E5               	movf	postdec1,f,c
 46079  002860  0012               	return		;funcret
 46080  002862                     __end_of_INT1_SetInterruptHandler:
 46081                           	opt callstack 0
 46082                           
 46083 ;; *************** function _INT0_SetInterruptHandler *****************
 46084 ;; Defined at:
 46085 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 46086 ;; Parameters:    Size  Location     Type
 46087 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46088 ;;		 -> INT0_DefaultInterruptHandler(1), 
 46089 ;; Auto vars:     Size  Location     Type
 46090 ;;		None
 46091 ;; Return value:  Size  Location     Type
 46092 ;;                  1  [STACK] void 
 46093 ;; Registers used:
 46094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46095 ;; Tracked objects:
 46096 ;;		On entry : 3F/39
 46097 ;;		On exit  : 0/0
 46098 ;;		Unchanged: 0/0
 46099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46104 ;;Total ram usage:        0 bytes
 46105 ;; Hardware stack levels used:    1
 46106 ;; Hardware stack levels required when called:   15
 46107 ;; This function calls:
 46108 ;;		Nothing
 46109 ;; This function is called by:
 46110 ;;		_EXT_INT_Initialize
 46111 ;; This function uses a reentrant model
 46112 ;;
 46113                           
 46114                           	psect	text177
 46115  002862                     __ptext177:
 46116                           	opt callstack 0
 46117  002862                     _INT0_SetInterruptHandler:
 46118                           	opt callstack 13
 46119                           
 46120                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 46121                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46122                           
 46123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46124                           ;incstack = 0
 46125  002862  50E1               	movf	fsr1l,w,c
 46126  002864  0FFD               	addlw	-3
 46127  002866  6ED9               	movwf	fsr2l,c
 46128  002868  50E2               	movf	fsr1h,w,c
 46129  00286A  6EDA               	movwf	fsr2h,c
 46130  00286C  0EFF               	movlw	255
 46131  00286E  22DA               	addwfc	fsr2h,f,c
 46132  002870  006F FF78  F0B3    	movff	postinc2,_INT0_InterruptHandler
 46133  002876  006F FF78  F0B4    	movff	postinc2,_INT0_InterruptHandler+1
 46134  00287C  006F FF74  F0B5    	movff	postdec2,_INT0_InterruptHandler+2
 46135                           
 46136                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 46137  002882  52E5               	movf	postdec1,f,c
 46138  002884  52E5               	movf	postdec1,f,c
 46139  002886  52E5               	movf	postdec1,f,c
 46140  002888  0012               	return		;funcret
 46141  00288A                     __end_of_INT0_SetInterruptHandler:
 46142                           	opt callstack 0
 46143                           
 46144 ;; *************** function _DMA2_Initialize *****************
 46145 ;; Defined at:
 46146 ;;		line 61 in file "mcc_generated_files/dma2.c"
 46147 ;; Parameters:    Size  Location     Type
 46148 ;;		None
 46149 ;; Auto vars:     Size  Location     Type
 46150 ;;		None
 46151 ;; Return value:  Size  Location     Type
 46152 ;;                  1  [STACK] void 
 46153 ;; Registers used:
 46154 ;;		wreg, status,2
 46155 ;; Tracked objects:
 46156 ;;		On entry : 3F/3D
 46157 ;;		On exit  : 3F/3B
 46158 ;;		Unchanged: 0/0
 46159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46164 ;;Total ram usage:        0 bytes
 46165 ;; Hardware stack levels used:    1
 46166 ;; Hardware stack levels required when called:   15
 46167 ;; This function calls:
 46168 ;;		Nothing
 46169 ;; This function is called by:
 46170 ;;		_SYSTEM_Initialize
 46171 ;; This function uses a reentrant model
 46172 ;;
 46173                           
 46174                           	psect	text178
 46175  001D58                     __ptext178:
 46176                           	opt callstack 0
 46177  001D58                     _DMA2_Initialize:
 46178                           	opt callstack 14
 46179                           
 46180                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 46181                           
 46182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46183                           ;incstack = 0
 46184  001D58  0E00               	movlw	0
 46185  001D5A  013B               	movlb	59	; () banked
 46186  001D5C  6FD9               	movwf	217,b	;volatile
 46187  001D5E  0E10               	movlw	16
 46188  001D60  6FDA               	movwf	218,b	;volatile
 46189  001D62  0E00               	movlw	0
 46190  001D64  6FDB               	movwf	219,b	;volatile
 46191                           
 46192                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 46193  001D66  0E3F               	movlw	63
 46194  001D68  6FD1               	movwf	209,b	;volatile
 46195  001D6A  0EBB               	movlw	187
 46196  001D6C  6FD0               	movwf	208,b	;volatile
 46197                           
 46198                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 46199  001D6E  0E03               	movlw	3
 46200  001D70  6FDD               	movwf	221,b	;volatile
 46201                           
 46202                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 46203  001D72  0E00               	movlw	0
 46204  001D74  6FD8               	movwf	216,b	;volatile
 46205  001D76  0E01               	movlw	1
 46206  001D78  6FD7               	movwf	215,b	;volatile
 46207                           
 46208                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 46209  001D7A  0E00               	movlw	0
 46210  001D7C  6FCF               	movwf	207,b	;volatile
 46211  001D7E  0E01               	movlw	1
 46212  001D80  6FCE               	movwf	206,b	;volatile
 46213                           
 46214                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 46215  001D82  0E1C               	movlw	28
 46216  001D84  6FDF               	movwf	223,b	;volatile
 46217                           
 46218                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 46219  001D86  0E3D               	movlw	61
 46220  001D88  6FDE               	movwf	222,b	;volatile
 46221                           
 46222                           ; BSR set to: 59
 46223                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 46224  001D8A  0139               	movlb	57	; () banked
 46225  001D8C  97A5               	bcf	165,3,b	;volatile
 46226                           
 46227                           ; BSR set to: 57
 46228                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 46229  001D8E  95A5               	bcf	165,2,b	;volatile
 46230                           
 46231                           ; BSR set to: 57
 46232                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 46233  001D90  9BA5               	bcf	165,5,b	;volatile
 46234                           
 46235                           ; BSR set to: 57
 46236                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 46237  001D92  99A5               	bcf	165,4,b	;volatile
 46238                           
 46239                           ; BSR set to: 57
 46240                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 46241  001D94  9795               	bcf	149,3,b	;volatile
 46242                           
 46243                           ; BSR set to: 57
 46244                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 46245  001D96  9595               	bcf	149,2,b	;volatile
 46246                           
 46247                           ; BSR set to: 57
 46248                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 46249  001D98  9B95               	bcf	149,5,b	;volatile
 46250                           
 46251                           ; BSR set to: 57
 46252                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 46253  001D9A  9995               	bcf	149,4,b	;volatile
 46254  001D9C  9ED2               	bcf	16338,7,c	;# 
 46255  001D9E  0139               	banksel	14831	;# 
 46256  001DA0  0E55               	movlw	85	;# 
 46257  001DA2  6FEF               	movwf	14831,b	;# 
 46258  001DA4  0EAA               	movlw	170	;# 
 46259  001DA6  6FEF               	movwf	14831,b	;# 
 46260  001DA8  81EF               	bsf	14831,0,b	;# 
 46261  001DAA  8ED2               	bsf	16338,7,c	;# 
 46262                           
 46263                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 46264  001DAC  013B               	movlb	59	; () banked
 46265  001DAE  6BDC               	clrf	220,b	;volatile
 46266                           
 46267                           ; BSR set to: 59
 46268                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46269  001DB0  0012               	return		;funcret
 46270  001DB2                     __end_of_DMA2_Initialize:
 46271                           	opt callstack 0
 46272                           
 46273 ;; *************** function _DMA1_Initialize *****************
 46274 ;; Defined at:
 46275 ;;		line 86 in file "mcc_generated_files/dma1.c"
 46276 ;; Parameters:    Size  Location     Type
 46277 ;;		None
 46278 ;; Auto vars:     Size  Location     Type
 46279 ;;		None
 46280 ;; Return value:  Size  Location     Type
 46281 ;;                  1  [STACK] void 
 46282 ;; Registers used:
 46283 ;;		wreg, status,2
 46284 ;; Tracked objects:
 46285 ;;		On entry : 3F/3B
 46286 ;;		On exit  : 3F/3B
 46287 ;;		Unchanged: 0/0
 46288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46293 ;;Total ram usage:        0 bytes
 46294 ;; Hardware stack levels used:    1
 46295 ;; Hardware stack levels required when called:   15
 46296 ;; This function calls:
 46297 ;;		Nothing
 46298 ;; This function is called by:
 46299 ;;		_SYSTEM_Initialize
 46300 ;; This function uses a reentrant model
 46301 ;;
 46302                           
 46303                           	psect	text179
 46304  0017E6                     __ptext179:
 46305                           	opt callstack 0
 46306  0017E6                     _DMA1_Initialize:
 46307                           	opt callstack 14
 46308                           
 46309                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 46310                           
 46311                           ; BSR set to: 59
 46312                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46313                           ;incstack = 0
 46314  0017E6  0E00               	movlw	0
 46315  0017E8  013B               	movlb	59	; () banked
 46316  0017EA  6FF9               	movwf	249,b	;volatile
 46317  0017EC  0E10               	movlw	16
 46318  0017EE  6FFA               	movwf	250,b	;volatile
 46319  0017F0  0E00               	movlw	0
 46320  0017F2  6FFB               	movwf	251,b	;volatile
 46321                           
 46322                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 46323  0017F4  0E3D               	movlw	61
 46324  0017F6  6FF1               	movwf	241,b	;volatile
 46325  0017F8  0E11               	movlw	17
 46326  0017FA  6FF0               	movwf	240,b	;volatile
 46327                           
 46328                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 46329  0017FC  0E03               	movlw	3
 46330  0017FE  6FFD               	movwf	253,b	;volatile
 46331                           
 46332                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 46333  001800  0E00               	movlw	0
 46334  001802  6FF8               	movwf	248,b	;volatile
 46335  001804  0E01               	movlw	1
 46336  001806  6FF7               	movwf	247,b	;volatile
 46337                           
 46338                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 46339  001808  0E00               	movlw	0
 46340  00180A  6FEF               	movwf	239,b	;volatile
 46341  00180C  0E01               	movlw	1
 46342  00180E  6FEE               	movwf	238,b	;volatile
 46343                           
 46344                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 46345  001810  0E15               	movlw	21
 46346  001812  6FFF               	movwf	255,b	;volatile
 46347                           
 46348                           ; BSR set to: 59
 46349                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 46350  001814  6BFE               	clrf	254,b	;volatile
 46351                           
 46352                           ; BSR set to: 59
 46353                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 46354  001816  0139               	movlb	57	; () banked
 46355  001818  93A2               	bcf	162,1,b	;volatile
 46356                           
 46357                           ; BSR set to: 57
 46358                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 46359  00181A  91A2               	bcf	162,0,b	;volatile
 46360                           
 46361                           ; BSR set to: 57
 46362                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 46363  00181C  97A2               	bcf	162,3,b	;volatile
 46364                           
 46365                           ; BSR set to: 57
 46366                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 46367  00181E  95A2               	bcf	162,2,b	;volatile
 46368                           
 46369                           ; BSR set to: 57
 46370                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 46371  001820  8392               	bsf	146,1,b	;volatile
 46372                           
 46373                           ; BSR set to: 57
 46374                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 46375  001822  8192               	bsf	146,0,b	;volatile
 46376                           
 46377                           ; BSR set to: 57
 46378                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 46379  001824  8792               	bsf	146,3,b	;volatile
 46380                           
 46381                           ; BSR set to: 57
 46382                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 46383  001826  8592               	bsf	146,2,b	;volatile
 46384                           
 46385                           ; BSR set to: 57
 46386                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 46387  001828  6BF1               	clrf	241,b	;volatile
 46388                           
 46389                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 46390  00182A  0E01               	movlw	1
 46391  00182C  6FF2               	movwf	242,b	;volatile
 46392                           
 46393                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 46394  00182E  0E04               	movlw	4
 46395  001830  6FF3               	movwf	243,b	;volatile
 46396                           
 46397                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 46398  001832  0E02               	movlw	2
 46399  001834  6FF4               	movwf	244,b	;volatile
 46400                           
 46401                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 46402  001836  0E03               	movlw	3
 46403  001838  6FF7               	movwf	247,b	;volatile
 46404  00183A  9ED2               	bcf	16338,7,c	;# 
 46405  00183C  0139               	banksel	14831	;# 
 46406  00183E  0E55               	movlw	85	;# 
 46407  001840  6FEF               	movwf	14831,b	;# 
 46408  001842  0EAA               	movlw	170	;# 
 46409  001844  6FEF               	movwf	14831,b	;# 
 46410  001846  81EF               	bsf	14831,0,b	;# 
 46411  001848  8ED2               	bsf	16338,7,c	;# 
 46412                           
 46413                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 46414  00184A  013B               	movlb	59	; () banked
 46415  00184C  6BFC               	clrf	252,b	;volatile
 46416                           
 46417                           ; BSR set to: 59
 46418                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46419  00184E  0012               	return		;funcret
 46420  001850                     __end_of_DMA1_Initialize:
 46421                           	opt callstack 0
 46422                           
 46423 ;; *************** function _CRC_Initialize *****************
 46424 ;; Defined at:
 46425 ;;		line 76 in file "mcc_generated_files/crc.c"
 46426 ;; Parameters:    Size  Location     Type
 46427 ;;		None
 46428 ;; Auto vars:     Size  Location     Type
 46429 ;;  seed            2  [STACK] unsigned short 
 46430 ;;  poly            2  [STACK] unsigned short 
 46431 ;; Return value:  Size  Location     Type
 46432 ;;                  1  [STACK] void 
 46433 ;; Registers used:
 46434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 46435 ;; Tracked objects:
 46436 ;;		On entry : 0/39
 46437 ;;		On exit  : 3F/0
 46438 ;;		Unchanged: 0/0
 46439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46444 ;;Total ram usage:        0 bytes
 46445 ;; Hardware stack levels used:    1
 46446 ;; Hardware stack levels required when called:   15
 46447 ;; This function calls:
 46448 ;;		Nothing
 46449 ;; This function is called by:
 46450 ;;		_SYSTEM_Initialize
 46451 ;;		_read_cal_data
 46452 ;;		_write_cal_data
 46453 ;; This function uses a reentrant model
 46454 ;;
 46455                           
 46456                           	psect	text180
 46457  0012E2                     __ptext180:
 46458                           	opt callstack 0
 46459  0012E2                     _CRC_Initialize:
 46460                           	opt callstack 0
 46461                           
 46462                           ; BSR set to: 59
 46463                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46464  0012E2  52E6               	movf	postinc1,f,c
 46465  0012E4  52E6               	movf	postinc1,f,c
 46466  0012E6  52E6               	movf	postinc1,f,c
 46467  0012E8  52E6               	movf	postinc1,f,c
 46468                           
 46469                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 46470                           
 46471                           ;incstack = 0
 46472  0012EA  0E80               	movlw	128
 46473  0012EC  0139               	movlb	57	; () banked
 46474  0012EE  6F68               	movwf	104,b	;volatile
 46475                           
 46476                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 46477  0012F0  0E07               	movlw	7
 46478  0012F2  6F69               	movwf	105,b	;volatile
 46479                           
 46480                           ; BSR set to: 57
 46481                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 46482  0012F4  6B62               	clrf	98,b	;volatile
 46483                           
 46484                           ; BSR set to: 57
 46485                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 46486  0012F6  6B63               	clrf	99,b	;volatile
 46487                           
 46488                           ; BSR set to: 57
 46489                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 46490  0012F8  6B7C               	clrf	124,b	;volatile
 46491                           
 46492                           ; BSR set to: 57
 46493                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 46494  0012FA  6B78               	clrf	120,b	;volatile
 46495                           
 46496                           ; BSR set to: 57
 46497                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 46498  0012FC  6B77               	clrf	119,b	;volatile
 46499                           
 46500                           ; BSR set to: 57
 46501                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 46502  0012FE  6B76               	clrf	118,b	;volatile
 46503                           
 46504                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 46505  001300  0E3F               	movlw	63
 46506  001302  6F7B               	movwf	123,b	;volatile
 46507                           
 46508                           ; BSR set to: 57
 46509                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 46510  001304  697A               	setf	122,b	;volatile
 46511                           
 46512                           ; BSR set to: 57
 46513                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 46514  001306  6979               	setf	121,b	;volatile
 46515                           
 46516                           ; BSR set to: 57
 46517                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 46518  001308  6B7D               	clrf	125,b	;volatile
 46519                           
 46520                           ; BSR set to: 57
 46521                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 46522  00130A  0ED5               	movlw	213
 46523  00130C  6E34               	movwf	(btemp+10)^0,c
 46524  00130E  0E00               	movlw	0
 46525  001310  6E35               	movwf	(btemp+11)^0,c
 46526                           
 46527                           ;stkvar	_poly @ sp[(-4)+2]
 46528  001312  0EFE               	movlw	-2
 46529  001314  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 46530  00131A  0EFF               	movlw	-1
 46531  00131C  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 46532                           
 46533                           ; BSR set to: 57
 46534                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 46535                           ;stkvar	_poly @ sp[(-4)+2]
 46536  001322  0EFF               	movlw	255
 46537  001324  24E1               	addwf	fsr1l,w,c
 46538  001326  6ED9               	movwf	fsr2l,c
 46539  001328  0EFF               	movlw	255
 46540  00132A  20E2               	addwfc	fsr1h,w,c
 46541  00132C  6EDA               	movwf	fsr2h,c
 46542  00132E  50DF               	movf	indf2,w,c
 46543  001330  6F67               	movwf	103,b	;volatile
 46544                           
 46545                           ; BSR set to: 57
 46546                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 46547  001332  0ED5               	movlw	213
 46548  001334  6F66               	movwf	102,b	;volatile
 46549                           
 46550                           ; BSR set to: 57
 46551                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 46552                           ;stkvar	_seed @ sp[(-4)+0]
 46553  001336  0EFC               	movlw	-4
 46554  001338  6AE3               	clrf	plusw1,c
 46555  00133A  0EFD               	movlw	-3
 46556  00133C  6AE3               	clrf	plusw1,c
 46557                           
 46558                           ; BSR set to: 57
 46559                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 46560                           ;stkvar	_seed @ sp[(-4)+0]
 46561  00133E  0EFD               	movlw	253
 46562  001340  24E1               	addwf	fsr1l,w,c
 46563  001342  6ED9               	movwf	fsr2l,c
 46564  001344  0EFF               	movlw	255
 46565  001346  20E2               	addwfc	fsr1h,w,c
 46566  001348  6EDA               	movwf	fsr2h,c
 46567  00134A  50DF               	movf	indf2,w,c
 46568  00134C  6F63               	movwf	99,b	;volatile
 46569                           
 46570                           ; BSR set to: 57
 46571                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 46572  00134E  6B62               	clrf	98,b	;volatile
 46573                           
 46574                           ; BSR set to: 57
 46575                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 46576  001350  3969               	swapf	105,w,b	;volatile
 46577  001352  0B0F               	andlw	15
 46578  001354  6E35               	movwf	(btemp+11)^0,c
 46579  001356  2835               	incf	(btemp+11)^0,w,c
 46580  001358  0100               	movlb	0	; () banked
 46581  00135A  6FE2               	movwf	_crcObj& (0+255),b
 46582                           
 46583                           ; BSR set to: 0
 46584                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 46585  00135C  0139               	movlb	57	; () banked
 46586  00135E  5169               	movf	105,w,b	;volatile
 46587  001360  0B0F               	andlw	15
 46588  001362  6E35               	movwf	(btemp+11)^0,c
 46589  001364  2835               	incf	(btemp+11)^0,w,c
 46590  001366  0100               	movlb	0	; () banked
 46591  001368  6FE3               	movwf	(_crcObj+1)& (0+255),b
 46592                           
 46593                           ; BSR set to: 0
 46594                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46595  00136A  52E5               	movf	postdec1,f,c
 46596  00136C  52E5               	movf	postdec1,f,c
 46597  00136E  52E5               	movf	postdec1,f,c
 46598  001370  52E5               	movf	postdec1,f,c
 46599  001372  0012               	return		;funcret
 46600  001374                     __end_of_CRC_Initialize:
 46601                           	opt callstack 0
 46602                           
 46603 ;; *************** function _CLKREF_Initialize *****************
 46604 ;; Defined at:
 46605 ;;		line 58 in file "mcc_generated_files/clkref.c"
 46606 ;; Parameters:    Size  Location     Type
 46607 ;;		None
 46608 ;; Auto vars:     Size  Location     Type
 46609 ;;		None
 46610 ;; Return value:  Size  Location     Type
 46611 ;;                  1  [STACK] void 
 46612 ;; Registers used:
 46613 ;;		wreg, status,2
 46614 ;; Tracked objects:
 46615 ;;		On entry : 3F/3B
 46616 ;;		On exit  : 3F/3C
 46617 ;;		Unchanged: 0/0
 46618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46623 ;;Total ram usage:        0 bytes
 46624 ;; Hardware stack levels used:    1
 46625 ;; Hardware stack levels required when called:   15
 46626 ;; This function calls:
 46627 ;;		Nothing
 46628 ;; This function is called by:
 46629 ;;		_SYSTEM_Initialize
 46630 ;; This function uses a reentrant model
 46631 ;;
 46632                           
 46633                           	psect	text181
 46634  002CE6                     __ptext181:
 46635                           	opt callstack 0
 46636  002CE6                     _CLKREF_Initialize:
 46637                           	opt callstack 14
 46638                           
 46639                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 46640                           
 46641                           ; BSR set to: 0
 46642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46643                           ;incstack = 0
 46644  002CE6  013C               	movlb	60	; () banked
 46645  002CE8  6BE6               	clrf	230,b	;volatile
 46646                           
 46647                           ; BSR set to: 60
 46648                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 46649  002CEA  0E94               	movlw	148
 46650  002CEC  6FE5               	movwf	229,b	;volatile
 46651                           
 46652                           ; BSR set to: 60
 46653                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 46654  002CEE  0012               	return		;funcret
 46655  002CF0                     __end_of_CLKREF_Initialize:
 46656                           	opt callstack 0
 46657                           
 46658 ;; *************** function _ADCC_Initialize *****************
 46659 ;; Defined at:
 46660 ;;		line 65 in file "mcc_generated_files/adcc.c"
 46661 ;; Parameters:    Size  Location     Type
 46662 ;;		None
 46663 ;; Auto vars:     Size  Location     Type
 46664 ;;		None
 46665 ;; Return value:  Size  Location     Type
 46666 ;;                  1  [STACK] void 
 46667 ;; Registers used:
 46668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 46669 ;; Tracked objects:
 46670 ;;		On entry : 3F/0
 46671 ;;		On exit  : 0/0
 46672 ;;		Unchanged: 0/0
 46673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46678 ;;Total ram usage:        0 bytes
 46679 ;; Hardware stack levels used:    1
 46680 ;; Hardware stack levels required when called:   16
 46681 ;; This function calls:
 46682 ;;		_ADCC_SetADIInterruptHandler
 46683 ;;		_ADCC_SetADTIInterruptHandler
 46684 ;; This function is called by:
 46685 ;;		_SYSTEM_Initialize
 46686 ;; This function uses a reentrant model
 46687 ;;
 46688                           
 46689                           	psect	text182
 46690  001850                     __ptext182:
 46691                           	opt callstack 0
 46692  001850                     _ADCC_Initialize:
 46693                           	opt callstack 13
 46694                           
 46695                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 46696                           
 46697                           ; BSR set to: 60
 46698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46699                           ;incstack = 0
 46700  001850  013E               	movlb	62	; () banked
 46701  001852  6BDE               	clrf	222,b	;volatile
 46702                           
 46703                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 46704  001854  6BDF               	clrf	223,b	;volatile
 46705                           
 46706                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 46707  001856  6BE0               	clrf	224,b	;volatile
 46708                           
 46709                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 46710  001858  6BE1               	clrf	225,b	;volatile
 46711                           
 46712                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 46713  00185A  6BE4               	clrf	228,b	;volatile
 46714                           
 46715                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 46716  00185C  6BE5               	clrf	229,b	;volatile
 46717                           
 46718                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 46719  00185E  6BEA               	clrf	234,b	;volatile
 46720                           
 46721                           ; BSR set to: 62
 46722                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 46723  001860  0E40               	movlw	64
 46724  001862  6FEC               	movwf	236,b	;volatile
 46725                           
 46726                           ; BSR set to: 62
 46727                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 46728  001864  6BF1               	clrf	241,b	;volatile
 46729                           
 46730                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 46731  001866  0E20               	movlw	32
 46732  001868  6FF3               	movwf	243,b	;volatile
 46733                           
 46734                           ; BSR set to: 62
 46735                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 46736  00186A  6BF4               	clrf	244,b	;volatile
 46737                           
 46738                           ; BSR set to: 62
 46739                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 46740  00186C  6BF5               	clrf	245,b	;volatile
 46741                           
 46742                           ; BSR set to: 62
 46743                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 46744  00186E  6BF6               	clrf	246,b	;volatile
 46745                           
 46746                           ; BSR set to: 62
 46747                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 46748  001870  6BF7               	clrf	247,b	;volatile
 46749                           
 46750                           ; BSR set to: 62
 46751                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 46752  001872  6BF9               	clrf	249,b	;volatile
 46753                           
 46754                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 46755  001874  0E5B               	movlw	91
 46756  001876  6FFA               	movwf	250,b	;volatile
 46757                           
 46758                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 46759  001878  0E27               	movlw	39
 46760  00187A  6FFB               	movwf	251,b	;volatile
 46761                           
 46762                           ; BSR set to: 62
 46763                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 46764  00187C  6BFC               	clrf	252,b	;volatile
 46765                           
 46766                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 46767  00187E  0E02               	movlw	2
 46768  001880  6FFD               	movwf	253,b	;volatile
 46769                           
 46770                           ; BSR set to: 62
 46771                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 46772  001882  6BFE               	clrf	254,b	;volatile
 46773                           
 46774                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 46775  001884  0E07               	movlw	7
 46776  001886  6FFF               	movwf	255,b	;volatile
 46777                           
 46778                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 46779  001888  0E84               	movlw	132
 46780  00188A  6FF8               	movwf	248,b	;volatile
 46781                           
 46782                           ; BSR set to: 62
 46783                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 46784  00188C  0139               	movlb	57	; () banked
 46785  00188E  95A1               	bcf	161,2,b	;volatile
 46786                           
 46787                           ; BSR set to: 57
 46788                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 46789  001890  8591               	bsf	145,2,b	;volatile
 46790                           
 46791                           ; BSR set to: 57
 46792                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 46793  001892  0E78               	movlw	low _ADCC_DefaultInterruptHandler
 46794  001894  6EE6               	movwf	postinc1,c
 46795  001896  0E2D               	movlw	high _ADCC_DefaultInterruptHandler
 46796  001898  6EE6               	movwf	postinc1,c
 46797  00189A  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46798  00189C  6EE6               	movwf	postinc1,c
 46799  00189E  EC59  F014         	call	_ADCC_SetADIInterruptHandler	;wreg free
 46800                           
 46801                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 46802  0018A2  0139               	movlb	57	; () banked
 46803  0018A4  97A1               	bcf	161,3,b	;volatile
 46804                           
 46805                           ; BSR set to: 57
 46806                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 46807  0018A6  8791               	bsf	145,3,b	;volatile
 46808                           
 46809                           ; BSR set to: 57
 46810                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 46811  0018A8  0E78               	movlw	low _ADCC_DefaultInterruptHandler
 46812  0018AA  6EE6               	movwf	postinc1,c
 46813  0018AC  0E2D               	movlw	high _ADCC_DefaultInterruptHandler
 46814  0018AE  6EE6               	movwf	postinc1,c
 46815  0018B0  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 46816  0018B2  6EE6               	movwf	postinc1,c
 46817  0018B4  EC45  F014         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 46818                           
 46819                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 46820  0018B8  0012               	return		;funcret
 46821  0018BA                     __end_of_ADCC_Initialize:
 46822                           	opt callstack 0
 46823                           
 46824 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 46825 ;; Defined at:
 46826 ;;		line 336 in file "mcc_generated_files/adcc.c"
 46827 ;; Parameters:    Size  Location     Type
 46828 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46829 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 46830 ;; Auto vars:     Size  Location     Type
 46831 ;;		None
 46832 ;; Return value:  Size  Location     Type
 46833 ;;                  1  [STACK] void 
 46834 ;; Registers used:
 46835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46836 ;; Tracked objects:
 46837 ;;		On entry : 0/1
 46838 ;;		On exit  : 0/0
 46839 ;;		Unchanged: 0/0
 46840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46845 ;;Total ram usage:        0 bytes
 46846 ;; Hardware stack levels used:    1
 46847 ;; Hardware stack levels required when called:   15
 46848 ;; This function calls:
 46849 ;;		Nothing
 46850 ;; This function is called by:
 46851 ;;		_ADCC_Initialize
 46852 ;;		_start_adc_scan
 46853 ;; This function uses a reentrant model
 46854 ;;
 46855                           
 46856                           	psect	text183
 46857  00288A                     __ptext183:
 46858                           	opt callstack 0
 46859  00288A                     _ADCC_SetADTIInterruptHandler:
 46860                           	opt callstack 14
 46861                           
 46862                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 46863                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46864                           
 46865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46866                           ;incstack = 0
 46867  00288A  50E1               	movf	fsr1l,w,c
 46868  00288C  0FFD               	addlw	-3
 46869  00288E  6ED9               	movwf	fsr2l,c
 46870  002890  50E2               	movf	fsr1h,w,c
 46871  002892  6EDA               	movwf	fsr2h,c
 46872  002894  0EFF               	movlw	255
 46873  002896  22DA               	addwfc	fsr2h,f,c
 46874  002898  006F FF78  F0A1    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 46875  00289E  006F FF78  F0A2    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 46876  0028A4  006F FF74  F0A3    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 46877                           
 46878                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 46879  0028AA  52E5               	movf	postdec1,f,c
 46880  0028AC  52E5               	movf	postdec1,f,c
 46881  0028AE  52E5               	movf	postdec1,f,c
 46882  0028B0  0012               	return		;funcret
 46883  0028B2                     __end_of_ADCC_SetADTIInterruptHandler:
 46884                           	opt callstack 0
 46885                           
 46886 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 46887 ;; Defined at:
 46888 ;;		line 323 in file "mcc_generated_files/adcc.c"
 46889 ;; Parameters:    Size  Location     Type
 46890 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 46891 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 46892 ;; Auto vars:     Size  Location     Type
 46893 ;;		None
 46894 ;; Return value:  Size  Location     Type
 46895 ;;                  1  [STACK] void 
 46896 ;; Registers used:
 46897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 46898 ;; Tracked objects:
 46899 ;;		On entry : 7/1
 46900 ;;		On exit  : 0/0
 46901 ;;		Unchanged: 0/0
 46902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46907 ;;Total ram usage:        0 bytes
 46908 ;; Hardware stack levels used:    1
 46909 ;; Hardware stack levels required when called:   15
 46910 ;; This function calls:
 46911 ;;		Nothing
 46912 ;; This function is called by:
 46913 ;;		_ADCC_Initialize
 46914 ;;		_start_adc_scan
 46915 ;; This function uses a reentrant model
 46916 ;;
 46917                           
 46918                           	psect	text184
 46919  0028B2                     __ptext184:
 46920                           	opt callstack 0
 46921  0028B2                     _ADCC_SetADIInterruptHandler:
 46922                           	opt callstack 14
 46923                           
 46924                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 46925                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 46926                           
 46927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46928                           ;incstack = 0
 46929  0028B2  50E1               	movf	fsr1l,w,c
 46930  0028B4  0FFD               	addlw	-3
 46931  0028B6  6ED9               	movwf	fsr2l,c
 46932  0028B8  50E2               	movf	fsr1h,w,c
 46933  0028BA  6EDA               	movwf	fsr2h,c
 46934  0028BC  0EFF               	movlw	255
 46935  0028BE  22DA               	addwfc	fsr2h,f,c
 46936  0028C0  006F FF78  F0A4    	movff	postinc2,_ADCC_ADI_InterruptHandler
 46937  0028C6  006F FF78  F0A5    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 46938  0028CC  006F FF74  F0A6    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 46939                           
 46940                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 46941  0028D2  52E5               	movf	postdec1,f,c
 46942  0028D4  52E5               	movf	postdec1,f,c
 46943  0028D6  52E5               	movf	postdec1,f,c
 46944  0028D8  0012               	return		;funcret
 46945  0028DA                     __end_of_ADCC_SetADIInterruptHandler:
 46946                           	opt callstack 0
 46947                           
 46948 ;; *************** function _INT1_ISR *****************
 46949 ;; Defined at:
 46950 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 46951 ;; Parameters:    Size  Location     Type
 46952 ;;		None
 46953 ;; Auto vars:     Size  Location     Type
 46954 ;;		None
 46955 ;; Return value:  Size  Location     Type
 46956 ;;                  1    wreg      void 
 46957 ;; Registers used:
 46958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 46959 ;; Tracked objects:
 46960 ;;		On entry : 0/0
 46961 ;;		On exit  : 0/0
 46962 ;;		Unchanged: 0/0
 46963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46966 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46968 ;;Total ram usage:        4 bytes
 46969 ;; Hardware stack levels used:    1
 46970 ;; Hardware stack levels required when called:    5
 46971 ;; This function calls:
 46972 ;;		_INT1_CallBack
 46973 ;; This function is called by:
 46974 ;;		Interrupt level 1
 46975 ;; This function uses a non-reentrant model
 46976 ;;
 46977                           
 46978                           	psect	text185
 46979  002300                     __ptext185:
 46980                           	opt callstack 0
 46981  002300                     _INT1_ISR:
 46982                           	opt callstack 12
 46983                           
 46984                           ;incstack = 0
 46985  002300  006F FF60  F007    	movff	status,??_INT1_ISR
 46986  002306  0060  F0A8  F008   	movff	btemp,??_INT1_ISR+1
 46987  00230C  0060  F0D0  F009   	movff	btemp+10,??_INT1_ISR+2
 46988  002312  0060  F0D4  F00A   	movff	btemp+11,??_INT1_ISR+3
 46989  002318  EE16  F196         	lfsr	1,___intlo_sp
 46990                           
 46991                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 46992  00231C  0139               	movlb	57	; () banked
 46993  00231E  91A5               	bcf	165,0,b	;volatile
 46994                           
 46995                           ; BSR set to: 57
 46996                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 46997  002320  ECBC  F014         	call	_INT1_CallBack	;wreg free
 46998  002324  0060  F028  F035   	movff	??_INT1_ISR+3,btemp+11
 46999  00232A  0060  F024  F034   	movff	??_INT1_ISR+2,btemp+10
 47000  002330  0060  F020  F02A   	movff	??_INT1_ISR+1,btemp
 47001  002336  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 47002  00233C  0011               	retfie		f
 47003  00233E                     __end_of_INT1_ISR:
 47004                           	opt callstack 0
 47005                           
 47006 ;; *************** function _INT1_CallBack *****************
 47007 ;; Defined at:
 47008 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 47009 ;; Parameters:    Size  Location     Type
 47010 ;;		None
 47011 ;; Auto vars:     Size  Location     Type
 47012 ;;		None
 47013 ;; Return value:  Size  Location     Type
 47014 ;;                  1  [STACK] void 
 47015 ;; Registers used:
 47016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 47017 ;; Tracked objects:
 47018 ;;		On entry : 3F/39
 47019 ;;		On exit  : 0/0
 47020 ;;		Unchanged: 0/0
 47021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47026 ;;Total ram usage:        0 bytes
 47027 ;; Hardware stack levels used:    1
 47028 ;; Hardware stack levels required when called:    4
 47029 ;; This function calls:
 47030 ;;		Absolute function
 47031 ;;		_INT1_DefaultInterruptHandler
 47032 ;;		_switch_handler
 47033 ;; This function is called by:
 47034 ;;		_INT1_ISR
 47035 ;; This function uses a reentrant model
 47036 ;;
 47037                           
 47038                           	psect	text186
 47039  002978                     __ptext186:
 47040                           	opt callstack 0
 47041  002978                     _INT1_CallBack:
 47042                           	opt callstack 12
 47043                           
 47044                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 47045                           
 47046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47047                           ;incstack = 0
 47048  002978  0100               	movlb	0	; () banked
 47049  00297A  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47050  00297C  11B1               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47051  00297E  11B2               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47052  002980  B4D8               	btfsc	status,2,c
 47053  002982  0012               	return	
 47054                           
 47055                           ; BSR set to: 0
 47056                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 47057  002984  D801               	call	u1315_28
 47058  002986  0012               	return	
 47059  002988                     u1315_28:
 47060  002988  0005               	push	
 47061  00298A  6EFA               	movwf	pclath,c
 47062  00298C  51B0               	movf	_INT1_InterruptHandler& (0+255),w,b
 47063  00298E  6EFD               	movwf	tosl,c
 47064  002990  51B1               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 47065  002992  6EFE               	movwf	tosh,c
 47066  002994  51B2               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 47067  002996  6EFF               	movwf	tosu,c
 47068  002998  50FA               	movf	pclath,w,c
 47069  00299A  0012               	return		;indir
 47070  00299C                     __end_of_INT1_CallBack:
 47071                           	opt callstack 0
 47072                           
 47073 ;; *************** function _INT1_DefaultInterruptHandler *****************
 47074 ;; Defined at:
 47075 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 47076 ;; Parameters:    Size  Location     Type
 47077 ;;		None
 47078 ;; Auto vars:     Size  Location     Type
 47079 ;;		None
 47080 ;; Return value:  Size  Location     Type
 47081 ;;                  1  [STACK] void 
 47082 ;; Registers used:
 47083 ;;		None
 47084 ;; Tracked objects:
 47085 ;;		On entry : 3F/0
 47086 ;;		On exit  : 0/0
 47087 ;;		Unchanged: 0/0
 47088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47093 ;;Total ram usage:        0 bytes
 47094 ;; Hardware stack levels used:    1
 47095 ;; Hardware stack levels required when called:    3
 47096 ;; This function calls:
 47097 ;;		Nothing
 47098 ;; This function is called by:
 47099 ;;		_EXT_INT_Initialize
 47100 ;;		_INT1_CallBack
 47101 ;; This function uses a reentrant model
 47102 ;;
 47103                           
 47104                           	psect	text187
 47105  002D72                     __ptext187:
 47106                           	opt callstack 0
 47107  002D72                     _INT1_DefaultInterruptHandler:
 47108                           	opt callstack 12
 47109                           
 47110                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47111                           
 47112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47113                           ;incstack = 0
 47114  002D72  0012               	return		;funcret
 47115  002D74                     __end_of_INT1_DefaultInterruptHandler:
 47116                           	opt callstack 0
 47117                           
 47118 ;; *************** function _switch_handler *****************
 47119 ;; Defined at:
 47120 ;;		line 58 in file "dio.c"
 47121 ;; Parameters:    Size  Location     Type
 47122 ;;		None
 47123 ;; Auto vars:     Size  Location     Type
 47124 ;;  i               1  [STACK] unsigned char 
 47125 ;;  sw_value        1  [STACK] unsigned char 
 47126 ;; Return value:  Size  Location     Type
 47127 ;;                  1  [STACK] void 
 47128 ;; Registers used:
 47129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 47130 ;; Tracked objects:
 47131 ;;		On entry : 3F/0
 47132 ;;		On exit  : 0/0
 47133 ;;		Unchanged: 0/0
 47134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47139 ;;Total ram usage:        0 bytes
 47140 ;; Hardware stack levels used:    1
 47141 ;; Hardware stack levels required when called:    3
 47142 ;; This function calls:
 47143 ;;		Nothing
 47144 ;; This function is called by:
 47145 ;;		_start_switch_handler
 47146 ;;		_INT1_CallBack
 47147 ;; This function uses a reentrant model
 47148 ;;
 47149                           
 47150                           	psect	text188
 47151  01F48E                     __ptext188:
 47152                           	opt callstack 0
 47153  01F48E                     _switch_handler:
 47154                           	opt callstack 0
 47155                           
 47156                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47157  01F48E  52E6               	movf	postinc1,f,c
 47158  01F490  52E6               	movf	postinc1,f,c
 47159                           
 47160                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 47161                           ;stkvar	_i @ sp[(-2)+0]
 47162                           
 47163                           ;incstack = 0
 47164  01F492  0EFE               	movlw	-2
 47165  01F494  6AE3               	clrf	plusw1,c
 47166  01F496  9ABF               	bcf	191,5,c	;volatile
 47167                           
 47168                           ;dio.c: 72:  __nop();
 47169  01F498  F000               	nop	
 47170                           
 47171                           ;dio.c: 73:  __nop();
 47172  01F49A  F000               	nop	
 47173                           
 47174                           ;dio.c: 74:  __nop();
 47175  01F49C  F000               	nop	
 47176                           
 47177                           ;dio.c: 75:  __nop();
 47178  01F49E  F000               	nop	
 47179                           
 47180                           ;dio.c: 76:  __nop();
 47181  01F4A0  F000               	nop	
 47182                           
 47183                           ;dio.c: 77:  __nop();
 47184  01F4A2  F000               	nop	
 47185  01F4A4  D016               	goto	l13750
 47186  01F4A6                     l13736:
 47187                           
 47188                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 47189  01F4A6  A6CF               	btfss	207,3,c	;volatile
 47190  01F4A8  D00E               	goto	u1281_20
 47191  01F4AA  D00A               	goto	u1281_21
 47192  01F4AC                     u1279_28:
 47193                           
 47194                           ;stkvar	_sw_value @ sp[(-2)+1]
 47195  01F4AC  0EFF               	movlw	-1
 47196  01F4AE  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 47197                           
 47198                           ;dio.c: 83:    break;
 47199  01F4B4  D027               	goto	l13752
 47200  01F4B6                     l13738:
 47201                           
 47202                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 47203  01F4B6  A4CF               	btfss	207,2,c	;volatile
 47204  01F4B8  D006               	goto	u1281_20
 47205  01F4BA  D002               	goto	u1281_21
 47206  01F4BC                     l13740:
 47207                           
 47208                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 47209  01F4BC  A6CD               	btfss	205,3,c	;volatile
 47210  01F4BE  D003               	goto	u1281_20
 47211  01F4C0                     u1281_21:
 47212  01F4C0  6A35               	clrf	(btemp+11)^0,c
 47213  01F4C2  2A35               	incf	(btemp+11)^0,f,c
 47214  01F4C4  D7F3               	goto	u1279_28
 47215  01F4C6                     u1281_20:
 47216  01F4C6  6A35               	clrf	(btemp+11)^0,c
 47217  01F4C8  D7F1               	goto	u1279_28
 47218  01F4CA                     l13742:
 47219                           
 47220                           ;dio.c: 91:    sw_value = 1;
 47221                           ;stkvar	_sw_value @ sp[(-2)+1]
 47222  01F4CA  0EFF               	movlw	-1
 47223  01F4CC  6AE3               	clrf	plusw1,c
 47224  01F4CE  2AE3               	incf	plusw1,f,c
 47225                           
 47226                           ;dio.c: 92:    break;
 47227  01F4D0  D019               	goto	l13752
 47228  01F4D2                     l13750:
 47229                           
 47230                           ;stkvar	_i @ sp[(-2)+0]
 47231  01F4D2  0EFE               	movlw	-2
 47232  01F4D4  50E3               	movf	plusw1,w,c
 47233  01F4D6  6E34               	movwf	(btemp+10)^0,c
 47234  01F4D8  6A35               	clrf	(btemp+11)^0,c
 47235                           
 47236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 47237                           ; Switch size 1, requested type "simple"
 47238                           ; Number of cases is 1, Range of values is 0 to 0
 47239                           ; switch strategies available:
 47240                           ; Name         Instructions Cycles
 47241                           ; simple_byte            4     3 (average)
 47242                           ;	Chosen strategy is simple_byte
 47243  01F4DA  5035               	movf	(btemp+11)^0,w,c
 47244  01F4DC  0A00               	xorlw	0	; case 0
 47245  01F4DE  A4D8               	btfss	status,2,c
 47246  01F4E0  D7F4               	goto	l13742
 47247                           
 47248                           ; Switch size 1, requested type "simple"
 47249                           ; Number of cases is 5, Range of values is 0 to 4
 47250                           ; switch strategies available:
 47251                           ; Name         Instructions Cycles
 47252                           ; simple_byte           16     9 (average)
 47253                           ;	Chosen strategy is simple_byte
 47254  01F4E2  5034               	movf	(btemp+10)^0,w,c
 47255  01F4E4  0A00               	xorlw	0	; case 0
 47256  01F4E6  B4D8               	btfsc	status,2,c
 47257  01F4E8  D7F0               	goto	l13742
 47258  01F4EA  0A01               	xorlw	1	; case 1
 47259  01F4EC  B4D8               	btfsc	status,2,c
 47260  01F4EE  D7ED               	goto	l13742
 47261  01F4F0  0A03               	xorlw	3	; case 2
 47262  01F4F2  B4D8               	btfsc	status,2,c
 47263  01F4F4  D7E0               	goto	l13738
 47264  01F4F6  0A01               	xorlw	1	; case 3
 47265  01F4F8  B4D8               	btfsc	status,2,c
 47266  01F4FA  D7D5               	goto	l13736
 47267  01F4FC  0A07               	xorlw	7	; case 4
 47268  01F4FE  B4D8               	btfsc	status,2,c
 47269  01F500  D7DD               	goto	l13740
 47270  01F502  D7E3               	goto	l13742
 47271  01F504                     l13752:
 47272                           
 47273                           ;dio.c: 102:   if (sw_value) {
 47274                           ;stkvar	_sw_value @ sp[(-2)+1]
 47275  01F504  0EFF               	movlw	-1
 47276  01F506  50E3               	movf	plusw1,w,c
 47277  01F508  B4D8               	btfsc	status,2,c
 47278  01F50A  D018               	goto	l13758
 47279                           
 47280                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 47281                           ;stkvar	_i @ sp[(-2)+0]
 47282  01F50C  0EFE               	movlw	-2
 47283  01F50E  50E3               	movf	plusw1,w,c
 47284  01F510  0D05               	mullw	5
 47285  01F512  0EA4               	movlw	low _S
 47286  01F514  24F3               	addwf	243,w,c
 47287  01F516  6ED9               	movwf	fsr2l,c
 47288  01F518  0E01               	movlw	high _S
 47289  01F51A  20F4               	addwfc	prodh,w,c
 47290  01F51C  6EDA               	movwf	fsr2h,c
 47291  01F51E  04DE               	decf	postinc2,w,c
 47292  01F520  A4D8               	btfss	status,2,c
 47293  01F522  D049               	goto	l13766
 47294                           
 47295                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 47296                           ;stkvar	_i @ sp[(-2)+0]
 47297  01F524  0EFE               	movlw	-2
 47298  01F526  50E3               	movf	plusw1,w,c
 47299  01F528  0D05               	mullw	5
 47300  01F52A  0EA4               	movlw	low _S
 47301  01F52C  24F3               	addwf	243,w,c
 47302  01F52E  6ED9               	movwf	fsr2l,c
 47303  01F530  0E01               	movlw	high _S
 47304  01F532  20F4               	addwfc	prodh,w,c
 47305  01F534  6EDA               	movwf	fsr2h,c
 47306  01F536  0E00               	movlw	0
 47307  01F538  6EDF               	movwf	indf2,c
 47308  01F53A  D03D               	goto	l13766
 47309  01F53C                     l13758:
 47310                           
 47311                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 47312                           ;stkvar	_i @ sp[(-2)+0]
 47313  01F53C  0EFE               	movlw	-2
 47314  01F53E  50E3               	movf	plusw1,w,c
 47315  01F540  0D05               	mullw	5
 47316  01F542  0EA4               	movlw	low _S
 47317  01F544  24F3               	addwf	243,w,c
 47318  01F546  6ED9               	movwf	fsr2l,c
 47319  01F548  0E01               	movlw	high _S
 47320  01F54A  20F4               	addwfc	prodh,w,c
 47321  01F54C  6EDA               	movwf	fsr2h,c
 47322  01F54E  50DF               	movf	indf2,w,c
 47323  01F550  A4D8               	btfss	status,2,c
 47324  01F552  D031               	goto	l13766
 47325                           
 47326                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 47327                           ;stkvar	_i @ sp[(-2)+0]
 47328  01F554  0EFE               	movlw	-2
 47329  01F556  50E3               	movf	plusw1,w,c
 47330  01F558  0D05               	mullw	5
 47331  01F55A  0EA4               	movlw	low _S
 47332  01F55C  24F3               	addwf	243,w,c
 47333  01F55E  6ED9               	movwf	fsr2l,c
 47334  01F560  0E01               	movlw	high _S
 47335  01F562  20F4               	addwfc	prodh,w,c
 47336  01F564  6EDA               	movwf	fsr2h,c
 47337  01F566  0E01               	movlw	1
 47338  01F568  6EDF               	movwf	indf2,c
 47339                           
 47340                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 47341  01F56A  EE20  F2B8         	lfsr	2,_V+177	;volatile
 47342                           
 47343                           ;stkvar	_i @ sp[(-2)+0]
 47344  01F56E  0EFE               	movlw	-2
 47345  01F570  50E3               	movf	plusw1,w,c
 47346  01F572  0D05               	mullw	5
 47347  01F574  0EA5               	movlw	low (_S+1)
 47348  01F576  24F3               	addwf	243,w,c
 47349  01F578  6EE9               	movwf	fsr0l,c
 47350  01F57A  0E01               	movlw	high (_S+1)
 47351  01F57C  20F4               	addwfc	prodh,w,c
 47352  01F57E  6EEA               	movwf	fsr0h,c
 47353  01F580  006F FF7B FFEE     	movff	postinc2,postinc0
 47354  01F586  006F FF7B FFEE     	movff	postinc2,postinc0
 47355  01F58C  006F FF7B FFEE     	movff	postinc2,postinc0
 47356  01F592  006F FF7B FFEE     	movff	postinc2,postinc0
 47357                           
 47358                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 47359                           ;stkvar	_i @ sp[(-2)+0]
 47360  01F598  0EFE               	movlw	-2
 47361  01F59A  006F FF8C  F035    	movff	plusw1,btemp+11
 47362  01F5A0  0E01               	movlw	1
 47363  01F5A2  6E34               	movwf	(btemp+10)^0,c
 47364  01F5A4  2A35               	incf	(btemp+11)^0,f,c
 47365  01F5A6  D002               	goto	u1285_24
 47366  01F5A8                     u1285_25:
 47367  01F5A8  90D8               	bcf	status,0,c
 47368  01F5AA  3634               	rlcf	(btemp+10)^0,f,c
 47369  01F5AC                     u1285_24:
 47370  01F5AC  2E35               	decfsz	(btemp+11)^0,f,c
 47371  01F5AE  D7FC               	goto	u1285_25
 47372  01F5B0  5034               	movf	(btemp+10)^0,w,c
 47373  01F5B2  0101               	movlb	1	; () banked
 47374  01F5B4  13CC               	iorwf	(_S+40)& (0+255),f,b	;volatile
 47375  01F5B6                     l13766:
 47376                           
 47377                           ;dio.c: 113:  } while (++i < 6);
 47378                           ;stkvar	_i @ sp[(-2)+0]
 47379  01F5B6  0EFE               	movlw	-2
 47380  01F5B8  2AE3               	incf	plusw1,f,c
 47381  01F5BA  0EFE               	movlw	-2
 47382  01F5BC  006F FF8C  F02A    	movff	plusw1,btemp
 47383  01F5C2  0E05               	movlw	5
 47384  01F5C4  642A               	cpfsgt	btemp^0,c
 47385  01F5C6  D785               	goto	l13750
 47386                           
 47387                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 47388  01F5C8  8ABF               	bsf	191,5,c	;volatile
 47389                           
 47390                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 47391  01F5CA  52E5               	movf	postdec1,f,c
 47392  01F5CC  52E5               	movf	postdec1,f,c
 47393  01F5CE  0012               	return		;funcret
 47394  01F5D0                     __end_of_switch_handler:
 47395                           	opt callstack 0
 47396                           
 47397 ;; *************** function _TMR5_ISR *****************
 47398 ;; Defined at:
 47399 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 47400 ;; Parameters:    Size  Location     Type
 47401 ;;		None
 47402 ;; Auto vars:     Size  Location     Type
 47403 ;;		None
 47404 ;; Return value:  Size  Location     Type
 47405 ;;                  1    wreg      void 
 47406 ;; Registers used:
 47407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47408 ;; Tracked objects:
 47409 ;;		On entry : 0/0
 47410 ;;		On exit  : 3F/0
 47411 ;;		Unchanged: 0/0
 47412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47415 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47416 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47417 ;;Total ram usage:       31 bytes
 47418 ;; Hardware stack levels used:    1
 47419 ;; Hardware stack levels required when called:    9
 47420 ;; This function calls:
 47421 ;;		_TMR5_CallBack
 47422 ;;		_TMR5_WriteTimer
 47423 ;; This function is called by:
 47424 ;;		Interrupt level 1
 47425 ;; This function uses a non-reentrant model
 47426 ;;
 47427                           
 47428                           	psect	text189
 47429  01DEC0                     __ptext189:
 47430                           	opt callstack 0
 47431  01DEC0                     _TMR5_ISR:
 47432                           	opt callstack 8
 47433                           
 47434                           ;incstack = 0
 47435  01DEC0  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 47436  01DEC6  0060  F0A8  F00E   	movff	btemp,??_TMR5_ISR+3
 47437  01DECC  0060  F0AC  F00F   	movff	btemp+1,??_TMR5_ISR+4
 47438  01DED2  0060  F0B0  F010   	movff	btemp+2,??_TMR5_ISR+5
 47439  01DED8  0060  F0B4  F011   	movff	btemp+3,??_TMR5_ISR+6
 47440  01DEDE  0060  F0B8  F012   	movff	btemp+4,??_TMR5_ISR+7
 47441  01DEE4  0060  F0BC  F013   	movff	btemp+5,??_TMR5_ISR+8
 47442  01DEEA  0060  F0C0  F014   	movff	btemp+6,??_TMR5_ISR+9
 47443  01DEF0  0060  F0C4  F015   	movff	btemp+7,??_TMR5_ISR+10
 47444  01DEF6  0060  F0C8  F016   	movff	btemp+8,??_TMR5_ISR+11
 47445  01DEFC  0060  F0CC  F017   	movff	btemp+9,??_TMR5_ISR+12
 47446  01DF02  0060  F0D0  F018   	movff	btemp+10,??_TMR5_ISR+13
 47447  01DF08  0060  F0D4  F019   	movff	btemp+11,??_TMR5_ISR+14
 47448  01DF0E  0060  F0E8  F01A   	movff	btemp+16,??_TMR5_ISR+15
 47449  01DF14  0060  F0EC  F01B   	movff	btemp+17,??_TMR5_ISR+16
 47450  01DF1A  0060  F0F0  F01C   	movff	btemp+18,??_TMR5_ISR+17
 47451  01DF20  0060  F0F4  F01D   	movff	btemp+19,??_TMR5_ISR+18
 47452  01DF26  0060  F0F8  F01E   	movff	btemp+20,??_TMR5_ISR+19
 47453  01DF2C  0060  F0FC  F01F   	movff	btemp+21,??_TMR5_ISR+20
 47454  01DF32  0060  F100  F020   	movff	btemp+22,??_TMR5_ISR+21
 47455  01DF38  0060  F104  F021   	movff	btemp+23,??_TMR5_ISR+22
 47456  01DF3E  0060  F108  F022   	movff	btemp+24,??_TMR5_ISR+23
 47457  01DF44  0060  F10C  F023   	movff	btemp+25,??_TMR5_ISR+24
 47458  01DF4A  0060  F110  F024   	movff	btemp+26,??_TMR5_ISR+25
 47459  01DF50  0060  F114  F025   	movff	btemp+27,??_TMR5_ISR+26
 47460  01DF56  0060  F118  F026   	movff	btemp+28,??_TMR5_ISR+27
 47461  01DF5C  0060  F11C  F027   	movff	btemp+29,??_TMR5_ISR+28
 47462  01DF62  0060  F120  F028   	movff	btemp+30,??_TMR5_ISR+29
 47463  01DF68  0060  F124  F029   	movff	btemp+31,??_TMR5_ISR+30
 47464  01DF6E  EE16  F196         	lfsr	1,___intlo_sp
 47465                           
 47466                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 47467  01DF72  0139               	movlb	57	; () banked
 47468  01DF74  9DA8               	bcf	168,6,b	;volatile
 47469                           
 47470                           ; BSR set to: 57
 47471                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 47472  01DF76  0060  F313  FFE6   	movff	_timer5ReloadVal,postinc1
 47473  01DF7C  0060  F317  FFE6   	movff	_timer5ReloadVal+1,postinc1
 47474  01DF82  EC40  F011         	call	_TMR5_WriteTimer	;wreg free
 47475                           
 47476                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 47477  01DF86  0102               	movlb	2	; () banked
 47478  01DF88  51AE               	movf	(_V+167)& (0+255),w,b	;volatile
 47479  01DF8A  6E0B               	movwf	??_TMR5_ISR^0,c
 47480  01DF8C  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 47481  01DF8E  0E05               	movlw	5
 47482  01DF90  260B               	addwf	??_TMR5_ISR^0,f,c
 47483  01DF92  0E00               	movlw	0
 47484  01DF94  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 47485  01DF96  0100               	movlb	0	; () banked
 47486  01DF98  4BC2               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 47487  01DF9A  2BC3               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 47488  01DF9C  500B               	movf	??_TMR5_ISR^0,w,c
 47489  01DF9E  5DC2               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 47490  01DFA0  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 47491  01DFA2  59C3               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 47492  01DFA4  A0D8               	btfss	status,0,c
 47493  01DFA6  D005               	goto	i1l1021
 47494                           
 47495                           ; BSR set to: 0
 47496                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 47497  01DFA8  ECCE  F014         	call	_TMR5_CallBack	;wreg free
 47498                           
 47499                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 47500  01DFAC  0100               	movlb	0	; () banked
 47501  01DFAE  6BC2               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 47502  01DFB0  6BC3               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 47503  01DFB2                     i1l1021:
 47504                           
 47505                           ; BSR set to: 0
 47506  01DFB2  0060  F0A4  F049   	movff	??_TMR5_ISR+30,btemp+31
 47507  01DFB8  0060  F0A0  F048   	movff	??_TMR5_ISR+29,btemp+30
 47508  01DFBE  0060  F09C  F047   	movff	??_TMR5_ISR+28,btemp+29
 47509  01DFC4  0060  F098  F046   	movff	??_TMR5_ISR+27,btemp+28
 47510  01DFCA  0060  F094  F045   	movff	??_TMR5_ISR+26,btemp+27
 47511  01DFD0  0060  F090  F044   	movff	??_TMR5_ISR+25,btemp+26
 47512  01DFD6  0060  F08C  F043   	movff	??_TMR5_ISR+24,btemp+25
 47513  01DFDC  0060  F088  F042   	movff	??_TMR5_ISR+23,btemp+24
 47514  01DFE2  0060  F084  F041   	movff	??_TMR5_ISR+22,btemp+23
 47515  01DFE8  0060  F080  F040   	movff	??_TMR5_ISR+21,btemp+22
 47516  01DFEE  0060  F07C  F03F   	movff	??_TMR5_ISR+20,btemp+21
 47517  01DFF4  0060  F078  F03E   	movff	??_TMR5_ISR+19,btemp+20
 47518  01DFFA  0060  F074  F03D   	movff	??_TMR5_ISR+18,btemp+19
 47519  01E000  0060  F070  F03C   	movff	??_TMR5_ISR+17,btemp+18
 47520  01E006  0060  F06C  F03B   	movff	??_TMR5_ISR+16,btemp+17
 47521  01E00C  0060  F068  F03A   	movff	??_TMR5_ISR+15,btemp+16
 47522  01E012  0060  F064  F035   	movff	??_TMR5_ISR+14,btemp+11
 47523  01E018  0060  F060  F034   	movff	??_TMR5_ISR+13,btemp+10
 47524  01E01E  0060  F05C  F033   	movff	??_TMR5_ISR+12,btemp+9
 47525  01E024  0060  F058  F032   	movff	??_TMR5_ISR+11,btemp+8
 47526  01E02A  0060  F054  F031   	movff	??_TMR5_ISR+10,btemp+7
 47527  01E030  0060  F050  F030   	movff	??_TMR5_ISR+9,btemp+6
 47528  01E036  0060  F04C  F02F   	movff	??_TMR5_ISR+8,btemp+5
 47529  01E03C  0060  F048  F02E   	movff	??_TMR5_ISR+7,btemp+4
 47530  01E042  0060  F044  F02D   	movff	??_TMR5_ISR+6,btemp+3
 47531  01E048  0060  F040  F02C   	movff	??_TMR5_ISR+5,btemp+2
 47532  01E04E  0060  F03C  F02B   	movff	??_TMR5_ISR+4,btemp+1
 47533  01E054  0060  F038  F02A   	movff	??_TMR5_ISR+3,btemp
 47534  01E05A  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 47535  01E060  0011               	retfie		f
 47536  01E062                     __end_of_TMR5_ISR:
 47537                           	opt callstack 0
 47538                           
 47539 ;; *************** function _TMR5_WriteTimer *****************
 47540 ;; Defined at:
 47541 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 47542 ;; Parameters:    Size  Location     Type
 47543 ;;  timerVal        2  [STACK] unsigned short 
 47544 ;; Auto vars:     Size  Location     Type
 47545 ;;		None
 47546 ;; Return value:  Size  Location     Type
 47547 ;;                  1  [STACK] void 
 47548 ;; Registers used:
 47549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 47550 ;; Tracked objects:
 47551 ;;		On entry : 3F/39
 47552 ;;		On exit  : 0/0
 47553 ;;		Unchanged: 0/0
 47554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47559 ;;Total ram usage:        0 bytes
 47560 ;; Hardware stack levels used:    1
 47561 ;; Hardware stack levels required when called:    3
 47562 ;; This function calls:
 47563 ;;		Nothing
 47564 ;; This function is called by:
 47565 ;;		_TMR5_ISR
 47566 ;; This function uses a reentrant model
 47567 ;;
 47568                           
 47569                           	psect	text190
 47570  002280                     __ptext190:
 47571                           	opt callstack 0
 47572  002280                     _TMR5_WriteTimer:
 47573                           	opt callstack 13
 47574                           
 47575                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 47576                           
 47577                           ; BSR set to: 0
 47578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47579                           ;incstack = 0
 47580  002280  A49A               	btfss	154,2,c	;volatile
 47581  002282  D00F               	goto	l13978
 47582                           
 47583                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 47584  002284  909A               	bcf	154,0,c	;volatile
 47585                           
 47586                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 47587                           ;stkvar	_timerVal @ sp[(0)+-2]
 47588  002286  0EFF               	movlw	255
 47589  002288  24E1               	addwf	fsr1l,w,c
 47590  00228A  6ED9               	movwf	fsr2l,c
 47591  00228C  0EFF               	movlw	255
 47592  00228E  20E2               	addwfc	fsr1h,w,c
 47593  002290  6EDA               	movwf	fsr2h,c
 47594  002292  50DF               	movf	indf2,w,c
 47595  002294  6E99               	movwf	153,c	;volatile
 47596                           
 47597                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 47598                           ;stkvar	_timerVal @ sp[(0)+-2]
 47599  002296  0EFE               	movlw	-2
 47600  002298  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47601                           
 47602                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 47603  00229E  809A               	bsf	154,0,c	;volatile
 47604                           
 47605                           ;mcc_generated_files/tmr5.c: 144:  } else {
 47606  0022A0  D00C               	goto	l1004
 47607  0022A2                     l13978:
 47608                           
 47609                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 47610                           ;stkvar	_timerVal @ sp[(0)+-2]
 47611  0022A2  0EFF               	movlw	255
 47612  0022A4  24E1               	addwf	fsr1l,w,c
 47613  0022A6  6ED9               	movwf	fsr2l,c
 47614  0022A8  0EFF               	movlw	255
 47615  0022AA  20E2               	addwfc	fsr1h,w,c
 47616  0022AC  6EDA               	movwf	fsr2h,c
 47617  0022AE  50DF               	movf	indf2,w,c
 47618  0022B0  6E99               	movwf	153,c	;volatile
 47619                           
 47620                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 47621                           ;stkvar	_timerVal @ sp[(0)+-2]
 47622  0022B2  0EFE               	movlw	-2
 47623  0022B4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 47624  0022BA                     l1004:
 47625                           
 47626                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 47627  0022BA  52E5               	movf	postdec1,f,c
 47628  0022BC  52E5               	movf	postdec1,f,c
 47629  0022BE  0012               	return		;funcret
 47630  0022C0                     __end_of_TMR5_WriteTimer:
 47631                           	opt callstack 0
 47632                           
 47633 ;; *************** function _TMR5_CallBack *****************
 47634 ;; Defined at:
 47635 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 47636 ;; Parameters:    Size  Location     Type
 47637 ;;		None
 47638 ;; Auto vars:     Size  Location     Type
 47639 ;;		None
 47640 ;; Return value:  Size  Location     Type
 47641 ;;                  1  [STACK] void 
 47642 ;; Registers used:
 47643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, prodl,
      + prodh
 47644 ;; Tracked objects:
 47645 ;;		On entry : 3F/0
 47646 ;;		On exit  : 0/0
 47647 ;;		Unchanged: 0/0
 47648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47653 ;;Total ram usage:        0 bytes
 47654 ;; Hardware stack levels used:    1
 47655 ;; Hardware stack levels required when called:    8
 47656 ;; This function calls:
 47657 ;;		Absolute function
 47658 ;;		_TMR5_DefaultInterruptHandler
 47659 ;; This function is called by:
 47660 ;;		_TMR5_ISR
 47661 ;; This function uses a reentrant model
 47662 ;;
 47663                           
 47664                           	psect	text191
 47665  00299C                     __ptext191:
 47666                           	opt callstack 0
 47667  00299C                     _TMR5_CallBack:
 47668                           	opt callstack 8
 47669                           
 47670                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 47671                           
 47672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47673                           ;incstack = 0
 47674  00299C  0100               	movlb	0	; () banked
 47675  00299E  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47676  0029A0  119C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47677  0029A2  119D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47678  0029A4  B4D8               	btfsc	status,2,c
 47679  0029A6  0012               	return	
 47680                           
 47681                           ; BSR set to: 0
 47682                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 47683  0029A8  D801               	call	u1324_28
 47684  0029AA  0012               	return	
 47685  0029AC                     u1324_28:
 47686  0029AC  0005               	push	
 47687  0029AE  6EFA               	movwf	pclath,c
 47688  0029B0  519B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 47689  0029B2  6EFD               	movwf	tosl,c
 47690  0029B4  519C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 47691  0029B6  6EFE               	movwf	tosh,c
 47692  0029B8  519D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 47693  0029BA  6EFF               	movwf	tosu,c
 47694  0029BC  50FA               	movf	pclath,w,c
 47695  0029BE  0012               	return		;indir
 47696  0029C0                     __end_of_TMR5_CallBack:
 47697                           	opt callstack 0
 47698                           
 47699 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 47700 ;; Defined at:
 47701 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 47702 ;; Parameters:    Size  Location     Type
 47703 ;;		None
 47704 ;; Auto vars:     Size  Location     Type
 47705 ;;		None
 47706 ;; Return value:  Size  Location     Type
 47707 ;;                  1  [STACK] void 
 47708 ;; Registers used:
 47709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47710 ;; Tracked objects:
 47711 ;;		On entry : 3F/0
 47712 ;;		On exit  : 0/0
 47713 ;;		Unchanged: 0/0
 47714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47719 ;;Total ram usage:        0 bytes
 47720 ;; Hardware stack levels used:    1
 47721 ;; Hardware stack levels required when called:    7
 47722 ;; This function calls:
 47723 ;;		_check_day_time
 47724 ;; This function is called by:
 47725 ;;		_TMR5_Initialize
 47726 ;;		_TMR5_CallBack
 47727 ;; This function uses a reentrant model
 47728 ;;
 47729                           
 47730                           	psect	text192
 47731  0023EC                     __ptext192:
 47732                           	opt callstack 0
 47733  0023EC                     _TMR5_DefaultInterruptHandler:
 47734                           	opt callstack 8
 47735                           
 47736                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 47737                           
 47738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47739                           ;incstack = 0
 47740  0023EC  A0BE               	btfss	190,0,c	;volatile
 47741  0023EE  D002               	goto	u1250_20
 47742  0023F0  0E01               	movlw	1
 47743  0023F2  D001               	goto	u1250_26
 47744  0023F4                     u1250_20:
 47745  0023F4  0E00               	movlw	0
 47746  0023F6                     u1250_26:
 47747  0023F6  0AFF               	xorlw	255
 47748  0023F8  6E35               	movwf	(btemp+11)^0,c
 47749  0023FA  50BE               	movf	190,w,c	;volatile
 47750  0023FC  1835               	xorwf	(btemp+11)^0,w,c
 47751  0023FE  0BFE               	andlw	-2
 47752  002400  1835               	xorwf	(btemp+11)^0,w,c
 47753  002402  6EBE               	movwf	190,c	;volatile
 47754                           
 47755                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 47756  002404  0E01               	movlw	1
 47757  002406  0102               	movlb	2	; () banked
 47758  002408  27B8               	addwf	(_V+177)& (0+255),f,b	;volatile
 47759  00240A  0E00               	movlw	0
 47760  00240C  23B9               	addwfc	(_V+178)& (0+255),f,b	;volatile
 47761  00240E  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 47762  002410  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 47763                           
 47764                           ; BSR set to: 2
 47765                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 47766  002412  0E01               	movlw	1
 47767  002414  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 47768  002416  0E00               	movlw	0
 47769  002418  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 47770  00241A  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 47771  00241C  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 47772                           
 47773                           ; BSR set to: 2
 47774                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 47775  00241E  ECC1  F0D3         	call	_check_day_time	;wreg free
 47776                           
 47777                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47778  002422  0012               	return		;funcret
 47779  002424                     __end_of_TMR5_DefaultInterruptHandler:
 47780                           	opt callstack 0
 47781                           
 47782 ;; *************** function _check_day_time *****************
 47783 ;; Defined at:
 47784 ;;		line 167 in file "mbmc.c"
 47785 ;; Parameters:    Size  Location     Type
 47786 ;;		None
 47787 ;; Auto vars:     Size  Location     Type
 47788 ;;  light           4  [STACK] float 
 47789 ;; Return value:  Size  Location     Type
 47790 ;;                  1  [STACK] _Bool 
 47791 ;; Registers used:
 47792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, prodl, prodh
 47793 ;; Tracked objects:
 47794 ;;		On entry : 3F/2
 47795 ;;		On exit  : 0/0
 47796 ;;		Unchanged: 0/0
 47797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47802 ;;Total ram usage:        0 bytes
 47803 ;; Hardware stack levels used:    1
 47804 ;; Hardware stack levels required when called:    6
 47805 ;; This function calls:
 47806 ;;		___flge
 47807 ;;		_conv_raw_result
 47808 ;;		_get_ac_charger_relay
 47809 ;;		_set_ac_charger_relay
 47810 ;;		_time
 47811 ;; This function is called by:
 47812 ;;		_TMR5_DefaultInterruptHandler
 47813 ;; This function uses a reentrant model
 47814 ;;
 47815                           
 47816                           	psect	text193
 47817  01A782                     __ptext193:
 47818                           	opt callstack 0
 47819  01A782                     _check_day_time:
 47820                           	opt callstack 0
 47821                           
 47822                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47823  01A782  52E6               	movf	postinc1,f,c
 47824  01A784  52E6               	movf	postinc1,f,c
 47825  01A786  52E6               	movf	postinc1,f,c
 47826  01A788  52E6               	movf	postinc1,f,c
 47827                           
 47828                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 47829                           
 47830                           ;incstack = 0
 47831  01A78A  0E00               	movlw	0
 47832  01A78C  6EE6               	movwf	postinc1,c
 47833  01A78E  0E0D               	movlw	13
 47834  01A790  6EE6               	movwf	postinc1,c
 47835  01A792  ECAC  F0C6         	call	_conv_raw_result	;wreg free
 47836                           
 47837                           ;stkvar	_light @ sp[(-4)+0]
 47838  01A796  0EFC               	movlw	-4
 47839  01A798  0060  F0AB  FFE3   	movff	btemp,plusw1
 47840  01A79E  0EFD               	movlw	-3
 47841  01A7A0  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 47842  01A7A6  0EFE               	movlw	-2
 47843  01A7A8  0060  F0B3  FFE3   	movff	btemp+2,plusw1
 47844  01A7AE  0EFF               	movlw	-1
 47845  01A7B0  0060  F0B7  FFE3   	movff	btemp+3,plusw1
 47846                           
 47847                           ;mbmc.c: 176:  if (C.day_update) {
 47848  01A7B6  EE23  F0B9         	lfsr	2,_C+312	;volatile
 47849  01A7BA  50DE               	movf	postinc2,w,c
 47850  01A7BC  10DE               	iorwf	postinc2,w,c
 47851  01A7BE  10DE               	iorwf	postinc2,w,c
 47852  01A7C0  10DE               	iorwf	postinc2,w,c
 47853  01A7C2  B4D8               	btfsc	status,2,c
 47854  01A7C4  D068               	goto	l12724
 47855                           
 47856                           ;mbmc.c: 177:   if (time(((void*)0)) >= C.day_update) {
 47857  01A7C6  0063  F2E4  F032   	movff	_C+312,btemp+8	;volatile
 47858  01A7CC  0063  F2E8  F033   	movff	_C+313,btemp+9	;volatile
 47859  01A7D2  0063  F2EC  F034   	movff	_C+314,btemp+10	;volatile
 47860  01A7D8  0063  F2F0  F035   	movff	_C+315,btemp+11	;volatile
 47861  01A7DE  5032               	movf	(btemp+8)^0,w,c
 47862  01A7E0  6E3A               	movwf	(btemp+16)^0,c
 47863  01A7E2  5033               	movf	(btemp+9)^0,w,c
 47864  01A7E4  6E3B               	movwf	(btemp+17)^0,c
 47865  01A7E6  5034               	movf	(btemp+10)^0,w,c
 47866  01A7E8  6E3C               	movwf	(btemp+18)^0,c
 47867  01A7EA  5035               	movf	(btemp+11)^0,w,c
 47868  01A7EC  6E3D               	movwf	(btemp+19)^0,c
 47869  01A7EE  6A3E               	clrf	(btemp+20)^0,c
 47870  01A7F0  6A3F               	clrf	(btemp+21)^0,c
 47871  01A7F2  6A40               	clrf	(btemp+22)^0,c
 47872  01A7F4  6A41               	clrf	(btemp+23)^0,c
 47873  01A7F6  0E00               	movlw	0
 47874  01A7F8  6EE6               	movwf	postinc1,c
 47875  01A7FA  0E00               	movlw	0
 47876  01A7FC  6EE6               	movwf	postinc1,c
 47877  01A7FE  EC23  F00E         	call	_time	;wreg free
 47878  01A802  52E5               	movf	postdec1,f,c
 47879  01A804  006F FF9C  F049    	movff	indf1,btemp+31
 47880  01A80A  52E5               	movf	postdec1,f,c
 47881  01A80C  006F FF9C  F048    	movff	indf1,btemp+30
 47882  01A812  52E5               	movf	postdec1,f,c
 47883  01A814  006F FF9C  F047    	movff	indf1,btemp+29
 47884  01A81A  52E5               	movf	postdec1,f,c
 47885  01A81C  006F FF9C  F046    	movff	indf1,btemp+28
 47886  01A822  52E5               	movf	postdec1,f,c
 47887  01A824  006F FF9C  F045    	movff	indf1,btemp+27
 47888  01A82A  52E5               	movf	postdec1,f,c
 47889  01A82C  006F FF9C  F044    	movff	indf1,btemp+26
 47890  01A832  52E5               	movf	postdec1,f,c
 47891  01A834  006F FF9C  F043    	movff	indf1,btemp+25
 47892  01A83A  52E5               	movf	postdec1,f,c
 47893  01A83C  006F FF9C  F042    	movff	indf1,btemp+24
 47894  01A842  503A               	movf	(btemp+16)^0,w,c
 47895  01A844  5C42               	subwf	(btemp+24)^0,w,c
 47896  01A846  503B               	movf	(btemp+17)^0,w,c
 47897  01A848  5843               	subwfb	(btemp+25)^0,w,c
 47898  01A84A  503C               	movf	(btemp+18)^0,w,c
 47899  01A84C  5844               	subwfb	(btemp+26)^0,w,c
 47900  01A84E  503D               	movf	(btemp+19)^0,w,c
 47901  01A850  5845               	subwfb	(btemp+27)^0,w,c
 47902  01A852  503E               	movf	(btemp+20)^0,w,c
 47903  01A854  5846               	subwfb	(btemp+28)^0,w,c
 47904  01A856  503F               	movf	(btemp+21)^0,w,c
 47905  01A858  5847               	subwfb	(btemp+29)^0,w,c
 47906  01A85A  5040               	movf	(btemp+22)^0,w,c
 47907  01A85C  5848               	subwfb	(btemp+30)^0,w,c
 47908  01A85E  5049               	movf	(btemp+31)^0,w,c
 47909  01A860  0A80               	xorlw	128
 47910  01A862  6E2A               	movwf	btemp^0,c
 47911  01A864  5041               	movf	(btemp+23)^0,w,c
 47912  01A866  0A80               	xorlw	128
 47913  01A868  582A               	subwfb	btemp^0,w,c
 47914  01A86A  A0D8               	btfss	status,0,c
 47915  01A86C  D014               	goto	l12724
 47916                           
 47917                           ; BSR set to: 57
 47918                           ;mbmc.c: 178:    C.day_update = 0;
 47919  01A86E  0E00               	movlw	0
 47920  01A870  006F FFA0  FCB9    	movff	wreg,_C+312	;volatile
 47921  01A876  0E00               	movlw	0
 47922  01A878  006F FFA0  FCBA    	movff	wreg,_C+313	;volatile
 47923  01A87E  0E00               	movlw	0
 47924  01A880  006F FFA0  FCBB    	movff	wreg,_C+314	;volatile
 47925  01A886  0E00               	movlw	0
 47926  01A888  006F FFA0  FCBC    	movff	wreg,_C+315	;volatile
 47927                           
 47928                           ;mbmc.c: 179:    C.dupdate = 1;
 47929  01A88E  0E01               	movlw	1
 47930  01A890  006F FFA0  FCB0    	movff	wreg,_C+303	;volatile
 47931  01A896                     l12724:
 47932                           
 47933                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 47934  01A896  2A51               	incf	check_day_time@day_delay^0,f,c
 47935  01A898  0451               	decf	check_day_time@day_delay^0,w,c
 47936  01A89A  A4D8               	btfss	status,2,c
 47937  01A89C  D123               	goto	l2207
 47938  01A89E  0102               	movlb	2	; () banked
 47939  01A8A0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 47940  01A8A2  B4D8               	btfsc	status,2,c
 47941  01A8A4  D11F               	goto	l2207
 47942                           
 47943                           ; BSR set to: 2
 47944                           ;mbmc.c: 184:   if (C.soc > 3) {
 47945  01A8A6  EE23  F037         	lfsr	2,_C+182	;volatile
 47946  01A8AA  0E01               	movlw	1
 47947  01A8AC  50DB               	movf	plusw2,w,c
 47948  01A8AE  E104               	bnz	u1215_20
 47949  01A8B0  0E04               	movlw	4
 47950  01A8B2  5CDE               	subwf	postinc2,w,c
 47951  01A8B4  A0D8               	btfss	status,0,c
 47952  01A8B6  D0ED               	goto	l12758
 47953  01A8B8                     u1215_20:
 47954                           
 47955                           ; BSR set to: 2
 47956                           ;mbmc.c: 185:    if (!C.day) {
 47957  01A8B8  EE23  F0AF         	lfsr	2,_C+302	;volatile
 47958  01A8BC  50DF               	movf	indf2,w,c
 47959  01A8BE  A4D8               	btfss	status,2,c
 47960  01A8C0  D065               	goto	l12744
 47961                           
 47962                           ; BSR set to: 2
 47963                           ;mbmc.c: 186:     if (light > 22.0) {
 47964                           ;stkvar	_light @ sp[(-4)+0]
 47965  01A8C2  0EFC               	movlw	-4
 47966  01A8C4  006F FF8F FFE6     	movff	plusw1,postinc1
 47967  01A8CA  006F FF8F FFE6     	movff	plusw1,postinc1
 47968  01A8D0  006F FF8F FFE6     	movff	plusw1,postinc1
 47969  01A8D6  006F FF8F FFE6     	movff	plusw1,postinc1
 47970  01A8DC  0E00               	movlw	0
 47971  01A8DE  6EE6               	movwf	postinc1,c
 47972  01A8E0  0E00               	movlw	0
 47973  01A8E2  6EE6               	movwf	postinc1,c
 47974  01A8E4  0EB0               	movlw	176
 47975  01A8E6  6EE6               	movwf	postinc1,c
 47976  01A8E8  0E41               	movlw	65
 47977  01A8EA  6EE6               	movwf	postinc1,c
 47978  01A8EC  EC35  F0F6         	call	___flge	;wreg free
 47979  01A8F0  B02A               	btfsc	btemp& (0+255),0,c
 47980  01A8F2  D0F8               	goto	l2207
 47981                           
 47982                           ;mbmc.c: 187:      C.day = 1;
 47983  01A8F4  0E01               	movlw	1
 47984  01A8F6  006F FFA0  FCAF    	movff	wreg,_C+302	;volatile
 47985                           
 47986                           ;mbmc.c: 188:      C.day_start = time(((void*)0));
 47987  01A8FC  0E00               	movlw	0
 47988  01A8FE  6EE6               	movwf	postinc1,c
 47989  01A900  0E00               	movlw	0
 47990  01A902  6EE6               	movwf	postinc1,c
 47991  01A904  EC23  F00E         	call	_time	;wreg free
 47992  01A908  52E5               	movf	postdec1,f,c
 47993  01A90A  006F FF9C  F041    	movff	indf1,btemp+23
 47994  01A910  52E5               	movf	postdec1,f,c
 47995  01A912  006F FF9C  F040    	movff	indf1,btemp+22
 47996  01A918  52E5               	movf	postdec1,f,c
 47997  01A91A  006F FF9C  F03F    	movff	indf1,btemp+21
 47998  01A920  52E5               	movf	postdec1,f,c
 47999  01A922  006F FF9C  F03E    	movff	indf1,btemp+20
 48000  01A928  52E5               	movf	postdec1,f,c
 48001  01A92A  006F FF9C  F03D    	movff	indf1,btemp+19
 48002  01A930  52E5               	movf	postdec1,f,c
 48003  01A932  006F FF9C  F03C    	movff	indf1,btemp+18
 48004  01A938  52E5               	movf	postdec1,f,c
 48005  01A93A  006F FF9C  F03B    	movff	indf1,btemp+17
 48006  01A940  52E5               	movf	postdec1,f,c
 48007  01A942  006F FF9C  F03A    	movff	indf1,btemp+16
 48008  01A948  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48009  01A94E  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48010  01A954  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48011  01A95A  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48012  01A960  0060  F0C8  FCB1   	movff	btemp+8,_C+304	;volatile
 48013  01A966  0060  F0CC  FCB2   	movff	btemp+9,_C+305	;volatile
 48014  01A96C  0060  F0D0  FCB3   	movff	btemp+10,_C+306	;volatile
 48015  01A972  0060  F0D4  FCB4   	movff	btemp+11,_C+307	;volatile
 48016                           
 48017                           ; BSR set to: 57
 48018                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 48019  01A978  EC5C  F016         	call	_get_ac_charger_relay	;wreg free
 48020  01A97C  502A               	movf	btemp^0,w,c
 48021  01A97E  B4D8               	btfsc	status,2,c
 48022  01A980  D0B5               	goto	l2203
 48023                           
 48024                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 48025  01A982  0E00               	movlw	0
 48026  01A984  6EE6               	movwf	postinc1,c
 48027  01A986  EC3F  F016         	call	_set_ac_charger_relay	;wreg free
 48028  01A98A  D0B0               	goto	l2203
 48029  01A98C                     l12744:
 48030                           
 48031                           ; BSR set to: 2
 48032                           ;mbmc.c: 195:     if (light < 12.0) {
 48033  01A98C  0E00               	movlw	0
 48034  01A98E  6EE6               	movwf	postinc1,c
 48035  01A990  0E00               	movlw	0
 48036  01A992  6EE6               	movwf	postinc1,c
 48037  01A994  0E40               	movlw	64
 48038  01A996  6EE6               	movwf	postinc1,c
 48039  01A998  0E41               	movlw	65
 48040  01A99A  6EE6               	movwf	postinc1,c
 48041                           
 48042                           ;stkvar	_light @ sp[(-8)+0]
 48043  01A99C  0EF8               	movlw	-8
 48044  01A99E  006F FF8F FFE6     	movff	plusw1,postinc1
 48045  01A9A4  006F FF8F FFE6     	movff	plusw1,postinc1
 48046  01A9AA  006F FF8F FFE6     	movff	plusw1,postinc1
 48047  01A9B0  006F FF8F FFE6     	movff	plusw1,postinc1
 48048  01A9B6  EC35  F0F6         	call	___flge	;wreg free
 48049  01A9BA  B02A               	btfsc	btemp& (0+255),0,c
 48050  01A9BC  D093               	goto	l2207
 48051                           
 48052                           ;mbmc.c: 196:      C.day = 0;
 48053  01A9BE  0E00               	movlw	0
 48054  01A9C0  006F FFA0  FCAF    	movff	wreg,_C+302	;volatile
 48055                           
 48056                           ;mbmc.c: 197:      C.day_end = time(((void*)0));
 48057  01A9C6  0E00               	movlw	0
 48058  01A9C8  6EE6               	movwf	postinc1,c
 48059  01A9CA  0E00               	movlw	0
 48060  01A9CC  6EE6               	movwf	postinc1,c
 48061  01A9CE  EC23  F00E         	call	_time	;wreg free
 48062  01A9D2  52E5               	movf	postdec1,f,c
 48063  01A9D4  006F FF9C  F041    	movff	indf1,btemp+23
 48064  01A9DA  52E5               	movf	postdec1,f,c
 48065  01A9DC  006F FF9C  F040    	movff	indf1,btemp+22
 48066  01A9E2  52E5               	movf	postdec1,f,c
 48067  01A9E4  006F FF9C  F03F    	movff	indf1,btemp+21
 48068  01A9EA  52E5               	movf	postdec1,f,c
 48069  01A9EC  006F FF9C  F03E    	movff	indf1,btemp+20
 48070  01A9F2  52E5               	movf	postdec1,f,c
 48071  01A9F4  006F FF9C  F03D    	movff	indf1,btemp+19
 48072  01A9FA  52E5               	movf	postdec1,f,c
 48073  01A9FC  006F FF9C  F03C    	movff	indf1,btemp+18
 48074  01AA02  52E5               	movf	postdec1,f,c
 48075  01AA04  006F FF9C  F03B    	movff	indf1,btemp+17
 48076  01AA0A  52E5               	movf	postdec1,f,c
 48077  01AA0C  006F FF9C  F03A    	movff	indf1,btemp+16
 48078  01AA12  0060  F0E8  F032   	movff	btemp+16,btemp+8
 48079  01AA18  0060  F0EC  F033   	movff	btemp+17,btemp+9
 48080  01AA1E  0060  F0F0  F034   	movff	btemp+18,btemp+10
 48081  01AA24  0060  F0F4  F035   	movff	btemp+19,btemp+11
 48082  01AA2A  0060  F0C8  FCB5   	movff	btemp+8,_C+308	;volatile
 48083  01AA30  0060  F0CC  FCB6   	movff	btemp+9,_C+309	;volatile
 48084  01AA36  0060  F0D0  FCB7   	movff	btemp+10,_C+310	;volatile
 48085  01AA3C  0060  F0D4  FCB8   	movff	btemp+11,_C+311	;volatile
 48086                           
 48087                           ; BSR set to: 57
 48088                           ;mbmc.c: 198:      C.day_update = C.day_end + 600;
 48089  01AA42  EE23  F0B5         	lfsr	2,_C+308	;volatile
 48090  01AA46  0E58               	movlw	88
 48091  01AA48  24DE               	addwf	postinc2,w,c
 48092  01AA4A  6E32               	movwf	(btemp+8)^0,c
 48093  01AA4C  0E02               	movlw	2
 48094  01AA4E  20DE               	addwfc	postinc2,w,c
 48095  01AA50  6E33               	movwf	(btemp+9)^0,c
 48096  01AA52  0E00               	movlw	0
 48097  01AA54  20DE               	addwfc	postinc2,w,c
 48098  01AA56  6E34               	movwf	(btemp+10)^0,c
 48099  01AA58  0E00               	movlw	0
 48100  01AA5A  20DE               	addwfc	postinc2,w,c
 48101  01AA5C  6E35               	movwf	(btemp+11)^0,c
 48102  01AA5E  0060  F0C8  FCB9   	movff	btemp+8,_C+312	;volatile
 48103  01AA64  0060  F0CC  FCBA   	movff	btemp+9,_C+313	;volatile
 48104  01AA6A  0060  F0D0  FCBB   	movff	btemp+10,_C+314	;volatile
 48105  01AA70  0060  F0D4  FCBC   	movff	btemp+11,_C+315	;volatile
 48106                           
 48107                           ; BSR set to: 57
 48108                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 48109  01AA76  EE23  F037         	lfsr	2,_C+182	;volatile
 48110  01AA7A  0E01               	movlw	1
 48111  01AA7C  50DB               	movf	plusw2,w,c
 48112  01AA7E  E136               	bnz	l2203
 48113  01AA80  0E14               	movlw	20
 48114  01AA82  5CDE               	subwf	postinc2,w,c
 48115  01AA84  B0D8               	btfsc	status,0,c
 48116  01AA86  D032               	goto	l2203
 48117                           
 48118                           ; BSR set to: 57
 48119                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 48120  01AA88  0E01               	movlw	1
 48121  01AA8A  6EE6               	movwf	postinc1,c
 48122  01AA8C  EC3F  F016         	call	_set_ac_charger_relay	;wreg free
 48123  01AA90  D02D               	goto	l2203
 48124  01AA92                     l12758:
 48125                           
 48126                           ; BSR set to: 2
 48127                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 48128  01AA92  EE22  F3F9         	lfsr	2,_C+120	;volatile
 48129  01AA96  006F FF7B FFE6     	movff	postinc2,postinc1
 48130  01AA9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48131  01AAA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48132  01AAA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48133  01AAAE  EE22  F3FD         	lfsr	2,_C+124	;volatile
 48134  01AAB2  006F FF7B FFE6     	movff	postinc2,postinc1
 48135  01AAB8  006F FF7B FFE6     	movff	postinc2,postinc1
 48136  01AABE  006F FF7B FFE6     	movff	postinc2,postinc1
 48137  01AAC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48138  01AACA  EC35  F0F6         	call	___flge	;wreg free
 48139  01AACE  B02A               	btfsc	btemp& (0+255),0,c
 48140  01AAD0  D009               	goto	l2207
 48141                           
 48142                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 48143  01AAD2  EC5C  F016         	call	_get_ac_charger_relay	;wreg free
 48144  01AAD6  502A               	movf	btemp^0,w,c
 48145  01AAD8  A4D8               	btfss	status,2,c
 48146  01AADA  D004               	goto	l2207
 48147                           
 48148                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 48149  01AADC  0E01               	movlw	1
 48150  01AADE  6EE6               	movwf	postinc1,c
 48151  01AAE0  EC3F  F016         	call	_set_ac_charger_relay	;wreg free
 48152  01AAE4                     l2207:
 48153                           
 48154                           ;mbmc.c: 216:  if (day_delay >= 240)
 48155  01AAE4  0EEF               	movlw	239
 48156  01AAE6  6451               	cpfsgt	check_day_time@day_delay^0,c
 48157  01AAE8  D001               	goto	l2203
 48158                           
 48159                           ;mbmc.c: 217:   day_delay = 0;
 48160  01AAEA  6A51               	clrf	check_day_time@day_delay^0,c
 48161  01AAEC                     l2203:
 48162                           
 48163                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 48164  01AAEC  52E5               	movf	postdec1,f,c
 48165  01AAEE  52E5               	movf	postdec1,f,c
 48166  01AAF0  52E5               	movf	postdec1,f,c
 48167  01AAF2  52E5               	movf	postdec1,f,c
 48168  01AAF4  0012               	return		;funcret
 48169  01AAF6                     __end_of_check_day_time:
 48170                           	opt callstack 0
 48171                           
 48172 ;; *************** function _set_ac_charger_relay *****************
 48173 ;; Defined at:
 48174 ;;		line 136 in file "mbmc.c"
 48175 ;; Parameters:    Size  Location     Type
 48176 ;;  mode            1  [STACK] const _Bool 
 48177 ;; Auto vars:     Size  Location     Type
 48178 ;;		None
 48179 ;; Return value:  Size  Location     Type
 48180 ;;                  1  [STACK] void 
 48181 ;; Registers used:
 48182 ;;		wreg, fsr1l, fsr1h
 48183 ;; Tracked objects:
 48184 ;;		On entry : 0/39
 48185 ;;		On exit  : 0/0
 48186 ;;		Unchanged: 0/0
 48187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48192 ;;Total ram usage:        0 bytes
 48193 ;; Hardware stack levels used:    1
 48194 ;; Hardware stack levels required when called:    3
 48195 ;; This function calls:
 48196 ;;		Nothing
 48197 ;; This function is called by:
 48198 ;;		_check_day_time
 48199 ;; This function uses a reentrant model
 48200 ;;
 48201                           
 48202                           	psect	text194
 48203  002C7E                     __ptext194:
 48204                           	opt callstack 0
 48205  002C7E                     _set_ac_charger_relay:
 48206                           	opt callstack 10
 48207                           
 48208                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 48209                           ;stkvar	_mode @ sp[(0)+-1]
 48210                           
 48211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48212                           ;incstack = 0
 48213  002C7E  0EFF               	movlw	-1
 48214  002C80  B0E3               	btfsc	plusw1,0,c
 48215  002C82  D002               	bra	u1175_25
 48216  002C84  9CBD               	bcf	189,6,c	;volatile
 48217  002C86  D001               	bra	u1175_26
 48218  002C88                     u1175_25:
 48219  002C88  8CBD               	bsf	189,6,c	;volatile
 48220  002C8A                     u1175_26:
 48221                           
 48222                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 48223  002C8A  52E5               	movf	postdec1,f,c
 48224  002C8C  0012               	return		;funcret
 48225  002C8E                     __end_of_set_ac_charger_relay:
 48226                           	opt callstack 0
 48227                           
 48228 ;; *************** function _get_ac_charger_relay *****************
 48229 ;; Defined at:
 48230 ;;		line 141 in file "mbmc.c"
 48231 ;; Parameters:    Size  Location     Type
 48232 ;;		None
 48233 ;; Auto vars:     Size  Location     Type
 48234 ;;		None
 48235 ;; Return value:  Size  Location     Type
 48236 ;;                  1  [STACK] _Bool 
 48237 ;; Registers used:
 48238 ;;		btemp
 48239 ;; Tracked objects:
 48240 ;;		On entry : 0/39
 48241 ;;		On exit  : 0/0
 48242 ;;		Unchanged: 0/0
 48243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48248 ;;Total ram usage:        0 bytes
 48249 ;; Hardware stack levels used:    1
 48250 ;; Hardware stack levels required when called:    3
 48251 ;; This function calls:
 48252 ;;		Nothing
 48253 ;; This function is called by:
 48254 ;;		_check_day_time
 48255 ;;		_calc_bsoc
 48256 ;; This function uses a reentrant model
 48257 ;;
 48258                           
 48259                           	psect	text195
 48260  002CB8                     __ptext195:
 48261                           	opt callstack 0
 48262  002CB8                     _get_ac_charger_relay:
 48263                           	opt callstack 11
 48264                           
 48265                           ;mbmc.c: 143:  return LATDbits.LATD6;
 48266                           
 48267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48268                           ;incstack = 0
 48269  002CB8  ACBD               	btfss	189,6,c	;volatile
 48270  002CBA  D003               	goto	u1239_20
 48271  002CBC  6A2A               	clrf	btemp^0,c
 48272  002CBE  2A2A               	incf	btemp^0,f,c
 48273  002CC0  0012               	return	
 48274  002CC2                     u1239_20:
 48275  002CC2  6A2A               	clrf	btemp^0,c
 48276                           
 48277                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 48278  002CC4  0012               	return		;funcret
 48279  002CC6                     __end_of_get_ac_charger_relay:
 48280                           	opt callstack 0
 48281                           
 48282 ;; *************** function _TMR3_ISR *****************
 48283 ;; Defined at:
 48284 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 48285 ;; Parameters:    Size  Location     Type
 48286 ;;		None
 48287 ;; Auto vars:     Size  Location     Type
 48288 ;;		None
 48289 ;; Return value:  Size  Location     Type
 48290 ;;                  1    wreg      void 
 48291 ;; Registers used:
 48292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48293 ;; Tracked objects:
 48294 ;;		On entry : 0/0
 48295 ;;		On exit  : 3F/0
 48296 ;;		Unchanged: 0/0
 48297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48300 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48301 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48302 ;;Total ram usage:       25 bytes
 48303 ;; Hardware stack levels used:    1
 48304 ;; Hardware stack levels required when called:   14
 48305 ;; This function calls:
 48306 ;;		_TMR3_CallBack
 48307 ;;		_TMR3_WriteTimer
 48308 ;; This function is called by:
 48309 ;;		Interrupt level 1
 48310 ;; This function uses a non-reentrant model
 48311 ;;
 48312                           
 48313                           	psect	text196
 48314  01EDCC                     __ptext196:
 48315                           	opt callstack 0
 48316  01EDCC                     _TMR3_ISR:
 48317                           	opt callstack 3
 48318                           
 48319                           ;incstack = 0
 48320  01EDCC  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 48321  01EDD2  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 48322  01EDD8  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 48323  01EDDE  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 48324  01EDE4  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 48325  01EDEA  0060  F0A8  F0EA   	movff	btemp,??_TMR3_ISR+5
 48326  01EDF0  0060  F0AC  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 48327  01EDF6  0060  F0B0  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 48328  01EDFC  0060  F0B4  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 48329  01EE02  0060  F0B8  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 48330  01EE08  0060  F0BC  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 48331  01EE0E  0060  F0C0  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 48332  01EE14  0060  F0C4  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 48333  01EE1A  0060  F0C8  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 48334  01EE20  0060  F0CC  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 48335  01EE26  0060  F0D0  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 48336  01EE2C  0060  F0D4  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 48337  01EE32  0060  F0E8  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 48338  01EE38  0060  F0EC  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 48339  01EE3E  0060  F0F0  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 48340  01EE44  0060  F0F4  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 48341  01EE4A  0060  F0F8  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 48342  01EE50  0060  F0FC  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 48343  01EE56  0060  F100  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 48344  01EE5C  0060  F104  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 48345  01EE62  EE16  F196         	lfsr	1,___intlo_sp
 48346                           
 48347                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 48348  01EE66  0139               	movlb	57	; () banked
 48349  01EE68  9DA6               	bcf	166,6,b	;volatile
 48350                           
 48351                           ; BSR set to: 57
 48352                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 48353  01EE6A  0060  F303  FFE6   	movff	_timer3ReloadVal,postinc1
 48354  01EE70  0060  F307  FFE6   	movff	_timer3ReloadVal+1,postinc1
 48355  01EE76  EC60  F011         	call	_TMR3_WriteTimer	;wreg free
 48356                           
 48357                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 48358  01EE7A  0100               	movlb	0	; () banked
 48359  01EE7C  4BBE               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 48360  01EE7E  2BBF               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 48361  01EE80  51BF               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 48362  01EE82  E104               	bnz	i1u1704_20
 48363  01EE84  0E28               	movlw	40
 48364  01EE86  5DBE               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 48365  01EE88  A0D8               	btfss	status,0,c
 48366  01EE8A  D005               	goto	i1l1209
 48367  01EE8C                     i1u1704_20:
 48368                           
 48369                           ; BSR set to: 0
 48370                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 48371  01EE8C  ECE0  F014         	call	_TMR3_CallBack	;wreg free
 48372                           
 48373                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 48374  01EE90  0100               	movlb	0	; () banked
 48375  01EE92  6BBE               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 48376  01EE94  6BBF               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 48377  01EE96                     i1l1209:
 48378                           
 48379                           ; BSR set to: 0
 48380  01EE96  0060  F3F4  F041   	movff	??_TMR3_ISR+24,btemp+23
 48381  01EE9C  0060  F3F0  F040   	movff	??_TMR3_ISR+23,btemp+22
 48382  01EEA2  0060  F3EC  F03F   	movff	??_TMR3_ISR+22,btemp+21
 48383  01EEA8  0060  F3E8  F03E   	movff	??_TMR3_ISR+21,btemp+20
 48384  01EEAE  0060  F3E4  F03D   	movff	??_TMR3_ISR+20,btemp+19
 48385  01EEB4  0060  F3E0  F03C   	movff	??_TMR3_ISR+19,btemp+18
 48386  01EEBA  0060  F3DC  F03B   	movff	??_TMR3_ISR+18,btemp+17
 48387  01EEC0  0060  F3D8  F03A   	movff	??_TMR3_ISR+17,btemp+16
 48388  01EEC6  0060  F3D4  F035   	movff	??_TMR3_ISR+16,btemp+11
 48389  01EECC  0060  F3D0  F034   	movff	??_TMR3_ISR+15,btemp+10
 48390  01EED2  0060  F3CC  F033   	movff	??_TMR3_ISR+14,btemp+9
 48391  01EED8  0060  F3C8  F032   	movff	??_TMR3_ISR+13,btemp+8
 48392  01EEDE  0060  F3C4  F031   	movff	??_TMR3_ISR+12,btemp+7
 48393  01EEE4  0060  F3C0  F030   	movff	??_TMR3_ISR+11,btemp+6
 48394  01EEEA  0060  F3BC  F02F   	movff	??_TMR3_ISR+10,btemp+5
 48395  01EEF0  0060  F3B8  F02E   	movff	??_TMR3_ISR+9,btemp+4
 48396  01EEF6  0060  F3B4  F02D   	movff	??_TMR3_ISR+8,btemp+3
 48397  01EEFC  0060  F3B0  F02C   	movff	??_TMR3_ISR+7,btemp+2
 48398  01EF02  0060  F3AC  F02B   	movff	??_TMR3_ISR+6,btemp+1
 48399  01EF08  0060  F3A8  F02A   	movff	??_TMR3_ISR+5,btemp
 48400  01EF0E  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 48401  01EF14  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 48402  01EF1A  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 48403  01EF20  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 48404  01EF26  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 48405  01EF2C  0011               	retfie		f
 48406  01EF2E                     __end_of_TMR3_ISR:
 48407                           	opt callstack 0
 48408                           
 48409 ;; *************** function _TMR3_WriteTimer *****************
 48410 ;; Defined at:
 48411 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 48412 ;; Parameters:    Size  Location     Type
 48413 ;;  timerVal        2  [STACK] unsigned short 
 48414 ;; Auto vars:     Size  Location     Type
 48415 ;;		None
 48416 ;; Return value:  Size  Location     Type
 48417 ;;                  1  [STACK] void 
 48418 ;; Registers used:
 48419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 48420 ;; Tracked objects:
 48421 ;;		On entry : 3F/39
 48422 ;;		On exit  : 0/0
 48423 ;;		Unchanged: 0/0
 48424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48429 ;;Total ram usage:        0 bytes
 48430 ;; Hardware stack levels used:    1
 48431 ;; Hardware stack levels required when called:    3
 48432 ;; This function calls:
 48433 ;;		Nothing
 48434 ;; This function is called by:
 48435 ;;		_TMR3_ISR
 48436 ;; This function uses a reentrant model
 48437 ;;
 48438                           
 48439                           	psect	text197
 48440  0022C0                     __ptext197:
 48441                           	opt callstack 0
 48442  0022C0                     _TMR3_WriteTimer:
 48443                           	opt callstack 13
 48444                           
 48445                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 48446                           
 48447                           ; BSR set to: 0
 48448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48449                           ;incstack = 0
 48450  0022C0  A4A6               	btfss	166,2,c	;volatile
 48451  0022C2  D00F               	goto	l13996
 48452                           
 48453                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 48454  0022C4  90A6               	bcf	166,0,c	;volatile
 48455                           
 48456                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 48457                           ;stkvar	_timerVal @ sp[(0)+-2]
 48458  0022C6  0EFF               	movlw	255
 48459  0022C8  24E1               	addwf	fsr1l,w,c
 48460  0022CA  6ED9               	movwf	fsr2l,c
 48461  0022CC  0EFF               	movlw	255
 48462  0022CE  20E2               	addwfc	fsr1h,w,c
 48463  0022D0  6EDA               	movwf	fsr2h,c
 48464  0022D2  50DF               	movf	indf2,w,c
 48465  0022D4  6EA5               	movwf	165,c	;volatile
 48466                           
 48467                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 48468                           ;stkvar	_timerVal @ sp[(0)+-2]
 48469  0022D6  0EFE               	movlw	-2
 48470  0022D8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48471                           
 48472                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 48473  0022DE  80A6               	bsf	166,0,c	;volatile
 48474                           
 48475                           ;mcc_generated_files/tmr3.c: 141:     }
 48476  0022E0  D00C               	goto	l1192
 48477  0022E2                     l13996:
 48478                           
 48479                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 48480                           ;stkvar	_timerVal @ sp[(0)+-2]
 48481  0022E2  0EFF               	movlw	255
 48482  0022E4  24E1               	addwf	fsr1l,w,c
 48483  0022E6  6ED9               	movwf	fsr2l,c
 48484  0022E8  0EFF               	movlw	255
 48485  0022EA  20E2               	addwfc	fsr1h,w,c
 48486  0022EC  6EDA               	movwf	fsr2h,c
 48487  0022EE  50DF               	movf	indf2,w,c
 48488  0022F0  6EA5               	movwf	165,c	;volatile
 48489                           
 48490                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 48491                           ;stkvar	_timerVal @ sp[(0)+-2]
 48492  0022F2  0EFE               	movlw	-2
 48493  0022F4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 48494  0022FA                     l1192:
 48495                           
 48496                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 48497  0022FA  52E5               	movf	postdec1,f,c
 48498  0022FC  52E5               	movf	postdec1,f,c
 48499  0022FE  0012               	return		;funcret
 48500  002300                     __end_of_TMR3_WriteTimer:
 48501                           	opt callstack 0
 48502                           
 48503 ;; *************** function _TMR3_CallBack *****************
 48504 ;; Defined at:
 48505 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 48506 ;; Parameters:    Size  Location     Type
 48507 ;;		None
 48508 ;; Auto vars:     Size  Location     Type
 48509 ;;		None
 48510 ;; Return value:  Size  Location     Type
 48511 ;;                  1  [STACK] void 
 48512 ;; Registers used:
 48513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 48514 ;; Tracked objects:
 48515 ;;		On entry : 3F/0
 48516 ;;		On exit  : 0/0
 48517 ;;		Unchanged: 0/0
 48518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48523 ;;Total ram usage:        0 bytes
 48524 ;; Hardware stack levels used:    1
 48525 ;; Hardware stack levels required when called:   13
 48526 ;; This function calls:
 48527 ;;		Absolute function
 48528 ;;		_TMR3_DefaultInterruptHandler
 48529 ;;		_calc_bsoc
 48530 ;; This function is called by:
 48531 ;;		_TMR3_ISR
 48532 ;; This function uses a reentrant model
 48533 ;;
 48534                           
 48535                           	psect	text198
 48536  0029C0                     __ptext198:
 48537                           	opt callstack 0
 48538  0029C0                     _TMR3_CallBack:
 48539                           	opt callstack 3
 48540                           
 48541                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 48542                           
 48543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48544                           ;incstack = 0
 48545  0029C0  0100               	movlb	0	; () banked
 48546  0029C2  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48547  0029C4  1199               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48548  0029C6  119A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48549  0029C8  B4D8               	btfsc	status,2,c
 48550  0029CA  0012               	return	
 48551                           
 48552                           ; BSR set to: 0
 48553                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 48554  0029CC  D801               	call	u1682_28
 48555  0029CE  0012               	return	
 48556  0029D0                     u1682_28:
 48557  0029D0  0005               	push	
 48558  0029D2  6EFA               	movwf	pclath,c
 48559  0029D4  5198               	movf	_TMR3_InterruptHandler& (0+255),w,b
 48560  0029D6  6EFD               	movwf	tosl,c
 48561  0029D8  5199               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 48562  0029DA  6EFE               	movwf	tosh,c
 48563  0029DC  519A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 48564  0029DE  6EFF               	movwf	tosu,c
 48565  0029E0  50FA               	movf	pclath,w,c
 48566  0029E2  0012               	return		;indir
 48567  0029E4                     __end_of_TMR3_CallBack:
 48568                           	opt callstack 0
 48569                           
 48570 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 48571 ;; Defined at:
 48572 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 48573 ;; Parameters:    Size  Location     Type
 48574 ;;		None
 48575 ;; Auto vars:     Size  Location     Type
 48576 ;;		None
 48577 ;; Return value:  Size  Location     Type
 48578 ;;                  1  [STACK] void 
 48579 ;; Registers used:
 48580 ;;		None
 48581 ;; Tracked objects:
 48582 ;;		On entry : 3F/0
 48583 ;;		On exit  : 0/0
 48584 ;;		Unchanged: 0/0
 48585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48590 ;;Total ram usage:        0 bytes
 48591 ;; Hardware stack levels used:    1
 48592 ;; Hardware stack levels required when called:    3
 48593 ;; This function calls:
 48594 ;;		Nothing
 48595 ;; This function is called by:
 48596 ;;		_TMR3_Initialize
 48597 ;;		_TMR3_CallBack
 48598 ;; This function uses a reentrant model
 48599 ;;
 48600                           
 48601                           	psect	text199
 48602  002D74                     __ptext199:
 48603                           	opt callstack 0
 48604  002D74                     _TMR3_DefaultInterruptHandler:
 48605                           	opt callstack 12
 48606                           
 48607                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48608                           
 48609                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48610                           ;incstack = 0
 48611  002D74  0012               	return		;funcret
 48612  002D76                     __end_of_TMR3_DefaultInterruptHandler:
 48613                           	opt callstack 0
 48614                           
 48615 ;; *************** function _calc_bsoc *****************
 48616 ;; Defined at:
 48617 ;;		line 39 in file "bsoc.c"
 48618 ;; Parameters:    Size  Location     Type
 48619 ;;		None
 48620 ;; Auto vars:     Size  Location     Type
 48621 ;;  adj             4  [STACK] float 
 48622 ;;  log_ptr         2  [STACK] PTR unsigned char 
 48623 ;;		 -> port_data(512), 
 48624 ;; Return value:  Size  Location     Type
 48625 ;;                  1  [STACK] void 
 48626 ;; Registers used:
 48627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 48628 ;; Tracked objects:
 48629 ;;		On entry : 3F/0
 48630 ;;		On exit  : 6/2
 48631 ;;		Unchanged: 0/0
 48632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48637 ;;Total ram usage:        0 bytes
 48638 ;; Hardware stack levels used:    1
 48639 ;; Hardware stack levels required when called:   12
 48640 ;; This function calls:
 48641 ;;		_StartTimer
 48642 ;;		___asfladd
 48643 ;;		___fldiv
 48644 ;;		___flge
 48645 ;;		___flmul
 48646 ;;		___flneg
 48647 ;;		___fltol
 48648 ;;		_fabsf
 48649 ;;		_get_ac_charger_relay
 48650 ;;		_port_data_dma_ptr
 48651 ;;		_send_port_data_dma
 48652 ;;		_sprintf
 48653 ;;		_strlen
 48654 ;; This function is called by:
 48655 ;;		_init_bsoc
 48656 ;;		_TMR3_CallBack
 48657 ;; This function uses a reentrant model
 48658 ;;
 48659                           
 48660                           	psect	text200
 48661  0149E2                     __ptext200:
 48662                           	opt callstack 0
 48663  0149E2                     _calc_bsoc:
 48664                           	opt callstack 0
 48665                           
 48666                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48667  0149E2  0E06               	movlw	6
 48668  0149E4  26E1               	addwf	fsr1l,f,c
 48669  0149E6  0E00               	movlw	0
 48670  0149E8  22E2               	addwfc	fsr1h,f,c
 48671                           
 48672                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 48673                           
 48674                           ;incstack = 0
 48675  0149EA  0E00               	movlw	0
 48676  0149EC  6E32               	movwf	(btemp+8)^0,c
 48677  0149EE  0E00               	movlw	0
 48678  0149F0  6E33               	movwf	(btemp+9)^0,c
 48679  0149F2  0E80               	movlw	128
 48680  0149F4  6E34               	movwf	(btemp+10)^0,c
 48681  0149F6  0E3F               	movlw	63
 48682  0149F8  6E35               	movwf	(btemp+11)^0,c
 48683                           
 48684                           ;stkvar	_adj @ sp[(-6)+0]
 48685  0149FA  0EFA               	movlw	-6
 48686  0149FC  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48687  014A02  0EFB               	movlw	-5
 48688  014A04  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48689  014A0A  0EFC               	movlw	-4
 48690  014A0C  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48691  014A12  0EFD               	movlw	-3
 48692  014A14  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48693  014A1A  82BE               	bsf	190,1,c	;volatile
 48694                           
 48695                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 48696  014A1C  0E00               	movlw	0
 48697  014A1E  6EE6               	movwf	postinc1,c
 48698  014A20  0E00               	movlw	0
 48699  014A22  6EE6               	movwf	postinc1,c
 48700  014A24  0E61               	movlw	97
 48701  014A26  6EE6               	movwf	postinc1,c
 48702  014A28  0E45               	movlw	69
 48703  014A2A  6EE6               	movwf	postinc1,c
 48704  014A2C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48705  014A30  006F FF7B FFE6     	movff	postinc2,postinc1
 48706  014A36  006F FF7B FFE6     	movff	postinc2,postinc1
 48707  014A3C  006F FF7B FFE6     	movff	postinc2,postinc1
 48708  014A42  006F FF7B FFE6     	movff	postinc2,postinc1
 48709  014A48  EC64  F0C1         	call	___fldiv	;wreg free
 48710  014A4C  0060  F0AB  FFE6   	movff	btemp,postinc1
 48711  014A52  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48712  014A58  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48713  014A5E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48714  014A64  0E11               	movlw	low (_C+144)
 48715  014A66  6EE6               	movwf	postinc1,c
 48716  014A68  0E0C               	movlw	high (_C+144)
 48717  014A6A  6EE6               	movwf	postinc1,c
 48718  014A6C  EC7E  F00B         	call	___asfladd	;wreg free
 48719                           
 48720                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 48721  014A70  EE23  F011         	lfsr	2,_C+144	;volatile
 48722  014A74  006F FF7B FFE6     	movff	postinc2,postinc1
 48723  014A7A  006F FF7B FFE6     	movff	postinc2,postinc1
 48724  014A80  006F FF7B FFE6     	movff	postinc2,postinc1
 48725  014A86  006F FF7B FFE6     	movff	postinc2,postinc1
 48726  014A8C  EE23  F00D         	lfsr	2,_C+140	;volatile
 48727  014A90  006F FF7B FFE6     	movff	postinc2,postinc1
 48728  014A96  006F FF7B FFE6     	movff	postinc2,postinc1
 48729  014A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 48730  014AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48731  014AA8  EC35  F0F6         	call	___flge	;wreg free
 48732  014AAC  B02A               	btfsc	btemp& (0+255),0,c
 48733  014AAE  D00E               	goto	l17080
 48734                           
 48735                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 48736  014AB0  EE23  F00D         	lfsr	2,_C+140	;volatile
 48737  014AB4  006F FF78  FC11    	movff	postinc2,_C+144	;volatile
 48738  014ABA  006F FF78  FC12    	movff	postinc2,_C+145	;volatile
 48739  014AC0  006F FF78  FC13    	movff	postinc2,_C+146	;volatile
 48740  014AC6  006F FF74  FC14    	movff	postdec2,_C+147	;volatile
 48741  014ACC                     l17080:
 48742                           
 48743                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 48744  014ACC  0ECD               	movlw	205
 48745  014ACE  6EE6               	movwf	postinc1,c
 48746  014AD0  0ECC               	movlw	204
 48747  014AD2  6EE6               	movwf	postinc1,c
 48748  014AD4  0ECC               	movlw	204
 48749  014AD6  6EE6               	movwf	postinc1,c
 48750  014AD8  0E3D               	movlw	61
 48751  014ADA  6EE6               	movwf	postinc1,c
 48752  014ADC  EE23  F011         	lfsr	2,_C+144	;volatile
 48753  014AE0  006F FF7B FFE6     	movff	postinc2,postinc1
 48754  014AE6  006F FF7B FFE6     	movff	postinc2,postinc1
 48755  014AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 48756  014AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 48757  014AF8  EC35  F0F6         	call	___flge	;wreg free
 48758  014AFC  B02A               	btfsc	btemp& (0+255),0,c
 48759  014AFE  D010               	goto	l17084
 48760                           
 48761                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 48762  014B00  0ECD               	movlw	205
 48763  014B02  006F FFA0  FC11    	movff	wreg,_C+144	;volatile
 48764  014B08  0ECC               	movlw	204
 48765  014B0A  006F FFA0  FC12    	movff	wreg,_C+145	;volatile
 48766  014B10  0ECC               	movlw	204
 48767  014B12  006F FFA0  FC13    	movff	wreg,_C+146	;volatile
 48768  014B18  0E3D               	movlw	61
 48769  014B1A  006F FFA0  FC14    	movff	wreg,_C+147	;volatile
 48770  014B20                     l17084:
 48771                           
 48772                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 48773  014B20  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48774  014B24  006F FF7B FFE6     	movff	postinc2,postinc1
 48775  014B2A  006F FF7B FFE6     	movff	postinc2,postinc1
 48776  014B30  006F FF7B FFE6     	movff	postinc2,postinc1
 48777  014B36  006F FF7B FFE6     	movff	postinc2,postinc1
 48778  014B3C  0E0A               	movlw	10
 48779  014B3E  6EE6               	movwf	postinc1,c
 48780  014B40  0ED7               	movlw	215
 48781  014B42  6EE6               	movwf	postinc1,c
 48782  014B44  0E23               	movlw	35
 48783  014B46  6EE6               	movwf	postinc1,c
 48784  014B48  0E3C               	movlw	60
 48785  014B4A  6EE6               	movwf	postinc1,c
 48786  014B4C  EC35  F0F6         	call	___flge	;wreg free
 48787  014B50  B02A               	btfsc	btemp& (0+255),0,c
 48788  014B52  D01C               	goto	l17088
 48789                           
 48790                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 48791  014B54  0063  F158  F032   	movff	_C+213,btemp+8	;volatile
 48792  014B5A  0063  F15C  F033   	movff	_C+214,btemp+9	;volatile
 48793  014B60  0063  F160  F034   	movff	_C+215,btemp+10	;volatile
 48794  014B66  0063  F164  F035   	movff	_C+216,btemp+11	;volatile
 48795                           
 48796                           ;stkvar	_adj @ sp[(-6)+0]
 48797  014B6C  0EFA               	movlw	-6
 48798  014B6E  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48799  014B74  0EFB               	movlw	-5
 48800  014B76  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48801  014B7C  0EFC               	movlw	-4
 48802  014B7E  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48803  014B84  0EFD               	movlw	-3
 48804  014B86  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48805  014B8C                     l17088:
 48806                           
 48807                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 48808  014B8C  0E0A               	movlw	10
 48809  014B8E  6EE6               	movwf	postinc1,c
 48810  014B90  0ED7               	movlw	215
 48811  014B92  6EE6               	movwf	postinc1,c
 48812  014B94  0E23               	movlw	35
 48813  014B96  6EE6               	movwf	postinc1,c
 48814  014B98  0E3C               	movlw	60
 48815  014B9A  6EE6               	movwf	postinc1,c
 48816  014B9C  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48817  014BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 48818  014BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 48819  014BAC  006F FF7B FFE6     	movff	postinc2,postinc1
 48820  014BB2  006F FF7B FFE6     	movff	postinc2,postinc1
 48821  014BB8  EC35  F0F6         	call	___flge	;wreg free
 48822  014BBC  B02A               	btfsc	btemp& (0+255),0,c
 48823  014BBE  D01C               	goto	l17092
 48824                           
 48825                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 48826  014BC0  0063  F148  F032   	movff	_C+209,btemp+8	;volatile
 48827  014BC6  0063  F14C  F033   	movff	_C+210,btemp+9	;volatile
 48828  014BCC  0063  F150  F034   	movff	_C+211,btemp+10	;volatile
 48829  014BD2  0063  F154  F035   	movff	_C+212,btemp+11	;volatile
 48830                           
 48831                           ;stkvar	_adj @ sp[(-6)+0]
 48832  014BD8  0EFA               	movlw	-6
 48833  014BDA  0060  F0CB  FFE3   	movff	btemp+8,plusw1
 48834  014BE0  0EFB               	movlw	-5
 48835  014BE2  0060  F0CF  FFE3   	movff	btemp+9,plusw1
 48836  014BE8  0EFC               	movlw	-4
 48837  014BEA  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 48838  014BF0  0EFD               	movlw	-3
 48839  014BF2  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 48840  014BF8                     l17092:
 48841                           
 48842                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 48843  014BF8  0E00               	movlw	0
 48844  014BFA  6EE6               	movwf	postinc1,c
 48845  014BFC  0E00               	movlw	0
 48846  014BFE  6EE6               	movwf	postinc1,c
 48847  014C00  0E61               	movlw	97
 48848  014C02  6EE6               	movwf	postinc1,c
 48849  014C04  0E45               	movlw	69
 48850  014C06  6EE6               	movwf	postinc1,c
 48851                           
 48852                           ;stkvar	_adj @ sp[(-10)+0]
 48853  014C08  0EF6               	movlw	-10
 48854  014C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 48855  014C10  006F FF8F FFE6     	movff	plusw1,postinc1
 48856  014C16  006F FF8F FFE6     	movff	plusw1,postinc1
 48857  014C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 48858  014C22  EE22  F3C5         	lfsr	2,_C+68	;volatile
 48859  014C26  006F FF7B FFE6     	movff	postinc2,postinc1
 48860  014C2C  006F FF7B FFE6     	movff	postinc2,postinc1
 48861  014C32  006F FF7B FFE6     	movff	postinc2,postinc1
 48862  014C38  006F FF7B FFE6     	movff	postinc2,postinc1
 48863  014C3E  EC32  F0B3         	call	___flmul	;wreg free
 48864  014C42  0060  F0AB  FFE6   	movff	btemp,postinc1
 48865  014C48  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48866  014C4E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48867  014C54  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48868  014C5A  EC64  F0C1         	call	___fldiv	;wreg free
 48869  014C5E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48870  014C64  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48871  014C6A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48872  014C70  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48873  014C76  0E11               	movlw	low (_C+144)
 48874  014C78  6EE6               	movwf	postinc1,c
 48875  014C7A  0E0C               	movlw	high (_C+144)
 48876  014C7C  6EE6               	movwf	postinc1,c
 48877  014C7E  EC7E  F00B         	call	___asfladd	;wreg free
 48878                           
 48879                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 48880  014C82  EE23  F011         	lfsr	2,_C+144	;volatile
 48881  014C86  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 48882  014C8C  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 48883  014C92  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 48884  014C98  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 48885                           
 48886                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 48887  014C9E  EE23  F01D         	lfsr	2,_C+156	;volatile
 48888  014CA2  006F FF7B FFE6     	movff	postinc2,postinc1
 48889  014CA8  006F FF7B FFE6     	movff	postinc2,postinc1
 48890  014CAE  006F FF7B FFE6     	movff	postinc2,postinc1
 48891  014CB4  006F FF7B FFE6     	movff	postinc2,postinc1
 48892  014CBA  EE23  F00D         	lfsr	2,_C+140	;volatile
 48893  014CBE  006F FF7B FFE6     	movff	postinc2,postinc1
 48894  014CC4  006F FF7B FFE6     	movff	postinc2,postinc1
 48895  014CCA  006F FF7B FFE6     	movff	postinc2,postinc1
 48896  014CD0  006F FF7B FFE6     	movff	postinc2,postinc1
 48897  014CD6  EC35  F0F6         	call	___flge	;wreg free
 48898  014CDA  B02A               	btfsc	btemp& (0+255),0,c
 48899  014CDC  D00E               	goto	l17100
 48900                           
 48901                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 48902  014CDE  EE23  F00D         	lfsr	2,_C+140	;volatile
 48903  014CE2  006F FF78  FC1D    	movff	postinc2,_C+156	;volatile
 48904  014CE8  006F FF78  FC1E    	movff	postinc2,_C+157	;volatile
 48905  014CEE  006F FF78  FC1F    	movff	postinc2,_C+158	;volatile
 48906  014CF4  006F FF74  FC20    	movff	postdec2,_C+159	;volatile
 48907  014CFA                     l17100:
 48908                           
 48909                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 48910  014CFA  0ECD               	movlw	205
 48911  014CFC  6EE6               	movwf	postinc1,c
 48912  014CFE  0ECC               	movlw	204
 48913  014D00  6EE6               	movwf	postinc1,c
 48914  014D02  0ECC               	movlw	204
 48915  014D04  6EE6               	movwf	postinc1,c
 48916  014D06  0E3D               	movlw	61
 48917  014D08  6EE6               	movwf	postinc1,c
 48918  014D0A  EE23  F01D         	lfsr	2,_C+156	;volatile
 48919  014D0E  006F FF7B FFE6     	movff	postinc2,postinc1
 48920  014D14  006F FF7B FFE6     	movff	postinc2,postinc1
 48921  014D1A  006F FF7B FFE6     	movff	postinc2,postinc1
 48922  014D20  006F FF7B FFE6     	movff	postinc2,postinc1
 48923  014D26  EC35  F0F6         	call	___flge	;wreg free
 48924  014D2A  B02A               	btfsc	btemp& (0+255),0,c
 48925  014D2C  D010               	goto	l17104
 48926                           
 48927                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 48928  014D2E  0ECD               	movlw	205
 48929  014D30  006F FFA0  FC1D    	movff	wreg,_C+156	;volatile
 48930  014D36  0ECC               	movlw	204
 48931  014D38  006F FFA0  FC1E    	movff	wreg,_C+157	;volatile
 48932  014D3E  0ECC               	movlw	204
 48933  014D40  006F FFA0  FC1F    	movff	wreg,_C+158	;volatile
 48934  014D46  0E3D               	movlw	61
 48935  014D48  006F FFA0  FC20    	movff	wreg,_C+159	;volatile
 48936  014D4E                     l17104:
 48937                           
 48938                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 48939  014D4E  0E00               	movlw	0
 48940  014D50  6EE6               	movwf	postinc1,c
 48941  014D52  0E00               	movlw	0
 48942  014D54  6EE6               	movwf	postinc1,c
 48943  014D56  0E61               	movlw	97
 48944  014D58  6EE6               	movwf	postinc1,c
 48945  014D5A  0E45               	movlw	69
 48946  014D5C  6EE6               	movwf	postinc1,c
 48947  014D5E  EE22  F3C9         	lfsr	2,_C+72	;volatile
 48948  014D62  006F FF7B FFE6     	movff	postinc2,postinc1
 48949  014D68  006F FF7B FFE6     	movff	postinc2,postinc1
 48950  014D6E  006F FF7B FFE6     	movff	postinc2,postinc1
 48951  014D74  006F FF7B FFE6     	movff	postinc2,postinc1
 48952  014D7A  EC64  F0C1         	call	___fldiv	;wreg free
 48953  014D7E  0060  F0AB  FFE6   	movff	btemp,postinc1
 48954  014D84  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48955  014D8A  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48956  014D90  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48957  014D96  0E15               	movlw	low (_C+148)
 48958  014D98  6EE6               	movwf	postinc1,c
 48959  014D9A  0E0C               	movlw	high (_C+148)
 48960  014D9C  6EE6               	movwf	postinc1,c
 48961  014D9E  EC7E  F00B         	call	___asfladd	;wreg free
 48962                           
 48963                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 48964  014DA2  0E00               	movlw	0
 48965  014DA4  6EE6               	movwf	postinc1,c
 48966  014DA6  0E00               	movlw	0
 48967  014DA8  6EE6               	movwf	postinc1,c
 48968  014DAA  0E61               	movlw	97
 48969  014DAC  6EE6               	movwf	postinc1,c
 48970  014DAE  0E45               	movlw	69
 48971  014DB0  6EE6               	movwf	postinc1,c
 48972  014DB2  EE22  F3FD         	lfsr	2,_C+124	;volatile
 48973  014DB6  006F FF7B FFE6     	movff	postinc2,postinc1
 48974  014DBC  006F FF7B FFE6     	movff	postinc2,postinc1
 48975  014DC2  006F FF7B FFE6     	movff	postinc2,postinc1
 48976  014DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 48977  014DCE  EC64  F0C1         	call	___fldiv	;wreg free
 48978  014DD2  0060  F0AB  FFE6   	movff	btemp,postinc1
 48979  014DD8  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 48980  014DDE  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 48981  014DE4  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 48982  014DEA  0E29               	movlw	low (_C+168)
 48983  014DEC  6EE6               	movwf	postinc1,c
 48984  014DEE  0E0C               	movlw	high (_C+168)
 48985  014DF0  6EE6               	movwf	postinc1,c
 48986  014DF2  EC7E  F00B         	call	___asfladd	;wreg free
 48987                           
 48988                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 48989  014DF6  0E00               	movlw	0
 48990  014DF8  6EE6               	movwf	postinc1,c
 48991  014DFA  0E00               	movlw	0
 48992  014DFC  6EE6               	movwf	postinc1,c
 48993  014DFE  0E61               	movlw	97
 48994  014E00  6EE6               	movwf	postinc1,c
 48995  014E02  0E45               	movlw	69
 48996  014E04  6EE6               	movwf	postinc1,c
 48997  014E06  EE22  F3F9         	lfsr	2,_C+120	;volatile
 48998  014E0A  006F FF7B FFE6     	movff	postinc2,postinc1
 48999  014E10  006F FF7B FFE6     	movff	postinc2,postinc1
 49000  014E16  006F FF7B FFE6     	movff	postinc2,postinc1
 49001  014E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 49002  014E22  EC64  F0C1         	call	___fldiv	;wreg free
 49003  014E26  0060  F0AB  FFE6   	movff	btemp,postinc1
 49004  014E2C  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49005  014E32  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49006  014E38  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49007  014E3E  0E2D               	movlw	low (_C+172)
 49008  014E40  6EE6               	movwf	postinc1,c
 49009  014E42  0E0C               	movlw	high (_C+172)
 49010  014E44  6EE6               	movwf	postinc1,c
 49011  014E46  EC7E  F00B         	call	___asfladd	;wreg free
 49012                           
 49013                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 49014  014E4A  0E00               	movlw	0
 49015  014E4C  6EE6               	movwf	postinc1,c
 49016  014E4E  0E00               	movlw	0
 49017  014E50  6EE6               	movwf	postinc1,c
 49018  014E52  0E61               	movlw	97
 49019  014E54  6EE6               	movwf	postinc1,c
 49020  014E56  0E45               	movlw	69
 49021  014E58  6EE6               	movwf	postinc1,c
 49022  014E5A  EE22  F3F5         	lfsr	2,_C+116	;volatile
 49023  014E5E  006F FF7B FFE6     	movff	postinc2,postinc1
 49024  014E64  006F FF7B FFE6     	movff	postinc2,postinc1
 49025  014E6A  006F FF7B FFE6     	movff	postinc2,postinc1
 49026  014E70  006F FF7B FFE6     	movff	postinc2,postinc1
 49027  014E76  EC64  F0C1         	call	___fldiv	;wreg free
 49028  014E7A  0060  F0AB  FFE6   	movff	btemp,postinc1
 49029  014E80  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49030  014E86  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49031  014E8C  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49032  014E92  0E31               	movlw	low (_C+176)
 49033  014E94  6EE6               	movwf	postinc1,c
 49034  014E96  0E0C               	movlw	high (_C+176)
 49035  014E98  6EE6               	movwf	postinc1,c
 49036  014E9A  EC7E  F00B         	call	___asfladd	;wreg free
 49037                           
 49038                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 49039  014E9E  EE23  F001         	lfsr	2,_C+128	;volatile
 49040  014EA2  006F FF7B FFE6     	movff	postinc2,postinc1
 49041  014EA8  006F FF7B FFE6     	movff	postinc2,postinc1
 49042  014EAE  006F FF7B FFE6     	movff	postinc2,postinc1
 49043  014EB4  006F FF7B FFE6     	movff	postinc2,postinc1
 49044  014EBA  0E00               	movlw	0
 49045  014EBC  6EE6               	movwf	postinc1,c
 49046  014EBE  0E00               	movlw	0
 49047  014EC0  6EE6               	movwf	postinc1,c
 49048  014EC2  0E00               	movlw	0
 49049  014EC4  6EE6               	movwf	postinc1,c
 49050  014EC6  0E00               	movlw	0
 49051  014EC8  6EE6               	movwf	postinc1,c
 49052  014ECA  EC35  F0F6         	call	___flge	;wreg free
 49053  014ECE  B02A               	btfsc	btemp& (0+255),0,c
 49054  014ED0  D02A               	goto	l17110
 49055                           
 49056                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 49057  014ED2  0E00               	movlw	0
 49058  014ED4  6EE6               	movwf	postinc1,c
 49059  014ED6  0E00               	movlw	0
 49060  014ED8  6EE6               	movwf	postinc1,c
 49061  014EDA  0E61               	movlw	97
 49062  014EDC  6EE6               	movwf	postinc1,c
 49063  014EDE  0E45               	movlw	69
 49064  014EE0  6EE6               	movwf	postinc1,c
 49065  014EE2  EE23  F001         	lfsr	2,_C+128	;volatile
 49066  014EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 49067  014EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 49068  014EF2  006F FF7B FFE6     	movff	postinc2,postinc1
 49069  014EF8  006F FF7B FFE6     	movff	postinc2,postinc1
 49070  014EFE  EC64  F0C1         	call	___fldiv	;wreg free
 49071  014F02  0060  F0AB  FFE6   	movff	btemp,postinc1
 49072  014F08  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49073  014F0E  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49074  014F14  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49075  014F1A  0E21               	movlw	low (_C+160)
 49076  014F1C  6EE6               	movwf	postinc1,c
 49077  014F1E  0E0C               	movlw	high (_C+160)
 49078  014F20  6EE6               	movwf	postinc1,c
 49079  014F22  EC7E  F00B         	call	___asfladd	;wreg free
 49080  014F26                     l17110:
 49081                           
 49082                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 49083  014F26  EE23  F001         	lfsr	2,_C+128	;volatile
 49084  014F2A  0E03               	movlw	3
 49085  014F2C  AEDB               	btfss	plusw2,7,c
 49086  014F2E  D038               	goto	l17114
 49087                           
 49088                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 49089  014F30  0E00               	movlw	0
 49090  014F32  6EE6               	movwf	postinc1,c
 49091  014F34  0E00               	movlw	0
 49092  014F36  6EE6               	movwf	postinc1,c
 49093  014F38  0E61               	movlw	97
 49094  014F3A  6EE6               	movwf	postinc1,c
 49095  014F3C  0E45               	movlw	69
 49096  014F3E  6EE6               	movwf	postinc1,c
 49097  014F40  EE23  F001         	lfsr	2,_C+128	;volatile
 49098  014F44  006F FF7B FFE6     	movff	postinc2,postinc1
 49099  014F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 49100  014F50  006F FF7B FFE6     	movff	postinc2,postinc1
 49101  014F56  006F FF7B FFE6     	movff	postinc2,postinc1
 49102  014F5C  EC64  F0C1         	call	___fldiv	;wreg free
 49103  014F60  0060  F0AB  FFE6   	movff	btemp,postinc1
 49104  014F66  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49105  014F6C  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49106  014F72  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49107  014F78  ECBC  F005         	call	_fabsf	;wreg free
 49108  014F7C  0060  F0AB  FFE6   	movff	btemp,postinc1
 49109  014F82  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49110  014F88  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49111  014F8E  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49112  014F94  0E25               	movlw	low (_C+164)
 49113  014F96  6EE6               	movwf	postinc1,c
 49114  014F98  0E0C               	movlw	high (_C+164)
 49115  014F9A  6EE6               	movwf	postinc1,c
 49116  014F9C  EC7E  F00B         	call	___asfladd	;wreg free
 49117  014FA0                     l17114:
 49118                           
 49119                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 49120  014FA0  0E00               	movlw	0
 49121  014FA2  6EE6               	movwf	postinc1,c
 49122  014FA4  0E00               	movlw	0
 49123  014FA6  6EE6               	movwf	postinc1,c
 49124  014FA8  0EC8               	movlw	200
 49125  014FAA  6EE6               	movwf	postinc1,c
 49126  014FAC  0E42               	movlw	66
 49127  014FAE  6EE6               	movwf	postinc1,c
 49128  014FB0  EE23  F00D         	lfsr	2,_C+140	;volatile
 49129  014FB4  006F FF7B FFE6     	movff	postinc2,postinc1
 49130  014FBA  006F FF7B FFE6     	movff	postinc2,postinc1
 49131  014FC0  006F FF7B FFE6     	movff	postinc2,postinc1
 49132  014FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 49133  014FCC  EE23  F01D         	lfsr	2,_C+156	;volatile
 49134  014FD0  006F FF7B FFE6     	movff	postinc2,postinc1
 49135  014FD6  006F FF7B FFE6     	movff	postinc2,postinc1
 49136  014FDC  006F FF7B FFE6     	movff	postinc2,postinc1
 49137  014FE2  006F FF7B FFE6     	movff	postinc2,postinc1
 49138  014FE8  EC64  F0C1         	call	___fldiv	;wreg free
 49139  014FEC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49140  014FF2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49141  014FF8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49142  014FFE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49143  015004  EC32  F0B3         	call	___flmul	;wreg free
 49144  015008  0060  F0AB  FFE6   	movff	btemp,postinc1
 49145  01500E  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49146  015014  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49147  01501A  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49148  015020  ECC9  F0F4         	call	___fltol	;wreg free
 49149  015024  0060  F0A8  F034   	movff	btemp,btemp+10
 49150  01502A  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49151  015030  0E01               	movlw	1
 49152  015032  2634               	addwf	(btemp+10)^0,f,c
 49153  015034  0E00               	movlw	0
 49154  015036  2235               	addwfc	(btemp+11)^0,f,c
 49155  015038  0060  F0D0  FC37   	movff	btemp+10,_C+182	;volatile
 49156  01503E  0060  F0D4  FC38   	movff	btemp+11,_C+183	;volatile
 49157                           
 49158                           ;bsoc.c: 76:  if (C.soc > 100)
 49159  015044  EE23  F037         	lfsr	2,_C+182	;volatile
 49160  015048  0E01               	movlw	1
 49161  01504A  50DB               	movf	plusw2,w,c
 49162  01504C  E104               	bnz	u1675_20
 49163  01504E  0E65               	movlw	101
 49164  015050  5CDE               	subwf	postinc2,w,c
 49165  015052  A0D8               	btfss	status,0,c
 49166  015054  D008               	goto	l17120
 49167  015056                     u1675_20:
 49168                           
 49169                           ;bsoc.c: 77:   C.soc = 100;
 49170  015056  0E64               	movlw	100
 49171  015058  006F FFA0  FC37    	movff	wreg,_C+182	;volatile
 49172  01505E  0E00               	movlw	0
 49173  015060  006F FFA0  FC38    	movff	wreg,_C+183	;volatile
 49174  015066                     l17120:
 49175                           
 49176                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 49177  015066  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49178  01506A  0E03               	movlw	3
 49179  01506C  AEDB               	btfss	plusw2,7,c
 49180  01506E  D047               	goto	l2366
 49181                           
 49182                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 49183  015070  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49184  015074  006F FF7B FFE6     	movff	postinc2,postinc1
 49185  01507A  006F FF7B FFE6     	movff	postinc2,postinc1
 49186  015080  006F FF7B FFE6     	movff	postinc2,postinc1
 49187  015086  006F FF7B FFE6     	movff	postinc2,postinc1
 49188  01508C  EE23  F01D         	lfsr	2,_C+156	;volatile
 49189  015090  006F FF7B FFE6     	movff	postinc2,postinc1
 49190  015096  006F FF7B FFE6     	movff	postinc2,postinc1
 49191  01509C  006F FF7B FFE6     	movff	postinc2,postinc1
 49192  0150A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49193  0150A8  EC64  F0C1         	call	___fldiv	;wreg free
 49194  0150AC  0060  F0AB  FFE6   	movff	btemp,postinc1
 49195  0150B2  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49196  0150B8  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49197  0150BE  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49198  0150C4  ECA4  F00F         	call	___flneg	;wreg free
 49199  0150C8  0060  F0AB  FFE6   	movff	btemp,postinc1
 49200  0150CE  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49201  0150D4  0060  F0B3  FFE6   	movff	btemp+2,postinc1
 49202  0150DA  0060  F0B7  FFE6   	movff	btemp+3,postinc1
 49203  0150E0  ECC9  F0F4         	call	___fltol	;wreg free
 49204  0150E4  0060  F0A8  F034   	movff	btemp,btemp+10
 49205  0150EA  0060  F0AC  F035   	movff	btemp+1,btemp+11
 49206  0150F0  0060  F0D0  FC35   	movff	btemp+10,_C+180	;volatile
 49207  0150F6  0060  F0D4  FC36   	movff	btemp+11,_C+181	;volatile
 49208                           
 49209                           ;bsoc.c: 81:  } else {
 49210  0150FC  D008               	goto	l17124
 49211  0150FE                     l2366:
 49212                           
 49213                           ;bsoc.c: 82:   C.runtime = 99;
 49214  0150FE  0E63               	movlw	99
 49215  015100  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
 49216  015106  0E00               	movlw	0
 49217  015108  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
 49218  01510E                     l17124:
 49219                           
 49220                           ;bsoc.c: 84:  if (C.runtime > 99)
 49221  01510E  EE23  F035         	lfsr	2,_C+180	;volatile
 49222  015112  0E01               	movlw	1
 49223  015114  50DB               	movf	plusw2,w,c
 49224  015116  E104               	bnz	u1677_20
 49225  015118  0E64               	movlw	100
 49226  01511A  5CDE               	subwf	postinc2,w,c
 49227  01511C  A0D8               	btfss	status,0,c
 49228  01511E  D008               	goto	l17128
 49229  015120                     u1677_20:
 49230                           
 49231                           ;bsoc.c: 85:   C.runtime = 99;
 49232  015120  0E63               	movlw	99
 49233  015122  006F FFA0  FC35    	movff	wreg,_C+180	;volatile
 49234  015128  0E00               	movlw	0
 49235  01512A  006F FFA0  FC36    	movff	wreg,_C+181	;volatile
 49236  015130                     l17128:
 49237                           
 49238                           ;bsoc.c: 87:  V.lowint_count++;
 49239  015130  0E01               	movlw	1
 49240  015132  0102               	movlb	2	; () banked
 49241  015134  27B4               	addwf	(_V+173)& (0+255),f,b	;volatile
 49242  015136  0E00               	movlw	0
 49243  015138  23B5               	addwfc	(_V+174)& (0+255),f,b	;volatile
 49244  01513A  23B6               	addwfc	(_V+175)& (0+255),f,b	;volatile
 49245  01513C  23B7               	addwfc	(_V+176)& (0+255),f,b	;volatile
 49246                           
 49247                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 49248  01513E  2A50               	incf	calc_bsoc@log_update_wait^0,f,c
 49249  015140  0450               	decf	calc_bsoc@log_update_wait^0,w,c
 49250  015142  A4D8               	btfss	status,2,c
 49251  015144  D177               	goto	l17140
 49252                           
 49253                           ; BSR set to: 2
 49254  015146  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 49255  015148  B4D8               	btfsc	status,2,c
 49256  01514A  D174               	goto	l17140
 49257                           
 49258                           ; BSR set to: 2
 49259                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 49260  01514C  EC78  F016         	call	_port_data_dma_ptr	;wreg free
 49261                           
 49262                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49263  015150  0EFF               	movlw	-1
 49264  015152  0060  F0AF  FFE3   	movff	btemp+1,plusw1
 49265  015158  0EFE               	movlw	-2
 49266  01515A  0060  F0AB  FFE3   	movff	btemp,plusw1
 49267                           
 49268                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 49269  015160  EE23  F052         	lfsr	2,_C+209	;volatile
 49270  015164  006F FF7B FFE6     	movff	postinc2,postinc1
 49271  01516A  006F FF7B FFE6     	movff	postinc2,postinc1
 49272  015170  006F FF7B FFE6     	movff	postinc2,postinc1
 49273  015176  006F FF7B FFE6     	movff	postinc2,postinc1
 49274  01517C  EE23  F056         	lfsr	2,_C+213	;volatile
 49275  015180  006F FF7B FFE6     	movff	postinc2,postinc1
 49276  015186  006F FF7B FFE6     	movff	postinc2,postinc1
 49277  01518C  006F FF7B FFE6     	movff	postinc2,postinc1
 49278  015192  006F FF7B FFE6     	movff	postinc2,postinc1
 49279  015198  EE23  F01D         	lfsr	2,_C+156	;volatile
 49280  01519C  006F FF7B FFE6     	movff	postinc2,postinc1
 49281  0151A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49282  0151A8  006F FF7B FFE6     	movff	postinc2,postinc1
 49283  0151AE  006F FF7B FFE6     	movff	postinc2,postinc1
 49284  0151B4  EE23  F0B5         	lfsr	2,_C+308	;volatile
 49285  0151B8  006F FF7B FFE6     	movff	postinc2,postinc1
 49286  0151BE  006F FF7B FFE6     	movff	postinc2,postinc1
 49287  0151C4  006F FF7B FFE6     	movff	postinc2,postinc1
 49288  0151CA  006F FF7B FFE6     	movff	postinc2,postinc1
 49289  0151D0  EE23  F0B1         	lfsr	2,_C+304	;volatile
 49290  0151D4  006F FF7B FFE6     	movff	postinc2,postinc1
 49291  0151DA  006F FF7B FFE6     	movff	postinc2,postinc1
 49292  0151E0  006F FF7B FFE6     	movff	postinc2,postinc1
 49293  0151E6  006F FF7B FFE6     	movff	postinc2,postinc1
 49294  0151EC  EE23  F0AF         	lfsr	2,_C+302	;volatile
 49295  0151F0  50DF               	movf	indf2,w,c
 49296  0151F2  6EE6               	movwf	postinc1,c
 49297  0151F4  0E00               	movlw	0
 49298  0151F6  6EE6               	movwf	postinc1,c
 49299  0151F8  EC5C  F016         	call	_get_ac_charger_relay	;wreg free
 49300  0151FC  502A               	movf	btemp^0,w,c
 49301  0151FE  6EE6               	movwf	postinc1,c
 49302  015200  0E00               	movlw	0
 49303  015202  6EE6               	movwf	postinc1,c
 49304  015204  EE22  F3E9         	lfsr	2,_C+104	;volatile
 49305  015208  006F FF7B FFE6     	movff	postinc2,postinc1
 49306  01520E  006F FF7B FFE6     	movff	postinc2,postinc1
 49307  015214  006F FF7B FFE6     	movff	postinc2,postinc1
 49308  01521A  006F FF7B FFE6     	movff	postinc2,postinc1
 49309  015220  EE23  F009         	lfsr	2,_C+136	;volatile
 49310  015224  006F FF7B FFE6     	movff	postinc2,postinc1
 49311  01522A  006F FF7B FFE6     	movff	postinc2,postinc1
 49312  015230  006F FF7B FFE6     	movff	postinc2,postinc1
 49313  015236  006F FF7B FFE6     	movff	postinc2,postinc1
 49314  01523C  EE23  F035         	lfsr	2,_C+180	;volatile
 49315  015240  006F FF78  F034    	movff	postinc2,btemp+10
 49316  015246  006F FF74  F035    	movff	postdec2,btemp+11
 49317  01524C  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49318  015252  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49319  015258  EE23  F037         	lfsr	2,_C+182	;volatile
 49320  01525C  006F FF78  F034    	movff	postinc2,btemp+10
 49321  015262  006F FF74  F035    	movff	postdec2,btemp+11
 49322  015268  0060  F0D3  FFE6   	movff	btemp+10,postinc1
 49323  01526E  0060  F0D7  FFE6   	movff	btemp+11,postinc1
 49324  015274  EE23  F015         	lfsr	2,_C+148	;volatile
 49325  015278  006F FF7B FFE6     	movff	postinc2,postinc1
 49326  01527E  006F FF7B FFE6     	movff	postinc2,postinc1
 49327  015284  006F FF7B FFE6     	movff	postinc2,postinc1
 49328  01528A  006F FF7B FFE6     	movff	postinc2,postinc1
 49329  015290  EE23  F011         	lfsr	2,_C+144	;volatile
 49330  015294  006F FF7B FFE6     	movff	postinc2,postinc1
 49331  01529A  006F FF7B FFE6     	movff	postinc2,postinc1
 49332  0152A0  006F FF7B FFE6     	movff	postinc2,postinc1
 49333  0152A6  006F FF7B FFE6     	movff	postinc2,postinc1
 49334  0152AC  EE22  F3F9         	lfsr	2,_C+120	;volatile
 49335  0152B0  006F FF7B FFE6     	movff	postinc2,postinc1
 49336  0152B6  006F FF7B FFE6     	movff	postinc2,postinc1
 49337  0152BC  006F FF7B FFE6     	movff	postinc2,postinc1
 49338  0152C2  006F FF7B FFE6     	movff	postinc2,postinc1
 49339  0152C8  EE22  F3F5         	lfsr	2,_C+116	;volatile
 49340  0152CC  006F FF7B FFE6     	movff	postinc2,postinc1
 49341  0152D2  006F FF7B FFE6     	movff	postinc2,postinc1
 49342  0152D8  006F FF7B FFE6     	movff	postinc2,postinc1
 49343  0152DE  006F FF7B FFE6     	movff	postinc2,postinc1
 49344  0152E4  EE22  F3FD         	lfsr	2,_C+124	;volatile
 49345  0152E8  006F FF7B FFE6     	movff	postinc2,postinc1
 49346  0152EE  006F FF7B FFE6     	movff	postinc2,postinc1
 49347  0152F4  006F FF7B FFE6     	movff	postinc2,postinc1
 49348  0152FA  006F FF7B FFE6     	movff	postinc2,postinc1
 49349  015300  EE23  F001         	lfsr	2,_C+128	;volatile
 49350  015304  006F FF7B FFE6     	movff	postinc2,postinc1
 49351  01530A  006F FF7B FFE6     	movff	postinc2,postinc1
 49352  015310  006F FF7B FFE6     	movff	postinc2,postinc1
 49353  015316  006F FF7B FFE6     	movff	postinc2,postinc1
 49354  01531C  EE22  F3C9         	lfsr	2,_C+72	;volatile
 49355  015320  006F FF7B FFE6     	movff	postinc2,postinc1
 49356  015326  006F FF7B FFE6     	movff	postinc2,postinc1
 49357  01532C  006F FF7B FFE6     	movff	postinc2,postinc1
 49358  015332  006F FF7B FFE6     	movff	postinc2,postinc1
 49359  015338  EE22  F3C5         	lfsr	2,_C+68	;volatile
 49360  01533C  006F FF7B FFE6     	movff	postinc2,postinc1
 49361  015342  006F FF7B FFE6     	movff	postinc2,postinc1
 49362  015348  006F FF7B FFE6     	movff	postinc2,postinc1
 49363  01534E  006F FF7B FFE6     	movff	postinc2,postinc1
 49364  015354  EE22  F3E5         	lfsr	2,_C+100	;volatile
 49365  015358  006F FF7B FFE6     	movff	postinc2,postinc1
 49366  01535E  006F FF7B FFE6     	movff	postinc2,postinc1
 49367  015364  006F FF7B FFE6     	movff	postinc2,postinc1
 49368  01536A  006F FF7B FFE6     	movff	postinc2,postinc1
 49369  015370  EE22  F3CD         	lfsr	2,_C+76	;volatile
 49370  015374  006F FF7B FFE6     	movff	postinc2,postinc1
 49371  01537A  006F FF7B FFE6     	movff	postinc2,postinc1
 49372  015380  006F FF7B FFE6     	movff	postinc2,postinc1
 49373  015386  006F FF7B FFE6     	movff	postinc2,postinc1
 49374  01538C  EE22  F3D1         	lfsr	2,_C+80	;volatile
 49375  015390  006F FF7B FFE6     	movff	postinc2,postinc1
 49376  015396  006F FF7B FFE6     	movff	postinc2,postinc1
 49377  01539C  006F FF7B FFE6     	movff	postinc2,postinc1
 49378  0153A2  006F FF7B FFE6     	movff	postinc2,postinc1
 49379  0153A8  EE22  F3D5         	lfsr	2,_C+84	;volatile
 49380  0153AC  006F FF7B FFE6     	movff	postinc2,postinc1
 49381  0153B2  006F FF7B FFE6     	movff	postinc2,postinc1
 49382  0153B8  006F FF7B FFE6     	movff	postinc2,postinc1
 49383  0153BE  006F FF7B FFE6     	movff	postinc2,postinc1
 49384  0153C4  0060  FA23  FFE6   	movff	_V+129,postinc1
 49385  0153CA  0060  FA27  FFE6   	movff	_V+130,postinc1
 49386  0153D0  0060  FA2B  FFE6   	movff	_V+131,postinc1
 49387  0153D6  0060  FA2F  FFE6   	movff	_V+132,postinc1
 49388  0153DC  0E32               	movlw	50
 49389  0153DE  6EE6               	movwf	postinc1,c
 49390  0153E0  0E00               	movlw	0
 49391  0153E2  6EE6               	movwf	postinc1,c
 49392  0153E4  0EF7               	movlw	low STR_95
 49393  0153E6  6EE6               	movwf	postinc1,c
 49394  0153E8  0EF9               	movlw	high STR_95
 49395  0153EA  6EE6               	movwf	postinc1,c
 49396                           
 49397                           ;stkvar	_log_ptr @ sp[(-98)+4]
 49398  0153EC  0EA2               	movlw	-94
 49399  0153EE  006F FF8F FFE6     	movff	plusw1,postinc1
 49400  0153F4  006F FF8F FFE6     	movff	plusw1,postinc1
 49401  0153FA  0E5E               	movlw	94
 49402  0153FC  6EE6               	movwf	postinc1,c
 49403  0153FE  ECE5  F0FE         	call	_sprintf	;wreg free
 49404                           
 49405                           ; BSR set to: 0
 49406                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 49407  015402  0E7D               	movlw	125
 49408  015404  6EE6               	movwf	postinc1,c
 49409  015406  0E00               	movlw	0
 49410  015408  6EE6               	movwf	postinc1,c
 49411  01540A  0E0A               	movlw	10
 49412  01540C  6EE6               	movwf	postinc1,c
 49413  01540E  EC20  F011         	call	_StartTimer	;wreg free
 49414                           
 49415                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 49416                           ;stkvar	_log_ptr @ sp[(-6)+4]
 49417  015412  0EFE               	movlw	-2
 49418  015414  006F FF8F FFE6     	movff	plusw1,postinc1
 49419  01541A  006F FF8F FFE6     	movff	plusw1,postinc1
 49420  015420  EC63  F007         	call	_strlen	;wreg free
 49421  015424  0060  F0AB  FFE6   	movff	btemp,postinc1
 49422  01542A  0060  F0AF  FFE6   	movff	btemp+1,postinc1
 49423  015430  EC2D  F00F         	call	_send_port_data_dma	;wreg free
 49424  015434                     l17140:
 49425                           
 49426                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 49427  015434  0E09               	movlw	9
 49428  015436  6450               	cpfsgt	calc_bsoc@log_update_wait^0,c
 49429  015438  D001               	goto	l2370
 49430                           
 49431                           ;bsoc.c: 102:   log_update_wait = 0;
 49432  01543A  6A50               	clrf	calc_bsoc@log_update_wait^0,c
 49433  01543C                     l2370:
 49434                           
 49435                           ;bsoc.c: 104:  C.update = 0;
 49436  01543C  0E00               	movlw	0
 49437  01543E  006F FFA0  FC39    	movff	wreg,_C+184	;volatile
 49438                           
 49439                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 49440  015444  92BE               	bcf	190,1,c	;volatile
 49441                           
 49442                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 49443  015446  0EFA               	movlw	250
 49444  015448  26E1               	addwf	fsr1l,f,c
 49445  01544A  0EFF               	movlw	255
 49446  01544C  22E2               	addwfc	fsr1h,f,c
 49447  01544E  0012               	return		;funcret
 49448  015450                     __end_of_calc_bsoc:
 49449                           	opt callstack 0
 49450                           
 49451 ;; *************** function _send_port_data_dma *****************
 49452 ;; Defined at:
 49453 ;;		line 397 in file "eadog.c"
 49454 ;; Parameters:    Size  Location     Type
 49455 ;;  dsize           2  [STACK] unsigned short 
 49456 ;; Auto vars:     Size  Location     Type
 49457 ;;		None
 49458 ;; Return value:  Size  Location     Type
 49459 ;;                  1  [STACK] void 
 49460 ;; Registers used:
 49461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 49462 ;; Tracked objects:
 49463 ;;		On entry : 0/0
 49464 ;;		On exit  : 3F/3B
 49465 ;;		Unchanged: 0/0
 49466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49471 ;;Total ram usage:        0 bytes
 49472 ;; Hardware stack levels used:    1
 49473 ;; Hardware stack levels required when called:    3
 49474 ;; This function calls:
 49475 ;;		Nothing
 49476 ;; This function is called by:
 49477 ;;		_calc_bsoc
 49478 ;; This function uses a reentrant model
 49479 ;;
 49480                           
 49481                           	psect	text201
 49482  001E5A                     __ptext201:
 49483                           	opt callstack 0
 49484  001E5A                     _send_port_data_dma:
 49485                           	opt callstack 11
 49486                           
 49487                           ;eadog.c: 397: void send_port_data_dma(uint16_t dsize);eadog.c: 398: {;eadog.c: 399:  if
      +                           (dsize > 512)
 49488                           ;stkvar	_dsize @ sp[(0)+-2]
 49489                           
 49490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49491                           ;incstack = 0
 49492  001E5A  0EFE               	movlw	-2
 49493  001E5C  04E3               	decf	plusw1,w,c
 49494  001E5E  0EFF               	movlw	-1
 49495  001E60  006F FF8C  F02A    	movff	plusw1,btemp
 49496  001E66  0E02               	movlw	2
 49497  001E68  5A2A               	subwfb	btemp^0,f,c
 49498  001E6A  A0D8               	btfss	status,0,c
 49499  001E6C  D00C               	goto	l12924
 49500                           
 49501                           ;eadog.c: 400:   dsize = 512;
 49502  001E6E  0E00               	movlw	0
 49503  001E70  6E34               	movwf	(btemp+10)^0,c
 49504  001E72  0E02               	movlw	2
 49505  001E74  6E35               	movwf	(btemp+11)^0,c
 49506                           
 49507                           ;stkvar	_dsize @ sp[(0)+-2]
 49508  001E76  0EFE               	movlw	-2
 49509  001E78  0060  F0D3  FFE3   	movff	btemp+10,plusw1
 49510  001E7E  0EFF               	movlw	-1
 49511  001E80  0060  F0D7  FFE3   	movff	btemp+11,plusw1
 49512  001E86                     l12924:
 49513                           
 49514                           ;eadog.c: 402:  DMA2CON0bits.EN = 0;
 49515  001E86  013B               	movlb	59	; () banked
 49516  001E88  9FDC               	bcf	220,7,b	;volatile
 49517                           
 49518                           ; BSR set to: 59
 49519                           ;eadog.c: 403:  DMA2SSZ = dsize;
 49520                           ;stkvar	_dsize @ sp[(0)+-2]
 49521  001E8A  0EFE               	movlw	-2
 49522  001E8C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 49523  001E92  0EFF               	movlw	-1
 49524  001E94  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 49525                           
 49526                           ; BSR set to: 59
 49527                           ;eadog.c: 404:  DMA2DSZ = 1;
 49528  001E9A  0E00               	movlw	0
 49529  001E9C  6FCF               	movwf	207,b	;volatile
 49530  001E9E  0E01               	movlw	1
 49531  001EA0  6FCE               	movwf	206,b	;volatile
 49532                           
 49533                           ; BSR set to: 59
 49534                           ;eadog.c: 405:  DMA2CON0bits.EN = 1;
 49535  001EA2  8FDC               	bsf	220,7,b	;volatile
 49536                           
 49537                           ; BSR set to: 59
 49538                           ;eadog.c: 406:  DMA2CON0bits.DMA2SIRQEN = 1;
 49539  001EA4  8DDC               	bsf	220,6,b	;volatile
 49540                           
 49541                           ; BSR set to: 59
 49542                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 49543  001EA6  52E5               	movf	postdec1,f,c
 49544  001EA8  52E5               	movf	postdec1,f,c
 49545  001EAA  0012               	return		;funcret
 49546  001EAC                     __end_of_send_port_data_dma:
 49547                           	opt callstack 0
 49548                           
 49549 ;; *************** function _port_data_dma_ptr *****************
 49550 ;; Defined at:
 49551 ;;		line 412 in file "eadog.c"
 49552 ;; Parameters:    Size  Location     Type
 49553 ;;		None
 49554 ;; Auto vars:     Size  Location     Type
 49555 ;;		None
 49556 ;; Return value:  Size  Location     Type
 49557 ;;                  2  [STACK] PTR unsigned char 
 49558 ;; Registers used:
 49559 ;;		wreg, status,2, status,0, btemp, btemp+1
 49560 ;; Tracked objects:
 49561 ;;		On entry : 3F/2
 49562 ;;		On exit  : 0/0
 49563 ;;		Unchanged: 0/0
 49564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49569 ;;Total ram usage:        0 bytes
 49570 ;; Hardware stack levels used:    1
 49571 ;; Hardware stack levels required when called:    3
 49572 ;; This function calls:
 49573 ;;		Nothing
 49574 ;; This function is called by:
 49575 ;;		_calc_bsoc
 49576 ;; This function uses a reentrant model
 49577 ;;
 49578                           
 49579                           	psect	text202
 49580  002CF0                     __ptext202:
 49581                           	opt callstack 0
 49582  002CF0                     _port_data_dma_ptr:
 49583                           	opt callstack 11
 49584                           
 49585                           ;eadog.c: 414:  return port_data;
 49586                           
 49587                           ; BSR set to: 59
 49588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49589                           ;incstack = 0
 49590  002CF0  0E81               	movlw	low _port_data
 49591  002CF2  6E2A               	movwf	btemp^0,c
 49592  002CF4  0E09               	movlw	high _port_data
 49593  002CF6  6E2B               	movwf	(btemp+1)^0,c
 49594                           
 49595                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49596  002CF8  0012               	return		;funcret
 49597  002CFA                     __end_of_port_data_dma_ptr:
 49598                           	opt callstack 0
 49599                           
 49600 ;; *************** function ___asfladd *****************
 49601 ;; Defined at:
 49602 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 49603 ;; Parameters:    Size  Location     Type
 49604 ;;  f1p             2  [STACK] PTR 
 49605 ;;		 -> C(320), 
 49606 ;;  f2              4  [STACK] PTR 
 49607 ;; Auto vars:     Size  Location     Type
 49608 ;;		None
 49609 ;; Return value:  Size  Location     Type
 49610 ;;                  4  [STACK] PTR 
 49611 ;; Registers used:
 49612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 49613 ;; Tracked objects:
 49614 ;;		On entry : 0/0
 49615 ;;		On exit  : 0/0
 49616 ;;		Unchanged: 0/0
 49617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49622 ;;Total ram usage:        0 bytes
 49623 ;; Hardware stack levels used:    1
 49624 ;; Hardware stack levels required when called:    4
 49625 ;; This function calls:
 49626 ;;		___fladd
 49627 ;; This function is called by:
 49628 ;;		_calc_bsoc
 49629 ;; This function uses a reentrant model
 49630 ;;
 49631                           
 49632                           	psect	text203
 49633  0016FC                     __ptext203:
 49634                           	opt callstack 0
 49635  0016FC                     ___asfladd:
 49636                           	opt callstack 10
 49637                           
 49638                           ;	Return value of ___asfladd is never used
 49639                           ;stkvar	_f2 @ sp[(0)+-6]
 49640                           
 49641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49642                           ;incstack = 0
 49643  0016FC  0EFA               	movlw	-6
 49644  0016FE  006F FF8F FFE6     	movff	plusw1,postinc1
 49645  001704  006F FF8F FFE6     	movff	plusw1,postinc1
 49646  00170A  006F FF8F FFE6     	movff	plusw1,postinc1
 49647  001710  006F FF8F FFE6     	movff	plusw1,postinc1
 49648                           
 49649                           ;stkvar	_f1p @ sp[(-4)+-2]
 49650  001716  0EFA               	movlw	-6
 49651  001718  006F FF8F FFD9     	movff	plusw1,fsr2l
 49652  00171E  0EFB               	movlw	-5
 49653  001720  006F FF8F FFDA     	movff	plusw1,fsr2h
 49654  001726  006F FF7B FFE6     	movff	postinc2,postinc1
 49655  00172C  006F FF7B FFE6     	movff	postinc2,postinc1
 49656  001732  006F FF7B FFE6     	movff	postinc2,postinc1
 49657  001738  006F FF7B FFE6     	movff	postinc2,postinc1
 49658  00173E  EC47  F0B7         	call	___fladd	;wreg free
 49659                           
 49660                           ;stkvar	_f1p @ sp[(0)+-2]
 49661  001742  0EFE               	movlw	-2
 49662  001744  006F FF8F FFD9     	movff	plusw1,fsr2l
 49663  00174A  0EFF               	movlw	-1
 49664  00174C  006F FF8F FFDA     	movff	plusw1,fsr2h
 49665  001752  0060  F0AB  FFDE   	movff	btemp,postinc2
 49666  001758  0060  F0AF  FFDE   	movff	btemp+1,postinc2
 49667  00175E  0060  F0B3  FFDE   	movff	btemp+2,postinc2
 49668  001764  0060  F0B7  FFDE   	movff	btemp+3,postinc2
 49669                           
 49670                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 49671  00176A  0EFA               	movlw	250
 49672  00176C  26E1               	addwf	fsr1l,f,c
 49673  00176E  0EFF               	movlw	255
 49674  001770  22E2               	addwfc	fsr1h,f,c
 49675  001772  0012               	return		;funcret
 49676  001774                     __end_of___asfladd:
 49677                           	opt callstack 0
 49678                           
 49679 ;; *************** function _INT0_ISR *****************
 49680 ;; Defined at:
 49681 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 49682 ;; Parameters:    Size  Location     Type
 49683 ;;		None
 49684 ;; Auto vars:     Size  Location     Type
 49685 ;;		None
 49686 ;; Return value:  Size  Location     Type
 49687 ;;                  1    wreg      void 
 49688 ;; Registers used:
 49689 ;;		wreg, status,2, status,0, pclath, tosl
 49690 ;; Tracked objects:
 49691 ;;		On entry : 0/0
 49692 ;;		On exit  : 0/0
 49693 ;;		Unchanged: 0/0
 49694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49699 ;;Total ram usage:        0 bytes
 49700 ;; Hardware stack levels used:    1
 49701 ;; Hardware stack levels required when called:    2
 49702 ;; This function calls:
 49703 ;;		_INT0_CallBack
 49704 ;; This function is called by:
 49705 ;;		Interrupt level 2
 49706 ;; This function uses a non-reentrant model
 49707 ;;
 49708                           
 49709                           	psect	text204
 49710  002CC8                     __ptext204:
 49711                           	opt callstack 0
 49712  002CC8                     _INT0_ISR:
 49713                           	opt callstack 3
 49714                           
 49715                           ;incstack = 0
 49716  002CC8  EE14  F32C         	lfsr	1,___inthi_sp
 49717                           
 49718                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 49719  002CCC  0139               	movlb	57	; () banked
 49720  002CCE  91A1               	bcf	161,0,b	;volatile
 49721                           
 49722                           ; BSR set to: 57
 49723                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 49724  002CD0  ECF2  F014         	call	_INT0_CallBack	;wreg free
 49725  002CD4  0011               	retfie		f
 49726  002CD6                     __end_of_INT0_ISR:
 49727                           	opt callstack 0
 49728                           
 49729 ;; *************** function _INT0_CallBack *****************
 49730 ;; Defined at:
 49731 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 49732 ;; Parameters:    Size  Location     Type
 49733 ;;		None
 49734 ;; Auto vars:     Size  Location     Type
 49735 ;;		None
 49736 ;; Return value:  Size  Location     Type
 49737 ;;                  1  [STACK] void 
 49738 ;; Registers used:
 49739 ;;		wreg, status,2, status,0, pclath, tosl
 49740 ;; Tracked objects:
 49741 ;;		On entry : 3F/39
 49742 ;;		On exit  : 0/0
 49743 ;;		Unchanged: 0/0
 49744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49749 ;;Total ram usage:        0 bytes
 49750 ;; Hardware stack levels used:    1
 49751 ;; Hardware stack levels required when called:    1
 49752 ;; This function calls:
 49753 ;;		Absolute function
 49754 ;;		_INT0_DefaultInterruptHandler
 49755 ;; This function is called by:
 49756 ;;		_INT0_ISR
 49757 ;; This function uses a reentrant model
 49758 ;;
 49759                           
 49760                           	psect	text205
 49761  0029E4                     __ptext205:
 49762                           	opt callstack 0
 49763  0029E4                     _INT0_CallBack:
 49764                           	opt callstack 3
 49765                           
 49766                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 49767                           
 49768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49769                           ;incstack = 0
 49770  0029E4  0100               	movlb	0	; () banked
 49771  0029E6  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49772  0029E8  11B4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49773  0029EA  11B5               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49774  0029EC  B4D8               	btfsc	status,2,c
 49775  0029EE  0012               	return	
 49776                           
 49777                           ; BSR set to: 0
 49778                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 49779  0029F0  D801               	call	u1313_48
 49780  0029F2  0012               	return	
 49781  0029F4                     u1313_48:
 49782  0029F4  0005               	push	
 49783  0029F6  6EFA               	movwf	pclath,c
 49784  0029F8  51B3               	movf	_INT0_InterruptHandler& (0+255),w,b
 49785  0029FA  6EFD               	movwf	tosl,c
 49786  0029FC  51B4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 49787  0029FE  6EFE               	movwf	tosh,c
 49788  002A00  51B5               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 49789  002A02  6EFF               	movwf	tosu,c
 49790  002A04  50FA               	movf	pclath,w,c
 49791  002A06  0012               	return		;indir
 49792  002A08                     __end_of_INT0_CallBack:
 49793                           	opt callstack 0
 49794                           
 49795 ;; *************** function _INT0_DefaultInterruptHandler *****************
 49796 ;; Defined at:
 49797 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 49798 ;; Parameters:    Size  Location     Type
 49799 ;;		None
 49800 ;; Auto vars:     Size  Location     Type
 49801 ;;		None
 49802 ;; Return value:  Size  Location     Type
 49803 ;;                  1  [STACK] void 
 49804 ;; Registers used:
 49805 ;;		None
 49806 ;; Tracked objects:
 49807 ;;		On entry : 3F/0
 49808 ;;		On exit  : 0/0
 49809 ;;		Unchanged: 0/0
 49810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49815 ;;Total ram usage:        0 bytes
 49816 ;; Hardware stack levels used:    1
 49817 ;; This function calls:
 49818 ;;		Nothing
 49819 ;; This function is called by:
 49820 ;;		_EXT_INT_Initialize
 49821 ;;		_INT0_CallBack
 49822 ;; This function uses a reentrant model
 49823 ;;
 49824                           
 49825                           	psect	text206
 49826  002D76                     __ptext206:
 49827                           	opt callstack 0
 49828  002D76                     _INT0_DefaultInterruptHandler:
 49829                           	opt callstack 3
 49830                           
 49831                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49832                           
 49833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49834                           ;incstack = 0
 49835  002D76  0012               	return		;funcret
 49836  002D78                     __end_of_INT0_DefaultInterruptHandler:
 49837                           	opt callstack 0
 49838                           
 49839 ;; *************** function _Default_ISR *****************
 49840 ;; Defined at:
 49841 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 49842 ;; Parameters:    Size  Location     Type
 49843 ;;		None
 49844 ;; Auto vars:     Size  Location     Type
 49845 ;;		None
 49846 ;; Return value:  Size  Location     Type
 49847 ;;                  1    wreg      void 
 49848 ;; Registers used:
 49849 ;;		None
 49850 ;; Tracked objects:
 49851 ;;		On entry : 0/0
 49852 ;;		On exit  : 0/0
 49853 ;;		Unchanged: 0/0
 49854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49859 ;;Total ram usage:        0 bytes
 49860 ;; Hardware stack levels used:    1
 49861 ;; This function calls:
 49862 ;;		Nothing
 49863 ;; This function is called by:
 49864 ;;		Interrupt level 2
 49865 ;; This function uses a non-reentrant model
 49866 ;;
 49867                           
 49868                           	psect	text207
 49869  002D6C                     __ptext207:
 49870                           	opt callstack 0
 49871  002D6C                     _Default_ISR:
 49872                           	opt callstack 5
 49873                           
 49874                           ;incstack = 0
 49875  002D6C  EE14  F32C         	lfsr	1,___inthi_sp
 49876  002D70  0011               	retfie		f
 49877  002D72                     __end_of_Default_ISR:
 49878                           	opt callstack 0
 49879                           
 49880 ;; *************** function _ADCC_ISR *****************
 49881 ;; Defined at:
 49882 ;;		line 314 in file "mcc_generated_files/adcc.c"
 49883 ;; Parameters:    Size  Location     Type
 49884 ;;		None
 49885 ;; Auto vars:     Size  Location     Type
 49886 ;;		None
 49887 ;; Return value:  Size  Location     Type
 49888 ;;                  1    wreg      void 
 49889 ;; Registers used:
 49890 ;;		wreg, status,2, status,0, pclath, tosl
 49891 ;; Tracked objects:
 49892 ;;		On entry : 0/0
 49893 ;;		On exit  : 0/0
 49894 ;;		Unchanged: 0/0
 49895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49900 ;;Total ram usage:        0 bytes
 49901 ;; Hardware stack levels used:    1
 49902 ;; Hardware stack levels required when called:    1
 49903 ;; This function calls:
 49904 ;;		Absolute function
 49905 ;;		_ADCC_DefaultInterruptHandler
 49906 ;;		_adc_int_handler
 49907 ;; This function is called by:
 49908 ;;		Interrupt level 2
 49909 ;; This function uses a non-reentrant model
 49910 ;;
 49911                           
 49912                           	psect	text208
 49913  002678                     __ptext208:
 49914                           	opt callstack 0
 49915  002678                     _ADCC_ISR:
 49916                           	opt callstack 4
 49917                           
 49918                           ;incstack = 0
 49919  002678  EE14  F32C         	lfsr	1,___inthi_sp
 49920                           
 49921                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 49922  00267C  0139               	movlb	57	; () banked
 49923  00267E  95A1               	bcf	161,2,b	;volatile
 49924                           
 49925                           ; BSR set to: 57
 49926                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 49927  002680  0100               	movlb	0	; () banked
 49928  002682  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49929  002684  11A5               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49930  002686  11A6               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49931  002688  B4D8               	btfsc	status,2,c
 49932  00268A  0011               	retfie		f
 49933                           
 49934                           ; BSR set to: 0
 49935                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 49936  00268C  D801               	call	i2u1380_48
 49937  00268E  0011               	retfie		f
 49938  002690                     i2u1380_48:
 49939  002690  0005               	push	
 49940  002692  6EFA               	movwf	pclath,c
 49941  002694  51A4               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 49942  002696  6EFD               	movwf	tosl,c
 49943  002698  51A5               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 49944  00269A  6EFE               	movwf	tosh,c
 49945  00269C  51A6               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 49946  00269E  6EFF               	movwf	tosu,c
 49947  0026A0  50FA               	movf	pclath,w,c
 49948  0026A2  0012               	return		;indir
 49949  0026A4                     __end_of_ADCC_ISR:
 49950                           	opt callstack 0
 49951                           
 49952 ;; *************** function _adc_int_t_handler *****************
 49953 ;; Defined at:
 49954 ;;		line 183 in file "daq.c"
 49955 ;; Parameters:    Size  Location     Type
 49956 ;;		None
 49957 ;; Auto vars:     Size  Location     Type
 49958 ;;		None
 49959 ;; Return value:  Size  Location     Type
 49960 ;;                  1  [STACK] void 
 49961 ;; Registers used:
 49962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 49963 ;; Tracked objects:
 49964 ;;		On entry : 3F/0
 49965 ;;		On exit  : 0/0
 49966 ;;		Unchanged: 0/0
 49967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49972 ;;Total ram usage:        0 bytes
 49973 ;; Hardware stack levels used:    1
 49974 ;; Hardware stack levels required when called:    1
 49975 ;; This function calls:
 49976 ;;		_ADCC_DischargeSampleCapacitor
 49977 ;;		_ADCC_StartConversion
 49978 ;; This function is called by:
 49979 ;;		_start_adc_scan
 49980 ;;		_ADCC_ThresholdISR
 49981 ;; This function uses a reentrant model
 49982 ;;
 49983                           
 49984                           	psect	text209
 49985  001504                     __ptext209:
 49986                           	opt callstack 0
 49987  001504                     _adc_int_t_handler:
 49988                           	opt callstack 3
 49989                           
 49990                           ;daq.c: 188:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 49991                           
 49992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49993                           ;incstack = 0
 49994  001504  013E               	movlb	62	; () banked
 49995  001506  51E6               	movf	230,w,b	;volatile
 49996  001508  006F FB9C  F02A    	movff	16103,btemp	;volatile
 49997  00150E  6A2B               	clrf	(btemp+1)^0,c
 49998  001510  0060  F0A8  F02B   	movff	btemp,btemp+1
 49999  001516  6A2A               	clrf	btemp^0,c
 50000  001518  262A               	addwf	btemp^0,f,c
 50001  00151A  0E00               	movlw	0
 50002  00151C  222B               	addwfc	(btemp+1)^0,f,c
 50003  00151E  0101               	movlb	1	; () banked
 50004  001520  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50005  001522  0D02               	mullw	2
 50006  001524  0E00               	movlw	low _R
 50007  001526  24F3               	addwf	243,w,c
 50008  001528  6ED9               	movwf	fsr2l,c
 50009  00152A  0E01               	movlw	high _R
 50010  00152C  20F4               	addwfc	prodh,w,c
 50011  00152E  6EDA               	movwf	fsr2h,c
 50012  001530  0060  F0AB  FFDE   	movff	btemp,postinc2
 50013  001536  0060  F0AF  FFDD   	movff	btemp+1,postdec2
 50014  00153C                     l14632:
 50015                           
 50016                           ;daq.c: 190:   if (++R.scan_index > 0XD) {
 50017  00153C  0101               	movlb	1	; () banked
 50018  00153E  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 50019  001540  0E0D               	movlw	13
 50020  001542  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 50021  001544  D003               	goto	l14638
 50022                           
 50023                           ; BSR set to: 1
 50024                           ;daq.c: 191:    R.done = 1;
 50025  001546  0E01               	movlw	1
 50026  001548  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 50027  00154A  0012               	return	
 50028  00154C                     l14638:
 50029                           
 50030                           ; BSR set to: 1
 50031                           ;daq.c: 197:  } while (!((R.scan_select >> R.scan_index) &0x1));
 50032  00154C  0060  F4C8  F035   	movff	_R+50,btemp+11	;volatile
 50033  001552  EE20  F133         	lfsr	2,_R+51	;volatile
 50034  001556  006F FF78  F032    	movff	postinc2,btemp+8
 50035  00155C  006F FF74  F033    	movff	postdec2,btemp+9
 50036  001562  2A35               	incf	(btemp+11)^0,f,c
 50037  001564  D003               	goto	u1377_44
 50038  001566                     u1377_45:
 50039  001566  90D8               	bcf	status,0,c
 50040  001568  3233               	rrcf	(btemp+9)^0,f,c
 50041  00156A  3232               	rrcf	(btemp+8)^0,f,c
 50042  00156C                     u1377_44:
 50043  00156C  2E35               	decfsz	(btemp+11)^0,f,c
 50044  00156E  D7FB               	goto	u1377_45
 50045  001570  A032               	btfss	(btemp+8)^0,0,c
 50046  001572  D7E4               	goto	l14632
 50047                           
 50048                           ;daq.c: 198:  ADCC_DischargeSampleCapacitor();
 50049  001574  EC93  F016         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 50050                           
 50051                           ; BSR set to: 62
 50052                           ;daq.c: 199:  ADCC_StartConversion(R.scan_index & 0xf);
 50053  001578  0101               	movlb	1	; () banked
 50054  00157A  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 50055  00157C  0B0F               	andlw	15
 50056  00157E  6EE6               	movwf	postinc1,c
 50057  001580  EC16  F016         	call	_ADCC_StartConversion	;wreg free
 50058                           
 50059                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50060  001584  0012               	return		;funcret
 50061  001586                     __end_of_adc_int_t_handler:
 50062                           	opt callstack 0
 50063                           
 50064 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 50065 ;; Defined at:
 50066 ;;		line 339 in file "mcc_generated_files/adcc.c"
 50067 ;; Parameters:    Size  Location     Type
 50068 ;;		None
 50069 ;; Auto vars:     Size  Location     Type
 50070 ;;		None
 50071 ;; Return value:  Size  Location     Type
 50072 ;;                  1  [STACK] void 
 50073 ;; Registers used:
 50074 ;;		None
 50075 ;; Tracked objects:
 50076 ;;		On entry : 3F/0
 50077 ;;		On exit  : 0/0
 50078 ;;		Unchanged: 0/0
 50079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50084 ;;Total ram usage:        0 bytes
 50085 ;; Hardware stack levels used:    1
 50086 ;; This function calls:
 50087 ;;		Nothing
 50088 ;; This function is called by:
 50089 ;;		_ADCC_Initialize
 50090 ;;		_ADCC_ISR
 50091 ;;		_ADCC_ThresholdISR
 50092 ;; This function uses a reentrant model
 50093 ;;
 50094                           
 50095                           	psect	text210
 50096  002D78                     __ptext210:
 50097                           	opt callstack 0
 50098  002D78                     _ADCC_DefaultInterruptHandler:
 50099                           	opt callstack 4
 50100                           
 50101                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50102                           
 50103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50104                           ;incstack = 0
 50105  002D78  0012               	return		;funcret
 50106  002D7A                     __end_of_ADCC_DefaultInterruptHandler:
 50107                           	opt callstack 0
 50108                           
 50109 ;; *************** function _adc_int_handler *****************
 50110 ;; Defined at:
 50111 ;;		line 173 in file "daq.c"
 50112 ;; Parameters:    Size  Location     Type
 50113 ;;		None
 50114 ;; Auto vars:     Size  Location     Type
 50115 ;;		None
 50116 ;; Return value:  Size  Location     Type
 50117 ;;                  1  [STACK] void 
 50118 ;; Registers used:
 50119 ;;		None
 50120 ;; Tracked objects:
 50121 ;;		On entry : 3F/0
 50122 ;;		On exit  : 0/0
 50123 ;;		Unchanged: 0/0
 50124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50129 ;;Total ram usage:        0 bytes
 50130 ;; Hardware stack levels used:    1
 50131 ;; This function calls:
 50132 ;;		Nothing
 50133 ;; This function is called by:
 50134 ;;		_start_adc_scan
 50135 ;;		_ADCC_ISR
 50136 ;; This function uses a reentrant model
 50137 ;;
 50138                           
 50139                           	psect	text211
 50140  002D7A                     __ptext211:
 50141                           	opt callstack 0
 50142  002D7A                     _adc_int_handler:
 50143                           	opt callstack 4
 50144                           
 50145                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 50146                           
 50147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50148                           ;incstack = 0
 50149  002D7A  0012               	return		;funcret
 50150  002D7C                     __end_of_adc_int_handler:
 50151                           	opt callstack 0
 50152                           
 50153 ;; *************** function _ADCC_ThresholdISR *****************
 50154 ;; Defined at:
 50155 ;;		line 327 in file "mcc_generated_files/adcc.c"
 50156 ;; Parameters:    Size  Location     Type
 50157 ;;		None
 50158 ;; Auto vars:     Size  Location     Type
 50159 ;;		None
 50160 ;; Return value:  Size  Location     Type
 50161 ;;                  1    wreg      void 
 50162 ;; Registers used:
 50163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 50164 ;; Tracked objects:
 50165 ;;		On entry : 0/0
 50166 ;;		On exit  : 0/0
 50167 ;;		Unchanged: 0/0
 50168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50171 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50172 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50173 ;;Total ram usage:        5 bytes
 50174 ;; Hardware stack levels used:    1
 50175 ;; Hardware stack levels required when called:    2
 50176 ;; This function calls:
 50177 ;;		Absolute function
 50178 ;;		_ADCC_DefaultInterruptHandler
 50179 ;;		_adc_int_t_handler
 50180 ;; This function is called by:
 50181 ;;		Interrupt level 2
 50182 ;; This function uses a non-reentrant model
 50183 ;;
 50184                           
 50185                           	psect	text212
 50186  0018BC                     __ptext212:
 50187                           	opt callstack 0
 50188  0018BC                     _ADCC_ThresholdISR:
 50189                           	opt callstack 3
 50190                           
 50191                           ;incstack = 0
 50192  0018BC  0060  F0A8  F001   	movff	btemp,??_ADCC_ThresholdISR
 50193  0018C2  0060  F0AC  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 50194  0018C8  0060  F0C8  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 50195  0018CE  0060  F0CC  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 50196  0018D4  0060  F0D4  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 50197  0018DA  EE14  F32C         	lfsr	1,___inthi_sp
 50198                           
 50199                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 50200  0018DE  0139               	movlb	57	; () banked
 50201  0018E0  97A1               	bcf	161,3,b	;volatile
 50202                           
 50203                           ; BSR set to: 57
 50204                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 50205  0018E2  0100               	movlb	0	; () banked
 50206  0018E4  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50207  0018E6  11A2               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50208  0018E8  11A3               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50209  0018EA  B4D8               	btfsc	status,2,c
 50210  0018EC  D00C               	goto	i2u1382_49
 50211                           
 50212                           ; BSR set to: 0
 50213                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 50214  0018EE  D801               	call	i2u1382_48
 50215  0018F0  D00A               	goto	i2u1382_49
 50216  0018F2                     i2u1382_48:
 50217  0018F2  0005               	push	
 50218  0018F4  6EFA               	movwf	pclath,c
 50219  0018F6  51A1               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 50220  0018F8  6EFD               	movwf	tosl,c
 50221  0018FA  51A2               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 50222  0018FC  6EFE               	movwf	tosh,c
 50223  0018FE  51A3               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 50224  001900  6EFF               	movwf	tosu,c
 50225  001902  50FA               	movf	pclath,w,c
 50226  001904  0012               	return		;indir
 50227  001906                     i2u1382_49:
 50228  001906  0060  F014  F035   	movff	??_ADCC_ThresholdISR+4,btemp+11
 50229  00190C  0060  F010  F033   	movff	??_ADCC_ThresholdISR+3,btemp+9
 50230  001912  0060  F00C  F032   	movff	??_ADCC_ThresholdISR+2,btemp+8
 50231  001918  0060  F008  F02B   	movff	??_ADCC_ThresholdISR+1,btemp+1
 50232  00191E  0060  F004  F02A   	movff	??_ADCC_ThresholdISR,btemp
 50233  001924  0011               	retfie		f
 50234  001926                     __end_of_ADCC_ThresholdISR:
 50235                           	opt callstack 0
 50236                           
 50237 ;; *************** function _UART1_rx_vect_isr *****************
 50238 ;; Defined at:
 50239 ;;		line 181 in file "mcc_generated_files/uart1.c"
 50240 ;; Parameters:    Size  Location     Type
 50241 ;;		None
 50242 ;; Auto vars:     Size  Location     Type
 50243 ;;		None
 50244 ;; Return value:  Size  Location     Type
 50245 ;;                  1    wreg      void 
 50246 ;; Registers used:
 50247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50248 ;; Tracked objects:
 50249 ;;		On entry : 0/0
 50250 ;;		On exit  : 0/0
 50251 ;;		Unchanged: 0/0
 50252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50257 ;;Total ram usage:        0 bytes
 50258 ;; Hardware stack levels used:    1
 50259 ;; Hardware stack levels required when called:    1
 50260 ;; This function calls:
 50261 ;;		Absolute function
 50262 ;;		_UART1_Receive_ISR
 50263 ;; This function is called by:
 50264 ;;		Interrupt level 2
 50265 ;; This function uses a non-reentrant model
 50266 ;;
 50267                           
 50268                           	psect	text213
 50269  0028DC                     __ptext213:
 50270                           	opt callstack 0
 50271  0028DC                     _UART1_rx_vect_isr:
 50272                           	opt callstack 4
 50273                           
 50274                           ;incstack = 0
 50275  0028DC  EE14  F32C         	lfsr	1,___inthi_sp
 50276                           
 50277                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 50278  0028E0  0100               	movlb	0	; () banked
 50279  0028E2  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50280  0028E4  11A8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50281  0028E6  11A9               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50282  0028E8  B4D8               	btfsc	status,2,c
 50283  0028EA  0011               	retfie		f
 50284                           
 50285                           ; BSR set to: 0
 50286                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 50287  0028EC  D801               	call	i2u1384_48
 50288  0028EE  0011               	retfie		f
 50289  0028F0                     i2u1384_48:
 50290  0028F0  0005               	push	
 50291  0028F2  6EFA               	movwf	pclath,c
 50292  0028F4  51A7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 50293  0028F6  6EFD               	movwf	tosl,c
 50294  0028F8  51A8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 50295  0028FA  6EFE               	movwf	tosh,c
 50296  0028FC  51A9               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 50297  0028FE  6EFF               	movwf	tosu,c
 50298  002900  50FA               	movf	pclath,w,c
 50299  002902  0012               	return		;indir
 50300  002904                     __end_of_UART1_rx_vect_isr:
 50301                           	opt callstack 0
 50302                           
 50303 ;; *************** function _UART1_Receive_ISR *****************
 50304 ;; Defined at:
 50305 ;;		line 192 in file "mcc_generated_files/uart1.c"
 50306 ;; Parameters:    Size  Location     Type
 50307 ;;		None
 50308 ;; Auto vars:     Size  Location     Type
 50309 ;;		None
 50310 ;; Return value:  Size  Location     Type
 50311 ;;                  1  [STACK] void 
 50312 ;; Registers used:
 50313 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50314 ;; Tracked objects:
 50315 ;;		On entry : 3F/0
 50316 ;;		On exit  : 3F/0
 50317 ;;		Unchanged: 0/0
 50318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50323 ;;Total ram usage:        0 bytes
 50324 ;; Hardware stack levels used:    1
 50325 ;; This function calls:
 50326 ;;		Nothing
 50327 ;; This function is called by:
 50328 ;;		_UART1_Initialize
 50329 ;;		_UART1_rx_vect_isr
 50330 ;; This function uses a reentrant model
 50331 ;;
 50332                           
 50333                           	psect	text214
 50334  002A70                     __ptext214:
 50335                           	opt callstack 0
 50336  002A70                     _UART1_Receive_ISR:
 50337                           	opt callstack 4
 50338                           
 50339                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 50340                           
 50341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50342                           ;incstack = 0
 50343  002A70  0ED6               	movlw	low _uart1RxBuffer
 50344  002A72  2457               	addwf	_uart1RxHead^0,w,c	;volatile
 50345  002A74  6ED9               	movwf	fsr2l,c
 50346  002A76  6ADA               	clrf	fsr2h,c
 50347  002A78  0E02               	movlw	high _uart1RxBuffer
 50348  002A7A  22DA               	addwfc	fsr2h,f,c
 50349  002A7C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 50350  002A82  2A57               	incf	_uart1RxHead^0,f,c	;volatile
 50351                           
 50352                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 50353  002A84  0E07               	movlw	7
 50354  002A86  6457               	cpfsgt	_uart1RxHead^0,c
 50355  002A88  D001               	goto	l13940
 50356                           
 50357                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 50358  002A8A  6A57               	clrf	_uart1RxHead^0,c	;volatile
 50359  002A8C                     l13940:
 50360                           
 50361                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 50362  002A8C  0100               	movlb	0	; () banked
 50363  002A8E  2BD0               	incf	_uart1RxCount& (0+255),f,b	;volatile
 50364                           
 50365                           ; BSR set to: 0
 50366                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50367  002A90  0012               	return		;funcret
 50368  002A92                     __end_of_UART1_Receive_ISR:
 50369                           	opt callstack 0
 50370                           
 50371 ;; *************** function _UART2_tx_vect_isr *****************
 50372 ;; Defined at:
 50373 ;;		line 195 in file "mcc_generated_files/uart2.c"
 50374 ;; Parameters:    Size  Location     Type
 50375 ;;		None
 50376 ;; Auto vars:     Size  Location     Type
 50377 ;;		None
 50378 ;; Return value:  Size  Location     Type
 50379 ;;                  1    wreg      void 
 50380 ;; Registers used:
 50381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50382 ;; Tracked objects:
 50383 ;;		On entry : 0/0
 50384 ;;		On exit  : 0/0
 50385 ;;		Unchanged: 0/0
 50386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50391 ;;Total ram usage:        0 bytes
 50392 ;; Hardware stack levels used:    1
 50393 ;; Hardware stack levels required when called:    1
 50394 ;; This function calls:
 50395 ;;		Absolute function
 50396 ;;		_UART2_Transmit_ISR
 50397 ;; This function is called by:
 50398 ;;		Interrupt level 2
 50399 ;; This function uses a non-reentrant model
 50400 ;;
 50401                           
 50402                           	psect	text215
 50403  002904                     __ptext215:
 50404                           	opt callstack 0
 50405  002904                     _UART2_tx_vect_isr:
 50406                           	opt callstack 4
 50407                           
 50408                           ; BSR set to: 0
 50409                           ;incstack = 0
 50410  002904  EE14  F32C         	lfsr	1,___inthi_sp
 50411                           
 50412                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 50413  002908  0100               	movlb	0	; () banked
 50414  00290A  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50415  00290C  11AB               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50416  00290E  11AC               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50417  002910  B4D8               	btfsc	status,2,c
 50418  002912  0011               	retfie		f
 50419                           
 50420                           ; BSR set to: 0
 50421                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 50422  002914  D801               	call	i2u1386_48
 50423  002916  0011               	retfie		f
 50424  002918                     i2u1386_48:
 50425  002918  0005               	push	
 50426  00291A  6EFA               	movwf	pclath,c
 50427  00291C  51AA               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 50428  00291E  6EFD               	movwf	tosl,c
 50429  002920  51AB               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 50430  002922  6EFE               	movwf	tosh,c
 50431  002924  51AC               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 50432  002926  6EFF               	movwf	tosu,c
 50433  002928  50FA               	movf	pclath,w,c
 50434  00292A  0012               	return		;indir
 50435  00292C                     __end_of_UART2_tx_vect_isr:
 50436                           	opt callstack 0
 50437                           
 50438 ;; *************** function _UART2_Transmit_ISR *****************
 50439 ;; Defined at:
 50440 ;;		line 213 in file "mcc_generated_files/uart2.c"
 50441 ;; Parameters:    Size  Location     Type
 50442 ;;		None
 50443 ;; Auto vars:     Size  Location     Type
 50444 ;;		None
 50445 ;; Return value:  Size  Location     Type
 50446 ;;                  1  [STACK] void 
 50447 ;; Registers used:
 50448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50449 ;; Tracked objects:
 50450 ;;		On entry : 3F/0
 50451 ;;		On exit  : 3B/39
 50452 ;;		Unchanged: 0/0
 50453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50458 ;;Total ram usage:        0 bytes
 50459 ;; Hardware stack levels used:    1
 50460 ;; This function calls:
 50461 ;;		Nothing
 50462 ;; This function is called by:
 50463 ;;		_UART2_Initialize
 50464 ;;		_UART2_tx_vect_isr
 50465 ;; This function uses a reentrant model
 50466 ;;
 50467                           
 50468                           	psect	text216
 50469  0026A4                     __ptext216:
 50470                           	opt callstack 0
 50471  0026A4                     _UART2_Transmit_ISR:
 50472                           	opt callstack 4
 50473                           
 50474                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 50475                           
 50476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50477                           ;incstack = 0
 50478  0026A4  0E40               	movlw	64
 50479  0026A6  6055               	cpfslt	_uart2TxBufferRemaining^0,c
 50480  0026A8  D010               	goto	l675
 50481                           
 50482                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 50483  0026AA  0E00               	movlw	low _uart2TxBuffer
 50484  0026AC  2456               	addwf	_uart2TxTail^0,w,c	;volatile
 50485  0026AE  6ED9               	movwf	fsr2l,c
 50486  0026B0  6ADA               	clrf	fsr2h,c
 50487  0026B2  0E04               	movlw	high _uart2TxBuffer
 50488  0026B4  22DA               	addwfc	fsr2h,f,c
 50489  0026B6  50DF               	movf	indf2,w,c
 50490  0026B8  013D               	movlb	61	; () banked
 50491  0026BA  6FD2               	movwf	210,b	;volatile
 50492                           
 50493                           ; BSR set to: 61
 50494  0026BC  2A56               	incf	_uart2TxTail^0,f,c	;volatile
 50495                           
 50496                           ; BSR set to: 61
 50497                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 50498  0026BE  0E3F               	movlw	63
 50499  0026C0  6456               	cpfsgt	_uart2TxTail^0,c
 50500  0026C2  D001               	goto	l13952
 50501                           
 50502                           ; BSR set to: 61
 50503                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 50504  0026C4  6A56               	clrf	_uart2TxTail^0,c	;volatile
 50505  0026C6                     l13952:
 50506                           
 50507                           ; BSR set to: 61
 50508                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 50509  0026C6  2A55               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 50510                           
 50511                           ;mcc_generated_files/uart2.c: 224:     }
 50512  0026C8  0012               	return	
 50513  0026CA                     l675:
 50514                           
 50515                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 50516  0026CA  0139               	movlb	57	; () banked
 50517  0026CC  9796               	bcf	150,3,b	;volatile
 50518                           
 50519                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 50520  0026CE  0012               	return		;funcret
 50521  0026D0                     __end_of_UART2_Transmit_ISR:
 50522                           	opt callstack 0
 50523                           
 50524 ;; *************** function _UART2_rx_vect_isr *****************
 50525 ;; Defined at:
 50526 ;;		line 203 in file "mcc_generated_files/uart2.c"
 50527 ;; Parameters:    Size  Location     Type
 50528 ;;		None
 50529 ;; Auto vars:     Size  Location     Type
 50530 ;;		None
 50531 ;; Return value:  Size  Location     Type
 50532 ;;                  1    wreg      void 
 50533 ;; Registers used:
 50534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 50535 ;; Tracked objects:
 50536 ;;		On entry : 0/0
 50537 ;;		On exit  : 0/0
 50538 ;;		Unchanged: 0/0
 50539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50544 ;;Total ram usage:        0 bytes
 50545 ;; Hardware stack levels used:    1
 50546 ;; Hardware stack levels required when called:    1
 50547 ;; This function calls:
 50548 ;;		Absolute function
 50549 ;;		_UART2_Receive_ISR
 50550 ;; This function is called by:
 50551 ;;		Interrupt level 2
 50552 ;; This function uses a non-reentrant model
 50553 ;;
 50554                           
 50555                           	psect	text217
 50556  00292C                     __ptext217:
 50557                           	opt callstack 0
 50558  00292C                     _UART2_rx_vect_isr:
 50559                           	opt callstack 4
 50560                           
 50561                           ;incstack = 0
 50562  00292C  EE14  F32C         	lfsr	1,___inthi_sp
 50563                           
 50564                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 50565  002930  0100               	movlb	0	; () banked
 50566  002932  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50567  002934  11AE               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50568  002936  11AF               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50569  002938  B4D8               	btfsc	status,2,c
 50570  00293A  0011               	retfie		f
 50571                           
 50572                           ; BSR set to: 0
 50573                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 50574  00293C  D801               	call	i2u1388_48
 50575  00293E  0011               	retfie		f
 50576  002940                     i2u1388_48:
 50577  002940  0005               	push	
 50578  002942  6EFA               	movwf	pclath,c
 50579  002944  51AD               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 50580  002946  6EFD               	movwf	tosl,c
 50581  002948  51AE               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 50582  00294A  6EFE               	movwf	tosh,c
 50583  00294C  51AF               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 50584  00294E  6EFF               	movwf	tosu,c
 50585  002950  50FA               	movf	pclath,w,c
 50586  002952  0012               	return		;indir
 50587  002954                     __end_of_UART2_rx_vect_isr:
 50588                           	opt callstack 0
 50589                           
 50590 ;; *************** function _UART2_Receive_ISR *****************
 50591 ;; Defined at:
 50592 ;;		line 233 in file "mcc_generated_files/uart2.c"
 50593 ;; Parameters:    Size  Location     Type
 50594 ;;		None
 50595 ;; Auto vars:     Size  Location     Type
 50596 ;;		None
 50597 ;; Return value:  Size  Location     Type
 50598 ;;                  1  [STACK] void 
 50599 ;; Registers used:
 50600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50601 ;; Tracked objects:
 50602 ;;		On entry : 3F/0
 50603 ;;		On exit  : 3F/0
 50604 ;;		Unchanged: 0/0
 50605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50610 ;;Total ram usage:        0 bytes
 50611 ;; Hardware stack levels used:    1
 50612 ;; This function calls:
 50613 ;;		Nothing
 50614 ;; This function is called by:
 50615 ;;		_UART2_Initialize
 50616 ;;		_UART2_rx_vect_isr
 50617 ;; This function uses a reentrant model
 50618 ;;
 50619                           
 50620                           	psect	text218
 50621  002AB2                     __ptext218:
 50622                           	opt callstack 0
 50623  002AB2                     _UART2_Receive_ISR:
 50624                           	opt callstack 4
 50625                           
 50626                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 50627                           
 50628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50629                           ;incstack = 0
 50630  002AB2  0E00               	movlw	low _uart2RxBuffer
 50631  002AB4  2454               	addwf	_uart2RxHead^0,w,c	;volatile
 50632  002AB6  6ED9               	movwf	fsr2l,c
 50633  002AB8  6ADA               	clrf	fsr2h,c
 50634  002ABA  0E06               	movlw	high _uart2RxBuffer
 50635  002ABC  22DA               	addwfc	fsr2h,f,c
 50636  002ABE  006F F743 FFDF     	movff	15824,indf2	;volatile
 50637  002AC4  2A54               	incf	_uart2RxHead^0,f,c	;volatile
 50638                           
 50639                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 50640  002AC6  2854               	incf	_uart2RxHead^0,w,c
 50641  002AC8  B4D8               	btfsc	status,2,c
 50642                           
 50643                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 50644  002ACA  6A54               	clrf	_uart2RxHead^0,c	;volatile
 50645                           
 50646                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 50647  002ACC  0100               	movlb	0	; () banked
 50648  002ACE  2BCD               	incf	_uart2RxCount& (0+255),f,b	;volatile
 50649                           
 50650                           ; BSR set to: 0
 50651                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 50652  002AD0  0012               	return		;funcret
 50653  002AD2                     __end_of_UART2_Receive_ISR:
 50654                           	opt callstack 0
 50655                           
 50656 ;; *************** function _TMR6_ISR *****************
 50657 ;; Defined at:
 50658 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 50659 ;; Parameters:    Size  Location     Type
 50660 ;;		None
 50661 ;; Auto vars:     Size  Location     Type
 50662 ;;		None
 50663 ;; Return value:  Size  Location     Type
 50664 ;;                  1    wreg      void 
 50665 ;; Registers used:
 50666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50667 ;; Tracked objects:
 50668 ;;		On entry : 0/0
 50669 ;;		On exit  : 0/0
 50670 ;;		Unchanged: 0/0
 50671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50676 ;;Total ram usage:        1 bytes
 50677 ;; Hardware stack levels used:    1
 50678 ;; Hardware stack levels required when called:    2
 50679 ;; This function calls:
 50680 ;;		_TMR6_CallBack
 50681 ;; This function is called by:
 50682 ;;		Interrupt level 2
 50683 ;; This function uses a non-reentrant model
 50684 ;;
 50685                           
 50686                           	psect	text219
 50687  002B64                     __ptext219:
 50688                           	opt callstack 0
 50689  002B64                     _TMR6_ISR:
 50690                           	opt callstack 3
 50691                           
 50692                           ; BSR set to: 0
 50693                           ;incstack = 0
 50694  002B64  0060  F0A8  F006   	movff	btemp,??_TMR6_ISR
 50695  002B6A  EE14  F32C         	lfsr	1,___inthi_sp
 50696                           
 50697                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 50698  002B6E  0139               	movlb	57	; () banked
 50699  002B70  91A9               	bcf	169,0,b	;volatile
 50700                           
 50701                           ; BSR set to: 57
 50702                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 50703  002B72  EC04  F015         	call	_TMR6_CallBack	;wreg free
 50704  002B76  0060  F018  F02A   	movff	??_TMR6_ISR,btemp
 50705  002B7C  0011               	retfie		f
 50706  002B7E                     __end_of_TMR6_ISR:
 50707                           	opt callstack 0
 50708                           
 50709 ;; *************** function _TMR6_CallBack *****************
 50710 ;; Defined at:
 50711 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 50712 ;; Parameters:    Size  Location     Type
 50713 ;;		None
 50714 ;; Auto vars:     Size  Location     Type
 50715 ;;		None
 50716 ;; Return value:  Size  Location     Type
 50717 ;;                  1  [STACK] void 
 50718 ;; Registers used:
 50719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 50720 ;; Tracked objects:
 50721 ;;		On entry : 3F/39
 50722 ;;		On exit  : 0/0
 50723 ;;		Unchanged: 0/0
 50724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50729 ;;Total ram usage:        0 bytes
 50730 ;; Hardware stack levels used:    1
 50731 ;; Hardware stack levels required when called:    1
 50732 ;; This function calls:
 50733 ;;		Absolute function
 50734 ;;		_TMR6_DefaultInterruptHandler
 50735 ;; This function is called by:
 50736 ;;		_TMR6_ISR
 50737 ;; This function uses a reentrant model
 50738 ;;
 50739                           
 50740                           	psect	text220
 50741  002A08                     __ptext220:
 50742                           	opt callstack 0
 50743  002A08                     _TMR6_CallBack:
 50744                           	opt callstack 3
 50745                           
 50746                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 50747                           
 50748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50749                           ;incstack = 0
 50750  002A08  0100               	movlb	0	; () banked
 50751  002A0A  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50752  002A0C  119F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50753  002A0E  11A0               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50754  002A10  B4D8               	btfsc	status,2,c
 50755  002A12  0012               	return	
 50756                           
 50757                           ; BSR set to: 0
 50758                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 50759  002A14  D801               	call	u1321_48
 50760  002A16  0012               	return	
 50761  002A18                     u1321_48:
 50762  002A18  0005               	push	
 50763  002A1A  6EFA               	movwf	pclath,c
 50764  002A1C  519E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 50765  002A1E  6EFD               	movwf	tosl,c
 50766  002A20  519F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 50767  002A22  6EFE               	movwf	tosh,c
 50768  002A24  51A0               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 50769  002A26  6EFF               	movwf	tosu,c
 50770  002A28  50FA               	movf	pclath,w,c
 50771  002A2A  0012               	return		;indir
 50772  002A2C                     __end_of_TMR6_CallBack:
 50773                           	opt callstack 0
 50774                           
 50775 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 50776 ;; Defined at:
 50777 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 50778 ;; Parameters:    Size  Location     Type
 50779 ;;		None
 50780 ;; Auto vars:     Size  Location     Type
 50781 ;;  i               1  [STACK] unsigned char 
 50782 ;; Return value:  Size  Location     Type
 50783 ;;                  1  [STACK] void 
 50784 ;; Registers used:
 50785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 50786 ;; Tracked objects:
 50787 ;;		On entry : 3F/0
 50788 ;;		On exit  : 0/0
 50789 ;;		Unchanged: 0/0
 50790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50795 ;;Total ram usage:        0 bytes
 50796 ;; Hardware stack levels used:    1
 50797 ;; This function calls:
 50798 ;;		Nothing
 50799 ;; This function is called by:
 50800 ;;		_TMR6_Initialize
 50801 ;;		_TMR6_CallBack
 50802 ;; This function uses a reentrant model
 50803 ;;
 50804                           
 50805                           	psect	text221
 50806  001EFA                     __ptext221:
 50807                           	opt callstack 0
 50808  001EFA                     _TMR6_DefaultInterruptHandler:
 50809                           	opt callstack 0
 50810                           
 50811                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 50812  001EFA  52E6               	movf	postinc1,f,c
 50813                           
 50814                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 50815                           ;stkvar	_i @ sp[(-1)+0]
 50816                           
 50817                           ;incstack = 0
 50818  001EFC  0EFF               	movlw	-1
 50819  001EFE  6AE3               	clrf	plusw1,c
 50820  001F00                     l13360:
 50821                           
 50822                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 50823                           ;stkvar	_i @ sp[(-1)+0]
 50824  001F00  0EFF               	movlw	-1
 50825  001F02  50E3               	movf	plusw1,w,c
 50826  001F04  0D02               	mullw	2
 50827  001F06  0EBC               	movlw	low _tickCount
 50828  001F08  24F3               	addwf	243,w,c
 50829  001F0A  6ED9               	movwf	fsr2l,c
 50830  001F0C  0E02               	movlw	high _tickCount
 50831  001F0E  20F4               	addwfc	prodh,w,c
 50832  001F10  6EDA               	movwf	fsr2h,c
 50833  001F12  50DE               	movf	postinc2,w,c
 50834  001F14  10DE               	iorwf	postinc2,w,c
 50835  001F16  B4D8               	btfsc	status,2,c
 50836  001F18  D00C               	goto	l13364
 50837                           
 50838                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 50839                           ;stkvar	_i @ sp[(-1)+0]
 50840  001F1A  0EFF               	movlw	-1
 50841  001F1C  50E3               	movf	plusw1,w,c
 50842  001F1E  0D02               	mullw	2
 50843  001F20  0EBC               	movlw	low _tickCount
 50844  001F22  24F3               	addwf	243,w,c
 50845  001F24  6ED9               	movwf	fsr2l,c
 50846  001F26  0E02               	movlw	high _tickCount
 50847  001F28  20F4               	addwfc	prodh,w,c
 50848  001F2A  6EDA               	movwf	fsr2h,c
 50849  001F2C  06DE               	decf	postinc2,f,c
 50850  001F2E  0E00               	movlw	0
 50851  001F30  5ADD               	subwfb	postdec2,f,c
 50852  001F32                     l13364:
 50853                           
 50854                           ;mcc_generated_files/tmr6.c: 207:  }
 50855                           ;stkvar	_i @ sp[(-1)+0]
 50856  001F32  0EFF               	movlw	-1
 50857  001F34  2AE3               	incf	plusw1,f,c
 50858                           
 50859                           ;stkvar	_i @ sp[(-1)+0]
 50860  001F36  0EFF               	movlw	-1
 50861  001F38  006F FF8C  F02A    	movff	plusw1,btemp
 50862  001F3E  0E0C               	movlw	12
 50863  001F40  642A               	cpfsgt	btemp^0,c
 50864  001F42  D7DE               	goto	l13360
 50865                           
 50866                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 50867  001F44  52E5               	movf	postdec1,f,c
 50868  001F46  0012               	return		;funcret
 50869  001F48                     __end_of_TMR6_DefaultInterruptHandler:
 50870                           	opt callstack 0
 50871                           
 50872 ;; *************** function _DMA1_DMASCNT_ISR *****************
 50873 ;; Defined at:
 50874 ;;		line 126 in file "mcc_generated_files/dma1.c"
 50875 ;; Parameters:    Size  Location     Type
 50876 ;;		None
 50877 ;; Auto vars:     Size  Location     Type
 50878 ;;		None
 50879 ;; Return value:  Size  Location     Type
 50880 ;;                  1    wreg      void 
 50881 ;; Registers used:
 50882 ;;		None
 50883 ;; Tracked objects:
 50884 ;;		On entry : 0/0
 50885 ;;		On exit  : 3F/0
 50886 ;;		Unchanged: 0/0
 50887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50892 ;;Total ram usage:        0 bytes
 50893 ;; Hardware stack levels used:    1
 50894 ;; This function calls:
 50895 ;;		Nothing
 50896 ;; This function is called by:
 50897 ;;		Interrupt level 2
 50898 ;; This function uses a non-reentrant model
 50899 ;;
 50900                           
 50901                           	psect	text222
 50902  002CD8                     __ptext222:
 50903                           	opt callstack 0
 50904  002CD8                     _DMA1_DMASCNT_ISR:
 50905                           	opt callstack 5
 50906                           
 50907                           ;incstack = 0
 50908  002CD8  EE14  F32C         	lfsr	1,___inthi_sp
 50909                           
 50910                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 50911  002CDC  0139               	movlb	57	; () banked
 50912  002CDE  91A2               	bcf	162,0,b	;volatile
 50913                           
 50914                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 50915  002CE0  0100               	movlb	0	; () banked
 50916  002CE2  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 50917                           
 50918                           ; BSR set to: 0
 50919  002CE4  0011               	retfie		f
 50920  002CE6                     __end_of_DMA1_DMASCNT_ISR:
 50921                           	opt callstack 0
 50922                           
 50923 ;; *************** function _DMA1_DMADCNT_ISR *****************
 50924 ;; Defined at:
 50925 ;;		line 133 in file "mcc_generated_files/dma1.c"
 50926 ;; Parameters:    Size  Location     Type
 50927 ;;		None
 50928 ;; Auto vars:     Size  Location     Type
 50929 ;;		None
 50930 ;; Return value:  Size  Location     Type
 50931 ;;                  1    wreg      void 
 50932 ;; Registers used:
 50933 ;;		None
 50934 ;; Tracked objects:
 50935 ;;		On entry : 0/0
 50936 ;;		On exit  : 3F/39
 50937 ;;		Unchanged: 0/0
 50938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50943 ;;Total ram usage:        0 bytes
 50944 ;; Hardware stack levels used:    1
 50945 ;; This function calls:
 50946 ;;		Nothing
 50947 ;; This function is called by:
 50948 ;;		Interrupt level 2
 50949 ;; This function uses a non-reentrant model
 50950 ;;
 50951                           
 50952                           	psect	text223
 50953  002CFC                     __ptext223:
 50954                           	opt callstack 0
 50955  002CFC                     _DMA1_DMADCNT_ISR:
 50956                           	opt callstack 5
 50957                           
 50958                           ; BSR set to: 0
 50959                           ;incstack = 0
 50960  002CFC  EE14  F32C         	lfsr	1,___inthi_sp
 50961                           
 50962                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 50963  002D00  0139               	movlb	57	; () banked
 50964  002D02  93A2               	bcf	162,1,b	;volatile
 50965                           
 50966                           ; BSR set to: 57
 50967  002D04  0011               	retfie		f
 50968  002D06                     __end_of_DMA1_DMADCNT_ISR:
 50969                           	opt callstack 0
 50970                           
 50971 ;; *************** function _DMA1_DMAA_ISR *****************
 50972 ;; Defined at:
 50973 ;;		line 143 in file "mcc_generated_files/dma1.c"
 50974 ;; Parameters:    Size  Location     Type
 50975 ;;		None
 50976 ;; Auto vars:     Size  Location     Type
 50977 ;;		None
 50978 ;; Return value:  Size  Location     Type
 50979 ;;                  1    wreg      void 
 50980 ;; Registers used:
 50981 ;;		None
 50982 ;; Tracked objects:
 50983 ;;		On entry : 0/0
 50984 ;;		On exit  : 3F/39
 50985 ;;		Unchanged: 0/0
 50986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 50987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 50991 ;;Total ram usage:        0 bytes
 50992 ;; Hardware stack levels used:    1
 50993 ;; This function calls:
 50994 ;;		Nothing
 50995 ;; This function is called by:
 50996 ;;		Interrupt level 2
 50997 ;; This function uses a non-reentrant model
 50998 ;;
 50999                           
 51000                           	psect	text224
 51001  002D08                     __ptext224:
 51002                           	opt callstack 0
 51003  002D08                     _DMA1_DMAA_ISR:
 51004                           	opt callstack 5
 51005                           
 51006                           ; BSR set to: 57
 51007                           ;incstack = 0
 51008  002D08  EE14  F32C         	lfsr	1,___inthi_sp
 51009                           
 51010                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 51011  002D0C  0139               	movlb	57	; () banked
 51012  002D0E  97A2               	bcf	162,3,b	;volatile
 51013                           
 51014                           ; BSR set to: 57
 51015  002D10  0011               	retfie		f
 51016  002D12                     __end_of_DMA1_DMAA_ISR:
 51017                           	opt callstack 0
 51018                           
 51019 ;; *************** function _DMA1_DMAOR_ISR *****************
 51020 ;; Defined at:
 51021 ;;		line 154 in file "mcc_generated_files/dma1.c"
 51022 ;; Parameters:    Size  Location     Type
 51023 ;;		None
 51024 ;; Auto vars:     Size  Location     Type
 51025 ;;		None
 51026 ;; Return value:  Size  Location     Type
 51027 ;;                  1    wreg      void 
 51028 ;; Registers used:
 51029 ;;		None
 51030 ;; Tracked objects:
 51031 ;;		On entry : 0/0
 51032 ;;		On exit  : 3F/39
 51033 ;;		Unchanged: 0/0
 51034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 51035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 51039 ;;Total ram usage:        0 bytes
 51040 ;; Hardware stack levels used:    1
 51041 ;; This function calls:
 51042 ;;		Nothing
 51043 ;; This function is called by:
 51044 ;;		Interrupt level 2
 51045 ;; This function uses a non-reentrant model
 51046 ;;
 51047                           
 51048                           	psect	text225
 51049  002D14                     __ptext225:
 51050                           	opt callstack 0
 51051  002D14                     _DMA1_DMAOR_ISR:
 51052                           	opt callstack 5
 51053                           
 51054                           ; BSR set to: 57
 51055                           ;incstack = 0
 51056  002D14  EE14  F32C         	lfsr	1,___inthi_sp
 51057                           
 51058                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 51059  002D18  0139               	movlb	57	; () banked
 51060  002D1A  95A2               	bcf	162,2,b	;volatile
 51061                           
 51062                           ; BSR set to: 57
 51063  002D1C  0011               	retfie		f
 51064  002D1E                     __end_of_DMA1_DMAOR_ISR:
 51065                           	opt callstack 0
 51066                           
 51067                           ;
 51068                           ; Interrupt Vector Table @ 0x8
 51069                           ;
 51070                           
 51071                           	psect	ivt0x8
 51072  000008                     __pivt0x8:
 51073                           	opt callstack 0
 51074  000008                     ivt0x8_base:
 51075                           	opt callstack 0
 51076                           
 51077                           ; Vector 0 : SWINT
 51078  000008  0B5B               	dw	_Default_ISR shr (0+2)
 51079                           
 51080                           ; Vector 1 : HLVD
 51081  00000A  0B5B               	dw	_Default_ISR shr (0+2)
 51082                           
 51083                           ; Vector 2 : OSF
 51084  00000C  0B5B               	dw	_Default_ISR shr (0+2)
 51085                           
 51086                           ; Vector 3 : CSW
 51087  00000E  0B5B               	dw	_Default_ISR shr (0+2)
 51088                           
 51089                           ; Vector 4 : NVM
 51090  000010  0B5B               	dw	_Default_ISR shr (0+2)
 51091                           
 51092                           ; Vector 5 : SCAN
 51093  000012  0B5B               	dw	_Default_ISR shr (0+2)
 51094                           
 51095                           ; Vector 6 : CRC
 51096  000014  0B5B               	dw	_Default_ISR shr (0+2)
 51097                           
 51098                           ; Vector 7 : IOC
 51099  000016  0B5B               	dw	_Default_ISR shr (0+2)
 51100                           
 51101                           ; Vector 8 : INT0
 51102  000018  0B32               	dw	_INT0_ISR shr (0+2)
 51103                           
 51104                           ; Vector 9 : ZCD
 51105  00001A  0B5B               	dw	_Default_ISR shr (0+2)
 51106                           
 51107                           ; Vector 10 : AD
 51108  00001C  099E               	dw	_ADCC_ISR shr (0+2)
 51109                           
 51110                           ; Vector 11 : ADT
 51111  00001E  062F               	dw	_ADCC_ThresholdISR shr (0+2)
 51112                           
 51113                           ; Vector 12 : CMP1
 51114  000020  0B5B               	dw	_Default_ISR shr (0+2)
 51115                           
 51116                           ; Vector 13 : SMT1
 51117  000022  0B5B               	dw	_Default_ISR shr (0+2)
 51118                           
 51119                           ; Vector 14 : SMT1PRA
 51120  000024  0B5B               	dw	_Default_ISR shr (0+2)
 51121                           
 51122                           ; Vector 15 : SMT1PRW
 51123  000026  0B5B               	dw	_Default_ISR shr (0+2)
 51124                           
 51125                           ; Vector 16 : DMA1SCNT
 51126  000028  0B36               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 51127                           
 51128                           ; Vector 17 : DMA1DCNT
 51129  00002A  0B3F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 51130                           
 51131                           ; Vector 18 : DMA1OR
 51132  00002C  0B45               	dw	_DMA1_DMAOR_ISR shr (0+2)
 51133                           
 51134                           ; Vector 19 : DMA1A
 51135  00002E  0B42               	dw	_DMA1_DMAA_ISR shr (0+2)
 51136                           
 51137                           ; Vector 20 : SPI1RX
 51138  000030  0B5B               	dw	_Default_ISR shr (0+2)
 51139                           
 51140                           ; Vector 21 : SPI1TX
 51141  000032  0B5B               	dw	_Default_ISR shr (0+2)
 51142                           
 51143                           ; Vector 22 : SPI1
 51144  000034  0B5B               	dw	_Default_ISR shr (0+2)
 51145                           
 51146                           ; Vector 23 : I2C1RX
 51147  000036  0B5B               	dw	_Default_ISR shr (0+2)
 51148                           
 51149                           ; Vector 24 : I2C1TX
 51150  000038  0B5B               	dw	_Default_ISR shr (0+2)
 51151                           
 51152                           ; Vector 25 : I2C1
 51153  00003A  0B5B               	dw	_Default_ISR shr (0+2)
 51154                           
 51155                           ; Vector 26 : I2C1E
 51156  00003C  0B5B               	dw	_Default_ISR shr (0+2)
 51157                           
 51158                           ; Vector 27 : U1RX
 51159  00003E  0A37               	dw	_UART1_rx_vect_isr shr (0+2)
 51160                           
 51161                           ; Vector 28 : U1TX
 51162  000040  0B5B               	dw	_Default_ISR shr (0+2)
 51163                           
 51164                           ; Vector 29 : U1E
 51165  000042  0B5B               	dw	_Default_ISR shr (0+2)
 51166                           
 51167                           ; Vector 30 : U1
 51168  000044  0B5B               	dw	_Default_ISR shr (0+2)
 51169                           
 51170                           ; Vector 31 : TMR0
 51171  000046  0B5B               	dw	_Default_ISR shr (0+2)
 51172                           
 51173                           ; Vector 32 : TMR1
 51174  000048  0B5B               	dw	_Default_ISR shr (0+2)
 51175                           
 51176                           ; Vector 33 : TMR1G
 51177  00004A  0B5B               	dw	_Default_ISR shr (0+2)
 51178                           
 51179                           ; Vector 34 : TMR2
 51180  00004C  0B5B               	dw	_Default_ISR shr (0+2)
 51181                           
 51182                           ; Vector 35 : CCP1
 51183  00004E  0B5B               	dw	_Default_ISR shr (0+2)
 51184                           
 51185                           ; Vector 36 : Undefined
 51186  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 51187                           
 51188                           ; Vector 37 : NCO1
 51189  000052  0B5B               	dw	_Default_ISR shr (0+2)
 51190                           
 51191                           ; Vector 38 : CWG1
 51192  000054  0B5B               	dw	_Default_ISR shr (0+2)
 51193                           
 51194                           ; Vector 39 : CLC1
 51195  000056  0B5B               	dw	_Default_ISR shr (0+2)
 51196                           
 51197                           ; Vector 40 : INT1
 51198  000058  08C0               	dw	_INT1_ISR shr (0+2)
 51199                           
 51200                           ; Vector 41 : CMP2
 51201  00005A  0B5B               	dw	_Default_ISR shr (0+2)
 51202                           
 51203                           ; Vector 42 : DMA2SCNT
 51204  00005C  0B5B               	dw	_Default_ISR shr (0+2)
 51205                           
 51206                           ; Vector 43 : DMA2DCNT
 51207  00005E  0B5B               	dw	_Default_ISR shr (0+2)
 51208                           
 51209                           ; Vector 44 : DMA2OR
 51210  000060  0B5B               	dw	_Default_ISR shr (0+2)
 51211                           
 51212                           ; Vector 45 : DMA2A
 51213  000062  0B5B               	dw	_Default_ISR shr (0+2)
 51214                           
 51215                           ; Vector 46 : I2C2RX
 51216  000064  0B5B               	dw	_Default_ISR shr (0+2)
 51217                           
 51218                           ; Vector 47 : I2C2TX
 51219  000066  0B5B               	dw	_Default_ISR shr (0+2)
 51220                           
 51221                           ; Vector 48 : I2C2
 51222  000068  0B5B               	dw	_Default_ISR shr (0+2)
 51223                           
 51224                           ; Vector 49 : I2C2E
 51225  00006A  0B5B               	dw	_Default_ISR shr (0+2)
 51226                           
 51227                           ; Vector 50 : U2RX
 51228  00006C  0A4B               	dw	_UART2_rx_vect_isr shr (0+2)
 51229                           
 51230                           ; Vector 51 : U2TX
 51231  00006E  0A41               	dw	_UART2_tx_vect_isr shr (0+2)
 51232                           
 51233                           ; Vector 52 : U2E
 51234  000070  0B5B               	dw	_Default_ISR shr (0+2)
 51235                           
 51236                           ; Vector 53 : U2
 51237  000072  0B5B               	dw	_Default_ISR shr (0+2)
 51238                           
 51239                           ; Vector 54 : TMR3
 51240  000074  7B73               	dw	_TMR3_ISR shr (0+2)
 51241                           
 51242                           ; Vector 55 : TMR3G
 51243  000076  0B5B               	dw	_Default_ISR shr (0+2)
 51244                           
 51245                           ; Vector 56 : TMR4
 51246  000078  0B5B               	dw	_Default_ISR shr (0+2)
 51247                           
 51248                           ; Vector 57 : CCP2
 51249  00007A  0B5B               	dw	_Default_ISR shr (0+2)
 51250                           
 51251                           ; Vector 58 : Undefined
 51252  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 51253                           
 51254                           ; Vector 59 : CWG2
 51255  00007E  0B5B               	dw	_Default_ISR shr (0+2)
 51256                           
 51257                           ; Vector 60 : CLC2
 51258  000080  0B5B               	dw	_Default_ISR shr (0+2)
 51259                           
 51260                           ; Vector 61 : INT2
 51261  000082  0B5B               	dw	_Default_ISR shr (0+2)
 51262                           
 51263                           ; Vector 62 : Undefined
 51264  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 51265                           
 51266                           ; Vector 63 : Undefined
 51267  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 51268                           
 51269                           ; Vector 64 : Undefined
 51270  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 51271                           
 51272                           ; Vector 65 : Undefined
 51273  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 51274                           
 51275                           ; Vector 66 : Undefined
 51276  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 51277                           
 51278                           ; Vector 67 : Undefined
 51279  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 51280                           
 51281                           ; Vector 68 : Undefined
 51282  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 51283                           
 51284                           ; Vector 69 : Undefined
 51285  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 51286                           
 51287                           ; Vector 70 : TMR5
 51288  000094  77B0               	dw	_TMR5_ISR shr (0+2)
 51289                           
 51290                           ; Vector 71 : TMR5G
 51291  000096  0B5B               	dw	_Default_ISR shr (0+2)
 51292                           
 51293                           ; Vector 72 : TMR6
 51294  000098  0AD9               	dw	_TMR6_ISR shr (0+2)
 51295                           
 51296                           ; Vector 73 : CCP3
 51297  00009A  0B5B               	dw	_Default_ISR shr (0+2)
 51298                           
 51299                           ; Vector 74 : CWG3
 51300  00009C  0B5B               	dw	_Default_ISR shr (0+2)
 51301                           
 51302                           ; Vector 75 : CLC3
 51303  00009E  0B5B               	dw	_Default_ISR shr (0+2)
 51304                           
 51305                           ; Vector 76 : Undefined
 51306  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 51307                           
 51308                           ; Vector 77 : Undefined
 51309  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 51310                           
 51311                           ; Vector 78 : Undefined
 51312  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 51313                           
 51314                           ; Vector 79 : Undefined
 51315  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 51316                           
 51317                           ; Vector 80 : CCP4
 51318  0000A8  0B5B               	dw	_Default_ISR shr (0+2)
 51319                           
 51320                           ; Vector 81 : CLC4
 51321  0000AA  0B5B               	dw	_Default_ISR shr (0+2)
 51322  0000AC                     ivt0x8_undefint:
 51323                           	opt callstack 0
 51324  0000AC  00FF               	reset	
 51325                           
 51326                           	psect	text226
 51327  000000                     __ptext226:
 51328                           	opt callstack 0
 51329                           
 51330                           	psect	rparam
 51331  0000                     
 51332                           	psect	temp
 51333  00002A                     btemp:
 51334                           	opt callstack 0
 51335  00002A                     	ds	32
 51336  0000                     wtemp0	set	btemp
 51337  0000                     wtemp1	set	btemp+2
 51338  0000                     wtemp2	set	btemp+4
 51339  0000                     wtemp3	set	btemp+6
 51340  0000                     wtemp4	set	btemp+8
 51341  0000                     wtemp5	set	btemp+10
 51342  0000                     wtemp8	set	btemp+1
 51343  0000                     ttemp0	set	btemp
 51344  0000                     ttemp1	set	btemp+3
 51345  0000                     ttemp2	set	btemp+6
 51346  0000                     ttemp3	set	btemp+9
 51347  0000                     ttemp5	set	btemp+1
 51348  0000                     ttemp6	set	btemp+4
 51349  0000                     ttemp7	set	btemp+8
 51350  0000                     ltemp0	set	btemp
 51351  0000                     ltemp1	set	btemp+4
 51352  0000                     ltemp2	set	btemp+8
 51353  0000                     lltemp0	set	btemp
 51354  0000                     lltemp1	set	btemp+8
 51355  0000                     lltemp2	set	btemp+16
 51356  0000                     lltemp3	set	btemp+24
 51357                           tosu	equ	0x3FFF
 51358                           tosh	equ	0x3FFE
 51359                           tosl	equ	0x3FFD
 51360                           stkptr	equ	0x3FFC
 51361                           pclatu	equ	0x3FFB
 51362                           pclath	equ	0x3FFA
 51363                           pcl	equ	0x3FF9
 51364                           tblptru	equ	0x3FF8
 51365                           tblptrh	equ	0x3FF7
 51366                           tblptrl	equ	0x3FF6
 51367                           tablat	equ	0x3FF5
 51368                           prodh	equ	0x3FF4
 51369                           prodl	equ	0x3FF3
 51370                           indf0	equ	0x3FEF
 51371                           postinc0	equ	0x3FEE
 51372                           postdec0	equ	0x3FED
 51373                           preinc0	equ	0x3FEC
 51374                           plusw0	equ	0x3FEB
 51375                           fsr0h	equ	0x3FEA
 51376                           fsr0l	equ	0x3FE9
 51377                           wreg	equ	0x3FE8
 51378                           indf1	equ	0x3FE7
 51379                           postinc1	equ	0x3FE6
 51380                           postdec1	equ	0x3FE5
 51381                           preinc1	equ	0x3FE4
 51382                           plusw1	equ	0x3FE3
 51383                           fsr1h	equ	0x3FE2
 51384                           fsr1l	equ	0x3FE1
 51385                           bsr	equ	0x3FE0
 51386                           indf2	equ	0x3FDF
 51387                           postinc2	equ	0x3FDE
 51388                           postdec2	equ	0x3FDD
 51389                           preinc2	equ	0x3FDC
 51390                           plusw2	equ	0x3FDB
 51391                           fsr2h	equ	0x3FDA
 51392                           fsr2l	equ	0x3FD9
 51393                           status	equ	0x3FD8


Data Sizes:
    Strings     1544
    Constant    588
    Data        1826
    BSS         1133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     41      55
    BANK0           160     25     158
    BANK1           256      0     253
    BANK2           256      0     230
    BANK3           256      0     247
    BANK4           256      0     219
    BANK5           256      0     134
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_134(CODE[1]), STR_94(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_135(CODE[1]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_129(CODE[3]), STR_125(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), 
		 -> STR_110(CODE[3]), STR_106(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), 
		 -> STR_91(CODE[21]), STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), 
		 -> STR_87(CODE[21]), STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), 
		 -> STR_83(CODE[15]), STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), 
		 -> STR_79(CODE[10]), STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), 
		 -> STR_73(CODE[14]), STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), 
		 -> STR_69(CODE[22]), STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), 
		 -> STR_65(CODE[22]), STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), 
		 -> STR_61(CODE[22]), STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), 
		 -> STR_57(CODE[22]), STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), 
		 -> STR_53(CODE[24]), STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), 
		 -> STR_49(CODE[24]), STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), 
		 -> STR_37(CODE[23]), STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), 
		 -> STR_25(CODE[23]), STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), 
		 -> STR_21(CODE[22]), STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_76(CODE[9]), STR_75(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_101(CODE[4]), STR_100(CODE[4]), STR_97(CODE[4]), STR_96(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_74(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_73(CODE[14]), STR_72(CODE[28]), 
		 -> STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), STR_68(CODE[22]), 
		 -> STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), STR_64(CODE[22]), 
		 -> STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), STR_60(CODE[21]), 
		 -> STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), STR_52(CODE[24]), 
		 -> STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), STR_48(CODE[24]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[23]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[23]), 
		 -> STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), STR_28(CODE[14]), 
		 -> STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), STR_24(CODE[22]), 
		 -> STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), STR_20(CODE[23]), 
		 -> STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7387_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(1) Largest target is 8
		 -> pclock(BANK0[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_133(CODE[37]), STR_132(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 320
		 -> C(BIGRAM[320]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_95(CODE[127]), STR_93(CODE[3]), STR_92(CODE[3]), STR_91(CODE[21]), 
		 -> STR_90(CODE[21]), STR_89(CODE[21]), STR_88(CODE[21]), STR_87(CODE[21]), 
		 -> STR_86(CODE[21]), STR_85(CODE[26]), STR_84(CODE[15]), STR_83(CODE[15]), 
		 -> STR_82(CODE[15]), STR_81(CODE[15]), STR_80(CODE[10]), STR_79(CODE[10]), 
		 -> STR_78(CODE[19]), STR_77(CODE[19]), STR_74(CODE[3]), STR_73(CODE[14]), 
		 -> STR_72(CODE[28]), STR_71(CODE[28]), STR_70(CODE[28]), STR_69(CODE[22]), 
		 -> STR_68(CODE[22]), STR_67(CODE[22]), STR_66(CODE[22]), STR_65(CODE[22]), 
		 -> STR_64(CODE[22]), STR_63(CODE[22]), STR_62(CODE[22]), STR_61(CODE[22]), 
		 -> STR_60(CODE[21]), STR_59(CODE[22]), STR_58(CODE[22]), STR_57(CODE[22]), 
		 -> STR_56(CODE[22]), STR_55(CODE[22]), STR_54(CODE[22]), STR_53(CODE[24]), 
		 -> STR_52(CODE[24]), STR_51(CODE[24]), STR_50(CODE[30]), STR_49(CODE[24]), 
		 -> STR_48(CODE[24]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[23]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[23]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[23]), STR_35(CODE[18]), STR_34(CODE[17]), STR_33(CODE[17]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[14]), 
		 -> STR_28(CODE[14]), STR_27(CODE[27]), STR_26(CODE[27]), STR_25(CODE[23]), 
		 -> STR_24(CODE[22]), STR_23(CODE[22]), STR_22(CODE[22]), STR_21(CODE[22]), 
		 -> STR_20(CODE[23]), STR_19(CODE[23]), STR_18(CODE[23]), STR_17(CODE[26]), 
		 -> STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_76(CODE[9]), 
		 -> STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[176]), 
		 -> STR_3(CODE[5]), V(BANK2[181]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_76(CODE[9]), STR_75(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[176]), STR_3(CODE[5]), V(BANK2[181]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 320
		 -> C.hist(BIGRAM[97]), C(BIGRAM[320]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> R(BANK1[155]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 155
		 -> r_cal(BANK4[155]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_76(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_75(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), ring_buf1(BANK5[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK2[181]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    S3418tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK5[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK5[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  439914
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                            _asctime
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _localtime
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                      _set_hist_flag
                 _set_load_relay_one
                 _set_load_relay_two
                           _set_time
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                               _time
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_time                                             8     0      8      22
 ---------------------------------------------------------------------------------
 (1) _set_hist_flag                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       2     2      0    4070
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _start_bsoc
                          _stop_bsoc
                               _time
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    1451
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      0     0      0   83116
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (1) _localtime                                            1     0      1   14641
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (2) ___localtime_r                                        3     0      3   14610
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (3) ___secs_to_zone                                      46    28     18   11126
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _scan_trans                                          30    18     12    1990
                          _zi_read32
 ---------------------------------------------------------------------------------
 (4) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (4) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (5) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (5) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (4) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (5) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (6) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (7) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (5) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (3) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2527
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     959
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     232
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0   67566
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     415
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  131766
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   65599
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   35090
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   34808
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1    1420
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1    1389
                     _ringBufS_flush
                   _ringBufS_put_dma
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31860
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   30434
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           31    31      0    5544
                                             10 COMRAM    31    31      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5454
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5454
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      4     4      0    5454
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
                               _time
 ---------------------------------------------------------------------------------
 (18) _time                                                8     0      8      23
 ---------------------------------------------------------------------------------
 (18) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   36148
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   36058
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           6     6      0   36058
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                           104    10     94   30659
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   30281
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29889
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2704
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2411
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   14099
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     433
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     445
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2     130
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _asctime
     ___awdiv
     ___awmod
     _put2d
       ___awdiv
       ___lbmod
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _ringBufS_flush
               _memset
             _ringBufS_put_dma
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _wait_lcd_done
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     ___fladd
     ___flmul
     ___fltol
     ___xxtofl
     _start_bsoc
     _stop_bsoc
     _time
   _localtime
     ___localtime_r
       ___secs_to_tm
         ___aldiv
         ___almod
         ___aodiv
         ___aomod
         ___lmul
         ___omul
       ___secs_to_zone
         ___aodiv
         ___year_to_secs
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         _do_tzset
           _getname
           _getoff
             _getint
           _getrule
             _getint
             _getoff
               _getint
         _rule_to_secs
           ___aldiv
           ___aomod
           ___lmul
           ___month_to_secs
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _days_in_month
         _scan_trans
           _zi_read32
         _zi_read32
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_hist_flag
   _set_load_relay_one
   _set_load_relay_two
   _set_time
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _time
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _ringBufS_flush
             _memset
           _ringBufS_put_dma
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
       _send_lcd_data_dma
         _ringBufS_flush
           _memset
         _ringBufS_put_dma
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
     _wait_lcd_done
   _wait_lcd_done
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
         _time
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5C2      69       18.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      86      15       52.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DB      13       85.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     29      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60F      58        0.0%
DATA                 0      0     BD1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 19:39:38 2020

                         _SPI1_Exchange8bit 2AD2                    __end_of_set_display_info 2B4A  
                                         _C 0B81                                           _D 06FF  
                                         _H 019B                                           _P 0094  
                                         _R 0100                                           _S 01A4  
                                         _T F8B7                                           _V 0207  
          __end_of_TMR5_SetInterruptHandler 2812                __end_of_start_switch_handler 2AB2  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1DB2                                          _r0 01E5  
                                        _r1 01DB                                          _bp F9DF  
                    __end_of_FVR_Initialize 2D46                              _check_day_time A782  
                               __CFG_LVP$ON 000000                                         l171 2C00  
                                       l809 2AE0                                         l675 26CA  
                                       l942 1972                                         _GIE 01FE97  
                                       _abs 20AE                                         _pad FCB6  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 2B96  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs 038A  
                             _INT0_CallBack 29E4                           _update_adc_result 237A  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0244                               _INT1_CallBack 2978  
                              __CFG_ZCD$OFF 000000                                        l1004 22BA  
                                      l2100 167A                                        l2021 16F8  
                                      l2203 AAEC                                        l1500 110A  
                                      l2141 DEB6                                        l2037 0B66  
                                      l2062 1122                                        l2207 AAE4  
                                      l1271 2C28                                        l1192 22FA  
                                      l3025 EAFA                                        l1505 16E0  
                                      l1282 E84E                             _timer3ReloadVal 00C0  
                                      l1284 E854                                        l1524 9AFE  
                                      l2412 BD38                                        l3310 8838  
                                      l1462 0444                                        l1455 005E  
                                      l4025 7B46                                        l4033 665A  
                                      l2370 543C                                        l1618 1D08  
                                      l1475 0962                                        l2188 00CA  
                                      l1477 0968                                        l2366 50FE  
                                      l2630 AEA6                                        l1750 1248  
                                      l3422 FA7C                                        l2471 FD12  
                                      l2527 295A                                        l2287 F842  
                                      l1824 23D0                                        l2296 D71E  
                                      l3265 7640                                        l3417 20EE  
                                      l3409 E1EE                                        l2609 BE26  
                                      l1841 F08A                                        l1833 D7D6  
                                      l3521 CE70                                        l1489 0CDA  
                                      l3346 6E84                                        l1746 0D74  
                                      l1834 D932                                        l2491 92F2  
                                      l2571 223A                                        l1499 0EE0  
                                      l2556 1D8A                                        l3277 74D0  
                                      l2645 A40C                                        l1765 243C  
                      _ADCC_StartConversion 2C2C                                        l1881 2B46  
                                      l2737 0570                                        l3386 DB30  
                                      l3458 C9E4                                        l3547 F962  
                                      l1981 920E                                        l3814 D4FE  
                                      l2695 49D8                                        l3842 1476  
                                      l3829 14FA                                        l3853 3A2C  
                                      l2991 ECEE                                        l3937 D2DE  
                                      l3946 C4F0                                        l2987 088A  
                                      l3981 C274                                        l3973 C18E  
                                      l2998 EDC2                                        l9900 725E  
                                      l9812 6EE4                                        l9830 6FA2  
                                      l9822 6F3A                                        l9904 7268  
                                      l9824 6F6A                                        l9842 7014  
                                      l9818 6F24                                        l9932 7350  
                                      l9908 7298                                        l9836 6FD4  
                                      l9950 7480                                        l9926 7334  
                                      l9854 707C                                        l9846 702A  
                                      STR_1 FF1D                                        l9928 7346  
                                      l9936 7382                                        l9848 705A  
                                      STR_2 FF08                                        STR_3 FFD5  
                                      STR_4 FEF3                                        STR_5 FBB9  
                                      l9972 7510                                        l9948 745A  
                                      l9884 71BA                                        STR_6 FBB9  
                                      STR_7 FBB9                                        l9982 7538  
                                      l9966 74F2                                        l9958 74B4  
                                      l9894 722C                                        STR_8 FBB9  
                                      STR_9 FBB9                                        l9968 7504  
                                      l9986 753E                                        l9898 724C  
                                      l9998 759C                                        _LATA 003FBA  
                                      _LATB 003FBB                                        _LATC 003FBC  
                                      _LATD 003FBD                                        _LATE 003FBE  
                                      _LATF 003FBF                                        _T2PR 003FAB  
                                      _T6PR 003F93                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        u7200 25E0  
                                      u8000 2174                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u7210 25E2  
                                      u8010 1424                                        _PMD6 0039C6  
                                      _PMD7 0039C7                                        u8020 1426  
                                      u8101 F1BE                                        u7310 71E0  
                                      u7320 7200                                        u8040 2610  
                                      u8200 C700                                        u7321 71FA  
                                      u8050 2612                                        u8130 C556  
                                      u8220 C752                                        u7510 7516  
                                      u7430 7378                                        u8150 C5AC  
                                      u8310 D042                                        u9030 1F62  
                                      u9110 EAB0                                        u7600 75AC  
                                      u7360 7290                                        u9040 E9C4  
                                      u9200 F604                                        u8161 C5B6  
                                      u8081 F09C                                        u7530 7530  
                                      u7370 72B0                                        u7338 7202  
                                      u8170 C5F0                                        u8330 D094  
                                      u8250 CED0                                        u9130 EADA  
                                      u9050 E9D8                                        u9210 F636  
                                      u7435 7368                                        u8180 C622  
                                      u9060 EA12                                        u7365 7280  
                                      u9045 E9BA                                        u9141 E6AE  
                                      u7470 74A2                                        u8510 86F6  
                                      u8270 CF26                                        u9150 E6E8  
                                      u9230 F6EE                                        u8280 CF58  
                                      u9160 E71A                                        u7640 25B0  
                                      u9065 EA08                                        u7570 758C  
                                      u9250 1E26                                        u8290 CF8A  
                                      u7650 25B2                                        u9260 1E46  
                                      u7820 E1DE                                        u7900 ABF8  
                                      u9180 E7F8                                        u7660 0284  
                                      u8550 8752                                        u8470 866C  
                                      u7830 E1E0                                        u7575 757C  
                                      u7815 E1C0                                        u8560 878C  
                                      u7760 20C2                                        u8730 6CFC  
                                      u8570 87C8                                        u7770 E110  
                                      u8555 8742                                        u8660 680E  
                                      u7940 ACD8                                        u7860 14A8  
                                      u7925 AC32                                        u7926 AC38  
                                      u7870 14AA                                        u7775 E106  
                                      u7927 AC46                                        u7960 ADB0  
                                      u7945 ACCE                                        u8770 6D58  
                                      u7890 ABAC                                        _PLLR 01CEE0  
                                      u8675 69A2                                        u8780 6D92  
                                      u8685 6A6A                                        u7965 ADA6  
                                      u8790 6DD8                                        u7990 2172  
                                      u8775 6D48                                        u8695 6C32  
                                      u7895 ABA2                                        u8970 0884  
                   __end_of_display_history BA64                                        _WPUA 003A41  
                                      _WPUB 003A51                                        _WPUC 003A61  
                                      _WPUD 003A71                                        _WPUE 003A81  
                                      _WPUF 003A91                            __end_of_ADCC_ISR 26A4  
                     __size_of___secs_to_tm 10D2                               __CFG_FCMEN$ON 000000  
                              _rule_to_secs 764A                                        _dbuf 0354  
                        __size_of_CRC_Start 0006                                        _cp_h F9F3  
                                      _cp_l F9EF                                        _atoi C77A  
                                      _ctoa 1374                                        _main 0000  
                                      _dtoa 9214                                        _nanf 1B84  
                                      _lock 01D3                                        _seed 02DE  
                                      _prec 004C                                        _time 1C46  
                                      _nout 00BA                                        _spin F967  
                                      fsr0h 003FEA                                        fsr1h 003FE2  
                                      indf0 003FEF                                        fsr2h 003FDA  
                                      fsr0l 003FE9                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        _stoa BD3C  
                                      btemp 002A                                        _utoa AE62  
                                      _xtoa A3C8                      __end_of_check_adc_scan 2D26  
                             ___fpclassifyf E062                                        prodh 003FF4  
                                      prodl 003FF3                                        start 00AE  
                           _timer5ReloadVal 00C4                   __end_of_SPI1_Exchange8bit 2AF0  
                 __size_of_clear_hid_pflags 0066                             _TMR3_Initialize 2020  
               __size_of_set_load_relay_one 0010                 __size_of_set_load_relay_two 0010  
                             __CFG_CSWEN$ON 000000                              _SPI1STATUSbits 003D17  
                         _UART1_rx_vect_isr 28DC                                ___param_bank 000000  
                      display_history@bwait 0053                      __end_of_check_day_time AAF6  
                        ?_UART1_rx_vect_isr 0001                   __size_of_DATAEE_WriteByte 0068  
                          _update_hist_data 1606                            __end_of_INT0_ISR 2CD6  
                          __end_of_INT1_ISR 233E              __size_of_OSCILLATOR_Initialize 0016  
                  __end_of_ringBufS_put_dma 0D7C               __end_of_OSCILLATOR_Initialize 2C06  
                                     l10020 7620                                       l10012 75E0  
                                     l10014 75F0                                       l10030 01BA  
                                     l10008 75C8                                       l10122 E18C  
                                     l10034 0240                                       l10300 CF5E  
                                     l10108 20DE                                       l10132 E1E6  
                                     l10126 E190                                       l10150 14EA  
                                     l10206 1466                                       l10400 85EC  
                                     l10232 F14A                                       l10218 05C6  
                                     l10420 868E                                       l10340 83A4  
                                     l10260 C5F6                                       l10308 D00A  
                                     l10180 AD82                                       l10164 AC14  
                                     l12012 EBEE                                       l12004 EB82  
                                     l10228 F0A4                                       l10510 67CE  
                                     l10502 6788                                       l10414 8672  
                                     l10406 8640                                       l10334 835E  
                                     l12030 D980                                       l10254 C5B0  
                                     l10520 6820                                       l10512 67FE  
                                     l10424 86B4                                       l10408 8644  
                                     l10360 8482                                       l10328 831E  
                                     l12040 D9FA                                       l10272 C6C8  
                                     l10248 C55C                                       l10184 ADCA  
                                     l10610 6DC4                                       l10434 86FE  
                                     l10354 843C                                       l10338 8374  
                                     l12050 DA5C                                       l12042 DA10  
                                     l10178 AD32                                       l10508 67C8  
                                     l10460 87E4                                       l10380 8514  
                                     l10372 84FA                                       l10348 83FC  
                                     l12052 DA7A                                       l12044 DA2E  
                                     l11500 C9D4                                       l10292 CED6  
                                     l10188 AE38                                       l10606 6D7E  
                                     l10454 87B4                                       l10438 8704  
                                     l10390 85A4                                       l10366 84C0  
                                     l10358 8452                                       l12062 DAAE  
                                     l12054 DA90                                       l12038 D9EC  
                                     l10624 6E32                                       l10616 6DEE  
                                     l10448 8778                                       l12072 DB10  
                                     l10626 6E4C                                       l10490 66FA  
                                     l10466 880C                                       l12314 8D8A  
                                     l10730 0854                                       l10802 EA92  
                                     l10572 6C78                                       l10492 6700  
                                     l10484 66BA                                       l10468 881C  
                                     l12340 9060                                       l12324 8EB0  
                                     l12308 8D5A                                       l10804 EAA8  
                                     l11516 D370                                       l10900 D2C4  
                                     l10582 6CBA                                       l10494 6730  
                                     l10742 ECAC                                       l10398 85DA  
                                     l10734 0888                                       l10726 0812  
                                     l11518 D3DC                                       l10830 E7C0  
                                     l11550 E28E                                       l10592 6D04  
                                     l10760 EDC0                                       l10752 ED8A  
                                     l12336 8FC4                                       l12328 8F92  
                                     l11480 C856                                       l11464 C794  
                                     l11544 E25E                                       l11704 59D0  
                                     l10578 6C94                                       l12354 91DC  
                                     l12362 91EE                                       l11490 C938  
                                     l11482 C86E                                       l11474 C82A  
                                     l11466 C7B6                                       l10818 E6EE  
                                     l10850 F6B6                                       l10842 F60A  
                                     l12282 0790                                       l11562 E310  
                                     l11538 E232                                       l11722 5A7C  
                                     l11714 5A48                                       l10596 6D0A  
                                     l10748 ED3C                                       l12348 9140  
                                     l12380 2742                                       l11484 C892  
                                     l11716 5A50                                       l11708 59FE  
                                     l14132 DB82                                       PRLOCK 0039EF  
                                     l14214 E67A                                       l11486 C8D0  
                                     l12278 0752                                       l12286 07A4  
                                     l11742 0360                                       l11646 1A82  
                                     l14302 BCFE                                       l13360 1F00  
                                     l10768 1F66                                       l11728 5B10  
                                     l11664 556A                                       l11672 569A  
                                     l14304 BD28                                       l14160 DCEE  
                                     l14144 DC38                                       l14152 DCEA  
                                     l10866 1E4A                                       l10794 EA66  
                                     l10778 E9E4                                       l16002 BF7E  
                                     l12802 E916                                       l13530 F23E  
                                     l10882 D162                                       l14234 BA80  
                                     l14146 DC6C                                       l13364 1F32  
                                     l12724 A896                                       l10796 EA82  
                                     l16020 AE96                                       l11668 5594  
                                     l14260 BB24                                       l14244 BAC6  
                                     l14236 BA90                                       l14172 1DE2  
                                     l16006 BFBA                                       l12806 E940  
                                     l13534 F2B4                                       l10878 D122  
                                     l11694 595A                                       l11678 56D0  
                                     l14254 BAFC                                       l14238 BA96  
                                     l13710 FB4A                                       l14182 161C  
                                     l12744 A98C                                       l13560 DD7C  
                                     l13624 23E6                                       l16120 A738  
                                     l16104 A64E                                       l10896 D2A0  
                                     l11696 5964                                       l11688 5928  
                                     l14280 BBA4                                       l14272 BB7E  
                                     l14264 BB30                                       l14248 BAD2  
                                     l15402 0EEC                                       l12818 2446  
                                     l13706 FAE8                                       l14194 1654  
                                     l12924 1E86                                       l17100 4CFA  
                                     l13740 F4BC                                       l13556 DD68  
                                     l13548 DD3C                                       l14436 A3BA  
                                     l15412 1012                                       l15404 0F0E  
                                     l15500 F37A                                       l16028 AEF2  
                                     l16060 A3FC                                       l16300 4180  
                                     l13572 10C6                                       l16132 C322  
                                     l14460 9CA4                                       l17110 4F26  
                                     l12758 AA92                                       l13742 F4CA  
                                     l13750 F4D2                                       l16038 B0E8  
                                     l14390 0A4E                                       l16134 C33A  
                                     l13662 239A                                       l14632 153C  
                                     l17120 5066                                       l17104 4D4E  
                                     l13752 F504                                       l13736 F4A6  
                                     l15416 1050                                       l15520 F440  
                                     l16080 A4D2                                       l16072 A472  
                                     l16400 4964                                       l16312 426C  
                                     l16224 3B18                                       l15432 B536  
                                     l12944 15BE                                       l13584 10FC  
                                     l12872 265C                                       l16160 B1F0  
                                     l16152 C4CC                                       l16136 C360  
                                     l14456 9C68                                       l17114 4FA0  
                                     l13738 F4B6                                       l15506 F39A  
                                     l16066 A436                                       l16250 3CEA  
                                     l16226 3B52                                       l14386 0A10  
                                     l16170 B30C                                       l13940 2A8C  
                                     l17140 5434                                       l17124 510E  
                                     l15540 FBBE                                       l15700 194C  
                                     l16332 43CC                                       l16308 4238  
                                     l16228 3B68                                       l15452 B70C  
                                     l15444 B65E                                       l11996 EB3A  
                                     l16172 B316                                       l16180 B43C  
                                     l16164 B28A                                       l14638 154C  
                                     l13766 F5B6                                       l13758 F53C  
                                     l15390 F878                                       l15470 FD1C  
                                     l15614 932C                                       l15606 92E2  
                                     l16342 447A                                       l16246 3C9A  
                                     l16406 4984                                       l15438 B5F4  
                                     l17062 F7DC                                       l17310 D610  
                                     l13686 16B6                                       l13952 26C6  
                                     l17128 5130                                       l17080 4ACC  
                                     l15464 FCE2                                       l15528 F474  
                                     l15544 FBD0                                       l15800 1E9A  
                                     l15704 1978                                       l16096 A5C8  
                                     l16352 459C                                       l16248 3CD4  
                                     l17240 9760                                       l16176 B3B0  
                                     l16440 C198                                       l17056 F776  
                                     l17320 D6E8                                       l15474 FD58  
                                     l15618 934A                                       l15810 2046  
                                     l15730 1AB6                                       l15714 1A1C  
                                     l15722 1A4A                                       l16362 4652  
                                     l16266 3E4E                                       l13874 0962  
                                     l13698 16CE                                       l17092 4BF8  
                                     l17084 4B20                                       l15468 FD0A  
                                     l15580 1392                                       l15652 964A  
                                     l15628 955C                                       l15548 FBE8  
                                     l15484 0676                                       l15740 1BF2  
                                     l16284 3FD2                                       l16276 3EE6  
                                     l17236 974C                                       l15478 FDA2  
                                     l15582 13BE                                       l15494 F364  
                                     l15566 FC9C                                       l15558 FC68  
                                     l15910 26F6                                       l15734 1B26  
                                     l16390 4906                                       l16446 C206  
                                     l16438 C174                                       l16702 6310  
                                     l13878 09DE                                       l17088 4B8C  
                                     l15648 960E                                       l15912 2710  
                                     l15832 2232                                       l15824 2168  
                                     l15752 1C74                                       l15736 1B90  
                                     l16376 47CE                                       l16288 4026  
                                     l16616 0DD4                                       l17408 D8CE  
                                     l17248 97C2                                       l16712 63F0  
                                     l13978 22A2                                       l17338 17DC  
                                     l15922 27B2                                       l15834 2254  
                                     l15666 17CC                                       l16466 2368  
                                     l16730 6570                                       l17362 BA50  
                                     l13996 22E2                                       l15932 2802  
                                     l15860 23DA                                       l15772 1D16  
                                     l15764 1CB4                                       l15756 1C9C  
                                     l16396 4960                                       l16636 0C52  
                                     l16820 35A4                                       l16580 7804  
                                     l17604 07C8                                       l15790 1DD8  
                                     l15774 1D22                                       l15758 1CAE  
                                     l15678 1810                                       l15686 1866  
                                     l16638 0C94                                       l17286 9A4A  
                                     l16806 32D8                                       l16582 7858  
                                     l16726 6552                                       l17294 D51C  
                                     l17710 0DEC                                       l17630 099C  
                                     l17622 0958                                       l17462 0066  
                                     l15848 2352                                       l15696 190A  
                                     l16656 0FDA                                       l16648 0F76  
                                     l16840 37BC                                       l16832 36C2  
                                     l16824 3604                                       l16816 3398  
                                     l16808 32DE                                       l16760 2CCE  
                                     l17368 BA54                                       l17544 045E  
                                     l17536 03F2                                       l17464 007A  
                                     l17456 0040                                       l15794 1E10  
                                     l15698 1936                                       l17394 D7A6  
                                     l16738 663E                                       l16690 600A  
                                     l17722 1348                                       l17642 09D0  
                                     l17538 041C                                       l17458 0048  
                                     l15948 28BA                                       l15868 2444  
                                     l15876 24B0                                       l15884 25C2  
                                     l16908 FA3C                                       l16780 3092  
                                     l16748 2A22                                       l16692 602A  
                                     l17804 170C                                       l17628 096C  
                                     l16774 300A                                       l16766 2E0A  
                                     l16598 7BBC                                       l16686 5EF4  
                                     l16918 CCA2                                       l17726 13AA  
                                     l15896 265A                                       l15992 BEC8  
                                     l15984 BE5C                                       l15968 BDA8  
                                     l16872 1130                                       l16688 5F14  
                                     l17752 15B2                                       l17736 152C  
                                     l17672 0B82                                       l17648 09F6  
                                     l17592 06EE                                       l16874 1138  
                                     l16938 EF52                                       l16970 019C  
                                     l17738 1558                                       l17666 0B4A  
                                     l15988 BE98                                       l16876 1142  
                                     l16884 1156                                       l16964 00EA  
                                     l16796 323A                                       l16788 3166  
                                     l17692 0CCA                                       l15998 BF52  
                                     l16878 1150                                       l16886 1182  
                                     l17790 1690                                       l17782 165A  
                                     l17766 160A                                       l17784 1672  
                                     l17776 1648                                       l17794 16B6  
                                     l17698 0CEC                             __end_of___aldiv E38C  
                           __end_of___aodiv C77A                                _Volts_to_SOC 0950  
                                     _ADCAP 003EF5                                       _ADACT 003EFE  
                           __end_of___almod EC6A                             __end_of___fladd 764A  
                                     _ADCLK 003EFF                             __end_of___aomod D0B8  
                                     _ADPCH 003EF1                             __end_of___fldiv 8842  
                                     _ADREF 003EFD                             __end_of___awdiv F48E  
                           __end_of___flneg 1F90                                       STR_10 FBB9  
                                     STR_11 FBB9                                       STR_12 FBB9  
                                     STR_20 FBB7                                       STR_13 FBB9  
                                     STR_21 FD95                                       STR_14 FF32  
                                     STR_30 FEB3                                       STR_22 FDAB  
                                     STR_15 FF5C                                       STR_23 FE5B  
                                     STR_31 FD7F                                       STR_32 FE2F  
                                     STR_24 FE19                                       STR_16 FD69  
                                     STR_40 FC58                                       STR_33 FF96  
                                     STR_41 FC41                                       STR_25 FBCE  
                                     STR_17 FB25                               __CFG_WDTE$OFF 000000  
                                     STR_42 FD10                                       STR_18 FBE5  
                                     STR_26 FAD5                                       STR_50 FA9B  
                                     STR_35 FF84                                       STR_43 FCE2  
                                     STR_19 FCCB                                       STR_51 FB3F  
                                     STR_27 FAF0                                       STR_28 FF76  
                                     STR_60 FF47                                       STR_44 FCF9  
                                     STR_36 FCB4                                       STR_52 FB6F  
                           __end_of___awmod FCB6                                       STR_29 FF76  
                                     STR_61 FE45                                       STR_37 FC9D  
                                     STR_45 FBFC                                       STR_53 FB87  
                                     STR_54 FE87                                       STR_62 FD3D  
                                     STR_38 FC86                                       STR_46 FC13  
                                     STR_70 FAB9                                       STR_71 FAB9  
                                     STR_55 FE87                                       STR_63 FE9D  
                                     STR_39 FC6F                                       STR_47 FC2A  
                                     STR_72 FAB9                                       STR_64 FE03  
                                     STR_80 FFC2                                       STR_56 FE87  
                                     STR_48 FB57                                       _ADRPT 003EEC  
                                     STR_73 FF76                                       STR_81 FFA7  
                                     STR_57 FE03                                       STR_65 FD53  
                                     STR_49 FB9F                                       STR_82 FFA7  
                                     STR_74 FFFC                                       STR_66 FDED  
                                     STR_58 FDD7                                       STR_67 FE03  
                                     STR_83 FFA7                                       STR_75 FFB6  
                                     STR_59 FDC1                                       STR_68 FD53  
                                     STR_84 FFA7                                       STR_76 FFCC  
                           __end_of___lbmod 1002                                       STR_77 FF71  
                                     STR_69 FE71                                       STR_85 FB0B  
                                     STR_94 FA75                                       STR_78 FF71  
                                     STR_86 FEC9                                       STR_79 FFC2  
                                     STR_87 FEDE                                       STR_95 F9F7  
                                     STR_96 FFDA                             __end_of___flmul 6E8E  
                                     STR_97 FFE2                             __end_of___flsub 213A  
                           __end_of___fltol EB04                                       u10400 C826  
                                     u10420 C97E                                       u11300 EC40  
                                     u11220 EB34                                       u10430 C980  
                                     u10510 D4A4                                       u10520 D4D2  
                                     u10600 E338                                       u11240 EB62  
                                     u12105 1982                                       u12106 1984  
                                     u11250 EB7C                                       u10515 D49E  
                           __end_of___lodiv E820                                       u10620 E362  
                                     u10540 E22C                                       u11260 EB9E  
                                     u10517 D490                                       u10470 D40A  
                                     u12310 2C6A                                       u10527 D4C4  
                                     u12080 1932                                       u10560 E25A  
                                     u11280 EC16                                       u10800 5980  
                                     u11370 DAA4                                       u10570 E288  
                                     _U1P1H 003DED                                       u10731 54CA  
                                     u10580 E2AA                                       u10820 5A1A  
                                     u10724 1AA0                                       _U1P2H 003DEF  
                                     u12245 21AE                                       u10477 D3FC  
                                     u10725 1A9A                                       u11614 8D74  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 8D6E                                       _T3CLK 003FA9  
                                     u12440 1A02                                       u11720 90A4  
                                     u11560 0744                                       u12088 1934  
                                     u10840 5AEE                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u12610 DD1A  
                                     u11714 909C                                       u11634 8DA4  
                                     u12370 15BA                                       u10850 5AF0  
                                     _U1P3L 003DF0                                       u11715 9096  
                                     u11635 8D9E                                       u12515 2C58  
                                     u13411 1640                                       u12516 2C5A  
                                     u13340 DCEA                                       u11565 073E  
                                     u12525 2C48                                       u11654 8DC6  
                                     u12294 E8C2                                       u10870 0342  
                                     u12526 2C4A                                       _U2P1L 003DD4  
                                     u11655 8DC0                                       u12295 E8BC  
                                     u13351 1DBC                                       u13431 166A  
                                     u14400 06F0                                       u16000 4856  
                                     u10880 2CA2                                       u12640 10C2  
                                     _T3CON 003FA6                                       _U2P2L 003DD6  
                                     u12465 1A36                                       u12466 1A38  
                                     u12458 1A04                                       u11674 8FAC  
                                     u14250 F86C                                       _U2P3L 003DD8  
                                     u11675 8FA6                                       u15220 27D8  
                                     u15060 2138                                       u12660 10F6  
                                     u13380 1618                                       u11694 907A  
                                     u14270 F8E8                                       u14350 B780  
                                     u16110 77DE                                       u11695 9074  
                                     u14407 06E2                                       _T5CLK 003F9D  
                                     u14280 0F3C                                       u14600 9246  
                                     u14520 FC14                                       u15240 288E  
                                     u15160 2604                                       u15320 BEBE  
                                     u16120 77F0                             __end_of___lomod F710  
                                     u14450 F3C6                                       u15250 2890  
                                     u15330 BF04                                       u16050 C14A  
                                     u15411 B12A                                       u12780 2A5A  
                                     u14700 95CA                                       u14620 92B6  
                                     u14540 FC88                                       u15420 B140  
                                     u15500 A51E                                       u17020 D91E  
                                     _T2HLT 003FAD                                       u15421 B13E  
                                     u14710 95CE                                       u14470 F460  
                                     u15430 B154                                       u15510 A520  
                                     u17030 D920                                       u17110 0578  
                                     u14287 0F2E                                       u14640 92C8  
                                     u14800 18B4                                       u15360 BFE0  
                                     u15440 B158                                       u15600 A6C4  
                                     u16320 29BE                                       _T5CON 003F9A  
                                     u15337 BEF6                                       u12786 2A5C  
                                     u14730 95E4                                       u14810 18B6  
                                     u15610 A6C8                                       u15530 A57E  
                                     u16170 0DB4                                       u16330 2A0E  
                                     u17130 07F6                                       u14660 9318  
                                     u15380 AE7C                                       u15540 A580  
                                     u15460 A3E2                                       u16420 32D8  
                                     u15700 B43C                                       u16500 CC62  
                                     u17300 15A2                                       u17140 0920  
                                     u14670 9570                                       u14590 9244  
                                     u15630 C2F4                                       u16510 CC98  
                                     u17310 15BC                                       u17150 0922  
                                     u14920 1C82                                       u14840 19C6  
                                     u15560 A64A                                       u15800 3D34  
                                     u17320 15CE                                       u17240 0B8E  
                                     _T6CON 003F94                                       u14681 95A0  
                                     u14690 95B6                                       u14850 19C8  
                                     u14770 17FA                                       u15570 A66A  
                                     u15490 A4CA                                       u15810 3D5A  
                                     u16290 6484                                       u17306 15A4  
                                     u14691 95B4                                       u15740 3BB0  
                                     u16460 368C                                       u16620 F7B8  
                                     u17316 15BE                                       u15581 A69A  
                                     u15565 A62C                                       u16445 33BA  
                                     u14950 1CE6                                       u15590 A6B0  
                                     u15910 4326                                       u15750 3BB2  
                                     u16470 373A                                       u17326 15D0  
                            __CFG_DEBUG$OFF 000000                                       u15591 A6AE  
                                     u16471 3736                                       u15920 4328  
                                     u15760 3BD8                                       u15680 B2F4  
                                     u16608 F754                                       u14890 1C2E  
                                     u16650 F81E                                       u15860 3F3A  
                                     u14990 1D68                                       u15790 3D32  
                                     u16638 F7BA                                       u16590 F752  
                                     u15880 40AE                                       u15980 46A6  
                                     u16860 9908                                       u16668 F820  
                                     _T6HLT 003F95                                       u16870 9932  
                                     u16865 98FA                  _ADCC_ADTI_InterruptHandler 00A1  
                                     u16875 9924                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0006                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 23B4  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2D6C                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 9694  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 2964  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 8D58  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR EF2E  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 109A  
                                     ___gmt F9E7                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR E062                             __end_of_getname B49E  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 2B7E  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 0046  
                           _DATAEE_ReadByte 252A                                       _fabsf 0B78  
                           __end_of_getrule C4FA                                       _flags 004E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0440                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 2CC6                                       _fputc F848  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 217E  
                                     _fputs 1002                             __end_of_isdigit 261C  
                           __end_of_ivln2_h F9EF                                       _put2d F96C  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 245A  
                                     _width 004A                                       _putch 2B4A  
              __end_of_set_ac_charger_relay 2C8E                             __end_of_islower 25BC  
                           __end_of_isspace 1E5A                    _INT1_SetInterruptHandler 283A  
                           __end_of_set_dac 0B78                             __end_of_isupper 25EC  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 002A                                       ltemp1 002E  
                                     ltemp2 0032                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 002A  
                                     ttemp1 002D                                       ttemp2 0030  
                                     ttemp3 0033                                       ttemp5 002B  
                                     ttemp6 002E                                       ttemp7 0032  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 27C2  
               _UART1_SetRxInterruptHandler 279A                                       wtemp0 002A  
                                     wtemp1 002C                                       wtemp2 002E  
                                     wtemp3 0030                                       wtemp4 0032  
                                     wtemp5 0034                                       wtemp8 002B  
                           __end_of_sprintf FED4                             __end_of_tolower 1504  
                           __end_of_strncmp D508                             __end_of_toupper 1480  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 2904  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 1E08  
                           _TMR5_Initialize 1FD8                       __end_of_ringBufS_init 2722  
                           __initialization 0474                           _UART2_rx_vect_isr 292C  
                             ___localtime_r CC34                                __end_of_cp_h F9F7  
                              __end_of_cp_l F9F3                                __end_of_atoi C9EE  
                              __end_of_ctoa 13FC                                __end_of_main 1720  
                              __end_of_dtoa 9694                                __end_of_nanf 1BE6  
                              __end_of_time 1CA4                                __end_of_spin F9DF  
                              __end_of_stoa BFFA                                __end_of_utoa B1A2  
                              __end_of_xtoa A782                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0001                     __end_of_TMR2_Initialize 2BAE  
                     __end_of_send_lcd_data 2978                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 17E6                           __end_of_CRC_Start 2D52  
                  _TMR5_SetInterruptHandler 27EA                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 0098  
                         _port_data_dma_ptr 2CF0                          esr_check@esr_state 00C6  
                       ??_UART2_rx_vect_isr 0006                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 26D0                             _PWM8_Initialize 2BDA  
                          _UART1_Initialize 1F90                           _UART2_tx_vect_isr 2904  
                        _UART2_Transmit_ISR 26A4                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 1ABE                                      _ADLTHH 003EDF  
                                    STR_100 FFDE                                      _ADLTHL 003EDE  
                                    STR_101 FFE6                                      STR_110 FFF3  
                                    STR_120 FFF6                                      STR_104 FFED  
                                    STR_113 FFF0                                      STR_106 FFED  
                                    STR_115 FFF0                                      STR_123 FFF9  
                                    STR_108 FFF3                                      STR_132 FD27  
                                    STR_125 FFF9                                      STR_133 FA76  
                                    STR_118 FFF6                                      STR_127 FFEA  
                                    STR_129 FFEA                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6                                      _DMA1PR 0039F3  
                                    _DMA2PR 0039F4                                      _ADSTAT 003EFC  
                                    _ADUTHH 003EE1                                      _ADUTHL 003EE0  
                        _PWM8_LoadDutyValue 217E                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                                    _ANSELD 003A70                                      _ANSELE 003A80  
                                    _ANSELF 003A90                          ?_UART2_tx_vect_isr 0001  
                                    _U1CON0 003DF2                                      _U1CON1 003DF3  
                                    _U1CON2 003DF4                                      _T3GATE 003FA8  
                                    _U1BRGH 003DF6                                      _U1FIFO 003DF7  
                                    _T3GCON 003FA7                                      _U2CON0 003DDA  
                                    _U2CON1 003DDB                                      _U1BRGL 003DF5  
                                    _U2CON2 003DDC                                      _U2BRGH 003DDE  
                                    _U2FIFO 003DDF                                      _U2BRGL 003DDD  
                                    _T5GATE 003F9C                                      _T5GCON 003F9B  
                                    _MAINPR 0039F2                                      _RC3PPS 003A13  
                                    _RD1PPS 003A19                                      i1l1021 DFB2  
                                    _RB6PPS 003A0E                                      i1l1209 EE96  
                      _start_switch_handler 2A92                                      _RC5PPS 003A15  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      _RC6PPS 003A16  
                                    _ODCOND 003A72                                      _ODCONE 003A82  
                                    _ODCONF 003A92                     __end_of_TMR3_Initialize 2068  
                            __CFG_WDTCCS$SC 000000                                      _FVRCON 003EC1  
                          _mode_lamp_bright 2CAA                                      _SCANPR 0039F7  
                                    _IVTADH 00389E                                      _IVTADL 00389D  
                                    _IVTADU 00389F                __size_of_eaDogM_WriteCommand 000E  
                                    _OSCFRQ 0039DF                                      _NVMDAT 0039E3  
                      __size_of_hid_display 021C                            __end_of___xxtofl DB3A  
     __end_of_ADCC_DischargeSampleCapacitor 2D2E      __size_of_ADCC_DischargeSampleCapacitor 0008  
             _ADCC_DischargeSampleCapacitor 2D26                    __end_of_send_lcd_cmd_dma 2B0E  
                           _TMR3_WriteTimer 22C0                         ??_UART2_tx_vect_isr 0006  
                 __end_of_UART2_rx_vect_isr 2954                  __size_of_SPI1_Exchange8bit 001E  
                    __size_of_DMA1_DMAA_ISR 000A                     __size_of___secs_to_zone 08A2  
                            __CFG_XINST$OFF 000000                           _CLKREF_Initialize 2CE6  
                          _UART2_Initialize 1BE6                                      _WaitMs 2424  
                           _conv_raw_result 8D58                                _CCPTMRS1bits 003F5F  
      __size_of_ADCC_SetADIInterruptHandler 0028                            __end_of_do_tzset C27A  
                                    ___flge EC6A                                      ___fleq 07D0  
                                    ___lmul 0558                                      ___omul F08E  
                         _ADCC_ThresholdISR 18BC                              __CFG_STVREN$ON 000000  
                                    _crcObj 00E2                              _ringBufS_flush 11BE  
                                    _efgtoa 1720                                      _getoff D0B8  
                                    _getint 01AC                                      _floorf AAF6  
                         dac_spi_control@S0 00CB                           dac_spi_control@S1 00CA  
                         dac_spi_control@S2 00C9                           dac_spi_control@SB 00C7  
                         dac_spi_control@SC 00C8                          ?_ADCC_ThresholdISR 0001  
                                    _memset B49E                                      _pclock 00DA  
                      __size_of_help_button 0038                                      clear_0 04E6  
                                    clear_1 04F8                                      clear_2 0504  
                                    clear_3 0510                                      clear_4 051C  
                                    clear_5 0528                                      clear_6 0534  
                                    clear_7 0540                                      _t_mbmc 00BC  
                 __end_of_port_data_dma_ptr 2CFA                      __size_of_read_cal_data 01CA  
                                    _printf 1B22                          _eaDogM_WriteString 0D7C  
                   __end_of_DATAEE_ReadByte 255C                                      _strcpy 062E  
                                 ?_ADCC_ISR 0001                                      _strlen 0EC6  
                        __size_of_TimerDone 0028                                __pdataBIGRAM 06FF  
                           _ADCC_Initialize 1850                              _PMD_Initialize 2C06  
                __size_of_update_adc_result 003A                   __end_of_UART2_tx_vect_isr 292C  
                          __end_of_set_time 0000                                      lltemp0 002A  
                                    lltemp1 0032                                      lltemp2 003A  
                                    lltemp3 0042                         ??_ADCC_ThresholdISR 0001  
                    __end_of_start_adc_scan 1B22                                __mediumconst F7AA  
                                    preinc2 003FDC                      __size_of_init_port_dma 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                            __end_of_wdtdelay 1D58  
                          __end_of_spinners 01AC                            __end_of_vfprintf 0CD2  
                                _StartTimer 2240                          __size_of___asfladd 0078  
                               localtime@tm 03DF               __size_of_INTERRUPT_Initialize 0066  
                   __end_of_TMR5_Initialize 2020                           _SYSTEM_Initialize 1EAC  
                                ___daylight 00B8                                  __accesstop 0060  
                   __end_of__initialization 0552                                   ?_INT0_ISR 0001  
                                 ?_INT1_ISR 0001                        __end_of_display_help 2D3E  
                      __end_of_display_info 2D36                   __end_of_CLKREF_Initialize 2CF0  
                             ___rparam_used 000001                  __size_of_UART1_rx_vect_isr 0028  
                           _TMR5_WriteTimer 2280                       _set_temp_display_help 2C6E  
                          _clear_hid_pflags 198E                       __end_of_TMR3_CallBack 29E4  
                 __end_of_ADCC_ThresholdISR 1926                       __end_of_set_hist_flag 2D4C  
                        __size_of_calc_bsoc 0A6E                      __end_of_ringBufS_flush 1250  
                            __pcstackCOMRAM 0001                                  ___inthi_sp 132C  
                                ___intlo_sp 1996                                __pidataBANK1 0E22  
                              __pidataBANK2 0894                               __end_of___gmt F9EB  
               __size_of_send_port_data_dma 0052                               __end_of_fabsf 0C26  
                                 ?_TMR3_ISR 0001                                   ?_TMR5_ISR 0001  
                                 ?_TMR6_ISR 0001                            _DATAEE_WriteByte 1926  
                            ivt0x8_undefint 00AC                               __end_of_fputc F96C  
                             __end_of_fputs 109A                        _get_ac_charger_relay 2CB8  
                             __end_of_put2d FA86                               __end_of_srand 248E  
                     __end_of_TMR5_CallBack 29C0                               __end_of_putch 2B64  
                      _set_ac_charger_relay 2C7E                     __end_of_PWM8_Initialize 2BF0  
                   __end_of_TMR6_Initialize 26FA                           _adc_int_t_handler 1504  
                    __end_of_PMD_Initialize 2C1A                                  __end_of_bp F9E7  
                                ___timezone 0070                                  ??_ADCC_ISR 0001  
                     __end_of_TMR6_CallBack 2A2C                 __size_of_EXT_INT_Initialize 0034  
                  calc_bsoc@log_update_wait 0050                      __size_of_calc_ror_data 0186  
                             _DMA1_DMAA_ISR 2D08                       TMR3_ISR@CountCallBack 00BE  
                            _clear_adc_scan 2D52                          __size_of_hid_input 0138  
                        __end_of_CRC_IsBusy 2C6E                      __size_of_mode_lamp_dim 0018  
                          time@current_time 00D2                            _CRC_ReverseValue 0702  
                  _UART2_RxInterruptHandler 00AD                   __end_of_SYSTEM_Initialize 1EFA  
                           __CFG_PR1WAY$OFF 000000                             __CFG_IVT1WAY$ON 000000  
                   __end_of_TMR3_WriteTimer 2300                                  __pbssBANK0 0060  
                                __pbssBANK1 01A4                                  __pbssBANK2 02BC  
                                __pbssBANK3 0300                                  __pbssBANK4 0400  
                                __pbssBANK5 0500                                  __pbssBANK6 0600  
                  __end_of_update_hist_data 1682                                  _check_help D724  
                             _read_cal_data DB3A                     __end_of_conv_raw_result 9214  
                        __size_of_esr_check 02D8                       _INT0_InterruptHandler 00B3  
                                ??_INT0_ISR 0001                                  ??_INT1_ISR 0007  
                     __end_of_days_in_month 1ABE                           __end_of_TimerDone 274A  
                          _DMA1_DMADCNT_ISR 2CFC                             _convert_dac_raw FA86  
                        __size_of_init_bsoc 0246                  __size_of_UART2_rx_vect_isr 0028  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                          __size_of_lp_filter 01BC  
                        __size_of_localtime 0016                               _init_port_dma 255C  
                     __end_of_wait_lcd_done 2CAA                    __end_of_cal_current_zero 112C  
          __end_of_TMR3_SetInterruptHandler 283A                             __CFG_PPS1WAY$ON 000000  
          __end_of_TMR6_SetInterruptHandler 27EA                                  ??_TMR3_ISR 00E5  
                   __end_of_ADCC_Initialize 18BA                                  ??_TMR5_ISR 000B  
                 __end_of_adc_int_t_handler 1586                                  ??_TMR6_ISR 0006  
                         __end_of___asfladd 1774                                     _ADFLTRH 003EE7  
                                   _ADFLTRL 003EE6                                     _DMA1DSA 003BF0  
                                   _DMA2DSA 003BD0                                     _DMA1DSZ 003BEE  
                                   _DMA2DSZ 003BCE                                     _DMA1SSA 003BF9  
                                   _DMA2SSA 003BD9                          __size_of_set_dac_a 0034  
                        __size_of_set_dac_b 0034        __end_of_ADCC_SetADTIInterruptHandler 28B2  
     __size_of_ADCC_SetADTIInterruptHandler 0028                _ADCC_SetADTIInterruptHandler 288A  
                                   _DMA1SSZ 003BF7                                     _DMA2SSZ 003BD7  
                __size_of_port_data_dma_ptr 000A                                     _ADSTPTH 003EE5  
                                   _ADSTPTL 003EE4                                     _CRCACCH 003963  
                                   _CRCACCL 003962                     __size_of_load_hist_data 0466  
                                   _CRCDATH 003961                                     _CRCDATL 003960  
                         _UART1_Receive_ISR 2A70                                     _CRCCON0 003968  
                                   _CRCCON1 003969                                     _CLKRCLK 003CE6  
                                   _CLKRCON 003CE5                      __end_of_clear_adc_scan 2D58  
                                   _CRCXORH 003967                                     _CRCXORL 003966  
                                   u1215_20 A8B8                              ?_DMA1_DMAA_ISR 0001  
                          _DMA1_DMASCNT_ISR 2CD8                                     _U1ERRIE 003DFA  
                                   u1250_20 23F4                                     u1321_48 2A18  
                                   u1313_48 29F4                                     u1250_26 23F6  
                        __size_of_set_vterm 001E                                     _U1ERRIR 003DF9  
                                   u1315_28 2988                                     u1324_28 29AC  
                                   _U2ERRIE 003DE2                                     u1239_20 2CC2  
                                   _U2ERRIR 003DE1                                     u1175_25 2C88  
                                   u1175_26 2C8A                                     u1281_20 F4C6  
                                   u1281_21 F4C0                                     u1285_24 F5AC  
                                   u1285_25 F5A8                                     u1279_28 F4AC  
                                   u1377_44 156C                                     u1377_45 1566  
                         _CRC_8BitDataWrite 2C1A                                     _INT0PPS 003AC0  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                              ?_Default_ISR 0001                                     u1675_20 5056  
                                   u1682_28 29D0                  __size_of_UART2_tx_vect_isr 0028  
                                   u1677_20 5120                                     _U1RXPPS 003AE5  
                                   _U2RXPPS 003AE8                             _dac_spi_control 1682  
                                   _OSCCON1 0039D9                                     _OSCCON3 0039DB  
                                   _IVTLOCK 003FD4                          __size_of_vfpfcnvrt 0FAC  
                                   _SPI1CLK 003D1C                                     _SPI1RXB 003D10  
                                   _NVMADRH 0039E1                                     _NVMADRL 0039E0  
                         __end_of_calc_bsoc 5450                                     _SPI1TXB 003D11  
                                   _OSCTUNE 0039DE                                     _NVMCON2 0039E6  
                                   _PWM8DCH 003F61                                     _PWM8DCL 003F60  
                                   _PWM8CON 003F62                                     _SLRCONA 003A43  
                                   _SLRCONB 003A53                                     _SLRCONC 003A63  
                                   _SLRCOND 003A73                                     _SLRCONE 003A83  
                                   _SLRCONF 003A93                          __size_of_zi_read32 00F6  
                                _get_switch 264A                          __size_of_start_lcd 0006  
                   __size_of___year_to_secs 0972                     __end_of_TMR5_WriteTimer 22C0  
                   __size_of_switch_handler 0142                          __size_of_stop_bsoc 0006  
                __end_of_set_load_relay_one 2C5E                  __end_of_set_load_relay_two 2C4E  
         __size_of_INT0_SetInterruptHandler 0028                  __size_of_CLKREF_Initialize 000A  
                             _calc_ror_data E51A                              ___secs_to_zone 5DC2  
                   __size_of_DMA1_DMAOR_ISR 000A                                     __Hparam 0000  
                __size_of_ADCC_ThresholdISR 006A                               _mode_lamp_dim 2B7E  
                                   __Lparam 0000                    __end_of_UART1_Initialize 1FD8  
                         __end_of_hid_input F848                             __size_of_WaitMs 0036  
                                   ___aldiv E1F8                             __size_of___flge 0162  
                           __size_of___fleq 00C4                                     ___aodiv C4FA  
                                   ___almod EB04                                     ___fladd 6E8E  
                                   ___aomod CE78                                     ___fldiv 82C8  
                                   ___awdiv F340                                     ___flneg 1F48  
                           __size_of___lmul 00D6                                     ___awmod FB9E  
                           __size_of___omul 015A                                     ___lbmod 0F68  
                                   ___flmul 6664                                     ___flsub 20F4  
                                   ___fltol E992                                     ___lodiv E6A0  
                                   ___lomod F5D0                   __end_of_UART1_Receive_ISR 2A92  
                           __size_of_efgtoa 1244                             __size_of_getoff 0230  
                           __size_of_getint 00F2                             __size_of_floorf 036C  
                      __end_of_init_display 0474                                     __pcinit 0474  
                  __end_of_mode_lamp_bright 2CB8                             __size_of_memset 02EC  
                  __size_of_adc_int_handler 0002                         _eaDogM_WriteCommand 2C8E  
                                   __ramtop 2000                   __end_of_CRC_8BitDataWrite 2C2C  
                                   __ptext0 0000                                     __ptext1 1606  
                                   __ptext2 1DB2                                     __ptext3 1CA4  
                                   __ptext4 2A92                                     __ptext5 245A  
                                   __ptext6 FFCA                                     __ptext7 2D46  
                                   __ptext8 248E                                     __ptext9 24C2  
                         __end_of_esr_check BD3C                           _UART2_Receive_ISR 2AB2  
                                   _asctime 8842                             __size_of_printf 0062  
                                   _getname B1A2                             __CFG_WRTAPP$OFF 000000  
                           __size_of_strcpy 00D4                             __size_of_strlen 00A2  
                                   _getrule C27A                                     _dst_off 00B6  
                     _OSCILLATOR_Initialize 2BF0                                __size_of_abs 0046  
                                   us811999 F1D2                                __size_of_pad 0114  
                         __end_of_init_bsoc CC34                                     _isalpha 213A  
                                   us823999 C764                                     _isdigit 25EC  
                                   _ivln2_h F9EB                                     us834999 D0A6  
                                   us924999 F700                                   _T3CONbits 003FA6  
                                   us919999 E80A                                     _mode_sw 00CC  
                         __end_of_lp_filter DEC0                           __end_of_localtime 2BC4  
                                   _islower 258C                                     _isspace 1E08  
                           __CFG_WRTSAF$OFF 000000                                  _scan_trans 233E  
                                 _T5CONbits 003F9A                                     _set_dac 0AC2  
                  __end_of_UART2_Initialize 1C46                                     _isupper 25BC  
                                 _CRC_Start 2D4C                                  _old_tz_buf 03A4  
                __size_of_SYSTEM_Initialize 004E                                     _sprintf FDCA  
                                   _tolower 1480                       __size_of_display_help 0008  
                                   _utctime 01D7                     __end_of_convert_dac_raw FB9E  
                     __size_of_display_info 0008                                     _strncmp D2E8  
                                   _toupper 13FC                        end_of_initialization 0552  
                 __size_of_convert_adc_data 00B8                                   _SCANHADRH 00397A  
                                 _SCANHADRL 003979                                   _SCANHADRU 00397B  
                                 _SCANLADRH 003977                                   _SCANLADRL 003976  
                        _check_enter_button 1774                                   _SCANLADRU 003978  
                         __end_of_set_dac_a 24F6                           __end_of_set_dac_b 24C2  
                    __end_of___secs_to_zone 6664                                   i1u1704_20 EE8C  
       __end_of_UART2_SetRxInterruptHandler 279A                 _UART2_SetRxInterruptHandler 2772  
                   check_day_time@day_delay 0051                                   i2u1380_48 2690  
                         __end_of_set_vterm 2B2C                                   i2u1382_48 18F2  
                                 i2u1382_49 1906                                   i2u1384_48 28F0  
                                 i2u1386_48 2918                                   i2u1388_48 2940  
                         __end_of_vfpfcnvrt 49E2                                   _SPI1TCNTL 003D12  
                                   postdec0 003FED                                     postdec1 003FE5  
                                   postdec2 003FDD                                     postinc0 003FEE  
                                   postinc1 003FE6                                     postinc2 003FDE  
                         __end_of_zi_read32 FFCA                  __size_of_adc_int_t_handler 0082  
                       __size_of_StartTimer 0040                           __end_of_start_lcd 2D64  
                 __end_of_UART2_Receive_ISR 2AD2                              wdtdelay@dcount 0090  
                   __end_of_dac_spi_control 16FC                 __size_of_current_sensor_cal 0474  
                     __CFG_WDTCPS$WDTCPS_31 000000                             ??_DMA1_DMAA_ISR 0007  
                     _INT1_InterruptHandler 00B0                                   _PORTBbits 003FCB  
                         __end_of_stop_bsoc 2D6A                                   _PORTDbits 003FCD  
                  _TMR3_SetInterruptHandler 2812                                   _PORTFbits 003FCF  
                  _TMR6_SetInterruptHandler 27C2                                _display_help 2D36  
                     _TMR5_InterruptHandler 009B                                _display_info 2D2E  
      __size_of_UART2_SetTxInterruptHandler 0028                    __end_of_clear_hid_pflags 19F4  
                         __size_of_ADCC_ISR 002C         __end_of_ADCC_SetADIInterruptHandler 28DA  
               _ADCC_SetADIInterruptHandler 28B2                                  asctime@buf 03C4  
                                _update_lcd EF2E                             _calc_model_data 9F6E  
                    __size_of_ringBufS_init 0028                            __CFG_FEXTOSC$ECH 000000  
                                _static_soc 1CA4                    __end_of_DATAEE_WriteByte 198E  
                           _DMA1_Initialize 17E6                         __end_of_check_range 1606  
                                _start_bsoc 2A4E                    __size_of___month_to_secs 00EC  
                    __size_of_send_lcd_data 0024                             _SPI1_Initialize 2BC4  
                     __end_of_get_vterm_ptr 264A                           __size_of_INT0_ISR 000E  
                         __size_of_INT1_ISR 003E                    __size_of_display_history 02DA  
                  __end_of_CRC_ReverseValue 07D0                              __end_of_WaitMs 245A  
              __end_of_INTERRUPT_Initialize 1A5A                                  _vterm_dump E38C  
                            __end_of___flge EDCC                              __end_of___fleq 0894  
      __end_of_INT0_DefaultInterruptHandler 2D78       __size_of_INT0_DefaultInterruptHandler 0002  
              _INT0_DefaultInterruptHandler 2D76                  __size_of_UART1_Receive_ISR 0022  
                           _DMA2_Initialize 1D58                              __end_of___lmul 062E  
                            __end_of___omul F1E8                               __pidataBIGRAM 7D06  
                            _load_hist_data 9B08                              __end_of_efgtoa 2964  
                __size_of_CRC_8BitDataWrite 0012                           __size_of_TMR3_ISR 0162  
                            __end_of_getoff D2E8                           __size_of_TMR5_ISR 01A2  
                            __end_of_getint 029E                           __size_of_TMR6_ISR 001A  
                       __size_of_check_help 0212                              __end_of_floorf AE62  
               __size_of_UART2_Transmit_ISR 002C                                  floorf@F524 0074  
                            __end_of_memset B78A  __end_of___month_to_secs@secs_through_month F8AB  
        ___month_to_secs@secs_through_month F87B                              __end_of_printf 1B84  
                  __end_of_DMA1_DMADCNT_ISR 2D06                 __size_of_PWM8_LoadDutyValue 0042  
                     __end_of_INT0_CallBack 2A08                              __end_of_strcpy 0702  
                            __end_of_strlen 0F68                         start_initialization 0474  
                   __size_of_write_cal_data 0158        __end_of_TMR5_DefaultInterruptHandler 2424  
     __size_of_TMR5_DefaultInterruptHandler 0038                _TMR5_DefaultInterruptHandler 23EC  
           __size_of_PIN_MANAGER_Initialize 0092                                 __end_of_abs 20F4  
                     __end_of_INT1_CallBack 299C                   __size_of_set_display_info 001E  
                               __end_of_pad FDCA                        __size_of_Default_ISR 0006  
                   __size_of_CRC_Initialize 0092                              ___year_to_secs 5450  
                      __end_of_send_lcd_cmd 2240                              _switch_handler F48E  
             __size_of_ADCC_StartConversion 0012                                  ivt0x8_base 0008  
                             _uart1RxBuffer 02D6                       __end_of___fpclassifyf E1F8  
                             _uart2RxBuffer 0600                    __end_of_DMA1_DMASCNT_ISR 2CE6  
                             _uart2TxBuffer 0400                              _DMA1_DMAOR_ISR 2D14  
                       __end_of_hid_display D724                  __end_of_send_port_data_dma 1EAC  
                          __CFG_LPBOREN$OFF 000000                       __size_of_init_display 00EA  
               __size_of_eaDogM_WriteString 00A6             __end_of_CRC_CalculatedResultGet E992  
                                 _TimerDone 2722                               _ringBufS_init 26FA  
                    __end_of_load_hist_data 9F6E                                 __pdataBANK1 0100  
                               __pdataBANK2 0200                  __size_of_UART2_Receive_ISR 0020  
                       __size_of_get_switch 002C                  __end_of_EXT_INT_Initialize 252A  
                  __size_of_update_cal_data 0056                     __end_of_calc_model_data A3C8  
                             _send_lcd_data 2954                         __end_of_help_button 23EC  
           __end_of_eaDogM_WriteStringAtPos 11BE                         __end_of_BVSOC_TABLE F87B  
                                 ___asfladd 16FC                        calc_model_data@bcror 0088  
                   __end_of_DMA1_Initialize 1850                        calc_model_data@bvror 008C  
                               __pbssCOMRAM 004A                                 _check_range 1586  
          __end_of_INT0_SetInterruptHandler 288A                      __end_of___year_to_secs 5DC2  
                             __pcstackBANK0 00E5                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler F5D0  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                    __size_of_set_hist_flag 0006                           __size_of___xxtofl 0204  
                   __end_of_SPI1_Initialize 2BDA                    _UART1_RxInterruptHandler 00A7  
                  _UART2_TxInterruptHandler 00AA                                   __end_of_T F967  
                          _convert_adc_data 0A0A                                   _calc_bsoc 49E2  
                 __size_of_ringBufS_put_dma 00AA                                _init_display 038A  
                    __end_of_DMA1_DMAOR_ISR 2D1E                      __size_of_TMR5_CallBack 0024  
                         __size_of_do_tzset 0280                       _TMR6_InterruptHandler 009E  
                        calc_ror_data@bcror 0080                      __size_of_TMR6_CallBack 0024  
                   __end_of_DMA2_Initialize 1DB2                          calc_ror_data@bvror 0084  
                    _PIN_MANAGER_Initialize 1250                       __end_of___localtime_r CE78  
                  __size_of_TMR3_Initialize 0048                        __end_of_wait_lcd_set 2D5E  
                       __size_of_scan_trans 003C                               __pmediumconst F7AA  
                                 __ptext100 E6A0                                   __ptext101 D2E8  
                                 __ptext110 1F48                                   __ptext102 BD3C  
                                 __ptext111 07D0                                   __ptext103 1720  
                                 __ptext200 49E2                                   __ptext120 0EC6  
                                 __ptext112 FB9E                                   __ptext104 1480  
                                 __ptext201 1E5A                                   __ptext121 1002  
                                 __ptext113 F340                                   __ptext105 25BC  
                                 __ptext210 2D78                                   __ptext202 2CF0  
                                 __ptext130 2B2C                                   __ptext122 F848  
                                 __ptext114 9214                                   __ptext106 062E  
                                 __ptext211 2D7A                                   __ptext203 16FC  
                                 __ptext131 2B7E                                   __ptext123 2B4A  
                                 __ptext115 20AE                                   __ptext107 AAF6  
                                 __ptext220 2A08                                   __ptext212 18BC  
                                 __ptext204 2CC8                                   __ptext140 E51A  
                                 __ptext132 2CAA                                   __ptext124 0CD2  
                                 __ptext116 CE78                                   __ptext108 E062  
                                 __ptext221 1EFA                                   __ptext213 28DC  
                                 __ptext205 29E4                                   __ptext141 0B78  
                                 __ptext133 217E                                   __ptext125 C77A  
                                 __ptext117 C4FA                                   __ptext109 E992  
                                 __ptext222 2CD8                                   __ptext214 2A70  
                                 __ptext206 2D76                                   __ptext150 2A4E  
                                 __ptext142 8D58                                   __ptext134 23B4  
                                 __ptext126 1E08                                   __ptext118 1374  
                                 __ptext223 2CFC                                   __ptext215 2904  
                                 __ptext207 2D6C                                   __ptext151 DD04  
                                 __ptext143 1B84                                   __ptext135 2722  
                                 __ptext127 25EC                                   __ptext119 FCB6  
                                 __ptext224 2D08                                   __ptext216 26A4  
                                 __ptext208 2678                                   __ptext160 279A  
                                 __ptext152 20F4                                   __ptext144 2A2C  
                                 __ptext136 2240                                   __ptext128 2B0E  
                                 __ptext225 2D14                                   __ptext217 292C  
                                 __ptext209 1504                                   __ptext161 26D0  
                                 __ptext153 6E8E                                   __ptext145 D936  
                                 __ptext137 2D2E                                   __ptext129 2C6E  
                                 __ptext226 0000                                   __ptext218 2AB2  
                                 __ptext170 2C06                                   __ptext162 27C2  
                                 __ptext154 6664                                   __ptext146 82C8  
                                 __ptext138 2D36                                   __ptext219 2B64  
                                 __ptext171 1250                                   __ptext163 1FD8  
                                 __ptext155 1EAC                                   __ptext147 EC6A  
                                 __ptext139 1774                                   __ptext180 12E2  
                                 __ptext172 2BF0                                   __ptext164 27EA  
                                 __ptext156 1BE6                                   __ptext148 9F6E  
                                 __ptext181 2CE6                                   __ptext173 19F4  
                                 __ptext165 2020                                   __ptext157 274A  
                                 __ptext149 2D64                                   __ptext190 2280  
                                 __ptext182 1850                                   __ptext174 2D3E  
                                 __ptext166 2812                                   __ptext158 2772  
                                 __ptext191 299C                                   __ptext183 288A  
                                 __ptext175 24F6                                   __ptext167 2B96  
                                 __ptext159 1F90                                   __ptext192 23EC  
                                 __ptext184 28B2                                   __ptext176 283A  
                                 __ptext168 2BC4                                   __ptext193 A782  
                                 __ptext185 2300                                   __ptext177 2862  
                                 __ptext169 2BDA                                   __ptext194 2C7E  
                                 __ptext186 2978                                   __ptext178 1D58  
                                 __ptext195 2CB8                                   __ptext187 2D72  
                                 __ptext179 17E6                                   __ptext196 EDCC  
                                 __ptext188 F48E                                   __ptext197 22C0  
                                 __ptext189 DEC0                                   __ptext198 29C0  
                                 __ptext199 2D74                           __size_of_set_time 0036  
                                 _hid_input F710                          __end_of_StartTimer 2280  
                        _set_load_relay_one 2C4E                          _set_load_relay_two 2C3E  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00F6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 2678  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 0078  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check BA64  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc C9EE                      __size_of_wait_lcd_done 000E  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter DD04  
                                 _localtime 2BAE                                 _hid_display D508  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 19F4                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0001  
                                  _INT0_ISR 2CC8                                    _INT1_ISR 2300  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02BC                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 24C2  
                                 _set_dac_b 248E                                   _ring_buf1 0543  
                                 _ring_buf2 0500                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 29C0  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                               _set_hist_flag 2D46  
                                 _set_vterm 2B0E                         __size_of_update_lcd 0160  
                               _help_button 23B4                                    _TMR3_ISR EDCC  
                               _BVSOC_TABLE F7AB                                    _TMR5_ISR DEC0  
                                  _TMR6_ISR 2B64          __end_of___secs_to_tm@days_in_month F8B7  
                ___secs_to_tm@days_in_month F8AB                                   _port_data 0981  
                       __size_of_static_soc 005A                                   _vfpfcnvrt 3A36  
                              _SPI1INTFbits 003D1A                         __size_of_start_bsoc 0022  
                             _TMR5_CallBack 299C                                  _ADCON0bits 003EF8  
                                 _zi_read32 FED4                          __end_of_check_help D936  
                                 _start_lcd 2D5E                     __size_of_FVR_Initialize 0008  
                 __size_of_send_lcd_cmd_dma 001E                               _TMR6_CallBack 2A08  
                            _write_cal_data F1E8                       __size_of_send_lcd_cmd 0040  
         __size_of_TMR5_SetInterruptHandler 0028                                   _stop_bsoc 2D64  
                          _set_display_info 2B2C                    __size_of_PWM8_Initialize 0016  
                  __size_of_TMR6_Initialize 002A                              _CRC_Initialize 12E2  
                               _INTCON0bits 003FD2                                   copy_data0 0488  
                                 copy_data1 04AE                                   copy_data2 04D0  
          __size_of_CRC_CalculatedResultGet 0172                    _INT0_SetInterruptHandler 2862  
                       __size_of_vterm_dump 018E         __end_of_UART2_SetTxInterruptHandler 2772  
               _UART2_SetTxInterruptHandler 274A                               _days_in_month 1A5A  
                              _uart1RxCount 00D0                                _uart2RxCount 00CD  
                                  __Hrparam 0000            __size_of_eaDogM_WriteStringAtPos 0092  
                   __CFG_RSTOSC$EXTOSC_4PLL 000000                    __size_of_TMR3_WriteTimer 0040  
                                  __Lrparam 0000                     __size_of_check_adc_scan 0008  
                        __CFG_BOREN$SBORDIS 000000                  __end_of_current_sensor_cal 9B08  
                  __size_of_conv_raw_result 04BC                               _wait_lcd_done 2C9C  
                              _send_lcd_cmd 2200                            __size_of___aldiv 0194  
                          __size_of___aodiv 0280                            __size_of___almod 0166  
                          __size_of___fladd 07BC               __size_of_get_ac_charger_relay 000E  
                          __size_of___aomod 0240                             _adc_int_handler 2D7A  
                          __size_of___fldiv 057A                            __size_of___awdiv 014E  
                          __size_of___flneg 0048                            __size_of___awmod 0118  
                          __size_of___lbmod 009A                            __size_of___flmul 082A  
                          __size_of___flsub 0046                            __size_of___fltol 0172  
                          __size_of___lodiv 0180                            __size_of___lomod 0140  
             __size_of_set_ac_charger_relay 0010                          __end_of_get_switch 2676  
                      __end_of_rule_to_secs 7D06                     __size_of_check_day_time 0374  
                    __end_of_write_cal_data F340                       __end_of_DMA1_DMAA_ISR 2D12  
                        ___fpclassifyf@F463 007C        __size_of_UART1_SetRxInterruptHandler 0028  
                          __size_of_asctime 0516                                    ___tzname 006C  
                          __size_of_getname 02FC                             lp_filter@smooth 0300  
                                  ___xxtofl D936                      __end_of_CRC_Initialize 1374  
                         ?_DMA1_DMADCNT_ISR 0001                            __size_of_getrule 0280  
               __size_of_check_enter_button 0072                    __size_of_ADCC_Initialize 006A  
               __end_of_eaDogM_WriteCommand 2C9C                            __size_of_isalpha 0044  
                          __size_of_isdigit 0030                                    __pivt0x8 0008  
                          __size_of_islower 0030                            __size_of_isspace 0052  
                        ??_DMA1_DMADCNT_ISR 0007                            __size_of_set_dac 00B6  
                                  __ptext10 FA86                                    __ptext11 0AC2  
                                  __ptext20 2200                                    __ptext12 1682  
                                  __ptext21 1CFE                                    __ptext13 DB3A  
                                  __ptext30 2D1E                                    __ptext22 2AD2  
                                  __ptext14 252A                                    __ptext31 2C3E  
                                  __ptext23 26FA                                    __ptext15 9B08  
                                  __ptext40 FED4                                    __ptext32 2C4E  
                                  __ptext24 C9EE                                    __ptext16 255C  
                                  __ptext41 764A                                    __ptext33 2C8E  
                                  __ptext25 0950                                    __ptext17 038A  
                                  __ptext50 2964                                    __ptext42 1A5A  
                                  __ptext34 B78A                                    __ptext26 D508  
                                  __ptext18 2954                                    __ptext51 F08E  
                                  __ptext43 5450                                    __ptext35 1C46  
                                  __ptext27 F710                                    __ptext19 21C0  
                                  __ptext60 1926                                    __ptext52 0558  
                                  __ptext44 029E                                    __ptext36 2BAE  
                                  __ptext28 BA64                                    __ptext61 2D4C  
                                  __ptext53 EB04                                    __ptext45 BFFA  
                                  __ptext37 CC34                                    __ptext29 237A  
                                  __ptext70 264A                                    __ptext62 2C5E  
                                  __ptext54 E1F8                                    __ptext46 C27A  
                                  __ptext38 5DC2                                    __ptext71 2D52  
                                  __ptext63 E820                                    __ptext55 8842  
                                  __ptext47 D0B8                                    __ptext39 233E  
                                  __ptext80 2424                                    __ptext72 109A  
                                  __ptext64 0702                                    __ptext56 F96C  
                                  __ptext48 01AC                                    __ptext81 EF2E  
                                  __ptext73 1586                                    __ptext65 2C1A  
                                  __ptext57 0F68                                    __ptext49 B1A2  
                                  __ptext90 B49E                                    __ptext82 112C  
                                  __ptext74 0A0A                                    __ptext66 1ABE  
                                  __ptext58 9694                                    __ptext91 1B22  
                                  __ptext83 2AF0                                    __ptext75 198E  
                                  __ptext67 2C2C                                    __ptext59 F1E8  
                                  __ptext92 0C26                                    __ptext84 2C9C  
                                  __ptext76 D724                                    __ptext68 2D26  
                                  __ptext93 3A36                                    __ptext85 2068  
                                  __ptext77 E38C                                    __ptext69 00B6  
                                  __ptext94 A3C8                                    __ptext86 0D7C  
                                  __ptext78 FDCA                                    __ptext95 13FC  
                                  __ptext87 2D58                                    __ptext79 261C  
                                  __ptext96 258C                                    __ptext88 2D5E  
                                  __ptext97 213A                                    __ptext89 11BE  
                                  __ptext98 AE62                                    __ptext99 F5D0  
                          __size_of_isupper 0030                                    _do_tzset BFFA  
                     __end_of_read_cal_data DD04                                    us1160999 1C96  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1527999 BD4E                            __size_of_strncmp 0220  
                          __size_of_toupper 0084                                    us1616999 7CF0  
                                  us1458999 922E                                    us1539999 AEC8  
                                  us1548999 A448                            _ringBufS_put_dma 0CD2  
                                  _dst_name 01EF                        __end_of_Volts_to_SOC 0A0A  
                             __size_of_atoi 0274                               __size_of_ctoa 0088  
                             __size_of_main 1720                               __size_of_dtoa 0480  
                             __size_of_nanf 0062                       __size_of_wait_lcd_set 0006  
                             __size_of_time 005E                               __size_of_stoa 02BE  
                             __size_of_utoa 0340                               __size_of_xtoa 03BA  
                       dac_spi_control@init 0052                                  _CRC_IsBusy 2C5E  
                      __CFG_WDTCWS$WDTCWS_7 000000                           ?_DMA1_DMASCNT_ISR 0001  
                     __end_of_init_port_dma 258C                                 _IVTLOCKbits 003FD4  
                      __end_of___secs_to_tm 3A36                    __size_of_TMR5_WriteTimer 0040  
                                  _set_time FFCA                   _ADCC_ADI_InterruptHandler 00A4  
                                 stoa@F1166 0200                          ??_DMA1_DMASCNT_ISR 0007  
              __end_of_ADCC_StartConversion 2C3E                          __end_of_scan_trans 237A  
                                  _spi_link 0060                                    _std_name 01F6  
                                  _wdtdelay 1CFE                  __end_of_UART2_Transmit_ISR 26D0  
                                  _spinners 00B6                                    _vfprintf 0C26  
                  __end_of_convert_adc_data 0AC2                   __size_of_update_hist_data 007C  
                __end_of_PWM8_LoadDutyValue 21C0        __end_of_TMR3_DefaultInterruptHandler 2D76  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2D74  
      __end_of_INT1_DefaultInterruptHandler 2D74       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2D72                          _send_port_data_dma 1E5A  
                             ??_Default_ISR 0001                                 _uart1RxHead 0057  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0054  
                               _uart1RxTail 00D1                              _get_raw_result 2A2C  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00CF  
                               _uart2RxTail 00CE                                   spinners@s 01CD  
                               _uart2TxTail 0056                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 2D58                          _EXT_INT_Initialize 24F6  
      __end_of_TMR6_DefaultInterruptHandler 1F48       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 1EFA                           _send_lcd_data_dma 2068  
      __end_of_ADCC_DefaultInterruptHandler 2D7A       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 2D78                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs 029E  
                         _send_lcd_cmd_long 21C0              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 2C7E                       __end_of_calc_ror_data E6A0  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 0E22  
                     __end_of_mode_lamp_dim 2B96                     __end_of_adc_int_handler 2D7C  
                  __size_of_convert_dac_raw 0118                             _display_history B78A  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd F08E                      _uart2TxBufferRemaining 0055  
                        __end_of_static_soc 1CFE                          __end_of_start_bsoc 2A70  
                            _FVR_Initialize 2D3E                      __end_of_get_raw_result 2A4E  
                          _send_lcd_cmd_dma 2AF0                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00C2            __end_of_INT1_SetInterruptHandler 2862  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 20AE                            ??_DMA1_DMAOR_ISR 0007  
                   _CRC_CalculatedResultGet E820                   __end_of_send_lcd_cmd_long 2200  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2D72  
            __end_of_PIN_MANAGER_Initialize 12E2                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump E51A                     _eaDogM_WriteStringAtPos 112C  
                             _get_vterm_ptr 261C                              _check_adc_scan 2D1E  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
