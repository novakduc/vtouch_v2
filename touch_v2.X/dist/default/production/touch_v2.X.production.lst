

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov  2 02:16:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=4,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=4,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=4,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=4,class=CODE,delta=1
   118                           	psect	text98,global,reloc=4,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=4,class=CODE,delta=1
   123                           	psect	text103,global,reloc=4,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=4,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=4,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=4,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=4,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=4,class=CODE,delta=1
   135                           	psect	text115,global,reloc=4,class=CODE,delta=1
   136                           	psect	text116,global,reloc=4,class=CODE,delta=1
   137                           	psect	text117,global,reloc=4,class=CODE,delta=1
   138                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   139                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   140                           	psect	text118,global,reloc=4,class=CODE,delta=1
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   143  0000                     
   144                           ; Version 2.10
   145                           ; Generated 31/07/2019 GMT
   146                           ; 
   147                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution.
   161                           ; 
   162                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   163                           ;        software without specific prior written permission.
   164                           ; 
   165                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   166                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   167                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   168                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   169                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   170                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   171                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   172                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   173                           ; 
   174                           ; 
   175                           ; Code-generator required, PIC18F57K42 Definitions
   176                           ; 
   177                           ; SFR Addresses
   178  0000                     
   179 ;;_mode	offset	0
   180 ;;_channel	offset=-1 (param)
   181 ;;_s	offset=-2 (param)
   182 ;;_cmd	offset=-1 (param)
   183 ;;_cmd	offset=-1 (param)
   184 ;;_data	offset=-1 (param)
   185 ;;__this	offset=-2 (param)
   186 ;;_index	offset=-1 (param)
   187 ;;_cmd	offset=-1 (param)
   188 ;;_flipper	offset=-1 (param)
   189 ;;_f	offset	0
   190 ;;_ap	offset	6
   191 ;;_s	offset=-3 (param)
   192 ;;_fmt	offset=-5 (param)
   193 ;;_line	offset=-1 (param)
   194 ;;_vterm	offset=-2 (param)
   195 ;;_numMilliseconds	offset=-2 (param)
   196 ;;_vterm	offset=-1 (param)
   197 ;;_r	offset=-1 (param)
   198 ;;_c	offset=-2 (param)
   199 ;;_strPtr	offset=-4 (param)
   200 ;;_strPtr	offset=-1 (param)
   201 ;;_delay	offset=-4 (param)
   202 ;;_strPtr	offset=-2 (param)
   203 ;;__this	offset=-2 (param)
   204 ;;_clearBuffer	offset=-3 (param)
   205 ;;_s	offset	0
   206 ;;_k	offset	2
   207 ;;_dest	offset=-2 (param)
   208 ;;_c	offset=-4 (param)
   209 ;;_n	offset=-6 (param)
   210 ;;_ap	offset	0
   211 ;;_fmt	offset=-3 (param)
   212 ;;_cfmt	offset	0
   213 ;;_fp	offset=-2 (param)
   214 ;;_fmt	offset=-4 (param)
   215 ;;_ap	offset=-6 (param)
   216 ;;_llu	offset	0
   217 ;;_ll	offset	8
   218 ;;_cp	offset	16
   219 ;;_c	offset	18
   220 ;;_fp	offset=-2 (param)
   221 ;;_fmt	offset=-4 (param)
   222 ;;_ap	offset=-6 (param)
   223 ;;_xtoa$4013	offset	0
   224 ;;_xtoa$4012	offset	2
   225 ;;_n	offset	4
   226 ;;_c	offset	12
   227 ;;_i	offset	14
   228 ;;_w	offset	16
   229 ;;_p	offset	18
   230 ;;_fp	offset=-2 (param)
   231 ;;_d	offset=-10 (param)
   232 ;;_x	offset=-11 (param)
   233 ;;_toupper$4573	offset	0
   234 ;;_c	offset=-2 (param)
   235 ;;_c	offset=-2 (param)
   236 ;;_c	offset=-2 (param)
   237 ;;_c	offset=-2 (param)
   238 ;;_nuls	offset	0
   239 ;;_l	offset	7
   240 ;;_p	offset	9
   241 ;;_cp	offset	11
   242 ;;_w	offset	13
   243 ;;_i	offset	15
   244 ;;_fp	offset=-2 (param)
   245 ;;_s	offset=-4 (param)
   246 ;;_dtoa$3992	offset	0
   247 ;;_n	offset	2
   248 ;;_i	offset	10
   249 ;;_s	offset	12
   250 ;;_w	offset	14
   251 ;;_p	offset	16
   252 ;;_fp	offset=-2 (param)
   253 ;;_d	offset=-10 (param)
   254 ;;_a	offset=-2 (param)
   255 ;;_sign	offset	0
   256 ;;_counter	offset	1
   257 ;;_dividend	offset=-8 (param)
   258 ;;_divisor	offset=-16 (param)
   259 ;;_quotient	offset	0
   260 ;;_sign	offset	8
   261 ;;_counter	offset	9
   262 ;;_dividend	offset=-8 (param)
   263 ;;_divisor	offset=-16 (param)
   264 ;;_w	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_c	offset=-3 (param)
   267 ;;_w	offset	0
   268 ;;_i	offset	2
   269 ;;_fp	offset=-2 (param)
   270 ;;_buf	offset=-3 (param)
   271 ;;_p	offset=-5 (param)
   272 ;;_a	offset	0
   273 ;;_s	offset=-2 (param)
   274 ;;_i	offset	0
   275 ;;_c	offset	2
   276 ;;_s	offset=-1 (param)
   277 ;;_fp	offset=-3 (param)
   278 ;;_c	offset=-2 (param)
   279 ;;_fp	offset=-4 (param)
   280 ;;_c	offset=-1 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_vterm	offset=-1 (param)
   284 ;;_new_response_info	offset=-1 (param)
   285 ;;_new_response_info	offset=-1 (param)
   286 ;;_level	offset=-2 (param)
   287 ;;_dutyValue	offset=-2 (param)
   288 ;;_timer	offset=-1 (param)
   289 ;;_timer	offset=-1 (param)
   290 ;;_count	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_InterruptHandler	offset=-3 (param)
   293 ;;_InterruptHandler	offset=-3 (param)
   294 ;;_InterruptHandler	offset=-3 (param)
   295 ;;_InterruptHandler	offset=-3 (param)
   296 ;;_InterruptHandler	offset=-3 (param)
   297 ;;_state	offset	0
   298 ;;_InterruptHandler	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_timerVal	offset=-2 (param)
   303 ;;_channel	offset=-1 (param)
   304 ;;_i	offset	0
   305                           
   306                           	psect	idataBANK0
   307  0137CA                     __pidataBANK0:
   308                           	opt callstack 0
   309                           
   310                           ;initializer for stoa@F1144
   311  0137CA  28                 	db	40
   312  0137CB  6E                 	db	110
   313  0137CC  75                 	db	117
   314  0137CD  6C                 	db	108
   315  0137CE  6C                 	db	108
   316  0137CF  29                 	db	41
   317  0137D0  00                 	db	0
   318                           
   319                           ;initializer for _port_data
   320  0137D1  FF                 	db	255
   321  0137D2  00                 	db	0
   322  0137D3  FF                 	db	255
   323  0137D4  00                 	db	0
   324  0137D5  FF                 	db	255
   325  0137D6  00                 	db	0
   326  0137D7  FF                 	db	255
   327  0137D8  00                 	db	0
   328  0137D9  FF                 	db	255
   329  0137DA  00                 	db	0
   330  0137DB  FF                 	db	255
   331  0137DC  00                 	db	0
   332  0137DD  FF                 	db	255
   333  0137DE  00                 	db	0
   334  0137DF  FF                 	db	255
   335  0137E0  00                 	db	0
   336                           
   337                           	psect	idataBANK1
   338  012326                     __pidataBANK1:
   339                           	opt callstack 0
   340                           
   341                           ;initializer for _V
   342  012326  00                 	db	0
   343  012327  00                 	db	0
   344  012328  00                 	db	0
   345  012329  00                 	db	0
   346  01232A  00                 	db	0
   347  01232B  00                 	db	0
   348  01232C  00                 	db	0
   349  01232D  00                 	db	0
   350  01232E  00                 	db	0
   351  01232F  00                 	db	0
   352  012330  00                 	db	0
   353  012331  00                 	db	0
   354  012332  00                 	db	0
   355  012333  00                 	db	0
   356  012334  00                 	db	0
   357  012335  00                 	db	0
   358  012336  00                 	db	0
   359  012337  00                 	db	0
   360  012338  00                 	db	0
   361  012339  00                 	db	0
   362  01233A  00                 	db	0
   363  01233B  00                 	db	0
   364  01233C  00                 	db	0
   365  01233D  00                 	db	0
   366  01233E  00                 	db	0
   367  01233F  00                 	db	0
   368  012340  00                 	db	0
   369  012341  00                 	db	0
   370  012342  00                 	db	0
   371  012343  00                 	db	0
   372  012344  00                 	db	0
   373  012345  00                 	db	0
   374  012346  00                 	db	0
   375  012347  00                 	db	0
   376  012348  00                 	db	0
   377  012349  00                 	db	0
   378  01234A  00                 	db	0
   379  01234B  00                 	db	0
   380  01234C  00                 	db	0
   381  01234D  00                 	db	0
   382  01234E  00                 	db	0
   383  01234F  00                 	db	0
   384  012350  00                 	db	0
   385  012351  00                 	db	0
   386  012352  00                 	db	0
   387  012353  00                 	db	0
   388  012354  00                 	db	0
   389  012355  00                 	db	0
   390  012356  00                 	db	0
   391  012357  00                 	db	0
   392  012358  00                 	db	0
   393  012359  00                 	db	0
   394  01235A  00                 	db	0
   395  01235B  00                 	db	0
   396  01235C  00                 	db	0
   397  01235D  00                 	db	0
   398  01235E  00                 	db	0
   399  01235F  00                 	db	0
   400  012360  00                 	db	0
   401  012361  00                 	db	0
   402  012362  00                 	db	0
   403  012363  00                 	db	0
   404  012364  00                 	db	0
   405  012365  00                 	db	0
   406  012366  00                 	db	0
   407  012367  00                 	db	0
   408  012368  00                 	db	0
   409  012369  00                 	db	0
   410  01236A  00                 	db	0
   411  01236B  00                 	db	0
   412  01236C  00                 	db	0
   413  01236D  00                 	db	0
   414  01236E  00                 	db	0
   415  01236F  00                 	db	0
   416  012370  00                 	db	0
   417  012371  00                 	db	0
   418  012372  00                 	db	0
   419  012373  00                 	db	0
   420  012374  00                 	db	0
   421  012375  00                 	db	0
   422  012376  00                 	db	0
   423  012377  00                 	db	0
   424  012378  00                 	db	0
   425  012379  00                 	db	0
   426  01237A  00                 	db	0
   427  01237B  00                 	db	0
   428  01237C  00                 	db	0
   429  01237D  00                 	db	0
   430  01237E  00                 	db	0
   431  01237F  00                 	db	0
   432  012380  00                 	db	0
   433  012381  00                 	db	0
   434  012382  00                 	db	0
   435  012383  00                 	db	0
   436  012384  00                 	db	0
   437  012385  00                 	db	0
   438  012386  00                 	db	0
   439  012387  00                 	db	0
   440  012388  00                 	db	0
   441  012389  00                 	db	0
   442  01238A  00                 	db	0
   443  01238B  00                 	db	0
   444  01238C  00                 	db	0
   445  01238D  00                 	db	0
   446  01238E  00                 	db	0
   447  01238F  00                 	db	0
   448  012390  00                 	db	0
   449  012391  00                 	db	0
   450  012392  00                 	db	0
   451  012393  00                 	db	0
   452  012394  00                 	db	0
   453  012395  00                 	db	0
   454  012396  00                 	db	0
   455  012397  00                 	db	0
   456  012398  00                 	db	0
   457  012399  00                 	db	0
   458  01239A  00                 	db	0
   459  01239B  00                 	db	0
   460  01239C  00                 	db	0
   461  01239D  00                 	db	0
   462  01239E  00                 	db	0
   463  01239F  00                 	db	0
   464  0123A0  00                 	db	0
   465  0123A1  00                 	db	0
   466  0123A2  00                 	db	0
   467  0123A3  00                 	db	0
   468  0123A4  00                 	db	0
   469  0123A5  00                 	db	0
   470  0123A6  00                 	db	0
   471  0123A7  0000               	dw	0
   472  0123A9  0000               	dw	0
   473  0123AB  0000               	dw	0
   474  0123AD  0000               	dw	0
   475  0123AF  0000               	dw	0
   476  0123B1  0000               	dw	0
   477  0123B3  00                 	db	0
   478  0123B4  00                 	db	0
   479  0123B5  00                 	db	0
   480  0123B6  00                 	db	0
   481  0123B7  00                 	db	0
   482  0123B8  00                 	db	0
   483  0123B9  00                 	db	0
   484  0123BA  00                 	db	0
   485  0123BB  0000               	dw	0
   486  0123BD  0000               	dw	0
   487  0123BF  0000               	dw	0
   488  0123C1  0000               	dw	0
   489  0123C3  0000               	dw	0
   490  0123C5  0000               	dw	0
   491  0123C7  0000               	dw	0
   492  0123C9  0000               	dw	0
   493  0123CB  0000               	dw	0
   494  0123CD  00                 	db	0
   495  0123CE  00                 	db	0
   496  0123CF  00                 	db	0
   497  0123D0  00                 	db	0
   498  0123D1  00                 	db	0
   499  0123D2  00                 	db	0
   500  0123D3  00                 	db	0
   501  0123D4  00                 	db	0
   502  0123D5  00                 	db	0
   503  0123D6  00                 	db	0
   504  0123D7  00                 	db	0
   505  0123D8  00                 	db	0
   506  0123D9  0000               	dw	0
   507  0123DB  0000               	dw	0
   508  0123DD  01                 	db	1
   509  0123DE  00                 	db	0
   510  0123DF  01                 	db	1
   511  0123E0  00                 	db	0
   512  0123E1  2D                 	db	45
   513  0123E2  00                 	db	0
   514                           
   515                           	psect	mediumconst
   516  00FE80                     __pmediumconst:
   517                           	opt callstack 0
   518  00FE80  00                 	db	0
   519  00FE81                     _T:
   520                           	opt callstack 0
   521  00FE81  63                 	db	99
   522  00FE82  6F                 	db	111
   523  00FE83  6D                 	db	109
   524  00FE84  6D                 	db	109
   525  00FE85  61                 	db	97
   526  00FE86  6E                 	db	110
   527  00FE87  64                 	db	100
   528  00FE88  73                 	db	115
   529  00FE89  20                 	db	32
   530  00FE8A  31                 	db	49
   531  00FE8B  00                 	db	0
   532  00FE8C  00                 	db	0
   533  00FE8D  00                 	db	0
   534  00FE8E  00                 	db	0
   535  00FE8F  00                 	db	0
   536  00FE90  00                 	db	0
   537  00FE91  00                 	db	0
   538  00FE92  00                 	db	0
   539  00FE93  64                 	db	100
   540  00FE94  69                 	db	105
   541  00FE95  73                 	db	115
   542  00FE96  70                 	db	112
   543  00FE97  6C                 	db	108
   544  00FE98  61                 	db	97
   545  00FE99  79                 	db	121
   546  00FE9A  73                 	db	115
   547  00FE9B  20                 	db	32
   548  00FE9C  31                 	db	49
   549  00FE9D  00                 	db	0
   550  00FE9E  00                 	db	0
   551  00FE9F  00                 	db	0
   552  00FEA0  00                 	db	0
   553  00FEA1  00                 	db	0
   554  00FEA2  00                 	db	0
   555  00FEA3  00                 	db	0
   556  00FEA4  00                 	db	0
   557  00FEA5  63                 	db	99
   558  00FEA6  6F                 	db	111
   559  00FEA7  6D                 	db	109
   560  00FEA8  6D                 	db	109
   561  00FEA9  61                 	db	97
   562  00FEAA  6E                 	db	110
   563  00FEAB  64                 	db	100
   564  00FEAC  73                 	db	115
   565  00FEAD  20                 	db	32
   566  00FEAE  32                 	db	50
   567  00FEAF  00                 	db	0
   568  00FEB0  00                 	db	0
   569  00FEB1  00                 	db	0
   570  00FEB2  00                 	db	0
   571  00FEB3  00                 	db	0
   572  00FEB4  00                 	db	0
   573  00FEB5  00                 	db	0
   574  00FEB6  00                 	db	0
   575  00FEB7  64                 	db	100
   576  00FEB8  69                 	db	105
   577  00FEB9  73                 	db	115
   578  00FEBA  70                 	db	112
   579  00FEBB  6C                 	db	108
   580  00FEBC  61                 	db	97
   581  00FEBD  79                 	db	121
   582  00FEBE  73                 	db	115
   583  00FEBF  20                 	db	32
   584  00FEC0  32                 	db	50
   585  00FEC1  00                 	db	0
   586  00FEC2  00                 	db	0
   587  00FEC3  00                 	db	0
   588  00FEC4  00                 	db	0
   589  00FEC5  00                 	db	0
   590  00FEC6  00                 	db	0
   591  00FEC7  00                 	db	0
   592  00FEC8  00                 	db	0
   593  00FEC9  63                 	db	99
   594  00FECA  6F                 	db	111
   595  00FECB  6D                 	db	109
   596  00FECC  6D                 	db	109
   597  00FECD  61                 	db	97
   598  00FECE  6E                 	db	110
   599  00FECF  64                 	db	100
   600  00FED0  73                 	db	115
   601  00FED1  20                 	db	32
   602  00FED2  33                 	db	51
   603  00FED3  00                 	db	0
   604  00FED4  00                 	db	0
   605  00FED5  00                 	db	0
   606  00FED6  00                 	db	0
   607  00FED7  00                 	db	0
   608  00FED8  00                 	db	0
   609  00FED9  00                 	db	0
   610  00FEDA  00                 	db	0
   611  00FEDB  64                 	db	100
   612  00FEDC  69                 	db	105
   613  00FEDD  73                 	db	115
   614  00FEDE  70                 	db	112
   615  00FEDF  6C                 	db	108
   616  00FEE0  61                 	db	97
   617  00FEE1  79                 	db	121
   618  00FEE2  73                 	db	115
   619  00FEE3  20                 	db	32
   620  00FEE4  33                 	db	51
   621  00FEE5  00                 	db	0
   622  00FEE6  00                 	db	0
   623  00FEE7  00                 	db	0
   624  00FEE8  00                 	db	0
   625  00FEE9  00                 	db	0
   626  00FEEA  00                 	db	0
   627  00FEEB  00                 	db	0
   628  00FEEC  00                 	db	0
   629  00FEED  63                 	db	99
   630  00FEEE  6F                 	db	111
   631  00FEEF  6D                 	db	109
   632  00FEF0  6D                 	db	109
   633  00FEF1  61                 	db	97
   634  00FEF2  6E                 	db	110
   635  00FEF3  64                 	db	100
   636  00FEF4  73                 	db	115
   637  00FEF5  20                 	db	32
   638  00FEF6  34                 	db	52
   639  00FEF7  00                 	db	0
   640  00FEF8  00                 	db	0
   641  00FEF9  00                 	db	0
   642  00FEFA  00                 	db	0
   643  00FEFB  00                 	db	0
   644  00FEFC  00                 	db	0
   645  00FEFD  00                 	db	0
   646  00FEFE  00                 	db	0
   647  00FEFF  64                 	db	100
   648  00FF00  69                 	db	105
   649  00FF01  73                 	db	115
   650  00FF02  70                 	db	112
   651  00FF03  6C                 	db	108
   652  00FF04  61                 	db	97
   653  00FF05  79                 	db	121
   654  00FF06  73                 	db	115
   655  00FF07  20                 	db	32
   656  00FF08  34                 	db	52
   657  00FF09  00                 	db	0
   658  00FF0A  00                 	db	0
   659  00FF0B  00                 	db	0
   660  00FF0C  00                 	db	0
   661  00FF0D  00                 	db	0
   662  00FF0E  00                 	db	0
   663  00FF0F  00                 	db	0
   664  00FF10  00                 	db	0
   665  00FF11                     __end_of_T:
   666                           	opt callstack 0
   667  0000                     _IVTADL	set	14493
   668  0000                     _IVTADH	set	14494
   669  0000                     _IVTADU	set	14495
   670  0000                     _PIR4bits	set	14756
   671  0000                     _PIE8bits	set	14744
   672  0000                     _PIR8bits	set	14760
   673  0000                     _SCANPR	set	14839
   674  0000                     _DMA2PR	set	14836
   675  0000                     _DMA1PR	set	14835
   676  0000                     _MAINPR	set	14834
   677  0000                     _ISRPR	set	14833
   678  0000                     _PIE2bits	set	14738
   679  0000                     _PIR2bits	set	14754
   680  0000                     _PIE9bits	set	14745
   681  0000                     _PIR9bits	set	14761
   682  0000                     _PIE6bits	set	14742
   683  0000                     _PIE3bits	set	14739
   684  0000                     _PMD7	set	14791
   685  0000                     _PMD6	set	14790
   686  0000                     _PMD5	set	14789
   687  0000                     _PMD4	set	14788
   688  0000                     _PMD3	set	14787
   689  0000                     _PMD2	set	14786
   690  0000                     _PMD1	set	14785
   691  0000                     _PMD0	set	14784
   692  0000                     _OSCTUNE	set	14814
   693  0000                     _OSCFRQ	set	14815
   694  0000                     _OSCEN	set	14813
   695  0000                     _OSCCON3	set	14811
   696  0000                     _OSCCON1	set	14809
   697  0000                     _IPR8bits	set	14728
   698  0000                     _IPR9bits	set	14729
   699  0000                     _IPR5bits	set	14725
   700  0000                     _IPR1bits	set	14721
   701  0000                     _IPR3bits	set	14723
   702  0000                     _IPR6bits	set	14726
   703  0000                     _IPR2bits	set	14722
   704  0000                     _PIE5bits	set	14741
   705  0000                     _PIE1bits	set	14737
   706  0000                     _PIR5bits	set	14757
   707  0000                     _PIR1bits	set	14753
   708  0000                     _PLLR	set	118496
   709  0000                     _SPI1SDIPPS	set	15071
   710  0000                     _U1RXPPS	set	15077
   711  0000                     _RC6PPS	set	14870
   712  0000                     _RC5PPS	set	14869
   713  0000                     _INT1PPS	set	15041
   714  0000                     _RD1PPS	set	14873
   715  0000                     _INT0PPS	set	15040
   716  0000                     _RC3PPS	set	14867
   717  0000                     _RB6PPS	set	14862
   718  0000                     _SPI1SCKPPS	set	15070
   719  0000                     _U2RXPPS	set	15080
   720  0000                     _SLRCONF	set	14995
   721  0000                     _SLRCONE	set	14979
   722  0000                     _SLRCOND	set	14963
   723  0000                     _SLRCONC	set	14947
   724  0000                     _SLRCONB	set	14931
   725  0000                     _SLRCONA	set	14915
   726  0000                     _ODCOND	set	14962
   727  0000                     _ODCONC	set	14946
   728  0000                     _ODCONB	set	14930
   729  0000                     _ODCONA	set	14914
   730  0000                     _ODCONF	set	14994
   731  0000                     _ODCONE	set	14978
   732  0000                     _WPUC	set	14945
   733  0000                     _WPUA	set	14913
   734  0000                     _WPUB	set	14929
   735  0000                     _WPUE	set	14977
   736  0000                     _WPUF	set	14993
   737  0000                     _WPUD	set	14961
   738  0000                     _ANSELA	set	14912
   739  0000                     _ANSELF	set	14992
   740  0000                     _ANSELE	set	14976
   741  0000                     _ANSELB	set	14928
   742  0000                     _ANSELC	set	14944
   743  0000                     _ANSELD	set	14960
   744  0000                     _DMA2SSA	set	15321
   745  0000                     _DMA1SSA	set	15353
   746  0000                     _DMA2DSZ	set	15310
   747  0000                     _DMA2SSZ	set	15319
   748  0000                     _DMA2DSA	set	15312
   749  0000                     _DMA1DSZ	set	15342
   750  0000                     _DMA1SSZ	set	15351
   751  0000                     _DMA1DSA	set	15344
   752  0000                     _DMA1CON0bits	set	15356
   753  0000                     _DMA1CON1bits	set	15357
   754  0000                     _DMA2CON0	set	15324
   755  0000                     _DMA2AIRQ	set	15326
   756  0000                     _DMA2SIRQ	set	15327
   757  0000                     _DMA2CON1	set	15325
   758  0000                     _DMA1CON0	set	15356
   759  0000                     _DMA1AIRQ	set	15358
   760  0000                     _DMA1SIRQ	set	15359
   761  0000                     _DMA1CON1	set	15357
   762  0000                     _CLKRCON	set	15589
   763  0000                     _CLKRCLK	set	15590
   764  0000                     _SPI1INTFbits	set	15642
   765  0000                     _SPI1RXB	set	15632
   766  0000                     _SPI1TXB	set	15633
   767  0000                     _SPI1TCNTL	set	15634
   768  0000                     _SPI1CON0	set	15636
   769  0000                     _SPI1CLK	set	15644
   770  0000                     _SPI1BAUD	set	15641
   771  0000                     _SPI1CON2	set	15638
   772  0000                     _SPI1CON1	set	15637
   773  0000                     _U2RXB	set	15824
   774  0000                     _U2TXB	set	15826
   775  0000                     _U2ERRIE	set	15842
   776  0000                     _U2ERRIR	set	15841
   777  0000                     _U2UIR	set	15840
   778  0000                     _U2FIFO	set	15839
   779  0000                     _U2BRGH	set	15838
   780  0000                     _U2BRGL	set	15837
   781  0000                     _U2CON2	set	15836
   782  0000                     _U2CON1	set	15835
   783  0000                     _U2CON0	set	15834
   784  0000                     _U2P3L	set	15832
   785  0000                     _U2P2L	set	15830
   786  0000                     _U2P1L	set	15828
   787  0000                     _U1RXB	set	15848
   788  0000                     _U1TXB	set	15850
   789  0000                     _U1ERRIE	set	15866
   790  0000                     _U1ERRIR	set	15865
   791  0000                     _U1UIR	set	15864
   792  0000                     _U1FIFO	set	15863
   793  0000                     _U1BRGH	set	15862
   794  0000                     _U1BRGL	set	15861
   795  0000                     _U1CON2	set	15860
   796  0000                     _U1CON1	set	15859
   797  0000                     _U1CON0	set	15858
   798  0000                     _U1P3H	set	15857
   799  0000                     _U1P3L	set	15856
   800  0000                     _U1P2H	set	15855
   801  0000                     _U1P2L	set	15854
   802  0000                     _U1P1H	set	15853
   803  0000                     _U1P1L	set	15852
   804  0000                     _FVRCON	set	16065
   805  0000                     _ADFLTRL	set	16102
   806  0000                     _ADFLTRH	set	16103
   807  0000                     _ADCON0bits	set	16120
   808  0000                     _ADCON0	set	16120
   809  0000                     _ADCLK	set	16127
   810  0000                     _ADACT	set	16126
   811  0000                     _ADREF	set	16125
   812  0000                     _ADSTAT	set	16124
   813  0000                     _ADCON3	set	16123
   814  0000                     _ADCON2	set	16122
   815  0000                     _ADCON1	set	16121
   816  0000                     _ADPREH	set	16119
   817  0000                     _ADPREL	set	16118
   818  0000                     _ADCAP	set	16117
   819  0000                     _ADACQH	set	16116
   820  0000                     _ADACQL	set	16115
   821  0000                     _ADPCH	set	16113
   822  0000                     _ADRPT	set	16108
   823  0000                     _ADACCU	set	16106
   824  0000                     _ADSTPTH	set	16101
   825  0000                     _ADSTPTL	set	16100
   826  0000                     _ADUTHH	set	16097
   827  0000                     _ADUTHL	set	16096
   828  0000                     _ADLTHH	set	16095
   829  0000                     _ADLTHL	set	16094
   830  0000                     _CCPTMRS1bits	set	16223
   831  0000                     _LATCbits	set	16316
   832  0000                     _LATDbits	set	16317
   833  0000                     _PORTBbits	set	16331
   834  0000                     _T2CON	set	16300
   835  0000                     _T2TMR	set	16298
   836  0000                     _T2PR	set	16299
   837  0000                     _T2RST	set	16303
   838  0000                     _T2HLT	set	16301
   839  0000                     _T2CLKCON	set	16302
   840  0000                     _PWM8DCL	set	16224
   841  0000                     _PWM8DCH	set	16225
   842  0000                     _PWM8CON	set	16226
   843  0000                     _T5CONbits	set	16282
   844  0000                     _T5CON	set	16282
   845  0000                     _TMR5L	set	16280
   846  0000                     _TMR5H	set	16281
   847  0000                     _T5CLK	set	16285
   848  0000                     _T5GATE	set	16284
   849  0000                     _T5GCON	set	16283
   850  0000                     _T6CON	set	16276
   851  0000                     _T6TMR	set	16274
   852  0000                     _T6PR	set	16275
   853  0000                     _T6RST	set	16279
   854  0000                     _T6HLT	set	16277
   855  0000                     _T6CLKCON	set	16278
   856  0000                     _LATEbits	set	16318
   857  0000                     _TRISD	set	16325
   858  0000                     _TRISC	set	16324
   859  0000                     _TRISB	set	16323
   860  0000                     _TRISA	set	16322
   861  0000                     _TRISF	set	16327
   862  0000                     _TRISE	set	16326
   863  0000                     _LATC	set	16316
   864  0000                     _LATB	set	16315
   865  0000                     _LATF	set	16319
   866  0000                     _LATA	set	16314
   867  0000                     _LATD	set	16317
   868  0000                     _LATE	set	16318
   869  0000                     _IVTLOCKbits	set	16340
   870  0000                     _IVTLOCK	set	16340
   871  0000                     _INTCON0bits	set	16338
   872  0000                     _GIE	set	130711
   873  00FF11                     
   874                           ; BSR set to: 57
   875  00FF11  20                 	db	32
   876  00FF12  4D                 	db	77	;'M'
   877  00FF13  65                 	db	101	;'e'
   878  00FF14  73                 	db	115	;'s'
   879  00FF15  67                 	db	103	;'g'
   880  00FF16  20                 	db	32
   881  00FF17  25                 	db	37
   882  00FF18  64                 	db	100	;'d'
   883  00FF19  20                 	db	32
   884  00FF1A  53                 	db	83	;'S'
   885  00FF1B  74                 	db	116	;'t'
   886  00FF1C  61                 	db	97	;'a'
   887  00FF1D  63                 	db	99	;'c'
   888  00FF1E  6B                 	db	107	;'k'
   889  00FF1F  20                 	db	32
   890  00FF20  25                 	db	37
   891  00FF21  64                 	db	100	;'d'
   892  00FF22  20                 	db	32
   893  00FF23  20                 	db	32
   894  00FF24  20                 	db	32
   895  00FF25  20                 	db	32
   896  00FF26  20                 	db	32
   897  00FF27  20                 	db	32
   898  00FF28  00                 	db	0
   899  00FF29                     STR_25:
   900                           
   901                           ; BSR set to: 57
   902  00FF29  20                 	db	32
   903  00FF2A  20                 	db	32
   904  00FF2B  20                 	db	32
   905  00FF2C  20                 	db	32
   906  00FF2D  20                 	db	32
   907  00FF2E  20                 	db	32
   908  00FF2F  20                 	db	32
   909  00FF30  20                 	db	32
   910  00FF31  20                 	db	32
   911  00FF32  20                 	db	32
   912  00FF33  20                 	db	32
   913  00FF34  20                 	db	32
   914  00FF35  20                 	db	32
   915  00FF36  20                 	db	32
   916  00FF37  20                 	db	32
   917  00FF38  20                 	db	32
   918  00FF39  20                 	db	32
   919  00FF3A  20                 	db	32
   920  00FF3B  00                 	db	0
   921  00FF3C                     STR_15:
   922                           
   923                           ; BSR set to: 57
   924  00FF3C  48                 	db	72	;'H'
   925  00FF3D  45                 	db	69	;'E'
   926  00FF3E  4C                 	db	76	;'L'
   927  00FF3F  50                 	db	80	;'P'
   928  00FF40  20                 	db	32
   929  00FF41  25                 	db	37
   930  00FF42  73                 	db	115	;'s'
   931  00FF43  20                 	db	32
   932  00FF44  20                 	db	32
   933  00FF45  20                 	db	32
   934  00FF46  20                 	db	32
   935  00FF47  20                 	db	32
   936  00FF48  20                 	db	32
   937  00FF49  20                 	db	32
   938  00FF4A  20                 	db	32
   939  00FF4B  20                 	db	32
   940  00FF4C  20                 	db	32
   941  00FF4D  20                 	db	32
   942  00FF4E  00                 	db	0
   943  00FF4F                     
   944                           ; BSR set to: 57
   945  00FF4F  44                 	db	68	;'D'
   946  00FF50  49                 	db	73	;'I'
   947  00FF51  53                 	db	83	;'S'
   948  00FF52  50                 	db	80	;'P'
   949  00FF53  4C                 	db	76	;'L'
   950  00FF54  41                 	db	65	;'A'
   951  00FF55  59                 	db	89	;'Y'
   952  00FF56  20                 	db	32
   953  00FF57  25                 	db	37
   954  00FF58  73                 	db	115	;'s'
   955  00FF59  20                 	db	32
   956  00FF5A  20                 	db	32
   957  00FF5B  20                 	db	32
   958  00FF5C  20                 	db	32
   959  00FF5D  20                 	db	32
   960  00FF5E  20                 	db	32
   961  00FF5F  20                 	db	32
   962  00FF60  20                 	db	32
   963  00FF61  00                 	db	0
   964  00FF62                     STR_9:
   965                           
   966                           ; BSR set to: 57
   967  00FF62  25                 	db	37
   968  00FF63  64                 	db	100	;'d'
   969  00FF64  20                 	db	32
   970  00FF65  25                 	db	37
   971  00FF66  64                 	db	100	;'d'
   972  00FF67  2C                 	db	44
   973  00FF68  20                 	db	32
   974  00FF69  25                 	db	37
   975  00FF6A  64                 	db	100	;'d'
   976  00FF6B  20                 	db	32
   977  00FF6C  25                 	db	37
   978  00FF6D  64                 	db	100	;'d'
   979  00FF6E  20                 	db	32
   980  00FF6F  20                 	db	32
   981  00FF70  20                 	db	32
   982  00FF71  20                 	db	32
   983  00FF72  23                 	db	35
   984  00FF73  00                 	db	0
   985  00FF74                     STR_8:
   986                           
   987                           ; BSR set to: 57
   988  00FF74  20                 	db	32
   989  00FF75  56                 	db	86	;'V'
   990  00FF76  54                 	db	84	;'T'
   991  00FF77  45                 	db	69	;'E'
   992  00FF78  52                 	db	82	;'R'
   993  00FF79  4D                 	db	77	;'M'
   994  00FF7A  20                 	db	32
   995  00FF7B  23                 	db	35
   996  00FF7C  32                 	db	50	;'2'
   997  00FF7D  20                 	db	32
   998  00FF7E  20                 	db	32
   999  00FF7F  20                 	db	32
  1000  00FF80  20                 	db	32
  1001  00FF81  20                 	db	32
  1002  00FF82  20                 	db	32
  1003  00FF83  20                 	db	32
  1004  00FF84  00                 	db	0
  1005  00FF85                     STR_4:
  1006                           
  1007                           ; BSR set to: 57
  1008  00FF85  20                 	db	32
  1009  00FF86  4E                 	db	78	;'N'
  1010  00FF87  53                 	db	83	;'S'
  1011  00FF88  41                 	db	65	;'A'
  1012  00FF89  53                 	db	83	;'S'
  1013  00FF8A  50                 	db	80	;'P'
  1014  00FF8B  4F                 	db	79	;'O'
  1015  00FF8C  4F                 	db	79	;'O'
  1016  00FF8D  4B                 	db	75	;'K'
  1017  00FF8E  20                 	db	32
  1018  00FF8F  20                 	db	32
  1019  00FF90  20                 	db	32
  1020  00FF91  20                 	db	32
  1021  00FF92  20                 	db	32
  1022  00FF93  20                 	db	32
  1023  00FF94  20                 	db	32
  1024  00FF95  00                 	db	0
  1025  00FF96                     STR_1:
  1026                           
  1027                           ; BSR set to: 57
  1028  00FF96  20                 	db	32
  1029  00FF97  4D                 	db	77	;'M'
  1030  00FF98  42                 	db	66	;'B'
  1031  00FF99  4D                 	db	77	;'M'
  1032  00FF9A  43                 	db	67	;'C'
  1033  00FF9B  20                 	db	32
  1034  00FF9C  53                 	db	83	;'S'
  1035  00FF9D  4F                 	db	79	;'O'
  1036  00FF9E  4C                 	db	76	;'L'
  1037  00FF9F  41                 	db	65	;'A'
  1038  00FFA0  52                 	db	82	;'R'
  1039  00FFA1  4D                 	db	77	;'M'
  1040  00FFA2  4F                 	db	79	;'O'
  1041  00FFA3  4E                 	db	78	;'N'
  1042  00FFA4  20                 	db	32
  1043  00FFA5  20                 	db	32
  1044  00FFA6  00                 	db	0
  1045  00FFA7                     STR_5:
  1046                           
  1047                           ; BSR set to: 57
  1048  00FFA7  20                 	db	32
  1049  00FFA8  53                 	db	83	;'S'
  1050  00FFA9  45                 	db	69	;'E'
  1051  00FFAA  51                 	db	81	;'Q'
  1052  00FFAB  55                 	db	85	;'U'
  1053  00FFAC  45                 	db	69	;'E'
  1054  00FFAD  4E                 	db	78	;'N'
  1055  00FFAE  43                 	db	67	;'C'
  1056  00FFAF  45                 	db	69	;'E'
  1057  00FFB0  20                 	db	32
  1058  00FFB1  54                 	db	84	;'T'
  1059  00FFB2  45                 	db	69	;'E'
  1060  00FFB3  53                 	db	83	;'S'
  1061  00FFB4  54                 	db	84	;'T'
  1062  00FFB5  20                 	db	32
  1063  00FFB6  20                 	db	32
  1064  00FFB7  00                 	db	0
  1065  00FFB8                     STR_19:
  1066                           
  1067                           ; BSR set to: 57
  1068  00FFB8  76                 	db	118	;'v'
  1069  00FFB9  74                 	db	116	;'t'
  1070  00FFBA  65                 	db	101	;'e'
  1071  00FFBB  72                 	db	114	;'r'
  1072  00FFBC  6D                 	db	109	;'m'
  1073  00FFBD  20                 	db	32
  1074  00FFBE  25                 	db	37
  1075  00FFBF  78                 	db	120	;'x'
  1076  00FFC0  3A                 	db	58	;':'
  1077  00FFC1  25                 	db	37
  1078  00FFC2  78                 	db	120	;'x'
  1079  00FFC3  20                 	db	32
  1080  00FFC4  20                 	db	32
  1081  00FFC5  20                 	db	32
  1082  00FFC6  00                 	db	0
  1083  00FFC7                     STR_2:
  1084                           
  1085                           ; BSR set to: 57
  1086  00FFC7  20                 	db	32
  1087  00FFC8  56                 	db	86	;'V'
  1088  00FFC9  65                 	db	101	;'e'
  1089  00FFCA  72                 	db	114	;'r'
  1090  00FFCB  73                 	db	115	;'s'
  1091  00FFCC  69                 	db	105	;'i'
  1092  00FFCD  6F                 	db	111	;'o'
  1093  00FFCE  6E                 	db	110	;'n'
  1094  00FFCF  20                 	db	32
  1095  00FFD0  25                 	db	37
  1096  00FFD1  73                 	db	115	;'s'
  1097  00FFD2  20                 	db	32
  1098  00FFD3  20                 	db	32
  1099  00FFD4  20                 	db	32
  1100  00FFD5  00                 	db	0
  1101  00FFD6                     STR_13:
  1102                           
  1103                           ; BSR set to: 57
  1104  00FFD6  4E                 	db	78	;'N'
  1105  00FFD7  6F                 	db	111	;'o'
  1106  00FFD8  76                 	db	118	;'v'
  1107  00FFD9  20                 	db	32
  1108  00FFDA  20                 	db	32
  1109  00FFDB  31                 	db	49	;'1'
  1110  00FFDC  20                 	db	32
  1111  00FFDD  32                 	db	50	;'2'
  1112  00FFDE  30                 	db	48	;'0'
  1113  00FFDF  31                 	db	49	;'1'
  1114  00FFE0  39                 	db	57	;'9'
  1115  00FFE1  00                 	db	0
  1116  00FFE2                     STR_17:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FFE2  25                 	db	37
  1120  00FFE3  73                 	db	115	;'s'
  1121  00FFE4  20                 	db	32
  1122  00FFE5  20                 	db	32
  1123  00FFE6  20                 	db	32
  1124  00FFE7  20                 	db	32
  1125  00FFE8  20                 	db	32
  1126  00FFE9  20                 	db	32
  1127  00FFEA  20                 	db	32
  1128  00FFEB  00                 	db	0
  1129  00FFEC                     STR_14:
  1130                           
  1131                           ; BSR set to: 57
  1132  00FFEC  31                 	db	49	;'1'
  1133  00FFED  39                 	db	57	;'9'
  1134  00FFEE  3A                 	db	58	;':'
  1135  00FFEF  31                 	db	49	;'1'
  1136  00FFF0  31                 	db	49	;'1'
  1137  00FFF1  3A                 	db	58	;':'
  1138  00FFF2  32                 	db	50	;'2'
  1139  00FFF3  33                 	db	51	;'3'
  1140  00FFF4  00                 	db	0
  1141  00FFF5                     STR_3:
  1142                           
  1143                           ; BSR set to: 57
  1144  00FFF5  30                 	db	48	;'0'
  1145  00FFF6  2E                 	db	46
  1146  00FFF7  36                 	db	54	;'6'
  1147  00FFF8  00                 	db	0
  1148  00FFF9                     STR_11:
  1149                           
  1150                           ; BSR set to: 57
  1151  00FFF9  25                 	db	37
  1152  00FFFA  63                 	db	99	;'c'
  1153  00FFFB  00                 	db	0
  1154  00FFFC                     STR_10:
  1155                           
  1156                           ; BSR set to: 57
  1157  00FFFC  25                 	db	37
  1158  00FFFD  73                 	db	115	;'s'
  1159  00FFFE  00                 	db	0
  1160  0000                     
  1161                           ; #config settings
  1162  00FFFF  00                 	db	0	; dummy byte at the end
  1163  0000                     
  1164                           	psect	cinit
  1165  0123E4                     __pcinit:
  1166                           	opt callstack 0
  1167  0123E4                     start_initialization:
  1168                           	opt callstack 0
  1169  0123E4                     __initialization:
  1170                           	opt callstack 0
  1171                           
  1172                           ; Initialize objects allocated to BANK1 (189 bytes)
  1173                           ; load TBLPTR registers with __pidataBANK1
  1174  0123E4  0E26               	movlw	low __pidataBANK1
  1175  0123E6  6EF6               	movwf	tblptrl,c
  1176  0123E8  0E23               	movlw	high __pidataBANK1
  1177  0123EA  6EF7               	movwf	tblptrh,c
  1178  0123EC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1179  0123EE  6EF8               	movwf	tblptru,c
  1180  0123F0  EE00  F100         	lfsr	0,__pdataBANK1
  1181  0123F4  EE20 F0BD          	lfsr	2,189
  1182  0123F8                     copy_data0:
  1183  0123F8  0009               	tblrd		*+
  1184  0123FA  006F FFD7 FFEE     	movff	tablat,postinc0
  1185  012400  50DD               	movf	postdec2,w,c
  1186  012402  50D9               	movf	fsr2l,w,c
  1187  012404  E1F9               	bnz	copy_data0
  1188                           
  1189                           ; Initialize objects allocated to BANK0 (23 bytes)
  1190                           ; load TBLPTR registers with __pidataBANK0
  1191  012406  0ECA               	movlw	low __pidataBANK0
  1192  012408  6EF6               	movwf	tblptrl,c
  1193  01240A  0E37               	movlw	high __pidataBANK0
  1194  01240C  6EF7               	movwf	tblptrh,c
  1195  01240E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1196  012410  6EF8               	movwf	tblptru,c
  1197  012412  EE00  F0D2         	lfsr	0,__pdataBANK0
  1198  012416  EE20 F017          	lfsr	2,23
  1199  01241A                     copy_data1:
  1200  01241A  0009               	tblrd		*+
  1201  01241C  006F FFD7 FFEE     	movff	tablat,postinc0
  1202  012422  50DD               	movf	postdec2,w,c
  1203  012424  50D9               	movf	fsr2l,w,c
  1204  012426  E1F9               	bnz	copy_data1
  1205                           
  1206                           ; Clear objects allocated to BANK5 (255 bytes)
  1207  012428  EE01  F100         	lfsr	0,__pbssBANK5
  1208  01242C  EE20 F0FF          	lfsr	2,255
  1209  012430                     clear_0:
  1210  012430  6AEE               	clrf	postinc0,c
  1211  012432  50DD               	movf	postdec2,w,c
  1212  012434  50D9               	movf	fsr2l,w,c
  1213  012436  E1FC               	bnz	clear_0
  1214  012438  50DA               	movf	fsr2h,w,c
  1215  01243A  E1FA               	bnz	clear_0
  1216                           
  1217                           ; Clear objects allocated to BANK4 (255 bytes)
  1218  01243C  EE01  F000         	lfsr	0,__pbssBANK4
  1219  012440  EE20 F0FF          	lfsr	2,255
  1220  012444                     clear_1:
  1221  012444  6AEE               	clrf	postinc0,c
  1222  012446  50DD               	movf	postdec2,w,c
  1223  012448  50D9               	movf	fsr2l,w,c
  1224  01244A  E1FC               	bnz	clear_1
  1225  01244C  50DA               	movf	fsr2h,w,c
  1226  01244E  E1FA               	bnz	clear_1
  1227                           
  1228                           ; Clear objects allocated to BANK3 (218 bytes)
  1229  012450  EE00  F300         	lfsr	0,__pbssBANK3
  1230  012454  0EDA               	movlw	218
  1231  012456                     clear_2:
  1232  012456  6AEE               	clrf	postinc0,c
  1233  012458  06E8               	decf	wreg,f,c
  1234  01245A  E1FD               	bnz	clear_2
  1235                           
  1236                           ; Clear objects allocated to BANK2 (198 bytes)
  1237  01245C  EE00  F200         	lfsr	0,__pbssBANK2
  1238  012460  0EC6               	movlw	198
  1239  012462                     clear_3:
  1240  012462  6AEE               	clrf	postinc0,c
  1241  012464  06E8               	decf	wreg,f,c
  1242  012466  E1FD               	bnz	clear_3
  1243                           
  1244                           ; Clear objects allocated to BANK1 (64 bytes)
  1245  012468  EE00  F1BD         	lfsr	0,__pbssBANK1
  1246  01246C  0E40               	movlw	64
  1247  01246E                     clear_4:
  1248  01246E  6AEE               	clrf	postinc0,c
  1249  012470  06E8               	decf	wreg,f,c
  1250  012472  E1FD               	bnz	clear_4
  1251                           
  1252                           ; Clear objects allocated to BANK0 (114 bytes)
  1253  012474  EE00  F060         	lfsr	0,__pbssBANK0
  1254  012478  0E72               	movlw	114
  1255  01247A                     clear_5:
  1256  01247A  6AEE               	clrf	postinc0,c
  1257  01247C  06E8               	decf	wreg,f,c
  1258  01247E  E1FD               	bnz	clear_5
  1259                           
  1260                           ; Clear objects allocated to COMRAM (53 bytes)
  1261  012480  EE00  F001         	lfsr	0,__pbssCOMRAM
  1262  012484  0E35               	movlw	53
  1263  012486                     clear_6:
  1264  012486  6AEE               	clrf	postinc0,c
  1265  012488  06E8               	decf	wreg,f,c
  1266  01248A  E1FD               	bnz	clear_6
  1267                           
  1268                           ;
  1269                           ; Setup IVTBASE
  1270                           ;
  1271  01248C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1272  01248E  6ED5               	movwf	213,c
  1273  012490  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1274  012492  6ED6               	movwf	214,c
  1275  012494  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1276  012496  6ED7               	movwf	215,c
  1277  012498                     end_of_initialization:
  1278                           	opt callstack 0
  1279  012498                     __end_of__initialization:
  1280                           	opt callstack 0
  1281  012498  0100               	movlb	0
  1282  01249A  EF84  F086         	goto	_main	;jump to C main() function
  1283                           
  1284                           	psect	bssCOMRAM
  1285  000001                     __pbssCOMRAM:
  1286                           	opt callstack 0
  1287  000001                     _TMR5_InterruptHandler:
  1288                           	opt callstack 0
  1289  000001                     	ds	3
  1290  000004                     _TMR6_InterruptHandler:
  1291                           	opt callstack 0
  1292  000004                     	ds	3
  1293  000007                     _ADCC_ADTI_InterruptHandler:
  1294                           	opt callstack 0
  1295  000007                     	ds	3
  1296  00000A                     _ADCC_ADI_InterruptHandler:
  1297                           	opt callstack 0
  1298  00000A                     	ds	3
  1299  00000D                     _UART1_TxInterruptHandler:
  1300                           	opt callstack 0
  1301  00000D                     	ds	3
  1302  000010                     _UART1_RxInterruptHandler:
  1303                           	opt callstack 0
  1304  000010                     	ds	3
  1305  000013                     _UART2_TxInterruptHandler:
  1306                           	opt callstack 0
  1307  000013                     	ds	3
  1308  000016                     _UART2_RxInterruptHandler:
  1309                           	opt callstack 0
  1310  000016                     	ds	3
  1311  000019                     _INT1_InterruptHandler:
  1312                           	opt callstack 0
  1313  000019                     	ds	3
  1314  00001C                     _INT0_InterruptHandler:
  1315                           	opt callstack 0
  1316  00001C                     	ds	3
  1317  00001F                     _width:
  1318                           	opt callstack 0
  1319  00001F                     	ds	2
  1320  000021                     _prec:
  1321                           	opt callstack 0
  1322  000021                     	ds	2
  1323  000023                     _flags:
  1324                           	opt callstack 0
  1325  000023                     	ds	2
  1326  000025                     TMR5_ISR@CountCallBack:
  1327                           	opt callstack 0
  1328  000025                     	ds	2
  1329  000027                     _timer5ReloadVal:
  1330                           	opt callstack 0
  1331  000027                     	ds	2
  1332  000029                     _mode_sw:
  1333                           	opt callstack 0
  1334  000029                     	ds	1
  1335  00002A                     _uart2RxCount:
  1336                           	opt callstack 0
  1337  00002A                     	ds	1
  1338  00002B                     _uart2RxTail:
  1339                           	opt callstack 0
  1340  00002B                     	ds	1
  1341  00002C                     _uart2RxHead:
  1342                           	opt callstack 0
  1343  00002C                     	ds	1
  1344  00002D                     _uart2TxBufferRemaining:
  1345                           	opt callstack 0
  1346  00002D                     	ds	1
  1347  00002E                     _uart2TxTail:
  1348                           	opt callstack 0
  1349  00002E                     	ds	1
  1350  00002F                     _uart2TxHead:
  1351                           	opt callstack 0
  1352  00002F                     	ds	1
  1353  000030                     _uart1RxCount:
  1354                           	opt callstack 0
  1355  000030                     	ds	1
  1356  000031                     _uart1RxTail:
  1357                           	opt callstack 0
  1358  000031                     	ds	1
  1359  000032                     _uart1RxHead:
  1360                           	opt callstack 0
  1361  000032                     	ds	1
  1362  000033                     _uart1TxBufferRemaining:
  1363                           	opt callstack 0
  1364  000033                     	ds	1
  1365  000034                     _uart1TxTail:
  1366                           	opt callstack 0
  1367  000034                     	ds	1
  1368  000035                     _uart1TxHead:
  1369                           	opt callstack 0
  1370  000035                     	ds	1
  1371                           
  1372                           	psect	bssBANK0
  1373  000060                     __pbssBANK0:
  1374                           	opt callstack 0
  1375  000060                     _R:
  1376                           	opt callstack 0
  1377  000060                     	ds	32
  1378  000080                     _tickCount:
  1379                           	opt callstack 0
  1380  000080                     	ds	24
  1381  000098                     _spi_link:
  1382                           	opt callstack 0
  1383  000098                     	ds	12
  1384  0000A4                     wdtdelay@dcount:
  1385                           	opt callstack 0
  1386  0000A4                     	ds	4
  1387  0000A8                     _nout:
  1388                           	opt callstack 0
  1389  0000A8                     	ds	2
  1390  0000AA                     _dbuf:
  1391                           	opt callstack 0
  1392  0000AA                     	ds	32
  1393  0000CA                     _seed:
  1394                           	opt callstack 0
  1395  0000CA                     	ds	8
  1396                           
  1397                           	psect	dataBANK0
  1398  0000D2                     __pdataBANK0:
  1399                           	opt callstack 0
  1400  0000D2                     stoa@F1144:
  1401                           	opt callstack 0
  1402  0000D2                     	ds	7
  1403  0000D9                     _port_data:
  1404                           	opt callstack 0
  1405  0000D9                     	ds	16
  1406                           
  1407                           	psect	bssBANK1
  1408  0001BD                     __pbssBANK1:
  1409                           	opt callstack 0
  1410  0001BD                     _uart1TxBuffer:
  1411                           	opt callstack 0
  1412  0001BD                     	ds	64
  1413                           
  1414                           	psect	dataBANK1
  1415  000100                     __pdataBANK1:
  1416                           	opt callstack 0
  1417  000100                     _V:
  1418                           	opt callstack 0
  1419  000100                     	ds	189
  1420                           
  1421                           	psect	bssBANK2
  1422  000200                     __pbssBANK2:
  1423                           	opt callstack 0
  1424  000200                     _uart2TxBuffer:
  1425                           	opt callstack 0
  1426  000200                     	ds	64
  1427  000240                     _ring_buf2:
  1428                           	opt callstack 0
  1429  000240                     	ds	67
  1430  000283                     _ring_buf1:
  1431                           	opt callstack 0
  1432  000283                     	ds	67
  1433                           
  1434                           	psect	bssBANK3
  1435  000300                     __pbssBANK3:
  1436                           	opt callstack 0
  1437  000300                     _D:
  1438                           	opt callstack 0
  1439  000300                     	ds	218
  1440                           
  1441                           	psect	bssBANK4
  1442  000400                     __pbssBANK4:
  1443                           	opt callstack 0
  1444  000400                     _uart1RxBuffer:
  1445                           	opt callstack 0
  1446  000400                     	ds	255
  1447                           
  1448                           	psect	bssBANK5
  1449  000500                     __pbssBANK5:
  1450                           	opt callstack 0
  1451  000500                     _uart2RxBuffer:
  1452                           	opt callstack 0
  1453  000500                     	ds	255
  1454                           
  1455                           	psect	cstackBANK0
  1456  0000E9                     __pcstackBANK0:
  1457                           	opt callstack 0
  1458  0000E9                     ??_TMR5_ISR:
  1459                           
  1460                           ; 1 bytes @ 0x0
  1461  0000E9                     	ds	4
  1462                           
  1463                           	psect	cstackCOMRAM
  1464  000056                     __pcstackCOMRAM:
  1465                           	opt callstack 0
  1466  000056                     ??_ADCC_ISR:
  1467  000056                     
  1468                           ; 1 bytes @ 0x0
  1469  000056                     	ds	1
  1470  000057                     ??_ADCC_ThresholdISR:
  1471                           
  1472                           ; 1 bytes @ 0x1
  1473  000057                     	ds	3
  1474  00005A                     ??_TMR6_ISR:
  1475                           
  1476                           ; 1 bytes @ 0x4
  1477  00005A                     	ds	1
  1478  00005B                     
  1479                           ; 1 bytes @ 0x5
  1480 ;;
  1481 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1482 ;;
  1483 ;; *************** function _main *****************
  1484 ;; Defined at:
  1485 ;;		line 148 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  mode            1  [STACK] enum E17005
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1  [STACK] void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 7/3
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels required when called:   19
  1505 ;; This function calls:
  1506 ;;		_SYSTEM_Initialize
  1507 ;;		_StartTimer
  1508 ;;		_TimerDone
  1509 ;;		_WaitMs
  1510 ;;		_check_adc_scan
  1511 ;;		_check_help
  1512 ;;		_clear_adc_scan
  1513 ;;		_eaDogM_WriteCommand
  1514 ;;		_get_raw_result
  1515 ;;		_get_vterm_ptr
  1516 ;;		_init_display
  1517 ;;		_mode_lamp_dim
  1518 ;;		_set_display_info
  1519 ;;		_set_vterm
  1520 ;;		_sprintf
  1521 ;;		_srand
  1522 ;;		_start_adc_scan
  1523 ;;		_update_lcd
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text0
  1530  010D08                     __ptext0:
  1531                           	opt callstack 0
  1532  010D08                     _main:
  1533                           	opt callstack 0
  1534                           
  1535                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1536  010D08  52E6               	movf	postinc1,f,c
  1537                           
  1538                           ;main.c: 150:  UI_STATES mode;;main.c: 153:  SYSTEM_Initialize();
  1539                           
  1540                           ;incstack = 0
  1541  010D0A  EC53  F097         	call	_SYSTEM_Initialize	;wreg free
  1542                           
  1543                           ; BSR set to: 60
  1544                           ;main.c: 156:  (INTCON0bits.GIEH = 1);
  1545  010D0E  8ED2               	bsf	210,7,c	;volatile
  1546                           
  1547                           ; BSR set to: 60
  1548                           ;main.c: 159:  (INTCON0bits.GIEL = 1);
  1549  010D10  8CD2               	bsf	210,6,c	;volatile
  1550                           
  1551                           ; BSR set to: 60
  1552                           ;main.c: 161:  V.ui_state = UI_STATE_INIT;
  1553  010D12  0101               	movlb	1	; () banked
  1554  010D14  6B00               	clrf	_V& (0+255),b	;volatile
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 166:  WaitMs(300);
  1558  010D16  0E2C               	movlw	44
  1559  010D18  6EE6               	movwf	postinc1,c
  1560  010D1A  0E01               	movlw	1
  1561  010D1C  6EE6               	movwf	postinc1,c
  1562  010D1E  EC94  F098         	call	_WaitMs	;wreg free
  1563                           
  1564                           ;main.c: 167:  if (PORTBbits.RB0) {
  1565  010D22  A0CB               	btfss	203,0,c	;volatile
  1566  010D24  D004               	goto	l6358
  1567                           
  1568                           ;main.c: 168:   mode = UI_STATE_HOST;
  1569                           ;stkvar	_mode @ sp[(-1)+0]
  1570  010D26  0EFF               	movlw	-1
  1571  010D28  6AE3               	clrf	plusw1,c
  1572  010D2A  2AE3               	incf	plusw1,f,c
  1573                           
  1574                           ;main.c: 169:  } else {
  1575  010D2C  D004               	goto	l6360
  1576  010D2E                     l6358:
  1577                           
  1578                           ;main.c: 170:   mode = UI_STATE_LOG;
  1579                           ;stkvar	_mode @ sp[(-1)+0]
  1580  010D2E  0EFF               	movlw	-1
  1581  010D30  6AE3               	clrf	plusw1,c
  1582  010D32  80E3               	bsf	plusw1,0,c
  1583  010D34  82E3               	bsf	plusw1,1,c	;indir
  1584  010D36                     l6360:
  1585                           
  1586                           ;main.c: 173:  if (mode == UI_STATE_HOST) {
  1587                           ;stkvar	_mode @ sp[(-1)+0]
  1588  010D36  0EFF               	movlw	-1
  1589  010D38  04E3               	decf	plusw1,w,c
  1590  010D3A  A4D8               	btfss	status,2,c
  1591  010D3C  D007               	goto	l1240
  1592                           
  1593                           ;main.c: 174:   do { LATDbits.LATD0 = 1; } while(0);
  1594  010D3E  80BD               	bsf	189,0,c	;volatile
  1595                           
  1596                           ;main.c: 175:   V.mode_pwm = 70;
  1597  010D40  0E00               	movlw	0
  1598  010D42  0101               	movlb	1	; () banked
  1599  010D44  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1600  010D46  0E46               	movlw	70
  1601  010D48  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1602                           
  1603                           ;main.c: 176:  } else {
  1604  010D4A  D004               	goto	l6364
  1605  010D4C                     l1240:
  1606  010D4C  90BD               	bcf	189,0,c	;volatile
  1607                           
  1608                           ;main.c: 178:   V.mode_pwm = 0;
  1609  010D4E  0101               	movlb	1	; () banked
  1610  010D50  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1611  010D52  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1612  010D54                     l6364:
  1613                           
  1614                           ; BSR set to: 1
  1615                           ;main.c: 180:  mode_lamp_dim(V.mode_pwm);
  1616  010D54  0060  F67F  FFE6   	movff	_V+159,postinc1
  1617  010D5A  0060  F683  FFE6   	movff	_V+160,postinc1
  1618  010D60  ECCD  F09B         	call	_mode_lamp_dim	;wreg free
  1619  010D64  D0CB               	goto	l6406
  1620  010D66                     l6366:
  1621                           
  1622                           ; BSR set to: 1
  1623                           ;main.c: 191:    init_display();
  1624  010D66  EC1E  F091         	call	_init_display	;wreg free
  1625                           
  1626                           ; BSR set to: 61
  1627                           ;main.c: 192:    eaDogM_WriteCommand(0b00001100);
  1628  010D6A  0E0C               	movlw	12
  1629  010D6C  6EE6               	movwf	postinc1,c
  1630  010D6E  EC2D  F09C         	call	_eaDogM_WriteCommand	;wreg free
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;main.c: 194:    V.ui_state = mode;
  1634                           ;stkvar	_mode @ sp[(-1)+0]
  1635  010D72  0EFF               	movlw	-1
  1636  010D74  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 195:    srand(1957);
  1640  010D7A  0EA5               	movlw	165
  1641  010D7C  6EE6               	movwf	postinc1,c
  1642  010D7E  0E07               	movlw	7
  1643  010D80  6EE6               	movwf	postinc1,c
  1644  010D82  ECCA  F098         	call	_srand	;wreg free
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;main.c: 196:    set_vterm(0);
  1648  010D86  0E00               	movlw	0
  1649  010D88  6EE6               	movwf	postinc1,c
  1650  010D8A  EC97  F09B         	call	_set_vterm	;wreg free
  1651                           
  1652                           ; BSR set to: 3
  1653                           ;main.c: 197:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1654  010D8E  0E96               	movlw	low STR_1
  1655  010D90  6EE6               	movwf	postinc1,c
  1656  010D92  0EFF               	movlw	high STR_1
  1657  010D94  6EE6               	movwf	postinc1,c
  1658  010D96  0E00               	movlw	0
  1659  010D98  6EE6               	movwf	postinc1,c
  1660  010D9A  0E00               	movlw	0
  1661  010D9C  6EE6               	movwf	postinc1,c
  1662  010D9E  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1663  010DA2  0060  F0DB  FFE6   	movff	btemp,postinc1
  1664  010DA8  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1665  010DAE  0E04               	movlw	4
  1666  010DB0  6EE6               	movwf	postinc1,c
  1667  010DB2  EC15  F090         	call	_sprintf	;wreg free
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;main.c: 198:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.6");
  1671  010DB6  0EF5               	movlw	low STR_3
  1672  010DB8  6EE6               	movwf	postinc1,c
  1673  010DBA  0EFF               	movlw	high STR_3
  1674  010DBC  6EE6               	movwf	postinc1,c
  1675  010DBE  0EC7               	movlw	low STR_2
  1676  010DC0  6EE6               	movwf	postinc1,c
  1677  010DC2  0EFF               	movlw	high STR_2
  1678  010DC4  6EE6               	movwf	postinc1,c
  1679  010DC6  0E00               	movlw	0
  1680  010DC8  6EE6               	movwf	postinc1,c
  1681  010DCA  0E01               	movlw	1
  1682  010DCC  6EE6               	movwf	postinc1,c
  1683  010DCE  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1684  010DD2  0060  F0DB  FFE6   	movff	btemp,postinc1
  1685  010DD8  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1686  010DDE  0E06               	movlw	6
  1687  010DE0  6EE6               	movwf	postinc1,c
  1688  010DE2  EC15  F090         	call	_sprintf	;wreg free
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;main.c: 199:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1692  010DE6  0E85               	movlw	low STR_4
  1693  010DE8  6EE6               	movwf	postinc1,c
  1694  010DEA  0EFF               	movlw	high STR_4
  1695  010DEC  6EE6               	movwf	postinc1,c
  1696  010DEE  0E00               	movlw	0
  1697  010DF0  6EE6               	movwf	postinc1,c
  1698  010DF2  0E02               	movlw	2
  1699  010DF4  6EE6               	movwf	postinc1,c
  1700  010DF6  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1701  010DFA  0060  F0DB  FFE6   	movff	btemp,postinc1
  1702  010E00  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1703  010E06  0E04               	movlw	4
  1704  010E08  6EE6               	movwf	postinc1,c
  1705  010E0A  EC15  F090         	call	_sprintf	;wreg free
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 200:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1709  010E0E  0EA7               	movlw	low STR_5
  1710  010E10  6EE6               	movwf	postinc1,c
  1711  010E12  0EFF               	movlw	high STR_5
  1712  010E14  6EE6               	movwf	postinc1,c
  1713  010E16  0E02               	movlw	2
  1714  010E18  6EE6               	movwf	postinc1,c
  1715  010E1A  0E00               	movlw	0
  1716  010E1C  6EE6               	movwf	postinc1,c
  1717  010E1E  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1718  010E22  0060  F0DB  FFE6   	movff	btemp,postinc1
  1719  010E28  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1720  010E2E  0E04               	movlw	4
  1721  010E30  6EE6               	movwf	postinc1,c
  1722  010E32  EC15  F090         	call	_sprintf	;wreg free
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;main.c: 201:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.6");
  1726  010E36  0EF5               	movlw	low STR_3
  1727  010E38  6EE6               	movwf	postinc1,c
  1728  010E3A  0EFF               	movlw	high STR_3
  1729  010E3C  6EE6               	movwf	postinc1,c
  1730  010E3E  0EC7               	movlw	low STR_2
  1731  010E40  6EE6               	movwf	postinc1,c
  1732  010E42  0EFF               	movlw	high STR_2
  1733  010E44  6EE6               	movwf	postinc1,c
  1734  010E46  0E02               	movlw	2
  1735  010E48  6EE6               	movwf	postinc1,c
  1736  010E4A  0E01               	movlw	1
  1737  010E4C  6EE6               	movwf	postinc1,c
  1738  010E4E  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1739  010E52  0060  F0DB  FFE6   	movff	btemp,postinc1
  1740  010E58  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1741  010E5E  0E06               	movlw	6
  1742  010E60  6EE6               	movwf	postinc1,c
  1743  010E62  EC15  F090         	call	_sprintf	;wreg free
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;main.c: 202:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1747  010E66  0E74               	movlw	low STR_8
  1748  010E68  6EE6               	movwf	postinc1,c
  1749  010E6A  0EFF               	movlw	high STR_8
  1750  010E6C  6EE6               	movwf	postinc1,c
  1751  010E6E  0E02               	movlw	2
  1752  010E70  6EE6               	movwf	postinc1,c
  1753  010E72  0E02               	movlw	2
  1754  010E74  6EE6               	movwf	postinc1,c
  1755  010E76  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1756  010E7A  0060  F0DB  FFE6   	movff	btemp,postinc1
  1757  010E80  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1758  010E86  0E04               	movlw	4
  1759  010E88  6EE6               	movwf	postinc1,c
  1760  010E8A  EC15  F090         	call	_sprintf	;wreg free
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 203:    update_lcd(0);
  1764  010E8E  0E00               	movlw	0
  1765  010E90  6EE6               	movwf	postinc1,c
  1766  010E92  EC8E  F08F         	call	_update_lcd	;wreg free
  1767                           
  1768                           ;main.c: 204:    WaitMs(3000);
  1769  010E96  0EB8               	movlw	184
  1770  010E98  6EE6               	movwf	postinc1,c
  1771  010E9A  0E0B               	movlw	11
  1772  010E9C  6EE6               	movwf	postinc1,c
  1773  010E9E  EC94  F098         	call	_WaitMs	;wreg free
  1774                           
  1775                           ;main.c: 205:    StartTimer(TMR_DISPLAY, 100);
  1776  010EA2  0E64               	movlw	100
  1777  010EA4  6EE6               	movwf	postinc1,c
  1778  010EA6  0E00               	movlw	0
  1779  010EA8  6EE6               	movwf	postinc1,c
  1780  010EAA  0E0A               	movlw	10
  1781  010EAC  6EE6               	movwf	postinc1,c
  1782  010EAE  EC3D  F098         	call	_StartTimer	;wreg free
  1783                           
  1784                           ;main.c: 206:    StartTimer(TMR_ADC, 50);
  1785  010EB2  0E32               	movlw	50
  1786  010EB4  6EE6               	movwf	postinc1,c
  1787  010EB6  0E00               	movlw	0
  1788  010EB8  6EE6               	movwf	postinc1,c
  1789  010EBA  0E01               	movlw	1
  1790  010EBC  6EE6               	movwf	postinc1,c
  1791  010EBE  EC3D  F098         	call	_StartTimer	;wreg free
  1792                           
  1793                           ;main.c: 207:    StartTimer(TMR_INFO, 3000);
  1794  010EC2  0EB8               	movlw	184
  1795  010EC4  6EE6               	movwf	postinc1,c
  1796  010EC6  0E0B               	movlw	11
  1797  010EC8  6EE6               	movwf	postinc1,c
  1798  010ECA  0E07               	movlw	7
  1799  010ECC  6EE6               	movwf	postinc1,c
  1800  010ECE  EC3D  F098         	call	_StartTimer	;wreg free
  1801                           
  1802                           ;main.c: 208:    StartTimer(TMR_FLIPPER, 1500);
  1803  010ED2  0EDC               	movlw	220
  1804  010ED4  6EE6               	movwf	postinc1,c
  1805  010ED6  0E05               	movlw	5
  1806  010ED8  6EE6               	movwf	postinc1,c
  1807  010EDA  0E0B               	movlw	11
  1808  010EDC  6EE6               	movwf	postinc1,c
  1809  010EDE  EC3D  F098         	call	_StartTimer	;wreg free
  1810                           
  1811                           ;main.c: 209:    StartTimer(TMR_HELPDIS, 3000);
  1812  010EE2  0EB8               	movlw	184
  1813  010EE4  6EE6               	movwf	postinc1,c
  1814  010EE6  0E0B               	movlw	11
  1815  010EE8  6EE6               	movwf	postinc1,c
  1816  010EEA  0E09               	movlw	9
  1817  010EEC  6EE6               	movwf	postinc1,c
  1818  010EEE  EC3D  F098         	call	_StartTimer	;wreg free
  1819                           
  1820                           ;main.c: 211:    start_adc_scan();
  1821  010EF2  EC1F  F098         	call	_start_adc_scan	;wreg free
  1822                           
  1823                           ;main.c: 213:    break;
  1824  010EF6  D016               	goto	l6408
  1825  010EF8                     l1249:
  1826                           
  1827                           ; BSR set to: 1
  1828                           ;main.c: 220:    V.ui_state = UI_STATE_INIT;
  1829  010EF8  6B00               	clrf	_V& (0+255),b	;volatile
  1830                           
  1831                           ;main.c: 221:    break;
  1832  010EFA  D014               	goto	l6408
  1833  010EFC                     l6406:
  1834  010EFC  0101               	movlb	1	; () banked
  1835  010EFE  5100               	movf	_V& (0+255),w,b	;volatile
  1836  010F00  6E40               	movwf	(btemp+10)^0,c
  1837  010F02  6A41               	clrf	(btemp+11)^0,c
  1838                           
  1839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 1, Range of values is 0 to 0
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte            4     3 (average)
  1845                           ;	Chosen strategy is simple_byte
  1846  010F04  5041               	movf	(btemp+11)^0,w,c
  1847  010F06  0A00               	xorlw	0	; case 0
  1848  010F08  A4D8               	btfss	status,2,c
  1849  010F0A  D7F6               	goto	l1249
  1850                           
  1851                           ; BSR set to: 1
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 4, Range of values is 0 to 4
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte           13     7 (average)
  1857                           ;	Chosen strategy is simple_byte
  1858  010F0C  5040               	movf	(btemp+10)^0,w,c
  1859  010F0E  0A00               	xorlw	0	; case 0
  1860  010F10  B4D8               	btfsc	status,2,c
  1861  010F12  D729               	goto	l6366
  1862  010F14  0A01               	xorlw	1	; case 1
  1863  010F16  B4D8               	btfsc	status,2,c
  1864  010F18  D005               	goto	l6408
  1865  010F1A  0A02               	xorlw	2	; case 3
  1866  010F1C  B4D8               	btfsc	status,2,c
  1867  010F1E  D002               	goto	l6408
  1868  010F20  0A07               	xorlw	7	; case 4
  1869  010F22  D7EA               	goto	l1249
  1870  010F24                     l6408:
  1871                           
  1872                           ;main.c: 224:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  1873  010F24  0E01               	movlw	1
  1874  010F26  6EE6               	movwf	postinc1,c
  1875  010F28  ECD9  F09A         	call	_TimerDone	;wreg free
  1876  010F2C  5036               	movf	btemp^0,w,c
  1877  010F2E  B4D8               	btfsc	status,2,c
  1878  010F30  D011               	goto	l6418
  1879  010F32  EC71  F09C         	call	_check_adc_scan	;wreg free
  1880  010F36  5036               	movf	btemp^0,w,c
  1881  010F38  B4D8               	btfsc	status,2,c
  1882  010F3A  D00C               	goto	l6418
  1883                           
  1884                           ;main.c: 225:    clear_adc_scan();
  1885  010F3C  EC79  F09C         	call	_clear_adc_scan	;wreg free
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;main.c: 226:    start_adc_scan();
  1889  010F40  EC1F  F098         	call	_start_adc_scan	;wreg free
  1890                           
  1891                           ;main.c: 227:    StartTimer(TMR_ADC, 50);
  1892  010F44  0E32               	movlw	50
  1893  010F46  6EE6               	movwf	postinc1,c
  1894  010F48  0E00               	movlw	0
  1895  010F4A  6EE6               	movwf	postinc1,c
  1896  010F4C  0E01               	movlw	1
  1897  010F4E  6EE6               	movwf	postinc1,c
  1898  010F50  EC3D  F098         	call	_StartTimer	;wreg free
  1899  010F54                     l6418:
  1900                           
  1901                           ;main.c: 234:   if (TimerDone(TMR_DISPLAY)) {
  1902                           
  1903                           ;main.c: 230:   if (V.ticks) {
  1904  010F54  0E0A               	movlw	10
  1905  010F56  6EE6               	movwf	postinc1,c
  1906  010F58  ECD9  F09A         	call	_TimerDone	;wreg free
  1907  010F5C  5036               	movf	btemp^0,w,c
  1908  010F5E  B4D8               	btfsc	status,2,c
  1909  010F60  D053               	goto	l6432
  1910                           
  1911                           ;main.c: 235:    if (TimerDone(TMR_HELPDIS)) {
  1912  010F62  0E09               	movlw	9
  1913  010F64  6EE6               	movwf	postinc1,c
  1914  010F66  ECD9  F09A         	call	_TimerDone	;wreg free
  1915  010F6A  5036               	movf	btemp^0,w,c
  1916  010F6C  B4D8               	btfsc	status,2,c
  1917  010F6E  D004               	goto	l6426
  1918                           
  1919                           ;main.c: 236:     set_display_info(DIS_STR);
  1920  010F70  0E00               	movlw	0
  1921  010F72  6EE6               	movwf	postinc1,c
  1922  010F74  EC4D  F09B         	call	_set_display_info	;wreg free
  1923  010F78                     l6426:
  1924                           
  1925                           ;main.c: 238:    sprintf(get_vterm_ptr(1, 0), "%d %d, %d %d    #", get_raw_result(C_BATT
      +                          ), get_raw_result(C_PV), get_raw_result(V_CC), get_raw_result(V_BAT));
  1926  010F78  0E04               	movlw	4
  1927  010F7A  6EE6               	movwf	postinc1,c
  1928  010F7C  EC3E  F09B         	call	_get_raw_result	;wreg free
  1929  010F80  0060  F0DB  FFE6   	movff	btemp,postinc1
  1930  010F86  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1931  010F8C  0E02               	movlw	2
  1932  010F8E  6EE6               	movwf	postinc1,c
  1933  010F90  EC3E  F09B         	call	_get_raw_result	;wreg free
  1934  010F94  0060  F0DB  FFE6   	movff	btemp,postinc1
  1935  010F9A  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1936  010FA0  0E01               	movlw	1
  1937  010FA2  6EE6               	movwf	postinc1,c
  1938  010FA4  EC3E  F09B         	call	_get_raw_result	;wreg free
  1939  010FA8  0060  F0DB  FFE6   	movff	btemp,postinc1
  1940  010FAE  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1941  010FB4  0E00               	movlw	0
  1942  010FB6  6EE6               	movwf	postinc1,c
  1943  010FB8  EC3E  F09B         	call	_get_raw_result	;wreg free
  1944  010FBC  0060  F0DB  FFE6   	movff	btemp,postinc1
  1945  010FC2  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1946  010FC8  0E62               	movlw	low STR_9
  1947  010FCA  6EE6               	movwf	postinc1,c
  1948  010FCC  0EFF               	movlw	high STR_9
  1949  010FCE  6EE6               	movwf	postinc1,c
  1950  010FD0  0E00               	movlw	0
  1951  010FD2  6EE6               	movwf	postinc1,c
  1952  010FD4  0E01               	movlw	1
  1953  010FD6  6EE6               	movwf	postinc1,c
  1954  010FD8  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  1955  010FDC  0060  F0DB  FFE6   	movff	btemp,postinc1
  1956  010FE2  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  1957  010FE8  0E0C               	movlw	12
  1958  010FEA  6EE6               	movwf	postinc1,c
  1959  010FEC  EC15  F090         	call	_sprintf	;wreg free
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 239:    StartTimer(TMR_DISPLAY, 100);
  1963  010FF0  0E64               	movlw	100
  1964  010FF2  6EE6               	movwf	postinc1,c
  1965  010FF4  0E00               	movlw	0
  1966  010FF6  6EE6               	movwf	postinc1,c
  1967  010FF8  0E0A               	movlw	10
  1968  010FFA  6EE6               	movwf	postinc1,c
  1969  010FFC  EC3D  F098         	call	_StartTimer	;wreg free
  1970                           
  1971                           ;main.c: 240:    update_lcd(0);
  1972  011000  0E00               	movlw	0
  1973  011002  6EE6               	movwf	postinc1,c
  1974  011004  EC8E  F08F         	call	_update_lcd	;wreg free
  1975  011008                     l6432:
  1976                           
  1977                           ;main.c: 246:   check_help(V.flipper);
  1978  011008  0101               	movlb	1	; () banked
  1979  01100A  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  1980  01100C  6EE6               	movwf	postinc1,c
  1981  01100E  EC5C  F08D         	call	_check_help	;wreg free
  1982                           
  1983                           ;main.c: 251:   if (V.set_sequ) {
  1984  011012  0101               	movlb	1	; () banked
  1985  011014  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  1986  011016  D772               	goto	l6406
  1987                           
  1988                           ; BSR set to: 1
  1989                           ;main.c: 252:    if (TimerDone(TMR_INFO)) {
  1990  011018  0E07               	movlw	7
  1991  01101A  6EE6               	movwf	postinc1,c
  1992  01101C  ECD9  F09A         	call	_TimerDone	;wreg free
  1993  011020  5036               	movf	btemp^0,w,c
  1994  011022  B4D8               	btfsc	status,2,c
  1995  011024  D00B               	goto	l6444
  1996                           
  1997                           ;main.c: 253:     V.set_sequ = 0;
  1998  011026  0101               	movlb	1	; () banked
  1999  011028  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2000                           
  2001                           ; BSR set to: 1
  2002                           ;main.c: 254:     set_vterm(0);
  2003  01102A  0E00               	movlw	0
  2004  01102C  6EE6               	movwf	postinc1,c
  2005  01102E  EC97  F09B         	call	_set_vterm	;wreg free
  2006                           
  2007                           ; BSR set to: 3
  2008                           ;main.c: 255:     update_lcd(0);
  2009  011032  0E00               	movlw	0
  2010  011034  6EE6               	movwf	postinc1,c
  2011  011036  EC8E  F08F         	call	_update_lcd	;wreg free
  2012                           
  2013                           ;main.c: 256:    } else {
  2014  01103A  D760               	goto	l6406
  2015  01103C                     l6444:
  2016                           
  2017                           ;main.c: 257:     set_vterm(2);
  2018  01103C  0E02               	movlw	2
  2019  01103E  6EE6               	movwf	postinc1,c
  2020  011040  EC97  F09B         	call	_set_vterm	;wreg free
  2021                           
  2022                           ; BSR set to: 3
  2023                           ;main.c: 258:     update_lcd(2);
  2024  011044  0E02               	movlw	2
  2025  011046  6EE6               	movwf	postinc1,c
  2026  011048  EC8E  F08F         	call	_update_lcd	;wreg free
  2027  01104C  D757               	goto	l6406
  2028  01104E                     __end_of_main:
  2029                           	opt callstack 0
  2030                           
  2031 ;; *************** function _start_adc_scan *****************
  2032 ;; Defined at:
  2033 ;;		line 17 in file "daq.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1  [STACK] _Bool 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/3
  2044 ;;		On exit  : 1/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    7
  2054 ;; This function calls:
  2055 ;;		_ADCC_SetADIInterruptHandler
  2056 ;;		_ADCC_SetADTIInterruptHandler
  2057 ;;		_ADCC_StartConversion
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text1
  2064  01303E                     __ptext1:
  2065                           	opt callstack 0
  2066  01303E                     _start_adc_scan:
  2067                           	opt callstack 23
  2068                           
  2069                           ;daq.c: 19:  if (R.done)
  2070                           
  2071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2072                           ;incstack = 0
  2073  01303E  0100               	movlb	0	; () banked
  2074  013040  517F               	movf	(_R+31)& (0+255),w,b	;volatile
  2075  013042  A4D8               	btfss	status,2,c
  2076  013044  0012               	return	
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;daq.c: 22:  R.scan_index = 0;
  2080  013046  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;daq.c: 23:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2084  013048  0EB8               	movlw	low _adc_int_handler
  2085  01304A  6EE6               	movwf	postinc1,c
  2086  01304C  0E36               	movlw	high _adc_int_handler
  2087  01304E  6EE6               	movwf	postinc1,c
  2088  013050  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2089  013052  6EE6               	movwf	postinc1,c
  2090  013054  EC76  F09A         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2091                           
  2092                           ;daq.c: 24:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2093  013058  0E4E               	movlw	low _adc_int_t_handler
  2094  01305A  6EE6               	movwf	postinc1,c
  2095  01305C  0E2A               	movlw	high _adc_int_t_handler
  2096  01305E  6EE6               	movwf	postinc1,c
  2097  013060  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2098  013062  6EE6               	movwf	postinc1,c
  2099  013064  EC62  F09A         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2100                           
  2101                           ;daq.c: 25:  ADCC_StartConversion(R.scan_index & 0xf);
  2102  013068  0100               	movlb	0	; () banked
  2103  01306A  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2104  01306C  0B0F               	andlw	15
  2105  01306E  6EE6               	movwf	postinc1,c
  2106  013070  EC1C  F09C         	call	_ADCC_StartConversion	;wreg free
  2107                           
  2108                           ; BSR set to: 62
  2109  013074  82BE               	bsf	190,1,c	;volatile
  2110                           
  2111                           ; BSR set to: 62
  2112  013076  84BE               	bsf	190,2,c	;volatile
  2113                           
  2114                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2115  013078  0012               	return		;funcret
  2116  01307A                     __end_of_start_adc_scan:
  2117                           	opt callstack 0
  2118                           
  2119 ;; *************** function _ADCC_StartConversion *****************
  2120 ;; Defined at:
  2121 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  channel         1  [STACK] enum E16136
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1  [STACK] void 
  2128 ;; Registers used:
  2129 ;;		fsr1l, fsr1h
  2130 ;; Tracked objects:
  2131 ;;		On entry : 3F/0
  2132 ;;		On exit  : 3F/3E
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    6
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_start_adc_scan
  2146 ;;		_adc_int_t_handler
  2147 ;; This function uses a reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text2
  2151  013838                     __ptext2:
  2152                           	opt callstack 0
  2153  013838                     _ADCC_StartConversion:
  2154                           	opt callstack 6
  2155                           
  2156                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2157                           ;stkvar	_channel @ sp[(0)+-1]
  2158                           
  2159                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2160                           ;incstack = 0
  2161  013838  0EFF               	movlw	-1
  2162  01383A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2163                           
  2164                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2165  013840  013E               	movlb	62	; () banked
  2166  013842  8FF8               	bsf	248,7,b	;volatile
  2167                           
  2168                           ; BSR set to: 62
  2169                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2170  013844  81F8               	bsf	248,0,b	;volatile
  2171                           
  2172                           ; BSR set to: 62
  2173                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2174  013846  52E5               	movf	postdec1,f,c
  2175  013848  0012               	return		;funcret
  2176  01384A                     __end_of_ADCC_StartConversion:
  2177                           	opt callstack 0
  2178                           
  2179 ;; *************** function _srand *****************
  2180 ;; Defined at:
  2181 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  s               2  [STACK] unsigned int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1  [STACK] void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2190 ;; Tracked objects:
  2191 ;;		On entry : 3F/0
  2192 ;;		On exit  : 3F/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    6
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text3
  2210  013194                     __ptext3:
  2211                           	opt callstack 0
  2212  013194                     _srand:
  2213                           	opt callstack 24
  2214                           
  2215                           ;stkvar	_s @ sp[(0)+-2]
  2216                           
  2217                           ; BSR set to: 62
  2218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2219                           ;incstack = 0
  2220  013194  0EFE               	movlw	-2
  2221  013196  50E3               	movf	plusw1,w,c
  2222  013198  0FFF               	addlw	255
  2223  01319A  6E40               	movwf	(btemp+10)^0,c
  2224  01319C  0EFF               	movlw	-1
  2225  01319E  006F FF8C  F041    	movff	plusw1,btemp+11
  2226  0131A4  0EFF               	movlw	255
  2227  0131A6  2241               	addwfc	(btemp+11)^0,f,c
  2228  0131A8  0060  F100  F0CA   	movff	btemp+10,_seed
  2229  0131AE  0060  F104  F0CB   	movff	btemp+11,_seed+1
  2230  0131B4  0100               	movlb	0	; () banked
  2231  0131B6  6BCC               	clrf	(_seed+2)& (0+255),b
  2232  0131B8  6BCD               	clrf	(_seed+3)& (0+255),b
  2233  0131BA  6BCE               	clrf	(_seed+4)& (0+255),b
  2234  0131BC  6BCF               	clrf	(_seed+5)& (0+255),b
  2235  0131BE  6BD0               	clrf	(_seed+6)& (0+255),b
  2236  0131C0  6BD1               	clrf	(_seed+7)& (0+255),b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2240  0131C2  52E5               	movf	postdec1,f,c
  2241  0131C4  52E5               	movf	postdec1,f,c
  2242  0131C6  0012               	return		;funcret
  2243  0131C8                     __end_of_srand:
  2244                           	opt callstack 0
  2245                           
  2246 ;; *************** function _init_display *****************
  2247 ;; Defined at:
  2248 ;;		line 37 in file "eadog.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1  [STACK] void 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/1
  2259 ;;		On exit  : 3F/3D
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    8
  2269 ;; This function calls:
  2270 ;;		_ringBufS_init
  2271 ;;		_send_lcd_cmd
  2272 ;;		_send_lcd_cmd_long
  2273 ;;		_wdtdelay
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text4
  2280  01223C                     __ptext4:
  2281                           	opt callstack 0
  2282  01223C                     _init_display:
  2283                           	opt callstack 22
  2284                           
  2285                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2286                           
  2287                           ; BSR set to: 0
  2288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2289                           ;incstack = 0
  2290  01223C  0E83               	movlw	low _ring_buf1
  2291  01223E  0100               	movlb	0	; () banked
  2292  012240  6F9E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2293  012242  0E02               	movlw	high _ring_buf1
  2294  012244  6F9F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2295                           
  2296                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2297  012246  0E40               	movlw	low _ring_buf2
  2298  012248  6F9C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2299  01224A  0E02               	movlw	high _ring_buf2
  2300  01224C  6F9D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2304  01224E  0060  F27B  FFE6   	movff	_spi_link+6,postinc1
  2305  012254  0060  F27F  FFE6   	movff	_spi_link+7,postinc1
  2306  01225A  ECAE  F099         	call	_ringBufS_init	;wreg free
  2307                           
  2308                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2309  01225E  0060  F273  FFE6   	movff	_spi_link+4,postinc1
  2310  012264  0060  F277  FFE6   	movff	_spi_link+5,postinc1
  2311  01226A  ECAE  F099         	call	_ringBufS_init	;wreg free
  2312                           
  2313                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2314  01226E  84BE               	bsf	190,2,c	;volatile
  2315  012270  84BC               	bsf	188,2,c	;volatile
  2316                           
  2317                           ;eadog.c: 46:  wdtdelay(350000);
  2318  012272  0E30               	movlw	48
  2319  012274  6EE6               	movwf	postinc1,c
  2320  012276  0E57               	movlw	87
  2321  012278  6EE6               	movwf	postinc1,c
  2322  01227A  0E05               	movlw	5
  2323  01227C  6EE6               	movwf	postinc1,c
  2324  01227E  0E00               	movlw	0
  2325  012280  6EE6               	movwf	postinc1,c
  2326  012282  EC84  F096         	call	_wdtdelay	;wreg free
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2330  012286  0E39               	movlw	57
  2331  012288  6EE6               	movwf	postinc1,c
  2332  01228A  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2336  01228E  0E1D               	movlw	29
  2337  012290  6EE6               	movwf	postinc1,c
  2338  012292  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2342  012296  0E50               	movlw	80
  2343  012298  6EE6               	movwf	postinc1,c
  2344  01229A  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2348  01229E  0E6C               	movlw	108
  2349  0122A0  6EE6               	movwf	postinc1,c
  2350  0122A2  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2354  0122A6  0E76               	movlw	118
  2355  0122A8  6EE6               	movwf	postinc1,c
  2356  0122AA  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2360  0122AE  0E38               	movlw	56
  2361  0122B0  6EE6               	movwf	postinc1,c
  2362  0122B2  EC86  F099         	call	_send_lcd_cmd_long	;wreg free
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2366  0122B6  0E0F               	movlw	15
  2367  0122B8  6EE6               	movwf	postinc1,c
  2368  0122BA  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2372  0122BE  0E01               	movlw	1
  2373  0122C0  6EE6               	movwf	postinc1,c
  2374  0122C2  EC86  F099         	call	_send_lcd_cmd_long	;wreg free
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2378  0122C6  0E02               	movlw	2
  2379  0122C8  6EE6               	movwf	postinc1,c
  2380  0122CA  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2384  0122CE  0E06               	movlw	6
  2385  0122D0  6EE6               	movwf	postinc1,c
  2386  0122D2  EC9A  F099         	call	_send_lcd_cmd	;wreg free
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;eadog.c: 57:  wdtdelay(30);
  2390  0122D6  0E1E               	movlw	30
  2391  0122D8  6EE6               	movwf	postinc1,c
  2392  0122DA  0E00               	movlw	0
  2393  0122DC  6EE6               	movwf	postinc1,c
  2394  0122DE  0E00               	movlw	0
  2395  0122E0  6EE6               	movwf	postinc1,c
  2396  0122E2  0E00               	movlw	0
  2397  0122E4  6EE6               	movwf	postinc1,c
  2398  0122E6  EC84  F096         	call	_wdtdelay	;wreg free
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2402  0122EA  0E02               	movlw	2
  2403  0122EC  013D               	movlb	61	; () banked
  2404  0122EE  6F16               	movwf	22,b	;volatile
  2405                           
  2406                           ; BSR set to: 61
  2407                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2408  0122F0  0E40               	movlw	64
  2409  0122F2  6F15               	movwf	21,b	;volatile
  2410                           
  2411                           ; BSR set to: 61
  2412                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2413  0122F4  0E83               	movlw	131
  2414  0122F6  6F14               	movwf	20,b	;volatile
  2415                           
  2416                           ; BSR set to: 61
  2417                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2418  0122F8  931A               	bcf	26,1,b	;volatile
  2419                           
  2420                           ; BSR set to: 61
  2421                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2422  0122FA  0E3F               	movlw	-193
  2423  0122FC  013B               	movlb	59	; () banked
  2424  0122FE  17FD               	andwf	253,f,b	;volatile
  2425                           
  2426                           ; BSR set to: 59
  2427                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2428  012300  9BFD               	bcf	253,5,b	;volatile
  2429                           
  2430                           ; BSR set to: 59
  2431                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2432  012302  51FD               	movf	253,w,b	;volatile
  2433  012304  0BF9               	andlw	-7
  2434  012306  0902               	iorlw	2
  2435  012308  6FFD               	movwf	253,b	;volatile
  2436                           
  2437                           ; BSR set to: 59
  2438                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2439  01230A  0EE7               	movlw	-25
  2440  01230C  17FD               	andwf	253,f,b	;volatile
  2441                           
  2442                           ; BSR set to: 59
  2443                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2444  01230E  81FD               	bsf	253,0,b	;volatile
  2445                           
  2446                           ; BSR set to: 59
  2447                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2448  012310  0E83               	movlw	low _ring_buf1
  2449  012312  6FF9               	movwf	249,b	;volatile
  2450  012314  0E02               	movlw	high _ring_buf1
  2451  012316  6FFA               	movwf	250,b	;volatile
  2452  012318  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2453  01231A  6FFB               	movwf	251,b	;volatile
  2454                           
  2455                           ; BSR set to: 59
  2456                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2457  01231C  9BFC               	bcf	252,5,b	;volatile
  2458                           
  2459                           ; BSR set to: 59
  2460                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2461  01231E  013D               	movlb	61	; () banked
  2462  012320  831A               	bsf	26,1,b	;volatile
  2463                           
  2464                           ; BSR set to: 61
  2465                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2466  012322  94BE               	bcf	190,2,c	;volatile
  2467                           
  2468                           ; BSR set to: 61
  2469                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2470  012324  0012               	return		;funcret
  2471  012326                     __end_of_init_display:
  2472                           	opt callstack 0
  2473                           
  2474 ;; *************** function _send_lcd_cmd_long *****************
  2475 ;; Defined at:
  2476 ;;		line 114 in file "eadog.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  cmd             1  [STACK] const unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1  [STACK] void 
  2483 ;; Registers used:
  2484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2485 ;; Tracked objects:
  2486 ;;		On entry : 3F/0
  2487 ;;		On exit  : 3F/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    7
  2497 ;; This function calls:
  2498 ;;		_SPI1_Exchange8bit
  2499 ;;		_wdtdelay
  2500 ;; This function is called by:
  2501 ;;		_init_display
  2502 ;; This function uses a reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text5
  2506  01330C                     __ptext5:
  2507                           	opt callstack 0
  2508  01330C                     _send_lcd_cmd_long:
  2509                           	opt callstack 22
  2510                           
  2511                           ; BSR set to: 61
  2512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2513                           ;incstack = 0
  2514                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2515  01330C  92BC               	bcf	188,1,c	;volatile
  2516                           
  2517                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2518  01330E  94BC               	bcf	188,2,c	;volatile
  2519                           
  2520                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2521                           ;stkvar	_cmd @ sp[(0)+-1]
  2522  013310  0EFF               	movlw	-1
  2523  013312  50E3               	movf	plusw1,w,c
  2524  013314  6EE6               	movwf	postinc1,c
  2525  013316  EC2F  F09B         	call	_SPI1_Exchange8bit	;wreg free
  2526                           
  2527                           ; BSR set to: 57
  2528                           ;eadog.c: 119:  wdtdelay(800);
  2529  01331A  0E20               	movlw	32
  2530  01331C  6EE6               	movwf	postinc1,c
  2531  01331E  0E03               	movlw	3
  2532  013320  6EE6               	movwf	postinc1,c
  2533  013322  0E00               	movlw	0
  2534  013324  6EE6               	movwf	postinc1,c
  2535  013326  0E00               	movlw	0
  2536  013328  6EE6               	movwf	postinc1,c
  2537  01332A  EC84  F096         	call	_wdtdelay	;wreg free
  2538                           
  2539                           ; BSR set to: 0
  2540  01332E  82BC               	bsf	188,1,c	;volatile
  2541                           
  2542                           ; BSR set to: 0
  2543                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2544  013330  52E5               	movf	postdec1,f,c
  2545  013332  0012               	return		;funcret
  2546  013334                     __end_of_send_lcd_cmd_long:
  2547                           	opt callstack 0
  2548                           
  2549 ;; *************** function _send_lcd_cmd *****************
  2550 ;; Defined at:
  2551 ;;		line 102 in file "eadog.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  cmd             1  [STACK] const unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1  [STACK] void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2560 ;; Tracked objects:
  2561 ;;		On entry : 3F/0
  2562 ;;		On exit  : 3F/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:    7
  2572 ;; This function calls:
  2573 ;;		_SPI1_Exchange8bit
  2574 ;;		_wdtdelay
  2575 ;; This function is called by:
  2576 ;;		_init_display
  2577 ;; This function uses a reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text6
  2581  013334                     __ptext6:
  2582                           	opt callstack 0
  2583  013334                     _send_lcd_cmd:
  2584                           	opt callstack 22
  2585                           
  2586                           ; BSR set to: 0
  2587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2588                           ;incstack = 0
  2589                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  2590  013334  92BC               	bcf	188,1,c	;volatile
  2591                           
  2592                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  2593  013336  94BC               	bcf	188,2,c	;volatile
  2594                           
  2595                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  2596                           ;stkvar	_cmd @ sp[(0)+-1]
  2597  013338  0EFF               	movlw	-1
  2598  01333A  50E3               	movf	plusw1,w,c
  2599  01333C  6EE6               	movwf	postinc1,c
  2600  01333E  EC2F  F09B         	call	_SPI1_Exchange8bit	;wreg free
  2601                           
  2602                           ; BSR set to: 57
  2603                           ;eadog.c: 107:  wdtdelay(30);
  2604  013342  0E1E               	movlw	30
  2605  013344  6EE6               	movwf	postinc1,c
  2606  013346  0E00               	movlw	0
  2607  013348  6EE6               	movwf	postinc1,c
  2608  01334A  0E00               	movlw	0
  2609  01334C  6EE6               	movwf	postinc1,c
  2610  01334E  0E00               	movlw	0
  2611  013350  6EE6               	movwf	postinc1,c
  2612  013352  EC84  F096         	call	_wdtdelay	;wreg free
  2613                           
  2614                           ; BSR set to: 0
  2615  013356  82BC               	bsf	188,1,c	;volatile
  2616                           
  2617                           ; BSR set to: 0
  2618                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  2619  013358  52E5               	movf	postdec1,f,c
  2620  01335A  0012               	return		;funcret
  2621  01335C                     __end_of_send_lcd_cmd:
  2622                           	opt callstack 0
  2623                           
  2624 ;; *************** function _SPI1_Exchange8bit *****************
  2625 ;; Defined at:
  2626 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  data            1  [STACK] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1  [STACK] unsigned char 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 3F/39
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    6
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_send_lcd_cmd
  2651 ;;		_send_lcd_cmd_long
  2652 ;; This function uses a reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text7
  2656  01365E                     __ptext7:
  2657                           	opt callstack 0
  2658  01365E                     _SPI1_Exchange8bit:
  2659                           	opt callstack 22
  2660                           
  2661                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2662                           
  2663                           ; BSR set to: 0
  2664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2665                           ;incstack = 0
  2666  01365E  0E01               	movlw	1
  2667  013660  013D               	movlb	61	; () banked
  2668  013662  6F12               	movwf	18,b	;volatile
  2669                           
  2670                           ; BSR set to: 61
  2671                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2672                           ;stkvar	_data @ sp[(0)+-1]
  2673  013664  0EFF               	movlw	-1
  2674  013666  006F FF8F FD11     	movff	plusw1,15633	;volatile
  2675  01366C                     l839:
  2676                           
  2677                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2678  01366C  0139               	movlb	57	; () banked
  2679  01366E  A9A2               	btfss	162,4,b	;volatile
  2680  013670  D7FD               	goto	l839
  2681                           
  2682                           ; BSR set to: 57
  2683                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2684  013672  006F F440  F036    	movff	15632,btemp	;volatile
  2685                           
  2686                           ; BSR set to: 57
  2687                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2688  013678  52E5               	movf	postdec1,f,c
  2689  01367A  0012               	return		;funcret
  2690  01367C                     __end_of_SPI1_Exchange8bit:
  2691                           	opt callstack 0
  2692                           
  2693 ;; *************** function _ringBufS_init *****************
  2694 ;; Defined at:
  2695 ;;		line 22 in file "ringbufs.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  _this           2  [STACK] PTR volatile struct ring
  2698 ;;		 -> ring_buf2(67), ring_buf1(67), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1  [STACK] void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    7
  2717 ;; This function calls:
  2718 ;;		_memset
  2719 ;; This function is called by:
  2720 ;;		_init_display
  2721 ;; This function uses a reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text8
  2725  01335C                     __ptext8:
  2726                           	opt callstack 0
  2727  01335C                     _ringBufS_init:
  2728                           	opt callstack 22
  2729                           
  2730                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  2731                           
  2732                           ; BSR set to: 57
  2733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2734                           ;incstack = 0
  2735  01335C  0E43               	movlw	67
  2736  01335E  6EE6               	movwf	postinc1,c
  2737  013360  0E00               	movlw	0
  2738  013362  6EE6               	movwf	postinc1,c
  2739  013364  0E00               	movlw	0
  2740  013366  6EE6               	movwf	postinc1,c
  2741  013368  0E00               	movlw	0
  2742  01336A  6EE6               	movwf	postinc1,c
  2743                           
  2744                           ;stkvar	__this @ sp[(-4)+-2]
  2745  01336C  0EFA               	movlw	-6
  2746  01336E  006F FF8F FFE6     	movff	plusw1,postinc1
  2747  013374  006F FF8F FFE6     	movff	plusw1,postinc1
  2748  01337A  EC27  F088         	call	_memset	;wreg free
  2749                           
  2750                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  2751  01337E  52E5               	movf	postdec1,f,c
  2752  013380  52E5               	movf	postdec1,f,c
  2753  013382  0012               	return		;funcret
  2754  013384                     __end_of_ringBufS_init:
  2755                           	opt callstack 0
  2756                           
  2757 ;; *************** function _get_raw_result *****************
  2758 ;; Defined at:
  2759 ;;		line 46 in file "daq.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  index           1  [STACK] enum E16136
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  2  [STACK] unsigned short 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/2
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    6
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text9
  2788  01367C                     __ptext9:
  2789                           	opt callstack 0
  2790  01367C                     _get_raw_result:
  2791                           	opt callstack 24
  2792                           
  2793                           ;daq.c: 46: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 47: {;daq.c: 48:  r
      +                          eturn R.raw_adc[index];
  2794                           ;stkvar	_index @ sp[(0)+-1]
  2795                           
  2796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2797                           ;incstack = 0
  2798  01367C  0EFF               	movlw	-1
  2799  01367E  50E3               	movf	plusw1,w,c
  2800  013680  0D02               	mullw	2
  2801  013682  50F3               	movf	243,w,c
  2802  013684  0F60               	addlw	low _R
  2803  013686  6ED9               	movwf	fsr2l,c
  2804  013688  6ADA               	clrf	fsr2h,c
  2805  01368A  006F FF78  F036    	movff	postinc2,btemp
  2806  013690  006F FF74  F037    	movff	postdec2,btemp+1
  2807                           
  2808                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  2809  013696  52E5               	movf	postdec1,f,c
  2810  013698  0012               	return		;funcret
  2811  01369A                     __end_of_get_raw_result:
  2812                           	opt callstack 0
  2813                           
  2814 ;; *************** function _eaDogM_WriteCommand *****************
  2815 ;; Defined at:
  2816 ;;		line 160 in file "eadog.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  cmd             1  [STACK] const unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1  [STACK] void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  2825 ;; Tracked objects:
  2826 ;;		On entry : 3F/3D
  2827 ;;		On exit  : 3F/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:   16
  2837 ;; This function calls:
  2838 ;;		_send_lcd_cmd_dma
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text10
  2845  01385A                     __ptext10:
  2846                           	opt callstack 0
  2847  01385A                     _eaDogM_WriteCommand:
  2848                           	opt callstack 14
  2849                           
  2850                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  2851                           ;stkvar	_cmd @ sp[(0)+-1]
  2852                           
  2853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2854                           ;incstack = 0
  2855  01385A  0EFF               	movlw	-1
  2856  01385C  50E3               	movf	plusw1,w,c
  2857  01385E  6EE6               	movwf	postinc1,c
  2858  013860  ECDE  F096         	call	_send_lcd_cmd_dma	;wreg free
  2859                           
  2860                           ; BSR set to: 0
  2861                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  2862  013864  52E5               	movf	postdec1,f,c
  2863  013866  0012               	return		;funcret
  2864  013868                     __end_of_eaDogM_WriteCommand:
  2865                           	opt callstack 0
  2866                           
  2867 ;; *************** function _clear_adc_scan *****************
  2868 ;; Defined at:
  2869 ;;		line 36 in file "daq.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1  [STACK] void 
  2876 ;; Registers used:
  2877 ;;		None
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/2
  2880 ;;		On exit  : 3F/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    6
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;; This function uses a reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text11
  2898  0138F2                     __ptext11:
  2899                           	opt callstack 0
  2900  0138F2                     _clear_adc_scan:
  2901                           	opt callstack 24
  2902                           
  2903                           ;daq.c: 38:  R.done = 0;
  2904                           
  2905                           ; BSR set to: 0
  2906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2907                           ;incstack = 0
  2908  0138F2  0100               	movlb	0	; () banked
  2909  0138F4  6B7F               	clrf	(_R+31)& (0+255),b	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2913  0138F6  0012               	return		;funcret
  2914  0138F8                     __end_of_clear_adc_scan:
  2915                           	opt callstack 0
  2916                           
  2917 ;; *************** function _check_help *****************
  2918 ;; Defined at:
  2919 ;;		line 40 in file "mconfig.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  flipper         1  [STACK] _Bool 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1  [STACK] void 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2928 ;; Tracked objects:
  2929 ;;		On entry : 3F/1
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:   18
  2940 ;; This function calls:
  2941 ;;		_StartTimer
  2942 ;;		_TimerDone
  2943 ;;		_display_help
  2944 ;;		_display_info
  2945 ;;		_get_vterm_ptr
  2946 ;;		_help_button
  2947 ;;		_mode_lamp_bright
  2948 ;;		_mode_lamp_dim
  2949 ;;		_set_display_info
  2950 ;;		_set_temp_display_help
  2951 ;;		_set_vterm
  2952 ;;		_sprintf
  2953 ;;		_update_lcd
  2954 ;;		_vterm_dump
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text12
  2961  011AB8                     __ptext12:
  2962                           	opt callstack 0
  2963  011AB8                     _check_help:
  2964                           	opt callstack 12
  2965                           
  2966                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  2967                           
  2968                           ; BSR set to: 0
  2969                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2970                           ;incstack = 0
  2971  011AB8  EC5B  F098         	call	_help_button	;wreg free
  2972  011ABC  5036               	movf	btemp^0,w,c
  2973  011ABE  B4D8               	btfsc	status,2,c
  2974  011AC0  D0D0               	goto	l6318
  2975  011AC2  EC69  F09C         	call	_display_info	;wreg free
  2976  011AC6  0436               	decf	btemp^0,w,c
  2977  011AC8  B4D8               	btfsc	status,2,c
  2978  011ACA  D0CB               	goto	l6318
  2979                           
  2980                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  2981  011ACC  0EDC               	movlw	220
  2982  011ACE  6EE6               	movwf	postinc1,c
  2983  011AD0  0E05               	movlw	5
  2984  011AD2  6EE6               	movwf	postinc1,c
  2985  011AD4  0E0B               	movlw	11
  2986  011AD6  6EE6               	movwf	postinc1,c
  2987  011AD8  EC3D  F098         	call	_StartTimer	;wreg free
  2988                           
  2989                           ;mconfig.c: 47:   if (V.debug)
  2990  011ADC  0101               	movlb	1	; () banked
  2991  011ADE  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;mconfig.c: 48:    vterm_dump();
  2995  011AE0  EC65  F08E         	call	_vterm_dump	;wreg free
  2996                           
  2997                           ;mconfig.c: 50:   set_vterm(1);
  2998  011AE4  0E01               	movlw	1
  2999  011AE6  6EE6               	movwf	postinc1,c
  3000  011AE8  EC97  F09B         	call	_set_vterm	;wreg free
  3001                           
  3002                           ; BSR set to: 3
  3003                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  3004  011AEC  EC69  F09C         	call	_display_info	;wreg free
  3005  011AF0  5036               	movf	btemp^0,w,c
  3006  011AF2  6EE6               	movwf	postinc1,c
  3007  011AF4  EC25  F09C         	call	_set_temp_display_help	;wreg free
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  3011  011AF8  0E01               	movlw	1
  3012  011AFA  6EE6               	movwf	postinc1,c
  3013  011AFC  EC4D  F09B         	call	_set_display_info	;wreg free
  3014                           
  3015                           ;mconfig.c: 53:   if (flipper) {
  3016                           ;stkvar	_flipper @ sp[(0)+-1]
  3017  011B00  0EFF               	movlw	-1
  3018  011B02  50E3               	movf	plusw1,w,c
  3019  011B04  B4D8               	btfsc	status,2,c
  3020  011B06  D019               	goto	l6306
  3021                           
  3022                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  3023  011B08  0ED6               	movlw	low STR_13
  3024  011B0A  6EE6               	movwf	postinc1,c
  3025  011B0C  0EFF               	movlw	high STR_13
  3026  011B0E  6EE6               	movwf	postinc1,c
  3027  011B10  0E3C               	movlw	low STR_15
  3028  011B12  6EE6               	movwf	postinc1,c
  3029  011B14  0EFF               	movlw	high STR_15
  3030  011B16  6EE6               	movwf	postinc1,c
  3031  011B18  0E01               	movlw	1
  3032  011B1A  6EE6               	movwf	postinc1,c
  3033  011B1C  0E00               	movlw	0
  3034  011B1E  6EE6               	movwf	postinc1,c
  3035  011B20  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3036  011B24  0060  F0DB  FFE6   	movff	btemp,postinc1
  3037  011B2A  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3038  011B30  0E06               	movlw	6
  3039  011B32  6EE6               	movwf	postinc1,c
  3040  011B34  EC15  F090         	call	_sprintf	;wreg free
  3041                           
  3042                           ;mconfig.c: 55:   } else {
  3043  011B38  D018               	goto	l1551
  3044  011B3A                     l6306:
  3045                           
  3046                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  3047  011B3A  0EEC               	movlw	low STR_14
  3048  011B3C  6EE6               	movwf	postinc1,c
  3049  011B3E  0EFF               	movlw	high STR_14
  3050  011B40  6EE6               	movwf	postinc1,c
  3051  011B42  0E3C               	movlw	low STR_15
  3052  011B44  6EE6               	movwf	postinc1,c
  3053  011B46  0EFF               	movlw	high STR_15
  3054  011B48  6EE6               	movwf	postinc1,c
  3055  011B4A  0E01               	movlw	1
  3056  011B4C  6EE6               	movwf	postinc1,c
  3057  011B4E  0E00               	movlw	0
  3058  011B50  6EE6               	movwf	postinc1,c
  3059  011B52  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3060  011B56  0060  F0DB  FFE6   	movff	btemp,postinc1
  3061  011B5C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3062  011B62  0E06               	movlw	6
  3063  011B64  6EE6               	movwf	postinc1,c
  3064  011B66  EC15  F090         	call	_sprintf	;wreg free
  3065  011B6A                     l1551:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  3069  011B6A  0101               	movlb	1	; () banked
  3070  011B6C  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3071  011B6E  32E8               	rrcf	wreg,f,c
  3072  011B70  32E8               	rrcf	wreg,f,c
  3073  011B72  0B03               	andlw	3
  3074  011B74  0D24               	mullw	36
  3075  011B76  0E12               	movlw	18
  3076  011B78  26F3               	addwf	243,f,c
  3077  011B7A  0E00               	movlw	0
  3078  011B7C  22F4               	addwfc	244,f,c
  3079  011B7E  0E81               	movlw	low _T
  3080  011B80  6E40               	movwf	(btemp+10)^0,c
  3081  011B82  0EFE               	movlw	high _T
  3082  011B84  6E41               	movwf	(btemp+11)^0,c
  3083  011B86  50F3               	movf	243,w,c
  3084  011B88  2640               	addwf	(btemp+10)^0,f,c
  3085  011B8A  50F4               	movf	244,w,c
  3086  011B8C  2241               	addwfc	(btemp+11)^0,f,c
  3087  011B8E  0060  F103  FFE6   	movff	btemp+10,postinc1
  3088  011B94  0060  F107  FFE6   	movff	btemp+11,postinc1
  3089  011B9A  0EE2               	movlw	low STR_17
  3090  011B9C  6EE6               	movwf	postinc1,c
  3091  011B9E  0EFF               	movlw	high STR_17
  3092  011BA0  6EE6               	movwf	postinc1,c
  3093  011BA2  0E01               	movlw	1
  3094  011BA4  6EE6               	movwf	postinc1,c
  3095  011BA6  0E01               	movlw	1
  3096  011BA8  6EE6               	movwf	postinc1,c
  3097  011BAA  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3098  011BAE  0060  F0DB  FFE6   	movff	btemp,postinc1
  3099  011BB4  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3100  011BBA  0E06               	movlw	6
  3101  011BBC  6EE6               	movwf	postinc1,c
  3102  011BBE  EC15  F090         	call	_sprintf	;wreg free
  3103                           
  3104                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  3105  011BC2  0101               	movlb	1	; () banked
  3106  011BC4  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  3107  011BC6  32E8               	rrcf	wreg,f,c
  3108  011BC8  32E8               	rrcf	wreg,f,c
  3109  011BCA  0B03               	andlw	3
  3110  011BCC  0D24               	mullw	36
  3111  011BCE  0E81               	movlw	low _T
  3112  011BD0  6E40               	movwf	(btemp+10)^0,c
  3113  011BD2  0EFE               	movlw	high _T
  3114  011BD4  6E41               	movwf	(btemp+11)^0,c
  3115  011BD6  50F3               	movf	243,w,c
  3116  011BD8  2640               	addwf	(btemp+10)^0,f,c
  3117  011BDA  50F4               	movf	244,w,c
  3118  011BDC  2241               	addwfc	(btemp+11)^0,f,c
  3119  011BDE  0060  F103  FFE6   	movff	btemp+10,postinc1
  3120  011BE4  0060  F107  FFE6   	movff	btemp+11,postinc1
  3121  011BEA  0EE2               	movlw	low STR_17
  3122  011BEC  6EE6               	movwf	postinc1,c
  3123  011BEE  0EFF               	movlw	high STR_17
  3124  011BF0  6EE6               	movwf	postinc1,c
  3125  011BF2  0E01               	movlw	1
  3126  011BF4  6EE6               	movwf	postinc1,c
  3127  011BF6  0E02               	movlw	2
  3128  011BF8  6EE6               	movwf	postinc1,c
  3129  011BFA  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3130  011BFE  0060  F0DB  FFE6   	movff	btemp,postinc1
  3131  011C04  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3132  011C0A  0E06               	movlw	6
  3133  011C0C  6EE6               	movwf	postinc1,c
  3134  011C0E  EC15  F090         	call	_sprintf	;wreg free
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;mconfig.c: 60:   V.help_id++;
  3138  011C12  EE20  F1A9         	lfsr	2,_V+169	;volatile
  3139  011C16  30DF               	rrcf	223,w,c
  3140  011C18  6E41               	movwf	(btemp+11)^0,c
  3141  011C1A  3241               	rrcf	(btemp+11)^0,f,c
  3142  011C1C  3041               	rrcf	(btemp+11)^0,w,c
  3143  011C1E  0B03               	andlw	3
  3144  011C20  6E41               	movwf	(btemp+11)^0,c
  3145  011C22  2A41               	incf	(btemp+11)^0,f,c
  3146  011C24  3641               	rlcf	(btemp+11)^0,f,c
  3147  011C26  3641               	rlcf	(btemp+11)^0,f,c
  3148  011C28  3641               	rlcf	(btemp+11)^0,f,c
  3149  011C2A  50DF               	movf	223,w,c
  3150  011C2C  1841               	xorwf	(btemp+11)^0,w,c
  3151  011C2E  0BE7               	andlw	-25
  3152  011C30  1841               	xorwf	(btemp+11)^0,w,c
  3153  011C32  6EDF               	movwf	223,c
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  3157  011C34  0EB8               	movlw	184
  3158  011C36  6EE6               	movwf	postinc1,c
  3159  011C38  0E0B               	movlw	11
  3160  011C3A  6EE6               	movwf	postinc1,c
  3161  011C3C  0E09               	movlw	9
  3162  011C3E  6EE6               	movwf	postinc1,c
  3163  011C40  EC3D  F098         	call	_StartTimer	;wreg free
  3164                           
  3165                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  3166  011C44  0EB8               	movlw	184
  3167  011C46  6EE6               	movwf	postinc1,c
  3168  011C48  0E0B               	movlw	11
  3169  011C4A  6EE6               	movwf	postinc1,c
  3170  011C4C  0E07               	movlw	7
  3171  011C4E  6EE6               	movwf	postinc1,c
  3172  011C50  EC3D  F098         	call	_StartTimer	;wreg free
  3173                           
  3174                           ;mconfig.c: 63:   mode_lamp_bright();
  3175  011C54  EC34  F09C         	call	_mode_lamp_bright	;wreg free
  3176                           
  3177                           ;mconfig.c: 64:   update_lcd(1);
  3178  011C58  0E01               	movlw	1
  3179  011C5A  6EE6               	movwf	postinc1,c
  3180  011C5C  EC8E  F08F         	call	_update_lcd	;wreg free
  3181                           
  3182                           ;mconfig.c: 65:  } else {
  3183  011C60  D032               	goto	l1555
  3184  011C62                     l6318:
  3185                           
  3186                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  3187  011C62  0E09               	movlw	9
  3188  011C64  6EE6               	movwf	postinc1,c
  3189  011C66  ECD9  F09A         	call	_TimerDone	;wreg free
  3190  011C6A  5036               	movf	btemp^0,w,c
  3191  011C6C  B4D8               	btfsc	status,2,c
  3192  011C6E  D02B               	goto	l1555
  3193                           
  3194                           ;mconfig.c: 67:    set_vterm(0);
  3195  011C70  0E00               	movlw	0
  3196  011C72  6EE6               	movwf	postinc1,c
  3197  011C74  EC97  F09B         	call	_set_vterm	;wreg free
  3198                           
  3199                           ; BSR set to: 3
  3200                           ;mconfig.c: 68:    V.help = 0;
  3201  011C78  0101               	movlb	1	; () banked
  3202  011C7A  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;mconfig.c: 69:    set_display_info(display_help());
  3206  011C7C  EC6D  F09C         	call	_display_help	;wreg free
  3207  011C80  5036               	movf	btemp^0,w,c
  3208  011C82  6EE6               	movwf	postinc1,c
  3209  011C84  EC4D  F09B         	call	_set_display_info	;wreg free
  3210                           
  3211                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  3212  011C88  0060  F67F  FFE6   	movff	_V+159,postinc1
  3213  011C8E  0060  F683  FFE6   	movff	_V+160,postinc1
  3214  011C94  ECCD  F09B         	call	_mode_lamp_dim	;wreg free
  3215                           
  3216                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  3217  011C98  0E0B               	movlw	11
  3218  011C9A  6EE6               	movwf	postinc1,c
  3219  011C9C  ECD9  F09A         	call	_TimerDone	;wreg free
  3220  011CA0  5036               	movf	btemp^0,w,c
  3221  011CA2  B4D8               	btfsc	status,2,c
  3222  011CA4  D010               	goto	l1555
  3223                           
  3224                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  3225  011CA6  0101               	movlb	1	; () banked
  3226  011CA8  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  3227  011CAA  A4D8               	btfss	status,2,c
  3228  011CAC  D002               	goto	u4220
  3229  011CAE  0E01               	movlw	1
  3230  011CB0  D001               	goto	u4230
  3231  011CB2                     u4220:
  3232  011CB2  0E00               	movlw	0
  3233  011CB4                     u4230:
  3234  011CB4  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  3238  011CB6  0EDC               	movlw	220
  3239  011CB8  6EE6               	movwf	postinc1,c
  3240  011CBA  0E05               	movlw	5
  3241  011CBC  6EE6               	movwf	postinc1,c
  3242  011CBE  0E0B               	movlw	11
  3243  011CC0  6EE6               	movwf	postinc1,c
  3244  011CC2  EC3D  F098         	call	_StartTimer	;wreg free
  3245  011CC6                     l1555:
  3246                           
  3247                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3248  011CC6  52E5               	movf	postdec1,f,c
  3249  011CC8  0012               	return		;funcret
  3250  011CCA                     __end_of_check_help:
  3251                           	opt callstack 0
  3252                           
  3253 ;; *************** function _vterm_dump *****************
  3254 ;; Defined at:
  3255 ;;		line 118 in file "mconfig.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1  [STACK] void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3264 ;; Tracked objects:
  3265 ;;		On entry : 3F/1
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:   17
  3276 ;; This function calls:
  3277 ;;		_WaitMs
  3278 ;;		_eaDogM_WriteStringAtPos
  3279 ;;		_get_vterm_ptr
  3280 ;;		_sprintf
  3281 ;;		_wait_lcd_done
  3282 ;; This function is called by:
  3283 ;;		_check_help
  3284 ;; This function uses a reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text13
  3288  011CCA                     __ptext13:
  3289                           	opt callstack 0
  3290  011CCA                     _vterm_dump:
  3291                           	opt callstack 12
  3292                           
  3293                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  3294                           
  3295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3296                           ;incstack = 0
  3297  011CCA  0E01               	movlw	1
  3298  011CCC  6EE6               	movwf	postinc1,c
  3299  011CCE  0E00               	movlw	0
  3300  011CD0  6EE6               	movwf	postinc1,c
  3301  011CD2  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3302  011CD6  0060  F0DB  FFE6   	movff	btemp,postinc1
  3303  011CDC  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3304  011CE2  0E00               	movlw	0
  3305  011CE4  6EE6               	movwf	postinc1,c
  3306  011CE6  0E00               	movlw	0
  3307  011CE8  6EE6               	movwf	postinc1,c
  3308  011CEA  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3309  011CEE  0060  F0DB  FFE6   	movff	btemp,postinc1
  3310  011CF4  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3311  011CFA  0EB8               	movlw	low STR_19
  3312  011CFC  6EE6               	movwf	postinc1,c
  3313  011CFE  0EFF               	movlw	high STR_19
  3314  011D00  6EE6               	movwf	postinc1,c
  3315  011D02  0E01               	movlw	low (_V+1)
  3316  011D04  6EE6               	movwf	postinc1,c
  3317  011D06  0E01               	movlw	high (_V+1)
  3318  011D08  6EE6               	movwf	postinc1,c
  3319  011D0A  0E08               	movlw	8
  3320  011D0C  6EE6               	movwf	postinc1,c
  3321  011D0E  EC15  F090         	call	_sprintf	;wreg free
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;mconfig.c: 121:  wait_lcd_done();
  3325  011D12  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  3329  011D16  0E01               	movlw	low (_V+1)
  3330  011D18  6EE6               	movwf	postinc1,c
  3331  011D1A  0E01               	movlw	high (_V+1)
  3332  011D1C  6EE6               	movwf	postinc1,c
  3333  011D1E  0E00               	movlw	0
  3334  011D20  6EE6               	movwf	postinc1,c
  3335  011D22  0E00               	movlw	0
  3336  011D24  6EE6               	movwf	postinc1,c
  3337  011D26  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3338                           
  3339                           ; BSR set to: 59
  3340                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  3341  011D2A  0E01               	movlw	1
  3342  011D2C  6EE6               	movwf	postinc1,c
  3343  011D2E  0E01               	movlw	1
  3344  011D30  6EE6               	movwf	postinc1,c
  3345  011D32  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3346  011D36  0060  F0DB  FFE6   	movff	btemp,postinc1
  3347  011D3C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3348  011D42  0E00               	movlw	0
  3349  011D44  6EE6               	movwf	postinc1,c
  3350  011D46  0E01               	movlw	1
  3351  011D48  6EE6               	movwf	postinc1,c
  3352  011D4A  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3353  011D4E  0060  F0DB  FFE6   	movff	btemp,postinc1
  3354  011D54  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3355  011D5A  0EB8               	movlw	low STR_19
  3356  011D5C  6EE6               	movwf	postinc1,c
  3357  011D5E  0EFF               	movlw	high STR_19
  3358  011D60  6EE6               	movwf	postinc1,c
  3359  011D62  0E01               	movlw	low (_V+1)
  3360  011D64  6EE6               	movwf	postinc1,c
  3361  011D66  0E01               	movlw	high (_V+1)
  3362  011D68  6EE6               	movwf	postinc1,c
  3363  011D6A  0E08               	movlw	8
  3364  011D6C  6EE6               	movwf	postinc1,c
  3365  011D6E  EC15  F090         	call	_sprintf	;wreg free
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;mconfig.c: 124:  wait_lcd_done();
  3369  011D72  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3370                           
  3371                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  3372  011D76  0E01               	movlw	low (_V+1)
  3373  011D78  6EE6               	movwf	postinc1,c
  3374  011D7A  0E01               	movlw	high (_V+1)
  3375  011D7C  6EE6               	movwf	postinc1,c
  3376  011D7E  0E00               	movlw	0
  3377  011D80  6EE6               	movwf	postinc1,c
  3378  011D82  0E01               	movlw	1
  3379  011D84  6EE6               	movwf	postinc1,c
  3380  011D86  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3381                           
  3382                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  3383  011D8A  0E01               	movlw	1
  3384  011D8C  6EE6               	movwf	postinc1,c
  3385  011D8E  0E02               	movlw	2
  3386  011D90  6EE6               	movwf	postinc1,c
  3387  011D92  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3388  011D96  0060  F0DB  FFE6   	movff	btemp,postinc1
  3389  011D9C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3390  011DA2  0E00               	movlw	0
  3391  011DA4  6EE6               	movwf	postinc1,c
  3392  011DA6  0E02               	movlw	2
  3393  011DA8  6EE6               	movwf	postinc1,c
  3394  011DAA  EC2E  F099         	call	_get_vterm_ptr	;wreg free
  3395  011DAE  0060  F0DB  FFE6   	movff	btemp,postinc1
  3396  011DB4  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3397  011DBA  0EB8               	movlw	low STR_19
  3398  011DBC  6EE6               	movwf	postinc1,c
  3399  011DBE  0EFF               	movlw	high STR_19
  3400  011DC0  6EE6               	movwf	postinc1,c
  3401  011DC2  0E01               	movlw	low (_V+1)
  3402  011DC4  6EE6               	movwf	postinc1,c
  3403  011DC6  0E01               	movlw	high (_V+1)
  3404  011DC8  6EE6               	movwf	postinc1,c
  3405  011DCA  0E08               	movlw	8
  3406  011DCC  6EE6               	movwf	postinc1,c
  3407  011DCE  EC15  F090         	call	_sprintf	;wreg free
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;mconfig.c: 127:  wait_lcd_done();
  3411  011DD2  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  3415  011DD6  0E01               	movlw	low (_V+1)
  3416  011DD8  6EE6               	movwf	postinc1,c
  3417  011DDA  0E01               	movlw	high (_V+1)
  3418  011DDC  6EE6               	movwf	postinc1,c
  3419  011DDE  0E00               	movlw	0
  3420  011DE0  6EE6               	movwf	postinc1,c
  3421  011DE2  0E02               	movlw	2
  3422  011DE4  6EE6               	movwf	postinc1,c
  3423  011DE6  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3424                           
  3425                           ; BSR set to: 59
  3426                           ;mconfig.c: 129:  WaitMs(3000);
  3427  011DEA  0EB8               	movlw	184
  3428  011DEC  6EE6               	movwf	postinc1,c
  3429  011DEE  0E0B               	movlw	11
  3430  011DF0  6EE6               	movwf	postinc1,c
  3431  011DF2  EC94  F098         	call	_WaitMs	;wreg free
  3432                           
  3433                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3434  011DF6  0012               	return		;funcret
  3435  011DF8                     __end_of_vterm_dump:
  3436                           	opt callstack 0
  3437                           
  3438 ;; *************** function _sprintf *****************
  3439 ;; Defined at:
  3440 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  s               2  [STACK] PTR unsigned char 
  3443 ;;		 -> D.lcd(216), D(218), V(189), 
  3444 ;;  fmt             2  [STACK] PTR const unsigned char 
  3445 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  3446 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  3447 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  3448 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  3449 ;;		 -> STR_9(18), STR_8(17), STR_6(15), STR_5(17), 
  3450 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  f               6  [STACK] struct _IO_FILE
  3453 ;;  ap              2  [STACK] PTR void [1]
  3454 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3455 ;;  ret             2    0        int 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2  [STACK] int 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/3
  3462 ;;		On exit  : 3F/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:   14
  3472 ;; This function calls:
  3473 ;;		_vfprintf
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;;		_check_help
  3477 ;;		_vterm_dump
  3478 ;; This function uses a reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text14
  3482  01202A                     __ptext14:
  3483                           	opt callstack 0
  3484  01202A                     _sprintf:
  3485                           	opt callstack 0
  3486                           
  3487                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3488  01202A  0E08               	movlw	8
  3489  01202C  26E1               	addwf	fsr1l,f,c
  3490  01202E  0E00               	movlw	0
  3491  012030  22E2               	addwfc	fsr1h,f,c
  3492                           
  3493                           ;incstack = 0
  3494  012032  0EFE               	movlw	254
  3495  012034  6E40               	movwf	(btemp+10)^0,c
  3496  012036  0EFF               	movlw	255
  3497  012038  6E41               	movwf	(btemp+11)^0,c
  3498                           
  3499                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  3500  01203A  0EF5               	movlw	245
  3501  01203C  24E1               	addwf	fsr1l,w,c
  3502  01203E  6E3E               	movwf	(btemp+8)^0,c
  3503  012040  0EFF               	movlw	255
  3504  012042  20E2               	addwfc	fsr1h,w,c
  3505  012044  6E3F               	movwf	(btemp+9)^0,c
  3506  012046  5040               	movf	(btemp+10)^0,w,c
  3507  012048  263E               	addwf	(btemp+8)^0,f,c
  3508  01204A  5041               	movf	(btemp+11)^0,w,c
  3509  01204C  223F               	addwfc	(btemp+9)^0,f,c
  3510                           
  3511                           ;stkvar	_ap @ sp[(-8)+6]
  3512  01204E  0EFF               	movlw	-1
  3513  012050  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  3514  012056  0EFE               	movlw	-2
  3515  012058  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  3516                           
  3517                           ;stkvar	_s @ sp[(-8)+-3]
  3518  01205E  0EF5               	movlw	-11
  3519  012060  006F FF8C  F040    	movff	plusw1,btemp+10
  3520  012066  0EF6               	movlw	-10
  3521  012068  006F FF8C  F041    	movff	plusw1,btemp+11
  3522                           
  3523                           ;stkvar	_f @ sp[(-8)+0]
  3524  01206E  0EF9               	movlw	-7
  3525  012070  0060  F107  FFE3   	movff	btemp+11,plusw1
  3526  012076  0EF8               	movlw	-8
  3527  012078  0060  F103  FFE3   	movff	btemp+10,plusw1
  3528                           
  3529                           ;stkvar	_f @ sp[(-8)+0]
  3530  01207E  0EFA               	movlw	250
  3531  012080  24E1               	addwf	fsr1l,w,c
  3532  012082  6ED9               	movwf	fsr2l,c
  3533  012084  0EFF               	movlw	255
  3534  012086  20E2               	addwfc	fsr1h,w,c
  3535  012088  6EDA               	movwf	fsr2h,c
  3536  01208A  0E00               	movlw	0
  3537  01208C  6EDE               	movwf	postinc2,c
  3538  01208E  0E00               	movlw	0
  3539  012090  6EDD               	movwf	postdec2,c
  3540                           
  3541                           ;stkvar	_f @ sp[(-8)+0]
  3542  012092  0EFC               	movlw	252
  3543  012094  24E1               	addwf	fsr1l,w,c
  3544  012096  6ED9               	movwf	fsr2l,c
  3545  012098  0EFF               	movlw	255
  3546  01209A  20E2               	addwfc	fsr1h,w,c
  3547  01209C  6EDA               	movwf	fsr2h,c
  3548  01209E  0E00               	movlw	0
  3549  0120A0  6EDE               	movwf	postinc2,c
  3550  0120A2  0E00               	movlw	0
  3551  0120A4  6EDD               	movwf	postdec2,c
  3552                           
  3553                           ;stkvar	_ap @ sp[(-8)+6]
  3554  0120A6  0EFE               	movlw	254
  3555  0120A8  24E1               	addwf	fsr1l,w,c
  3556  0120AA  6E36               	movwf	btemp^0,c
  3557  0120AC  0EFF               	movlw	255
  3558  0120AE  20E2               	addwfc	fsr1h,w,c
  3559  0120B0  6E37               	movwf	(btemp+1)^0,c
  3560  0120B2  0060  F0DB  FFE6   	movff	btemp,postinc1
  3561  0120B8  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3562                           
  3563                           ;stkvar	_fmt @ sp[(-10)+-5]
  3564  0120BE  0EF1               	movlw	-15
  3565  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
  3566  0120C6  006F FF8F FFE6     	movff	plusw1,postinc1
  3567                           
  3568                           ;stkvar	_f @ sp[(-12)+0]
  3569  0120CC  0EF4               	movlw	244
  3570  0120CE  24E1               	addwf	fsr1l,w,c
  3571  0120D0  6E36               	movwf	btemp^0,c
  3572  0120D2  0EFF               	movlw	255
  3573  0120D4  20E2               	addwfc	fsr1h,w,c
  3574  0120D6  6E37               	movwf	(btemp+1)^0,c
  3575  0120D8  0060  F0DB  FFE6   	movff	btemp,postinc1
  3576  0120DE  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  3577  0120E4  EC4F  F092         	call	_vfprintf	;wreg free
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;stkvar	_f @ sp[(-8)+0]
  3581  0120E8  0EFA               	movlw	250
  3582  0120EA  24E1               	addwf	fsr1l,w,c
  3583  0120EC  6ED9               	movwf	fsr2l,c
  3584  0120EE  0EFF               	movlw	255
  3585  0120F0  20E2               	addwfc	fsr1h,w,c
  3586  0120F2  6EDA               	movwf	fsr2h,c
  3587  0120F4  006F FF78  F040    	movff	postinc2,btemp+10
  3588  0120FA  006F FF74  F041    	movff	postdec2,btemp+11
  3589                           
  3590                           ;stkvar	_s @ sp[(-8)+-3]
  3591  012100  0EF5               	movlw	-11
  3592  012102  006F FF8C  F03E    	movff	plusw1,btemp+8
  3593  012108  0EF6               	movlw	-10
  3594  01210A  006F FF8C  F03F    	movff	plusw1,btemp+9
  3595  012110  5040               	movf	(btemp+10)^0,w,c
  3596  012112  243E               	addwf	(btemp+8)^0,w,c
  3597  012114  6ED9               	movwf	fsr2l,c
  3598  012116  5041               	movf	(btemp+11)^0,w,c
  3599  012118  203F               	addwfc	(btemp+9)^0,w,c
  3600  01211A  6EDA               	movwf	fsr2h,c
  3601  01211C  0E00               	movlw	0
  3602  01211E  6EDF               	movwf	indf2,c
  3603                           
  3604                           ; BSR set to: 0
  3605                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  3606  012120  0EF8               	movlw	248
  3607  012122  26E1               	addwf	fsr1l,f,c
  3608  012124  0EFF               	movlw	255
  3609  012126  22E2               	addwfc	fsr1h,f,c
  3610  012128  52E5               	movf	postdec1,f,c
  3611  01212A  50E7               	movf	indf1,w,c
  3612  01212C  5EE1               	subwf	fsr1l,f,c
  3613  01212E  0E00               	movlw	0
  3614  012130  5AE2               	subwfb	fsr1h,f,c
  3615  012132  0012               	return		;funcret
  3616  012134                     __end_of_sprintf:
  3617                           	opt callstack 0
  3618                           
  3619 ;; *************** function _get_vterm_ptr *****************
  3620 ;; Defined at:
  3621 ;;		line 113 in file "mconfig.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  line            1  [STACK] unsigned char 
  3624 ;;  vterm           1  [STACK] unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2  [STACK] PTR unsigned char 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/3
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    6
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;;		_check_help
  3648 ;;		_vterm_dump
  3649 ;; This function uses a reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text15
  3653  01325C                     __ptext15:
  3654                           	opt callstack 0
  3655  01325C                     _get_vterm_ptr:
  3656                           	opt callstack 24
  3657                           
  3658                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  3659                           ;stkvar	_vterm @ sp[(0)+-2]
  3660                           
  3661                           ; BSR set to: 0
  3662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3663                           ;incstack = 0
  3664  01325C  0EFE               	movlw	-2
  3665  01325E  50E3               	movf	plusw1,w,c
  3666  013260  0B03               	andlw	3
  3667  013262  0D36               	mullw	54
  3668  013264  0E00               	movlw	low _D
  3669  013266  6E36               	movwf	btemp^0,c
  3670  013268  0E03               	movlw	high _D
  3671  01326A  6E37               	movwf	(btemp+1)^0,c
  3672  01326C  50F3               	movf	243,w,c
  3673  01326E  2636               	addwf	btemp^0,f,c
  3674  013270  50F4               	movf	244,w,c
  3675  013272  2237               	addwfc	(btemp+1)^0,f,c
  3676                           
  3677                           ;stkvar	_line @ sp[(0)+-1]
  3678  013274  0EFF               	movlw	-1
  3679  013276  50E3               	movf	plusw1,w,c
  3680  013278  0B03               	andlw	3
  3681  01327A  0D12               	mullw	18
  3682  01327C  50F3               	movf	243,w,c
  3683  01327E  2636               	addwf	btemp^0,f,c
  3684  013280  50F4               	movf	244,w,c
  3685  013282  2237               	addwfc	(btemp+1)^0,f,c
  3686                           
  3687                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3688  013284  52E5               	movf	postdec1,f,c
  3689  013286  52E5               	movf	postdec1,f,c
  3690  013288  0012               	return		;funcret
  3691  01328A                     __end_of_get_vterm_ptr:
  3692                           	opt callstack 0
  3693                           
  3694 ;; *************** function _WaitMs *****************
  3695 ;; Defined at:
  3696 ;;		line 32 in file "timers.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  numMilliseco    2  [STACK] const unsigned short 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1  [STACK] void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3705 ;; Tracked objects:
  3706 ;;		On entry : 5/1
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3714 ;;Total ram usage:        0 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    7
  3717 ;; This function calls:
  3718 ;;		_StartTimer
  3719 ;;		_TimerDone
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;;		_vterm_dump
  3723 ;; This function uses a reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text16
  3727  013128                     __ptext16:
  3728                           	opt callstack 0
  3729  013128                     _WaitMs:
  3730                           	opt callstack 21
  3731                           
  3732                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  3733                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  3734                           
  3735                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3736                           ;incstack = 0
  3737  013128  0EFE               	movlw	-2
  3738  01312A  006F FF8F FFE6     	movff	plusw1,postinc1
  3739  013130  006F FF8F FFE6     	movff	plusw1,postinc1
  3740  013136  0E00               	movlw	0
  3741  013138  6EE6               	movwf	postinc1,c
  3742  01313A  EC3D  F098         	call	_StartTimer	;wreg free
  3743                           
  3744                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3745  01313E  D005               	goto	l4804
  3746  013140                     l1481:
  3747                           
  3748                           ;timers.c: 36:   __nop();
  3749  013140  F000               	nop	
  3750                           
  3751                           ;timers.c: 37:   __nop();
  3752  013142  F000               	nop	
  3753                           
  3754                           ;timers.c: 38:   __nop();
  3755  013144  F000               	nop	
  3756                           
  3757                           ;timers.c: 39:   __nop();
  3758  013146  F000               	nop	
  3759  013148  0004               	clrwdt		;# 
  3760  01314A                     l4804:
  3761                           
  3762                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  3763  01314A  0E00               	movlw	0
  3764  01314C  6EE6               	movwf	postinc1,c
  3765  01314E  ECD9  F09A         	call	_TimerDone	;wreg free
  3766  013152  5036               	movf	btemp^0,w,c
  3767  013154  B4D8               	btfsc	status,2,c
  3768  013156  D7F4               	goto	l1481
  3769                           
  3770                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  3771  013158  52E5               	movf	postdec1,f,c
  3772  01315A  52E5               	movf	postdec1,f,c
  3773  01315C  0012               	return		;funcret
  3774  01315E                     __end_of_WaitMs:
  3775                           	opt callstack 0
  3776                           
  3777 ;; *************** function _update_lcd *****************
  3778 ;; Defined at:
  3779 ;;		line 82 in file "mconfig.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  vterm           1  [STACK] unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1  [STACK] unsigned char 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 7/3
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:   17
  3800 ;; This function calls:
  3801 ;;		_eaDogM_WriteStringAtPos
  3802 ;;		_wait_lcd_done
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;;		_check_help
  3806 ;; This function uses a reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text17
  3810  011F1C                     __ptext17:
  3811                           	opt callstack 0
  3812  011F1C                     _update_lcd:
  3813                           	opt callstack 13
  3814                           
  3815                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  3816                           ;stkvar	_vterm @ sp[(0)+-1]
  3817                           
  3818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3819                           ;incstack = 0
  3820  011F1C  0EFF               	movlw	-1
  3821  011F1E  006F FF8C  F036    	movff	plusw1,btemp
  3822  011F24  0E03               	movlw	3
  3823  011F26  1636               	andwf	btemp^0,f,c
  3824  011F28  0EFF               	movlw	-1
  3825  011F2A  0060  F0DB  FFE3   	movff	btemp,plusw1
  3826                           
  3827                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  3828  011F30  0103               	movlb	3	; () banked
  3829  011F32  A1D8               	btfss	(_D+216)& (0+255),0,b
  3830  011F34  D004               	goto	l6190
  3831                           
  3832                           ; BSR set to: 3
  3833                           ;stkvar	_vterm @ sp[(0)+-1]
  3834  011F36  0EFF               	movlw	-1
  3835  011F38  50E3               	movf	plusw1,w,c
  3836  011F3A  B4D8               	btfsc	status,2,c
  3837  011F3C  D074               	goto	l1559
  3838  011F3E                     l6190:
  3839                           
  3840                           ; BSR set to: 3
  3841                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  3842                           ;stkvar	_vterm @ sp[(0)+-1]
  3843  011F3E  0EFF               	movlw	-1
  3844  011F40  50E3               	movf	plusw1,w,c
  3845  011F42  0D36               	mullw	54
  3846  011F44  0E10               	movlw	low (_D+16)
  3847  011F46  24F3               	addwf	243,w,c
  3848  011F48  6ED9               	movwf	fsr2l,c
  3849  011F4A  0E03               	movlw	high (_D+16)
  3850  011F4C  20F4               	addwfc	prodh,w,c
  3851  011F4E  6EDA               	movwf	fsr2h,c
  3852  011F50  0E00               	movlw	0
  3853  011F52  6EDF               	movwf	indf2,c
  3854                           
  3855                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  3856                           ;stkvar	_vterm @ sp[(0)+-1]
  3857  011F54  0EFF               	movlw	-1
  3858  011F56  50E3               	movf	plusw1,w,c
  3859  011F58  0D36               	mullw	54
  3860  011F5A  0E22               	movlw	low (_D+34)
  3861  011F5C  24F3               	addwf	243,w,c
  3862  011F5E  6ED9               	movwf	fsr2l,c
  3863  011F60  0E03               	movlw	high (_D+34)
  3864  011F62  20F4               	addwfc	prodh,w,c
  3865  011F64  6EDA               	movwf	fsr2h,c
  3866  011F66  0E00               	movlw	0
  3867  011F68  6EDF               	movwf	indf2,c
  3868                           
  3869                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  3870                           ;stkvar	_vterm @ sp[(0)+-1]
  3871  011F6A  0EFF               	movlw	-1
  3872  011F6C  50E3               	movf	plusw1,w,c
  3873  011F6E  0D36               	mullw	54
  3874  011F70  0E34               	movlw	low (_D+52)
  3875  011F72  24F3               	addwf	243,w,c
  3876  011F74  6ED9               	movwf	fsr2l,c
  3877  011F76  0E03               	movlw	high (_D+52)
  3878  011F78  20F4               	addwfc	prodh,w,c
  3879  011F7A  6EDA               	movwf	fsr2h,c
  3880  011F7C  0E00               	movlw	0
  3881  011F7E  6EDF               	movwf	indf2,c
  3882                           
  3883                           ; BSR set to: 3
  3884                           ;mconfig.c: 92:  wait_lcd_done();
  3885  011F80  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  3889                           ;stkvar	_vterm @ sp[(0)+-1]
  3890  011F84  0EFF               	movlw	-1
  3891  011F86  50E3               	movf	plusw1,w,c
  3892  011F88  0D36               	mullw	54
  3893  011F8A  0E00               	movlw	low _D
  3894  011F8C  6E40               	movwf	(btemp+10)^0,c
  3895  011F8E  0E03               	movlw	high _D
  3896  011F90  6E41               	movwf	(btemp+11)^0,c
  3897  011F92  50F3               	movf	243,w,c
  3898  011F94  2640               	addwf	(btemp+10)^0,f,c
  3899  011F96  50F4               	movf	244,w,c
  3900  011F98  2241               	addwfc	(btemp+11)^0,f,c
  3901  011F9A  0060  F103  FFE6   	movff	btemp+10,postinc1
  3902  011FA0  0060  F107  FFE6   	movff	btemp+11,postinc1
  3903  011FA6  0E00               	movlw	0
  3904  011FA8  6EE6               	movwf	postinc1,c
  3905  011FAA  0E00               	movlw	0
  3906  011FAC  6EE6               	movwf	postinc1,c
  3907  011FAE  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3908                           
  3909                           ; BSR set to: 59
  3910                           ;mconfig.c: 94:  wait_lcd_done();
  3911  011FB2  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  3915                           ;stkvar	_vterm @ sp[(0)+-1]
  3916  011FB6  0EFF               	movlw	-1
  3917  011FB8  50E3               	movf	plusw1,w,c
  3918  011FBA  0D36               	mullw	54
  3919  011FBC  0E00               	movlw	low _D
  3920  011FBE  6E40               	movwf	(btemp+10)^0,c
  3921  011FC0  0E03               	movlw	high _D
  3922  011FC2  6E41               	movwf	(btemp+11)^0,c
  3923  011FC4  0E12               	movlw	18
  3924  011FC6  2640               	addwf	(btemp+10)^0,f,c
  3925  011FC8  0E00               	movlw	0
  3926  011FCA  2241               	addwfc	(btemp+11)^0,f,c
  3927  011FCC  50F3               	movf	243,w,c
  3928  011FCE  2640               	addwf	(btemp+10)^0,f,c
  3929  011FD0  50F4               	movf	244,w,c
  3930  011FD2  2241               	addwfc	(btemp+11)^0,f,c
  3931  011FD4  0060  F103  FFE6   	movff	btemp+10,postinc1
  3932  011FDA  0060  F107  FFE6   	movff	btemp+11,postinc1
  3933  011FE0  0E00               	movlw	0
  3934  011FE2  6EE6               	movwf	postinc1,c
  3935  011FE4  0E01               	movlw	1
  3936  011FE6  6EE6               	movwf	postinc1,c
  3937  011FE8  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3938                           
  3939                           ; BSR set to: 59
  3940                           ;mconfig.c: 96:  wait_lcd_done();
  3941  011FEC  EC89  F09B         	call	_wait_lcd_done	;wreg free
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  3945                           ;stkvar	_vterm @ sp[(0)+-1]
  3946  011FF0  0EFF               	movlw	-1
  3947  011FF2  50E3               	movf	plusw1,w,c
  3948  011FF4  0D36               	mullw	54
  3949  011FF6  0E00               	movlw	low _D
  3950  011FF8  6E40               	movwf	(btemp+10)^0,c
  3951  011FFA  0E03               	movlw	high _D
  3952  011FFC  6E41               	movwf	(btemp+11)^0,c
  3953  011FFE  0E24               	movlw	36
  3954  012000  2640               	addwf	(btemp+10)^0,f,c
  3955  012002  0E00               	movlw	0
  3956  012004  2241               	addwfc	(btemp+11)^0,f,c
  3957  012006  50F3               	movf	243,w,c
  3958  012008  2640               	addwf	(btemp+10)^0,f,c
  3959  01200A  50F4               	movf	244,w,c
  3960  01200C  2241               	addwfc	(btemp+11)^0,f,c
  3961  01200E  0060  F103  FFE6   	movff	btemp+10,postinc1
  3962  012014  0060  F107  FFE6   	movff	btemp+11,postinc1
  3963  01201A  0E00               	movlw	0
  3964  01201C  6EE6               	movwf	postinc1,c
  3965  01201E  0E02               	movlw	2
  3966  012020  6EE6               	movwf	postinc1,c
  3967  012022  ECAF  F098         	call	_eaDogM_WriteStringAtPos	;wreg free
  3968  012026                     l1559:
  3969                           
  3970                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3971  012026  52E5               	movf	postdec1,f,c
  3972  012028  0012               	return		;funcret
  3973  01202A                     __end_of_update_lcd:
  3974                           	opt callstack 0
  3975                           
  3976 ;; *************** function _eaDogM_WriteStringAtPos *****************
  3977 ;; Defined at:
  3978 ;;		line 252 in file "eadog.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  r               1  [STACK] const unsigned char 
  3981 ;;  c               1  [STACK] const unsigned char 
  3982 ;;  strPtr          2  [STACK] PTR unsigned char 
  3983 ;;		 -> D.lcd(216), D(218), V(189), 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1  [STACK] void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  3990 ;; Tracked objects:
  3991 ;;		On entry : 3F/0
  3992 ;;		On exit  : 3F/3B
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:   16
  4002 ;; This function calls:
  4003 ;;		_eaDogM_WriteString
  4004 ;;		_send_lcd_cmd_dma
  4005 ;; This function is called by:
  4006 ;;		_update_lcd
  4007 ;;		_vterm_dump
  4008 ;; This function uses a reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text18
  4012  01315E                     __ptext18:
  4013                           	opt callstack 0
  4014  01315E                     _eaDogM_WriteStringAtPos:
  4015                           	opt callstack 13
  4016                           
  4017                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  4018                           ;stkvar	_c @ sp[(0)+-2]
  4019                           
  4020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4021                           ;incstack = 0
  4022  01315E  0EFE               	movlw	-2
  4023  013160  006F FF8C  F041    	movff	plusw1,btemp+11
  4024                           
  4025                           ;stkvar	_r @ sp[(0)+-1]
  4026  013166  0EFF               	movlw	-1
  4027  013168  50E3               	movf	plusw1,w,c
  4028  01316A  0D10               	mullw	16
  4029  01316C  50F3               	movf	243,w,c
  4030  01316E  2441               	addwf	(btemp+11)^0,w,c
  4031  013170  0F80               	addlw	128
  4032  013172  6EE6               	movwf	postinc1,c
  4033  013174  ECDE  F096         	call	_send_lcd_cmd_dma	;wreg free
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  4037                           ;stkvar	_strPtr @ sp[(0)+-4]
  4038  013178  0EFC               	movlw	-4
  4039  01317A  006F FF8F FFE6     	movff	plusw1,postinc1
  4040  013180  006F FF8F FFE6     	movff	plusw1,postinc1
  4041  013186  ECFA  F092         	call	_eaDogM_WriteString	;wreg free
  4042                           
  4043                           ; BSR set to: 59
  4044                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  4045  01318A  52E5               	movf	postdec1,f,c
  4046  01318C  52E5               	movf	postdec1,f,c
  4047  01318E  52E5               	movf	postdec1,f,c
  4048  013190  52E5               	movf	postdec1,f,c
  4049  013192  0012               	return		;funcret
  4050  013194                     __end_of_eaDogM_WriteStringAtPos:
  4051                           	opt callstack 0
  4052                           
  4053 ;; *************** function _send_lcd_cmd_dma *****************
  4054 ;; Defined at:
  4055 ;;		line 205 in file "eadog.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  strPtr          1  [STACK] unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1  [STACK] void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/3D
  4066 ;;		On exit  : 3F/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:   15
  4076 ;; This function calls:
  4077 ;;		_printf
  4078 ;;		_ringBufS_flush
  4079 ;;		_start_lcd
  4080 ;;		_wait_lcd_done
  4081 ;;		_wait_lcd_set
  4082 ;; This function is called by:
  4083 ;;		_eaDogM_WriteCommand
  4084 ;;		_eaDogM_WriteStringAtPos
  4085 ;; This function uses a reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text19
  4089  012DBC                     __ptext19:
  4090                           	opt callstack 0
  4091  012DBC                     _send_lcd_cmd_dma:
  4092                           	opt callstack 13
  4093                           
  4094                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  4095                           
  4096                           ; BSR set to: 59
  4097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4098                           ;incstack = 0
  4099  012DBC  EC7C  F09C         	call	_wait_lcd_set	;wreg free
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  4103  012DC0  0E00               	movlw	0
  4104  012DC2  6EE6               	movwf	postinc1,c
  4105  012DC4  0060  F27B  FFE6   	movff	_spi_link+6,postinc1
  4106  012DCA  0060  F27F  FFE6   	movff	_spi_link+7,postinc1
  4107  012DD0  EC9E  F093         	call	_ringBufS_flush	;wreg free
  4108  012DD4  92BC               	bcf	188,1,c	;volatile
  4109  012DD6  94BC               	bcf	188,2,c	;volatile
  4110                           
  4111                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  4112  012DD8  013B               	movlb	59	; () banked
  4113  012DDA  9FFC               	bcf	252,7,b	;volatile
  4114                           
  4115                           ; BSR set to: 59
  4116                           ;eadog.c: 214:  DMA1SSZ = 1;
  4117  012DDC  0E00               	movlw	0
  4118  012DDE  6FF8               	movwf	248,b	;volatile
  4119  012DE0  0E01               	movlw	1
  4120  012DE2  6FF7               	movwf	247,b	;volatile
  4121                           
  4122                           ; BSR set to: 59
  4123                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  4124  012DE4  8FFC               	bsf	252,7,b	;volatile
  4125                           
  4126                           ; BSR set to: 59
  4127                           ;eadog.c: 216:  printf("%c", strPtr);
  4128                           ;stkvar	_strPtr @ sp[(0)+-1]
  4129  012DE6  0EFF               	movlw	-1
  4130  012DE8  50E3               	movf	plusw1,w,c
  4131  012DEA  6EE6               	movwf	postinc1,c
  4132  012DEC  0E00               	movlw	0
  4133  012DEE  6EE6               	movwf	postinc1,c
  4134  012DF0  0EF9               	movlw	low STR_11
  4135  012DF2  6EE6               	movwf	postinc1,c
  4136  012DF4  0EFF               	movlw	high STR_11
  4137  012DF6  6EE6               	movwf	postinc1,c
  4138  012DF8  0E04               	movlw	4
  4139  012DFA  6EE6               	movwf	postinc1,c
  4140  012DFC  ECF5  F095         	call	_printf	;wreg free
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;eadog.c: 217:  start_lcd();
  4144  012E00  EC7F  F09C         	call	_start_lcd	;wreg free
  4145                           
  4146                           ; BSR set to: 59
  4147                           ;eadog.c: 218:  wait_lcd_done();
  4148  012E04  EC89  F09B         	call	_wait_lcd_done	;wreg free
  4149                           
  4150                           ; BSR set to: 0
  4151  012E08  82BC               	bsf	188,1,c	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4155  012E0A  52E5               	movf	postdec1,f,c
  4156  012E0C  0012               	return		;funcret
  4157  012E0E                     __end_of_send_lcd_cmd_dma:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _wait_lcd_done *****************
  4161 ;; Defined at:
  4162 ;;		line 141 in file "eadog.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1  [STACK] void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4171 ;; Tracked objects:
  4172 ;;		On entry : 4/0
  4173 ;;		On exit  : 3F/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4180 ;;Total ram usage:        0 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    7
  4183 ;; This function calls:
  4184 ;;		_wdtdelay
  4185 ;; This function is called by:
  4186 ;;		_send_lcd_cmd_dma
  4187 ;;		_update_lcd
  4188 ;;		_vterm_dump
  4189 ;; This function uses a reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text20
  4193  013712                     __ptext20:
  4194                           	opt callstack 0
  4195  013712                     _wait_lcd_done:
  4196                           	opt callstack 22
  4197                           
  4198                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  4199                           
  4200                           ; BSR set to: 0
  4201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4202                           ;incstack = 0
  4203  013712  0100               	movlb	0	; () banked
  4204  013714  B798               	btfsc	_spi_link& (0+255),3,b	;volatile
  4205  013716  D7FD               	goto	_wait_lcd_done
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;eadog.c: 144:  wdtdelay(50);
  4209  013718  0E32               	movlw	50
  4210  01371A  6EE6               	movwf	postinc1,c
  4211  01371C  0E00               	movlw	0
  4212  01371E  6EE6               	movwf	postinc1,c
  4213  013720  0E00               	movlw	0
  4214  013722  6EE6               	movwf	postinc1,c
  4215  013724  0E00               	movlw	0
  4216  013726  6EE6               	movwf	postinc1,c
  4217  013728  EC84  F096         	call	_wdtdelay	;wreg free
  4218                           
  4219                           ; BSR set to: 0
  4220                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  4221  01372C  0012               	return		;funcret
  4222  01372E                     __end_of_wait_lcd_done:
  4223                           	opt callstack 0
  4224                           
  4225 ;; *************** function _wdtdelay *****************
  4226 ;; Defined at:
  4227 ;;		line 22 in file "eadog.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  delay           4  [STACK] const unsigned long 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1  [STACK] void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 3F/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    6
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_init_display
  4252 ;;		_send_lcd_cmd
  4253 ;;		_send_lcd_cmd_long
  4254 ;;		_wait_lcd_done
  4255 ;; This function uses a reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text21
  4259  012D08                     __ptext21:
  4260                           	opt callstack 0
  4261  012D08                     _wdtdelay:
  4262                           	opt callstack 22
  4263                           
  4264                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  4265                           
  4266                           ; BSR set to: 0
  4267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4268                           ;incstack = 0
  4269  012D08  0100               	movlb	0	; () banked
  4270  012D0A  6BA4               	clrf	wdtdelay@dcount& (0+255),b
  4271  012D0C  6BA5               	clrf	(wdtdelay@dcount+1)& (0+255),b
  4272  012D0E  6BA6               	clrf	(wdtdelay@dcount+2)& (0+255),b
  4273  012D10  6BA7               	clrf	(wdtdelay@dcount+3)& (0+255),b
  4274  012D12                     l1326:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;eadog.c: 27:   __nop();
  4278  012D12  F000               	nop	
  4279  012D14  0004               	clrwdt		;# 
  4280                           
  4281                           ;eadog.c: 29:  };
  4282  012D16  0E01               	movlw	1
  4283  012D18  0100               	movlb	0	; () banked
  4284  012D1A  27A4               	addwf	wdtdelay@dcount& (0+255),f,b
  4285  012D1C  0E00               	movlw	0
  4286  012D1E  23A5               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  4287  012D20  23A6               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  4288  012D22  23A7               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;stkvar	_delay @ sp[(0)+-4]
  4292  012D24  0EFC               	movlw	-4
  4293  012D26  006F FF8C  F036    	movff	plusw1,btemp
  4294  012D2C  51A4               	movf	wdtdelay@dcount& (0+255),w,b
  4295  012D2E  5C36               	subwf	btemp^0,w,c
  4296  012D30  0EFD               	movlw	-3
  4297  012D32  006F FF8C  F036    	movff	plusw1,btemp
  4298  012D38  51A5               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  4299  012D3A  5836               	subwfb	btemp^0,w,c
  4300  012D3C  0EFE               	movlw	-2
  4301  012D3E  006F FF8C  F036    	movff	plusw1,btemp
  4302  012D44  51A6               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  4303  012D46  5836               	subwfb	btemp^0,w,c
  4304  012D48  0EFF               	movlw	-1
  4305  012D4A  006F FF8C  F036    	movff	plusw1,btemp
  4306  012D50  51A7               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  4307  012D52  5836               	subwfb	btemp^0,w,c
  4308  012D54  B0D8               	btfsc	status,0,c
  4309  012D56  D7DD               	goto	l1326
  4310                           
  4311                           ; BSR set to: 0
  4312                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  4313  012D58  52E5               	movf	postdec1,f,c
  4314  012D5A  52E5               	movf	postdec1,f,c
  4315  012D5C  52E5               	movf	postdec1,f,c
  4316  012D5E  52E5               	movf	postdec1,f,c
  4317  012D60  0012               	return		;funcret
  4318  012D62                     __end_of_wdtdelay:
  4319                           	opt callstack 0
  4320                           
  4321 ;; *************** function _eaDogM_WriteString *****************
  4322 ;; Defined at:
  4323 ;;		line 184 in file "eadog.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  strPtr          2  [STACK] PTR unsigned char 
  4326 ;;		 -> D.lcd(216), D(218), V(189), 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1  [STACK] void 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4333 ;; Tracked objects:
  4334 ;;		On entry : 3F/0
  4335 ;;		On exit  : 3F/3B
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:   15
  4345 ;; This function calls:
  4346 ;;		_printf
  4347 ;;		_ringBufS_flush
  4348 ;;		_start_lcd
  4349 ;;		_strlen
  4350 ;;		_wait_lcd_set
  4351 ;; This function is called by:
  4352 ;;		_eaDogM_WriteStringAtPos
  4353 ;; This function uses a reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text22
  4357  0125F4                     __ptext22:
  4358                           	opt callstack 0
  4359  0125F4                     _eaDogM_WriteString:
  4360                           	opt callstack 13
  4361                           
  4362                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  4363                           
  4364                           ; BSR set to: 0
  4365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4366                           ;incstack = 0
  4367  0125F4  EC7C  F09C         	call	_wait_lcd_set	;wreg free
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  4371  0125F8  0E00               	movlw	0
  4372  0125FA  6EE6               	movwf	postinc1,c
  4373  0125FC  0060  F27B  FFE6   	movff	_spi_link+6,postinc1
  4374  012602  0060  F27F  FFE6   	movff	_spi_link+7,postinc1
  4375  012608  EC9E  F093         	call	_ringBufS_flush	;wreg free
  4376  01260C  94BC               	bcf	188,2,c	;volatile
  4377                           
  4378                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4379                           ;stkvar	_strPtr @ sp[(0)+-2]
  4380  01260E  0EFE               	movlw	-2
  4381  012610  006F FF8F FFE6     	movff	plusw1,postinc1
  4382  012616  006F FF8F FFE6     	movff	plusw1,postinc1
  4383  01261C  EC4D  F093         	call	_strlen	;wreg free
  4384  012620  5037               	movf	(btemp+1)^0,w,c
  4385  012622  E104               	bnz	u4130
  4386  012624  0E41               	movlw	65
  4387  012626  5C36               	subwf	btemp^0,w,c
  4388  012628  A0D8               	btfss	status,0,c
  4389  01262A  D010               	goto	l6154
  4390  01262C                     u4130:
  4391                           
  4392                           ;stkvar	_strPtr @ sp[(0)+-2]
  4393  01262C  0EFE               	movlw	-2
  4394  01262E  006F FF8C  F040    	movff	plusw1,btemp+10
  4395  012634  0EFF               	movlw	-1
  4396  012636  006F FF8C  F041    	movff	plusw1,btemp+11
  4397  01263C  0E40               	movlw	64
  4398  01263E  2440               	addwf	(btemp+10)^0,w,c
  4399  012640  6ED9               	movwf	fsr2l,c
  4400  012642  0E00               	movlw	0
  4401  012644  2041               	addwfc	(btemp+11)^0,w,c
  4402  012646  6EDA               	movwf	fsr2h,c
  4403  012648  0E00               	movlw	0
  4404  01264A  6EDF               	movwf	indf2,c
  4405  01264C                     l6154:
  4406                           
  4407                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  4408  01264C  013B               	movlb	59	; () banked
  4409  01264E  9FFC               	bcf	252,7,b	;volatile
  4410                           
  4411                           ; BSR set to: 59
  4412                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  4413                           ;stkvar	_strPtr @ sp[(0)+-2]
  4414  012650  0EFE               	movlw	-2
  4415  012652  006F FF8F FFE6     	movff	plusw1,postinc1
  4416  012658  006F FF8F FFE6     	movff	plusw1,postinc1
  4417  01265E  EC4D  F093         	call	_strlen	;wreg free
  4418  012662  0060  F0DB  FBF7   	movff	btemp,15351	;volatile
  4419  012668  0060  F0DF  FBF8   	movff	btemp+1,15352	;volatile
  4420                           
  4421                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  4422  01266E  013B               	movlb	59	; () banked
  4423  012670  8FFC               	bsf	252,7,b	;volatile
  4424                           
  4425                           ; BSR set to: 59
  4426                           ;eadog.c: 195:  printf("%s", strPtr);
  4427                           ;stkvar	_strPtr @ sp[(0)+-2]
  4428  012672  0EFE               	movlw	-2
  4429  012674  006F FF8F FFE6     	movff	plusw1,postinc1
  4430  01267A  006F FF8F FFE6     	movff	plusw1,postinc1
  4431  012680  0EFC               	movlw	low STR_10
  4432  012682  6EE6               	movwf	postinc1,c
  4433  012684  0EFF               	movlw	high STR_10
  4434  012686  6EE6               	movwf	postinc1,c
  4435  012688  0E04               	movlw	4
  4436  01268A  6EE6               	movwf	postinc1,c
  4437  01268C  ECF5  F095         	call	_printf	;wreg free
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;eadog.c: 196:  start_lcd();
  4441  012690  EC7F  F09C         	call	_start_lcd	;wreg free
  4442                           
  4443                           ; BSR set to: 59
  4444                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  4445  012694  52E5               	movf	postdec1,f,c
  4446  012696  52E5               	movf	postdec1,f,c
  4447  012698  0012               	return		;funcret
  4448  01269A                     __end_of_eaDogM_WriteString:
  4449                           	opt callstack 0
  4450                           
  4451 ;; *************** function _wait_lcd_set *****************
  4452 ;; Defined at:
  4453 ;;		line 131 in file "eadog.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;		None
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1  [STACK] void 
  4460 ;; Registers used:
  4461 ;;		None
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/3D
  4464 ;;		On exit  : 3F/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4471 ;;Total ram usage:        0 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    6
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_eaDogM_WriteString
  4478 ;;		_send_lcd_cmd_dma
  4479 ;; This function uses a reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text23
  4483  0138F8                     __ptext23:
  4484                           	opt callstack 0
  4485  0138F8                     _wait_lcd_set:
  4486                           	opt callstack 21
  4487                           
  4488                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  4489                           
  4490                           ; BSR set to: 59
  4491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4492                           ;incstack = 0
  4493  0138F8  0100               	movlb	0	; () banked
  4494  0138FA  8798               	bsf	_spi_link& (0+255),3,b	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4498  0138FC  0012               	return		;funcret
  4499  0138FE                     __end_of_wait_lcd_set:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _start_lcd *****************
  4503 ;; Defined at:
  4504 ;;		line 126 in file "eadog.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1  [STACK] void 
  4511 ;; Registers used:
  4512 ;;		None
  4513 ;; Tracked objects:
  4514 ;;		On entry : 3F/0
  4515 ;;		On exit  : 3F/3B
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    6
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_eaDogM_WriteString
  4529 ;;		_send_lcd_cmd_dma
  4530 ;; This function uses a reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text24
  4534  0138FE                     __ptext24:
  4535                           	opt callstack 0
  4536  0138FE                     _start_lcd:
  4537                           	opt callstack 21
  4538                           
  4539                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  4540                           
  4541                           ; BSR set to: 0
  4542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4543                           ;incstack = 0
  4544  0138FE  013B               	movlb	59	; () banked
  4545  013900  8DFC               	bsf	252,6,b	;volatile
  4546                           
  4547                           ; BSR set to: 59
  4548                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4549  013902  0012               	return		;funcret
  4550  013904                     __end_of_start_lcd:
  4551                           	opt callstack 0
  4552                           
  4553 ;; *************** function _ringBufS_flush *****************
  4554 ;; Defined at:
  4555 ;;		line 76 in file "ringbufs.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4558 ;;		 -> ring_buf1(67), 
  4559 ;;  clearBuffer     1  [STACK] const char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1  [STACK] void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4566 ;; Tracked objects:
  4567 ;;		On entry : 3F/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    7
  4578 ;; This function calls:
  4579 ;;		_memset
  4580 ;; This function is called by:
  4581 ;;		_eaDogM_WriteString
  4582 ;;		_send_lcd_cmd_dma
  4583 ;; This function uses a reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text25
  4587  01273C                     __ptext25:
  4588                           	opt callstack 0
  4589  01273C                     _ringBufS_flush:
  4590                           	opt callstack 20
  4591                           
  4592                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4593                           ;stkvar	__this @ sp[(0)+-2]
  4594                           
  4595                           ; BSR set to: 59
  4596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4597                           ;incstack = 0
  4598  01273C  0EFE               	movlw	-2
  4599  01273E  006F FF8C  F040    	movff	plusw1,btemp+10
  4600  012744  0EFF               	movlw	-1
  4601  012746  006F FF8C  F041    	movff	plusw1,btemp+11
  4602  01274C  0E42               	movlw	66
  4603  01274E  2440               	addwf	(btemp+10)^0,w,c
  4604  012750  6ED9               	movwf	fsr2l,c
  4605  012752  0E00               	movlw	0
  4606  012754  2041               	addwfc	(btemp+11)^0,w,c
  4607  012756  6EDA               	movwf	fsr2h,c
  4608  012758  0E00               	movlw	0
  4609  01275A  6EDF               	movwf	indf2,c
  4610                           
  4611                           ;ringbufs.c: 79:  _this->head = 0;
  4612                           ;stkvar	__this @ sp[(0)+-2]
  4613  01275C  0EFE               	movlw	-2
  4614  01275E  006F FF8C  F040    	movff	plusw1,btemp+10
  4615  012764  0EFF               	movlw	-1
  4616  012766  006F FF8C  F041    	movff	plusw1,btemp+11
  4617  01276C  0E40               	movlw	64
  4618  01276E  2440               	addwf	(btemp+10)^0,w,c
  4619  012770  6ED9               	movwf	fsr2l,c
  4620  012772  0E00               	movlw	0
  4621  012774  2041               	addwfc	(btemp+11)^0,w,c
  4622  012776  6EDA               	movwf	fsr2h,c
  4623  012778  0E00               	movlw	0
  4624  01277A  6EDF               	movwf	indf2,c
  4625                           
  4626                           ;ringbufs.c: 80:  _this->tail = 0;
  4627                           ;stkvar	__this @ sp[(0)+-2]
  4628  01277C  0EFE               	movlw	-2
  4629  01277E  006F FF8C  F040    	movff	plusw1,btemp+10
  4630  012784  0EFF               	movlw	-1
  4631  012786  006F FF8C  F041    	movff	plusw1,btemp+11
  4632  01278C  0E41               	movlw	65
  4633  01278E  2440               	addwf	(btemp+10)^0,w,c
  4634  012790  6ED9               	movwf	fsr2l,c
  4635  012792  0E00               	movlw	0
  4636  012794  2041               	addwfc	(btemp+11)^0,w,c
  4637  012796  6EDA               	movwf	fsr2h,c
  4638  012798  0E00               	movlw	0
  4639  01279A  6EDF               	movwf	indf2,c
  4640                           
  4641                           ;ringbufs.c: 81:  if (clearBuffer) {
  4642                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4643  01279C  0EFD               	movlw	-3
  4644  01279E  50E3               	movf	plusw1,w,c
  4645  0127A0  B4D8               	btfsc	status,2,c
  4646  0127A2  D011               	goto	l1466
  4647                           
  4648                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4649  0127A4  0E40               	movlw	64
  4650  0127A6  6EE6               	movwf	postinc1,c
  4651  0127A8  0E00               	movlw	0
  4652  0127AA  6EE6               	movwf	postinc1,c
  4653  0127AC  0E00               	movlw	0
  4654  0127AE  6EE6               	movwf	postinc1,c
  4655  0127B0  0E00               	movlw	0
  4656  0127B2  6EE6               	movwf	postinc1,c
  4657                           
  4658                           ;stkvar	__this @ sp[(-4)+-2]
  4659  0127B4  0EFA               	movlw	-6
  4660  0127B6  006F FF8F FFE6     	movff	plusw1,postinc1
  4661  0127BC  006F FF8F FFE6     	movff	plusw1,postinc1
  4662  0127C2  EC27  F088         	call	_memset	;wreg free
  4663  0127C6                     l1466:
  4664                           
  4665                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4666  0127C6  52E5               	movf	postdec1,f,c
  4667  0127C8  52E5               	movf	postdec1,f,c
  4668  0127CA  52E5               	movf	postdec1,f,c
  4669  0127CC  0012               	return		;funcret
  4670  0127CE                     __end_of_ringBufS_flush:
  4671                           	opt callstack 0
  4672                           
  4673 ;; *************** function _memset *****************
  4674 ;; Defined at:
  4675 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  dest            2  [STACK] PTR void 
  4678 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4679 ;;  c               2  [STACK] int 
  4680 ;;  n               2  [STACK] unsigned int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  s               2  [STACK] PTR unsigned char 
  4683 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4684 ;;  k               2  [STACK] unsigned int 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  2  [STACK] PTR void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    6
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_ringBufS_init
  4705 ;;		_ringBufS_flush
  4706 ;; This function uses a reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text26
  4710  01104E                     __ptext26:
  4711                           	opt callstack 0
  4712  01104E                     _memset:
  4713                           	opt callstack 0
  4714                           
  4715                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4716  01104E  52E6               	movf	postinc1,f,c
  4717  011050  52E6               	movf	postinc1,f,c
  4718  011052  52E6               	movf	postinc1,f,c
  4719  011054  52E6               	movf	postinc1,f,c
  4720                           
  4721                           ;stkvar	_dest @ sp[(-4)+-2]
  4722                           
  4723                           ;incstack = 0
  4724  011056  0EFA               	movlw	-6
  4725  011058  006F FF8C  F040    	movff	plusw1,btemp+10
  4726  01105E  0EFB               	movlw	-5
  4727  011060  006F FF8C  F041    	movff	plusw1,btemp+11
  4728                           
  4729                           ;stkvar	_s @ sp[(-4)+0]
  4730  011066  0EFD               	movlw	-3
  4731  011068  0060  F107  FFE3   	movff	btemp+11,plusw1
  4732  01106E  0EFC               	movlw	-4
  4733  011070  0060  F103  FFE3   	movff	btemp+10,plusw1
  4734                           
  4735                           ;stkvar	_n @ sp[(-4)+-6]
  4736  011076  0EF6               	movlw	-10
  4737  011078  006F FF8C  F036    	movff	plusw1,btemp
  4738  01107E  0EF7               	movlw	-9
  4739  011080  50E3               	movf	plusw1,w,c
  4740  011082  1036               	iorwf	btemp^0,w,c
  4741  011084  B4D8               	btfsc	status,2,c
  4742  011086  D154               	goto	u4100
  4743                           
  4744                           ;stkvar	_c @ sp[(-4)+-4]
  4745                           ;stkvar	_s @ sp[(-4)+0]
  4746  011088  0EFC               	movlw	-4
  4747  01108A  006F FF8F FFD9     	movff	plusw1,fsr2l
  4748  011090  0EFD               	movlw	-3
  4749  011092  006F FF8F FFDA     	movff	plusw1,fsr2h
  4750  011098  0EF8               	movlw	-8
  4751  01109A  006F FF8F FFDF     	movff	plusw1,indf2
  4752                           
  4753                           ;stkvar	_c @ sp[(-4)+-4]
  4754                           ;stkvar	_n @ sp[(-4)+-6]
  4755                           ;stkvar	_s @ sp[(-4)+0]
  4756  0110A0  0EFC               	movlw	-4
  4757  0110A2  006F FF8C  F040    	movff	plusw1,btemp+10
  4758  0110A8  0EFD               	movlw	-3
  4759  0110AA  006F FF8C  F041    	movff	plusw1,btemp+11
  4760  0110B0  0EF6               	movlw	-10
  4761  0110B2  50E3               	movf	plusw1,w,c
  4762  0110B4  2640               	addwf	(btemp+10)^0,f,c
  4763  0110B6  0EF7               	movlw	-9
  4764  0110B8  50E3               	movf	plusw1,w,c
  4765  0110BA  2241               	addwfc	(btemp+11)^0,f,c
  4766  0110BC  0EFF               	movlw	255
  4767  0110BE  2440               	addwf	(btemp+10)^0,w,c
  4768  0110C0  6ED9               	movwf	fsr2l,c
  4769  0110C2  0EFF               	movlw	255
  4770  0110C4  2041               	addwfc	(btemp+11)^0,w,c
  4771  0110C6  6EDA               	movwf	fsr2h,c
  4772  0110C8  0EF8               	movlw	-8
  4773  0110CA  006F FF8F FFDF     	movff	plusw1,indf2
  4774                           
  4775                           ;stkvar	_n @ sp[(-4)+-6]
  4776  0110D0  0EF7               	movlw	-9
  4777  0110D2  50E3               	movf	plusw1,w,c
  4778  0110D4  E108               	bnz	l6070
  4779  0110D6  0EF6               	movlw	-10
  4780  0110D8  006F FF8C  F036    	movff	plusw1,btemp
  4781  0110DE  0E03               	movlw	3
  4782  0110E0  5E36               	subwf	btemp^0,f,c
  4783  0110E2  A0D8               	btfss	status,0,c
  4784  0110E4  D125               	goto	u4100
  4785  0110E6                     l6070:
  4786                           
  4787                           ;stkvar	_c @ sp[(-4)+-4]
  4788                           ;stkvar	_s @ sp[(-4)+0]
  4789  0110E6  0EFC               	movlw	-4
  4790  0110E8  006F FF8C  F040    	movff	plusw1,btemp+10
  4791  0110EE  0EFD               	movlw	-3
  4792  0110F0  006F FF8C  F041    	movff	plusw1,btemp+11
  4793  0110F6  0E01               	movlw	1
  4794  0110F8  2440               	addwf	(btemp+10)^0,w,c
  4795  0110FA  6ED9               	movwf	fsr2l,c
  4796  0110FC  0E00               	movlw	0
  4797  0110FE  2041               	addwfc	(btemp+11)^0,w,c
  4798  011100  6EDA               	movwf	fsr2h,c
  4799  011102  0EF8               	movlw	-8
  4800  011104  006F FF8F FFDF     	movff	plusw1,indf2
  4801                           
  4802                           ;stkvar	_c @ sp[(-4)+-4]
  4803                           ;stkvar	_s @ sp[(-4)+0]
  4804  01110A  0EFC               	movlw	-4
  4805  01110C  006F FF8C  F040    	movff	plusw1,btemp+10
  4806  011112  0EFD               	movlw	-3
  4807  011114  006F FF8C  F041    	movff	plusw1,btemp+11
  4808  01111A  0E02               	movlw	2
  4809  01111C  2440               	addwf	(btemp+10)^0,w,c
  4810  01111E  6ED9               	movwf	fsr2l,c
  4811  011120  0E00               	movlw	0
  4812  011122  2041               	addwfc	(btemp+11)^0,w,c
  4813  011124  6EDA               	movwf	fsr2h,c
  4814  011126  0EF8               	movlw	-8
  4815  011128  006F FF8F FFDF     	movff	plusw1,indf2
  4816                           
  4817                           ;stkvar	_c @ sp[(-4)+-4]
  4818                           ;stkvar	_n @ sp[(-4)+-6]
  4819                           ;stkvar	_s @ sp[(-4)+0]
  4820  01112E  0EFC               	movlw	-4
  4821  011130  006F FF8C  F040    	movff	plusw1,btemp+10
  4822  011136  0EFD               	movlw	-3
  4823  011138  006F FF8C  F041    	movff	plusw1,btemp+11
  4824  01113E  0EF6               	movlw	-10
  4825  011140  50E3               	movf	plusw1,w,c
  4826  011142  2640               	addwf	(btemp+10)^0,f,c
  4827  011144  0EF7               	movlw	-9
  4828  011146  50E3               	movf	plusw1,w,c
  4829  011148  2241               	addwfc	(btemp+11)^0,f,c
  4830  01114A  0EFE               	movlw	254
  4831  01114C  2440               	addwf	(btemp+10)^0,w,c
  4832  01114E  6ED9               	movwf	fsr2l,c
  4833  011150  0EFF               	movlw	255
  4834  011152  2041               	addwfc	(btemp+11)^0,w,c
  4835  011154  6EDA               	movwf	fsr2h,c
  4836  011156  0EF8               	movlw	-8
  4837  011158  006F FF8F FFDF     	movff	plusw1,indf2
  4838                           
  4839                           ;stkvar	_c @ sp[(-4)+-4]
  4840                           ;stkvar	_n @ sp[(-4)+-6]
  4841                           ;stkvar	_s @ sp[(-4)+0]
  4842  01115E  0EFC               	movlw	-4
  4843  011160  006F FF8C  F040    	movff	plusw1,btemp+10
  4844  011166  0EFD               	movlw	-3
  4845  011168  006F FF8C  F041    	movff	plusw1,btemp+11
  4846  01116E  0EF6               	movlw	-10
  4847  011170  50E3               	movf	plusw1,w,c
  4848  011172  2640               	addwf	(btemp+10)^0,f,c
  4849  011174  0EF7               	movlw	-9
  4850  011176  50E3               	movf	plusw1,w,c
  4851  011178  2241               	addwfc	(btemp+11)^0,f,c
  4852  01117A  0EFD               	movlw	253
  4853  01117C  2440               	addwf	(btemp+10)^0,w,c
  4854  01117E  6ED9               	movwf	fsr2l,c
  4855  011180  0EFF               	movlw	255
  4856  011182  2041               	addwfc	(btemp+11)^0,w,c
  4857  011184  6EDA               	movwf	fsr2h,c
  4858  011186  0EF8               	movlw	-8
  4859  011188  006F FF8F FFDF     	movff	plusw1,indf2
  4860                           
  4861                           ;stkvar	_n @ sp[(-4)+-6]
  4862  01118E  0EF7               	movlw	-9
  4863  011190  50E3               	movf	plusw1,w,c
  4864  011192  E108               	bnz	l6076
  4865  011194  0EF6               	movlw	-10
  4866  011196  006F FF8C  F036    	movff	plusw1,btemp
  4867  01119C  0E07               	movlw	7
  4868  01119E  5E36               	subwf	btemp^0,f,c
  4869  0111A0  A0D8               	btfss	status,0,c
  4870  0111A2  D0C6               	goto	u4100
  4871  0111A4                     l6076:
  4872                           
  4873                           ;stkvar	_c @ sp[(-4)+-4]
  4874                           ;stkvar	_s @ sp[(-4)+0]
  4875  0111A4  0EFC               	movlw	-4
  4876  0111A6  006F FF8C  F040    	movff	plusw1,btemp+10
  4877  0111AC  0EFD               	movlw	-3
  4878  0111AE  006F FF8C  F041    	movff	plusw1,btemp+11
  4879  0111B4  0E03               	movlw	3
  4880  0111B6  2440               	addwf	(btemp+10)^0,w,c
  4881  0111B8  6ED9               	movwf	fsr2l,c
  4882  0111BA  0E00               	movlw	0
  4883  0111BC  2041               	addwfc	(btemp+11)^0,w,c
  4884  0111BE  6EDA               	movwf	fsr2h,c
  4885  0111C0  0EF8               	movlw	-8
  4886  0111C2  006F FF8F FFDF     	movff	plusw1,indf2
  4887                           
  4888                           ;stkvar	_c @ sp[(-4)+-4]
  4889                           ;stkvar	_n @ sp[(-4)+-6]
  4890                           ;stkvar	_s @ sp[(-4)+0]
  4891  0111C8  0EFC               	movlw	-4
  4892  0111CA  006F FF8C  F040    	movff	plusw1,btemp+10
  4893  0111D0  0EFD               	movlw	-3
  4894  0111D2  006F FF8C  F041    	movff	plusw1,btemp+11
  4895  0111D8  0EF6               	movlw	-10
  4896  0111DA  50E3               	movf	plusw1,w,c
  4897  0111DC  2640               	addwf	(btemp+10)^0,f,c
  4898  0111DE  0EF7               	movlw	-9
  4899  0111E0  50E3               	movf	plusw1,w,c
  4900  0111E2  2241               	addwfc	(btemp+11)^0,f,c
  4901  0111E4  0EFC               	movlw	252
  4902  0111E6  2440               	addwf	(btemp+10)^0,w,c
  4903  0111E8  6ED9               	movwf	fsr2l,c
  4904  0111EA  0EFF               	movlw	255
  4905  0111EC  2041               	addwfc	(btemp+11)^0,w,c
  4906  0111EE  6EDA               	movwf	fsr2h,c
  4907  0111F0  0EF8               	movlw	-8
  4908  0111F2  006F FF8F FFDF     	movff	plusw1,indf2
  4909                           
  4910                           ;stkvar	_n @ sp[(-4)+-6]
  4911  0111F8  0EF7               	movlw	-9
  4912  0111FA  50E3               	movf	plusw1,w,c
  4913  0111FC  E108               	bnz	l6082
  4914  0111FE  0EF6               	movlw	-10
  4915  011200  006F FF8C  F036    	movff	plusw1,btemp
  4916  011206  0E09               	movlw	9
  4917  011208  5E36               	subwf	btemp^0,f,c
  4918  01120A  A0D8               	btfss	status,0,c
  4919  01120C  D091               	goto	u4100
  4920  01120E                     l6082:
  4921                           
  4922                           ;stkvar	_s @ sp[(-4)+0]
  4923  01120E  0EFC               	movlw	-4
  4924  011210  006F FF8C  F040    	movff	plusw1,btemp+10
  4925  011216  1E40               	comf	(btemp+10)^0,f,c
  4926  011218  0EFD               	movlw	-3
  4927  01121A  006F FF8C  F041    	movff	plusw1,btemp+11
  4928  011220  1E41               	comf	(btemp+11)^0,f,c
  4929  011222  2A40               	incf	(btemp+10)^0,f,c
  4930  011224  B4D8               	btfsc	status,2,c
  4931  011226  2A41               	incf	(btemp+11)^0,f,c
  4932  011228  0E03               	movlw	3
  4933  01122A  1640               	andwf	(btemp+10)^0,f,c
  4934  01122C  0E00               	movlw	0
  4935  01122E  1641               	andwf	(btemp+11)^0,f,c
  4936                           
  4937                           ;stkvar	_k @ sp[(-4)+2]
  4938  011230  0EFE               	movlw	-2
  4939  011232  0060  F103  FFE3   	movff	btemp+10,plusw1
  4940  011238  0EFF               	movlw	-1
  4941  01123A  0060  F107  FFE3   	movff	btemp+11,plusw1
  4942                           
  4943                           ;stkvar	_k @ sp[(-4)+2]
  4944                           ;stkvar	_s @ sp[(-4)+0]
  4945  011240  0EFC               	movlw	-4
  4946  011242  50E3               	movf	plusw1,w,c
  4947  011244  6E36               	movwf	btemp^0,c
  4948  011246  0EFE               	movlw	-2
  4949  011248  50E3               	movf	plusw1,w,c
  4950  01124A  2636               	addwf	btemp^0,f,c
  4951  01124C  0EFC               	movlw	-4
  4952  01124E  0060  F0DB  FFE3   	movff	btemp,plusw1
  4953  011254  0EFD               	movlw	-3
  4954  011256  50E3               	movf	plusw1,w,c
  4955  011258  6E36               	movwf	btemp^0,c
  4956  01125A  0EFF               	movlw	-1
  4957  01125C  50E3               	movf	plusw1,w,c
  4958  01125E  2236               	addwfc	btemp^0,f,c
  4959  011260  0EFD               	movlw	-3
  4960  011262  0060  F0DB  FFE3   	movff	btemp,plusw1
  4961                           
  4962                           ;stkvar	_k @ sp[(-4)+2]
  4963                           ;stkvar	_n @ sp[(-4)+-6]
  4964  011268  0EF6               	movlw	-10
  4965  01126A  50E3               	movf	plusw1,w,c
  4966  01126C  6E36               	movwf	btemp^0,c
  4967  01126E  0EFE               	movlw	-2
  4968  011270  50E3               	movf	plusw1,w,c
  4969  011272  5E36               	subwf	btemp^0,f,c
  4970  011274  0EF6               	movlw	-10
  4971  011276  0060  F0DB  FFE3   	movff	btemp,plusw1
  4972  01127C  0EF7               	movlw	-9
  4973  01127E  50E3               	movf	plusw1,w,c
  4974  011280  6E36               	movwf	btemp^0,c
  4975  011282  0EFF               	movlw	-1
  4976  011284  50E3               	movf	plusw1,w,c
  4977  011286  5A36               	subwfb	btemp^0,f,c
  4978  011288  0EF7               	movlw	-9
  4979  01128A  0060  F0DB  FFE3   	movff	btemp,plusw1
  4980  011290  0EFC               	movlw	252
  4981  011292  6E40               	movwf	(btemp+10)^0,c
  4982  011294  0EFF               	movlw	255
  4983  011296  6E41               	movwf	(btemp+11)^0,c
  4984                           
  4985                           ;stkvar	_n @ sp[(-4)+-6]
  4986  011298  0EF6               	movlw	-10
  4987  01129A  006F FF8C  F036    	movff	plusw1,btemp
  4988  0112A0  5040               	movf	(btemp+10)^0,w,c
  4989  0112A2  1636               	andwf	btemp^0,f,c
  4990  0112A4  0EF6               	movlw	-10
  4991  0112A6  0060  F0DB  FFE3   	movff	btemp,plusw1
  4992  0112AC  0EF7               	movlw	-9
  4993  0112AE  006F FF8C  F036    	movff	plusw1,btemp
  4994  0112B4  5041               	movf	(btemp+11)^0,w,c
  4995  0112B6  1636               	andwf	btemp^0,f,c
  4996  0112B8  0EF7               	movlw	-9
  4997  0112BA  D02E               	goto	L1
  4998  0112BC                     l6090:
  4999                           
  5000                           ;stkvar	_c @ sp[(-4)+-4]
  5001                           ;stkvar	_s @ sp[(-4)+0]
  5002  0112BC  0EFC               	movlw	-4
  5003  0112BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  5004  0112C4  0EFD               	movlw	-3
  5005  0112C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  5006  0112CC  0EF8               	movlw	-8
  5007  0112CE  006F FF8F FFDF     	movff	plusw1,indf2
  5008                           
  5009                           ;stkvar	_n @ sp[(-4)+-6]
  5010  0112D4  0EF6               	movlw	-10
  5011  0112D6  006F FF8C  F036    	movff	plusw1,btemp
  5012  0112DC  0E01               	movlw	1
  5013  0112DE  5E36               	subwf	btemp^0,f,c
  5014  0112E0  0EF6               	movlw	-10
  5015  0112E2  0060  F0DB  FFE3   	movff	btemp,plusw1
  5016  0112E8  0EF7               	movlw	-9
  5017  0112EA  006F FF8C  F036    	movff	plusw1,btemp
  5018  0112F0  0E00               	movlw	0
  5019  0112F2  5A36               	subwfb	btemp^0,f,c
  5020  0112F4  0EF7               	movlw	-9
  5021  0112F6  0060  F0DB  FFE3   	movff	btemp,plusw1
  5022                           
  5023                           ;stkvar	_s @ sp[(-4)+0]
  5024  0112FC  0EFC               	movlw	-4
  5025  0112FE  50E3               	movf	plusw1,w,c
  5026  011300  0F01               	addlw	1
  5027  011302  6E36               	movwf	btemp^0,c
  5028  011304  0EFC               	movlw	-4
  5029  011306  0060  F0DB  FFE3   	movff	btemp,plusw1
  5030  01130C  6A36               	clrf	btemp^0,c
  5031  01130E  0EFD               	movlw	-3
  5032  011310  50E3               	movf	plusw1,w,c
  5033  011312  2036               	addwfc	btemp^0,w,c
  5034  011314  6E36               	movwf	btemp^0,c
  5035  011316  0EFD               	movlw	-3
  5036  011318                     L1:
  5037  011318  0060  F0DB  FFE3   	movff	btemp,plusw1
  5038                           
  5039                           ;stkvar	_n @ sp[(-4)+-6]
  5040  01131E  0EF6               	movlw	-10
  5041  011320  006F FF8C  F036    	movff	plusw1,btemp
  5042  011326  0EF7               	movlw	-9
  5043  011328  50E3               	movf	plusw1,w,c
  5044  01132A  1036               	iorwf	btemp^0,w,c
  5045  01132C  A4D8               	btfss	status,2,c
  5046  01132E  D7C6               	goto	l6090
  5047  011330                     u4100:
  5048                           
  5049                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  5050  011330  0EF6               	movlw	246
  5051  011332  26E1               	addwf	fsr1l,f,c
  5052  011334  0EFF               	movlw	255
  5053  011336  22E2               	addwfc	fsr1h,f,c
  5054  011338  0012               	return		;funcret
  5055  01133A                     __end_of_memset:
  5056                           	opt callstack 0
  5057                           
  5058 ;; *************** function _printf *****************
  5059 ;; Defined at:
  5060 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  fmt             2  [STACK] PTR const unsigned char 
  5063 ;;		 -> STR_12(3), STR_11(3), STR_10(3), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;  ap              2  [STACK] PTR void [1]
  5066 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5067 ;;  ret             2    0        int 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  2  [STACK] int 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5072 ;; Tracked objects:
  5073 ;;		On entry : 3F/3B
  5074 ;;		On exit  : 3F/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5081 ;;Total ram usage:        0 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:   14
  5084 ;; This function calls:
  5085 ;;		_vfprintf
  5086 ;; This function is called by:
  5087 ;;		_eaDogM_WriteString
  5088 ;;		_send_lcd_cmd_dma
  5089 ;; This function uses a reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text27
  5093  012BEA                     __ptext27:
  5094                           	opt callstack 0
  5095  012BEA                     _printf:
  5096                           	opt callstack 0
  5097                           
  5098                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5099  012BEA  52E6               	movf	postinc1,f,c
  5100  012BEC  52E6               	movf	postinc1,f,c
  5101                           
  5102                           ;stkvar	?_printf @ sp[(-2)+-3]
  5103                           
  5104                           ;incstack = 0
  5105  012BEE  0EFB               	movlw	251
  5106  012BF0  24E1               	addwf	fsr1l,w,c
  5107  012BF2  6E40               	movwf	(btemp+10)^0,c
  5108  012BF4  0EFF               	movlw	255
  5109  012BF6  20E2               	addwfc	fsr1h,w,c
  5110  012BF8  6E41               	movwf	(btemp+11)^0,c
  5111                           
  5112                           ;stkvar	_ap @ sp[(-2)+0]
  5113  012BFA  0EFF               	movlw	-1
  5114  012BFC  0060  F107  FFE3   	movff	btemp+11,plusw1
  5115  012C02  0EFE               	movlw	-2
  5116  012C04  0060  F103  FFE3   	movff	btemp+10,plusw1
  5117                           
  5118                           ;stkvar	_ap @ sp[(-2)+0]
  5119  012C0A  0EFE               	movlw	254
  5120  012C0C  24E1               	addwf	fsr1l,w,c
  5121  012C0E  6E36               	movwf	btemp^0,c
  5122  012C10  0EFF               	movlw	255
  5123  012C12  20E2               	addwfc	fsr1h,w,c
  5124  012C14  6E37               	movwf	(btemp+1)^0,c
  5125  012C16  0060  F0DB  FFE6   	movff	btemp,postinc1
  5126  012C1C  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5127                           
  5128                           ;stkvar	_fmt @ sp[(-4)+-3]
  5129  012C22  0EF9               	movlw	-7
  5130  012C24  006F FF8F FFE6     	movff	plusw1,postinc1
  5131  012C2A  006F FF8F FFE6     	movff	plusw1,postinc1
  5132  012C30  0E00               	movlw	0
  5133  012C32  6EE6               	movwf	postinc1,c
  5134  012C34  0E00               	movlw	0
  5135  012C36  6EE6               	movwf	postinc1,c
  5136  012C38  EC4F  F092         	call	_vfprintf	;wreg free
  5137                           
  5138                           ; BSR set to: 0
  5139                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  5140  012C3C  52E5               	movf	postdec1,f,c
  5141  012C3E  52E5               	movf	postdec1,f,c
  5142  012C40  52E5               	movf	postdec1,f,c
  5143  012C42  50E7               	movf	indf1,w,c
  5144  012C44  5EE1               	subwf	fsr1l,f,c
  5145  012C46  0E00               	movlw	0
  5146  012C48  5AE2               	subwfb	fsr1h,f,c
  5147  012C4A  0012               	return		;funcret
  5148  012C4C                     __end_of_printf:
  5149                           	opt callstack 0
  5150                           
  5151 ;; *************** function _vfprintf *****************
  5152 ;; Defined at:
  5153 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5156 ;;		 -> f(6), NULL(0), 
  5157 ;;  fmt             2  [STACK] PTR const unsigned char 
  5158 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  5159 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  5160 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  5161 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  5162 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(18), 
  5163 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5164 ;;		 -> STR_2(15), STR_1(17), 
  5165 ;;  ap              2  [STACK] PTR PTR void 
  5166 ;;		 -> ap(2), ap(2), 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  cfmt            2  [STACK] PTR unsigned char 
  5169 ;;		 -> STR_30(3), STR_29(3), STR_28(19), STR_27(19), 
  5170 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
  5171 ;;		 -> STR_22(24), STR_21(15), STR_20(15), STR_19(15), 
  5172 ;;		 -> STR_18(10), STR_17(10), STR_16(19), STR_15(19), 
  5173 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(18), 
  5174 ;;		 -> STR_8(17), STR_6(15), STR_5(17), STR_4(17), 
  5175 ;;		 -> STR_2(15), STR_1(17), 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2  [STACK] int 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/3
  5182 ;;		On exit  : 3F/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5189 ;;Total ram usage:        0 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:   13
  5192 ;; This function calls:
  5193 ;;		_vfpfcnvrt
  5194 ;; This function is called by:
  5195 ;;		_sprintf
  5196 ;;		_printf
  5197 ;; This function uses a reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text28
  5201  01249E                     __ptext28:
  5202                           	opt callstack 0
  5203  01249E                     _vfprintf:
  5204                           	opt callstack 0
  5205                           
  5206                           ; BSR set to: 0
  5207                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5208  01249E  52E6               	movf	postinc1,f,c
  5209  0124A0  52E6               	movf	postinc1,f,c
  5210                           
  5211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5212                           ;stkvar	_fmt @ sp[(-2)+-4]
  5213                           
  5214                           ;incstack = 0
  5215  0124A2  0EFA               	movlw	-6
  5216  0124A4  006F FF8C  F040    	movff	plusw1,btemp+10
  5217  0124AA  0EFB               	movlw	-5
  5218  0124AC  006F FF8C  F041    	movff	plusw1,btemp+11
  5219                           
  5220                           ;stkvar	_cfmt @ sp[(-2)+0]
  5221  0124B2  0EFF               	movlw	-1
  5222  0124B4  0060  F107  FFE3   	movff	btemp+11,plusw1
  5223  0124BA  0EFE               	movlw	-2
  5224  0124BC  0060  F103  FFE3   	movff	btemp+10,plusw1
  5225                           
  5226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5227  0124C2  0100               	movlb	0	; () banked
  5228  0124C4  6BA8               	clrf	_nout& (0+255),b
  5229  0124C6  6BA9               	clrf	(_nout+1)& (0+255),b
  5230                           
  5231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5232  0124C8  D021               	goto	l6104
  5233  0124CA                     l6102:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5237                           ;stkvar	_ap @ sp[(-2)+-6]
  5238  0124CA  0EF8               	movlw	-8
  5239  0124CC  006F FF8F FFE6     	movff	plusw1,postinc1
  5240  0124D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5241                           
  5242                           ;stkvar	_cfmt @ sp[(-4)+0]
  5243  0124D8  0EFC               	movlw	252
  5244  0124DA  24E1               	addwf	fsr1l,w,c
  5245  0124DC  6E36               	movwf	btemp^0,c
  5246  0124DE  0EFF               	movlw	255
  5247  0124E0  20E2               	addwfc	fsr1h,w,c
  5248  0124E2  6E37               	movwf	(btemp+1)^0,c
  5249  0124E4  0060  F0DB  FFE6   	movff	btemp,postinc1
  5250  0124EA  0060  F0DF  FFE6   	movff	btemp+1,postinc1
  5251                           
  5252                           ;stkvar	_fp @ sp[(-6)+-2]
  5253  0124F0  0EF8               	movlw	-8
  5254  0124F2  006F FF8F FFE6     	movff	plusw1,postinc1
  5255  0124F8  006F FF8F FFE6     	movff	plusw1,postinc1
  5256  0124FE  EC00  F080         	call	_vfpfcnvrt	;wreg free
  5257  012502  5036               	movf	btemp^0,w,c
  5258  012504  0100               	movlb	0	; () banked
  5259  012506  27A8               	addwf	_nout& (0+255),f,b
  5260  012508  5037               	movf	(btemp+1)^0,w,c
  5261  01250A  23A9               	addwfc	(_nout+1)& (0+255),f,b
  5262  01250C                     l6104:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5266                           ;stkvar	_cfmt @ sp[(-2)+0]
  5267  01250C  50E1               	movf	fsr1l,w,c
  5268  01250E  0FFE               	addlw	-2
  5269  012510  6ED9               	movwf	fsr2l,c
  5270  012512  50E2               	movf	fsr1h,w,c
  5271  012514  6EDA               	movwf	fsr2h,c
  5272  012516  0EFF               	movlw	255
  5273  012518  22DA               	addwfc	fsr2h,f,c
  5274  01251A  006F FF7B FFF6     	movff	postinc2,tblptrl
  5275  012520  006F FF77 FFF7     	movff	postdec2,tblptrh
  5276  012526                     	if	0	;tblptru may be non-zero
  5277  012526                     	endif
  5278  012526                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5279  012526  0E00               	movlw	low (__mediumconst shr (0+16))
  5280  012528  6EF8               	movwf	tblptru,c
  5281  01252A                     	endif
  5282  01252A  0008               	tblrd		*
  5283  01252C  50F5               	movf	tablat,w,c
  5284  01252E  0900               	iorlw	0
  5285  012530  A4D8               	btfss	status,2,c
  5286  012532  D7CB               	goto	l6102
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5290  012534  0060  F2A0  F036   	movff	_nout,btemp
  5291  01253A  0060  F2A4  F037   	movff	_nout+1,btemp+1
  5292                           
  5293                           ; BSR set to: 0
  5294                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  5295  012540  0EF8               	movlw	248
  5296  012542  26E1               	addwf	fsr1l,f,c
  5297  012544  0EFF               	movlw	255
  5298  012546  22E2               	addwfc	fsr1h,f,c
  5299  012548  0012               	return		;funcret
  5300  01254A                     __end_of_vfprintf:
  5301                           	opt callstack 0
  5302                           
  5303 ;; *************** function _vfpfcnvrt *****************
  5304 ;; Defined at:
  5305 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5308 ;;		 -> f(6), NULL(0), 
  5309 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  5310 ;;		 -> cfmt(2), 
  5311 ;;  ap              2  [STACK] PTR PTR void 
  5312 ;;		 -> ap(2), ap(2), 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  llu             8  [STACK] unsigned long long 
  5315 ;;  ll              8  [STACK] long long 
  5316 ;;  f               4    0        long long 
  5317 ;;  vp              3    0        PTR void 
  5318 ;;  ct              3    0        unsigned char [3]
  5319 ;;  cp              2  [STACK] PTR unsigned char 
  5320 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  5321 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  5322 ;;		 -> STR_3(4), V(189), 
  5323 ;;  i               2    0        int 
  5324 ;;  done            2    0        int 
  5325 ;;  c               1  [STACK] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  2  [STACK] int 
  5328 ;; Registers used:
  5329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:   12
  5342 ;; This function calls:
  5343 ;;		_ctoa
  5344 ;;		_dtoa
  5345 ;;		_fputc
  5346 ;;		_stoa
  5347 ;;		_xtoa
  5348 ;; This function is called by:
  5349 ;;		_vfprintf
  5350 ;; This function uses a reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text29
  5354  010000                     __ptext29:
  5355                           	opt callstack 0
  5356  010000                     _vfpfcnvrt:
  5357                           	opt callstack 0
  5358                           
  5359                           ; BSR set to: 0
  5360                           ; autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5361  010000  0E13               	movlw	19
  5362  010002  26E1               	addwf	fsr1l,f,c
  5363  010004  0E00               	movlw	0
  5364  010006  22E2               	addwfc	fsr1h,f,c
  5365                           
  5366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5367                           ;stkvar	_fmt @ sp[(-19)+-4]
  5368                           
  5369                           ;incstack = 0
  5370  010008  0EE9               	movlw	-23
  5371  01000A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5372  010010  0EEA               	movlw	-22
  5373  010012  006F FF8F FFDA     	movff	plusw1,fsr2h
  5374  010018  006F FF7B FFF6     	movff	postinc2,tblptrl
  5375  01001E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5376  010024                     	if	0	;tblptru may be non-zero
  5377  010024                     	endif
  5378  010024                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5379  010024  0E00               	movlw	low (__mediumconst shr (0+16))
  5380  010026  6EF8               	movwf	tblptru,c
  5381  010028                     	endif
  5382  010028  0008               	tblrd		*
  5383  01002A  50F5               	movf	tablat,w,c
  5384  01002C  0A25               	xorlw	37
  5385  01002E  A4D8               	btfss	status,2,c
  5386  010030  D24F               	goto	l6048
  5387                           
  5388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5389                           ;stkvar	_fmt @ sp[(-19)+-4]
  5390  010032  0EE9               	movlw	-23
  5391  010034  006F FF8F FFD9     	movff	plusw1,fsr2l
  5392  01003A  0EEA               	movlw	-22
  5393  01003C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5394  010042  2ADE               	incf	postinc2,f,c
  5395  010044  0E00               	movlw	0
  5396  010046  22DD               	addwfc	postdec2,f,c
  5397                           
  5398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5399  010048  6A1F               	clrf	_width^0,c
  5400  01004A  6A20               	clrf	(_width+1)^0,c
  5401  01004C  6A23               	clrf	_flags^0,c
  5402  01004E  6A24               	clrf	(_flags+1)^0,c
  5403                           
  5404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5405  010050  6821               	setf	_prec^0,c
  5406  010052  6822               	setf	(_prec+1)^0,c
  5407                           
  5408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  5409                           ;stkvar	_fmt @ sp[(-19)+-4]
  5410  010054  0EE9               	movlw	-23
  5411  010056  006F FF8F FFD9     	movff	plusw1,fsr2l
  5412  01005C  0EEA               	movlw	-22
  5413  01005E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5414  010064  006F FF7B FFF6     	movff	postinc2,tblptrl
  5415  01006A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5416  010070                     	if	0	;tblptru may be non-zero
  5417  010070                     	endif
  5418  010070                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5419  010070  0E00               	movlw	low (__mediumconst shr (0+16))
  5420  010072  6EF8               	movwf	tblptru,c
  5421  010074                     	endif
  5422  010074  0008               	tblrd		*
  5423  010076  50F5               	movf	tablat,w,c
  5424  010078  0A63               	xorlw	99
  5425  01007A  A4D8               	btfss	status,2,c
  5426  01007C  D036               	goto	l5996
  5427                           
  5428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  5429                           ;stkvar	_fmt @ sp[(-19)+-4]
  5430  01007E  0EE9               	movlw	-23
  5431  010080  006F FF8F FFD9     	movff	plusw1,fsr2l
  5432  010086  0EEA               	movlw	-22
  5433  010088  006F FF8F FFDA     	movff	plusw1,fsr2h
  5434  01008E  2ADE               	incf	postinc2,f,c
  5435  010090  0E00               	movlw	0
  5436  010092  22DD               	addwfc	postdec2,f,c
  5437                           
  5438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5439                           ;stkvar	_ap @ sp[(-19)+-6]
  5440  010094  0EE7               	movlw	-25
  5441  010096  006F FF8F FFD9     	movff	plusw1,fsr2l
  5442  01009C  0EE8               	movlw	-24
  5443  01009E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5444  0100A4  0E02               	movlw	2
  5445  0100A6  5EDE               	subwf	postinc2,f,c
  5446  0100A8  0E00               	movlw	0
  5447  0100AA  5ADD               	subwfb	postdec2,f,c
  5448  0100AC  006F FF78  F040    	movff	postinc2,btemp+10
  5449  0100B2  006F FF74  F041    	movff	postdec2,btemp+11
  5450  0100B8  0060  F103  FFD9   	movff	btemp+10,fsr2l
  5451  0100BE  0060  F107  FFDA   	movff	btemp+11,fsr2h
  5452  0100C4  50DF               	movf	indf2,w,c
  5453  0100C6  6E41               	movwf	(btemp+11)^0,c
  5454                           
  5455                           ;stkvar	_c @ sp[(-19)+18]
  5456  0100C8  0EFF               	movlw	-1
  5457  0100CA  0060  F107  FFE3   	movff	btemp+11,plusw1
  5458                           
  5459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  5460                           ;stkvar	_c @ sp[(-19)+18]
  5461  0100D0  0EFF               	movlw	-1
  5462  0100D2  50E3               	movf	plusw1,w,c
  5463  0100D4  6EE6               	movwf	postinc1,c
  5464                           
  5465                           ;stkvar	_fp @ sp[(-20)+-2]
  5466  0100D6  0EEA               	movlw	-22
  5467  0100D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5468  0100DE  006F FF8F FFE6     	movff	plusw1,postinc1
  5469  0100E4  EC71  F094         	call	_ctoa	;wreg free
  5470  0100E8  D21D               	goto	l1782
  5471  0100EA                     l5996:
  5472                           
  5473                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5474                           ;stkvar	_fmt @ sp[(-19)+-4]
  5475  0100EA  0EE9               	movlw	-23
  5476  0100EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5477  0100F2  0EEA               	movlw	-22
  5478  0100F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5479  0100FA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5480  010100  006F FF77 FFF7     	movff	postdec2,tblptrh
  5481  010106                     	if	0	;tblptru may be non-zero
  5482  010106                     	endif
  5483  010106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5484  010106  0E00               	movlw	low (__mediumconst shr (0+16))
  5485  010108  6EF8               	movwf	tblptru,c
  5486  01010A                     	endif
  5487  01010A  0008               	tblrd		*
  5488  01010C  50F5               	movf	tablat,w,c
  5489  01010E  0A64               	xorlw	100
  5490  010110  B4D8               	btfsc	status,2,c
  5491  010112  D015               	goto	u4010
  5492                           
  5493                           ;stkvar	_fmt @ sp[(-19)+-4]
  5494  010114  0EE9               	movlw	-23
  5495  010116  006F FF8F FFD9     	movff	plusw1,fsr2l
  5496  01011C  0EEA               	movlw	-22
  5497  01011E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5498  010124  006F FF7B FFF6     	movff	postinc2,tblptrl
  5499  01012A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5500  010130                     	if	0	;tblptru may be non-zero
  5501  010130                     	endif
  5502  010130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5503  010130  0E00               	movlw	low (__mediumconst shr (0+16))
  5504  010132  6EF8               	movwf	tblptru,c
  5505  010134                     	endif
  5506  010134  0008               	tblrd		*
  5507  010136  50F5               	movf	tablat,w,c
  5508  010138  0A69               	xorlw	105
  5509  01013A  A4D8               	btfss	status,2,c
  5510  01013C  D075               	goto	l6008
  5511  01013E                     u4010:
  5512                           
  5513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5514                           ;stkvar	_fmt @ sp[(-19)+-4]
  5515  01013E  0EE9               	movlw	-23
  5516  010140  006F FF8F FFD9     	movff	plusw1,fsr2l
  5517  010146  0EEA               	movlw	-22
  5518  010148  006F FF8F FFDA     	movff	plusw1,fsr2h
  5519  01014E  2ADE               	incf	postinc2,f,c
  5520  010150  0E00               	movlw	0
  5521  010152  22DD               	addwfc	postdec2,f,c
  5522                           
  5523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5524                           ;stkvar	_ap @ sp[(-19)+-6]
  5525  010154  0EE7               	movlw	-25
  5526  010156  006F FF8F FFD9     	movff	plusw1,fsr2l
  5527  01015C  0EE8               	movlw	-24
  5528  01015E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5529  010164  0E02               	movlw	2
  5530  010166  5EDE               	subwf	postinc2,f,c
  5531  010168  0E00               	movlw	0
  5532  01016A  5ADD               	subwfb	postdec2,f,c
  5533  01016C  006F FF78  F040    	movff	postinc2,btemp+10
  5534  010172  006F FF74  F041    	movff	postdec2,btemp+11
  5535  010178  0060  F103  FFD9   	movff	btemp+10,fsr2l
  5536  01017E  0060  F107  FFDA   	movff	btemp+11,fsr2h
  5537  010184  006F FF78  F040    	movff	postinc2,btemp+10
  5538  01018A  006F FF74  F041    	movff	postdec2,btemp+11
  5539                           
  5540                           ;stkvar	_ll @ sp[(-19)+8]
  5541  010190  0EF5               	movlw	-11
  5542  010192  0060  F103  FFE3   	movff	btemp+10,plusw1
  5543  010198  0EF6               	movlw	-10
  5544  01019A  0060  F107  FFE3   	movff	btemp+11,plusw1
  5545  0101A0  6A36               	clrf	btemp^0,c
  5546  0101A2  BEE3               	btfsc	plusw1,7,c
  5547  0101A4  6836               	setf	btemp^0,c
  5548  0101A6  0EF7               	movlw	-9
  5549  0101A8  0060  F0DB  FFE3   	movff	btemp,plusw1
  5550  0101AE  0EF8               	movlw	-8
  5551  0101B0  0060  F0DB  FFE3   	movff	btemp,plusw1
  5552  0101B6  0EF9               	movlw	-7
  5553  0101B8  0060  F0DB  FFE3   	movff	btemp,plusw1
  5554  0101BE  0EFA               	movlw	-6
  5555  0101C0  0060  F0DB  FFE3   	movff	btemp,plusw1
  5556  0101C6  0EFB               	movlw	-5
  5557  0101C8  0060  F0DB  FFE3   	movff	btemp,plusw1
  5558  0101CE  0EFC               	movlw	-4
  5559  0101D0  0060  F0DB  FFE3   	movff	btemp,plusw1
  5560                           
  5561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5562                           ;stkvar	_ll @ sp[(-19)+8]
  5563  0101D6  50E1               	movf	fsr1l,w,c
  5564  0101D8  0FF5               	addlw	-11
  5565  0101DA  6ED9               	movwf	fsr2l,c
  5566  0101DC  50E2               	movf	fsr1h,w,c
  5567  0101DE  6EDA               	movwf	fsr2h,c
  5568  0101E0  0EFF               	movlw	255
  5569  0101E2  22DA               	addwfc	fsr2h,f,c
  5570  0101E4  006F FF7B FFE6     	movff	postinc2,postinc1
  5571  0101EA  006F FF7B FFE6     	movff	postinc2,postinc1
  5572  0101F0  006F FF7B FFE6     	movff	postinc2,postinc1
  5573  0101F6  006F FF7B FFE6     	movff	postinc2,postinc1
  5574  0101FC  006F FF7B FFE6     	movff	postinc2,postinc1
  5575  010202  006F FF7B FFE6     	movff	postinc2,postinc1
  5576  010208  006F FF7B FFE6     	movff	postinc2,postinc1
  5577  01020E  006F FF7B FFE6     	movff	postinc2,postinc1
  5578                           
  5579                           ;stkvar	_fp @ sp[(-27)+-2]
  5580  010214  0EE3               	movlw	-29
  5581  010216  006F FF8F FFE6     	movff	plusw1,postinc1
  5582  01021C  006F FF8F FFE6     	movff	plusw1,postinc1
  5583  010222  EC97  F082         	call	_dtoa	;wreg free
  5584  010226  D17E               	goto	l1782
  5585  010228                     l6008:
  5586                           
  5587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5588                           ;stkvar	_fmt @ sp[(-19)+-4]
  5589  010228  0EE9               	movlw	-23
  5590  01022A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5591  010230  0EEA               	movlw	-22
  5592  010232  006F FF8F FFDA     	movff	plusw1,fsr2h
  5593  010238  006F FF7B FFF6     	movff	postinc2,tblptrl
  5594  01023E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5595  010244                     	if	0	;tblptru may be non-zero
  5596  010244                     	endif
  5597  010244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5598  010244  0E00               	movlw	low (__mediumconst shr (0+16))
  5599  010246  6EF8               	movwf	tblptru,c
  5600  010248                     	endif
  5601  010248  0008               	tblrd		*
  5602  01024A  50F5               	movf	tablat,w,c
  5603  01024C  0A73               	xorlw	115
  5604  01024E  A4D8               	btfss	status,2,c
  5605  010250  D042               	goto	l6018
  5606                           
  5607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5608                           ;stkvar	_fmt @ sp[(-19)+-4]
  5609  010252  0EE9               	movlw	-23
  5610  010254  006F FF8F FFD9     	movff	plusw1,fsr2l
  5611  01025A  0EEA               	movlw	-22
  5612  01025C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5613  010262  2ADE               	incf	postinc2,f,c
  5614  010264  0E00               	movlw	0
  5615  010266  22DD               	addwfc	postdec2,f,c
  5616                           
  5617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5618                           ;stkvar	_ap @ sp[(-19)+-6]
  5619  010268  0EE7               	movlw	-25
  5620  01026A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5621  010270  0EE8               	movlw	-24
  5622  010272  006F FF8F FFDA     	movff	plusw1,fsr2h
  5623  010278  0E02               	movlw	2
  5624  01027A  5EDE               	subwf	postinc2,f,c
  5625  01027C  0E00               	movlw	0
  5626  01027E  5ADD               	subwfb	postdec2,f,c
  5627  010280  006F FF78  F040    	movff	postinc2,btemp+10
  5628  010286  006F FF74  F041    	movff	postdec2,btemp+11
  5629  01028C  0060  F103  FFD9   	movff	btemp+10,fsr2l
  5630  010292  0060  F107  FFDA   	movff	btemp+11,fsr2h
  5631  010298  006F FF78  F040    	movff	postinc2,btemp+10
  5632  01029E  006F FF74  F041    	movff	postdec2,btemp+11
  5633                           
  5634                           ;stkvar	_cp @ sp[(-19)+16]
  5635  0102A4  0EFE               	movlw	-2
  5636  0102A6  0060  F107  FFE3   	movff	btemp+11,plusw1
  5637  0102AC  0EFD               	movlw	-3
  5638  0102AE  0060  F103  FFE3   	movff	btemp+10,plusw1
  5639                           
  5640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5641                           ;stkvar	_cp @ sp[(-19)+16]
  5642  0102B4  0EFD               	movlw	-3
  5643  0102B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5644  0102BC  006F FF8F FFE6     	movff	plusw1,postinc1
  5645                           
  5646                           ;stkvar	_fp @ sp[(-21)+-2]
  5647  0102C2  0EE9               	movlw	-23
  5648  0102C4  006F FF8F FFE6     	movff	plusw1,postinc1
  5649  0102CA  006F FF8F FFE6     	movff	plusw1,postinc1
  5650  0102D0  EC9D  F089         	call	_stoa	;wreg free
  5651  0102D4  D127               	goto	l1782
  5652  0102D6                     l6018:
  5653                           
  5654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  5655                           ;stkvar	_fmt @ sp[(-19)+-4]
  5656  0102D6  0EE9               	movlw	-23
  5657  0102D8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5658  0102DE  0EEA               	movlw	-22
  5659  0102E0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5660  0102E6  006F FF7B FFF6     	movff	postinc2,tblptrl
  5661  0102EC  006F FF77 FFF7     	movff	postdec2,tblptrh
  5662  0102F2                     	if	0	;tblptru may be non-zero
  5663  0102F2                     	endif
  5664  0102F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5665  0102F2  0E00               	movlw	low (__mediumconst shr (0+16))
  5666  0102F4  6EF8               	movwf	tblptru,c
  5667  0102F6                     	endif
  5668  0102F6  0008               	tblrd		*
  5669  0102F8  50F5               	movf	tablat,w,c
  5670  0102FA  0A78               	xorlw	120
  5671  0102FC  B4D8               	btfsc	status,2,c
  5672  0102FE  D015               	goto	u4040
  5673                           
  5674                           ;stkvar	_fmt @ sp[(-19)+-4]
  5675  010300  0EE9               	movlw	-23
  5676  010302  006F FF8F FFD9     	movff	plusw1,fsr2l
  5677  010308  0EEA               	movlw	-22
  5678  01030A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5679  010310  006F FF7B FFF6     	movff	postinc2,tblptrl
  5680  010316  006F FF77 FFF7     	movff	postdec2,tblptrh
  5681  01031C                     	if	0	;tblptru may be non-zero
  5682  01031C                     	endif
  5683  01031C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5684  01031C  0E00               	movlw	low (__mediumconst shr (0+16))
  5685  01031E  6EF8               	movwf	tblptru,c
  5686  010320                     	endif
  5687  010320  0008               	tblrd		*
  5688  010322  50F5               	movf	tablat,w,c
  5689  010324  0A58               	xorlw	88
  5690  010326  A4D8               	btfss	status,2,c
  5691  010328  D094               	goto	l6032
  5692  01032A                     u4040:
  5693                           
  5694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  5695                           ;stkvar	_fmt @ sp[(-19)+-4]
  5696  01032A  0EE9               	movlw	-23
  5697  01032C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5698  010332  0EEA               	movlw	-22
  5699  010334  006F FF8F FFDA     	movff	plusw1,fsr2h
  5700  01033A  006F FF7B FFF6     	movff	postinc2,tblptrl
  5701  010340  006F FF77 FFF7     	movff	postdec2,tblptrh
  5702  010346                     	if	0	;tblptru may be non-zero
  5703  010346                     	endif
  5704  010346                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5705  010346  0E00               	movlw	low (__mediumconst shr (0+16))
  5706  010348  6EF8               	movwf	tblptru,c
  5707  01034A                     	endif
  5708                           
  5709                           ;stkvar	_c @ sp[(-19)+18]
  5710  01034A  0008               	tblrd		*
  5711  01034C  0EFF               	movlw	-1
  5712  01034E  006F FFD7 FFE3     	movff	tablat,plusw1
  5713                           
  5714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  5715                           ;stkvar	_fmt @ sp[(-19)+-4]
  5716  010354  0EE9               	movlw	-23
  5717  010356  006F FF8F FFD9     	movff	plusw1,fsr2l
  5718  01035C  0EEA               	movlw	-22
  5719  01035E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5720  010364  2ADE               	incf	postinc2,f,c
  5721  010366  0E00               	movlw	0
  5722  010368  22DD               	addwfc	postdec2,f,c
  5723                           
  5724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5725                           ;stkvar	_ap @ sp[(-19)+-6]
  5726  01036A  0EE7               	movlw	-25
  5727  01036C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5728  010372  0EE8               	movlw	-24
  5729  010374  006F FF8F FFDA     	movff	plusw1,fsr2h
  5730  01037A  0E02               	movlw	2
  5731  01037C  5EDE               	subwf	postinc2,f,c
  5732  01037E  0E00               	movlw	0
  5733  010380  5ADD               	subwfb	postdec2,f,c
  5734  010382  006F FF78  F040    	movff	postinc2,btemp+10
  5735  010388  006F FF74  F041    	movff	postdec2,btemp+11
  5736  01038E  0060  F103  FFD9   	movff	btemp+10,fsr2l
  5737  010394  0060  F107  FFDA   	movff	btemp+11,fsr2h
  5738  01039A  006F FF78  F040    	movff	postinc2,btemp+10
  5739  0103A0  006F FF74  F041    	movff	postdec2,btemp+11
  5740  0103A6  5040               	movf	(btemp+10)^0,w,c
  5741  0103A8  6E46               	movwf	(btemp+16)^0,c
  5742  0103AA  5041               	movf	(btemp+11)^0,w,c
  5743  0103AC  6E47               	movwf	(btemp+17)^0,c
  5744  0103AE  6A48               	clrf	(btemp+18)^0,c
  5745  0103B0  6A49               	clrf	(btemp+19)^0,c
  5746  0103B2  6A4A               	clrf	(btemp+20)^0,c
  5747  0103B4  6A4B               	clrf	(btemp+21)^0,c
  5748  0103B6  6A4C               	clrf	(btemp+22)^0,c
  5749  0103B8  6A4D               	clrf	(btemp+23)^0,c
  5750                           
  5751                           ;stkvar	_llu @ sp[(-19)+0]
  5752  0103BA  0EED               	movlw	-19
  5753  0103BC  0060  F11B  FFE3   	movff	btemp+16,plusw1
  5754  0103C2  0EEE               	movlw	-18
  5755  0103C4  0060  F11F  FFE3   	movff	btemp+17,plusw1
  5756  0103CA  0EEF               	movlw	-17
  5757  0103CC  0060  F123  FFE3   	movff	btemp+18,plusw1
  5758  0103D2  0EF0               	movlw	-16
  5759  0103D4  0060  F127  FFE3   	movff	btemp+19,plusw1
  5760  0103DA  0EF1               	movlw	-15
  5761  0103DC  0060  F12B  FFE3   	movff	btemp+20,plusw1
  5762  0103E2  0EF2               	movlw	-14
  5763  0103E4  0060  F12F  FFE3   	movff	btemp+21,plusw1
  5764  0103EA  0EF3               	movlw	-13
  5765  0103EC  0060  F133  FFE3   	movff	btemp+22,plusw1
  5766  0103F2  0EF4               	movlw	-12
  5767  0103F4  0060  F137  FFE3   	movff	btemp+23,plusw1
  5768                           
  5769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  5770                           ;stkvar	_c @ sp[(-19)+18]
  5771  0103FA  0EFF               	movlw	-1
  5772  0103FC  50E3               	movf	plusw1,w,c
  5773  0103FE  6EE6               	movwf	postinc1,c
  5774                           
  5775                           ;stkvar	_llu @ sp[(-20)+0]
  5776  010400  50E1               	movf	fsr1l,w,c
  5777  010402  0FEC               	addlw	-20
  5778  010404  6ED9               	movwf	fsr2l,c
  5779  010406  50E2               	movf	fsr1h,w,c
  5780  010408  6EDA               	movwf	fsr2h,c
  5781  01040A  0EFF               	movlw	255
  5782  01040C  22DA               	addwfc	fsr2h,f,c
  5783  01040E  006F FF7B FFE6     	movff	postinc2,postinc1
  5784  010414  006F FF7B FFE6     	movff	postinc2,postinc1
  5785  01041A  006F FF7B FFE6     	movff	postinc2,postinc1
  5786  010420  006F FF7B FFE6     	movff	postinc2,postinc1
  5787  010426  006F FF7B FFE6     	movff	postinc2,postinc1
  5788  01042C  006F FF7B FFE6     	movff	postinc2,postinc1
  5789  010432  006F FF7B FFE6     	movff	postinc2,postinc1
  5790  010438  006F FF7B FFE6     	movff	postinc2,postinc1
  5791                           
  5792                           ;stkvar	_fp @ sp[(-28)+-2]
  5793  01043E  0EE2               	movlw	-30
  5794  010440  006F FF8F FFE6     	movff	plusw1,postinc1
  5795  010446  006F FF8F FFE6     	movff	plusw1,postinc1
  5796  01044C  ECC2  F084         	call	_xtoa	;wreg free
  5797  010450  D069               	goto	l1782
  5798  010452                     l6032:
  5799                           
  5800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5801                           ;stkvar	_fmt @ sp[(-19)+-4]
  5802  010452  0EE9               	movlw	-23
  5803  010454  006F FF8F FFD9     	movff	plusw1,fsr2l
  5804  01045A  0EEA               	movlw	-22
  5805  01045C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5806  010462  006F FF7B FFF6     	movff	postinc2,tblptrl
  5807  010468  006F FF77 FFF7     	movff	postdec2,tblptrh
  5808  01046E                     	if	0	;tblptru may be non-zero
  5809  01046E                     	endif
  5810  01046E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5811  01046E  0E00               	movlw	low (__mediumconst shr (0+16))
  5812  010470  6EF8               	movwf	tblptru,c
  5813  010472                     	endif
  5814  010472  0008               	tblrd		*
  5815  010474  50F5               	movf	tablat,w,c
  5816  010476  0A25               	xorlw	37
  5817  010478  A4D8               	btfss	status,2,c
  5818  01047A  D01A               	goto	l6042
  5819                           
  5820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5821                           ;stkvar	_fmt @ sp[(-19)+-4]
  5822  01047C  0EE9               	movlw	-23
  5823  01047E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5824  010484  0EEA               	movlw	-22
  5825  010486  006F FF8F FFDA     	movff	plusw1,fsr2h
  5826  01048C  2ADE               	incf	postinc2,f,c
  5827  01048E  0E00               	movlw	0
  5828  010490  22DD               	addwfc	postdec2,f,c
  5829                           
  5830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5831                           ;stkvar	_fp @ sp[(-19)+-2]
  5832  010492  0EEB               	movlw	-21
  5833  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  5834  01049A  006F FF8F FFE6     	movff	plusw1,postinc1
  5835  0104A0  0E25               	movlw	37
  5836  0104A2  6EE6               	movwf	postinc1,c
  5837  0104A4  0E00               	movlw	0
  5838  0104A6  6EE6               	movwf	postinc1,c
  5839  0104A8  ECFC  F08E         	call	_fputc	;wreg free
  5840  0104AC                     l6038:
  5841                           
  5842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5843  0104AC  0E01               	movlw	1
  5844  0104AE  D00C               	goto	L2
  5845  0104B0                     l6042:
  5846                           
  5847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  5848                           ;stkvar	_fmt @ sp[(-19)+-4]
  5849  0104B0  0EE9               	movlw	-23
  5850  0104B2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5851  0104B8  0EEA               	movlw	-22
  5852  0104BA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5853  0104C0  2ADE               	incf	postinc2,f,c
  5854  0104C2  0E00               	movlw	0
  5855  0104C4  22DD               	addwfc	postdec2,f,c
  5856                           
  5857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  5858  0104C6  0E00               	movlw	0
  5859  0104C8                     L2:
  5860  0104C8  6E36               	movwf	btemp^0,c
  5861  0104CA  0E00               	movlw	0
  5862  0104CC  6E37               	movwf	(btemp+1)^0,c
  5863  0104CE  D02A               	goto	l1782
  5864  0104D0                     l6048:
  5865                           
  5866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  5867                           ;stkvar	_fp @ sp[(-19)+-2]
  5868  0104D0  0EEB               	movlw	-21
  5869  0104D2  006F FF8F FFE6     	movff	plusw1,postinc1
  5870  0104D8  006F FF8F FFE6     	movff	plusw1,postinc1
  5871                           
  5872                           ;stkvar	_fmt @ sp[(-21)+-4]
  5873  0104DE  0EE7               	movlw	-25
  5874  0104E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5875  0104E6  0EE8               	movlw	-24
  5876  0104E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5877  0104EE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5878  0104F4  006F FF77 FFF7     	movff	postdec2,tblptrh
  5879  0104FA                     	if	0	;tblptru may be non-zero
  5880  0104FA                     	endif
  5881  0104FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5882  0104FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5883  0104FC  6EF8               	movwf	tblptru,c
  5884  0104FE                     	endif
  5885  0104FE  0008               	tblrd		*
  5886  010500  50F5               	movf	tablat,w,c
  5887  010502  6EE6               	movwf	postinc1,c
  5888  010504  0E00               	movlw	0
  5889  010506  6EE6               	movwf	postinc1,c
  5890  010508  ECFC  F08E         	call	_fputc	;wreg free
  5891                           
  5892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5893                           ;stkvar	_fmt @ sp[(-19)+-4]
  5894  01050C  0EE9               	movlw	-23
  5895  01050E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5896  010514  0EEA               	movlw	-22
  5897  010516  006F FF8F FFDA     	movff	plusw1,fsr2h
  5898  01051C  2ADE               	incf	postinc2,f,c
  5899  01051E  0E00               	movlw	0
  5900  010520  22DD               	addwfc	postdec2,f,c
  5901  010522  D7C4               	goto	l6038
  5902  010524                     l1782:
  5903                           
  5904                           ; _vfpfcnvrt: autosize = 19, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  5905  010524  0EE7               	movlw	231
  5906  010526  26E1               	addwf	fsr1l,f,c
  5907  010528  0EFF               	movlw	255
  5908  01052A  22E2               	addwfc	fsr1h,f,c
  5909  01052C  0012               	return		;funcret
  5910  01052E                     __end_of_vfpfcnvrt:
  5911                           	opt callstack 0
  5912                           
  5913 ;; *************** function _xtoa *****************
  5914 ;; Defined at:
  5915 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5918 ;;		 -> f(6), NULL(0), 
  5919 ;;  d               8  [STACK] unsigned long long 
  5920 ;;  x               1  [STACK] unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  n               8  [STACK] unsigned long long 
  5923 ;;  c               2  [STACK] int 
  5924 ;;  i               2  [STACK] int 
  5925 ;;  w               2  [STACK] int 
  5926 ;;  p               2  [STACK] int 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  2  [STACK] int 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:   11
  5943 ;; This function calls:
  5944 ;;		_isalpha
  5945 ;;		_isupper
  5946 ;;		_pad
  5947 ;;		_toupper
  5948 ;; This function is called by:
  5949 ;;		_vfpfcnvrt
  5950 ;; This function uses a reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text30
  5954  010984                     __ptext30:
  5955                           	opt callstack 0
  5956  010984                     _xtoa:
  5957                           	opt callstack 0
  5958                           
  5959                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  5960  010984  0E14               	movlw	20
  5961  010986  26E1               	addwf	fsr1l,f,c
  5962  010988  0E00               	movlw	0
  5963  01098A  22E2               	addwfc	fsr1h,f,c
  5964                           
  5965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  5966                           
  5967                           ;incstack = 0
  5968  01098C  AE22               	btfss	(_prec+1)^0,7,c
  5969                           
  5970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  5971  01098E  9223               	bcf	_flags^0,1,c
  5972                           
  5973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  5974  010990  BE22               	btfsc	(_prec+1)^0,7,c
  5975  010992  D005               	goto	u3810
  5976  010994  5022               	movf	(_prec+1)^0,w,c
  5977  010996  E110               	bnz	l5914
  5978  010998  0421               	decf	_prec^0,w,c
  5979  01099A  B0D8               	btfsc	status,0,c
  5980  01099C  D00D               	goto	l5914
  5981  01099E                     u3810:
  5982  01099E  0E01               	movlw	1
  5983  0109A0  6E40               	movwf	(btemp+10)^0,c
  5984  0109A2  0E00               	movlw	0
  5985  0109A4  6E41               	movwf	(btemp+11)^0,c
  5986                           
  5987                           ;stkvar	_p @ sp[(-20)+18]
  5988  0109A6  0EFE               	movlw	-2
  5989  0109A8  0060  F103  FFE3   	movff	btemp+10,plusw1
  5990  0109AE  0EFF               	movlw	-1
  5991  0109B0  0060  F107  FFE3   	movff	btemp+11,plusw1
  5992  0109B6  D008               	goto	l1754
  5993  0109B8                     l5914:
  5994                           
  5995                           ;stkvar	_p @ sp[(-20)+18]
  5996  0109B8  0EFE               	movlw	-2
  5997  0109BA  0060  F087  FFE3   	movff	_prec,plusw1
  5998  0109C0  0EFF               	movlw	-1
  5999  0109C2  0060  F08B  FFE3   	movff	_prec+1,plusw1
  6000  0109C8                     l1754:
  6001                           
  6002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6003                           ;stkvar	_w @ sp[(-20)+16]
  6004  0109C8  0EFC               	movlw	-4
  6005  0109CA  0060  F07F  FFE3   	movff	_width,plusw1
  6006  0109D0  0EFD               	movlw	-3
  6007  0109D2  0060  F083  FFE3   	movff	_width+1,plusw1
  6008                           
  6009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6010  0109D8  A823               	btfss	_flags^0,4,c
  6011  0109DA  D00B               	goto	l5920
  6012                           
  6013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6014                           ;stkvar	_w @ sp[(-20)+16]
  6015  0109DC  50E1               	movf	fsr1l,w,c
  6016  0109DE  0FFC               	addlw	-4
  6017  0109E0  6ED9               	movwf	fsr2l,c
  6018  0109E2  50E2               	movf	fsr1h,w,c
  6019  0109E4  6EDA               	movwf	fsr2h,c
  6020  0109E6  0EFF               	movlw	255
  6021  0109E8  22DA               	addwfc	fsr2h,f,c
  6022  0109EA  0EFE               	movlw	254
  6023  0109EC  26DE               	addwf	postinc2,f,c
  6024  0109EE  0EFF               	movlw	255
  6025  0109F0  22DD               	addwfc	postdec2,f,c
  6026  0109F2                     l5920:
  6027                           
  6028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6029                           ;stkvar	_d @ sp[(-20)+-10]
  6030  0109F2  0EE2               	movlw	226
  6031  0109F4  24E1               	addwf	fsr1l,w,c
  6032  0109F6  6ED9               	movwf	fsr2l,c
  6033  0109F8  0EFF               	movlw	255
  6034  0109FA  20E2               	addwfc	fsr1h,w,c
  6035  0109FC  6EDA               	movwf	fsr2h,c
  6036                           
  6037                           ;stkvar	_n @ sp[(-20)+4]
  6038  0109FE  0E08               	movlw	8
  6039  010A00  6E36               	movwf	btemp^0,c
  6040  010A02  0EF0               	movlw	-16
  6041  010A04                     us383999:
  6042  010A04  006F FF7B FFE3     	movff	postinc2,plusw1
  6043  010A0A  28E8               	incf	wreg,w,c
  6044  010A0C  2E36               	decfsz	btemp^0,f,c
  6045  010A0E  D7FA               	bra	us383999
  6046                           
  6047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6048  010A10  0E1F               	movlw	31
  6049  010A12  6E40               	movwf	(btemp+10)^0,c
  6050  010A14  0E00               	movlw	0
  6051  010A16  6E41               	movwf	(btemp+11)^0,c
  6052                           
  6053                           ;stkvar	_i @ sp[(-20)+14]
  6054  010A18  0EFA               	movlw	-6
  6055  010A1A  0060  F103  FFE3   	movff	btemp+10,plusw1
  6056  010A20  0EFB               	movlw	-5
  6057  010A22  0060  F107  FFE3   	movff	btemp+11,plusw1
  6058                           
  6059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6060  010A28  0100               	movlb	0	; () banked
  6061  010A2A  6BC9               	clrf	(_dbuf+31)& (0+255),b
  6062                           
  6063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6064  010A2C  D0E8               	goto	l5958
  6065  010A2E                     l5926:
  6066                           
  6067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  6068                           ;stkvar	_i @ sp[(-20)+14]
  6069  010A2E  50E1               	movf	fsr1l,w,c
  6070  010A30  0FFA               	addlw	-6
  6071  010A32  6ED9               	movwf	fsr2l,c
  6072  010A34  50E2               	movf	fsr1h,w,c
  6073  010A36  6EDA               	movwf	fsr2h,c
  6074  010A38  0EFF               	movlw	255
  6075  010A3A  22DA               	addwfc	fsr2h,f,c
  6076  010A3C  06DE               	decf	postinc2,f,c
  6077  010A3E  0E00               	movlw	0
  6078  010A40  5ADD               	subwfb	postdec2,f,c
  6079                           
  6080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6081                           ;stkvar	_n @ sp[(-20)+4]
  6082  010A42  0EF0               	movlw	-16
  6083  010A44  006F FF8C  F040    	movff	plusw1,btemp+10
  6084  010A4A  0EF1               	movlw	-15
  6085  010A4C  006F FF8C  F041    	movff	plusw1,btemp+11
  6086  010A52  0E0F               	movlw	15
  6087  010A54  1640               	andwf	(btemp+10)^0,f,c
  6088  010A56  0E00               	movlw	0
  6089  010A58  1641               	andwf	(btemp+11)^0,f,c
  6090                           
  6091                           ;stkvar	_c @ sp[(-20)+12]
  6092  010A5A  0EF8               	movlw	-8
  6093  010A5C  0060  F103  FFE3   	movff	btemp+10,plusw1
  6094  010A62  0EF9               	movlw	-7
  6095  010A64  0060  F107  FFE3   	movff	btemp+11,plusw1
  6096                           
  6097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6098                           ;stkvar	_c @ sp[(-20)+12]
  6099  010A6A  0EF9               	movlw	-7
  6100  010A6C  BEE3               	btfsc	plusw1,7,c
  6101  010A6E  D00F               	goto	l5934
  6102  010A70  0EF9               	movlw	-7
  6103  010A72  50E3               	movf	plusw1,w,c
  6104  010A74  E108               	bnz	u3840
  6105  010A76  0EF8               	movlw	-8
  6106  010A78  006F FF8C  F036    	movff	plusw1,btemp
  6107  010A7E  0E0A               	movlw	10
  6108  010A80  5E36               	subwf	btemp^0,f,c
  6109  010A82  A0D8               	btfss	status,0,c
  6110  010A84  D004               	goto	l5934
  6111  010A86                     u3840:
  6112                           
  6113                           ;stkvar	_c @ sp[(-20)+12]
  6114  010A86  0EF8               	movlw	-8
  6115  010A88  50E3               	movf	plusw1,w,c
  6116  010A8A  0F57               	addlw	87
  6117  010A8C  D003               	goto	L3
  6118  010A8E                     l5934:
  6119                           
  6120                           ;stkvar	_c @ sp[(-20)+12]
  6121  010A8E  0EF8               	movlw	-8
  6122  010A90  50E3               	movf	plusw1,w,c
  6123  010A92  0F30               	addlw	48
  6124  010A94                     L3:
  6125  010A94  6E40               	movwf	(btemp+10)^0,c
  6126  010A96  0EF9               	movlw	-7
  6127  010A98  006F FF8C  F041    	movff	plusw1,btemp+11
  6128  010A9E  0E00               	movlw	0
  6129  010AA0  2241               	addwfc	(btemp+11)^0,f,c
  6130                           
  6131                           ;stkvar	_c @ sp[(-20)+12]
  6132  010AA2  0EF8               	movlw	-8
  6133  010AA4  0060  F103  FFE3   	movff	btemp+10,plusw1
  6134  010AAA  0EF9               	movlw	-7
  6135  010AAC  0060  F107  FFE3   	movff	btemp+11,plusw1
  6136  010AB2  0EBF               	movlw	191
  6137  010AB4  6E40               	movwf	(btemp+10)^0,c
  6138  010AB6  0EFF               	movlw	255
  6139  010AB8  6E41               	movwf	(btemp+11)^0,c
  6140                           
  6141                           ;stkvar	_x @ sp[(-20)+-11]
  6142  010ABA  0EE1               	movlw	-31
  6143  010ABC  50E3               	movf	plusw1,w,c
  6144  010ABE  6E3E               	movwf	(btemp+8)^0,c
  6145  010AC0  6A3F               	clrf	(btemp+9)^0,c
  6146  010AC2  5040               	movf	(btemp+10)^0,w,c
  6147  010AC4  263E               	addwf	(btemp+8)^0,f,c
  6148  010AC6  5041               	movf	(btemp+11)^0,w,c
  6149  010AC8  223F               	addwfc	(btemp+9)^0,f,c
  6150  010ACA  503F               	movf	(btemp+9)^0,w,c
  6151  010ACC  E106               	bnz	u3850
  6152  010ACE  0E1A               	movlw	26
  6153  010AD0  5C3E               	subwf	(btemp+8)^0,w,c
  6154  010AD2  B0D8               	btfsc	status,0,c
  6155  010AD4  D002               	goto	u3850
  6156  010AD6  0E01               	movlw	1
  6157  010AD8  D001               	goto	u3860
  6158  010ADA                     u3850:
  6159  010ADA  0E00               	movlw	0
  6160  010ADC                     u3860:
  6161  010ADC  6E40               	movwf	(btemp+10)^0,c
  6162  010ADE  6A41               	clrf	(btemp+11)^0,c
  6163                           
  6164                           ;stkvar	_xtoa$4012 @ sp[(-20)+2]
  6165  010AE0  0EEE               	movlw	-18
  6166  010AE2  0060  F103  FFE3   	movff	btemp+10,plusw1
  6167  010AE8  0EEF               	movlw	-17
  6168  010AEA  0060  F107  FFE3   	movff	btemp+11,plusw1
  6169                           
  6170                           ;stkvar	_xtoa$4012 @ sp[(-20)+2]
  6171  010AF0  0EEE               	movlw	-18
  6172  010AF2  006F FF8C  F036    	movff	plusw1,btemp
  6173  010AF8  0EEF               	movlw	-17
  6174  010AFA  50E3               	movf	plusw1,w,c
  6175  010AFC  1036               	iorwf	btemp^0,w,c
  6176  010AFE  B4D8               	btfsc	status,2,c
  6177  010B00  D041               	goto	l5950
  6178  010B02  0E9F               	movlw	159
  6179  010B04  6E40               	movwf	(btemp+10)^0,c
  6180  010B06  0EFF               	movlw	255
  6181  010B08  6E41               	movwf	(btemp+11)^0,c
  6182                           
  6183                           ;stkvar	_c @ sp[(-20)+12]
  6184  010B0A  0EF8               	movlw	-8
  6185  010B0C  006F FF8C  F03E    	movff	plusw1,btemp+8
  6186  010B12  0EF9               	movlw	-7
  6187  010B14  006F FF8C  F03F    	movff	plusw1,btemp+9
  6188  010B1A  0E20               	movlw	32
  6189  010B1C  123E               	iorwf	(btemp+8)^0,f,c
  6190  010B1E  0E00               	movlw	0
  6191  010B20  123F               	iorwf	(btemp+9)^0,f,c
  6192  010B22  5040               	movf	(btemp+10)^0,w,c
  6193  010B24  263E               	addwf	(btemp+8)^0,f,c
  6194  010B26  5041               	movf	(btemp+11)^0,w,c
  6195  010B28  223F               	addwfc	(btemp+9)^0,f,c
  6196  010B2A  503F               	movf	(btemp+9)^0,w,c
  6197  010B2C  E106               	bnz	u3880
  6198  010B2E  0E1A               	movlw	26
  6199  010B30  5C3E               	subwf	(btemp+8)^0,w,c
  6200  010B32  B0D8               	btfsc	status,0,c
  6201  010B34  D002               	goto	u3880
  6202  010B36  0E01               	movlw	1
  6203  010B38  D001               	goto	u3890
  6204  010B3A                     u3880:
  6205  010B3A  0E00               	movlw	0
  6206  010B3C                     u3890:
  6207  010B3C  6E40               	movwf	(btemp+10)^0,c
  6208  010B3E  6A41               	clrf	(btemp+11)^0,c
  6209                           
  6210                           ;stkvar	_xtoa$4013 @ sp[(-20)+0]
  6211  010B40  0EEC               	movlw	-20
  6212  010B42  0060  F103  FFE3   	movff	btemp+10,plusw1
  6213  010B48  0EED               	movlw	-19
  6214  010B4A  0060  F107  FFE3   	movff	btemp+11,plusw1
  6215                           
  6216                           ;stkvar	_xtoa$4013 @ sp[(-20)+0]
  6217  010B50  0EEC               	movlw	-20
  6218  010B52  006F FF8C  F036    	movff	plusw1,btemp
  6219  010B58  0EED               	movlw	-19
  6220  010B5A  50E3               	movf	plusw1,w,c
  6221  010B5C  1036               	iorwf	btemp^0,w,c
  6222  010B5E  B4D8               	btfsc	status,2,c
  6223  010B60  D011               	goto	l5950
  6224                           
  6225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6226                           ;stkvar	_c @ sp[(-20)+12]
  6227  010B62  0EF8               	movlw	-8
  6228  010B64  006F FF8F FFE6     	movff	plusw1,postinc1
  6229  010B6A  006F FF8F FFE6     	movff	plusw1,postinc1
  6230  010B70  EC2F  F094         	call	_toupper	;wreg free
  6231                           
  6232                           ;stkvar	_c @ sp[(-20)+12]
  6233  010B74  0EF8               	movlw	-8
  6234  010B76  0060  F0DB  FFE3   	movff	btemp,plusw1
  6235  010B7C  0EF9               	movlw	-7
  6236  010B7E  0060  F0DF  FFE3   	movff	btemp+1,plusw1
  6237  010B84                     l5950:
  6238                           
  6239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6240                           ;stkvar	_c @ sp[(-20)+12]
  6241                           ;stkvar	_i @ sp[(-20)+14]
  6242  010B84  0EFA               	movlw	-6
  6243  010B86  006F FF8C  F041    	movff	plusw1,btemp+11
  6244  010B8C  5041               	movf	(btemp+11)^0,w,c
  6245  010B8E  0FAA               	addlw	low _dbuf
  6246  010B90  6ED9               	movwf	fsr2l,c
  6247  010B92  6ADA               	clrf	fsr2h,c
  6248  010B94  0EF8               	movlw	-8
  6249  010B96  006F FF8F FFDF     	movff	plusw1,indf2
  6250                           
  6251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  6252                           ;stkvar	_p @ sp[(-20)+18]
  6253  010B9C  50E1               	movf	fsr1l,w,c
  6254  010B9E  0FFE               	addlw	-2
  6255  010BA0  6ED9               	movwf	fsr2l,c
  6256  010BA2  50E2               	movf	fsr1h,w,c
  6257  010BA4  6EDA               	movwf	fsr2h,c
  6258  010BA6  0EFF               	movlw	255
  6259  010BA8  22DA               	addwfc	fsr2h,f,c
  6260  010BAA  06DE               	decf	postinc2,f,c
  6261  010BAC  0E00               	movlw	0
  6262  010BAE  5ADD               	subwfb	postdec2,f,c
  6263                           
  6264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  6265                           ;stkvar	_w @ sp[(-20)+16]
  6266  010BB0  50E1               	movf	fsr1l,w,c
  6267  010BB2  0FFC               	addlw	-4
  6268  010BB4  6ED9               	movwf	fsr2l,c
  6269  010BB6  50E2               	movf	fsr1h,w,c
  6270  010BB8  6EDA               	movwf	fsr2h,c
  6271  010BBA  0EFF               	movlw	255
  6272  010BBC  22DA               	addwfc	fsr2h,f,c
  6273  010BBE  06DE               	decf	postinc2,f,c
  6274  010BC0  0E00               	movlw	0
  6275  010BC2  5ADD               	subwfb	postdec2,f,c
  6276                           
  6277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6278  010BC4  0E04               	movlw	4
  6279  010BC6  6E41               	movwf	(btemp+11)^0,c
  6280                           
  6281                           ;stkvar	_n @ sp[(-20)+4]
  6282  010BC8  50E1               	movf	fsr1l,w,c
  6283  010BCA  0FF0               	addlw	-16
  6284  010BCC  6ED9               	movwf	fsr2l,c
  6285  010BCE  50E2               	movf	fsr1h,w,c
  6286  010BD0  6EDA               	movwf	fsr2h,c
  6287  010BD2  0EFF               	movlw	255
  6288  010BD4  22DA               	addwfc	fsr2h,f,c
  6289  010BD6  2841               	incf	(btemp+11)^0,w,c
  6290  010BD8  52DE               	movf	postinc2,f,c
  6291  010BDA  D00F               	goto	u3910
  6292  010BDC                     u3915:
  6293  010BDC  52DE               	movf	postinc2,f,c
  6294  010BDE  52DE               	movf	postinc2,f,c
  6295  010BE0  52DE               	movf	postinc2,f,c
  6296  010BE2  52DE               	movf	postinc2,f,c
  6297  010BE4  52DE               	movf	postinc2,f,c
  6298  010BE6  52DE               	movf	postinc2,f,c
  6299  010BE8  90D8               	bcf	status,0,c
  6300  010BEA  32DD               	rrcf	postdec2,f,c
  6301  010BEC  32DD               	rrcf	postdec2,f,c
  6302  010BEE  32DD               	rrcf	postdec2,f,c
  6303  010BF0  32DD               	rrcf	postdec2,f,c
  6304  010BF2  32DD               	rrcf	postdec2,f,c
  6305  010BF4  32DD               	rrcf	postdec2,f,c
  6306  010BF6  32DD               	rrcf	postdec2,f,c
  6307  010BF8  32DE               	rrcf	postinc2,f,c
  6308  010BFA                     u3910:
  6309  010BFA  2EE8               	decfsz	wreg,f,c
  6310  010BFC  D7EF               	goto	u3915
  6311  010BFE                     l5958:
  6312                           
  6313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6314                           ;stkvar	_i @ sp[(-20)+14]
  6315  010BFE  0EFB               	movlw	-5
  6316  010C00  BEE3               	btfsc	plusw1,7,c
  6317  010C02  D03A               	goto	u3960
  6318  010C04  0EFB               	movlw	-5
  6319  010C06  50E3               	movf	plusw1,w,c
  6320  010C08  E108               	bnz	u3920
  6321  010C0A  0EFA               	movlw	-6
  6322  010C0C  006F FF8C  F036    	movff	plusw1,btemp
  6323  010C12  0E02               	movlw	2
  6324  010C14  5E36               	subwf	btemp^0,f,c
  6325  010C16  A0D8               	btfss	status,0,c
  6326  010C18  D02F               	goto	u3960
  6327  010C1A                     u3920:
  6328                           
  6329                           ;stkvar	_n @ sp[(-20)+4]
  6330  010C1A  0EF0               	movlw	-16
  6331  010C1C  50E3               	movf	plusw1,w,c
  6332  010C1E  E115               	bnz	u3931
  6333  010C20  0EF1               	movlw	-15
  6334  010C22  50E3               	movf	plusw1,w,c
  6335  010C24  E112               	bnz	u3931
  6336  010C26  0EF2               	movlw	-14
  6337  010C28  50E3               	movf	plusw1,w,c
  6338  010C2A  E10F               	bnz	u3931
  6339  010C2C  0EF3               	movlw	-13
  6340  010C2E  50E3               	movf	plusw1,w,c
  6341  010C30  E10C               	bnz	u3931
  6342  010C32  0EF4               	movlw	-12
  6343  010C34  50E3               	movf	plusw1,w,c
  6344  010C36  E109               	bnz	u3931
  6345  010C38  0EF5               	movlw	-11
  6346  010C3A  50E3               	movf	plusw1,w,c
  6347  010C3C  E106               	bnz	u3931
  6348  010C3E  0EF6               	movlw	-10
  6349  010C40  50E3               	movf	plusw1,w,c
  6350  010C42  E103               	bnz	u3931
  6351  010C44  0EF7               	movlw	-9
  6352  010C46  50E3               	movf	plusw1,w,c
  6353  010C48  A4D8               	btfss	status,2,c
  6354  010C4A                     u3931:
  6355  010C4A  D6F1               	goto	l5926
  6356                           
  6357                           ;stkvar	_p @ sp[(-20)+18]
  6358  010C4C  0EFF               	movlw	-1
  6359  010C4E  BEE3               	btfsc	plusw1,7,c
  6360  010C50  D007               	goto	u3940
  6361  010C52  0EFF               	movlw	-1
  6362  010C54  50E3               	movf	plusw1,w,c
  6363  010C56  E103               	bnz	u3941
  6364  010C58  0EFE               	movlw	-2
  6365  010C5A  04E3               	decf	plusw1,w,c
  6366  010C5C  B0D8               	btfsc	status,0,c
  6367  010C5E                     u3941:
  6368  010C5E  D6E7               	goto	l5926
  6369  010C60                     u3940:
  6370                           
  6371                           ;stkvar	_w @ sp[(-20)+16]
  6372  010C60  0EFD               	movlw	-3
  6373  010C62  BEE3               	btfsc	plusw1,7,c
  6374  010C64  D009               	goto	u3960
  6375  010C66  0EFD               	movlw	-3
  6376  010C68  50E3               	movf	plusw1,w,c
  6377  010C6A  E104               	bnz	u3950
  6378  010C6C  0EFC               	movlw	-4
  6379  010C6E  04E3               	decf	plusw1,w,c
  6380  010C70  A0D8               	btfss	status,0,c
  6381  010C72  D002               	goto	u3960
  6382  010C74                     u3950:
  6383  010C74  B223               	btfsc	_flags^0,1,c
  6384  010C76  D6DB               	goto	l5926
  6385  010C78                     u3960:
  6386                           
  6387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6388  010C78  A823               	btfss	_flags^0,4,c
  6389  010C7A  D02A               	goto	l5974
  6390                           
  6391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  6392                           ;stkvar	_i @ sp[(-20)+14]
  6393  010C7C  50E1               	movf	fsr1l,w,c
  6394  010C7E  0FFA               	addlw	-6
  6395  010C80  6ED9               	movwf	fsr2l,c
  6396  010C82  50E2               	movf	fsr1h,w,c
  6397  010C84  6EDA               	movwf	fsr2h,c
  6398  010C86  0EFF               	movlw	255
  6399  010C88  22DA               	addwfc	fsr2h,f,c
  6400  010C8A  06DE               	decf	postinc2,f,c
  6401  010C8C  0E00               	movlw	0
  6402  010C8E  5ADD               	subwfb	postdec2,f,c
  6403                           
  6404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6405                           ;stkvar	_x @ sp[(-20)+-11]
  6406                           ;stkvar	_i @ sp[(-20)+14]
  6407  010C90  0EFA               	movlw	-6
  6408  010C92  006F FF8C  F041    	movff	plusw1,btemp+11
  6409  010C98  5041               	movf	(btemp+11)^0,w,c
  6410  010C9A  0FAA               	addlw	low _dbuf
  6411  010C9C  6ED9               	movwf	fsr2l,c
  6412  010C9E  6ADA               	clrf	fsr2h,c
  6413  010CA0  0EE1               	movlw	-31
  6414  010CA2  006F FF8F FFDF     	movff	plusw1,indf2
  6415                           
  6416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  6417                           ;stkvar	_i @ sp[(-20)+14]
  6418  010CA8  50E1               	movf	fsr1l,w,c
  6419  010CAA  0FFA               	addlw	-6
  6420  010CAC  6ED9               	movwf	fsr2l,c
  6421  010CAE  50E2               	movf	fsr1h,w,c
  6422  010CB0  6EDA               	movwf	fsr2h,c
  6423  010CB2  0EFF               	movlw	255
  6424  010CB4  22DA               	addwfc	fsr2h,f,c
  6425  010CB6  06DE               	decf	postinc2,f,c
  6426  010CB8  0E00               	movlw	0
  6427  010CBA  5ADD               	subwfb	postdec2,f,c
  6428                           
  6429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6430                           ;stkvar	_i @ sp[(-20)+14]
  6431  010CBC  0EFA               	movlw	-6
  6432  010CBE  006F FF8C  F041    	movff	plusw1,btemp+11
  6433  010CC4  5041               	movf	(btemp+11)^0,w,c
  6434  010CC6  0FAA               	addlw	low _dbuf
  6435  010CC8  6ED9               	movwf	fsr2l,c
  6436  010CCA  6ADA               	clrf	fsr2h,c
  6437  010CCC  0E30               	movlw	48
  6438  010CCE  6EDF               	movwf	indf2,c
  6439  010CD0                     l5974:
  6440                           
  6441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6442                           ;stkvar	_w @ sp[(-20)+16]
  6443  010CD0  0EFC               	movlw	-4
  6444  010CD2  006F FF8F FFE6     	movff	plusw1,postinc1
  6445  010CD8  006F FF8F FFE6     	movff	plusw1,postinc1
  6446                           
  6447                           ;stkvar	_i @ sp[(-22)+14]
  6448  010CDE  0EF8               	movlw	-8
  6449  010CE0  006F FF8C  F041    	movff	plusw1,btemp+11
  6450  010CE6  5041               	movf	(btemp+11)^0,w,c
  6451  010CE8  0FAA               	addlw	low _dbuf
  6452  010CEA  6EE6               	movwf	postinc1,c
  6453                           
  6454                           ;stkvar	_fp @ sp[(-23)+-2]
  6455  010CEC  0EE7               	movlw	-25
  6456  010CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6457  010CF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6458  010CFA  EC9A  F090         	call	_pad	;wreg free
  6459                           
  6460                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  6461  010CFE  0EE1               	movlw	225
  6462  010D00  26E1               	addwf	fsr1l,f,c
  6463  010D02  0EFF               	movlw	255
  6464  010D04  22E2               	addwfc	fsr1h,f,c
  6465  010D06  0012               	return		;funcret
  6466  010D08                     __end_of_xtoa:
  6467                           	opt callstack 0
  6468                           
  6469 ;; *************** function _toupper *****************
  6470 ;; Defined at:
  6471 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  c               2  [STACK] int 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2  [STACK] int 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    7
  6492 ;; This function calls:
  6493 ;;		_islower
  6494 ;; This function is called by:
  6495 ;;		_xtoa
  6496 ;; This function uses a reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text31
  6500  01285E                     __ptext31:
  6501                           	opt callstack 0
  6502  01285E                     _toupper:
  6503                           	opt callstack 0
  6504                           
  6505                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6506  01285E  52E6               	movf	postinc1,f,c
  6507  012860  52E6               	movf	postinc1,f,c
  6508                           
  6509                           ;stkvar	_c @ sp[(-2)+-2]
  6510                           
  6511                           ;incstack = 0
  6512  012862  0EFC               	movlw	-4
  6513  012864  50E3               	movf	plusw1,w,c
  6514  012866  0F9F               	addlw	159
  6515  012868  6E40               	movwf	(btemp+10)^0,c
  6516  01286A  0EFD               	movlw	-3
  6517  01286C  006F FF8C  F041    	movff	plusw1,btemp+11
  6518  012872  0EFF               	movlw	255
  6519  012874  2241               	addwfc	(btemp+11)^0,f,c
  6520  012876  5041               	movf	(btemp+11)^0,w,c
  6521  012878  E106               	bnz	u1940
  6522  01287A  0E1A               	movlw	26
  6523  01287C  5C40               	subwf	(btemp+10)^0,w,c
  6524  01287E  B0D8               	btfsc	status,0,c
  6525  012880  D002               	goto	u1940
  6526  012882  0E01               	movlw	1
  6527  012884  D001               	goto	u1950
  6528  012886                     u1940:
  6529  012886  0E00               	movlw	0
  6530  012888                     u1950:
  6531  012888  6E40               	movwf	(btemp+10)^0,c
  6532  01288A  6A41               	clrf	(btemp+11)^0,c
  6533                           
  6534                           ;stkvar	_toupper$4573 @ sp[(-2)+0]
  6535  01288C  0EFE               	movlw	-2
  6536  01288E  0060  F103  FFE3   	movff	btemp+10,plusw1
  6537  012894  0EFF               	movlw	-1
  6538  012896  0060  F107  FFE3   	movff	btemp+11,plusw1
  6539                           
  6540                           ;stkvar	_toupper$4573 @ sp[(-2)+0]
  6541  01289C  0EFE               	movlw	-2
  6542  01289E  006F FF8C  F036    	movff	plusw1,btemp
  6543  0128A4  0EFF               	movlw	-1
  6544  0128A6  50E3               	movf	plusw1,w,c
  6545  0128A8  1036               	iorwf	btemp^0,w,c
  6546  0128AA  B4D8               	btfsc	status,2,c
  6547  0128AC  D00D               	goto	l4264
  6548                           
  6549                           ;stkvar	_c @ sp[(-2)+-2]
  6550  0128AE  0EFC               	movlw	-4
  6551  0128B0  006F FF8C  F036    	movff	plusw1,btemp
  6552  0128B6  0EFD               	movlw	-3
  6553  0128B8  006F FF8C  F037    	movff	plusw1,btemp+1
  6554  0128BE  0E5F               	movlw	95
  6555  0128C0  1636               	andwf	btemp^0,f,c
  6556  0128C2  0E00               	movlw	0
  6557  0128C4  1637               	andwf	(btemp+1)^0,f,c
  6558  0128C6  D008               	goto	l2557
  6559  0128C8                     l4264:
  6560                           
  6561                           ;stkvar	_c @ sp[(-2)+-2]
  6562  0128C8  0EFC               	movlw	-4
  6563  0128CA  006F FF8C  F036    	movff	plusw1,btemp
  6564  0128D0  0EFD               	movlw	-3
  6565  0128D2  006F FF8C  F037    	movff	plusw1,btemp+1
  6566  0128D8                     l2557:
  6567                           
  6568                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6569  0128D8  52E5               	movf	postdec1,f,c
  6570  0128DA  52E5               	movf	postdec1,f,c
  6571  0128DC  52E5               	movf	postdec1,f,c
  6572  0128DE  52E5               	movf	postdec1,f,c
  6573  0128E0  0012               	return		;funcret
  6574  0128E2                     __end_of_toupper:
  6575                           	opt callstack 0
  6576                           
  6577 ;; *************** function _islower *****************
  6578 ;; Defined at:
  6579 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  c               2  [STACK] int 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  2  [STACK] int 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6597 ;;Total ram usage:        0 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    6
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_toupper
  6604 ;; This function uses a reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text32
  6608  0131FC                     __ptext32:
  6609                           	opt callstack 0
  6610  0131FC                     _islower:
  6611                           	opt callstack 16
  6612                           
  6613                           ;stkvar	_c @ sp[(0)+-2]
  6614                           
  6615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6616                           ;incstack = 0
  6617  0131FC  0EFE               	movlw	-2
  6618  0131FE  50E3               	movf	plusw1,w,c
  6619  013200  0F9F               	addlw	159
  6620  013202  6E40               	movwf	(btemp+10)^0,c
  6621  013204  0EFF               	movlw	-1
  6622  013206  006F FF8C  F041    	movff	plusw1,btemp+11
  6623  01320C  0EFF               	movlw	255
  6624  01320E  2241               	addwfc	(btemp+11)^0,f,c
  6625  013210  5041               	movf	(btemp+11)^0,w,c
  6626  013212  E106               	bnz	u1830
  6627  013214  0E1A               	movlw	26
  6628  013216  5C40               	subwf	(btemp+10)^0,w,c
  6629  013218  B0D8               	btfsc	status,0,c
  6630  01321A  D002               	goto	u1830
  6631  01321C  0E01               	movlw	1
  6632  01321E  D001               	goto	u1840
  6633  013220                     u1830:
  6634  013220  0E00               	movlw	0
  6635  013222                     u1840:
  6636  013222  6E36               	movwf	btemp^0,c
  6637  013224  6A37               	clrf	(btemp+1)^0,c
  6638                           
  6639                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6640  013226  52E5               	movf	postdec1,f,c
  6641  013228  52E5               	movf	postdec1,f,c
  6642  01322A  0012               	return		;funcret
  6643  01322C                     __end_of_islower:
  6644                           	opt callstack 0
  6645                           
  6646 ;; *************** function _isupper *****************
  6647 ;; Defined at:
  6648 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  c               2  [STACK] int 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  2  [STACK] int 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    6
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_xtoa
  6673 ;; This function uses a reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text33
  6677  01322C                     __ptext33:
  6678                           	opt callstack 0
  6679  01322C                     _isupper:
  6680                           	opt callstack 17
  6681                           
  6682                           ;stkvar	_c @ sp[(0)+-2]
  6683                           
  6684                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6685                           ;incstack = 0
  6686  01322C  0EFE               	movlw	-2
  6687  01322E  50E3               	movf	plusw1,w,c
  6688  013230  0FBF               	addlw	191
  6689  013232  6E40               	movwf	(btemp+10)^0,c
  6690  013234  0EFF               	movlw	-1
  6691  013236  006F FF8C  F041    	movff	plusw1,btemp+11
  6692  01323C  0EFF               	movlw	255
  6693  01323E  2241               	addwfc	(btemp+11)^0,f,c
  6694  013240  5041               	movf	(btemp+11)^0,w,c
  6695  013242  E106               	bnz	u1900
  6696  013244  0E1A               	movlw	26
  6697  013246  5C40               	subwf	(btemp+10)^0,w,c
  6698  013248  B0D8               	btfsc	status,0,c
  6699  01324A  D002               	goto	u1900
  6700  01324C  0E01               	movlw	1
  6701  01324E  D001               	goto	u1910
  6702  013250                     u1900:
  6703  013250  0E00               	movlw	0
  6704  013252                     u1910:
  6705  013252  6E36               	movwf	btemp^0,c
  6706  013254  6A37               	clrf	(btemp+1)^0,c
  6707                           
  6708                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6709  013256  52E5               	movf	postdec1,f,c
  6710  013258  52E5               	movf	postdec1,f,c
  6711  01325A  0012               	return		;funcret
  6712  01325C                     __end_of_isupper:
  6713                           	opt callstack 0
  6714                           
  6715 ;; *************** function _isalpha *****************
  6716 ;; Defined at:
  6717 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  c               2  [STACK] int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  2  [STACK] int 
  6724 ;; Registers used:
  6725 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    6
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_xtoa
  6742 ;; This function uses a reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text34
  6746  012F78                     __ptext34:
  6747                           	opt callstack 0
  6748  012F78                     _isalpha:
  6749                           	opt callstack 17
  6750                           
  6751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6752                           ;incstack = 0
  6753  012F78  0E9F               	movlw	159
  6754  012F7A  6E40               	movwf	(btemp+10)^0,c
  6755  012F7C  0EFF               	movlw	255
  6756  012F7E  6E41               	movwf	(btemp+11)^0,c
  6757                           
  6758                           ;stkvar	_c @ sp[(0)+-2]
  6759  012F80  0EFE               	movlw	-2
  6760  012F82  006F FF8C  F03E    	movff	plusw1,btemp+8
  6761  012F88  0EFF               	movlw	-1
  6762  012F8A  006F FF8C  F03F    	movff	plusw1,btemp+9
  6763  012F90  0E20               	movlw	32
  6764  012F92  123E               	iorwf	(btemp+8)^0,f,c
  6765  012F94  0E00               	movlw	0
  6766  012F96  123F               	iorwf	(btemp+9)^0,f,c
  6767  012F98  5040               	movf	(btemp+10)^0,w,c
  6768  012F9A  263E               	addwf	(btemp+8)^0,f,c
  6769  012F9C  5041               	movf	(btemp+11)^0,w,c
  6770  012F9E  223F               	addwfc	(btemp+9)^0,f,c
  6771  012FA0  503F               	movf	(btemp+9)^0,w,c
  6772  012FA2  E106               	bnz	u1920
  6773  012FA4  0E1A               	movlw	26
  6774  012FA6  5C3E               	subwf	(btemp+8)^0,w,c
  6775  012FA8  B0D8               	btfsc	status,0,c
  6776  012FAA  D002               	goto	u1920
  6777  012FAC  0E01               	movlw	1
  6778  012FAE  D001               	goto	u1930
  6779  012FB0                     u1920:
  6780  012FB0  0E00               	movlw	0
  6781  012FB2                     u1930:
  6782  012FB2  6E36               	movwf	btemp^0,c
  6783  012FB4  6A37               	clrf	(btemp+1)^0,c
  6784                           
  6785                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6786  012FB6  52E5               	movf	postdec1,f,c
  6787  012FB8  52E5               	movf	postdec1,f,c
  6788  012FBA  0012               	return		;funcret
  6789  012FBC                     __end_of_isalpha:
  6790                           	opt callstack 0
  6791                           
  6792 ;; *************** function _stoa *****************
  6793 ;; Defined at:
  6794 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6797 ;;		 -> f(6), NULL(0), 
  6798 ;;  s               2  [STACK] PTR unsigned char 
  6799 ;;		 -> ?_printf(2), ?_sprintf(2), STR_14(9), STR_13(12), 
  6800 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6801 ;;		 -> STR_3(4), V(189), 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  nuls            7  [STACK] unsigned char [7]
  6804 ;;  l               2  [STACK] int 
  6805 ;;  p               2  [STACK] int 
  6806 ;;  cp              2  [STACK] PTR unsigned char 
  6807 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_14(9), 
  6808 ;;		 -> STR_13(12), D.lcd(216), D(218), T(144), 
  6809 ;;		 -> STR_7(4), STR_3(4), V(189), 
  6810 ;;  w               2  [STACK] int 
  6811 ;;  i               2  [STACK] int 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2  [STACK] int 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    9
  6828 ;; This function calls:
  6829 ;;		_fputc
  6830 ;;		_strlen
  6831 ;; This function is called by:
  6832 ;;		_vfpfcnvrt
  6833 ;; This function uses a reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text35
  6837  01133A                     __ptext35:
  6838                           	opt callstack 0
  6839  01133A                     _stoa:
  6840                           	opt callstack 0
  6841                           
  6842                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6843  01133A  0E11               	movlw	17
  6844  01133C  26E1               	addwf	fsr1l,f,c
  6845  01133E  0E00               	movlw	0
  6846  011340  22E2               	addwfc	fsr1h,f,c
  6847                           
  6848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6849                           
  6850                           ;incstack = 0
  6851  011342  EE20  F0D2         	lfsr	2,stoa@F1144
  6852                           
  6853                           ;stkvar	_nuls @ sp[(-17)+0]
  6854  011346  0E07               	movlw	7
  6855  011348  6E36               	movwf	btemp^0,c
  6856  01134A  0EEF               	movlw	-17
  6857  01134C                     us370999:
  6858  01134C  006F FF7B FFE3     	movff	postinc2,plusw1
  6859  011352  28E8               	incf	wreg,w,c
  6860  011354  2E36               	decfsz	btemp^0,f,c
  6861  011356  D7FA               	bra	us370999
  6862                           
  6863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6864                           ;stkvar	_s @ sp[(-17)+-4]
  6865  011358  0EEB               	movlw	-21
  6866  01135A  006F FF8C  F040    	movff	plusw1,btemp+10
  6867  011360  0EEC               	movlw	-20
  6868  011362  006F FF8C  F041    	movff	plusw1,btemp+11
  6869                           
  6870                           ;stkvar	_cp @ sp[(-17)+11]
  6871  011368  0EFB               	movlw	-5
  6872  01136A  0060  F107  FFE3   	movff	btemp+11,plusw1
  6873  011370  0EFA               	movlw	-6
  6874  011372  0060  F103  FFE3   	movff	btemp+10,plusw1
  6875                           
  6876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6877                           ;stkvar	_cp @ sp[(-17)+11]
  6878  011378  0EFA               	movlw	-6
  6879  01137A  006F FF8C  F036    	movff	plusw1,btemp
  6880  011380  0EFB               	movlw	-5
  6881  011382  50E3               	movf	plusw1,w,c
  6882  011384  1036               	iorwf	btemp^0,w,c
  6883  011386  A4D8               	btfss	status,2,c
  6884  011388  D00E               	goto	l5862
  6885                           
  6886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6887                           ;stkvar	_nuls @ sp[(-17)+0]
  6888  01138A  0EEF               	movlw	239
  6889  01138C  24E1               	addwf	fsr1l,w,c
  6890  01138E  6E40               	movwf	(btemp+10)^0,c
  6891  011390  0EFF               	movlw	255
  6892  011392  20E2               	addwfc	fsr1h,w,c
  6893  011394  6E41               	movwf	(btemp+11)^0,c
  6894                           
  6895                           ;stkvar	_cp @ sp[(-17)+11]
  6896  011396  0EFB               	movlw	-5
  6897  011398  0060  F107  FFE3   	movff	btemp+11,plusw1
  6898  01139E  0EFA               	movlw	-6
  6899  0113A0  0060  F103  FFE3   	movff	btemp+10,plusw1
  6900  0113A6                     l5862:
  6901                           
  6902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6903                           ;stkvar	_cp @ sp[(-17)+11]
  6904  0113A6  0EFA               	movlw	-6
  6905  0113A8  006F FF8F FFE6     	movff	plusw1,postinc1
  6906  0113AE  006F FF8F FFE6     	movff	plusw1,postinc1
  6907  0113B4  EC4D  F093         	call	_strlen	;wreg free
  6908                           
  6909                           ;stkvar	_l @ sp[(-17)+7]
  6910  0113B8  0EF6               	movlw	-10
  6911  0113BA  0060  F0DB  FFE3   	movff	btemp,plusw1
  6912  0113C0  0EF7               	movlw	-9
  6913  0113C2  0060  F0DF  FFE3   	movff	btemp+1,plusw1
  6914                           
  6915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6916                           ;stkvar	_p @ sp[(-17)+9]
  6917  0113C8  0EF8               	movlw	-8
  6918  0113CA  0060  F087  FFE3   	movff	_prec,plusw1
  6919  0113D0  0EF9               	movlw	-7
  6920  0113D2  0060  F08B  FFE3   	movff	_prec+1,plusw1
  6921                           
  6922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6923                           ;stkvar	_p @ sp[(-17)+9]
  6924  0113D8  0EF9               	movlw	-7
  6925  0113DA  BEE3               	btfsc	plusw1,7,c
  6926  0113DC  D023               	goto	l1733
  6927                           
  6928                           ;stkvar	_l @ sp[(-17)+7]
  6929                           ;stkvar	_p @ sp[(-17)+9]
  6930  0113DE  50E1               	movf	fsr1l,w,c
  6931  0113E0  0FF8               	addlw	-8
  6932  0113E2  6ED9               	movwf	fsr2l,c
  6933  0113E4  50E2               	movf	fsr1h,w,c
  6934  0113E6  6EDA               	movwf	fsr2h,c
  6935  0113E8  0EFF               	movlw	255
  6936  0113EA  22DA               	addwfc	fsr2h,f,c
  6937  0113EC  0EF6               	movlw	-10
  6938  0113EE  50E3               	movf	plusw1,w,c
  6939  0113F0  5CDE               	subwf	postinc2,w,c
  6940  0113F2  50DE               	movf	postinc2,w,c
  6941  0113F4  0A80               	xorlw	128
  6942  0113F6  6E36               	movwf	btemp^0,c
  6943  0113F8  0EF7               	movlw	-9
  6944  0113FA  50E3               	movf	plusw1,w,c
  6945  0113FC  0A80               	xorlw	128
  6946  0113FE  5836               	subwfb	btemp^0,w,c
  6947  011400  B0D8               	btfsc	status,0,c
  6948  011402  D010               	goto	l1733
  6949                           
  6950                           ;stkvar	_p @ sp[(-17)+9]
  6951                           ;stkvar	_l @ sp[(-17)+7]
  6952  011404  0EF8               	movlw	-8
  6953  011406  006F FF8C  F036    	movff	plusw1,btemp
  6954  01140C  0EF6               	movlw	-10
  6955  01140E  0060  F0DB  FFE3   	movff	btemp,plusw1
  6956  011414  0EF9               	movlw	-7
  6957  011416  006F FF8C  F036    	movff	plusw1,btemp
  6958  01141C  0EF7               	movlw	-9
  6959  01141E  0060  F0DB  FFE3   	movff	btemp,plusw1
  6960  011424                     l1733:
  6961                           
  6962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6963                           ;stkvar	_l @ sp[(-17)+7]
  6964                           ;stkvar	_p @ sp[(-17)+9]
  6965  011424  0EF6               	movlw	-10
  6966  011426  006F FF8C  F036    	movff	plusw1,btemp
  6967  01142C  0EF8               	movlw	-8
  6968  01142E  0060  F0DB  FFE3   	movff	btemp,plusw1
  6969  011434  0EF7               	movlw	-9
  6970  011436  006F FF8C  F036    	movff	plusw1,btemp
  6971  01143C  0EF9               	movlw	-7
  6972  01143E  0060  F0DB  FFE3   	movff	btemp,plusw1
  6973                           
  6974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6975                           ;stkvar	_w @ sp[(-17)+13]
  6976  011444  0EFC               	movlw	-4
  6977  011446  0060  F07F  FFE3   	movff	_width,plusw1
  6978  01144C  0EFD               	movlw	-3
  6979  01144E  0060  F083  FFE3   	movff	_width+1,plusw1
  6980                           
  6981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6982  011454  A023               	btfss	_flags^0,0,c
  6983  011456  D01F               	goto	l5882
  6984  011458  D031               	goto	u3750
  6985  01145A                     l5878:
  6986                           
  6987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6988                           ;stkvar	_fp @ sp[(-17)+-2]
  6989  01145A  0EED               	movlw	-19
  6990  01145C  006F FF8F FFE6     	movff	plusw1,postinc1
  6991  011462  006F FF8F FFE6     	movff	plusw1,postinc1
  6992  011468  0E20               	movlw	32
  6993  01146A  6EE6               	movwf	postinc1,c
  6994  01146C  0E00               	movlw	0
  6995  01146E  6EE6               	movwf	postinc1,c
  6996  011470  ECFC  F08E         	call	_fputc	;wreg free
  6997                           
  6998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6999                           ;stkvar	_l @ sp[(-17)+7]
  7000  011474  0EF6               	movlw	-10
  7001  011476  50E3               	movf	plusw1,w,c
  7002  011478  0F01               	addlw	1
  7003  01147A  6E36               	movwf	btemp^0,c
  7004  01147C  0EF6               	movlw	-10
  7005  01147E  0060  F0DB  FFE3   	movff	btemp,plusw1
  7006  011484  6A36               	clrf	btemp^0,c
  7007  011486  0EF7               	movlw	-9
  7008  011488  50E3               	movf	plusw1,w,c
  7009  01148A  2036               	addwfc	btemp^0,w,c
  7010  01148C  6E36               	movwf	btemp^0,c
  7011  01148E  0EF7               	movlw	-9
  7012  011490  0060  F0DB  FFE3   	movff	btemp,plusw1
  7013  011496                     l5882:
  7014                           
  7015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7016                           ;stkvar	_w @ sp[(-17)+13]
  7017                           ;stkvar	_l @ sp[(-17)+7]
  7018  011496  50E1               	movf	fsr1l,w,c
  7019  011498  0FF6               	addlw	-10
  7020  01149A  6ED9               	movwf	fsr2l,c
  7021  01149C  50E2               	movf	fsr1h,w,c
  7022  01149E  6EDA               	movwf	fsr2h,c
  7023  0114A0  0EFF               	movlw	255
  7024  0114A2  22DA               	addwfc	fsr2h,f,c
  7025  0114A4  0EFC               	movlw	-4
  7026  0114A6  50E3               	movf	plusw1,w,c
  7027  0114A8  5CDE               	subwf	postinc2,w,c
  7028  0114AA  50DE               	movf	postinc2,w,c
  7029  0114AC  0A80               	xorlw	128
  7030  0114AE  6E36               	movwf	btemp^0,c
  7031  0114B0  0EFD               	movlw	-3
  7032  0114B2  50E3               	movf	plusw1,w,c
  7033  0114B4  0A80               	xorlw	128
  7034  0114B6  5836               	subwfb	btemp^0,w,c
  7035  0114B8  A0D8               	btfss	status,0,c
  7036  0114BA  D7CF               	goto	l5878
  7037  0114BC                     u3750:
  7038                           
  7039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7040                           ;stkvar	_i @ sp[(-17)+15]
  7041  0114BC  0EFE               	movlw	-2
  7042  0114BE  6AE3               	clrf	plusw1,c
  7043  0114C0  0EFF               	movlw	-1
  7044  0114C2  6AE3               	clrf	plusw1,c
  7045                           
  7046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7047  0114C4  D045               	goto	l5892
  7048  0114C6                     l5886:
  7049                           
  7050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7051                           ;stkvar	_fp @ sp[(-17)+-2]
  7052  0114C6  0EED               	movlw	-19
  7053  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7054  0114CE  006F FF8F FFE6     	movff	plusw1,postinc1
  7055                           
  7056                           ;stkvar	_cp @ sp[(-19)+11]
  7057  0114D4  0EF8               	movlw	-8
  7058  0114D6  006F FF8F FFF6     	movff	plusw1,tblptrl
  7059  0114DC  0EF9               	movlw	-7
  7060  0114DE  006F FF8F FFF7     	movff	plusw1,tblptrh
  7061  0114E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7062  0114E6  6EF8               	movwf	tblptru,c
  7063  0114E8  0E1F               	movlw	(high __ramtop+-1)
  7064  0114EA  64F7               	cpfsgt	tblptrh,c
  7065  0114EC  D003               	bra	u3767
  7066  0114EE  0008               	tblrd		*
  7067  0114F0  50F5               	movf	tablat,w,c
  7068  0114F2  D007               	bra	u3760
  7069  0114F4                     u3767:
  7070  0114F4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7071  0114FA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7072  011500  50EF               	movf	indf0,w,c
  7073  011502                     u3760:
  7074  011502  6EE6               	movwf	postinc1,c
  7075  011504  0E00               	movlw	0
  7076  011506  6EE6               	movwf	postinc1,c
  7077  011508  ECFC  F08E         	call	_fputc	;wreg free
  7078                           
  7079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7080                           ;stkvar	_cp @ sp[(-17)+11]
  7081  01150C  0EFA               	movlw	-6
  7082  01150E  50E3               	movf	plusw1,w,c
  7083  011510  0F01               	addlw	1
  7084  011512  6E36               	movwf	btemp^0,c
  7085  011514  0EFA               	movlw	-6
  7086  011516  0060  F0DB  FFE3   	movff	btemp,plusw1
  7087  01151C  6A36               	clrf	btemp^0,c
  7088  01151E  0EFB               	movlw	-5
  7089  011520  50E3               	movf	plusw1,w,c
  7090  011522  2036               	addwfc	btemp^0,w,c
  7091  011524  6E36               	movwf	btemp^0,c
  7092  011526  0EFB               	movlw	-5
  7093  011528  0060  F0DB  FFE3   	movff	btemp,plusw1
  7094                           
  7095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7096                           ;stkvar	_i @ sp[(-17)+15]
  7097  01152E  0EFE               	movlw	-2
  7098  011530  50E3               	movf	plusw1,w,c
  7099  011532  0F01               	addlw	1
  7100  011534  6E36               	movwf	btemp^0,c
  7101  011536  0EFE               	movlw	-2
  7102  011538  0060  F0DB  FFE3   	movff	btemp,plusw1
  7103  01153E  6A36               	clrf	btemp^0,c
  7104  011540  0EFF               	movlw	-1
  7105  011542  50E3               	movf	plusw1,w,c
  7106  011544  2036               	addwfc	btemp^0,w,c
  7107  011546  6E36               	movwf	btemp^0,c
  7108  011548  0EFF               	movlw	-1
  7109  01154A  0060  F0DB  FFE3   	movff	btemp,plusw1
  7110  011550                     l5892:
  7111                           
  7112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7113                           ;stkvar	_p @ sp[(-17)+9]
  7114                           ;stkvar	_i @ sp[(-17)+15]
  7115  011550  50E1               	movf	fsr1l,w,c
  7116  011552  0FFE               	addlw	-2
  7117  011554  6ED9               	movwf	fsr2l,c
  7118  011556  50E2               	movf	fsr1h,w,c
  7119  011558  6EDA               	movwf	fsr2h,c
  7120  01155A  0EFF               	movlw	255
  7121  01155C  22DA               	addwfc	fsr2h,f,c
  7122  01155E  0EF8               	movlw	-8
  7123  011560  50E3               	movf	plusw1,w,c
  7124  011562  5CDE               	subwf	postinc2,w,c
  7125  011564  50DE               	movf	postinc2,w,c
  7126  011566  0A80               	xorlw	128
  7127  011568  6E36               	movwf	btemp^0,c
  7128  01156A  0EF9               	movlw	-7
  7129  01156C  50E3               	movf	plusw1,w,c
  7130  01156E  0A80               	xorlw	128
  7131  011570  5836               	subwfb	btemp^0,w,c
  7132  011572  A0D8               	btfss	status,0,c
  7133  011574  D7A8               	goto	l5886
  7134                           
  7135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7136  011576  B023               	btfsc	_flags^0,0,c
  7137  011578  D01F               	goto	l5900
  7138  01157A  D031               	goto	u3790
  7139  01157C                     l5896:
  7140                           
  7141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7142                           ;stkvar	_fp @ sp[(-17)+-2]
  7143  01157C  0EED               	movlw	-19
  7144  01157E  006F FF8F FFE6     	movff	plusw1,postinc1
  7145  011584  006F FF8F FFE6     	movff	plusw1,postinc1
  7146  01158A  0E20               	movlw	32
  7147  01158C  6EE6               	movwf	postinc1,c
  7148  01158E  0E00               	movlw	0
  7149  011590  6EE6               	movwf	postinc1,c
  7150  011592  ECFC  F08E         	call	_fputc	;wreg free
  7151                           
  7152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7153                           ;stkvar	_l @ sp[(-17)+7]
  7154  011596  0EF6               	movlw	-10
  7155  011598  50E3               	movf	plusw1,w,c
  7156  01159A  0F01               	addlw	1
  7157  01159C  6E36               	movwf	btemp^0,c
  7158  01159E  0EF6               	movlw	-10
  7159  0115A0  0060  F0DB  FFE3   	movff	btemp,plusw1
  7160  0115A6  6A36               	clrf	btemp^0,c
  7161  0115A8  0EF7               	movlw	-9
  7162  0115AA  50E3               	movf	plusw1,w,c
  7163  0115AC  2036               	addwfc	btemp^0,w,c
  7164  0115AE  6E36               	movwf	btemp^0,c
  7165  0115B0  0EF7               	movlw	-9
  7166  0115B2  0060  F0DB  FFE3   	movff	btemp,plusw1
  7167  0115B8                     l5900:
  7168                           
  7169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7170                           ;stkvar	_w @ sp[(-17)+13]
  7171                           ;stkvar	_l @ sp[(-17)+7]
  7172  0115B8  50E1               	movf	fsr1l,w,c
  7173  0115BA  0FF6               	addlw	-10
  7174  0115BC  6ED9               	movwf	fsr2l,c
  7175  0115BE  50E2               	movf	fsr1h,w,c
  7176  0115C0  6EDA               	movwf	fsr2h,c
  7177  0115C2  0EFF               	movlw	255
  7178  0115C4  22DA               	addwfc	fsr2h,f,c
  7179  0115C6  0EFC               	movlw	-4
  7180  0115C8  50E3               	movf	plusw1,w,c
  7181  0115CA  5CDE               	subwf	postinc2,w,c
  7182  0115CC  50DE               	movf	postinc2,w,c
  7183  0115CE  0A80               	xorlw	128
  7184  0115D0  6E36               	movwf	btemp^0,c
  7185  0115D2  0EFD               	movlw	-3
  7186  0115D4  50E3               	movf	plusw1,w,c
  7187  0115D6  0A80               	xorlw	128
  7188  0115D8  5836               	subwfb	btemp^0,w,c
  7189  0115DA  A0D8               	btfss	status,0,c
  7190  0115DC  D7CF               	goto	l5896
  7191  0115DE                     u3790:
  7192                           
  7193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  7194                           ;stkvar	_l @ sp[(-17)+7]
  7195  0115DE  0EF6               	movlw	-10
  7196  0115E0  006F FF8C  F036    	movff	plusw1,btemp
  7197  0115E6  0EF7               	movlw	-9
  7198  0115E8  006F FF8C  F037    	movff	plusw1,btemp+1
  7199                           
  7200                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7201  0115EE  0EEB               	movlw	235
  7202  0115F0  26E1               	addwf	fsr1l,f,c
  7203  0115F2  0EFF               	movlw	255
  7204  0115F4  22E2               	addwfc	fsr1h,f,c
  7205  0115F6  0012               	return		;funcret
  7206  0115F8                     __end_of_stoa:
  7207                           	opt callstack 0
  7208                           
  7209 ;; *************** function _dtoa *****************
  7210 ;; Defined at:
  7211 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7214 ;;		 -> f(6), NULL(0), 
  7215 ;;  d               8  [STACK] long long 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  n               8  [STACK] long long 
  7218 ;;  i               2  [STACK] int 
  7219 ;;  s               2  [STACK] int 
  7220 ;;  w               2  [STACK] int 
  7221 ;;  p               2  [STACK] int 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2  [STACK] int 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:   11
  7238 ;; This function calls:
  7239 ;;		___aodiv
  7240 ;;		___aomod
  7241 ;;		_abs
  7242 ;;		_pad
  7243 ;; This function is called by:
  7244 ;;		_vfpfcnvrt
  7245 ;; This function uses a reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text36
  7249  01052E                     __ptext36:
  7250                           	opt callstack 0
  7251  01052E                     _dtoa:
  7252                           	opt callstack 0
  7253                           
  7254                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7255  01052E  0E12               	movlw	18
  7256  010530  26E1               	addwf	fsr1l,f,c
  7257  010532  0E00               	movlw	0
  7258  010534  22E2               	addwfc	fsr1h,f,c
  7259                           
  7260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7261                           ;stkvar	_d @ sp[(-18)+-10]
  7262                           
  7263                           ;incstack = 0
  7264  010536  0EE4               	movlw	228
  7265  010538  24E1               	addwf	fsr1l,w,c
  7266  01053A  6ED9               	movwf	fsr2l,c
  7267  01053C  0EFF               	movlw	255
  7268  01053E  20E2               	addwfc	fsr1h,w,c
  7269  010540  6EDA               	movwf	fsr2h,c
  7270                           
  7271                           ;stkvar	_n @ sp[(-18)+2]
  7272  010542  0E08               	movlw	8
  7273  010544  6E36               	movwf	btemp^0,c
  7274  010546  0EF0               	movlw	-16
  7275  010548                     us353999:
  7276  010548  006F FF7B FFE3     	movff	postinc2,plusw1
  7277  01054E  28E8               	incf	wreg,w,c
  7278  010550  2E36               	decfsz	btemp^0,f,c
  7279  010552  D7FA               	bra	us353999
  7280                           
  7281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7282                           ;stkvar	_n @ sp[(-18)+2]
  7283  010554  0EF7               	movlw	-9
  7284  010556  AEE3               	btfss	plusw1,7,c
  7285  010558  D002               	goto	u3540
  7286  01055A  0E01               	movlw	1
  7287  01055C  D001               	goto	u3550
  7288  01055E                     u3540:
  7289  01055E  0E00               	movlw	0
  7290  010560                     u3550:
  7291  010560  6E40               	movwf	(btemp+10)^0,c
  7292  010562  6A41               	clrf	(btemp+11)^0,c
  7293                           
  7294                           ;stkvar	_s @ sp[(-18)+12]
  7295  010564  0EFA               	movlw	-6
  7296  010566  0060  F103  FFE3   	movff	btemp+10,plusw1
  7297  01056C  0EFB               	movlw	-5
  7298  01056E  0060  F107  FFE3   	movff	btemp+11,plusw1
  7299                           
  7300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7301                           ;stkvar	_s @ sp[(-18)+12]
  7302  010574  0EFA               	movlw	-6
  7303  010576  006F FF8C  F036    	movff	plusw1,btemp
  7304  01057C  0EFB               	movlw	-5
  7305  01057E  50E3               	movf	plusw1,w,c
  7306  010580  1036               	iorwf	btemp^0,w,c
  7307  010582  B4D8               	btfsc	status,2,c
  7308  010584  D025               	goto	u3570
  7309                           
  7310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7311                           ;stkvar	_n @ sp[(-18)+2]
  7312                           ;stkvar	_n @ sp[(-18)+2]
  7313  010586  0EF0               	movlw	-16
  7314  010588  6CE3               	negf	plusw1,c
  7315  01058A  0EF1               	movlw	-15
  7316  01058C  1EE3               	comf	plusw1,f,c
  7317  01058E  0EF2               	movlw	-14
  7318  010590  1EE3               	comf	plusw1,f,c
  7319  010592  0EF3               	movlw	-13
  7320  010594  1EE3               	comf	plusw1,f,c
  7321  010596  0EF4               	movlw	-12
  7322  010598  1EE3               	comf	plusw1,f,c
  7323  01059A  0EF5               	movlw	-11
  7324  01059C  1EE3               	comf	plusw1,f,c
  7325  01059E  0EF6               	movlw	-10
  7326  0105A0  1EE3               	comf	plusw1,f,c
  7327  0105A2  0EF7               	movlw	-9
  7328  0105A4  1EE3               	comf	plusw1,f,c
  7329  0105A6  E314               	bnc	u3570
  7330  0105A8  0EF1               	movlw	-15
  7331  0105AA  2AE3               	incf	plusw1,f,c
  7332  0105AC  E311               	bnc	u3570
  7333  0105AE  0EF2               	movlw	-14
  7334  0105B0  2AE3               	incf	plusw1,f,c
  7335  0105B2  E30E               	bnc	u3570
  7336  0105B4  0EF3               	movlw	-13
  7337  0105B6  2AE3               	incf	plusw1,f,c
  7338  0105B8  E30B               	bnc	u3570
  7339  0105BA  0EF4               	movlw	-12
  7340  0105BC  2AE3               	incf	plusw1,f,c
  7341  0105BE  E308               	bnc	u3570
  7342  0105C0  0EF5               	movlw	-11
  7343  0105C2  2AE3               	incf	plusw1,f,c
  7344  0105C4  E305               	bnc	u3570
  7345  0105C6  0EF6               	movlw	-10
  7346  0105C8  2AE3               	incf	plusw1,f,c
  7347  0105CA  E302               	bnc	u3570
  7348  0105CC  0EF7               	movlw	-9
  7349  0105CE  2AE3               	incf	plusw1,f,c
  7350  0105D0                     u3570:
  7351                           
  7352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7353  0105D0  AE22               	btfss	(_prec+1)^0,7,c
  7354                           
  7355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7356  0105D2  9223               	bcf	_flags^0,1,c
  7357                           
  7358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7359  0105D4  BE22               	btfsc	(_prec+1)^0,7,c
  7360  0105D6  D005               	goto	u3590
  7361  0105D8  5022               	movf	(_prec+1)^0,w,c
  7362  0105DA  E110               	bnz	l5804
  7363  0105DC  0421               	decf	_prec^0,w,c
  7364  0105DE  B0D8               	btfsc	status,0,c
  7365  0105E0  D00D               	goto	l5804
  7366  0105E2                     u3590:
  7367  0105E2  0E01               	movlw	1
  7368  0105E4  6E40               	movwf	(btemp+10)^0,c
  7369  0105E6  0E00               	movlw	0
  7370  0105E8  6E41               	movwf	(btemp+11)^0,c
  7371                           
  7372                           ;stkvar	_p @ sp[(-18)+16]
  7373  0105EA  0EFE               	movlw	-2
  7374  0105EC  0060  F103  FFE3   	movff	btemp+10,plusw1
  7375  0105F2  0EFF               	movlw	-1
  7376  0105F4  0060  F107  FFE3   	movff	btemp+11,plusw1
  7377  0105FA  D008               	goto	l1706
  7378  0105FC                     l5804:
  7379                           
  7380                           ;stkvar	_p @ sp[(-18)+16]
  7381  0105FC  0EFE               	movlw	-2
  7382  0105FE  0060  F087  FFE3   	movff	_prec,plusw1
  7383  010604  0EFF               	movlw	-1
  7384  010606  0060  F08B  FFE3   	movff	_prec+1,plusw1
  7385  01060C                     l1706:
  7386                           
  7387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7388                           ;stkvar	_w @ sp[(-18)+14]
  7389  01060C  0EFC               	movlw	-4
  7390  01060E  0060  F07F  FFE3   	movff	_width,plusw1
  7391  010614  0EFD               	movlw	-3
  7392  010616  0060  F083  FFE3   	movff	_width+1,plusw1
  7393                           
  7394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7395                           ;stkvar	_s @ sp[(-18)+12]
  7396  01061C  0EFA               	movlw	-6
  7397  01061E  006F FF8C  F036    	movff	plusw1,btemp
  7398  010624  0EFB               	movlw	-5
  7399  010626  50E3               	movf	plusw1,w,c
  7400  010628  1036               	iorwf	btemp^0,w,c
  7401  01062A  A4D8               	btfss	status,2,c
  7402  01062C  D002               	goto	u3610
  7403  01062E  A423               	btfss	_flags^0,2,c
  7404  010630  D00A               	goto	l5812
  7405  010632                     u3610:
  7406                           
  7407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7408                           ;stkvar	_w @ sp[(-18)+14]
  7409  010632  50E1               	movf	fsr1l,w,c
  7410  010634  0FFC               	addlw	-4
  7411  010636  6ED9               	movwf	fsr2l,c
  7412  010638  50E2               	movf	fsr1h,w,c
  7413  01063A  6EDA               	movwf	fsr2h,c
  7414  01063C  0EFF               	movlw	255
  7415  01063E  22DA               	addwfc	fsr2h,f,c
  7416  010640  06DE               	decf	postinc2,f,c
  7417  010642  0E00               	movlw	0
  7418  010644  5ADD               	subwfb	postdec2,f,c
  7419  010646                     l5812:
  7420                           
  7421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7422  010646  0E1F               	movlw	31
  7423  010648  6E40               	movwf	(btemp+10)^0,c
  7424  01064A  0E00               	movlw	0
  7425  01064C  6E41               	movwf	(btemp+11)^0,c
  7426                           
  7427                           ;stkvar	_i @ sp[(-18)+10]
  7428  01064E  0EF8               	movlw	-8
  7429  010650  0060  F103  FFE3   	movff	btemp+10,plusw1
  7430  010656  0EF9               	movlw	-7
  7431  010658  0060  F107  FFE3   	movff	btemp+11,plusw1
  7432                           
  7433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7434  01065E  0100               	movlb	0	; () banked
  7435  010660  6BC9               	clrf	(_dbuf+31)& (0+255),b
  7436                           
  7437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7438  010662  D103               	goto	l5826
  7439  010664                     l5816:
  7440                           
  7441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7442                           ;stkvar	_i @ sp[(-18)+10]
  7443  010664  50E1               	movf	fsr1l,w,c
  7444  010666  0FF8               	addlw	-8
  7445  010668  6ED9               	movwf	fsr2l,c
  7446  01066A  50E2               	movf	fsr1h,w,c
  7447  01066C  6EDA               	movwf	fsr2h,c
  7448  01066E  0EFF               	movlw	255
  7449  010670  22DA               	addwfc	fsr2h,f,c
  7450  010672  06DE               	decf	postinc2,f,c
  7451  010674  0E00               	movlw	0
  7452  010676  5ADD               	subwfb	postdec2,f,c
  7453                           
  7454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7455  010678  0E0A               	movlw	10
  7456  01067A  6EE6               	movwf	postinc1,c
  7457  01067C  0E00               	movlw	0
  7458  01067E  6EE6               	movwf	postinc1,c
  7459  010680  0E00               	movlw	0
  7460  010682  6EE6               	movwf	postinc1,c
  7461  010684  0E00               	movlw	0
  7462  010686  6EE6               	movwf	postinc1,c
  7463  010688  0E00               	movlw	0
  7464  01068A  6EE6               	movwf	postinc1,c
  7465  01068C  0E00               	movlw	0
  7466  01068E  6EE6               	movwf	postinc1,c
  7467  010690  0E00               	movlw	0
  7468  010692  6EE6               	movwf	postinc1,c
  7469  010694  0E00               	movlw	0
  7470  010696  6EE6               	movwf	postinc1,c
  7471                           
  7472                           ;stkvar	_n @ sp[(-26)+2]
  7473  010698  50E1               	movf	fsr1l,w,c
  7474  01069A  0FE8               	addlw	-24
  7475  01069C  6ED9               	movwf	fsr2l,c
  7476  01069E  50E2               	movf	fsr1h,w,c
  7477  0106A0  6EDA               	movwf	fsr2h,c
  7478  0106A2  0EFF               	movlw	255
  7479  0106A4  22DA               	addwfc	fsr2h,f,c
  7480  0106A6  006F FF7B FFE6     	movff	postinc2,postinc1
  7481  0106AC  006F FF7B FFE6     	movff	postinc2,postinc1
  7482  0106B2  006F FF7B FFE6     	movff	postinc2,postinc1
  7483  0106B8  006F FF7B FFE6     	movff	postinc2,postinc1
  7484  0106BE  006F FF7B FFE6     	movff	postinc2,postinc1
  7485  0106C4  006F FF7B FFE6     	movff	postinc2,postinc1
  7486  0106CA  006F FF7B FFE6     	movff	postinc2,postinc1
  7487  0106D0  006F FF7B FFE6     	movff	postinc2,postinc1
  7488  0106D6  EC3C  F08C         	call	___aomod	;wreg free
  7489  0106DA  52E5               	movf	postdec1,f,c
  7490  0106DC  006F FF9C  F04D    	movff	indf1,btemp+23
  7491  0106E2  52E5               	movf	postdec1,f,c
  7492  0106E4  006F FF9C  F04C    	movff	indf1,btemp+22
  7493  0106EA  52E5               	movf	postdec1,f,c
  7494  0106EC  006F FF9C  F04B    	movff	indf1,btemp+21
  7495  0106F2  52E5               	movf	postdec1,f,c
  7496  0106F4  006F FF9C  F04A    	movff	indf1,btemp+20
  7497  0106FA  52E5               	movf	postdec1,f,c
  7498  0106FC  006F FF9C  F049    	movff	indf1,btemp+19
  7499  010702  52E5               	movf	postdec1,f,c
  7500  010704  006F FF9C  F048    	movff	indf1,btemp+18
  7501  01070A  52E5               	movf	postdec1,f,c
  7502  01070C  006F FF9C  F047    	movff	indf1,btemp+17
  7503  010712  52E5               	movf	postdec1,f,c
  7504  010714  006F FF9C  F046    	movff	indf1,btemp+16
  7505  01071A  0EF8               	movlw	248
  7506  01071C  26E1               	addwf	fsr1l,f,c
  7507  01071E  0EFF               	movlw	255
  7508  010720  22E2               	addwfc	fsr1h,f,c
  7509  010722  0060  F118  F040   	movff	btemp+16,btemp+10
  7510  010728  0060  F11C  F041   	movff	btemp+17,btemp+11
  7511  01072E  0060  F103  FFE6   	movff	btemp+10,postinc1
  7512  010734  0060  F107  FFE6   	movff	btemp+11,postinc1
  7513  01073A  EC30  F097         	call	_abs	;wreg free
  7514  01073E  0E30               	movlw	48
  7515  010740  2636               	addwf	btemp^0,f,c
  7516                           
  7517                           ;stkvar	_i @ sp[(-18)+10]
  7518  010742  0EF8               	movlw	-8
  7519  010744  006F FF8C  F041    	movff	plusw1,btemp+11
  7520  01074A  5041               	movf	(btemp+11)^0,w,c
  7521  01074C  0FAA               	addlw	low _dbuf
  7522  01074E  6ED9               	movwf	fsr2l,c
  7523  010750  6ADA               	clrf	fsr2h,c
  7524  010752  0060  F0DB  FFDF   	movff	btemp,indf2
  7525                           
  7526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  7527                           ;stkvar	_p @ sp[(-18)+16]
  7528  010758  50E1               	movf	fsr1l,w,c
  7529  01075A  0FFE               	addlw	-2
  7530  01075C  6ED9               	movwf	fsr2l,c
  7531  01075E  50E2               	movf	fsr1h,w,c
  7532  010760  6EDA               	movwf	fsr2h,c
  7533  010762  0EFF               	movlw	255
  7534  010764  22DA               	addwfc	fsr2h,f,c
  7535  010766  06DE               	decf	postinc2,f,c
  7536  010768  0E00               	movlw	0
  7537  01076A  5ADD               	subwfb	postdec2,f,c
  7538                           
  7539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  7540                           ;stkvar	_w @ sp[(-18)+14]
  7541  01076C  50E1               	movf	fsr1l,w,c
  7542  01076E  0FFC               	addlw	-4
  7543  010770  6ED9               	movwf	fsr2l,c
  7544  010772  50E2               	movf	fsr1h,w,c
  7545  010774  6EDA               	movwf	fsr2h,c
  7546  010776  0EFF               	movlw	255
  7547  010778  22DA               	addwfc	fsr2h,f,c
  7548  01077A  06DE               	decf	postinc2,f,c
  7549  01077C  0E00               	movlw	0
  7550  01077E  5ADD               	subwfb	postdec2,f,c
  7551                           
  7552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7553  010780  0E0A               	movlw	10
  7554  010782  6EE6               	movwf	postinc1,c
  7555  010784  0E00               	movlw	0
  7556  010786  6EE6               	movwf	postinc1,c
  7557  010788  0E00               	movlw	0
  7558  01078A  6EE6               	movwf	postinc1,c
  7559  01078C  0E00               	movlw	0
  7560  01078E  6EE6               	movwf	postinc1,c
  7561  010790  0E00               	movlw	0
  7562  010792  6EE6               	movwf	postinc1,c
  7563  010794  0E00               	movlw	0
  7564  010796  6EE6               	movwf	postinc1,c
  7565  010798  0E00               	movlw	0
  7566  01079A  6EE6               	movwf	postinc1,c
  7567  01079C  0E00               	movlw	0
  7568  01079E  6EE6               	movwf	postinc1,c
  7569                           
  7570                           ;stkvar	_n @ sp[(-26)+2]
  7571  0107A0  50E1               	movf	fsr1l,w,c
  7572  0107A2  0FE8               	addlw	-24
  7573  0107A4  6ED9               	movwf	fsr2l,c
  7574  0107A6  50E2               	movf	fsr1h,w,c
  7575  0107A8  6EDA               	movwf	fsr2h,c
  7576  0107AA  0EFF               	movlw	255
  7577  0107AC  22DA               	addwfc	fsr2h,f,c
  7578  0107AE  006F FF7B FFE6     	movff	postinc2,postinc1
  7579  0107B4  006F FF7B FFE6     	movff	postinc2,postinc1
  7580  0107BA  006F FF7B FFE6     	movff	postinc2,postinc1
  7581  0107C0  006F FF7B FFE6     	movff	postinc2,postinc1
  7582  0107C6  006F FF7B FFE6     	movff	postinc2,postinc1
  7583  0107CC  006F FF7B FFE6     	movff	postinc2,postinc1
  7584  0107D2  006F FF7B FFE6     	movff	postinc2,postinc1
  7585  0107D8  006F FF7B FFE6     	movff	postinc2,postinc1
  7586  0107DE  ECFC  F08A         	call	___aodiv	;wreg free
  7587  0107E2  52E5               	movf	postdec1,f,c
  7588  0107E4  006F FF9C  F04D    	movff	indf1,btemp+23
  7589  0107EA  52E5               	movf	postdec1,f,c
  7590  0107EC  006F FF9C  F04C    	movff	indf1,btemp+22
  7591  0107F2  52E5               	movf	postdec1,f,c
  7592  0107F4  006F FF9C  F04B    	movff	indf1,btemp+21
  7593  0107FA  52E5               	movf	postdec1,f,c
  7594  0107FC  006F FF9C  F04A    	movff	indf1,btemp+20
  7595  010802  52E5               	movf	postdec1,f,c
  7596  010804  006F FF9C  F049    	movff	indf1,btemp+19
  7597  01080A  52E5               	movf	postdec1,f,c
  7598  01080C  006F FF9C  F048    	movff	indf1,btemp+18
  7599  010812  52E5               	movf	postdec1,f,c
  7600  010814  006F FF9C  F047    	movff	indf1,btemp+17
  7601  01081A  52E5               	movf	postdec1,f,c
  7602  01081C  006F FF9C  F046    	movff	indf1,btemp+16
  7603  010822  0EF8               	movlw	248
  7604  010824  26E1               	addwf	fsr1l,f,c
  7605  010826  0EFF               	movlw	255
  7606  010828  22E2               	addwfc	fsr1h,f,c
  7607                           
  7608                           ;stkvar	_n @ sp[(-18)+2]
  7609  01082A  0EF0               	movlw	-16
  7610  01082C  0060  F11B  FFE3   	movff	btemp+16,plusw1
  7611  010832  0EF1               	movlw	-15
  7612  010834  0060  F11F  FFE3   	movff	btemp+17,plusw1
  7613  01083A  0EF2               	movlw	-14
  7614  01083C  0060  F123  FFE3   	movff	btemp+18,plusw1
  7615  010842  0EF3               	movlw	-13
  7616  010844  0060  F127  FFE3   	movff	btemp+19,plusw1
  7617  01084A  0EF4               	movlw	-12
  7618  01084C  0060  F12B  FFE3   	movff	btemp+20,plusw1
  7619  010852  0EF5               	movlw	-11
  7620  010854  0060  F12F  FFE3   	movff	btemp+21,plusw1
  7621  01085A  0EF6               	movlw	-10
  7622  01085C  0060  F133  FFE3   	movff	btemp+22,plusw1
  7623  010862  0EF7               	movlw	-9
  7624  010864  0060  F137  FFE3   	movff	btemp+23,plusw1
  7625  01086A                     l5826:
  7626                           
  7627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7628                           ;stkvar	_i @ sp[(-18)+10]
  7629  01086A  0EF9               	movlw	-7
  7630  01086C  BEE3               	btfsc	plusw1,7,c
  7631  01086E  D036               	goto	u3660
  7632  010870  0EF9               	movlw	-7
  7633  010872  50E3               	movf	plusw1,w,c
  7634  010874  E104               	bnz	u3620
  7635  010876  0EF8               	movlw	-8
  7636  010878  04E3               	decf	plusw1,w,c
  7637  01087A  A0D8               	btfss	status,0,c
  7638  01087C  D02F               	goto	u3660
  7639  01087E                     u3620:
  7640                           
  7641                           ;stkvar	_n @ sp[(-18)+2]
  7642  01087E  0EF0               	movlw	-16
  7643  010880  50E3               	movf	plusw1,w,c
  7644  010882  E115               	bnz	u3631
  7645  010884  0EF1               	movlw	-15
  7646  010886  50E3               	movf	plusw1,w,c
  7647  010888  E112               	bnz	u3631
  7648  01088A  0EF2               	movlw	-14
  7649  01088C  50E3               	movf	plusw1,w,c
  7650  01088E  E10F               	bnz	u3631
  7651  010890  0EF3               	movlw	-13
  7652  010892  50E3               	movf	plusw1,w,c
  7653  010894  E10C               	bnz	u3631
  7654  010896  0EF4               	movlw	-12
  7655  010898  50E3               	movf	plusw1,w,c
  7656  01089A  E109               	bnz	u3631
  7657  01089C  0EF5               	movlw	-11
  7658  01089E  50E3               	movf	plusw1,w,c
  7659  0108A0  E106               	bnz	u3631
  7660  0108A2  0EF6               	movlw	-10
  7661  0108A4  50E3               	movf	plusw1,w,c
  7662  0108A6  E103               	bnz	u3631
  7663  0108A8  0EF7               	movlw	-9
  7664  0108AA  50E3               	movf	plusw1,w,c
  7665  0108AC  A4D8               	btfss	status,2,c
  7666  0108AE                     u3631:
  7667  0108AE  D6DA               	goto	l5816
  7668                           
  7669                           ;stkvar	_p @ sp[(-18)+16]
  7670  0108B0  0EFF               	movlw	-1
  7671  0108B2  BEE3               	btfsc	plusw1,7,c
  7672  0108B4  D007               	goto	u3640
  7673  0108B6  0EFF               	movlw	-1
  7674  0108B8  50E3               	movf	plusw1,w,c
  7675  0108BA  E103               	bnz	u3641
  7676  0108BC  0EFE               	movlw	-2
  7677  0108BE  04E3               	decf	plusw1,w,c
  7678  0108C0  B0D8               	btfsc	status,0,c
  7679  0108C2                     u3641:
  7680  0108C2  D6D0               	goto	l5816
  7681  0108C4                     u3640:
  7682                           
  7683                           ;stkvar	_w @ sp[(-18)+14]
  7684  0108C4  0EFD               	movlw	-3
  7685  0108C6  BEE3               	btfsc	plusw1,7,c
  7686  0108C8  D009               	goto	u3660
  7687  0108CA  0EFD               	movlw	-3
  7688  0108CC  50E3               	movf	plusw1,w,c
  7689  0108CE  E104               	bnz	u3650
  7690  0108D0  0EFC               	movlw	-4
  7691  0108D2  04E3               	decf	plusw1,w,c
  7692  0108D4  A0D8               	btfss	status,0,c
  7693  0108D6  D002               	goto	u3660
  7694  0108D8                     u3650:
  7695  0108D8  B223               	btfsc	_flags^0,1,c
  7696  0108DA  D6C4               	goto	l5816
  7697  0108DC                     u3660:
  7698                           
  7699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7700                           ;stkvar	_s @ sp[(-18)+12]
  7701  0108DC  0EFA               	movlw	-6
  7702  0108DE  006F FF8C  F036    	movff	plusw1,btemp
  7703  0108E4  0EFB               	movlw	-5
  7704  0108E6  50E3               	movf	plusw1,w,c
  7705  0108E8  1036               	iorwf	btemp^0,w,c
  7706  0108EA  A4D8               	btfss	status,2,c
  7707  0108EC  D002               	goto	u3680
  7708  0108EE  A423               	btfss	_flags^0,2,c
  7709  0108F0  D02D               	goto	l5850
  7710  0108F2                     u3680:
  7711                           
  7712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7713                           ;stkvar	_i @ sp[(-18)+10]
  7714  0108F2  50E1               	movf	fsr1l,w,c
  7715  0108F4  0FF8               	addlw	-8
  7716  0108F6  6ED9               	movwf	fsr2l,c
  7717  0108F8  50E2               	movf	fsr1h,w,c
  7718  0108FA  6EDA               	movwf	fsr2h,c
  7719  0108FC  0EFF               	movlw	255
  7720  0108FE  22DA               	addwfc	fsr2h,f,c
  7721  010900  06DE               	decf	postinc2,f,c
  7722  010902  0E00               	movlw	0
  7723  010904  5ADD               	subwfb	postdec2,f,c
  7724                           
  7725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7726                           ;stkvar	_s @ sp[(-18)+12]
  7727  010906  0EFA               	movlw	-6
  7728  010908  006F FF8C  F036    	movff	plusw1,btemp
  7729  01090E  0EFB               	movlw	-5
  7730  010910  50E3               	movf	plusw1,w,c
  7731  010912  1036               	iorwf	btemp^0,w,c
  7732  010914  A4D8               	btfss	status,2,c
  7733  010916  D002               	goto	l5846
  7734  010918  0E2B               	movlw	43
  7735  01091A  D001               	goto	L4
  7736  01091C                     l5846:
  7737  01091C  0E2D               	movlw	45
  7738  01091E                     L4:
  7739  01091E  6E40               	movwf	(btemp+10)^0,c
  7740  010920  0E00               	movlw	0
  7741  010922  6E41               	movwf	(btemp+11)^0,c
  7742                           
  7743                           ;stkvar	_dtoa$3992 @ sp[(-18)+0]
  7744  010924  0EEE               	movlw	-18
  7745  010926  0060  F103  FFE3   	movff	btemp+10,plusw1
  7746  01092C  0EEF               	movlw	-17
  7747  01092E  0060  F107  FFE3   	movff	btemp+11,plusw1
  7748                           
  7749                           ;stkvar	_dtoa$3992 @ sp[(-18)+0]
  7750                           ;stkvar	_i @ sp[(-18)+10]
  7751  010934  0EF8               	movlw	-8
  7752  010936  006F FF8C  F041    	movff	plusw1,btemp+11
  7753  01093C  5041               	movf	(btemp+11)^0,w,c
  7754  01093E  0FAA               	addlw	low _dbuf
  7755  010940  6ED9               	movwf	fsr2l,c
  7756  010942  6ADA               	clrf	fsr2h,c
  7757  010944  0EEE               	movlw	-18
  7758  010946  006F FF8F FFDF     	movff	plusw1,indf2
  7759  01094C                     l5850:
  7760                           
  7761                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7762                           ;stkvar	_w @ sp[(-18)+14]
  7763  01094C  0EFC               	movlw	-4
  7764  01094E  006F FF8F FFE6     	movff	plusw1,postinc1
  7765  010954  006F FF8F FFE6     	movff	plusw1,postinc1
  7766                           
  7767                           ;stkvar	_i @ sp[(-20)+10]
  7768  01095A  0EF6               	movlw	-10
  7769  01095C  006F FF8C  F041    	movff	plusw1,btemp+11
  7770  010962  5041               	movf	(btemp+11)^0,w,c
  7771  010964  0FAA               	addlw	low _dbuf
  7772  010966  6EE6               	movwf	postinc1,c
  7773                           
  7774                           ;stkvar	_fp @ sp[(-21)+-2]
  7775  010968  0EE9               	movlw	-23
  7776  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
  7777  010970  006F FF8F FFE6     	movff	plusw1,postinc1
  7778  010976  EC9A  F090         	call	_pad	;wreg free
  7779                           
  7780                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  7781  01097A  0EE4               	movlw	228
  7782  01097C  26E1               	addwf	fsr1l,f,c
  7783  01097E  0EFF               	movlw	255
  7784  010980  22E2               	addwfc	fsr1h,f,c
  7785  010982  0012               	return		;funcret
  7786  010984                     __end_of_dtoa:
  7787                           	opt callstack 0
  7788                           
  7789 ;; *************** function _abs *****************
  7790 ;; Defined at:
  7791 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  a               2  [STACK] int 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  2  [STACK] int 
  7798 ;; Registers used:
  7799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used:    1
  7811 ;; Hardware stack levels required when called:    6
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_dtoa
  7816 ;; This function uses a reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text37
  7820  012E60                     __ptext37:
  7821                           	opt callstack 0
  7822  012E60                     _abs:
  7823                           	opt callstack 17
  7824                           
  7825                           ;stkvar	_a @ sp[(0)+-2]
  7826                           
  7827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7828                           ;incstack = 0
  7829  012E60  0EFF               	movlw	-1
  7830  012E62  BEE3               	btfsc	plusw1,7,c
  7831  012E64  D007               	goto	u1890
  7832  012E66  0EFF               	movlw	-1
  7833  012E68  50E3               	movf	plusw1,w,c
  7834  012E6A  E112               	bnz	l4242
  7835  012E6C  0EFE               	movlw	-2
  7836  012E6E  04E3               	decf	plusw1,w,c
  7837  012E70  B0D8               	btfsc	status,0,c
  7838  012E72  D00E               	goto	l4242
  7839  012E74                     u1890:
  7840                           
  7841                           ;stkvar	_a @ sp[(0)+-2]
  7842  012E74  0EFE               	movlw	-2
  7843  012E76  006F FF8C  F036    	movff	plusw1,btemp
  7844  012E7C  1E36               	comf	btemp^0,f,c
  7845  012E7E  0EFF               	movlw	-1
  7846  012E80  006F FF8C  F037    	movff	plusw1,btemp+1
  7847  012E86  1E37               	comf	(btemp+1)^0,f,c
  7848  012E88  2A36               	incf	btemp^0,f,c
  7849  012E8A  B4D8               	btfsc	status,2,c
  7850  012E8C  2A37               	incf	(btemp+1)^0,f,c
  7851  012E8E  D008               	goto	l2477
  7852  012E90                     l4242:
  7853                           
  7854                           ;stkvar	_a @ sp[(0)+-2]
  7855  012E90  0EFE               	movlw	-2
  7856  012E92  006F FF8C  F036    	movff	plusw1,btemp
  7857  012E98  0EFF               	movlw	-1
  7858  012E9A  006F FF8C  F037    	movff	plusw1,btemp+1
  7859  012EA0                     l2477:
  7860                           
  7861                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  7862  012EA0  52E5               	movf	postdec1,f,c
  7863  012EA2  52E5               	movf	postdec1,f,c
  7864  012EA4  0012               	return		;funcret
  7865  012EA6                     __end_of_abs:
  7866                           	opt callstack 0
  7867                           
  7868 ;; *************** function ___aomod *****************
  7869 ;; Defined at:
  7870 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  dividend        8  [STACK] long long 
  7873 ;;  divisor         8  [STACK] long long 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  sign            1  [STACK] unsigned char 
  7876 ;;  counter         1  [STACK] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  8  [STACK] long long 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7890 ;;Total ram usage:        0 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    6
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_dtoa
  7897 ;; This function uses a reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text38
  7901  011878                     __ptext38:
  7902                           	opt callstack 0
  7903  011878                     ___aomod:
  7904                           	opt callstack 0
  7905                           
  7906                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  7907  011878  52E6               	movf	postinc1,f,c
  7908  01187A  52E6               	movf	postinc1,f,c
  7909                           
  7910                           ;stkvar	_sign @ sp[(-2)+0]
  7911                           
  7912                           ;incstack = 0
  7913  01187C  0EFE               	movlw	-2
  7914  01187E  6AE3               	clrf	plusw1,c
  7915                           
  7916                           ;stkvar	_dividend @ sp[(-2)+-8]
  7917  011880  0EFD               	movlw	-3
  7918  011882  AEE3               	btfss	plusw1,7,c
  7919  011884  D028               	goto	l4320
  7920                           
  7921                           ;stkvar	_dividend @ sp[(-2)+-8]
  7922                           ;stkvar	_dividend @ sp[(-2)+-8]
  7923  011886  0EF6               	movlw	-10
  7924  011888  6CE3               	negf	plusw1,c
  7925  01188A  0EF7               	movlw	-9
  7926  01188C  1EE3               	comf	plusw1,f,c
  7927  01188E  0EF8               	movlw	-8
  7928  011890  1EE3               	comf	plusw1,f,c
  7929  011892  0EF9               	movlw	-7
  7930  011894  1EE3               	comf	plusw1,f,c
  7931  011896  0EFA               	movlw	-6
  7932  011898  1EE3               	comf	plusw1,f,c
  7933  01189A  0EFB               	movlw	-5
  7934  01189C  1EE3               	comf	plusw1,f,c
  7935  01189E  0EFC               	movlw	-4
  7936  0118A0  1EE3               	comf	plusw1,f,c
  7937  0118A2  0EFD               	movlw	-3
  7938  0118A4  1EE3               	comf	plusw1,f,c
  7939  0118A6  E314               	bnc	u2100
  7940  0118A8  0EF7               	movlw	-9
  7941  0118AA  2AE3               	incf	plusw1,f,c
  7942  0118AC  E311               	bnc	u2100
  7943  0118AE  0EF8               	movlw	-8
  7944  0118B0  2AE3               	incf	plusw1,f,c
  7945  0118B2  E30E               	bnc	u2100
  7946  0118B4  0EF9               	movlw	-7
  7947  0118B6  2AE3               	incf	plusw1,f,c
  7948  0118B8  E30B               	bnc	u2100
  7949  0118BA  0EFA               	movlw	-6
  7950  0118BC  2AE3               	incf	plusw1,f,c
  7951  0118BE  E308               	bnc	u2100
  7952  0118C0  0EFB               	movlw	-5
  7953  0118C2  2AE3               	incf	plusw1,f,c
  7954  0118C4  E305               	bnc	u2100
  7955  0118C6  0EFC               	movlw	-4
  7956  0118C8  2AE3               	incf	plusw1,f,c
  7957  0118CA  E302               	bnc	u2100
  7958  0118CC  0EFD               	movlw	-3
  7959  0118CE  2AE3               	incf	plusw1,f,c
  7960  0118D0                     u2100:
  7961                           
  7962                           ;stkvar	_sign @ sp[(-2)+0]
  7963  0118D0  0EFE               	movlw	-2
  7964  0118D2  6AE3               	clrf	plusw1,c
  7965  0118D4  2AE3               	incf	plusw1,f,c
  7966  0118D6                     l4320:
  7967                           
  7968                           ;stkvar	_divisor @ sp[(-2)+-16]
  7969  0118D6  0EF5               	movlw	-11
  7970  0118D8  AEE3               	btfss	plusw1,7,c
  7971  0118DA  D025               	goto	u2120
  7972                           
  7973                           ;stkvar	_divisor @ sp[(-2)+-16]
  7974                           ;stkvar	_divisor @ sp[(-2)+-16]
  7975  0118DC  0EEE               	movlw	-18
  7976  0118DE  6CE3               	negf	plusw1,c
  7977  0118E0  0EEF               	movlw	-17
  7978  0118E2  1EE3               	comf	plusw1,f,c
  7979  0118E4  0EF0               	movlw	-16
  7980  0118E6  1EE3               	comf	plusw1,f,c
  7981  0118E8  0EF1               	movlw	-15
  7982  0118EA  1EE3               	comf	plusw1,f,c
  7983  0118EC  0EF2               	movlw	-14
  7984  0118EE  1EE3               	comf	plusw1,f,c
  7985  0118F0  0EF3               	movlw	-13
  7986  0118F2  1EE3               	comf	plusw1,f,c
  7987  0118F4  0EF4               	movlw	-12
  7988  0118F6  1EE3               	comf	plusw1,f,c
  7989  0118F8  0EF5               	movlw	-11
  7990  0118FA  1EE3               	comf	plusw1,f,c
  7991  0118FC  E314               	bnc	u2120
  7992  0118FE  0EEF               	movlw	-17
  7993  011900  2AE3               	incf	plusw1,f,c
  7994  011902  E311               	bnc	u2120
  7995  011904  0EF0               	movlw	-16
  7996  011906  2AE3               	incf	plusw1,f,c
  7997  011908  E30E               	bnc	u2120
  7998  01190A  0EF1               	movlw	-15
  7999  01190C  2AE3               	incf	plusw1,f,c
  8000  01190E  E30B               	bnc	u2120
  8001  011910  0EF2               	movlw	-14
  8002  011912  2AE3               	incf	plusw1,f,c
  8003  011914  E308               	bnc	u2120
  8004  011916  0EF3               	movlw	-13
  8005  011918  2AE3               	incf	plusw1,f,c
  8006  01191A  E305               	bnc	u2120
  8007  01191C  0EF4               	movlw	-12
  8008  01191E  2AE3               	incf	plusw1,f,c
  8009  011920  E302               	bnc	u2120
  8010  011922  0EF5               	movlw	-11
  8011  011924  2AE3               	incf	plusw1,f,c
  8012  011926                     u2120:
  8013                           
  8014                           ;stkvar	_divisor @ sp[(-2)+-16]
  8015  011926  0EEE               	movlw	-18
  8016  011928  50E3               	movf	plusw1,w,c
  8017  01192A  E116               	bnz	u2130
  8018  01192C  0EEF               	movlw	-17
  8019  01192E  50E3               	movf	plusw1,w,c
  8020  011930  E113               	bnz	u2130
  8021  011932  0EF0               	movlw	-16
  8022  011934  50E3               	movf	plusw1,w,c
  8023  011936  E110               	bnz	u2130
  8024  011938  0EF1               	movlw	-15
  8025  01193A  50E3               	movf	plusw1,w,c
  8026  01193C  E10D               	bnz	u2130
  8027  01193E  0EF2               	movlw	-14
  8028  011940  50E3               	movf	plusw1,w,c
  8029  011942  E10A               	bnz	u2130
  8030  011944  0EF3               	movlw	-13
  8031  011946  50E3               	movf	plusw1,w,c
  8032  011948  E107               	bnz	u2130
  8033  01194A  0EF4               	movlw	-12
  8034  01194C  50E3               	movf	plusw1,w,c
  8035  01194E  E104               	bnz	u2130
  8036  011950  0EF5               	movlw	-11
  8037  011952  50E3               	movf	plusw1,w,c
  8038  011954  B4D8               	btfsc	status,2,c
  8039  011956  D075               	goto	u2160
  8040  011958                     u2130:
  8041                           
  8042                           ;stkvar	_counter @ sp[(-2)+1]
  8043  011958  0EFF               	movlw	-1
  8044  01195A  6AE3               	clrf	plusw1,c
  8045  01195C  D012               	goto	L5
  8046  01195E                     l4328:
  8047                           
  8048                           ;stkvar	_divisor @ sp[(-2)+-16]
  8049  01195E  90D8               	bcf	status,0,c
  8050  011960  0EEE               	movlw	-18
  8051  011962  36E3               	rlcf	plusw1,f,c
  8052  011964  0EEF               	movlw	-17
  8053  011966  36E3               	rlcf	plusw1,f,c
  8054  011968  0EF0               	movlw	-16
  8055  01196A  36E3               	rlcf	plusw1,f,c
  8056  01196C  0EF1               	movlw	-15
  8057  01196E  36E3               	rlcf	plusw1,f,c
  8058  011970  0EF2               	movlw	-14
  8059  011972  36E3               	rlcf	plusw1,f,c
  8060  011974  0EF3               	movlw	-13
  8061  011976  36E3               	rlcf	plusw1,f,c
  8062  011978  0EF4               	movlw	-12
  8063  01197A  36E3               	rlcf	plusw1,f,c
  8064  01197C  0EF5               	movlw	-11
  8065  01197E  36E3               	rlcf	plusw1,f,c
  8066                           
  8067                           ;stkvar	_counter @ sp[(-2)+1]
  8068  011980  0EFF               	movlw	-1
  8069  011982                     L5:
  8070  011982  2AE3               	incf	plusw1,f,c
  8071                           
  8072                           ;stkvar	_divisor @ sp[(-2)+-16]
  8073  011984  0EF5               	movlw	-11
  8074  011986  AEE3               	btfss	plusw1,7,c
  8075  011988  D7EA               	goto	l4328
  8076  01198A                     u2140:
  8077                           
  8078                           ;stkvar	_divisor @ sp[(-2)+-16]
  8079                           ;stkvar	_dividend @ sp[(-2)+-8]
  8080  01198A  50E1               	movf	fsr1l,w,c
  8081  01198C  0FF6               	addlw	-10
  8082  01198E  6ED9               	movwf	fsr2l,c
  8083  011990  50E2               	movf	fsr1h,w,c
  8084  011992  6EDA               	movwf	fsr2h,c
  8085  011994  0EFF               	movlw	255
  8086  011996  22DA               	addwfc	fsr2h,f,c
  8087  011998  0EEE               	movlw	-18
  8088  01199A  50E3               	movf	plusw1,w,c
  8089  01199C  5CDE               	subwf	postinc2,w,c
  8090  01199E  0EEF               	movlw	-17
  8091  0119A0  50E3               	movf	plusw1,w,c
  8092  0119A2  58DE               	subwfb	postinc2,w,c
  8093  0119A4  0EF0               	movlw	-16
  8094  0119A6  50E3               	movf	plusw1,w,c
  8095  0119A8  58DE               	subwfb	postinc2,w,c
  8096  0119AA  0EF1               	movlw	-15
  8097  0119AC  50E3               	movf	plusw1,w,c
  8098  0119AE  58DE               	subwfb	postinc2,w,c
  8099  0119B0  0EF2               	movlw	-14
  8100  0119B2  50E3               	movf	plusw1,w,c
  8101  0119B4  58DE               	subwfb	postinc2,w,c
  8102  0119B6  0EF3               	movlw	-13
  8103  0119B8  50E3               	movf	plusw1,w,c
  8104  0119BA  58DE               	subwfb	postinc2,w,c
  8105  0119BC  0EF4               	movlw	-12
  8106  0119BE  50E3               	movf	plusw1,w,c
  8107  0119C0  58DE               	subwfb	postinc2,w,c
  8108  0119C2  0EF5               	movlw	-11
  8109  0119C4  50E3               	movf	plusw1,w,c
  8110  0119C6  58DE               	subwfb	postinc2,w,c
  8111  0119C8  A0D8               	btfss	status,0,c
  8112  0119CA  D01F               	goto	l4336
  8113                           
  8114                           ;stkvar	_divisor @ sp[(-2)+-16]
  8115                           ;stkvar	_dividend @ sp[(-2)+-8]
  8116  0119CC  50E1               	movf	fsr1l,w,c
  8117  0119CE  0FF6               	addlw	-10
  8118  0119D0  6ED9               	movwf	fsr2l,c
  8119  0119D2  50E2               	movf	fsr1h,w,c
  8120  0119D4  6EDA               	movwf	fsr2h,c
  8121  0119D6  0EFF               	movlw	255
  8122  0119D8  22DA               	addwfc	fsr2h,f,c
  8123  0119DA  0EEE               	movlw	-18
  8124  0119DC  50E3               	movf	plusw1,w,c
  8125  0119DE  5EDE               	subwf	postinc2,f,c
  8126  0119E0  0EEF               	movlw	-17
  8127  0119E2  50E3               	movf	plusw1,w,c
  8128  0119E4  5ADE               	subwfb	postinc2,f,c
  8129  0119E6  0EF0               	movlw	-16
  8130  0119E8  50E3               	movf	plusw1,w,c
  8131  0119EA  5ADE               	subwfb	postinc2,f,c
  8132  0119EC  0EF1               	movlw	-15
  8133  0119EE  50E3               	movf	plusw1,w,c
  8134  0119F0  5ADE               	subwfb	postinc2,f,c
  8135  0119F2  0EF2               	movlw	-14
  8136  0119F4  50E3               	movf	plusw1,w,c
  8137  0119F6  5ADE               	subwfb	postinc2,f,c
  8138  0119F8  0EF3               	movlw	-13
  8139  0119FA  50E3               	movf	plusw1,w,c
  8140  0119FC  5ADE               	subwfb	postinc2,f,c
  8141  0119FE  0EF4               	movlw	-12
  8142  011A00  50E3               	movf	plusw1,w,c
  8143  011A02  5ADE               	subwfb	postinc2,f,c
  8144  011A04  0EF5               	movlw	-11
  8145  011A06  50E3               	movf	plusw1,w,c
  8146  011A08  5ADE               	subwfb	postinc2,f,c
  8147  011A0A                     l4336:
  8148                           
  8149                           ;stkvar	_divisor @ sp[(-2)+-16]
  8150  011A0A  90D8               	bcf	status,0,c
  8151  011A0C  0EF5               	movlw	-11
  8152  011A0E  32E3               	rrcf	plusw1,f,c
  8153  011A10  0EF4               	movlw	-12
  8154  011A12  32E3               	rrcf	plusw1,f,c
  8155  011A14  0EF3               	movlw	-13
  8156  011A16  32E3               	rrcf	plusw1,f,c
  8157  011A18  0EF2               	movlw	-14
  8158  011A1A  32E3               	rrcf	plusw1,f,c
  8159  011A1C  0EF1               	movlw	-15
  8160  011A1E  32E3               	rrcf	plusw1,f,c
  8161  011A20  0EF0               	movlw	-16
  8162  011A22  32E3               	rrcf	plusw1,f,c
  8163  011A24  0EEF               	movlw	-17
  8164  011A26  32E3               	rrcf	plusw1,f,c
  8165  011A28  0EEE               	movlw	-18
  8166  011A2A  32E3               	rrcf	plusw1,f,c
  8167                           
  8168                           ;stkvar	_counter @ sp[(-2)+1]
  8169  011A2C  0EFF               	movlw	-1
  8170  011A2E  50E3               	movf	plusw1,w,c
  8171  011A30  6E36               	movwf	btemp^0,c
  8172  011A32  0E01               	movlw	1
  8173  011A34  5E36               	subwf	btemp^0,f,c
  8174  011A36  0EFF               	movlw	-1
  8175  011A38  0060  F0DB  FFE3   	movff	btemp,plusw1
  8176  011A3E  A4D8               	btfss	status,2,c
  8177  011A40  D7A4               	goto	u2140
  8178  011A42                     u2160:
  8179                           
  8180                           ;stkvar	_sign @ sp[(-2)+0]
  8181  011A42  0EFE               	movlw	-2
  8182  011A44  50E3               	movf	plusw1,w,c
  8183  011A46  B4D8               	btfsc	status,2,c
  8184  011A48  D025               	goto	u2180
  8185                           
  8186                           ;stkvar	_dividend @ sp[(-2)+-8]
  8187                           ;stkvar	_dividend @ sp[(-2)+-8]
  8188  011A4A  0EF6               	movlw	-10
  8189  011A4C  6CE3               	negf	plusw1,c
  8190  011A4E  0EF7               	movlw	-9
  8191  011A50  1EE3               	comf	plusw1,f,c
  8192  011A52  0EF8               	movlw	-8
  8193  011A54  1EE3               	comf	plusw1,f,c
  8194  011A56  0EF9               	movlw	-7
  8195  011A58  1EE3               	comf	plusw1,f,c
  8196  011A5A  0EFA               	movlw	-6
  8197  011A5C  1EE3               	comf	plusw1,f,c
  8198  011A5E  0EFB               	movlw	-5
  8199  011A60  1EE3               	comf	plusw1,f,c
  8200  011A62  0EFC               	movlw	-4
  8201  011A64  1EE3               	comf	plusw1,f,c
  8202  011A66  0EFD               	movlw	-3
  8203  011A68  1EE3               	comf	plusw1,f,c
  8204  011A6A  E314               	bnc	u2180
  8205  011A6C  0EF7               	movlw	-9
  8206  011A6E  2AE3               	incf	plusw1,f,c
  8207  011A70  E311               	bnc	u2180
  8208  011A72  0EF8               	movlw	-8
  8209  011A74  2AE3               	incf	plusw1,f,c
  8210  011A76  E30E               	bnc	u2180
  8211  011A78  0EF9               	movlw	-7
  8212  011A7A  2AE3               	incf	plusw1,f,c
  8213  011A7C  E30B               	bnc	u2180
  8214  011A7E  0EFA               	movlw	-6
  8215  011A80  2AE3               	incf	plusw1,f,c
  8216  011A82  E308               	bnc	u2180
  8217  011A84  0EFB               	movlw	-5
  8218  011A86  2AE3               	incf	plusw1,f,c
  8219  011A88  E305               	bnc	u2180
  8220  011A8A  0EFC               	movlw	-4
  8221  011A8C  2AE3               	incf	plusw1,f,c
  8222  011A8E  E302               	bnc	u2180
  8223  011A90  0EFD               	movlw	-3
  8224  011A92  2AE3               	incf	plusw1,f,c
  8225  011A94                     u2180:
  8226                           
  8227                           ;stkvar	_dividend @ sp[(-2)+-8]
  8228  011A94  0EF6               	movlw	246
  8229  011A96  24E1               	addwf	fsr1l,w,c
  8230  011A98  6ED9               	movwf	fsr2l,c
  8231  011A9A  0EFF               	movlw	255
  8232  011A9C  20E2               	addwfc	fsr1h,w,c
  8233  011A9E  6EDA               	movwf	fsr2h,c
  8234                           
  8235                           ;stkvar	?___aomod @ sp[(-2)+-8]
  8236  011AA0  0E08               	movlw	8
  8237  011AA2  6E36               	movwf	btemp^0,c
  8238  011AA4  0EF6               	movlw	-10
  8239  011AA6                     us219999:
  8240  011AA6  006F FF7B FFE3     	movff	postinc2,plusw1
  8241  011AAC  28E8               	incf	wreg,w,c
  8242  011AAE  2E36               	decfsz	btemp^0,f,c
  8243  011AB0  D7FA               	bra	us219999
  8244                           
  8245                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  8246  011AB2  52E5               	movf	postdec1,f,c
  8247  011AB4  52E5               	movf	postdec1,f,c
  8248  011AB6  0012               	return		;funcret
  8249  011AB8                     __end_of___aomod:
  8250                           	opt callstack 0
  8251                           
  8252 ;; *************** function ___aodiv *****************
  8253 ;; Defined at:
  8254 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  dividend        8  [STACK] long long 
  8257 ;;  divisor         8  [STACK] long long 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  quotient        8  [STACK] long long 
  8260 ;;  sign            1  [STACK] unsigned char 
  8261 ;;  counter         1  [STACK] unsigned char 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  8  [STACK] long long 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;Total ram usage:        0 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    6
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_dtoa
  8282 ;; This function uses a reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text39
  8286  0115F8                     __ptext39:
  8287                           	opt callstack 0
  8288  0115F8                     ___aodiv:
  8289                           	opt callstack 0
  8290                           
  8291                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  8292  0115F8  0E0A               	movlw	10
  8293  0115FA  26E1               	addwf	fsr1l,f,c
  8294  0115FC  0E00               	movlw	0
  8295  0115FE  22E2               	addwfc	fsr1h,f,c
  8296                           
  8297                           ;stkvar	_sign @ sp[(-10)+8]
  8298                           
  8299                           ;incstack = 0
  8300  011600  0EFE               	movlw	-2
  8301  011602  6AE3               	clrf	plusw1,c
  8302                           
  8303                           ;stkvar	_divisor @ sp[(-10)+-16]
  8304  011604  0EED               	movlw	-19
  8305  011606  AEE3               	btfss	plusw1,7,c
  8306  011608  D028               	goto	l4276
  8307                           
  8308                           ;stkvar	_divisor @ sp[(-10)+-16]
  8309                           ;stkvar	_divisor @ sp[(-10)+-16]
  8310  01160A  0EE6               	movlw	-26
  8311  01160C  6CE3               	negf	plusw1,c
  8312  01160E  0EE7               	movlw	-25
  8313  011610  1EE3               	comf	plusw1,f,c
  8314  011612  0EE8               	movlw	-24
  8315  011614  1EE3               	comf	plusw1,f,c
  8316  011616  0EE9               	movlw	-23
  8317  011618  1EE3               	comf	plusw1,f,c
  8318  01161A  0EEA               	movlw	-22
  8319  01161C  1EE3               	comf	plusw1,f,c
  8320  01161E  0EEB               	movlw	-21
  8321  011620  1EE3               	comf	plusw1,f,c
  8322  011622  0EEC               	movlw	-20
  8323  011624  1EE3               	comf	plusw1,f,c
  8324  011626  0EED               	movlw	-19
  8325  011628  1EE3               	comf	plusw1,f,c
  8326  01162A  E314               	bnc	u1980
  8327  01162C  0EE7               	movlw	-25
  8328  01162E  2AE3               	incf	plusw1,f,c
  8329  011630  E311               	bnc	u1980
  8330  011632  0EE8               	movlw	-24
  8331  011634  2AE3               	incf	plusw1,f,c
  8332  011636  E30E               	bnc	u1980
  8333  011638  0EE9               	movlw	-23
  8334  01163A  2AE3               	incf	plusw1,f,c
  8335  01163C  E30B               	bnc	u1980
  8336  01163E  0EEA               	movlw	-22
  8337  011640  2AE3               	incf	plusw1,f,c
  8338  011642  E308               	bnc	u1980
  8339  011644  0EEB               	movlw	-21
  8340  011646  2AE3               	incf	plusw1,f,c
  8341  011648  E305               	bnc	u1980
  8342  01164A  0EEC               	movlw	-20
  8343  01164C  2AE3               	incf	plusw1,f,c
  8344  01164E  E302               	bnc	u1980
  8345  011650  0EED               	movlw	-19
  8346  011652  2AE3               	incf	plusw1,f,c
  8347  011654                     u1980:
  8348                           
  8349                           ;stkvar	_sign @ sp[(-10)+8]
  8350  011654  0EFE               	movlw	-2
  8351  011656  6AE3               	clrf	plusw1,c
  8352  011658  2AE3               	incf	plusw1,f,c
  8353  01165A                     l4276:
  8354                           
  8355                           ;stkvar	_dividend @ sp[(-10)+-8]
  8356  01165A  0EF5               	movlw	-11
  8357  01165C  AEE3               	btfss	plusw1,7,c
  8358  01165E  D027               	goto	l4282
  8359                           
  8360                           ;stkvar	_dividend @ sp[(-10)+-8]
  8361                           ;stkvar	_dividend @ sp[(-10)+-8]
  8362  011660  0EEE               	movlw	-18
  8363  011662  6CE3               	negf	plusw1,c
  8364  011664  0EEF               	movlw	-17
  8365  011666  1EE3               	comf	plusw1,f,c
  8366  011668  0EF0               	movlw	-16
  8367  01166A  1EE3               	comf	plusw1,f,c
  8368  01166C  0EF1               	movlw	-15
  8369  01166E  1EE3               	comf	plusw1,f,c
  8370  011670  0EF2               	movlw	-14
  8371  011672  1EE3               	comf	plusw1,f,c
  8372  011674  0EF3               	movlw	-13
  8373  011676  1EE3               	comf	plusw1,f,c
  8374  011678  0EF4               	movlw	-12
  8375  01167A  1EE3               	comf	plusw1,f,c
  8376  01167C  0EF5               	movlw	-11
  8377  01167E  1EE3               	comf	plusw1,f,c
  8378  011680  E314               	bnc	u2000
  8379  011682  0EEF               	movlw	-17
  8380  011684  2AE3               	incf	plusw1,f,c
  8381  011686  E311               	bnc	u2000
  8382  011688  0EF0               	movlw	-16
  8383  01168A  2AE3               	incf	plusw1,f,c
  8384  01168C  E30E               	bnc	u2000
  8385  01168E  0EF1               	movlw	-15
  8386  011690  2AE3               	incf	plusw1,f,c
  8387  011692  E30B               	bnc	u2000
  8388  011694  0EF2               	movlw	-14
  8389  011696  2AE3               	incf	plusw1,f,c
  8390  011698  E308               	bnc	u2000
  8391  01169A  0EF3               	movlw	-13
  8392  01169C  2AE3               	incf	plusw1,f,c
  8393  01169E  E305               	bnc	u2000
  8394  0116A0  0EF4               	movlw	-12
  8395  0116A2  2AE3               	incf	plusw1,f,c
  8396  0116A4  E302               	bnc	u2000
  8397  0116A6  0EF5               	movlw	-11
  8398  0116A8  2AE3               	incf	plusw1,f,c
  8399  0116AA                     u2000:
  8400                           
  8401                           ;stkvar	_sign @ sp[(-10)+8]
  8402  0116AA  0EFE               	movlw	-2
  8403  0116AC  70E3               	btg	plusw1,0,c
  8404  0116AE                     l4282:
  8405                           
  8406                           ;stkvar	_quotient @ sp[(-10)+0]
  8407  0116AE  0E07               	movlw	7
  8408  0116B0  6E36               	movwf	btemp^0,c
  8409  0116B2  0EF6               	movlw	-10
  8410  0116B4                     u2011:
  8411  0116B4  6AE3               	clrf	plusw1,c
  8412  0116B6  2AE8               	incf	wreg,f,c
  8413  0116B8  0636               	decf	btemp^0,f,c
  8414  0116BA  E2FC               	bc	u2011
  8415                           
  8416                           ;stkvar	_divisor @ sp[(-10)+-16]
  8417  0116BC  0EE6               	movlw	-26
  8418  0116BE  50E3               	movf	plusw1,w,c
  8419  0116C0  E116               	bnz	u2020
  8420  0116C2  0EE7               	movlw	-25
  8421  0116C4  50E3               	movf	plusw1,w,c
  8422  0116C6  E113               	bnz	u2020
  8423  0116C8  0EE8               	movlw	-24
  8424  0116CA  50E3               	movf	plusw1,w,c
  8425  0116CC  E110               	bnz	u2020
  8426  0116CE  0EE9               	movlw	-23
  8427  0116D0  50E3               	movf	plusw1,w,c
  8428  0116D2  E10D               	bnz	u2020
  8429  0116D4  0EEA               	movlw	-22
  8430  0116D6  50E3               	movf	plusw1,w,c
  8431  0116D8  E10A               	bnz	u2020
  8432  0116DA  0EEB               	movlw	-21
  8433  0116DC  50E3               	movf	plusw1,w,c
  8434  0116DE  E107               	bnz	u2020
  8435  0116E0  0EEC               	movlw	-20
  8436  0116E2  50E3               	movf	plusw1,w,c
  8437  0116E4  E104               	bnz	u2020
  8438  0116E6  0EED               	movlw	-19
  8439  0116E8  50E3               	movf	plusw1,w,c
  8440  0116EA  B4D8               	btfsc	status,2,c
  8441  0116EC  D088               	goto	u2050
  8442  0116EE                     u2020:
  8443                           
  8444                           ;stkvar	_counter @ sp[(-10)+9]
  8445  0116EE  0EFF               	movlw	-1
  8446  0116F0  6AE3               	clrf	plusw1,c
  8447  0116F2  D012               	goto	L6
  8448  0116F4                     l4288:
  8449                           
  8450                           ;stkvar	_divisor @ sp[(-10)+-16]
  8451  0116F4  90D8               	bcf	status,0,c
  8452  0116F6  0EE6               	movlw	-26
  8453  0116F8  36E3               	rlcf	plusw1,f,c
  8454  0116FA  0EE7               	movlw	-25
  8455  0116FC  36E3               	rlcf	plusw1,f,c
  8456  0116FE  0EE8               	movlw	-24
  8457  011700  36E3               	rlcf	plusw1,f,c
  8458  011702  0EE9               	movlw	-23
  8459  011704  36E3               	rlcf	plusw1,f,c
  8460  011706  0EEA               	movlw	-22
  8461  011708  36E3               	rlcf	plusw1,f,c
  8462  01170A  0EEB               	movlw	-21
  8463  01170C  36E3               	rlcf	plusw1,f,c
  8464  01170E  0EEC               	movlw	-20
  8465  011710  36E3               	rlcf	plusw1,f,c
  8466  011712  0EED               	movlw	-19
  8467  011714  36E3               	rlcf	plusw1,f,c
  8468                           
  8469                           ;stkvar	_counter @ sp[(-10)+9]
  8470  011716  0EFF               	movlw	-1
  8471  011718                     L6:
  8472  011718  2AE3               	incf	plusw1,f,c
  8473                           
  8474                           ;stkvar	_divisor @ sp[(-10)+-16]
  8475  01171A  0EED               	movlw	-19
  8476  01171C  AEE3               	btfss	plusw1,7,c
  8477  01171E  D7EA               	goto	l4288
  8478  011720                     u2030:
  8479                           
  8480                           ;stkvar	_quotient @ sp[(-10)+0]
  8481  011720  90D8               	bcf	status,0,c
  8482  011722  0EF6               	movlw	-10
  8483  011724  36E3               	rlcf	plusw1,f,c
  8484  011726  0EF7               	movlw	-9
  8485  011728  36E3               	rlcf	plusw1,f,c
  8486  01172A  0EF8               	movlw	-8
  8487  01172C  36E3               	rlcf	plusw1,f,c
  8488  01172E  0EF9               	movlw	-7
  8489  011730  36E3               	rlcf	plusw1,f,c
  8490  011732  0EFA               	movlw	-6
  8491  011734  36E3               	rlcf	plusw1,f,c
  8492  011736  0EFB               	movlw	-5
  8493  011738  36E3               	rlcf	plusw1,f,c
  8494  01173A  0EFC               	movlw	-4
  8495  01173C  36E3               	rlcf	plusw1,f,c
  8496  01173E  0EFD               	movlw	-3
  8497  011740  36E3               	rlcf	plusw1,f,c
  8498                           
  8499                           ;stkvar	_divisor @ sp[(-10)+-16]
  8500                           ;stkvar	_dividend @ sp[(-10)+-8]
  8501  011742  50E1               	movf	fsr1l,w,c
  8502  011744  0FEE               	addlw	-18
  8503  011746  6ED9               	movwf	fsr2l,c
  8504  011748  50E2               	movf	fsr1h,w,c
  8505  01174A  6EDA               	movwf	fsr2h,c
  8506  01174C  0EFF               	movlw	255
  8507  01174E  22DA               	addwfc	fsr2h,f,c
  8508  011750  0EE6               	movlw	-26
  8509  011752  50E3               	movf	plusw1,w,c
  8510  011754  5CDE               	subwf	postinc2,w,c
  8511  011756  0EE7               	movlw	-25
  8512  011758  50E3               	movf	plusw1,w,c
  8513  01175A  58DE               	subwfb	postinc2,w,c
  8514  01175C  0EE8               	movlw	-24
  8515  01175E  50E3               	movf	plusw1,w,c
  8516  011760  58DE               	subwfb	postinc2,w,c
  8517  011762  0EE9               	movlw	-23
  8518  011764  50E3               	movf	plusw1,w,c
  8519  011766  58DE               	subwfb	postinc2,w,c
  8520  011768  0EEA               	movlw	-22
  8521  01176A  50E3               	movf	plusw1,w,c
  8522  01176C  58DE               	subwfb	postinc2,w,c
  8523  01176E  0EEB               	movlw	-21
  8524  011770  50E3               	movf	plusw1,w,c
  8525  011772  58DE               	subwfb	postinc2,w,c
  8526  011774  0EEC               	movlw	-20
  8527  011776  50E3               	movf	plusw1,w,c
  8528  011778  58DE               	subwfb	postinc2,w,c
  8529  01177A  0EED               	movlw	-19
  8530  01177C  50E3               	movf	plusw1,w,c
  8531  01177E  58DE               	subwfb	postinc2,w,c
  8532  011780  A0D8               	btfss	status,0,c
  8533  011782  D021               	goto	l4300
  8534                           
  8535                           ;stkvar	_divisor @ sp[(-10)+-16]
  8536                           ;stkvar	_dividend @ sp[(-10)+-8]
  8537  011784  50E1               	movf	fsr1l,w,c
  8538  011786  0FEE               	addlw	-18
  8539  011788  6ED9               	movwf	fsr2l,c
  8540  01178A  50E2               	movf	fsr1h,w,c
  8541  01178C  6EDA               	movwf	fsr2h,c
  8542  01178E  0EFF               	movlw	255
  8543  011790  22DA               	addwfc	fsr2h,f,c
  8544  011792  0EE6               	movlw	-26
  8545  011794  50E3               	movf	plusw1,w,c
  8546  011796  5EDE               	subwf	postinc2,f,c
  8547  011798  0EE7               	movlw	-25
  8548  01179A  50E3               	movf	plusw1,w,c
  8549  01179C  5ADE               	subwfb	postinc2,f,c
  8550  01179E  0EE8               	movlw	-24
  8551  0117A0  50E3               	movf	plusw1,w,c
  8552  0117A2  5ADE               	subwfb	postinc2,f,c
  8553  0117A4  0EE9               	movlw	-23
  8554  0117A6  50E3               	movf	plusw1,w,c
  8555  0117A8  5ADE               	subwfb	postinc2,f,c
  8556  0117AA  0EEA               	movlw	-22
  8557  0117AC  50E3               	movf	plusw1,w,c
  8558  0117AE  5ADE               	subwfb	postinc2,f,c
  8559  0117B0  0EEB               	movlw	-21
  8560  0117B2  50E3               	movf	plusw1,w,c
  8561  0117B4  5ADE               	subwfb	postinc2,f,c
  8562  0117B6  0EEC               	movlw	-20
  8563  0117B8  50E3               	movf	plusw1,w,c
  8564  0117BA  5ADE               	subwfb	postinc2,f,c
  8565  0117BC  0EED               	movlw	-19
  8566  0117BE  50E3               	movf	plusw1,w,c
  8567  0117C0  5ADE               	subwfb	postinc2,f,c
  8568                           
  8569                           ;stkvar	_quotient @ sp[(-10)+0]
  8570  0117C2  0EF6               	movlw	-10
  8571  0117C4  80E3               	bsf	plusw1,0,c
  8572  0117C6                     l4300:
  8573                           
  8574                           ;stkvar	_divisor @ sp[(-10)+-16]
  8575  0117C6  90D8               	bcf	status,0,c
  8576  0117C8  0EED               	movlw	-19
  8577  0117CA  32E3               	rrcf	plusw1,f,c
  8578  0117CC  0EEC               	movlw	-20
  8579  0117CE  32E3               	rrcf	plusw1,f,c
  8580  0117D0  0EEB               	movlw	-21
  8581  0117D2  32E3               	rrcf	plusw1,f,c
  8582  0117D4  0EEA               	movlw	-22
  8583  0117D6  32E3               	rrcf	plusw1,f,c
  8584  0117D8  0EE9               	movlw	-23
  8585  0117DA  32E3               	rrcf	plusw1,f,c
  8586  0117DC  0EE8               	movlw	-24
  8587  0117DE  32E3               	rrcf	plusw1,f,c
  8588  0117E0  0EE7               	movlw	-25
  8589  0117E2  32E3               	rrcf	plusw1,f,c
  8590  0117E4  0EE6               	movlw	-26
  8591  0117E6  32E3               	rrcf	plusw1,f,c
  8592                           
  8593                           ;stkvar	_counter @ sp[(-10)+9]
  8594  0117E8  0EFF               	movlw	-1
  8595  0117EA  50E3               	movf	plusw1,w,c
  8596  0117EC  6E36               	movwf	btemp^0,c
  8597  0117EE  0E01               	movlw	1
  8598  0117F0  5E36               	subwf	btemp^0,f,c
  8599  0117F2  0EFF               	movlw	-1
  8600  0117F4  0060  F0DB  FFE3   	movff	btemp,plusw1
  8601  0117FA  A4D8               	btfss	status,2,c
  8602  0117FC  D791               	goto	u2030
  8603  0117FE                     u2050:
  8604                           
  8605                           ;stkvar	_sign @ sp[(-10)+8]
  8606  0117FE  0EFE               	movlw	-2
  8607  011800  50E3               	movf	plusw1,w,c
  8608  011802  B4D8               	btfsc	status,2,c
  8609  011804  D025               	goto	u2070
  8610                           
  8611                           ;stkvar	_quotient @ sp[(-10)+0]
  8612                           ;stkvar	_quotient @ sp[(-10)+0]
  8613  011806  0EF6               	movlw	-10
  8614  011808  6CE3               	negf	plusw1,c
  8615  01180A  0EF7               	movlw	-9
  8616  01180C  1EE3               	comf	plusw1,f,c
  8617  01180E  0EF8               	movlw	-8
  8618  011810  1EE3               	comf	plusw1,f,c
  8619  011812  0EF9               	movlw	-7
  8620  011814  1EE3               	comf	plusw1,f,c
  8621  011816  0EFA               	movlw	-6
  8622  011818  1EE3               	comf	plusw1,f,c
  8623  01181A  0EFB               	movlw	-5
  8624  01181C  1EE3               	comf	plusw1,f,c
  8625  01181E  0EFC               	movlw	-4
  8626  011820  1EE3               	comf	plusw1,f,c
  8627  011822  0EFD               	movlw	-3
  8628  011824  1EE3               	comf	plusw1,f,c
  8629  011826  E314               	bnc	u2070
  8630  011828  0EF7               	movlw	-9
  8631  01182A  2AE3               	incf	plusw1,f,c
  8632  01182C  E311               	bnc	u2070
  8633  01182E  0EF8               	movlw	-8
  8634  011830  2AE3               	incf	plusw1,f,c
  8635  011832  E30E               	bnc	u2070
  8636  011834  0EF9               	movlw	-7
  8637  011836  2AE3               	incf	plusw1,f,c
  8638  011838  E30B               	bnc	u2070
  8639  01183A  0EFA               	movlw	-6
  8640  01183C  2AE3               	incf	plusw1,f,c
  8641  01183E  E308               	bnc	u2070
  8642  011840  0EFB               	movlw	-5
  8643  011842  2AE3               	incf	plusw1,f,c
  8644  011844  E305               	bnc	u2070
  8645  011846  0EFC               	movlw	-4
  8646  011848  2AE3               	incf	plusw1,f,c
  8647  01184A  E302               	bnc	u2070
  8648  01184C  0EFD               	movlw	-3
  8649  01184E  2AE3               	incf	plusw1,f,c
  8650  011850                     u2070:
  8651                           
  8652                           ;stkvar	_quotient @ sp[(-10)+0]
  8653  011850  0EF6               	movlw	246
  8654  011852  24E1               	addwf	fsr1l,w,c
  8655  011854  6ED9               	movwf	fsr2l,c
  8656  011856  0EFF               	movlw	255
  8657  011858  20E2               	addwfc	fsr1h,w,c
  8658  01185A  6EDA               	movwf	fsr2h,c
  8659                           
  8660                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  8661  01185C  0E08               	movlw	8
  8662  01185E  6E36               	movwf	btemp^0,c
  8663  011860  0EEE               	movlw	-18
  8664  011862                     us208999:
  8665  011862  006F FF7B FFE3     	movff	postinc2,plusw1
  8666  011868  28E8               	incf	wreg,w,c
  8667  01186A  2E36               	decfsz	btemp^0,f,c
  8668  01186C  D7FA               	bra	us208999
  8669                           
  8670                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  8671  01186E  0EF6               	movlw	246
  8672  011870  26E1               	addwf	fsr1l,f,c
  8673  011872  0EFF               	movlw	255
  8674  011874  22E2               	addwfc	fsr1h,f,c
  8675  011876  0012               	return		;funcret
  8676  011878                     __end_of___aodiv:
  8677                           	opt callstack 0
  8678                           
  8679 ;; *************** function _ctoa *****************
  8680 ;; Defined at:
  8681 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8684 ;;		 -> f(6), NULL(0), 
  8685 ;;  c               1  [STACK] unsigned char 
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  w               2  [STACK] int 
  8688 ;;  l               2    0        int 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  2  [STACK] int 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;Total ram usage:        0 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:   11
  8705 ;; This function calls:
  8706 ;;		_pad
  8707 ;; This function is called by:
  8708 ;;		_vfpfcnvrt
  8709 ;; This function uses a reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text40
  8713  0128E2                     __ptext40:
  8714                           	opt callstack 0
  8715  0128E2                     _ctoa:
  8716                           	opt callstack 0
  8717                           
  8718                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8719  0128E2  52E6               	movf	postinc1,f,c
  8720  0128E4  52E6               	movf	postinc1,f,c
  8721                           
  8722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  8723                           
  8724                           ;incstack = 0
  8725  0128E6  501F               	movf	_width^0,w,c
  8726  0128E8  1020               	iorwf	(_width+1)^0,w,c
  8727  0128EA  A4D8               	btfss	status,2,c
  8728  0128EC  D009               	goto	l5778
  8729                           
  8730                           ;stkvar	_w @ sp[(-2)+0]
  8731  0128EE  0EFE               	movlw	-2
  8732  0128F0  0060  F07F  FFE3   	movff	_width,plusw1
  8733  0128F6  0EFF               	movlw	-1
  8734  0128F8  0060  F083  FFE3   	movff	_width+1,plusw1
  8735  0128FE  D016               	goto	l5780
  8736  012900                     l5778:
  8737  012900  0EFF               	movlw	255
  8738  012902  6E40               	movwf	(btemp+10)^0,c
  8739  012904  0EFF               	movlw	255
  8740  012906  6E41               	movwf	(btemp+11)^0,c
  8741  012908  0060  F07C  F03E   	movff	_width,btemp+8
  8742  01290E  0060  F080  F03F   	movff	_width+1,btemp+9
  8743  012914  5040               	movf	(btemp+10)^0,w,c
  8744  012916  263E               	addwf	(btemp+8)^0,f,c
  8745  012918  5041               	movf	(btemp+11)^0,w,c
  8746  01291A  223F               	addwfc	(btemp+9)^0,f,c
  8747                           
  8748                           ;stkvar	_w @ sp[(-2)+0]
  8749  01291C  0EFE               	movlw	-2
  8750  01291E  0060  F0FB  FFE3   	movff	btemp+8,plusw1
  8751  012924  0EFF               	movlw	-1
  8752  012926  0060  F0FF  FFE3   	movff	btemp+9,plusw1
  8753  01292C                     l5780:
  8754                           
  8755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  8756                           ;stkvar	_c @ sp[(-2)+-3]
  8757  01292C  0EFB               	movlw	-5
  8758  01292E  006F FF8C  F0AA    	movff	plusw1,_dbuf
  8759                           
  8760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  8761  012934  0100               	movlb	0	; () banked
  8762  012936  6BAB               	clrf	(_dbuf+1)& (0+255),b
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  8766                           ;stkvar	_w @ sp[(-2)+0]
  8767  012938  0EFE               	movlw	-2
  8768  01293A  006F FF8F FFE6     	movff	plusw1,postinc1
  8769  012940  006F FF8F FFE6     	movff	plusw1,postinc1
  8770  012946  0EAA               	movlw	_dbuf& (0+255)
  8771  012948  6EE6               	movwf	postinc1,c
  8772                           
  8773                           ;stkvar	_fp @ sp[(-5)+-2]
  8774  01294A  0EF9               	movlw	-7
  8775  01294C  006F FF8F FFE6     	movff	plusw1,postinc1
  8776  012952  006F FF8F FFE6     	movff	plusw1,postinc1
  8777  012958  EC9A  F090         	call	_pad	;wreg free
  8778                           
  8779                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  8780  01295C  0EFB               	movlw	251
  8781  01295E  26E1               	addwf	fsr1l,f,c
  8782  012960  0EFF               	movlw	255
  8783  012962  22E2               	addwfc	fsr1h,f,c
  8784  012964  0012               	return		;funcret
  8785  012966                     __end_of_ctoa:
  8786                           	opt callstack 0
  8787                           
  8788 ;; *************** function _pad *****************
  8789 ;; Defined at:
  8790 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8793 ;;		 -> f(6), NULL(0), 
  8794 ;;  buf             1  [STACK] PTR unsigned char 
  8795 ;;		 -> dbuf(32), 
  8796 ;;  p               2  [STACK] int 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  w               2  [STACK] int 
  8799 ;;  i               2  [STACK] int 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  2  [STACK] int 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:   10
  8816 ;; This function calls:
  8817 ;;		_fputc
  8818 ;;		_fputs
  8819 ;;		_strlen
  8820 ;; This function is called by:
  8821 ;;		_ctoa
  8822 ;;		_dtoa
  8823 ;;		_xtoa
  8824 ;; This function uses a reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text41
  8828  012134                     __ptext41:
  8829                           	opt callstack 0
  8830  012134                     _pad:
  8831                           	opt callstack 0
  8832                           
  8833                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8834  012134  52E6               	movf	postinc1,f,c
  8835  012136  52E6               	movf	postinc1,f,c
  8836  012138  52E6               	movf	postinc1,f,c
  8837  01213A  52E6               	movf	postinc1,f,c
  8838                           
  8839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8840                           
  8841                           ;incstack = 0
  8842  01213C  A023               	btfss	_flags^0,0,c
  8843  01213E  D00C               	goto	l5756
  8844                           
  8845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8846                           ;stkvar	_fp @ sp[(-4)+-2]
  8847  012140  0EFA               	movlw	-6
  8848  012142  006F FF8F FFE6     	movff	plusw1,postinc1
  8849  012148  006F FF8F FFE6     	movff	plusw1,postinc1
  8850                           
  8851                           ;stkvar	_buf @ sp[(-6)+-3]
  8852  01214E  0EF7               	movlw	-9
  8853  012150  50E3               	movf	plusw1,w,c
  8854  012152  6EE6               	movwf	postinc1,c
  8855  012154  ECB3  F094         	call	_fputs	;wreg free
  8856  012158                     l5756:
  8857                           
  8858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8859                           ;stkvar	_p @ sp[(-4)+-5]
  8860  012158  0EF8               	movlw	-8
  8861  01215A  BEE3               	btfsc	plusw1,7,c
  8862  01215C  D011               	goto	l5760
  8863                           
  8864                           ;stkvar	_p @ sp[(-4)+-5]
  8865                           ;stkvar	_w @ sp[(-4)+0]
  8866  01215E  0EF7               	movlw	-9
  8867  012160  006F FF8C  F036    	movff	plusw1,btemp
  8868  012166  0EFC               	movlw	-4
  8869  012168  0060  F0DB  FFE3   	movff	btemp,plusw1
  8870  01216E  0EF8               	movlw	-8
  8871  012170  006F FF8C  F036    	movff	plusw1,btemp
  8872  012176  0EFD               	movlw	-3
  8873  012178  0060  F0DB  FFE3   	movff	btemp,plusw1
  8874  01217E  D004               	goto	l1686
  8875  012180                     l5760:
  8876                           
  8877                           ;stkvar	_w @ sp[(-4)+0]
  8878  012180  0EFC               	movlw	-4
  8879  012182  6AE3               	clrf	plusw1,c
  8880  012184  0EFD               	movlw	-3
  8881  012186  6AE3               	clrf	plusw1,c
  8882  012188                     l1686:
  8883                           
  8884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8885                           ;stkvar	_i @ sp[(-4)+2]
  8886  012188  0EFE               	movlw	-2
  8887  01218A  6AE3               	clrf	plusw1,c
  8888  01218C  0EFF               	movlw	-1
  8889  01218E  6AE3               	clrf	plusw1,c
  8890                           
  8891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8892  012190  D01E               	goto	l5766
  8893  012192                     l5762:
  8894                           
  8895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8896                           ;stkvar	_fp @ sp[(-4)+-2]
  8897  012192  0EFA               	movlw	-6
  8898  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8899  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8900  0121A0  0E20               	movlw	32
  8901  0121A2  6EE6               	movwf	postinc1,c
  8902  0121A4  0E00               	movlw	0
  8903  0121A6  6EE6               	movwf	postinc1,c
  8904  0121A8  ECFC  F08E         	call	_fputc	;wreg free
  8905                           
  8906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8907                           ;stkvar	_i @ sp[(-4)+2]
  8908  0121AC  0EFE               	movlw	-2
  8909  0121AE  50E3               	movf	plusw1,w,c
  8910  0121B0  0F01               	addlw	1
  8911  0121B2  6E36               	movwf	btemp^0,c
  8912  0121B4  0EFE               	movlw	-2
  8913  0121B6  0060  F0DB  FFE3   	movff	btemp,plusw1
  8914  0121BC  6A36               	clrf	btemp^0,c
  8915  0121BE  0EFF               	movlw	-1
  8916  0121C0  50E3               	movf	plusw1,w,c
  8917  0121C2  2036               	addwfc	btemp^0,w,c
  8918  0121C4  6E36               	movwf	btemp^0,c
  8919  0121C6  0EFF               	movlw	-1
  8920  0121C8  0060  F0DB  FFE3   	movff	btemp,plusw1
  8921  0121CE                     l5766:
  8922                           
  8923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8924                           ;stkvar	_w @ sp[(-4)+0]
  8925                           ;stkvar	_i @ sp[(-4)+2]
  8926  0121CE  50E1               	movf	fsr1l,w,c
  8927  0121D0  0FFE               	addlw	-2
  8928  0121D2  6ED9               	movwf	fsr2l,c
  8929  0121D4  50E2               	movf	fsr1h,w,c
  8930  0121D6  6EDA               	movwf	fsr2h,c
  8931  0121D8  0EFF               	movlw	255
  8932  0121DA  22DA               	addwfc	fsr2h,f,c
  8933  0121DC  0EFC               	movlw	-4
  8934  0121DE  50E3               	movf	plusw1,w,c
  8935  0121E0  5CDE               	subwf	postinc2,w,c
  8936  0121E2  50DE               	movf	postinc2,w,c
  8937  0121E4  0A80               	xorlw	128
  8938  0121E6  6E36               	movwf	btemp^0,c
  8939  0121E8  0EFD               	movlw	-3
  8940  0121EA  50E3               	movf	plusw1,w,c
  8941  0121EC  0A80               	xorlw	128
  8942  0121EE  5836               	subwfb	btemp^0,w,c
  8943  0121F0  A0D8               	btfss	status,0,c
  8944  0121F2  D7CF               	goto	l5762
  8945                           
  8946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8947  0121F4  B023               	btfsc	_flags^0,0,c
  8948  0121F6  D00C               	goto	l5770
  8949                           
  8950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8951                           ;stkvar	_fp @ sp[(-4)+-2]
  8952  0121F8  0EFA               	movlw	-6
  8953  0121FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8954  012200  006F FF8F FFE6     	movff	plusw1,postinc1
  8955                           
  8956                           ;stkvar	_buf @ sp[(-6)+-3]
  8957  012206  0EF7               	movlw	-9
  8958  012208  50E3               	movf	plusw1,w,c
  8959  01220A  6EE6               	movwf	postinc1,c
  8960  01220C  ECB3  F094         	call	_fputs	;wreg free
  8961  012210                     l5770:
  8962                           
  8963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8964                           ;stkvar	_w @ sp[(-4)+0]
  8965                           ;stkvar	_buf @ sp[(-4)+-3]
  8966  012210  0EF9               	movlw	-7
  8967  012212  006F FF8C  F041    	movff	plusw1,btemp+11
  8968  012218  0060  F107  FFE6   	movff	btemp+11,postinc1
  8969  01221E  0E00               	movlw	0
  8970  012220  6EE6               	movwf	postinc1,c
  8971  012222  EC4D  F093         	call	_strlen	;wreg free
  8972  012226  0EFC               	movlw	-4
  8973  012228  50E3               	movf	plusw1,w,c
  8974  01222A  2636               	addwf	btemp^0,f,c
  8975  01222C  0EFD               	movlw	-3
  8976  01222E  50E3               	movf	plusw1,w,c
  8977  012230  2237               	addwfc	(btemp+1)^0,f,c
  8978                           
  8979                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
  8980  012232  0EF7               	movlw	247
  8981  012234  26E1               	addwf	fsr1l,f,c
  8982  012236  0EFF               	movlw	255
  8983  012238  22E2               	addwfc	fsr1h,f,c
  8984  01223A  0012               	return		;funcret
  8985  01223C                     __end_of_pad:
  8986                           	opt callstack 0
  8987                           
  8988 ;; *************** function _strlen *****************
  8989 ;; Defined at:
  8990 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  s               2  [STACK] PTR const unsigned char 
  8993 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8994 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  8995 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  a               2  [STACK] PTR const unsigned char 
  8998 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8999 ;;		 -> STR_14(9), STR_13(12), D.lcd(216), D(218), 
  9000 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2  [STACK] unsigned int 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9014 ;;Total ram usage:        0 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    6
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_eaDogM_WriteString
  9021 ;;		_pad
  9022 ;;		_stoa
  9023 ;; This function uses a reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text42
  9027  01269A                     __ptext42:
  9028                           	opt callstack 0
  9029  01269A                     _strlen:
  9030                           	opt callstack 0
  9031                           
  9032                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9033  01269A  52E6               	movf	postinc1,f,c
  9034  01269C  52E6               	movf	postinc1,f,c
  9035                           
  9036                           ;stkvar	_s @ sp[(-2)+-2]
  9037                           
  9038                           ;incstack = 0
  9039  01269E  0EFC               	movlw	-4
  9040  0126A0  006F FF8C  F040    	movff	plusw1,btemp+10
  9041  0126A6  0EFD               	movlw	-3
  9042  0126A8  006F FF8C  F041    	movff	plusw1,btemp+11
  9043                           
  9044                           ;stkvar	_a @ sp[(-2)+0]
  9045  0126AE  0EFF               	movlw	-1
  9046  0126B0  0060  F107  FFE3   	movff	btemp+11,plusw1
  9047  0126B6  0EFE               	movlw	-2
  9048  0126B8  0060  F103  FFE3   	movff	btemp+10,plusw1
  9049  0126BE  D011               	goto	l4198
  9050  0126C0                     l4196:
  9051                           
  9052                           ;stkvar	_s @ sp[(-2)+-2]
  9053  0126C0  0EFC               	movlw	-4
  9054  0126C2  50E3               	movf	plusw1,w,c
  9055  0126C4  0F01               	addlw	1
  9056  0126C6  6E36               	movwf	btemp^0,c
  9057  0126C8  0EFC               	movlw	-4
  9058  0126CA  0060  F0DB  FFE3   	movff	btemp,plusw1
  9059  0126D0  6A36               	clrf	btemp^0,c
  9060  0126D2  0EFD               	movlw	-3
  9061  0126D4  50E3               	movf	plusw1,w,c
  9062  0126D6  2036               	addwfc	btemp^0,w,c
  9063  0126D8  6E36               	movwf	btemp^0,c
  9064  0126DA  0EFD               	movlw	-3
  9065  0126DC  0060  F0DB  FFE3   	movff	btemp,plusw1
  9066  0126E2                     l4198:
  9067                           
  9068                           ;stkvar	_s @ sp[(-2)+-2]
  9069  0126E2  0EFC               	movlw	-4
  9070  0126E4  006F FF8F FFF6     	movff	plusw1,tblptrl
  9071  0126EA  0EFD               	movlw	-3
  9072  0126EC  006F FF8F FFF7     	movff	plusw1,tblptrh
  9073  0126F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9074  0126F4  6EF8               	movwf	tblptru,c
  9075  0126F6  0E1F               	movlw	(high __ramtop+-1)
  9076  0126F8  64F7               	cpfsgt	tblptrh,c
  9077  0126FA  D003               	bra	u1807
  9078  0126FC  0008               	tblrd		*
  9079  0126FE  50F5               	movf	tablat,w,c
  9080  012700  D007               	bra	u1800
  9081  012702                     u1807:
  9082  012702  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9083  012708  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9084  01270E  50EF               	movf	indf0,w,c
  9085  012710                     u1800:
  9086  012710  0900               	iorlw	0
  9087  012712  A4D8               	btfss	status,2,c
  9088  012714  D7D5               	goto	l4196
  9089                           
  9090                           ;stkvar	_a @ sp[(-2)+0]
  9091                           ;stkvar	_s @ sp[(-2)+-2]
  9092  012716  0EFC               	movlw	-4
  9093  012718  006F FF8C  F036    	movff	plusw1,btemp
  9094  01271E  0EFD               	movlw	-3
  9095  012720  006F FF8C  F037    	movff	plusw1,btemp+1
  9096  012726  0EFE               	movlw	-2
  9097  012728  50E3               	movf	plusw1,w,c
  9098  01272A  5E36               	subwf	btemp^0,f,c
  9099  01272C  0EFF               	movlw	-1
  9100  01272E  50E3               	movf	plusw1,w,c
  9101  012730  5A37               	subwfb	(btemp+1)^0,f,c
  9102                           
  9103                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9104  012732  52E5               	movf	postdec1,f,c
  9105  012734  52E5               	movf	postdec1,f,c
  9106  012736  52E5               	movf	postdec1,f,c
  9107  012738  52E5               	movf	postdec1,f,c
  9108  01273A  0012               	return		;funcret
  9109  01273C                     __end_of_strlen:
  9110                           	opt callstack 0
  9111                           
  9112 ;; *************** function _fputs *****************
  9113 ;; Defined at:
  9114 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;  s               1  [STACK] PTR const unsigned char 
  9117 ;;		 -> dbuf(32), 
  9118 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9119 ;;		 -> f(6), NULL(0), 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;  i               2  [STACK] int 
  9122 ;;  c               1  [STACK] unsigned char 
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  2  [STACK] int 
  9125 ;; Registers used:
  9126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    9
  9139 ;; This function calls:
  9140 ;;		_fputc
  9141 ;; This function is called by:
  9142 ;;		_pad
  9143 ;; This function uses a reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text43
  9147  012966                     __ptext43:
  9148                           	opt callstack 0
  9149  012966                     _fputs:
  9150                           	opt callstack 0
  9151                           
  9152                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9153  012966  52E6               	movf	postinc1,f,c
  9154  012968  52E6               	movf	postinc1,f,c
  9155  01296A  52E6               	movf	postinc1,f,c
  9156                           
  9157                           ;stkvar	_i @ sp[(-3)+0]
  9158                           
  9159                           ;incstack = 0
  9160  01296C  0EFD               	movlw	-3
  9161  01296E  6AE3               	clrf	plusw1,c
  9162  012970  0EFE               	movlw	-2
  9163  012972  6AE3               	clrf	plusw1,c
  9164  012974  D01F               	goto	l5750
  9165  012976                     l5746:
  9166                           
  9167                           ;stkvar	_fp @ sp[(-3)+-3]
  9168  012976  0EFA               	movlw	-6
  9169  012978  006F FF8F FFE6     	movff	plusw1,postinc1
  9170  01297E  006F FF8F FFE6     	movff	plusw1,postinc1
  9171                           
  9172                           ;stkvar	_c @ sp[(-5)+2]
  9173  012984  0EFD               	movlw	-3
  9174  012986  50E3               	movf	plusw1,w,c
  9175  012988  6EE6               	movwf	postinc1,c
  9176  01298A  0E00               	movlw	0
  9177  01298C  6EE6               	movwf	postinc1,c
  9178  01298E  ECFC  F08E         	call	_fputc	;wreg free
  9179                           
  9180                           ;stkvar	_i @ sp[(-3)+0]
  9181  012992  0EFD               	movlw	-3
  9182  012994  50E3               	movf	plusw1,w,c
  9183  012996  0F01               	addlw	1
  9184  012998  6E36               	movwf	btemp^0,c
  9185  01299A  0EFD               	movlw	-3
  9186  01299C  0060  F0DB  FFE3   	movff	btemp,plusw1
  9187  0129A2  6A36               	clrf	btemp^0,c
  9188  0129A4  0EFE               	movlw	-2
  9189  0129A6  50E3               	movf	plusw1,w,c
  9190  0129A8  2036               	addwfc	btemp^0,w,c
  9191  0129AA  6E36               	movwf	btemp^0,c
  9192  0129AC  0EFE               	movlw	-2
  9193  0129AE  0060  F0DB  FFE3   	movff	btemp,plusw1
  9194  0129B4                     l5750:
  9195                           
  9196                           ;stkvar	_i @ sp[(-3)+0]
  9197  0129B4  0EFD               	movlw	-3
  9198  0129B6  006F FF8C  F041    	movff	plusw1,btemp+11
  9199                           
  9200                           ;stkvar	_s @ sp[(-3)+-1]
  9201  0129BC  0EFC               	movlw	-4
  9202  0129BE  50E3               	movf	plusw1,w,c
  9203  0129C0  2441               	addwf	(btemp+11)^0,w,c
  9204  0129C2  6ED9               	movwf	fsr2l,c
  9205  0129C4  6ADA               	clrf	fsr2h,c
  9206  0129C6  50DF               	movf	indf2,w,c
  9207  0129C8  6E41               	movwf	(btemp+11)^0,c
  9208                           
  9209                           ;stkvar	_c @ sp[(-3)+2]
  9210  0129CA  0EFF               	movlw	-1
  9211  0129CC  0060  F107  FFE3   	movff	btemp+11,plusw1
  9212  0129D2  0EFF               	movlw	-1
  9213  0129D4  50E3               	movf	plusw1,w,c
  9214  0129D6  A4D8               	btfss	status,2,c
  9215  0129D8  D7CE               	goto	l5746
  9216                           
  9217                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
  9218  0129DA  0EFA               	movlw	250
  9219  0129DC  26E1               	addwf	fsr1l,f,c
  9220  0129DE  0EFF               	movlw	255
  9221  0129E0  22E2               	addwfc	fsr1h,f,c
  9222  0129E2  0012               	return		;funcret
  9223  0129E4                     __end_of_fputs:
  9224                           	opt callstack 0
  9225                           
  9226 ;; *************** function _fputc *****************
  9227 ;; Defined at:
  9228 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  c               2  [STACK] int 
  9231 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9232 ;;		 -> f(6), NULL(0), 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  2  [STACK] int 
  9237 ;; Registers used:
  9238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9248 ;;Total ram usage:        0 bytes
  9249 ;; Hardware stack levels used:    1
  9250 ;; Hardware stack levels required when called:    8
  9251 ;; This function calls:
  9252 ;;		_putch
  9253 ;; This function is called by:
  9254 ;;		_pad
  9255 ;;		_stoa
  9256 ;;		_vfpfcnvrt
  9257 ;;		_fputs
  9258 ;; This function uses a reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text44
  9262  011DF8                     __ptext44:
  9263                           	opt callstack 0
  9264  011DF8                     _fputc:
  9265                           	opt callstack 13
  9266                           
  9267                           ;stkvar	_fp @ sp[(0)+-4]
  9268                           
  9269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9270                           ;incstack = 0
  9271  011DF8  0EFC               	movlw	-4
  9272  011DFA  006F FF8C  F036    	movff	plusw1,btemp
  9273  011E00  0EFD               	movlw	-3
  9274  011E02  50E3               	movf	plusw1,w,c
  9275  011E04  1036               	iorwf	btemp^0,w,c
  9276  011E06  B4D8               	btfsc	status,2,c
  9277  011E08  D009               	goto	u3440
  9278                           
  9279                           ;stkvar	_fp @ sp[(0)+-4]
  9280  011E0A  0EFC               	movlw	-4
  9281  011E0C  006F FF8C  F036    	movff	plusw1,btemp
  9282  011E12  0EFD               	movlw	-3
  9283  011E14  50E3               	movf	plusw1,w,c
  9284  011E16  1036               	iorwf	btemp^0,w,c
  9285  011E18  A4D8               	btfss	status,2,c
  9286  011E1A  D006               	goto	l5734
  9287  011E1C                     u3440:
  9288                           
  9289                           ;stkvar	_c @ sp[(0)+-2]
  9290  011E1C  0EFE               	movlw	-2
  9291  011E1E  50E3               	movf	plusw1,w,c
  9292  011E20  6EE6               	movwf	postinc1,c
  9293  011E22  ECA5  F09B         	call	_putch	;wreg free
  9294  011E26  D075               	goto	l2511
  9295  011E28                     l5734:
  9296                           
  9297                           ;stkvar	_fp @ sp[(0)+-4]
  9298  011E28  0EFC               	movlw	-4
  9299  011E2A  006F FF8C  F040    	movff	plusw1,btemp+10
  9300  011E30  0EFD               	movlw	-3
  9301  011E32  006F FF8C  F041    	movff	plusw1,btemp+11
  9302  011E38  0E04               	movlw	4
  9303  011E3A  2440               	addwf	(btemp+10)^0,w,c
  9304  011E3C  6ED9               	movwf	fsr2l,c
  9305  011E3E  0E00               	movlw	0
  9306  011E40  2041               	addwfc	(btemp+11)^0,w,c
  9307  011E42  6EDA               	movwf	fsr2h,c
  9308  011E44  50DE               	movf	postinc2,w,c
  9309  011E46  10DE               	iorwf	postinc2,w,c
  9310  011E48  B4D8               	btfsc	status,2,c
  9311  011E4A  D026               	goto	u3460
  9312                           
  9313                           ;stkvar	_fp @ sp[(0)+-4]
  9314  011E4C  0EFC               	movlw	-4
  9315  011E4E  006F FF8C  F040    	movff	plusw1,btemp+10
  9316  011E54  0EFD               	movlw	-3
  9317  011E56  006F FF8C  F041    	movff	plusw1,btemp+11
  9318  011E5C  0E04               	movlw	4
  9319  011E5E  2440               	addwf	(btemp+10)^0,w,c
  9320  011E60  6ED9               	movwf	fsr2l,c
  9321  011E62  0E00               	movlw	0
  9322  011E64  2041               	addwfc	(btemp+11)^0,w,c
  9323  011E66  6EDA               	movwf	fsr2h,c
  9324                           
  9325                           ;stkvar	_fp @ sp[(0)+-4]
  9326  011E68  0EFC               	movlw	-4
  9327  011E6A  006F FF8C  F040    	movff	plusw1,btemp+10
  9328  011E70  0EFD               	movlw	-3
  9329  011E72  006F FF8C  F041    	movff	plusw1,btemp+11
  9330  011E78  0E02               	movlw	2
  9331  011E7A  2440               	addwf	(btemp+10)^0,w,c
  9332  011E7C  6EE9               	movwf	fsr0l,c
  9333  011E7E  0E00               	movlw	0
  9334  011E80  2041               	addwfc	(btemp+11)^0,w,c
  9335  011E82  6EEA               	movwf	fsr0h,c
  9336  011E84  50DE               	movf	postinc2,w,c
  9337  011E86  5CEE               	subwf	postinc0,w,c
  9338  011E88  50EE               	movf	postinc0,w,c
  9339  011E8A  0A80               	xorlw	128
  9340  011E8C  6E36               	movwf	btemp^0,c
  9341  011E8E  50DE               	movf	postinc2,w,c
  9342  011E90  0A80               	xorlw	128
  9343  011E92  5836               	subwfb	btemp^0,w,c
  9344  011E94  B0D8               	btfsc	status,0,c
  9345  011E96  D03D               	goto	l2511
  9346  011E98                     u3460:
  9347                           
  9348                           ;stkvar	_c @ sp[(0)+-2]
  9349                           ;stkvar	_fp @ sp[(0)+-4]
  9350  011E98  0EFC               	movlw	-4
  9351  011E9A  006F FF8C  F040    	movff	plusw1,btemp+10
  9352  011EA0  0EFD               	movlw	-3
  9353  011EA2  006F FF8C  F041    	movff	plusw1,btemp+11
  9354  011EA8  0E02               	movlw	2
  9355  011EAA  2440               	addwf	(btemp+10)^0,w,c
  9356  011EAC  6ED9               	movwf	fsr2l,c
  9357  011EAE  0E00               	movlw	0
  9358  011EB0  2041               	addwfc	(btemp+11)^0,w,c
  9359  011EB2  6EDA               	movwf	fsr2h,c
  9360  011EB4  006F FF78  F040    	movff	postinc2,btemp+10
  9361  011EBA  006F FF74  F041    	movff	postdec2,btemp+11
  9362                           
  9363                           ;stkvar	_fp @ sp[(0)+-4]
  9364  011EC0  0EFC               	movlw	-4
  9365  011EC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9366  011EC8  0EFD               	movlw	-3
  9367  011ECA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9368  011ED0  006F FF78  F03E    	movff	postinc2,btemp+8
  9369  011ED6  006F FF74  F03F    	movff	postdec2,btemp+9
  9370  011EDC  5040               	movf	(btemp+10)^0,w,c
  9371  011EDE  243E               	addwf	(btemp+8)^0,w,c
  9372  011EE0  6ED9               	movwf	fsr2l,c
  9373  011EE2  5041               	movf	(btemp+11)^0,w,c
  9374  011EE4  203F               	addwfc	(btemp+9)^0,w,c
  9375  011EE6  6EDA               	movwf	fsr2h,c
  9376  011EE8  0EFE               	movlw	-2
  9377  011EEA  006F FF8F FFDF     	movff	plusw1,indf2
  9378                           
  9379                           ;stkvar	_fp @ sp[(0)+-4]
  9380  011EF0  0EFC               	movlw	-4
  9381  011EF2  006F FF8C  F040    	movff	plusw1,btemp+10
  9382  011EF8  0EFD               	movlw	-3
  9383  011EFA  006F FF8C  F041    	movff	plusw1,btemp+11
  9384  011F00  0E02               	movlw	2
  9385  011F02  2440               	addwf	(btemp+10)^0,w,c
  9386  011F04  6ED9               	movwf	fsr2l,c
  9387  011F06  0E00               	movlw	0
  9388  011F08  2041               	addwfc	(btemp+11)^0,w,c
  9389  011F0A  6EDA               	movwf	fsr2h,c
  9390  011F0C  2ADE               	incf	postinc2,f,c
  9391  011F0E  0E00               	movlw	0
  9392  011F10  22DD               	addwfc	postdec2,f,c
  9393  011F12                     l2511:
  9394                           
  9395                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9396  011F12  52E5               	movf	postdec1,f,c
  9397  011F14  52E5               	movf	postdec1,f,c
  9398  011F16  52E5               	movf	postdec1,f,c
  9399  011F18  52E5               	movf	postdec1,f,c
  9400  011F1A  0012               	return		;funcret
  9401  011F1C                     __end_of_fputc:
  9402                           	opt callstack 0
  9403                           
  9404 ;; *************** function _putch *****************
  9405 ;; Defined at:
  9406 ;;		line 155 in file "eadog.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  c               1  [STACK] unsigned char 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1  [STACK] void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9424 ;;Total ram usage:        0 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:    7
  9427 ;; This function calls:
  9428 ;;		_ringBufS_put_dma
  9429 ;; This function is called by:
  9430 ;;		_fputc
  9431 ;; This function uses a reentrant model
  9432 ;;
  9433                           
  9434                           	psect	text45
  9435  01374A                     __ptext45:
  9436                           	opt callstack 0
  9437  01374A                     _putch:
  9438                           	opt callstack 13
  9439                           
  9440                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
  9441                           ;stkvar	_c @ sp[(0)+-1]
  9442                           
  9443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9444                           ;incstack = 0
  9445  01374A  0EFF               	movlw	-1
  9446  01374C  50E3               	movf	plusw1,w,c
  9447  01374E  6EE6               	movwf	postinc1,c
  9448  013750  0060  F27B  FFE6   	movff	_spi_link+6,postinc1
  9449  013756  0060  F27F  FFE6   	movff	_spi_link+7,postinc1
  9450  01375C  ECA5  F092         	call	_ringBufS_put_dma	;wreg free
  9451                           
  9452                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  9453  013760  52E5               	movf	postdec1,f,c
  9454  013762  0012               	return		;funcret
  9455  013764                     __end_of_putch:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _ringBufS_put_dma *****************
  9459 ;; Defined at:
  9460 ;;		line 67 in file "ringbufs.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9463 ;;		 -> ring_buf1(67), 
  9464 ;;  c               1  [STACK] const unsigned char 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1  [STACK] void 
  9469 ;; Registers used:
  9470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    6
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_putch
  9487 ;; This function uses a reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text46
  9491  01254A                     __ptext46:
  9492                           	opt callstack 0
  9493  01254A                     _ringBufS_put_dma:
  9494                           	opt callstack 13
  9495                           
  9496                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
  9497                           ;stkvar	__this @ sp[(0)+-2]
  9498                           
  9499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9500                           ;incstack = 0
  9501  01254A  0EFE               	movlw	-2
  9502  01254C  006F FF8C  F040    	movff	plusw1,btemp+10
  9503  012552  0EFF               	movlw	-1
  9504  012554  006F FF8C  F041    	movff	plusw1,btemp+11
  9505  01255A  0E42               	movlw	66
  9506  01255C  2440               	addwf	(btemp+10)^0,w,c
  9507  01255E  6ED9               	movwf	fsr2l,c
  9508  012560  0E00               	movlw	0
  9509  012562  2041               	addwfc	(btemp+11)^0,w,c
  9510  012564  6EDA               	movwf	fsr2h,c
  9511  012566  0E40               	movlw	64
  9512  012568  60DF               	cpfslt	indf2,c
  9513  01256A  D040               	goto	l1462
  9514                           
  9515                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
  9516                           ;stkvar	_c @ sp[(0)+-3]
  9517                           ;stkvar	__this @ sp[(0)+-2]
  9518  01256C  0EFE               	movlw	-2
  9519  01256E  006F FF8C  F040    	movff	plusw1,btemp+10
  9520  012574  0EFF               	movlw	-1
  9521  012576  006F FF8C  F041    	movff	plusw1,btemp+11
  9522  01257C  0E40               	movlw	64
  9523  01257E  2440               	addwf	(btemp+10)^0,w,c
  9524  012580  6ED9               	movwf	fsr2l,c
  9525  012582  0E00               	movlw	0
  9526  012584  2041               	addwfc	(btemp+11)^0,w,c
  9527  012586  6EDA               	movwf	fsr2h,c
  9528  012588  50DF               	movf	indf2,w,c
  9529  01258A  6E41               	movwf	(btemp+11)^0,c
  9530                           
  9531                           ;stkvar	__this @ sp[(0)+-2]
  9532  01258C  0EFE               	movlw	-2
  9533  01258E  006F FF8C  F03E    	movff	plusw1,btemp+8
  9534  012594  0EFF               	movlw	-1
  9535  012596  006F FF8C  F03F    	movff	plusw1,btemp+9
  9536  01259C  5041               	movf	(btemp+11)^0,w,c
  9537  01259E  243E               	addwf	(btemp+8)^0,w,c
  9538  0125A0  6ED9               	movwf	fsr2l,c
  9539  0125A2  0E00               	movlw	0
  9540  0125A4  203F               	addwfc	(btemp+9)^0,w,c
  9541  0125A6  6EDA               	movwf	fsr2h,c
  9542  0125A8  0EFD               	movlw	-3
  9543  0125AA  006F FF8F FFDF     	movff	plusw1,indf2
  9544                           
  9545                           ;ringbufs.c: 71:   ++_this->head;
  9546                           ;stkvar	__this @ sp[(0)+-2]
  9547  0125B0  0EFE               	movlw	-2
  9548  0125B2  006F FF8C  F040    	movff	plusw1,btemp+10
  9549  0125B8  0EFF               	movlw	-1
  9550  0125BA  006F FF8C  F041    	movff	plusw1,btemp+11
  9551  0125C0  0E40               	movlw	64
  9552  0125C2  2440               	addwf	(btemp+10)^0,w,c
  9553  0125C4  6ED9               	movwf	fsr2l,c
  9554  0125C6  0E00               	movlw	0
  9555  0125C8  2041               	addwfc	(btemp+11)^0,w,c
  9556  0125CA  6EDA               	movwf	fsr2h,c
  9557  0125CC  2ADF               	incf	indf2,f,c
  9558                           
  9559                           ;ringbufs.c: 72:   ++_this->count;
  9560                           ;stkvar	__this @ sp[(0)+-2]
  9561  0125CE  0EFE               	movlw	-2
  9562  0125D0  006F FF8C  F040    	movff	plusw1,btemp+10
  9563  0125D6  0EFF               	movlw	-1
  9564  0125D8  006F FF8C  F041    	movff	plusw1,btemp+11
  9565  0125DE  0E42               	movlw	66
  9566  0125E0  2440               	addwf	(btemp+10)^0,w,c
  9567  0125E2  6ED9               	movwf	fsr2l,c
  9568  0125E4  0E00               	movlw	0
  9569  0125E6  2041               	addwfc	(btemp+11)^0,w,c
  9570  0125E8  6EDA               	movwf	fsr2h,c
  9571  0125EA  2ADF               	incf	indf2,f,c
  9572  0125EC                     l1462:
  9573                           
  9574                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  9575  0125EC  52E5               	movf	postdec1,f,c
  9576  0125EE  52E5               	movf	postdec1,f,c
  9577  0125F0  52E5               	movf	postdec1,f,c
  9578  0125F2  0012               	return		;funcret
  9579  0125F4                     __end_of_ringBufS_put_dma:
  9580                           	opt callstack 0
  9581                           
  9582 ;; *************** function _set_vterm *****************
  9583 ;; Defined at:
  9584 ;;		line 104 in file "mconfig.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  vterm           1  [STACK] unsigned char 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1  [STACK] unsigned char 
  9591 ;; Registers used:
  9592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 3F/3
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    6
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_main
  9609 ;;		_check_help
  9610 ;; This function uses a reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text47
  9614  01372E                     __ptext47:
  9615                           	opt callstack 0
  9616  01372E                     _set_vterm:
  9617                           	opt callstack 24
  9618                           
  9619                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
  9620                           ;stkvar	_vterm @ sp[(0)+-1]
  9621                           
  9622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9623                           ;incstack = 0
  9624  01372E  0EFF               	movlw	-1
  9625  013730  006F FF8C  F041    	movff	plusw1,btemp+11
  9626  013736  0E03               	movlw	3
  9627  013738  1641               	andwf	(btemp+11)^0,f,c
  9628  01373A  0103               	movlb	3	; () banked
  9629  01373C  51D8               	movf	(_D+216)& (0+255),w,b
  9630  01373E  1841               	xorwf	(btemp+11)^0,w,c
  9631  013740  0BFE               	andlw	-2
  9632  013742  1841               	xorwf	(btemp+11)^0,w,c
  9633  013744  6FD8               	movwf	(_D+216)& (0+255),b
  9634                           
  9635                           ; BSR set to: 3
  9636                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9637  013746  52E5               	movf	postdec1,f,c
  9638  013748  0012               	return		;funcret
  9639  01374A                     __end_of_set_vterm:
  9640                           	opt callstack 0
  9641                           
  9642 ;; *************** function _set_temp_display_help *****************
  9643 ;; Defined at:
  9644 ;;		line 208 in file "mconfig.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  new_response    1  [STACK] const enum E16501
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1  [STACK] enum E16501
  9651 ;; Registers used:
  9652 ;;		wreg, fsr1l, fsr1h
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/3
  9655 ;;		On exit  : 3F/1
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:    6
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		_check_help
  9669 ;; This function uses a reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text48
  9673  01384A                     __ptext48:
  9674                           	opt callstack 0
  9675  01384A                     _set_temp_display_help:
  9676                           	opt callstack 23
  9677                           
  9678                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
  9679                           
  9680                           ; BSR set to: 3
  9681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9682                           ;incstack = 0
  9683  01384A  0101               	movlb	1	; () banked
  9684  01384C  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
  9685                           
  9686                           ; BSR set to: 1
  9687                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
  9688                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9689  01384E  0EFF               	movlw	-1
  9690  013850  006F FF8C  F1B2    	movff	plusw1,_V+178	;volatile
  9691                           
  9692                           ; BSR set to: 1
  9693                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9694  013856  52E5               	movf	postdec1,f,c
  9695  013858  0012               	return		;funcret
  9696  01385A                     __end_of_set_temp_display_help:
  9697                           	opt callstack 0
  9698                           
  9699 ;; *************** function _set_display_info *****************
  9700 ;; Defined at:
  9701 ;;		line 197 in file "mconfig.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  new_response    1  [STACK] const enum E16501
  9704 ;; Auto vars:     Size  Location     Type
  9705 ;;		None
  9706 ;; Return value:  Size  Location     Type
  9707 ;;                  1  [STACK] enum E16986
  9708 ;; Registers used:
  9709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  9710 ;; Tracked objects:
  9711 ;;		On entry : 0/2
  9712 ;;		On exit  : 0/0
  9713 ;;		Unchanged: 0/0
  9714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9719 ;;Total ram usage:        0 bytes
  9720 ;; Hardware stack levels used:    1
  9721 ;; Hardware stack levels required when called:    7
  9722 ;; This function calls:
  9723 ;;		_TimerDone
  9724 ;; This function is called by:
  9725 ;;		_main
  9726 ;;		_check_help
  9727 ;; This function uses a reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text49
  9731  01369A                     __ptext49:
  9732                           	opt callstack 0
  9733  01369A                     _set_display_info:
  9734                           	opt callstack 23
  9735                           
  9736                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
  9737                           
  9738                           ; BSR set to: 1
  9739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9740                           ;incstack = 0
  9741  01369A  0E07               	movlw	7
  9742  01369C  6EE6               	movwf	postinc1,c
  9743  01369E  ECD9  F09A         	call	_TimerDone	;wreg free
  9744  0136A2  5036               	movf	btemp^0,w,c
  9745  0136A4  B4D8               	btfsc	status,2,c
  9746  0136A6  D006               	goto	l1599
  9747                           
  9748                           ;mconfig.c: 202:   old_info = V.response.info;
  9749  0136A8  0101               	movlb	1	; () banked
  9750  0136AA  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
  9751                           
  9752                           ; BSR set to: 1
  9753                           ;mconfig.c: 203:   V.response.info = new_response_info;
  9754                           ;stkvar	_new_response_info @ sp[(0)+-1]
  9755  0136AC  0EFF               	movlw	-1
  9756  0136AE  006F FF8C  F1B1    	movff	plusw1,_V+177	;volatile
  9757  0136B4                     l1599:
  9758                           
  9759                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9760  0136B4  52E5               	movf	postdec1,f,c
  9761  0136B6  0012               	return		;funcret
  9762  0136B8                     __end_of_set_display_info:
  9763                           	opt callstack 0
  9764                           
  9765 ;; *************** function _mode_lamp_dim *****************
  9766 ;; Defined at:
  9767 ;;		line 13 in file "mconfig.c"
  9768 ;; Parameters:    Size  Location     Type
  9769 ;;  level           2  [STACK] const unsigned short 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;		None
  9772 ;; Return value:  Size  Location     Type
  9773 ;;                  1  [STACK] void 
  9774 ;; Registers used:
  9775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9776 ;; Tracked objects:
  9777 ;;		On entry : 0/1
  9778 ;;		On exit  : 0/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9785 ;;Total ram usage:        0 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    7
  9788 ;; This function calls:
  9789 ;;		_PWM8_LoadDutyValue
  9790 ;; This function is called by:
  9791 ;;		_main
  9792 ;;		_check_help
  9793 ;; This function uses a reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text50
  9797  01379A                     __ptext50:
  9798                           	opt callstack 0
  9799  01379A                     _mode_lamp_dim:
  9800                           	opt callstack 23
  9801                           
  9802                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
  9803                           ;stkvar	_level @ sp[(0)+-2]
  9804                           
  9805                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9806                           ;incstack = 0
  9807  01379A  0EFE               	movlw	-2
  9808  01379C  006F FF8F FFE6     	movff	plusw1,postinc1
  9809  0137A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9810  0137A8  ECDE  F097         	call	_PWM8_LoadDutyValue	;wreg free
  9811                           
  9812                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9813  0137AC  52E5               	movf	postdec1,f,c
  9814  0137AE  52E5               	movf	postdec1,f,c
  9815  0137B0  0012               	return		;funcret
  9816  0137B2                     __end_of_mode_lamp_dim:
  9817                           	opt callstack 0
  9818                           
  9819 ;; *************** function _mode_lamp_bright *****************
  9820 ;; Defined at:
  9821 ;;		line 18 in file "mconfig.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1  [STACK] void 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    7
  9842 ;; This function calls:
  9843 ;;		_PWM8_LoadDutyValue
  9844 ;; This function is called by:
  9845 ;;		_check_help
  9846 ;; This function uses a reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text51
  9850  013868                     __ptext51:
  9851                           	opt callstack 0
  9852  013868                     _mode_lamp_bright:
  9853                           	opt callstack 22
  9854                           
  9855                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
  9856                           
  9857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9858                           ;incstack = 0
  9859  013868  0E2C               	movlw	44
  9860  01386A  6EE6               	movwf	postinc1,c
  9861  01386C  0E01               	movlw	1
  9862  01386E  6EE6               	movwf	postinc1,c
  9863  013870  ECDE  F097         	call	_PWM8_LoadDutyValue	;wreg free
  9864                           
  9865                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  9866  013874  0012               	return		;funcret
  9867  013876                     __end_of_mode_lamp_bright:
  9868                           	opt callstack 0
  9869                           
  9870 ;; *************** function _PWM8_LoadDutyValue *****************
  9871 ;; Defined at:
  9872 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  dutyValue       2  [STACK] unsigned short 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;		None
  9877 ;; Return value:  Size  Location     Type
  9878 ;;                  1  [STACK] void 
  9879 ;; Registers used:
  9880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  9881 ;; Tracked objects:
  9882 ;;		On entry : 0/1
  9883 ;;		On exit  : 0/0
  9884 ;;		Unchanged: 0/0
  9885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9890 ;;Total ram usage:        0 bytes
  9891 ;; Hardware stack levels used:    1
  9892 ;; Hardware stack levels required when called:    6
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_mode_lamp_dim
  9897 ;;		_mode_lamp_bright
  9898 ;; This function uses a reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text52
  9902  012FBC                     __ptext52:
  9903                           	opt callstack 0
  9904  012FBC                     _PWM8_LoadDutyValue:
  9905                           	opt callstack 23
  9906                           
  9907                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9908                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9909                           
  9910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9911                           ;incstack = 0
  9912  012FBC  0EFE               	movlw	-2
  9913  012FBE  006F FF8C  F040    	movff	plusw1,btemp+10
  9914  012FC4  0EFF               	movlw	-1
  9915  012FC6  006F FF8C  F041    	movff	plusw1,btemp+11
  9916  012FCC  90D8               	bcf	status,0,c
  9917  012FCE  3241               	rrcf	(btemp+11)^0,f,c
  9918  012FD0  3240               	rrcf	(btemp+10)^0,f,c
  9919  012FD2  90D8               	bcf	status,0,c
  9920  012FD4  3241               	rrcf	(btemp+11)^0,f,c
  9921  012FD6  3240               	rrcf	(btemp+10)^0,f,c
  9922  012FD8  5040               	movf	(btemp+10)^0,w,c
  9923  012FDA  6E61               	movwf	97,c	;volatile
  9924                           
  9925                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  9926                           ;stkvar	_dutyValue @ sp[(0)+-2]
  9927  012FDC  0EFE               	movlw	-2
  9928  012FDE  006F FF8C  F041    	movff	plusw1,btemp+11
  9929  012FE4  0E03               	movlw	3
  9930  012FE6  1641               	andwf	(btemp+11)^0,f,c
  9931  012FE8  0E06               	movlw	6
  9932  012FEA  6E36               	movwf	btemp^0,c
  9933  012FEC                     u2865:
  9934  012FEC  90D8               	bcf	status,0,c
  9935  012FEE  3641               	rlcf	(btemp+11)^0,f,c
  9936  012FF0  2E36               	decfsz	btemp^0,f,c
  9937  012FF2  D7FC               	goto	u2865
  9938  012FF4  5041               	movf	(btemp+11)^0,w,c
  9939  012FF6  6E60               	movwf	96,c	;volatile
  9940                           
  9941                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  9942  012FF8  52E5               	movf	postdec1,f,c
  9943  012FFA  52E5               	movf	postdec1,f,c
  9944  012FFC  0012               	return		;funcret
  9945  012FFE                     __end_of_PWM8_LoadDutyValue:
  9946                           	opt callstack 0
  9947                           
  9948 ;; *************** function _help_button *****************
  9949 ;; Defined at:
  9950 ;;		line 26 in file "mconfig.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1  [STACK] _Bool 
  9957 ;; Registers used:
  9958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/1
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9968 ;;Total ram usage:        0 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    7
  9971 ;; This function calls:
  9972 ;;		_StartTimer
  9973 ;;		_TimerDone
  9974 ;; This function is called by:
  9975 ;;		_check_help
  9976 ;; This function uses a reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text53
  9980  0130B6                     __ptext53:
  9981                           	opt callstack 0
  9982  0130B6                     _help_button:
  9983                           	opt callstack 22
  9984                           
  9985                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
  9986                           
  9987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9988                           ;incstack = 0
  9989  0130B6  B0CB               	btfsc	203,0,c	;volatile
  9990  0130B8  D00C               	goto	l1542
  9991                           
  9992                           ;mconfig.c: 29:   V.help = 1;
  9993  0130BA  0101               	movlb	1	; () banked
  9994  0130BC  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
  9995                           
  9996                           ; BSR set to: 1
  9997                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
  9998  0130BE  0E08               	movlw	8
  9999  0130C0  6EE6               	movwf	postinc1,c
 10000  0130C2  ECD9  F09A         	call	_TimerDone	;wreg free
 10001  0130C6  5036               	movf	btemp^0,w,c
 10002  0130C8  B4D8               	btfsc	status,2,c
 10003  0130CA  D003               	goto	l1542
 10004                           
 10005                           ;mconfig.c: 31:    return 1;
 10006  0130CC  0E01               	movlw	1
 10007  0130CE  6E36               	movwf	btemp^0,c
 10008  0130D0  0012               	return	
 10009  0130D2                     l1542:
 10010                           
 10011                           ;mconfig.c: 34:  if (!V.help)
 10012  0130D2  0101               	movlb	1	; () banked
 10013  0130D4  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 10014  0130D6  D008               	goto	l5268
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 10018  0130D8  0E2C               	movlw	44
 10019  0130DA  6EE6               	movwf	postinc1,c
 10020  0130DC  0E01               	movlw	1
 10021  0130DE  6EE6               	movwf	postinc1,c
 10022  0130E0  0E08               	movlw	8
 10023  0130E2  6EE6               	movwf	postinc1,c
 10024  0130E4  EC3D  F098         	call	_StartTimer	;wreg free
 10025  0130E8                     l5268:
 10026                           
 10027                           ;mconfig.c: 37:  return 0;
 10028  0130E8  0E00               	movlw	0
 10029  0130EA  6E36               	movwf	btemp^0,c
 10030                           
 10031                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 10032  0130EC  0012               	return		;funcret
 10033  0130EE                     __end_of_help_button:
 10034                           	opt callstack 0
 10035                           
 10036 ;; *************** function _TimerDone *****************
 10037 ;; Defined at:
 10038 ;;		line 20 in file "timers.c"
 10039 ;; Parameters:    Size  Location     Type
 10040 ;;  timer           1  [STACK] const unsigned char 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1  [STACK] _Bool 
 10045 ;; Registers used:
 10046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/2
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10056 ;;Total ram usage:        0 bytes
 10057 ;; Hardware stack levels used:    1
 10058 ;; Hardware stack levels required when called:    6
 10059 ;; This function calls:
 10060 ;;		Nothing
 10061 ;; This function is called by:
 10062 ;;		_main
 10063 ;;		_WaitMs
 10064 ;;		_help_button
 10065 ;;		_check_help
 10066 ;;		_set_display_info
 10067 ;; This function uses a reentrant model
 10068 ;;
 10069                           
 10070                           	psect	text54
 10071  0135B2                     __ptext54:
 10072                           	opt callstack 0
 10073  0135B2                     _TimerDone:
 10074                           	opt callstack 23
 10075                           
 10076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10077                           ;incstack = 0
 10078  0135B2  0004               	clrwdt		;# 
 10079                           
 10080                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 10081                           ;stkvar	_timer @ sp[(0)+-1]
 10082  0135B4  0EFF               	movlw	-1
 10083  0135B6  50E3               	movf	plusw1,w,c
 10084  0135B8  0D02               	mullw	2
 10085  0135BA  50F3               	movf	243,w,c
 10086  0135BC  0F80               	addlw	low _tickCount
 10087  0135BE  6ED9               	movwf	fsr2l,c
 10088  0135C0  6ADA               	clrf	fsr2h,c
 10089  0135C2  50DE               	movf	postinc2,w,c
 10090  0135C4  10DE               	iorwf	postinc2,w,c
 10091  0135C6  A4D8               	btfss	status,2,c
 10092  0135C8  D002               	goto	l4724
 10093                           
 10094                           ;timers.c: 24:   return 1;
 10095  0135CA  0E01               	movlw	1
 10096  0135CC  D001               	goto	L7
 10097  0135CE                     l4724:
 10098                           
 10099                           ;timers.c: 26:  return 0;
 10100  0135CE  0E00               	movlw	0
 10101  0135D0                     L7:
 10102  0135D0  6E36               	movwf	btemp^0,c
 10103                           
 10104                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10105  0135D2  52E5               	movf	postdec1,f,c
 10106  0135D4  0012               	return		;funcret
 10107  0135D6                     __end_of_TimerDone:
 10108                           	opt callstack 0
 10109                           
 10110 ;; *************** function _StartTimer *****************
 10111 ;; Defined at:
 10112 ;;		line 12 in file "timers.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;  timer           1  [STACK] const unsigned char 
 10115 ;;  count           2  [STACK] const unsigned short 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1  [STACK] void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/3
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;Total ram usage:        0 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    6
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_main
 10138 ;;		_WaitMs
 10139 ;;		_help_button
 10140 ;;		_check_help
 10141 ;; This function uses a reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text55
 10145  01307A                     __ptext55:
 10146                           	opt callstack 0
 10147  01307A                     _StartTimer:
 10148                           	opt callstack 21
 10149                           
 10150                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 10151                           ;stkvar	_count @ sp[(0)+-3]
 10152                           
 10153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10154                           ;incstack = 0
 10155  01307A  0EFD               	movlw	-3
 10156  01307C  006F FF8C  F040    	movff	plusw1,btemp+10
 10157  013082  0EFE               	movlw	-2
 10158  013084  006F FF8C  F041    	movff	plusw1,btemp+11
 10159  01308A  90D8               	bcf	status,0,c
 10160  01308C  3440               	rlcf	(btemp+10)^0,w,c
 10161  01308E  6E3E               	movwf	(btemp+8)^0,c
 10162  013090  3441               	rlcf	(btemp+11)^0,w,c
 10163  013092  6E3F               	movwf	(btemp+9)^0,c
 10164                           
 10165                           ;stkvar	_timer @ sp[(0)+-1]
 10166  013094  0EFF               	movlw	-1
 10167  013096  50E3               	movf	plusw1,w,c
 10168  013098  0D02               	mullw	2
 10169  01309A  50F3               	movf	243,w,c
 10170  01309C  0F80               	addlw	low _tickCount
 10171  01309E  6ED9               	movwf	fsr2l,c
 10172  0130A0  6ADA               	clrf	fsr2h,c
 10173  0130A2  0060  F0FB  FFDE   	movff	btemp+8,postinc2
 10174  0130A8  0060  F0FF  FFDD   	movff	btemp+9,postdec2
 10175                           
 10176                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 10177  0130AE  52E5               	movf	postdec1,f,c
 10178  0130B0  52E5               	movf	postdec1,f,c
 10179  0130B2  52E5               	movf	postdec1,f,c
 10180  0130B4  0012               	return		;funcret
 10181  0130B6                     __end_of_StartTimer:
 10182                           	opt callstack 0
 10183                           
 10184 ;; *************** function _display_info *****************
 10185 ;; Defined at:
 10186 ;;		line 187 in file "mconfig.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1  [STACK] enum E16501
 10193 ;; Registers used:
 10194 ;;		btemp
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/1
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    6
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_check_help
 10211 ;; This function uses a reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text56
 10215  0138D2                     __ptext56:
 10216                           	opt callstack 0
 10217  0138D2                     _display_info:
 10218                           	opt callstack 23
 10219                           
 10220                           ;mconfig.c: 189:  return V.response.info;
 10221                           
 10222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10223                           ;incstack = 0
 10224  0138D2  0060  F6C4  F036   	movff	_V+177,btemp	;volatile
 10225                           
 10226                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10227  0138D8  0012               	return		;funcret
 10228  0138DA                     __end_of_display_info:
 10229                           	opt callstack 0
 10230                           
 10231 ;; *************** function _display_help *****************
 10232 ;; Defined at:
 10233 ;;		line 192 in file "mconfig.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;		None
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;		None
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1  [STACK] enum E16501
 10240 ;; Registers used:
 10241 ;;		btemp
 10242 ;; Tracked objects:
 10243 ;;		On entry : 3F/1
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;Total ram usage:        0 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:    6
 10254 ;; This function calls:
 10255 ;;		Nothing
 10256 ;; This function is called by:
 10257 ;;		_check_help
 10258 ;; This function uses a reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text57
 10262  0138DA                     __ptext57:
 10263                           	opt callstack 0
 10264  0138DA                     _display_help:
 10265                           	opt callstack 23
 10266                           
 10267                           ;mconfig.c: 194:  return V.response.help_temp;
 10268                           
 10269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10270                           ;incstack = 0
 10271  0138DA  0060  F6C8  F036   	movff	_V+178,btemp	;volatile
 10272                           
 10273                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10274  0138E0  0012               	return		;funcret
 10275  0138E2                     __end_of_display_help:
 10276                           	opt callstack 0
 10277                           
 10278 ;; *************** function _check_adc_scan *****************
 10279 ;; Defined at:
 10280 ;;		line 31 in file "daq.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1  [STACK] _Bool 
 10287 ;; Registers used:
 10288 ;;		btemp
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/2
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:    6
 10301 ;; This function calls:
 10302 ;;		Nothing
 10303 ;; This function is called by:
 10304 ;;		_main
 10305 ;; This function uses a reentrant model
 10306 ;;
 10307                           
 10308                           	psect	text58
 10309  0138E2                     __ptext58:
 10310                           	opt callstack 0
 10311  0138E2                     _check_adc_scan:
 10312                           	opt callstack 24
 10313                           
 10314                           ;daq.c: 33:  return R.done;
 10315                           
 10316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10317                           ;incstack = 0
 10318  0138E2  0060  F1FC  F036   	movff	_R+31,btemp	;volatile
 10319                           
 10320                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10321  0138E8  0012               	return		;funcret
 10322  0138EA                     __end_of_check_adc_scan:
 10323                           	opt callstack 0
 10324                           
 10325 ;; *************** function _SYSTEM_Initialize *****************
 10326 ;; Defined at:
 10327 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;		None
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1  [STACK] void 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 3F/3C
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10345 ;;Total ram usage:        0 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    8
 10348 ;; This function calls:
 10349 ;;		_ADCC_Initialize
 10350 ;;		_CLKREF_Initialize
 10351 ;;		_DMA1_Initialize
 10352 ;;		_DMA2_Initialize
 10353 ;;		_EXT_INT_Initialize
 10354 ;;		_FVR_Initialize
 10355 ;;		_INTERRUPT_Initialize
 10356 ;;		_OSCILLATOR_Initialize
 10357 ;;		_PIN_MANAGER_Initialize
 10358 ;;		_PMD_Initialize
 10359 ;;		_PWM8_Initialize
 10360 ;;		_SPI1_Initialize
 10361 ;;		_TMR2_Initialize
 10362 ;;		_TMR5_Initialize
 10363 ;;		_TMR6_Initialize
 10364 ;;		_UART1_Initialize
 10365 ;;		_UART2_Initialize
 10366 ;; This function is called by:
 10367 ;;		_main
 10368 ;; This function uses a reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text59
 10372  012EA6                     __ptext59:
 10373                           	opt callstack 0
 10374  012EA6                     _SYSTEM_Initialize:
 10375                           	opt callstack 22
 10376                           
 10377                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10378                           
 10379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10380                           ;incstack = 0
 10381  012EA6  EC90  F095         	call	_INTERRUPT_Initialize	;wreg free
 10382                           
 10383                           ; BSR set to: 57
 10384                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10385  012EAA  EC12  F09C         	call	_PMD_Initialize	;wreg free
 10386                           
 10387                           ; BSR set to: 57
 10388                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10389  012EAE  ECE7  F093         	call	_PIN_MANAGER_Initialize	;wreg free
 10390                           
 10391                           ; BSR set to: 58
 10392                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10393  012EB2  EC07  F09C         	call	_OSCILLATOR_Initialize	;wreg free
 10394                           
 10395                           ; BSR set to: 57
 10396                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 10397  012EB6  EC75  F09C         	call	_FVR_Initialize	;wreg free
 10398                           
 10399                           ; BSR set to: 62
 10400                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 10401  012EBA  EC5C  F095         	call	_ADCC_Initialize	;wreg free
 10402                           
 10403                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 10404  012EBE  ECD9  F09B         	call	_TMR2_Initialize	;wreg free
 10405                           
 10406                           ; BSR set to: 57
 10407                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 10408  012EC2  ECFC  F09B         	call	_PWM8_Initialize	;wreg free
 10409                           
 10410                           ; BSR set to: 63
 10411                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 10412  012EC6  ECE4  F098         	call	_EXT_INT_Initialize	;wreg free
 10413                           
 10414                           ; BSR set to: 57
 10415                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 10416  012ECA  EC71  F099         	call	_TMR6_Initialize	;wreg free
 10417                           
 10418                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 10419  012ECE  EC76  F097         	call	_TMR5_Initialize	;wreg free
 10420                           
 10421                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10422  012ED2  ECC3  F095         	call	_UART1_Initialize	;wreg free
 10423                           
 10424                           ; BSR set to: 57
 10425                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10426  012ED6  EC26  F096         	call	_UART2_Initialize	;wreg free
 10427                           
 10428                           ; BSR set to: 57
 10429                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10430  012EDA  ECF1  F09B         	call	_SPI1_Initialize	;wreg free
 10431                           
 10432                           ; BSR set to: 61
 10433                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 10434  012EDE  ECB1  F096         	call	_DMA2_Initialize	;wreg free
 10435                           
 10436                           ; BSR set to: 59
 10437                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 10438  012EE2  ECF2  F094         	call	_DMA1_Initialize	;wreg free
 10439                           
 10440                           ; BSR set to: 59
 10441                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 10442  012EE6  EC53  F09C         	call	_CLKREF_Initialize	;wreg free
 10443                           
 10444                           ; BSR set to: 60
 10445                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10446  012EEA  0012               	return		;funcret
 10447  012EEC                     __end_of_SYSTEM_Initialize:
 10448                           	opt callstack 0
 10449                           
 10450 ;; *************** function _UART2_Initialize *****************
 10451 ;; Defined at:
 10452 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;		None
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;		None
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1  [STACK] void 
 10459 ;; Registers used:
 10460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10461 ;; Tracked objects:
 10462 ;;		On entry : 3F/39
 10463 ;;		On exit  : 3F/39
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10470 ;;Total ram usage:        0 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:    7
 10473 ;; This function calls:
 10474 ;;		_UART2_SetRxInterruptHandler
 10475 ;;		_UART2_SetTxInterruptHandler
 10476 ;; This function is called by:
 10477 ;;		_SYSTEM_Initialize
 10478 ;; This function uses a reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text60
 10482  012C4C                     __ptext60:
 10483                           	opt callstack 0
 10484  012C4C                     _UART2_Initialize:
 10485                           	opt callstack 22
 10486                           
 10487                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10488                           
 10489                           ; BSR set to: 60
 10490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10491                           ;incstack = 0
 10492  012C4C  0139               	movlb	57	; () banked
 10493  012C4E  9596               	bcf	150,2,b	;volatile
 10494                           
 10495                           ; BSR set to: 57
 10496                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10497  012C50  0EF4               	movlw	low _UART2_Receive_ISR
 10498  012C52  6EE6               	movwf	postinc1,c
 10499  012C54  0E36               	movlw	high _UART2_Receive_ISR
 10500  012C56  6EE6               	movwf	postinc1,c
 10501  012C58  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10502  012C5A  6EE6               	movwf	postinc1,c
 10503  012C5C  ECD6  F099         	call	_UART2_SetRxInterruptHandler	;wreg free
 10504                           
 10505                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10506  012C60  0139               	movlb	57	; () banked
 10507  012C62  9796               	bcf	150,3,b	;volatile
 10508                           
 10509                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10510  012C64  0EB6               	movlw	low _UART2_Transmit_ISR
 10511  012C66  6EE6               	movwf	postinc1,c
 10512  012C68  0E32               	movlw	high _UART2_Transmit_ISR
 10513  012C6A  6EE6               	movwf	postinc1,c
 10514  012C6C  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10515  012C6E  6EE6               	movwf	postinc1,c
 10516  012C70  ECC2  F099         	call	_UART2_SetTxInterruptHandler	;wreg free
 10517                           
 10518                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10519  012C74  013D               	movlb	61	; () banked
 10520  012C76  6BD4               	clrf	212,b	;volatile
 10521                           
 10522                           ; BSR set to: 61
 10523                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10524  012C78  6BD6               	clrf	214,b	;volatile
 10525                           
 10526                           ; BSR set to: 61
 10527                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10528  012C7A  6BD8               	clrf	216,b	;volatile
 10529                           
 10530                           ; BSR set to: 61
 10531                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10532  012C7C  0EB0               	movlw	176
 10533  012C7E  6FDA               	movwf	218,b	;volatile
 10534                           
 10535                           ; BSR set to: 61
 10536                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10537  012C80  0E80               	movlw	128
 10538  012C82  6FDB               	movwf	219,b	;volatile
 10539                           
 10540                           ; BSR set to: 61
 10541                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10542  012C84  6BDC               	clrf	220,b	;volatile
 10543                           
 10544                           ; BSR set to: 61
 10545                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10546  012C86  0E82               	movlw	130
 10547  012C88  6FDD               	movwf	221,b	;volatile
 10548                           
 10549                           ; BSR set to: 61
 10550                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10551  012C8A  0E06               	movlw	6
 10552  012C8C  6FDE               	movwf	222,b	;volatile
 10553                           
 10554                           ; BSR set to: 61
 10555                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10556  012C8E  6BDF               	clrf	223,b	;volatile
 10557                           
 10558                           ; BSR set to: 61
 10559                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10560  012C90  6BE0               	clrf	224,b	;volatile
 10561                           
 10562                           ; BSR set to: 61
 10563                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10564  012C92  6BE1               	clrf	225,b	;volatile
 10565                           
 10566                           ; BSR set to: 61
 10567                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10568  012C94  6BE2               	clrf	226,b	;volatile
 10569                           
 10570                           ; BSR set to: 61
 10571                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10572  012C96  6A2F               	clrf	_uart2TxHead^0,c	;volatile
 10573                           
 10574                           ; BSR set to: 61
 10575                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10576  012C98  6A2E               	clrf	_uart2TxTail^0,c	;volatile
 10577                           
 10578                           ; BSR set to: 61
 10579                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10580  012C9A  0E40               	movlw	64
 10581  012C9C  6E2D               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 10582                           
 10583                           ; BSR set to: 61
 10584                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10585  012C9E  6A2C               	clrf	_uart2RxHead^0,c	;volatile
 10586                           
 10587                           ; BSR set to: 61
 10588                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10589  012CA0  6A2B               	clrf	_uart2RxTail^0,c	;volatile
 10590                           
 10591                           ; BSR set to: 61
 10592                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10593  012CA2  6A2A               	clrf	_uart2RxCount^0,c	;volatile
 10594                           
 10595                           ; BSR set to: 61
 10596                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10597  012CA4  0139               	movlb	57	; () banked
 10598  012CA6  8596               	bsf	150,2,b	;volatile
 10599                           
 10600                           ; BSR set to: 57
 10601                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10602  012CA8  0012               	return		;funcret
 10603  012CAA                     __end_of_UART2_Initialize:
 10604                           	opt callstack 0
 10605                           
 10606 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10607 ;; Defined at:
 10608 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10611 ;;		 -> UART2_Transmit_ISR(1), 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  1  [STACK] void 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10618 ;; Tracked objects:
 10619 ;;		On entry : 3F/39
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10627 ;;Total ram usage:        0 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:    6
 10630 ;; This function calls:
 10631 ;;		Nothing
 10632 ;; This function is called by:
 10633 ;;		_UART2_Initialize
 10634 ;; This function uses a reentrant model
 10635 ;;
 10636                           
 10637                           	psect	text61
 10638  013384                     __ptext61:
 10639                           	opt callstack 0
 10640  013384                     _UART2_SetTxInterruptHandler:
 10641                           	opt callstack 22
 10642                           
 10643                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10644                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10645                           
 10646                           ; BSR set to: 57
 10647                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10648                           ;incstack = 0
 10649  013384  50E1               	movf	fsr1l,w,c
 10650  013386  0FFD               	addlw	-3
 10651  013388  6ED9               	movwf	fsr2l,c
 10652  01338A  50E2               	movf	fsr1h,w,c
 10653  01338C  6EDA               	movwf	fsr2h,c
 10654  01338E  0EFF               	movlw	255
 10655  013390  22DA               	addwfc	fsr2h,f,c
 10656  013392  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 10657  013398  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 10658  01339E  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 10659                           
 10660                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10661  0133A4  52E5               	movf	postdec1,f,c
 10662  0133A6  52E5               	movf	postdec1,f,c
 10663  0133A8  52E5               	movf	postdec1,f,c
 10664  0133AA  0012               	return		;funcret
 10665  0133AC                     __end_of_UART2_SetTxInterruptHandler:
 10666                           	opt callstack 0
 10667                           
 10668 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10669 ;; Defined at:
 10670 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10671 ;; Parameters:    Size  Location     Type
 10672 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10673 ;;		 -> UART2_Receive_ISR(1), 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1  [STACK] void 
 10678 ;; Registers used:
 10679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10680 ;; Tracked objects:
 10681 ;;		On entry : 3F/39
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10689 ;;Total ram usage:        0 bytes
 10690 ;; Hardware stack levels used:    1
 10691 ;; Hardware stack levels required when called:    6
 10692 ;; This function calls:
 10693 ;;		Nothing
 10694 ;; This function is called by:
 10695 ;;		_UART2_Initialize
 10696 ;; This function uses a reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text62
 10700  0133AC                     __ptext62:
 10701                           	opt callstack 0
 10702  0133AC                     _UART2_SetRxInterruptHandler:
 10703                           	opt callstack 22
 10704                           
 10705                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10706                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10707                           
 10708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10709                           ;incstack = 0
 10710  0133AC  50E1               	movf	fsr1l,w,c
 10711  0133AE  0FFD               	addlw	-3
 10712  0133B0  6ED9               	movwf	fsr2l,c
 10713  0133B2  50E2               	movf	fsr1h,w,c
 10714  0133B4  6EDA               	movwf	fsr2h,c
 10715  0133B6  0EFF               	movlw	255
 10716  0133B8  22DA               	addwfc	fsr2h,f,c
 10717  0133BA  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 10718  0133C0  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 10719  0133C6  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 10720                           
 10721                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10722  0133CC  52E5               	movf	postdec1,f,c
 10723  0133CE  52E5               	movf	postdec1,f,c
 10724  0133D0  52E5               	movf	postdec1,f,c
 10725  0133D2  0012               	return		;funcret
 10726  0133D4                     __end_of_UART2_SetRxInterruptHandler:
 10727                           	opt callstack 0
 10728                           
 10729 ;; *************** function _UART1_Initialize *****************
 10730 ;; Defined at:
 10731 ;;		line 79 in file "mcc_generated_files/uart1.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1  [STACK] void 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/39
 10742 ;;		On exit  : 3F/39
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    7
 10752 ;; This function calls:
 10753 ;;		_UART1_SetRxInterruptHandler
 10754 ;;		_UART1_SetTxInterruptHandler
 10755 ;; This function is called by:
 10756 ;;		_SYSTEM_Initialize
 10757 ;; This function uses a reentrant model
 10758 ;;
 10759                           
 10760                           	psect	text63
 10761  012B86                     __ptext63:
 10762                           	opt callstack 0
 10763  012B86                     _UART1_Initialize:
 10764                           	opt callstack 22
 10765                           
 10766                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 10767                           
 10768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10769                           ;incstack = 0
 10770  012B86  0139               	movlb	57	; () banked
 10771  012B88  9793               	bcf	147,3,b	;volatile
 10772                           
 10773                           ; BSR set to: 57
 10774                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10775  012B8A  0ED6               	movlw	low _UART1_Receive_ISR
 10776  012B8C  6EE6               	movwf	postinc1,c
 10777  012B8E  0E36               	movlw	high _UART1_Receive_ISR
 10778  012B90  6EE6               	movwf	postinc1,c
 10779  012B92  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10780  012B94  6EE6               	movwf	postinc1,c
 10781  012B96  ECFE  F099         	call	_UART1_SetRxInterruptHandler	;wreg free
 10782                           
 10783                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 10784  012B9A  0139               	movlb	57	; () banked
 10785  012B9C  9993               	bcf	147,4,b	;volatile
 10786                           
 10787                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10788  012B9E  0E8A               	movlw	low _UART1_Transmit_ISR
 10789  012BA0  6EE6               	movwf	postinc1,c
 10790  012BA2  0E32               	movlw	high _UART1_Transmit_ISR
 10791  012BA4  6EE6               	movwf	postinc1,c
 10792  012BA6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10793  012BA8  6EE6               	movwf	postinc1,c
 10794  012BAA  ECEA  F099         	call	_UART1_SetTxInterruptHandler	;wreg free
 10795                           
 10796                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 10797  012BAE  013D               	movlb	61	; () banked
 10798  012BB0  6BEC               	clrf	236,b	;volatile
 10799                           
 10800                           ; BSR set to: 61
 10801                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 10802  012BB2  6BED               	clrf	237,b	;volatile
 10803                           
 10804                           ; BSR set to: 61
 10805                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 10806  012BB4  6BEE               	clrf	238,b	;volatile
 10807                           
 10808                           ; BSR set to: 61
 10809                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 10810  012BB6  6BEF               	clrf	239,b	;volatile
 10811                           
 10812                           ; BSR set to: 61
 10813                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 10814  012BB8  6BF0               	clrf	240,b	;volatile
 10815                           
 10816                           ; BSR set to: 61
 10817                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 10818  012BBA  6BF1               	clrf	241,b	;volatile
 10819                           
 10820                           ; BSR set to: 61
 10821                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 10822  012BBC  0EB0               	movlw	176
 10823  012BBE  6FF2               	movwf	242,b	;volatile
 10824                           
 10825                           ; BSR set to: 61
 10826                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 10827  012BC0  0E80               	movlw	128
 10828  012BC2  6FF3               	movwf	243,b	;volatile
 10829                           
 10830                           ; BSR set to: 61
 10831                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 10832  012BC4  6BF4               	clrf	244,b	;volatile
 10833                           
 10834                           ; BSR set to: 61
 10835                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 10836  012BC6  0E82               	movlw	130
 10837  012BC8  6FF5               	movwf	245,b	;volatile
 10838                           
 10839                           ; BSR set to: 61
 10840                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 10841  012BCA  0E06               	movlw	6
 10842  012BCC  6FF6               	movwf	246,b	;volatile
 10843                           
 10844                           ; BSR set to: 61
 10845                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 10846  012BCE  6BF7               	clrf	247,b	;volatile
 10847                           
 10848                           ; BSR set to: 61
 10849                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 10850  012BD0  6BF8               	clrf	248,b	;volatile
 10851                           
 10852                           ; BSR set to: 61
 10853                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 10854  012BD2  6BF9               	clrf	249,b	;volatile
 10855                           
 10856                           ; BSR set to: 61
 10857                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 10858  012BD4  6BFA               	clrf	250,b	;volatile
 10859                           
 10860                           ; BSR set to: 61
 10861                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 10862  012BD6  6A35               	clrf	_uart1TxHead^0,c	;volatile
 10863                           
 10864                           ; BSR set to: 61
 10865                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 10866  012BD8  6A34               	clrf	_uart1TxTail^0,c	;volatile
 10867                           
 10868                           ; BSR set to: 61
 10869                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10870  012BDA  0E40               	movlw	64
 10871  012BDC  6E33               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 10872                           
 10873                           ; BSR set to: 61
 10874                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 10875  012BDE  6A32               	clrf	_uart1RxHead^0,c	;volatile
 10876                           
 10877                           ; BSR set to: 61
 10878                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 10879  012BE0  6A31               	clrf	_uart1RxTail^0,c	;volatile
 10880                           
 10881                           ; BSR set to: 61
 10882                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 10883  012BE2  6A30               	clrf	_uart1RxCount^0,c	;volatile
 10884                           
 10885                           ; BSR set to: 61
 10886                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 10887  012BE4  0139               	movlb	57	; () banked
 10888  012BE6  8793               	bsf	147,3,b	;volatile
 10889                           
 10890                           ; BSR set to: 57
 10891                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10892  012BE8  0012               	return		;funcret
 10893  012BEA                     __end_of_UART1_Initialize:
 10894                           	opt callstack 0
 10895                           
 10896 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10897 ;; Defined at:
 10898 ;;		line 247 in file "mcc_generated_files/uart1.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10901 ;;		 -> UART1_Transmit_ISR(1), 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1  [STACK] void 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10908 ;; Tracked objects:
 10909 ;;		On entry : 3F/39
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    6
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_UART1_Initialize
 10924 ;; This function uses a reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text64
 10928  0133D4                     __ptext64:
 10929                           	opt callstack 0
 10930  0133D4                     _UART1_SetTxInterruptHandler:
 10931                           	opt callstack 22
 10932                           
 10933                           ;mcc_generated_files/uart1.c: 247: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 248: {;mcc_generated_files/uart1.c: 249:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10934                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10935                           
 10936                           ; BSR set to: 57
 10937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10938                           ;incstack = 0
 10939  0133D4  50E1               	movf	fsr1l,w,c
 10940  0133D6  0FFD               	addlw	-3
 10941  0133D8  6ED9               	movwf	fsr2l,c
 10942  0133DA  50E2               	movf	fsr1h,w,c
 10943  0133DC  6EDA               	movwf	fsr2h,c
 10944  0133DE  0EFF               	movlw	255
 10945  0133E0  22DA               	addwfc	fsr2h,f,c
 10946  0133E2  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 10947  0133E8  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 10948  0133EE  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 10949                           
 10950                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10951  0133F4  52E5               	movf	postdec1,f,c
 10952  0133F6  52E5               	movf	postdec1,f,c
 10953  0133F8  52E5               	movf	postdec1,f,c
 10954  0133FA  0012               	return		;funcret
 10955  0133FC                     __end_of_UART1_SetTxInterruptHandler:
 10956                           	opt callstack 0
 10957                           
 10958 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10959 ;; Defined at:
 10960 ;;		line 242 in file "mcc_generated_files/uart1.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10963 ;;		 -> UART1_Receive_ISR(1), 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;		None
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1  [STACK] void 
 10968 ;; Registers used:
 10969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10970 ;; Tracked objects:
 10971 ;;		On entry : 3F/39
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10979 ;;Total ram usage:        0 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:    6
 10982 ;; This function calls:
 10983 ;;		Nothing
 10984 ;; This function is called by:
 10985 ;;		_UART1_Initialize
 10986 ;; This function uses a reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text65
 10990  0133FC                     __ptext65:
 10991                           	opt callstack 0
 10992  0133FC                     _UART1_SetRxInterruptHandler:
 10993                           	opt callstack 22
 10994                           
 10995                           ;mcc_generated_files/uart1.c: 242: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 243: {;mcc_generated_files/uart1.c: 244:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10996                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10997                           
 10998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10999                           ;incstack = 0
 11000  0133FC  50E1               	movf	fsr1l,w,c
 11001  0133FE  0FFD               	addlw	-3
 11002  013400  6ED9               	movwf	fsr2l,c
 11003  013402  50E2               	movf	fsr1h,w,c
 11004  013404  6EDA               	movwf	fsr2h,c
 11005  013406  0EFF               	movlw	255
 11006  013408  22DA               	addwfc	fsr2h,f,c
 11007  01340A  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 11008  013410  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 11009  013416  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 11010                           
 11011                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11012  01341C  52E5               	movf	postdec1,f,c
 11013  01341E  52E5               	movf	postdec1,f,c
 11014  013420  52E5               	movf	postdec1,f,c
 11015  013422  0012               	return		;funcret
 11016  013424                     __end_of_UART1_SetRxInterruptHandler:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function _TMR6_Initialize *****************
 11020 ;; Defined at:
 11021 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1  [STACK] void 
 11028 ;; Registers used:
 11029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11030 ;; Tracked objects:
 11031 ;;		On entry : 3F/39
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    7
 11042 ;; This function calls:
 11043 ;;		_TMR6_SetInterruptHandler
 11044 ;; This function is called by:
 11045 ;;		_SYSTEM_Initialize
 11046 ;; This function uses a reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text66
 11050  0132E2                     __ptext66:
 11051                           	opt callstack 0
 11052  0132E2                     _TMR6_Initialize:
 11053                           	opt callstack 22
 11054                           
 11055                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 11056                           
 11057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11058                           ;incstack = 0
 11059  0132E2  0E01               	movlw	1
 11060  0132E4  6E96               	movwf	150,c	;volatile
 11061                           
 11062                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 11063  0132E6  6A95               	clrf	149,c	;volatile
 11064                           
 11065                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 11066  0132E8  6A97               	clrf	151,c	;volatile
 11067                           
 11068                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 11069  0132EA  0E7C               	movlw	124
 11070  0132EC  6E93               	movwf	147,c	;volatile
 11071                           
 11072                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 11073  0132EE  6A92               	clrf	146,c	;volatile
 11074                           
 11075                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 11076  0132F0  0139               	movlb	57	; () banked
 11077  0132F2  91A9               	bcf	169,0,b	;volatile
 11078                           
 11079                           ; BSR set to: 57
 11080                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 11081  0132F4  8199               	bsf	153,0,b	;volatile
 11082                           
 11083                           ; BSR set to: 57
 11084                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 11085  0132F6  0E32               	movlw	low _TMR6_DefaultInterruptHandler
 11086  0132F8  6EE6               	movwf	postinc1,c
 11087  0132FA  0E2F               	movlw	high _TMR6_DefaultInterruptHandler
 11088  0132FC  6EE6               	movwf	postinc1,c
 11089  0132FE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11090  013300  6EE6               	movwf	postinc1,c
 11091  013302  EC12  F09A         	call	_TMR6_SetInterruptHandler	;wreg free
 11092                           
 11093                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 11094  013306  0EE0               	movlw	224
 11095  013308  6E94               	movwf	148,c	;volatile
 11096                           
 11097                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11098  01330A  0012               	return		;funcret
 11099  01330C                     __end_of_TMR6_Initialize:
 11100                           	opt callstack 0
 11101                           
 11102 ;; *************** function _TMR6_SetInterruptHandler *****************
 11103 ;; Defined at:
 11104 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11107 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1  [STACK] void 
 11112 ;; Registers used:
 11113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11114 ;; Tracked objects:
 11115 ;;		On entry : 3F/39
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11123 ;;Total ram usage:        0 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    6
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_TMR6_Initialize
 11130 ;; This function uses a reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text67
 11134  013424                     __ptext67:
 11135                           	opt callstack 0
 11136  013424                     _TMR6_SetInterruptHandler:
 11137                           	opt callstack 22
 11138                           
 11139                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 11140                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11141                           
 11142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11143                           ;incstack = 0
 11144  013424  50E1               	movf	fsr1l,w,c
 11145  013426  0FFD               	addlw	-3
 11146  013428  6ED9               	movwf	fsr2l,c
 11147  01342A  50E2               	movf	fsr1h,w,c
 11148  01342C  6EDA               	movwf	fsr2h,c
 11149  01342E  0EFF               	movlw	255
 11150  013430  22DA               	addwfc	fsr2h,f,c
 11151  013432  006F FF78  F004    	movff	postinc2,_TMR6_InterruptHandler
 11152  013438  006F FF78  F005    	movff	postinc2,_TMR6_InterruptHandler+1
 11153  01343E  006F FF74  F006    	movff	postdec2,_TMR6_InterruptHandler+2
 11154                           
 11155                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11156  013444  52E5               	movf	postdec1,f,c
 11157  013446  52E5               	movf	postdec1,f,c
 11158  013448  52E5               	movf	postdec1,f,c
 11159  01344A  0012               	return		;funcret
 11160  01344C                     __end_of_TMR6_SetInterruptHandler:
 11161                           	opt callstack 0
 11162                           
 11163 ;; *************** function _TMR5_Initialize *****************
 11164 ;; Defined at:
 11165 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;		None
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1  [STACK] void 
 11172 ;; Registers used:
 11173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/39
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11183 ;;Total ram usage:        0 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    7
 11186 ;; This function calls:
 11187 ;;		_TMR5_SetInterruptHandler
 11188 ;; This function is called by:
 11189 ;;		_SYSTEM_Initialize
 11190 ;; This function uses a reentrant model
 11191 ;;
 11192                           
 11193                           	psect	text68
 11194  012EEC                     __ptext68:
 11195                           	opt callstack 0
 11196  012EEC                     _TMR5_Initialize:
 11197                           	opt callstack 22
 11198                           
 11199                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 11200                           
 11201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11202                           ;incstack = 0
 11203  012EEC  6A9B               	clrf	155,c	;volatile
 11204                           
 11205                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 11206  012EEE  6A9C               	clrf	156,c	;volatile
 11207                           
 11208                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 11209  012EF0  0E01               	movlw	1
 11210  012EF2  6E9D               	movwf	157,c	;volatile
 11211                           
 11212                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 11213  012EF4  0E63               	movlw	99
 11214  012EF6  6E99               	movwf	153,c	;volatile
 11215                           
 11216                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 11217  012EF8  0EC0               	movlw	192
 11218  012EFA  6E98               	movwf	152,c	;volatile
 11219                           
 11220                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11221  012EFC  5098               	movf	152,w,c	;volatile
 11222  012EFE  006F FE64  F036    	movff	16281,btemp	;volatile
 11223  012F04  6A37               	clrf	(btemp+1)^0,c
 11224  012F06  0060  F0D8  F037   	movff	btemp,btemp+1
 11225  012F0C  6A36               	clrf	btemp^0,c
 11226  012F0E  1036               	iorwf	btemp^0,w,c
 11227  012F10  6E27               	movwf	_timer5ReloadVal^0,c	;volatile
 11228  012F12  5037               	movf	(btemp+1)^0,w,c
 11229  012F14  6E28               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 11230                           
 11231                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 11232  012F16  0139               	movlb	57	; () banked
 11233  012F18  9DA8               	bcf	168,6,b	;volatile
 11234                           
 11235                           ; BSR set to: 57
 11236                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 11237  012F1A  8D98               	bsf	152,6,b	;volatile
 11238                           
 11239                           ; BSR set to: 57
 11240                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11241  012F1C  0E64               	movlw	low _TMR5_DefaultInterruptHandler
 11242  012F1E  6EE6               	movwf	postinc1,c
 11243  012F20  0E37               	movlw	high _TMR5_DefaultInterruptHandler
 11244  012F22  6EE6               	movwf	postinc1,c
 11245  012F24  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11246  012F26  6EE6               	movwf	postinc1,c
 11247  012F28  EC26  F09A         	call	_TMR5_SetInterruptHandler	;wreg free
 11248                           
 11249                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 11250  012F2C  0E31               	movlw	49
 11251  012F2E  6E9A               	movwf	154,c	;volatile
 11252                           
 11253                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11254  012F30  0012               	return		;funcret
 11255  012F32                     __end_of_TMR5_Initialize:
 11256                           	opt callstack 0
 11257                           
 11258 ;; *************** function _TMR5_SetInterruptHandler *****************
 11259 ;; Defined at:
 11260 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11263 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1  [STACK] void 
 11268 ;; Registers used:
 11269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11270 ;; Tracked objects:
 11271 ;;		On entry : 3F/39
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11279 ;;Total ram usage:        0 bytes
 11280 ;; Hardware stack levels used:    1
 11281 ;; Hardware stack levels required when called:    6
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_TMR5_Initialize
 11286 ;; This function uses a reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text69
 11290  01344C                     __ptext69:
 11291                           	opt callstack 0
 11292  01344C                     _TMR5_SetInterruptHandler:
 11293                           	opt callstack 22
 11294                           
 11295                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11296                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11297                           
 11298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11299                           ;incstack = 0
 11300  01344C  50E1               	movf	fsr1l,w,c
 11301  01344E  0FFD               	addlw	-3
 11302  013450  6ED9               	movwf	fsr2l,c
 11303  013452  50E2               	movf	fsr1h,w,c
 11304  013454  6EDA               	movwf	fsr2h,c
 11305  013456  0EFF               	movlw	255
 11306  013458  22DA               	addwfc	fsr2h,f,c
 11307  01345A  006F FF78  F001    	movff	postinc2,_TMR5_InterruptHandler
 11308  013460  006F FF78  F002    	movff	postinc2,_TMR5_InterruptHandler+1
 11309  013466  006F FF74  F003    	movff	postdec2,_TMR5_InterruptHandler+2
 11310                           
 11311                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11312  01346C  52E5               	movf	postdec1,f,c
 11313  01346E  52E5               	movf	postdec1,f,c
 11314  013470  52E5               	movf	postdec1,f,c
 11315  013472  0012               	return		;funcret
 11316  013474                     __end_of_TMR5_SetInterruptHandler:
 11317                           	opt callstack 0
 11318                           
 11319 ;; *************** function _TMR2_Initialize *****************
 11320 ;; Defined at:
 11321 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;		None
 11324 ;; Auto vars:     Size  Location     Type
 11325 ;;		None
 11326 ;; Return value:  Size  Location     Type
 11327 ;;                  1  [STACK] void 
 11328 ;; Registers used:
 11329 ;;		wreg, status,2
 11330 ;; Tracked objects:
 11331 ;;		On entry : 0/3E
 11332 ;;		On exit  : 3F/39
 11333 ;;		Unchanged: 0/0
 11334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;Total ram usage:        0 bytes
 11340 ;; Hardware stack levels used:    1
 11341 ;; Hardware stack levels required when called:    6
 11342 ;; This function calls:
 11343 ;;		Nothing
 11344 ;; This function is called by:
 11345 ;;		_SYSTEM_Initialize
 11346 ;; This function uses a reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text70
 11350  0137B2                     __ptext70:
 11351                           	opt callstack 0
 11352  0137B2                     _TMR2_Initialize:
 11353                           	opt callstack 23
 11354                           
 11355                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 11356                           
 11357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11358                           ;incstack = 0
 11359  0137B2  0E01               	movlw	1
 11360  0137B4  6EAE               	movwf	174,c	;volatile
 11361                           
 11362                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 11363  0137B6  6AAD               	clrf	173,c	;volatile
 11364                           
 11365                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11366  0137B8  6AAF               	clrf	175,c	;volatile
 11367                           
 11368                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 11369  0137BA  0E63               	movlw	99
 11370  0137BC  6EAB               	movwf	171,c	;volatile
 11371                           
 11372                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11373  0137BE  6AAA               	clrf	170,c	;volatile
 11374                           
 11375                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 11376  0137C0  0139               	movlb	57	; () banked
 11377  0137C2  95A4               	bcf	164,2,b	;volatile
 11378                           
 11379                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 11380  0137C4  0EC0               	movlw	192
 11381  0137C6  6EAC               	movwf	172,c	;volatile
 11382                           
 11383                           ; BSR set to: 57
 11384                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11385  0137C8  0012               	return		;funcret
 11386  0137CA                     __end_of_TMR2_Initialize:
 11387                           	opt callstack 0
 11388                           
 11389 ;; *************** function _SPI1_Initialize *****************
 11390 ;; Defined at:
 11391 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1  [STACK] void 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2
 11400 ;; Tracked objects:
 11401 ;;		On entry : 3F/39
 11402 ;;		On exit  : 3F/3D
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    6
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_SYSTEM_Initialize
 11416 ;; This function uses a reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text71
 11420  0137E2                     __ptext71:
 11421                           	opt callstack 0
 11422  0137E2                     _SPI1_Initialize:
 11423                           	opt callstack 23
 11424                           
 11425                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11426                           
 11427                           ; BSR set to: 57
 11428                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11429                           ;incstack = 0
 11430  0137E2  0E40               	movlw	64
 11431  0137E4  013D               	movlb	61	; () banked
 11432  0137E6  6F15               	movwf	21,b	;volatile
 11433                           
 11434                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11435  0137E8  0E03               	movlw	3
 11436  0137EA  6F16               	movwf	22,b	;volatile
 11437                           
 11438                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11439  0137EC  0E4F               	movlw	79
 11440  0137EE  6F19               	movwf	25,b	;volatile
 11441                           
 11442                           ; BSR set to: 61
 11443                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11444  0137F0  6B1C               	clrf	28,b	;volatile
 11445                           
 11446                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11447  0137F2  0E83               	movlw	131
 11448  0137F4  6F14               	movwf	20,b	;volatile
 11449                           
 11450                           ; BSR set to: 61
 11451                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11452  0137F6  0012               	return		;funcret
 11453  0137F8                     __end_of_SPI1_Initialize:
 11454                           	opt callstack 0
 11455                           
 11456 ;; *************** function _PWM8_Initialize *****************
 11457 ;; Defined at:
 11458 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1  [STACK] void 
 11465 ;; Registers used:
 11466 ;;		wreg, status,2
 11467 ;; Tracked objects:
 11468 ;;		On entry : 3F/39
 11469 ;;		On exit  : 3F/3F
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11476 ;;Total ram usage:        0 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:    6
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_SYSTEM_Initialize
 11483 ;; This function uses a reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text72
 11487  0137F8                     __ptext72:
 11488                           	opt callstack 0
 11489  0137F8                     _PWM8_Initialize:
 11490                           	opt callstack 23
 11491                           
 11492                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 11493                           
 11494                           ; BSR set to: 61
 11495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11496                           ;incstack = 0
 11497  0137F8  0E80               	movlw	128
 11498  0137FA  6E62               	movwf	98,c	;volatile
 11499                           
 11500                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 11501  0137FC  6A61               	clrf	97,c	;volatile
 11502                           
 11503                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 11504  0137FE  0E40               	movlw	64
 11505  013800  6E60               	movwf	96,c	;volatile
 11506                           
 11507                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 11508  013802  013F               	movlb	63	; () banked
 11509  013804  515F               	movf	95,w,b	;volatile
 11510  013806  0B3F               	andlw	-193
 11511  013808  0940               	iorlw	64
 11512  01380A  6F5F               	movwf	95,b	;volatile
 11513                           
 11514                           ; BSR set to: 63
 11515                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11516  01380C  0012               	return		;funcret
 11517  01380E                     __end_of_PWM8_Initialize:
 11518                           	opt callstack 0
 11519                           
 11520 ;; *************** function _PMD_Initialize *****************
 11521 ;; Defined at:
 11522 ;;		line 89 in file "mcc_generated_files/mcc.c"
 11523 ;; Parameters:    Size  Location     Type
 11524 ;;		None
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;		None
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  1  [STACK] void 
 11529 ;; Registers used:
 11530 ;;		None
 11531 ;; Tracked objects:
 11532 ;;		On entry : 3F/39
 11533 ;;		On exit  : 3F/39
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11540 ;;Total ram usage:        0 bytes
 11541 ;; Hardware stack levels used:    1
 11542 ;; Hardware stack levels required when called:    6
 11543 ;; This function calls:
 11544 ;;		Nothing
 11545 ;; This function is called by:
 11546 ;;		_SYSTEM_Initialize
 11547 ;; This function uses a reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text73
 11551  013824                     __ptext73:
 11552                           	opt callstack 0
 11553  013824                     _PMD_Initialize:
 11554                           	opt callstack 23
 11555                           
 11556                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 11557                           
 11558                           ; BSR set to: 63
 11559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11560                           ;incstack = 0
 11561  013824  0139               	movlb	57	; () banked
 11562  013826  6BC0               	clrf	192,b	;volatile
 11563                           
 11564                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 11565  013828  6BC1               	clrf	193,b	;volatile
 11566                           
 11567                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 11568  01382A  6BC2               	clrf	194,b	;volatile
 11569                           
 11570                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 11571  01382C  6BC3               	clrf	195,b	;volatile
 11572                           
 11573                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 11574  01382E  6BC4               	clrf	196,b	;volatile
 11575                           
 11576                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 11577  013830  6BC5               	clrf	197,b	;volatile
 11578                           
 11579                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 11580  013832  6BC6               	clrf	198,b	;volatile
 11581                           
 11582                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 11583  013834  6BC7               	clrf	199,b	;volatile
 11584                           
 11585                           ; BSR set to: 57
 11586                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11587  013836  0012               	return		;funcret
 11588  013838                     __end_of_PMD_Initialize:
 11589                           	opt callstack 0
 11590                           
 11591 ;; *************** function _PIN_MANAGER_Initialize *****************
 11592 ;; Defined at:
 11593 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1  [STACK] void 
 11600 ;; Registers used:
 11601 ;;		wreg, status,2
 11602 ;; Tracked objects:
 11603 ;;		On entry : 3F/39
 11604 ;;		On exit  : 3F/3A
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11611 ;;Total ram usage:        0 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    6
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_SYSTEM_Initialize
 11618 ;; This function uses a reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text74
 11622  0127CE                     __ptext74:
 11623                           	opt callstack 0
 11624  0127CE                     _PIN_MANAGER_Initialize:
 11625                           	opt callstack 23
 11626                           
 11627                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11628                           
 11629                           ; BSR set to: 57
 11630                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11631                           ;incstack = 0
 11632  0127CE  0E07               	movlw	7
 11633  0127D0  6EBE               	movwf	190,c	;volatile
 11634                           
 11635                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11636  0127D2  6ABD               	clrf	189,c	;volatile
 11637                           
 11638                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11639  0127D4  6ABA               	clrf	186,c	;volatile
 11640                           
 11641                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11642  0127D6  6ABF               	clrf	191,c	;volatile
 11643                           
 11644                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11645  0127D8  6ABB               	clrf	187,c	;volatile
 11646                           
 11647                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 11648  0127DA  0E07               	movlw	7
 11649  0127DC  6EBC               	movwf	188,c	;volatile
 11650                           
 11651                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11652  0127DE  6AC6               	clrf	198,c	;volatile
 11653                           
 11654                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 11655  0127E0  0E0F               	movlw	15
 11656  0127E2  6EC7               	movwf	199,c	;volatile
 11657                           
 11658                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 11659  0127E4  68C2               	setf	194,c	;volatile
 11660                           
 11661                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11662  0127E6  0EBF               	movlw	191
 11663  0127E8  6EC3               	movwf	195,c	;volatile
 11664                           
 11665                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 11666  0127EA  0E90               	movlw	144
 11667  0127EC  6EC4               	movwf	196,c	;volatile
 11668                           
 11669                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 11670  0127EE  0E0C               	movlw	12
 11671  0127F0  6EC5               	movwf	197,c	;volatile
 11672                           
 11673                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 11674  0127F2  013A               	movlb	58	; () banked
 11675  0127F4  6B70               	clrf	112,b	;volatile
 11676                           
 11677                           ; BSR set to: 58
 11678                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 11679  0127F6  6B60               	clrf	96,b	;volatile
 11680                           
 11681                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 11682  0127F8  0E3C               	movlw	60
 11683  0127FA  6F50               	movwf	80,b	;volatile
 11684                           
 11685                           ; BSR set to: 58
 11686                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11687  0127FC  6B80               	clrf	128,b	;volatile
 11688                           
 11689                           ; BSR set to: 58
 11690                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 11691  0127FE  6B90               	clrf	144,b	;volatile
 11692                           
 11693                           ; BSR set to: 58
 11694                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 11695  012800  6940               	setf	64,b	;volatile
 11696                           
 11697                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11698  012802  0E0C               	movlw	12
 11699  012804  6F71               	movwf	113,b	;volatile
 11700                           
 11701                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 11702  012806  0E0F               	movlw	15
 11703  012808  6F91               	movwf	145,b	;volatile
 11704                           
 11705                           ; BSR set to: 58
 11706                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11707  01280A  6B81               	clrf	129,b	;volatile
 11708                           
 11709                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11710  01280C  0E87               	movlw	135
 11711  01280E  6F51               	movwf	81,b	;volatile
 11712                           
 11713                           ; BSR set to: 58
 11714                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11715  012810  6B41               	clrf	65,b	;volatile
 11716                           
 11717                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 11718  012812  0E97               	movlw	151
 11719  012814  6F61               	movwf	97,b	;volatile
 11720                           
 11721                           ; BSR set to: 58
 11722                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11723  012816  6B82               	clrf	130,b	;volatile
 11724                           
 11725                           ; BSR set to: 58
 11726                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11727  012818  6B92               	clrf	146,b	;volatile
 11728                           
 11729                           ; BSR set to: 58
 11730                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11731  01281A  6B42               	clrf	66,b	;volatile
 11732                           
 11733                           ; BSR set to: 58
 11734                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11735  01281C  6B52               	clrf	82,b	;volatile
 11736                           
 11737                           ; BSR set to: 58
 11738                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11739  01281E  6B62               	clrf	98,b	;volatile
 11740                           
 11741                           ; BSR set to: 58
 11742                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11743  012820  6B72               	clrf	114,b	;volatile
 11744                           
 11745                           ; BSR set to: 58
 11746                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11747  012822  6943               	setf	67,b	;volatile
 11748                           
 11749                           ; BSR set to: 58
 11750                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11751  012824  6953               	setf	83,b	;volatile
 11752                           
 11753                           ; BSR set to: 58
 11754                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11755  012826  6963               	setf	99,b	;volatile
 11756                           
 11757                           ; BSR set to: 58
 11758                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11759  012828  6973               	setf	115,b	;volatile
 11760                           
 11761                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11762  01282A  0E07               	movlw	7
 11763  01282C  6F83               	movwf	131,b	;volatile
 11764                           
 11765                           ; BSR set to: 58
 11766                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11767  01282E  6993               	setf	147,b	;volatile
 11768                           
 11769                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11770  012830  0E0F               	movlw	15
 11771  012832  6FE8               	movwf	232,b	;volatile
 11772                           
 11773                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 11774  012834  0E13               	movlw	19
 11775  012836  6FDE               	movwf	222,b	;volatile
 11776                           
 11777                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 11778  012838  0E16               	movlw	22
 11779  01283A  6F0E               	movwf	14,b	;volatile
 11780                           
 11781                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 11782  01283C  0E1E               	movlw	30
 11783  01283E  6F13               	movwf	19,b	;volatile
 11784                           
 11785                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 11786  012840  0E08               	movlw	8
 11787  012842  6FC0               	movwf	192,b	;volatile
 11788                           
 11789                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 11790  012844  0E10               	movlw	16
 11791  012846  6F19               	movwf	25,b	;volatile
 11792                           
 11793                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 11794  012848  0E09               	movlw	9
 11795  01284A  6FC1               	movwf	193,b	;volatile
 11796                           
 11797                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 11798  01284C  0E1F               	movlw	31
 11799  01284E  6F15               	movwf	21,b	;volatile
 11800                           
 11801                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 11802  012850  0E13               	movlw	19
 11803  012852  6F16               	movwf	22,b	;volatile
 11804                           
 11805                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 11806  012854  0E17               	movlw	23
 11807  012856  6FE5               	movwf	229,b	;volatile
 11808                           
 11809                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 11810  012858  0E14               	movlw	20
 11811  01285A  6FDF               	movwf	223,b	;volatile
 11812                           
 11813                           ; BSR set to: 58
 11814                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11815  01285C  0012               	return		;funcret
 11816  01285E                     __end_of_PIN_MANAGER_Initialize:
 11817                           	opt callstack 0
 11818                           
 11819 ;; *************** function _OSCILLATOR_Initialize *****************
 11820 ;; Defined at:
 11821 ;;		line 71 in file "mcc_generated_files/mcc.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;		None
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  1  [STACK] void 
 11828 ;; Registers used:
 11829 ;;		wreg, status,2
 11830 ;; Tracked objects:
 11831 ;;		On entry : 3F/3A
 11832 ;;		On exit  : 3F/39
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11839 ;;Total ram usage:        0 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    6
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_SYSTEM_Initialize
 11846 ;; This function uses a reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text75
 11850  01380E                     __ptext75:
 11851                           	opt callstack 0
 11852  01380E                     _OSCILLATOR_Initialize:
 11853                           	opt callstack 23
 11854                           
 11855                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 11856                           
 11857                           ; BSR set to: 58
 11858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11859                           ;incstack = 0
 11860  01380E  0E20               	movlw	32
 11861  013810  0139               	movlb	57	; () banked
 11862  013812  6FD9               	movwf	217,b	;volatile
 11863                           
 11864                           ; BSR set to: 57
 11865                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 11866  013814  6BDB               	clrf	219,b	;volatile
 11867                           
 11868                           ; BSR set to: 57
 11869                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 11870  013816  6BDD               	clrf	221,b	;volatile
 11871                           
 11872                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 11873  013818  0E02               	movlw	2
 11874  01381A  6FDF               	movwf	223,b	;volatile
 11875                           
 11876                           ; BSR set to: 57
 11877                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 11878  01381C  6BDE               	clrf	222,b	;volatile
 11879  01381E                     l171:
 11880                           
 11881                           ; BSR set to: 57
 11882                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 11883  01381E  B1DC               	btfsc	220,0,b	;volatile
 11884  013820  0012               	return	
 11885  013822  D7FD               	goto	l171
 11886  013824                     __end_of_OSCILLATOR_Initialize:
 11887                           	opt callstack 0
 11888                           
 11889 ;; *************** function _INTERRUPT_Initialize *****************
 11890 ;; Defined at:
 11891 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;		None
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  state           1  [STACK] _Bool 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1  [STACK] void 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 3F/39
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11909 ;;Total ram usage:        0 bytes
 11910 ;; Hardware stack levels used:    1
 11911 ;; Hardware stack levels required when called:    6
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		_SYSTEM_Initialize
 11916 ;; This function uses a reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text76
 11920  012B20                     __ptext76:
 11921                           	opt callstack 0
 11922  012B20                     _INTERRUPT_Initialize:
 11923                           	opt callstack 0
 11924                           
 11925                           ; BSR set to: 57
 11926                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11927  012B20  52E6               	movf	postinc1,f,c
 11928                           
 11929                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11930                           
 11931                           ;incstack = 0
 11932  012B22  8AD2               	bsf	210,5,c	;volatile
 11933                           
 11934                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11935  012B24  AED2               	btfss	16338,7,c	;volatile
 11936  012B26  D003               	goto	u2880
 11937  012B28  6A41               	clrf	(btemp+11)^0,c
 11938  012B2A  2A41               	incf	(btemp+11)^0,f,c
 11939  012B2C  D001               	goto	u2898
 11940  012B2E                     u2880:
 11941  012B2E  6A41               	clrf	(btemp+11)^0,c
 11942  012B30                     u2898:
 11943                           
 11944                           ;stkvar	_state @ sp[(-1)+0]
 11945  012B30  0EFF               	movlw	-1
 11946  012B32  0060  F107  FFE3   	movff	btemp+11,plusw1
 11947                           
 11948                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11949  012B38  9ED2               	bcf	16338,7,c	;volatile
 11950                           
 11951                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11952  012B3A  0E55               	movlw	85
 11953  012B3C  6ED4               	movwf	212,c	;volatile
 11954                           
 11955                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11956  012B3E  0EAA               	movlw	170
 11957  012B40  6ED4               	movwf	212,c	;volatile
 11958                           
 11959                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11960  012B42  90D4               	bcf	212,0,c	;volatile
 11961                           
 11962                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11963  012B44  0138               	movlb	56	; () banked
 11964  012B46  6B9F               	clrf	159,b	;volatile
 11965                           
 11966                           ; BSR set to: 56
 11967                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11968  012B48  6B9E               	clrf	158,b	;volatile
 11969                           
 11970                           ; BSR set to: 56
 11971                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11972  012B4A  0E08               	movlw	8
 11973  012B4C  6F9D               	movwf	157,b	;volatile
 11974                           
 11975                           ; BSR set to: 56
 11976                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11977  012B4E  0E55               	movlw	85
 11978  012B50  6ED4               	movwf	212,c	;volatile
 11979                           
 11980                           ; BSR set to: 56
 11981                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11982  012B52  0EAA               	movlw	170
 11983  012B54  6ED4               	movwf	212,c	;volatile
 11984                           
 11985                           ; BSR set to: 56
 11986                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11987  012B56  80D4               	bsf	212,0,c	;volatile
 11988                           
 11989                           ; BSR set to: 56
 11990                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11991                           ;stkvar	_state @ sp[(-1)+0]
 11992  012B58  0EFF               	movlw	-1
 11993  012B5A  B0E3               	btfsc	plusw1,0,c
 11994  012B5C  D002               	bra	u2905
 11995  012B5E  9ED2               	bcf	16338,7,c	;volatile
 11996  012B60  D001               	bra	u2906
 11997  012B62                     u2905:
 11998  012B62  8ED2               	bsf	16338,7,c	;volatile
 11999  012B64                     u2906:
 12000                           
 12001                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12002  012B64  0139               	movlb	57	; () banked
 12003  012B66  8782               	bsf	130,3,b	;volatile
 12004                           
 12005                           ; BSR set to: 57
 12006                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12007  012B68  8382               	bsf	130,1,b	;volatile
 12008                           
 12009                           ; BSR set to: 57
 12010                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12011  012B6A  8182               	bsf	130,0,b	;volatile
 12012                           
 12013                           ; BSR set to: 57
 12014                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12015  012B6C  8582               	bsf	130,2,b	;volatile
 12016                           
 12017                           ; BSR set to: 57
 12018                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12019  012B6E  8786               	bsf	134,3,b	;volatile
 12020                           
 12021                           ; BSR set to: 57
 12022                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12023  012B70  8586               	bsf	134,2,b	;volatile
 12024                           
 12025                           ; BSR set to: 57
 12026                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12027  012B72  8983               	bsf	131,4,b	;volatile
 12028                           
 12029                           ; BSR set to: 57
 12030                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12031  012B74  8783               	bsf	131,3,b	;volatile
 12032                           
 12033                           ; BSR set to: 57
 12034                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12035  012B76  8181               	bsf	129,0,b	;volatile
 12036                           
 12037                           ; BSR set to: 57
 12038                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12039  012B78  8185               	bsf	133,0,b	;volatile
 12040                           
 12041                           ; BSR set to: 57
 12042                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 12043  012B7A  8189               	bsf	137,0,b	;volatile
 12044                           
 12045                           ; BSR set to: 57
 12046                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 12047  012B7C  9D88               	bcf	136,6,b	;volatile
 12048                           
 12049                           ; BSR set to: 57
 12050                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 12051  012B7E  8581               	bsf	129,2,b	;volatile
 12052                           
 12053                           ; BSR set to: 57
 12054                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 12055  012B80  8781               	bsf	129,3,b	;volatile
 12056                           
 12057                           ; BSR set to: 57
 12058                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12059  012B82  52E5               	movf	postdec1,f,c
 12060  012B84  0012               	return		;funcret
 12061  012B86                     __end_of_INTERRUPT_Initialize:
 12062                           	opt callstack 0
 12063                           
 12064 ;; *************** function _FVR_Initialize *****************
 12065 ;; Defined at:
 12066 ;;		line 58 in file "mcc_generated_files/fvr.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;		None
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;		None
 12071 ;; Return value:  Size  Location     Type
 12072 ;;                  1  [STACK] void 
 12073 ;; Registers used:
 12074 ;;		wreg, status,2
 12075 ;; Tracked objects:
 12076 ;;		On entry : 3F/39
 12077 ;;		On exit  : 3F/3E
 12078 ;;		Unchanged: 0/0
 12079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12084 ;;Total ram usage:        0 bytes
 12085 ;; Hardware stack levels used:    1
 12086 ;; Hardware stack levels required when called:    6
 12087 ;; This function calls:
 12088 ;;		Nothing
 12089 ;; This function is called by:
 12090 ;;		_SYSTEM_Initialize
 12091 ;; This function uses a reentrant model
 12092 ;;
 12093                           
 12094                           	psect	text77
 12095  0138EA                     __ptext77:
 12096                           	opt callstack 0
 12097  0138EA                     _FVR_Initialize:
 12098                           	opt callstack 23
 12099                           
 12100                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 12101                           
 12102                           ; BSR set to: 57
 12103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12104                           ;incstack = 0
 12105  0138EA  0EAF               	movlw	175
 12106  0138EC  013E               	movlb	62	; () banked
 12107  0138EE  6FC1               	movwf	193,b	;volatile
 12108                           
 12109                           ; BSR set to: 62
 12110                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12111  0138F0  0012               	return		;funcret
 12112  0138F2                     __end_of_FVR_Initialize:
 12113                           	opt callstack 0
 12114                           
 12115 ;; *************** function _EXT_INT_Initialize *****************
 12116 ;; Defined at:
 12117 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;		None
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;		None
 12122 ;; Return value:  Size  Location     Type
 12123 ;;                  1  [STACK] void 
 12124 ;; Registers used:
 12125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12126 ;; Tracked objects:
 12127 ;;		On entry : 3F/3F
 12128 ;;		On exit  : 3F/39
 12129 ;;		Unchanged: 0/0
 12130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12135 ;;Total ram usage:        0 bytes
 12136 ;; Hardware stack levels used:    1
 12137 ;; Hardware stack levels required when called:    7
 12138 ;; This function calls:
 12139 ;;		_INT0_SetInterruptHandler
 12140 ;;		_INT1_SetInterruptHandler
 12141 ;; This function is called by:
 12142 ;;		_SYSTEM_Initialize
 12143 ;; This function uses a reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text78
 12147  0131C8                     __ptext78:
 12148                           	opt callstack 0
 12149  0131C8                     _EXT_INT_Initialize:
 12150                           	opt callstack 22
 12151                           
 12152                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 12153                           
 12154                           ; BSR set to: 62
 12155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12156                           ;incstack = 0
 12157  0131C8  0139               	movlb	57	; () banked
 12158  0131CA  91A1               	bcf	161,0,b	;volatile
 12159                           
 12160                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 12161  0131CC  90D2               	bcf	210,0,c	;volatile
 12162                           
 12163                           ; BSR set to: 57
 12164                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 12165  0131CE  0E0A               	movlw	low _INT0_DefaultInterruptHandler
 12166  0131D0  6EE6               	movwf	postinc1,c
 12167  0131D2  0E39               	movlw	high _INT0_DefaultInterruptHandler
 12168  0131D4  6EE6               	movwf	postinc1,c
 12169  0131D6  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12170  0131D8  6EE6               	movwf	postinc1,c
 12171  0131DA  EC4E  F09A         	call	_INT0_SetInterruptHandler	;wreg free
 12172                           
 12173                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 12174  0131DE  0139               	movlb	57	; () banked
 12175  0131E0  8191               	bsf	145,0,b	;volatile
 12176                           
 12177                           ; BSR set to: 57
 12178                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 12179  0131E2  91A5               	bcf	165,0,b	;volatile
 12180                           
 12181                           ; BSR set to: 57
 12182                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 12183  0131E4  92D2               	bcf	210,1,c	;volatile
 12184                           
 12185                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 12186  0131E6  0E0C               	movlw	low _INT1_DefaultInterruptHandler
 12187  0131E8  6EE6               	movwf	postinc1,c
 12188  0131EA  0E39               	movlw	high _INT1_DefaultInterruptHandler
 12189  0131EC  6EE6               	movwf	postinc1,c
 12190  0131EE  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12191  0131F0  6EE6               	movwf	postinc1,c
 12192  0131F2  EC3A  F09A         	call	_INT1_SetInterruptHandler	;wreg free
 12193                           
 12194                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 12195  0131F6  0139               	movlb	57	; () banked
 12196  0131F8  8195               	bsf	149,0,b	;volatile
 12197                           
 12198                           ; BSR set to: 57
 12199                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12200  0131FA  0012               	return		;funcret
 12201  0131FC                     __end_of_EXT_INT_Initialize:
 12202                           	opt callstack 0
 12203                           
 12204 ;; *************** function _INT1_SetInterruptHandler *****************
 12205 ;; Defined at:
 12206 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12209 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;                  1  [STACK] void 
 12214 ;; Registers used:
 12215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12216 ;; Tracked objects:
 12217 ;;		On entry : 3F/39
 12218 ;;		On exit  : 0/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:    6
 12228 ;; This function calls:
 12229 ;;		Nothing
 12230 ;; This function is called by:
 12231 ;;		_EXT_INT_Initialize
 12232 ;; This function uses a reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text79
 12236  013474                     __ptext79:
 12237                           	opt callstack 0
 12238  013474                     _INT1_SetInterruptHandler:
 12239                           	opt callstack 22
 12240                           
 12241                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 12242                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12243                           
 12244                           ; BSR set to: 57
 12245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12246                           ;incstack = 0
 12247  013474  50E1               	movf	fsr1l,w,c
 12248  013476  0FFD               	addlw	-3
 12249  013478  6ED9               	movwf	fsr2l,c
 12250  01347A  50E2               	movf	fsr1h,w,c
 12251  01347C  6EDA               	movwf	fsr2h,c
 12252  01347E  0EFF               	movlw	255
 12253  013480  22DA               	addwfc	fsr2h,f,c
 12254  013482  006F FF78  F019    	movff	postinc2,_INT1_InterruptHandler
 12255  013488  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler+1
 12256  01348E  006F FF74  F01B    	movff	postdec2,_INT1_InterruptHandler+2
 12257                           
 12258                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12259  013494  52E5               	movf	postdec1,f,c
 12260  013496  52E5               	movf	postdec1,f,c
 12261  013498  52E5               	movf	postdec1,f,c
 12262  01349A  0012               	return		;funcret
 12263  01349C                     __end_of_INT1_SetInterruptHandler:
 12264                           	opt callstack 0
 12265                           
 12266 ;; *************** function _INT0_SetInterruptHandler *****************
 12267 ;; Defined at:
 12268 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12271 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1  [STACK] void 
 12276 ;; Registers used:
 12277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12278 ;; Tracked objects:
 12279 ;;		On entry : 3F/39
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12287 ;;Total ram usage:        0 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    6
 12290 ;; This function calls:
 12291 ;;		Nothing
 12292 ;; This function is called by:
 12293 ;;		_EXT_INT_Initialize
 12294 ;; This function uses a reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text80
 12298  01349C                     __ptext80:
 12299                           	opt callstack 0
 12300  01349C                     _INT0_SetInterruptHandler:
 12301                           	opt callstack 22
 12302                           
 12303                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 12304                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12305                           
 12306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12307                           ;incstack = 0
 12308  01349C  50E1               	movf	fsr1l,w,c
 12309  01349E  0FFD               	addlw	-3
 12310  0134A0  6ED9               	movwf	fsr2l,c
 12311  0134A2  50E2               	movf	fsr1h,w,c
 12312  0134A4  6EDA               	movwf	fsr2h,c
 12313  0134A6  0EFF               	movlw	255
 12314  0134A8  22DA               	addwfc	fsr2h,f,c
 12315  0134AA  006F FF78  F01C    	movff	postinc2,_INT0_InterruptHandler
 12316  0134B0  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler+1
 12317  0134B6  006F FF74  F01E    	movff	postdec2,_INT0_InterruptHandler+2
 12318                           
 12319                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12320  0134BC  52E5               	movf	postdec1,f,c
 12321  0134BE  52E5               	movf	postdec1,f,c
 12322  0134C0  52E5               	movf	postdec1,f,c
 12323  0134C2  0012               	return		;funcret
 12324  0134C4                     __end_of_INT0_SetInterruptHandler:
 12325                           	opt callstack 0
 12326                           
 12327 ;; *************** function _DMA2_Initialize *****************
 12328 ;; Defined at:
 12329 ;;		line 61 in file "mcc_generated_files/dma2.c"
 12330 ;; Parameters:    Size  Location     Type
 12331 ;;		None
 12332 ;; Auto vars:     Size  Location     Type
 12333 ;;		None
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  1  [STACK] void 
 12336 ;; Registers used:
 12337 ;;		wreg, status,2
 12338 ;; Tracked objects:
 12339 ;;		On entry : 3F/3D
 12340 ;;		On exit  : 3F/3B
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12347 ;;Total ram usage:        0 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; Hardware stack levels required when called:    6
 12350 ;; This function calls:
 12351 ;;		Nothing
 12352 ;; This function is called by:
 12353 ;;		_SYSTEM_Initialize
 12354 ;; This function uses a reentrant model
 12355 ;;
 12356                           
 12357                           	psect	text81
 12358  012D62                     __ptext81:
 12359                           	opt callstack 0
 12360  012D62                     _DMA2_Initialize:
 12361                           	opt callstack 23
 12362                           
 12363                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 12364                           
 12365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12366                           ;incstack = 0
 12367  012D62  0E00               	movlw	0
 12368  012D64  013B               	movlb	59	; () banked
 12369  012D66  6FD9               	movwf	217,b	;volatile
 12370  012D68  0E10               	movlw	16
 12371  012D6A  6FDA               	movwf	218,b	;volatile
 12372  012D6C  0E00               	movlw	0
 12373  012D6E  6FDB               	movwf	219,b	;volatile
 12374                           
 12375                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 12376  012D70  0E3F               	movlw	63
 12377  012D72  6FD1               	movwf	209,b	;volatile
 12378  012D74  0EBB               	movlw	187
 12379  012D76  6FD0               	movwf	208,b	;volatile
 12380                           
 12381                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 12382  012D78  0E03               	movlw	3
 12383  012D7A  6FDD               	movwf	221,b	;volatile
 12384                           
 12385                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 12386  012D7C  0E00               	movlw	0
 12387  012D7E  6FD8               	movwf	216,b	;volatile
 12388  012D80  0E01               	movlw	1
 12389  012D82  6FD7               	movwf	215,b	;volatile
 12390                           
 12391                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 12392  012D84  0E00               	movlw	0
 12393  012D86  6FCF               	movwf	207,b	;volatile
 12394  012D88  0E01               	movlw	1
 12395  012D8A  6FCE               	movwf	206,b	;volatile
 12396                           
 12397                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 12398  012D8C  0E46               	movlw	70
 12399  012D8E  6FDF               	movwf	223,b	;volatile
 12400                           
 12401                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 12402  012D90  0E3D               	movlw	61
 12403  012D92  6FDE               	movwf	222,b	;volatile
 12404                           
 12405                           ; BSR set to: 59
 12406                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 12407  012D94  0139               	movlb	57	; () banked
 12408  012D96  97A5               	bcf	165,3,b	;volatile
 12409                           
 12410                           ; BSR set to: 57
 12411                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 12412  012D98  95A5               	bcf	165,2,b	;volatile
 12413                           
 12414                           ; BSR set to: 57
 12415                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 12416  012D9A  9BA5               	bcf	165,5,b	;volatile
 12417                           
 12418                           ; BSR set to: 57
 12419                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 12420  012D9C  99A5               	bcf	165,4,b	;volatile
 12421                           
 12422                           ; BSR set to: 57
 12423                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 12424  012D9E  9795               	bcf	149,3,b	;volatile
 12425                           
 12426                           ; BSR set to: 57
 12427                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 12428  012DA0  9595               	bcf	149,2,b	;volatile
 12429                           
 12430                           ; BSR set to: 57
 12431                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 12432  012DA2  9B95               	bcf	149,5,b	;volatile
 12433                           
 12434                           ; BSR set to: 57
 12435                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 12436  012DA4  9995               	bcf	149,4,b	;volatile
 12437  012DA6  9ED2               	bcf	16338,7,c	;# 
 12438  012DA8  0139               	banksel	14831	;# 
 12439  012DAA  0E55               	movlw	85	;# 
 12440  012DAC  6FEF               	movwf	14831,b	;# 
 12441  012DAE  0EAA               	movlw	170	;# 
 12442  012DB0  6FEF               	movwf	14831,b	;# 
 12443  012DB2  81EF               	bsf	14831,0,b	;# 
 12444  012DB4  8ED2               	bsf	16338,7,c	;# 
 12445                           
 12446                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 12447  012DB6  013B               	movlb	59	; () banked
 12448  012DB8  6BDC               	clrf	220,b	;volatile
 12449                           
 12450                           ; BSR set to: 59
 12451                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12452  012DBA  0012               	return		;funcret
 12453  012DBC                     __end_of_DMA2_Initialize:
 12454                           	opt callstack 0
 12455                           
 12456 ;; *************** function _DMA1_Initialize *****************
 12457 ;; Defined at:
 12458 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;		None
 12461 ;; Auto vars:     Size  Location     Type
 12462 ;;		None
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  1  [STACK] void 
 12465 ;; Registers used:
 12466 ;;		wreg, status,2
 12467 ;; Tracked objects:
 12468 ;;		On entry : 3F/3B
 12469 ;;		On exit  : 3F/3B
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12476 ;;Total ram usage:        0 bytes
 12477 ;; Hardware stack levels used:    1
 12478 ;; Hardware stack levels required when called:    6
 12479 ;; This function calls:
 12480 ;;		Nothing
 12481 ;; This function is called by:
 12482 ;;		_SYSTEM_Initialize
 12483 ;; This function uses a reentrant model
 12484 ;;
 12485                           
 12486                           	psect	text82
 12487  0129E4                     __ptext82:
 12488                           	opt callstack 0
 12489  0129E4                     _DMA1_Initialize:
 12490                           	opt callstack 23
 12491                           
 12492                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12493                           
 12494                           ; BSR set to: 59
 12495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12496                           ;incstack = 0
 12497  0129E4  0E00               	movlw	0
 12498  0129E6  013B               	movlb	59	; () banked
 12499  0129E8  6FF9               	movwf	249,b	;volatile
 12500  0129EA  0E10               	movlw	16
 12501  0129EC  6FFA               	movwf	250,b	;volatile
 12502  0129EE  0E00               	movlw	0
 12503  0129F0  6FFB               	movwf	251,b	;volatile
 12504                           
 12505                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12506  0129F2  0E3D               	movlw	61
 12507  0129F4  6FF1               	movwf	241,b	;volatile
 12508  0129F6  0E11               	movlw	17
 12509  0129F8  6FF0               	movwf	240,b	;volatile
 12510                           
 12511                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12512  0129FA  0E03               	movlw	3
 12513  0129FC  6FFD               	movwf	253,b	;volatile
 12514                           
 12515                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12516  0129FE  0E00               	movlw	0
 12517  012A00  6FF8               	movwf	248,b	;volatile
 12518  012A02  0E01               	movlw	1
 12519  012A04  6FF7               	movwf	247,b	;volatile
 12520                           
 12521                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12522  012A06  0E00               	movlw	0
 12523  012A08  6FEF               	movwf	239,b	;volatile
 12524  012A0A  0E01               	movlw	1
 12525  012A0C  6FEE               	movwf	238,b	;volatile
 12526                           
 12527                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12528  012A0E  0E15               	movlw	21
 12529  012A10  6FFF               	movwf	255,b	;volatile
 12530                           
 12531                           ; BSR set to: 59
 12532                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12533  012A12  6BFE               	clrf	254,b	;volatile
 12534                           
 12535                           ; BSR set to: 59
 12536                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12537  012A14  0139               	movlb	57	; () banked
 12538  012A16  93A2               	bcf	162,1,b	;volatile
 12539                           
 12540                           ; BSR set to: 57
 12541                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12542  012A18  91A2               	bcf	162,0,b	;volatile
 12543                           
 12544                           ; BSR set to: 57
 12545                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12546  012A1A  97A2               	bcf	162,3,b	;volatile
 12547                           
 12548                           ; BSR set to: 57
 12549                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12550  012A1C  95A2               	bcf	162,2,b	;volatile
 12551                           
 12552                           ; BSR set to: 57
 12553                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12554  012A1E  8392               	bsf	146,1,b	;volatile
 12555                           
 12556                           ; BSR set to: 57
 12557                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12558  012A20  8192               	bsf	146,0,b	;volatile
 12559                           
 12560                           ; BSR set to: 57
 12561                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12562  012A22  8792               	bsf	146,3,b	;volatile
 12563                           
 12564                           ; BSR set to: 57
 12565                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12566  012A24  8592               	bsf	146,2,b	;volatile
 12567                           
 12568                           ; BSR set to: 57
 12569                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12570  012A26  6BF1               	clrf	241,b	;volatile
 12571                           
 12572                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12573  012A28  0E01               	movlw	1
 12574  012A2A  6FF2               	movwf	242,b	;volatile
 12575                           
 12576                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12577  012A2C  0E04               	movlw	4
 12578  012A2E  6FF3               	movwf	243,b	;volatile
 12579                           
 12580                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12581  012A30  0E02               	movlw	2
 12582  012A32  6FF4               	movwf	244,b	;volatile
 12583                           
 12584                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12585  012A34  0E03               	movlw	3
 12586  012A36  6FF7               	movwf	247,b	;volatile
 12587  012A38  9ED2               	bcf	16338,7,c	;# 
 12588  012A3A  0139               	banksel	14831	;# 
 12589  012A3C  0E55               	movlw	85	;# 
 12590  012A3E  6FEF               	movwf	14831,b	;# 
 12591  012A40  0EAA               	movlw	170	;# 
 12592  012A42  6FEF               	movwf	14831,b	;# 
 12593  012A44  81EF               	bsf	14831,0,b	;# 
 12594  012A46  8ED2               	bsf	16338,7,c	;# 
 12595                           
 12596                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12597  012A48  013B               	movlb	59	; () banked
 12598  012A4A  6BFC               	clrf	252,b	;volatile
 12599                           
 12600                           ; BSR set to: 59
 12601                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12602  012A4C  0012               	return		;funcret
 12603  012A4E                     __end_of_DMA1_Initialize:
 12604                           	opt callstack 0
 12605                           
 12606 ;; *************** function _CLKREF_Initialize *****************
 12607 ;; Defined at:
 12608 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1  [STACK] void 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2
 12617 ;; Tracked objects:
 12618 ;;		On entry : 3F/3B
 12619 ;;		On exit  : 3F/3C
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    6
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_SYSTEM_Initialize
 12633 ;; This function uses a reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text83
 12637  0138A6                     __ptext83:
 12638                           	opt callstack 0
 12639  0138A6                     _CLKREF_Initialize:
 12640                           	opt callstack 23
 12641                           
 12642                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12643                           
 12644                           ; BSR set to: 59
 12645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12646                           ;incstack = 0
 12647  0138A6  013C               	movlb	60	; () banked
 12648  0138A8  6BE6               	clrf	230,b	;volatile
 12649                           
 12650                           ; BSR set to: 60
 12651                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12652  0138AA  0E94               	movlw	148
 12653  0138AC  6FE5               	movwf	229,b	;volatile
 12654                           
 12655                           ; BSR set to: 60
 12656                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12657  0138AE  0012               	return		;funcret
 12658  0138B0                     __end_of_CLKREF_Initialize:
 12659                           	opt callstack 0
 12660                           
 12661 ;; *************** function _ADCC_Initialize *****************
 12662 ;; Defined at:
 12663 ;;		line 65 in file "mcc_generated_files/adcc.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;		None
 12666 ;; Auto vars:     Size  Location     Type
 12667 ;;		None
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  1  [STACK] void 
 12670 ;; Registers used:
 12671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12672 ;; Tracked objects:
 12673 ;;		On entry : 3F/3E
 12674 ;;		On exit  : 0/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12681 ;;Total ram usage:        0 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    7
 12684 ;; This function calls:
 12685 ;;		_ADCC_SetADIInterruptHandler
 12686 ;;		_ADCC_SetADTIInterruptHandler
 12687 ;; This function is called by:
 12688 ;;		_SYSTEM_Initialize
 12689 ;; This function uses a reentrant model
 12690 ;;
 12691                           
 12692                           	psect	text84
 12693  012AB8                     __ptext84:
 12694                           	opt callstack 0
 12695  012AB8                     _ADCC_Initialize:
 12696                           	opt callstack 22
 12697                           
 12698                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 12699                           
 12700                           ; BSR set to: 60
 12701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12702                           ;incstack = 0
 12703  012AB8  013E               	movlb	62	; () banked
 12704  012ABA  6BDE               	clrf	222,b	;volatile
 12705                           
 12706                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 12707  012ABC  6BDF               	clrf	223,b	;volatile
 12708                           
 12709                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 12710  012ABE  6BE0               	clrf	224,b	;volatile
 12711                           
 12712                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 12713  012AC0  6BE1               	clrf	225,b	;volatile
 12714                           
 12715                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 12716  012AC2  6BE4               	clrf	228,b	;volatile
 12717                           
 12718                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 12719  012AC4  6BE5               	clrf	229,b	;volatile
 12720                           
 12721                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 12722  012AC6  6BEA               	clrf	234,b	;volatile
 12723                           
 12724                           ; BSR set to: 62
 12725                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x10;
 12726  012AC8  0E10               	movlw	16
 12727  012ACA  6FEC               	movwf	236,b	;volatile
 12728                           
 12729                           ; BSR set to: 62
 12730                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 12731  012ACC  6BF1               	clrf	241,b	;volatile
 12732                           
 12733                           ; BSR set to: 62
 12734                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 12735  012ACE  6BF3               	clrf	243,b	;volatile
 12736                           
 12737                           ; BSR set to: 62
 12738                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 12739  012AD0  6BF4               	clrf	244,b	;volatile
 12740                           
 12741                           ; BSR set to: 62
 12742                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 12743  012AD2  6BF5               	clrf	245,b	;volatile
 12744                           
 12745                           ; BSR set to: 62
 12746                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 12747  012AD4  6BF6               	clrf	246,b	;volatile
 12748                           
 12749                           ; BSR set to: 62
 12750                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 12751  012AD6  6BF7               	clrf	247,b	;volatile
 12752                           
 12753                           ; BSR set to: 62
 12754                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 12755  012AD8  6BF9               	clrf	249,b	;volatile
 12756                           
 12757                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x4B;
 12758  012ADA  0E4B               	movlw	75
 12759  012ADC  6FFA               	movwf	250,b	;volatile
 12760                           
 12761                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 12762  012ADE  0E27               	movlw	39
 12763  012AE0  6FFB               	movwf	251,b	;volatile
 12764                           
 12765                           ; BSR set to: 62
 12766                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 12767  012AE2  6BFC               	clrf	252,b	;volatile
 12768                           
 12769                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 12770  012AE4  0E02               	movlw	2
 12771  012AE6  6FFD               	movwf	253,b	;volatile
 12772                           
 12773                           ; BSR set to: 62
 12774                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 12775  012AE8  6BFE               	clrf	254,b	;volatile
 12776                           
 12777                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 12778  012AEA  0E07               	movlw	7
 12779  012AEC  6FFF               	movwf	255,b	;volatile
 12780                           
 12781                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 12782  012AEE  0E84               	movlw	132
 12783  012AF0  6FF8               	movwf	248,b	;volatile
 12784                           
 12785                           ; BSR set to: 62
 12786                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 12787  012AF2  0139               	movlb	57	; () banked
 12788  012AF4  95A1               	bcf	161,2,b	;volatile
 12789                           
 12790                           ; BSR set to: 57
 12791                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 12792  012AF6  8591               	bsf	145,2,b	;volatile
 12793                           
 12794                           ; BSR set to: 57
 12795                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12796  012AF8  0E0E               	movlw	low _ADCC_DefaultInterruptHandler
 12797  012AFA  6EE6               	movwf	postinc1,c
 12798  012AFC  0E39               	movlw	high _ADCC_DefaultInterruptHandler
 12799  012AFE  6EE6               	movwf	postinc1,c
 12800  012B00  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12801  012B02  6EE6               	movwf	postinc1,c
 12802  012B04  EC76  F09A         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12803                           
 12804                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 12805  012B08  0139               	movlb	57	; () banked
 12806  012B0A  97A1               	bcf	161,3,b	;volatile
 12807                           
 12808                           ; BSR set to: 57
 12809                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 12810  012B0C  8791               	bsf	145,3,b	;volatile
 12811                           
 12812                           ; BSR set to: 57
 12813                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 12814  012B0E  0E0E               	movlw	low _ADCC_DefaultInterruptHandler
 12815  012B10  6EE6               	movwf	postinc1,c
 12816  012B12  0E39               	movlw	high _ADCC_DefaultInterruptHandler
 12817  012B14  6EE6               	movwf	postinc1,c
 12818  012B16  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12819  012B18  6EE6               	movwf	postinc1,c
 12820  012B1A  EC62  F09A         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 12821                           
 12822                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12823  012B1E  0012               	return		;funcret
 12824  012B20                     __end_of_ADCC_Initialize:
 12825                           	opt callstack 0
 12826                           
 12827 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 12828 ;; Defined at:
 12829 ;;		line 336 in file "mcc_generated_files/adcc.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12832 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;		None
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  1  [STACK] void 
 12837 ;; Registers used:
 12838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12848 ;;Total ram usage:        0 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    6
 12851 ;; This function calls:
 12852 ;;		Nothing
 12853 ;; This function is called by:
 12854 ;;		_ADCC_Initialize
 12855 ;;		_start_adc_scan
 12856 ;; This function uses a reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text85
 12860  0134C4                     __ptext85:
 12861                           	opt callstack 0
 12862  0134C4                     _ADCC_SetADTIInterruptHandler:
 12863                           	opt callstack 23
 12864                           
 12865                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 12866                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12867                           
 12868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12869                           ;incstack = 0
 12870  0134C4  50E1               	movf	fsr1l,w,c
 12871  0134C6  0FFD               	addlw	-3
 12872  0134C8  6ED9               	movwf	fsr2l,c
 12873  0134CA  50E2               	movf	fsr1h,w,c
 12874  0134CC  6EDA               	movwf	fsr2h,c
 12875  0134CE  0EFF               	movlw	255
 12876  0134D0  22DA               	addwfc	fsr2h,f,c
 12877  0134D2  006F FF78  F007    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 12878  0134D8  006F FF78  F008    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 12879  0134DE  006F FF74  F009    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 12880                           
 12881                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 12882  0134E4  52E5               	movf	postdec1,f,c
 12883  0134E6  52E5               	movf	postdec1,f,c
 12884  0134E8  52E5               	movf	postdec1,f,c
 12885  0134EA  0012               	return		;funcret
 12886  0134EC                     __end_of_ADCC_SetADTIInterruptHandler:
 12887                           	opt callstack 0
 12888                           
 12889 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12890 ;; Defined at:
 12891 ;;		line 323 in file "mcc_generated_files/adcc.c"
 12892 ;; Parameters:    Size  Location     Type
 12893 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12894 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;		None
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  1  [STACK] void 
 12899 ;; Registers used:
 12900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12901 ;; Tracked objects:
 12902 ;;		On entry : 6/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12910 ;;Total ram usage:        0 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; Hardware stack levels required when called:    6
 12913 ;; This function calls:
 12914 ;;		Nothing
 12915 ;; This function is called by:
 12916 ;;		_ADCC_Initialize
 12917 ;;		_start_adc_scan
 12918 ;; This function uses a reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text86
 12922  0134EC                     __ptext86:
 12923                           	opt callstack 0
 12924  0134EC                     _ADCC_SetADIInterruptHandler:
 12925                           	opt callstack 23
 12926                           
 12927                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12928                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12929                           
 12930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12931                           ;incstack = 0
 12932  0134EC  50E1               	movf	fsr1l,w,c
 12933  0134EE  0FFD               	addlw	-3
 12934  0134F0  6ED9               	movwf	fsr2l,c
 12935  0134F2  50E2               	movf	fsr1h,w,c
 12936  0134F4  6EDA               	movwf	fsr2h,c
 12937  0134F6  0EFF               	movlw	255
 12938  0134F8  22DA               	addwfc	fsr2h,f,c
 12939  0134FA  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12940  013500  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12941  013506  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12942                           
 12943                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12944  01350C  52E5               	movf	postdec1,f,c
 12945  01350E  52E5               	movf	postdec1,f,c
 12946  013510  52E5               	movf	postdec1,f,c
 12947  013512  0012               	return		;funcret
 12948  013514                     __end_of_ADCC_SetADIInterruptHandler:
 12949                           	opt callstack 0
 12950                           
 12951 ;; *************** function _TMR5_ISR *****************
 12952 ;; Defined at:
 12953 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 12954 ;; Parameters:    Size  Location     Type
 12955 ;;		None
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;		None
 12958 ;; Return value:  Size  Location     Type
 12959 ;;                  1    wreg      void 
 12960 ;; Registers used:
 12961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 12962 ;; Tracked objects:
 12963 ;;		On entry : 0/0
 12964 ;;		On exit  : 0/0
 12965 ;;		Unchanged: 0/0
 12966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12971 ;;Total ram usage:        4 bytes
 12972 ;; Hardware stack levels used:    1
 12973 ;; Hardware stack levels required when called:    5
 12974 ;; This function calls:
 12975 ;;		_TMR5_CallBack
 12976 ;;		_TMR5_WriteTimer
 12977 ;; This function is called by:
 12978 ;;		Interrupt level 1
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text87
 12983  012CAC                     __ptext87:
 12984                           	opt callstack 0
 12985  012CAC                     _TMR5_ISR:
 12986                           	opt callstack 12
 12987                           
 12988                           ;incstack = 0
 12989  012CAC  006F FF60  F0EB    	movff	status,??_TMR5_ISR+2
 12990  012CB2  0060  F104  F0EC   	movff	btemp+11,??_TMR5_ISR+3
 12991  012CB8  EE15  F355         	lfsr	1,___intlo_sp
 12992                           
 12993                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 12994  012CBC  0139               	movlb	57	; () banked
 12995  012CBE  9DA8               	bcf	168,6,b	;volatile
 12996                           
 12997                           ; BSR set to: 57
 12998                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 12999  012CC0  0060  F09F  FFE6   	movff	_timer5ReloadVal,postinc1
 13000  012CC6  0060  F0A3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 13001  012CCC  ECFF  F097         	call	_TMR5_WriteTimer	;wreg free
 13002                           
 13003                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 13004  012CD0  0101               	movlb	1	; () banked
 13005  012CD2  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 13006  012CD4  0100               	movlb	0	; () banked
 13007  012CD6  6FE9               	movwf	??_TMR5_ISR& (0+255),b
 13008  012CD8  6BEA               	clrf	(??_TMR5_ISR+1)& (0+255),b
 13009  012CDA  0E05               	movlw	5
 13010  012CDC  27E9               	addwf	??_TMR5_ISR& (0+255),f,b
 13011  012CDE  0E00               	movlw	0
 13012  012CE0  23EA               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 13013  012CE2  4A25               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 13014  012CE4  2A26               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 13015  012CE6  51E9               	movf	??_TMR5_ISR& (0+255),w,b
 13016  012CE8  5C25               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 13017  012CEA  51EA               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 13018  012CEC  5826               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 13019  012CEE  A0D8               	btfss	status,0,c
 13020  012CF0  D004               	goto	i1l1049
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 13024  012CF2  ECEB  F09A         	call	_TMR5_CallBack	;wreg free
 13025                           
 13026                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 13027  012CF6  6A25               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 13028  012CF8  6A26               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 13029  012CFA                     i1l1049:
 13030  012CFA  0060  F3B0  F041   	movff	??_TMR5_ISR+3,btemp+11
 13031  012D00  0060  F3AF  FFD8   	movff	??_TMR5_ISR+2,status
 13032  012D06  0011               	retfie		f
 13033  012D08                     __end_of_TMR5_ISR:
 13034                           	opt callstack 0
 13035                           
 13036 ;; *************** function _TMR5_WriteTimer *****************
 13037 ;; Defined at:
 13038 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  timerVal        2  [STACK] unsigned short 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;		None
 13043 ;; Return value:  Size  Location     Type
 13044 ;;                  1  [STACK] void 
 13045 ;; Registers used:
 13046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 13047 ;; Tracked objects:
 13048 ;;		On entry : 3F/39
 13049 ;;		On exit  : 0/0
 13050 ;;		Unchanged: 0/0
 13051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13056 ;;Total ram usage:        0 bytes
 13057 ;; Hardware stack levels used:    1
 13058 ;; Hardware stack levels required when called:    3
 13059 ;; This function calls:
 13060 ;;		Nothing
 13061 ;; This function is called by:
 13062 ;;		_TMR5_ISR
 13063 ;; This function uses a reentrant model
 13064 ;;
 13065                           
 13066                           	psect	text88
 13067  012FFE                     __ptext88:
 13068                           	opt callstack 0
 13069  012FFE                     _TMR5_WriteTimer:
 13070                           	opt callstack 13
 13071                           
 13072                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 13073                           
 13074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13075                           ;incstack = 0
 13076  012FFE  A49A               	btfss	154,2,c	;volatile
 13077  013000  D00F               	goto	l5394
 13078                           
 13079                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 13080  013002  909A               	bcf	154,0,c	;volatile
 13081                           
 13082                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 13083                           ;stkvar	_timerVal @ sp[(0)+-2]
 13084  013004  0EFF               	movlw	255
 13085  013006  24E1               	addwf	fsr1l,w,c
 13086  013008  6ED9               	movwf	fsr2l,c
 13087  01300A  0EFF               	movlw	255
 13088  01300C  20E2               	addwfc	fsr1h,w,c
 13089  01300E  6EDA               	movwf	fsr2h,c
 13090  013010  50DF               	movf	indf2,w,c
 13091  013012  6E99               	movwf	153,c	;volatile
 13092                           
 13093                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 13094                           ;stkvar	_timerVal @ sp[(0)+-2]
 13095  013014  0EFE               	movlw	-2
 13096  013016  006F FF8F FF98     	movff	plusw1,16280	;volatile
 13097                           
 13098                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 13099  01301C  809A               	bsf	154,0,c	;volatile
 13100                           
 13101                           ;mcc_generated_files/tmr5.c: 142:  } else {
 13102  01301E  D00C               	goto	l1032
 13103  013020                     l5394:
 13104                           
 13105                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 13106                           ;stkvar	_timerVal @ sp[(0)+-2]
 13107  013020  0EFF               	movlw	255
 13108  013022  24E1               	addwf	fsr1l,w,c
 13109  013024  6ED9               	movwf	fsr2l,c
 13110  013026  0EFF               	movlw	255
 13111  013028  20E2               	addwfc	fsr1h,w,c
 13112  01302A  6EDA               	movwf	fsr2h,c
 13113  01302C  50DF               	movf	indf2,w,c
 13114  01302E  6E99               	movwf	153,c	;volatile
 13115                           
 13116                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 13117                           ;stkvar	_timerVal @ sp[(0)+-2]
 13118  013030  0EFE               	movlw	-2
 13119  013032  006F FF8F FF98     	movff	plusw1,16280	;volatile
 13120  013038                     l1032:
 13121                           
 13122                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 13123  013038  52E5               	movf	postdec1,f,c
 13124  01303A  52E5               	movf	postdec1,f,c
 13125  01303C  0012               	return		;funcret
 13126  01303E                     __end_of_TMR5_WriteTimer:
 13127                           	opt callstack 0
 13128                           
 13129 ;; *************** function _TMR5_CallBack *****************
 13130 ;; Defined at:
 13131 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13132 ;; Parameters:    Size  Location     Type
 13133 ;;		None
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;		None
 13136 ;; Return value:  Size  Location     Type
 13137 ;;                  1  [STACK] void 
 13138 ;; Registers used:
 13139 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 13140 ;; Tracked objects:
 13141 ;;		On entry : 3F/0
 13142 ;;		On exit  : 0/0
 13143 ;;		Unchanged: 0/0
 13144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13149 ;;Total ram usage:        0 bytes
 13150 ;; Hardware stack levels used:    1
 13151 ;; Hardware stack levels required when called:    4
 13152 ;; This function calls:
 13153 ;;		Absolute function
 13154 ;;		_TMR5_DefaultInterruptHandler
 13155 ;; This function is called by:
 13156 ;;		_TMR5_ISR
 13157 ;; This function uses a reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text89
 13161  0135D6                     __ptext89:
 13162                           	opt callstack 0
 13163  0135D6                     _TMR5_CallBack:
 13164                           	opt callstack 12
 13165                           
 13166                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 13167                           
 13168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13169                           ;incstack = 0
 13170  0135D6  5001               	movf	_TMR5_InterruptHandler^0,w,c
 13171  0135D8  1002               	iorwf	(_TMR5_InterruptHandler+1)^0,w,c
 13172  0135DA  1003               	iorwf	(_TMR5_InterruptHandler+2)^0,w,c
 13173  0135DC  B4D8               	btfsc	status,2,c
 13174  0135DE  0012               	return	
 13175                           
 13176                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 13177  0135E0  D801               	call	u311_28
 13178  0135E2  0012               	return	
 13179  0135E4                     u311_28:
 13180  0135E4  0005               	push	
 13181  0135E6  6EFA               	movwf	pclath,c
 13182  0135E8  5001               	movf	_TMR5_InterruptHandler^0,w,c
 13183  0135EA  6EFD               	movwf	tosl,c
 13184  0135EC  5002               	movf	(_TMR5_InterruptHandler+1)^0,w,c
 13185  0135EE  6EFE               	movwf	tosh,c
 13186  0135F0  5003               	movf	(_TMR5_InterruptHandler+2)^0,w,c
 13187  0135F2  6EFF               	movwf	tosu,c
 13188  0135F4  50FA               	movf	pclath,w,c
 13189  0135F6  0012               	return		;indir
 13190  0135F8                     __end_of_TMR5_CallBack:
 13191                           	opt callstack 0
 13192                           
 13193 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13194 ;; Defined at:
 13195 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 13196 ;; Parameters:    Size  Location     Type
 13197 ;;		None
 13198 ;; Auto vars:     Size  Location     Type
 13199 ;;		None
 13200 ;; Return value:  Size  Location     Type
 13201 ;;                  1  [STACK] void 
 13202 ;; Registers used:
 13203 ;;		wreg, status,2, status,0, btemp+11
 13204 ;; Tracked objects:
 13205 ;;		On entry : 0/0
 13206 ;;		On exit  : 0/0
 13207 ;;		Unchanged: 0/0
 13208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13213 ;;Total ram usage:        0 bytes
 13214 ;; Hardware stack levels used:    1
 13215 ;; Hardware stack levels required when called:    3
 13216 ;; This function calls:
 13217 ;;		Nothing
 13218 ;; This function is called by:
 13219 ;;		_TMR5_Initialize
 13220 ;;		_TMR5_CallBack
 13221 ;; This function uses a reentrant model
 13222 ;;
 13223                           
 13224                           	psect	text90
 13225  013764                     __ptext90:
 13226                           	opt callstack 0
 13227  013764                     _TMR5_DefaultInterruptHandler:
 13228                           	opt callstack 12
 13229                           
 13230                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13231                           
 13232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13233                           ;incstack = 0
 13234  013764  A0BE               	btfss	190,0,c	;volatile
 13235  013766  D002               	goto	u294_20
 13236  013768  0E01               	movlw	1
 13237  01376A  D001               	goto	u294_26
 13238  01376C                     u294_20:
 13239  01376C  0E00               	movlw	0
 13240  01376E                     u294_26:
 13241  01376E  0AFF               	xorlw	255
 13242  013770  6E41               	movwf	(btemp+11)^0,c
 13243  013772  50BE               	movf	190,w,c	;volatile
 13244  013774  1841               	xorwf	(btemp+11)^0,w,c
 13245  013776  0BFE               	andlw	-2
 13246  013778  1841               	xorwf	(btemp+11)^0,w,c
 13247  01377A  6EBE               	movwf	190,c	;volatile
 13248                           
 13249                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13250  01377C  0012               	return		;funcret
 13251  01377E                     __end_of_TMR5_DefaultInterruptHandler:
 13252                           	opt callstack 0
 13253                           
 13254 ;; *************** function _INT0_ISR *****************
 13255 ;; Defined at:
 13256 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 13257 ;; Parameters:    Size  Location     Type
 13258 ;;		None
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;		None
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  1    wreg      void 
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0, pclath, tosl
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;Total ram usage:        0 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; Hardware stack levels required when called:    2
 13277 ;; This function calls:
 13278 ;;		_INT0_CallBack
 13279 ;; This function is called by:
 13280 ;;		Interrupt level 2
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text91
 13285  013878                     __ptext91:
 13286                           	opt callstack 0
 13287  013878                     _INT0_ISR:
 13288                           	opt callstack 12
 13289                           
 13290                           ;incstack = 0
 13291  013878  EE13  F2AA         	lfsr	1,___inthi_sp
 13292                           
 13293                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 13294  01387C  0139               	movlb	57	; () banked
 13295  01387E  91A1               	bcf	161,0,b	;volatile
 13296                           
 13297                           ; BSR set to: 57
 13298                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 13299  013880  ECFC  F09A         	call	_INT0_CallBack	;wreg free
 13300  013884  0011               	retfie		f
 13301  013886                     __end_of_INT0_ISR:
 13302                           	opt callstack 0
 13303                           
 13304 ;; *************** function _INT0_CallBack *****************
 13305 ;; Defined at:
 13306 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1  [STACK] void 
 13313 ;; Registers used:
 13314 ;;		wreg, status,2, status,0, pclath, tosl
 13315 ;; Tracked objects:
 13316 ;;		On entry : 3F/39
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    1
 13327 ;; This function calls:
 13328 ;;		Absolute function
 13329 ;;		_INT0_DefaultInterruptHandler
 13330 ;; This function is called by:
 13331 ;;		_INT0_ISR
 13332 ;; This function uses a reentrant model
 13333 ;;
 13334                           
 13335                           	psect	text92
 13336  0135F8                     __ptext92:
 13337                           	opt callstack 0
 13338  0135F8                     _INT0_CallBack:
 13339                           	opt callstack 12
 13340                           
 13341                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 13342                           
 13343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13344                           ;incstack = 0
 13345  0135F8  501C               	movf	_INT0_InterruptHandler^0,w,c
 13346  0135FA  101D               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 13347  0135FC  101E               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 13348  0135FE  B4D8               	btfsc	status,2,c
 13349  013600  0012               	return	
 13350                           
 13351                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 13352  013602  D801               	call	u128_48
 13353  013604  0012               	return	
 13354  013606                     u128_48:
 13355  013606  0005               	push	
 13356  013608  6EFA               	movwf	pclath,c
 13357  01360A  501C               	movf	_INT0_InterruptHandler^0,w,c
 13358  01360C  6EFD               	movwf	tosl,c
 13359  01360E  501D               	movf	(_INT0_InterruptHandler+1)^0,w,c
 13360  013610  6EFE               	movwf	tosh,c
 13361  013612  501E               	movf	(_INT0_InterruptHandler+2)^0,w,c
 13362  013614  6EFF               	movwf	tosu,c
 13363  013616  50FA               	movf	pclath,w,c
 13364  013618  0012               	return		;indir
 13365  01361A                     __end_of_INT0_CallBack:
 13366                           	opt callstack 0
 13367                           
 13368 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13369 ;; Defined at:
 13370 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;		None
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;		None
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1  [STACK] void 
 13377 ;; Registers used:
 13378 ;;		None
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/39
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13388 ;;Total ram usage:        0 bytes
 13389 ;; Hardware stack levels used:    1
 13390 ;; This function calls:
 13391 ;;		Nothing
 13392 ;; This function is called by:
 13393 ;;		_EXT_INT_Initialize
 13394 ;;		_INT0_CallBack
 13395 ;; This function uses a reentrant model
 13396 ;;
 13397                           
 13398                           	psect	text93
 13399  01390A                     __ptext93:
 13400                           	opt callstack 0
 13401  01390A                     _INT0_DefaultInterruptHandler:
 13402                           	opt callstack 12
 13403                           
 13404                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13405                           
 13406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13407                           ;incstack = 0
 13408  01390A  0012               	return		;funcret
 13409  01390C                     __end_of_INT0_DefaultInterruptHandler:
 13410                           	opt callstack 0
 13411                           
 13412 ;; *************** function _INT1_ISR *****************
 13413 ;; Defined at:
 13414 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 13415 ;; Parameters:    Size  Location     Type
 13416 ;;		None
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  1    wreg      void 
 13421 ;; Registers used:
 13422 ;;		wreg, status,2, status,0, pclath, tosl
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;Total ram usage:        0 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:    2
 13435 ;; This function calls:
 13436 ;;		_INT1_CallBack
 13437 ;; This function is called by:
 13438 ;;		Interrupt level 2
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text94
 13443  013888                     __ptext94:
 13444                           	opt callstack 0
 13445  013888                     _INT1_ISR:
 13446                           	opt callstack 12
 13447                           
 13448                           ;incstack = 0
 13449  013888  EE13  F2AA         	lfsr	1,___inthi_sp
 13450                           
 13451                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 13452  01388C  0139               	movlb	57	; () banked
 13453  01388E  91A5               	bcf	165,0,b	;volatile
 13454                           
 13455                           ; BSR set to: 57
 13456                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 13457  013890  EC0D  F09B         	call	_INT1_CallBack	;wreg free
 13458  013894  0011               	retfie		f
 13459  013896                     __end_of_INT1_ISR:
 13460                           	opt callstack 0
 13461                           
 13462 ;; *************** function _INT1_CallBack *****************
 13463 ;; Defined at:
 13464 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;		None
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;		None
 13469 ;; Return value:  Size  Location     Type
 13470 ;;                  1  [STACK] void 
 13471 ;; Registers used:
 13472 ;;		wreg, status,2, status,0, pclath, tosl
 13473 ;; Tracked objects:
 13474 ;;		On entry : 3F/39
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13482 ;;Total ram usage:        0 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:    1
 13485 ;; This function calls:
 13486 ;;		Absolute function
 13487 ;;		_INT1_DefaultInterruptHandler
 13488 ;; This function is called by:
 13489 ;;		_INT1_ISR
 13490 ;; This function uses a reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text95
 13494  01361A                     __ptext95:
 13495                           	opt callstack 0
 13496  01361A                     _INT1_CallBack:
 13497                           	opt callstack 12
 13498                           
 13499                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 13500                           
 13501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13502                           ;incstack = 0
 13503  01361A  5019               	movf	_INT1_InterruptHandler^0,w,c
 13504  01361C  101A               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 13505  01361E  101B               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 13506  013620  B4D8               	btfsc	status,2,c
 13507  013622  0012               	return	
 13508                           
 13509                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 13510  013624  D801               	call	u130_48
 13511  013626  0012               	return	
 13512  013628                     u130_48:
 13513  013628  0005               	push	
 13514  01362A  6EFA               	movwf	pclath,c
 13515  01362C  5019               	movf	_INT1_InterruptHandler^0,w,c
 13516  01362E  6EFD               	movwf	tosl,c
 13517  013630  501A               	movf	(_INT1_InterruptHandler+1)^0,w,c
 13518  013632  6EFE               	movwf	tosh,c
 13519  013634  501B               	movf	(_INT1_InterruptHandler+2)^0,w,c
 13520  013636  6EFF               	movwf	tosu,c
 13521  013638  50FA               	movf	pclath,w,c
 13522  01363A  0012               	return		;indir
 13523  01363C                     __end_of_INT1_CallBack:
 13524                           	opt callstack 0
 13525                           
 13526 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13527 ;; Defined at:
 13528 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;		None
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;		None
 13533 ;; Return value:  Size  Location     Type
 13534 ;;                  1  [STACK] void 
 13535 ;; Registers used:
 13536 ;;		None
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/39
 13539 ;;		On exit  : 0/0
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13546 ;;Total ram usage:        0 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_EXT_INT_Initialize
 13552 ;;		_INT1_CallBack
 13553 ;; This function uses a reentrant model
 13554 ;;
 13555                           
 13556                           	psect	text96
 13557  01390C                     __ptext96:
 13558                           	opt callstack 0
 13559  01390C                     _INT1_DefaultInterruptHandler:
 13560                           	opt callstack 12
 13561                           
 13562                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13563                           
 13564                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13565                           ;incstack = 0
 13566  01390C  0012               	return		;funcret
 13567  01390E                     __end_of_INT1_DefaultInterruptHandler:
 13568                           	opt callstack 0
 13569                           
 13570 ;; *************** function _Default_ISR *****************
 13571 ;; Defined at:
 13572 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13573 ;; Parameters:    Size  Location     Type
 13574 ;;		None
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;		None
 13577 ;; Return value:  Size  Location     Type
 13578 ;;                  1    wreg      void 
 13579 ;; Registers used:
 13580 ;;		None
 13581 ;; Tracked objects:
 13582 ;;		On entry : 0/0
 13583 ;;		On exit  : 0/0
 13584 ;;		Unchanged: 0/0
 13585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13590 ;;Total ram usage:        0 bytes
 13591 ;; Hardware stack levels used:    1
 13592 ;; This function calls:
 13593 ;;		Nothing
 13594 ;; This function is called by:
 13595 ;;		Interrupt level 2
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599                           	psect	text97
 13600  013904                     __ptext97:
 13601                           	opt callstack 0
 13602  013904                     _Default_ISR:
 13603                           	opt callstack 14
 13604                           
 13605                           ;incstack = 0
 13606  013904  EE13  F2AA         	lfsr	1,___inthi_sp
 13607  013908  0011               	retfie		f
 13608  01390A                     __end_of_Default_ISR:
 13609                           	opt callstack 0
 13610                           
 13611 ;; *************** function _ADCC_ISR *****************
 13612 ;; Defined at:
 13613 ;;		line 314 in file "mcc_generated_files/adcc.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;		None
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      void 
 13620 ;; Registers used:
 13621 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;Total ram usage:        1 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:    1
 13634 ;; This function calls:
 13635 ;;		Absolute function
 13636 ;;		_ADCC_DefaultInterruptHandler
 13637 ;;		_adc_int_handler
 13638 ;; This function is called by:
 13639 ;;		Interrupt level 2
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text98
 13644  0130F0                     __ptext98:
 13645                           	opt callstack 0
 13646  0130F0                     _ADCC_ISR:
 13647                           	opt callstack 13
 13648                           
 13649                           ;incstack = 0
 13650  0130F0  0060  F104  F056   	movff	btemp+11,??_ADCC_ISR
 13651  0130F6  EE13  F2AA         	lfsr	1,___inthi_sp
 13652                           
 13653                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 13654  0130FA  0139               	movlb	57	; () banked
 13655  0130FC  95A1               	bcf	161,2,b	;volatile
 13656                           
 13657                           ; BSR set to: 57
 13658                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 13659  0130FE  500A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13660  013100  100B               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13661  013102  100C               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13662  013104  B4D8               	btfsc	status,2,c
 13663  013106  D00C               	goto	i2u155_49
 13664                           
 13665                           ; BSR set to: 57
 13666                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 13667  013108  D801               	call	i2u155_48
 13668  01310A  D00A               	goto	i2u155_49
 13669  01310C                     i2u155_48:
 13670  01310C  0005               	push	
 13671  01310E  6EFA               	movwf	pclath,c
 13672  013110  500A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 13673  013112  6EFD               	movwf	tosl,c
 13674  013114  500B               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 13675  013116  6EFE               	movwf	tosh,c
 13676  013118  500C               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 13677  01311A  6EFF               	movwf	tosu,c
 13678  01311C  50FA               	movf	pclath,w,c
 13679  01311E  0012               	return		;indir
 13680  013120                     i2u155_49:
 13681  013120  0060  F158  F041   	movff	??_ADCC_ISR,btemp+11
 13682  013126  0011               	retfie		f
 13683  013128                     __end_of_ADCC_ISR:
 13684                           	opt callstack 0
 13685                           
 13686 ;; *************** function _adc_int_t_handler *****************
 13687 ;; Defined at:
 13688 ;;		line 51 in file "daq.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;		None
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;		None
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1  [STACK] void 
 13695 ;; Registers used:
 13696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
 13697 ;; Tracked objects:
 13698 ;;		On entry : 3F/39
 13699 ;;		On exit  : 1/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13706 ;;Total ram usage:        0 bytes
 13707 ;; Hardware stack levels used:    1
 13708 ;; Hardware stack levels required when called:    1
 13709 ;; This function calls:
 13710 ;;		_ADCC_StartConversion
 13711 ;; This function is called by:
 13712 ;;		_start_adc_scan
 13713 ;;		_ADCC_ThresholdISR
 13714 ;; This function uses a reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text99
 13718  012A4E                     __ptext99:
 13719                           	opt callstack 0
 13720  012A4E                     _adc_int_t_handler:
 13721                           	opt callstack 12
 13722                           
 13723                           ;daq.c: 53:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 13724                           
 13725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13726                           ;incstack = 0
 13727  012A4E  013E               	movlb	62	; () banked
 13728  012A50  51E6               	movf	230,w,b	;volatile
 13729  012A52  006F FB9C  F036    	movff	16103,btemp	;volatile
 13730  012A58  6A37               	clrf	(btemp+1)^0,c
 13731  012A5A  0060  F0D8  F037   	movff	btemp,btemp+1
 13732  012A60  6A36               	clrf	btemp^0,c
 13733  012A62  2636               	addwf	btemp^0,f,c
 13734  012A64  0E00               	movlw	0
 13735  012A66  2237               	addwfc	(btemp+1)^0,f,c
 13736  012A68  0100               	movlb	0	; () banked
 13737  012A6A  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 13738  012A6C  0D02               	mullw	2
 13739  012A6E  50F3               	movf	243,w,c
 13740  012A70  0F60               	addlw	low _R
 13741  012A72  6ED9               	movwf	fsr2l,c
 13742  012A74  6ADA               	clrf	fsr2h,c
 13743  012A76  0060  F0DB  FFDE   	movff	btemp,postinc2
 13744  012A7C  0060  F0DF  FFDD   	movff	btemp+1,postdec2
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;daq.c: 54:  if (R.scan_index >= 0XD) {
 13748  012A82  0E0C               	movlw	12
 13749  012A84  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 13750  012A86  D004               	goto	l5546
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;daq.c: 55:   R.done = 1;
 13754  012A88  0E01               	movlw	1
 13755  012A8A  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
 13756                           
 13757                           ; BSR set to: 0
 13758  012A8C  92BE               	bcf	190,1,c	;volatile
 13759  012A8E  0012               	return	
 13760  012A90                     l5546:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;daq.c: 58:   R.scan_index++;
 13764  012A90  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;daq.c: 59:   ADCC_StartConversion(R.scan_index & 0xf);
 13768  012A92  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 13769  012A94  0B0F               	andlw	15
 13770  012A96  6EE6               	movwf	postinc1,c
 13771  012A98  EC1C  F09C         	call	_ADCC_StartConversion	;wreg free
 13772                           
 13773                           ; BSR set to: 62
 13774  012A9C  A2BE               	btfss	190,1,c	;volatile
 13775  012A9E  D002               	goto	u322_40
 13776  012AA0  0E01               	movlw	1
 13777  012AA2  D001               	goto	u322_46
 13778  012AA4                     u322_40:
 13779  012AA4  0E00               	movlw	0
 13780  012AA6                     u322_46:
 13781  012AA6  0AFF               	xorlw	255
 13782  012AA8  6E41               	movwf	(btemp+11)^0,c
 13783  012AAA  4641               	rlncf	(btemp+11)^0,f,c
 13784  012AAC  50BE               	movf	190,w,c	;volatile
 13785  012AAE  1841               	xorwf	(btemp+11)^0,w,c
 13786  012AB0  0BFD               	andlw	-3
 13787  012AB2  1841               	xorwf	(btemp+11)^0,w,c
 13788  012AB4  6EBE               	movwf	190,c	;volatile
 13789                           
 13790                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13791  012AB6  0012               	return		;funcret
 13792  012AB8                     __end_of_adc_int_t_handler:
 13793                           	opt callstack 0
 13794                           
 13795 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13796 ;; Defined at:
 13797 ;;		line 339 in file "mcc_generated_files/adcc.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1  [STACK] void 
 13804 ;; Registers used:
 13805 ;;		None
 13806 ;; Tracked objects:
 13807 ;;		On entry : 3F/39
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13815 ;;Total ram usage:        0 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; This function calls:
 13818 ;;		Nothing
 13819 ;; This function is called by:
 13820 ;;		_ADCC_Initialize
 13821 ;;		_ADCC_ISR
 13822 ;;		_ADCC_ThresholdISR
 13823 ;; This function uses a reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text100
 13827  01390E                     __ptext100:
 13828                           	opt callstack 0
 13829  01390E                     _ADCC_DefaultInterruptHandler:
 13830                           	opt callstack 13
 13831                           
 13832                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13833                           
 13834                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13835                           ;incstack = 0
 13836  01390E  0012               	return		;funcret
 13837  013910                     __end_of_ADCC_DefaultInterruptHandler:
 13838                           	opt callstack 0
 13839                           
 13840 ;; *************** function _adc_int_handler *****************
 13841 ;; Defined at:
 13842 ;;		line 41 in file "daq.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;		None
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;		None
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  1  [STACK] void 
 13849 ;; Registers used:
 13850 ;;		wreg, status,2, status,0, btemp+11
 13851 ;; Tracked objects:
 13852 ;;		On entry : 3F/39
 13853 ;;		On exit  : 0/0
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13860 ;;Total ram usage:        0 bytes
 13861 ;; Hardware stack levels used:    1
 13862 ;; This function calls:
 13863 ;;		Nothing
 13864 ;; This function is called by:
 13865 ;;		_start_adc_scan
 13866 ;;		_ADCC_ISR
 13867 ;; This function uses a reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text101
 13871  0136B8                     __ptext101:
 13872                           	opt callstack 0
 13873  0136B8                     _adc_int_handler:
 13874                           	opt callstack 13
 13875                           
 13876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13877                           ;incstack = 0
 13878                           ;daq.c: 43:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 13879  0136B8  A4BE               	btfss	190,2,c	;volatile
 13880  0136BA  D002               	goto	u151_40
 13881  0136BC  0E01               	movlw	1
 13882  0136BE  D001               	goto	u151_46
 13883  0136C0                     u151_40:
 13884  0136C0  0E00               	movlw	0
 13885  0136C2                     u151_46:
 13886  0136C2  0AFF               	xorlw	255
 13887  0136C4  6E41               	movwf	(btemp+11)^0,c
 13888  0136C6  4641               	rlncf	(btemp+11)^0,f,c
 13889  0136C8  4641               	rlncf	(btemp+11)^0,f,c
 13890  0136CA  50BE               	movf	190,w,c	;volatile
 13891  0136CC  1841               	xorwf	(btemp+11)^0,w,c
 13892  0136CE  0BFB               	andlw	-5
 13893  0136D0  1841               	xorwf	(btemp+11)^0,w,c
 13894  0136D2  6EBE               	movwf	190,c	;volatile
 13895                           
 13896                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13897  0136D4  0012               	return		;funcret
 13898  0136D6                     __end_of_adc_int_handler:
 13899                           	opt callstack 0
 13900                           
 13901 ;; *************** function _ADCC_ThresholdISR *****************
 13902 ;; Defined at:
 13903 ;;		line 327 in file "mcc_generated_files/adcc.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;		None
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;		None
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  1    wreg      void 
 13910 ;; Registers used:
 13911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+11, tosl, prodl, prodh
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13919 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13921 ;;Total ram usage:        3 bytes
 13922 ;; Hardware stack levels used:    1
 13923 ;; Hardware stack levels required when called:    2
 13924 ;; This function calls:
 13925 ;;		Absolute function
 13926 ;;		_ADCC_DefaultInterruptHandler
 13927 ;;		_adc_int_t_handler
 13928 ;; This function is called by:
 13929 ;;		Interrupt level 2
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text102
 13934  012E10                     __ptext102:
 13935                           	opt callstack 0
 13936  012E10                     _ADCC_ThresholdISR:
 13937                           	opt callstack 12
 13938                           
 13939                           ;incstack = 0
 13940  012E10  0060  F0D8  F057   	movff	btemp,??_ADCC_ThresholdISR
 13941  012E16  0060  F0DC  F058   	movff	btemp+1,??_ADCC_ThresholdISR+1
 13942  012E1C  0060  F104  F059   	movff	btemp+11,??_ADCC_ThresholdISR+2
 13943  012E22  EE13  F2AA         	lfsr	1,___inthi_sp
 13944                           
 13945                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 13946  012E26  0139               	movlb	57	; () banked
 13947  012E28  97A1               	bcf	161,3,b	;volatile
 13948                           
 13949                           ; BSR set to: 57
 13950                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 13951  012E2A  5007               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 13952  012E2C  1008               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 13953  012E2E  1009               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 13954  012E30  B4D8               	btfsc	status,2,c
 13955  012E32  D00C               	goto	i2u324_49
 13956                           
 13957                           ; BSR set to: 57
 13958                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 13959  012E34  D801               	call	i2u324_48
 13960  012E36  D00A               	goto	i2u324_49
 13961  012E38                     i2u324_48:
 13962  012E38  0005               	push	
 13963  012E3A  6EFA               	movwf	pclath,c
 13964  012E3C  5007               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 13965  012E3E  6EFD               	movwf	tosl,c
 13966  012E40  5008               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 13967  012E42  6EFE               	movwf	tosh,c
 13968  012E44  5009               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 13969  012E46  6EFF               	movwf	tosu,c
 13970  012E48  50FA               	movf	pclath,w,c
 13971  012E4A  0012               	return		;indir
 13972  012E4C                     i2u324_49:
 13973  012E4C  0060  F164  F041   	movff	??_ADCC_ThresholdISR+2,btemp+11
 13974  012E52  0060  F160  F037   	movff	??_ADCC_ThresholdISR+1,btemp+1
 13975  012E58  0060  F15C  F036   	movff	??_ADCC_ThresholdISR,btemp
 13976  012E5E  0011               	retfie		f
 13977  012E60                     __end_of_ADCC_ThresholdISR:
 13978                           	opt callstack 0
 13979                           
 13980 ;; *************** function _UART1_tx_vect_isr *****************
 13981 ;; Defined at:
 13982 ;;		line 200 in file "mcc_generated_files/uart1.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;		None
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;		None
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  1    wreg      void 
 13989 ;; Registers used:
 13990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14000 ;;Total ram usage:        0 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    1
 14003 ;; This function calls:
 14004 ;;		Absolute function
 14005 ;;		_UART1_Transmit_ISR
 14006 ;; This function is called by:
 14007 ;;		Interrupt level 2
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text103
 14012  013514                     __ptext103:
 14013                           	opt callstack 0
 14014  013514                     _UART1_tx_vect_isr:
 14015                           	opt callstack 13
 14016                           
 14017                           ;incstack = 0
 14018  013514  EE13  F2AA         	lfsr	1,___inthi_sp
 14019                           
 14020                           ;mcc_generated_files/uart1.c: 202:  if (UART1_TxInterruptHandler) {
 14021  013518  500D               	movf	_UART1_TxInterruptHandler^0,w,c
 14022  01351A  100E               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 14023  01351C  100F               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 14024  01351E  B4D8               	btfsc	status,2,c
 14025  013520  0011               	retfie		f
 14026                           
 14027                           ;mcc_generated_files/uart1.c: 203:   UART1_TxInterruptHandler();
 14028  013522  D801               	call	i2u326_48
 14029  013524  0011               	retfie		f
 14030  013526                     i2u326_48:
 14031  013526  0005               	push	
 14032  013528  6EFA               	movwf	pclath,c
 14033  01352A  500D               	movf	_UART1_TxInterruptHandler^0,w,c
 14034  01352C  6EFD               	movwf	tosl,c
 14035  01352E  500E               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 14036  013530  6EFE               	movwf	tosh,c
 14037  013532  500F               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 14038  013534  6EFF               	movwf	tosu,c
 14039  013536  50FA               	movf	pclath,w,c
 14040  013538  0012               	return		;indir
 14041  01353A                     __end_of_UART1_tx_vect_isr:
 14042                           	opt callstack 0
 14043                           
 14044 ;; *************** function _UART1_Transmit_ISR *****************
 14045 ;; Defined at:
 14046 ;;		line 214 in file "mcc_generated_files/uart1.c"
 14047 ;; Parameters:    Size  Location     Type
 14048 ;;		None
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;		None
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  1  [STACK] void 
 14053 ;; Registers used:
 14054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 3B/39
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14064 ;;Total ram usage:        0 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; This function calls:
 14067 ;;		Nothing
 14068 ;; This function is called by:
 14069 ;;		_UART1_Initialize
 14070 ;;		_UART1_tx_vect_isr
 14071 ;; This function uses a reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text104
 14075  01328A                     __ptext104:
 14076                           	opt callstack 0
 14077  01328A                     _UART1_Transmit_ISR:
 14078                           	opt callstack 13
 14079                           
 14080                           ;mcc_generated_files/uart1.c: 217:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14081                           
 14082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14083                           ;incstack = 0
 14084  01328A  0E40               	movlw	64
 14085  01328C  6033               	cpfslt	_uart1TxBufferRemaining^0,c
 14086  01328E  D010               	goto	l585
 14087                           
 14088                           ;mcc_generated_files/uart1.c: 218:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14089  013290  0EBD               	movlw	low _uart1TxBuffer
 14090  013292  2434               	addwf	_uart1TxTail^0,w,c	;volatile
 14091  013294  6ED9               	movwf	fsr2l,c
 14092  013296  6ADA               	clrf	fsr2h,c
 14093  013298  0E01               	movlw	high _uart1TxBuffer
 14094  01329A  22DA               	addwfc	fsr2h,f,c
 14095  01329C  50DF               	movf	indf2,w,c
 14096  01329E  013D               	movlb	61	; () banked
 14097  0132A0  6FEA               	movwf	234,b	;volatile
 14098                           
 14099                           ; BSR set to: 61
 14100  0132A2  2A34               	incf	_uart1TxTail^0,f,c	;volatile
 14101                           
 14102                           ; BSR set to: 61
 14103                           ;mcc_generated_files/uart1.c: 219:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14104  0132A4  0E3F               	movlw	63
 14105  0132A6  6434               	cpfsgt	_uart1TxTail^0,c
 14106  0132A8  D001               	goto	l5346
 14107                           
 14108                           ; BSR set to: 61
 14109                           ;mcc_generated_files/uart1.c: 220:    uart1TxTail = 0;
 14110  0132AA  6A34               	clrf	_uart1TxTail^0,c	;volatile
 14111  0132AC                     l5346:
 14112                           
 14113                           ; BSR set to: 61
 14114                           ;mcc_generated_files/uart1.c: 222:   uart1TxBufferRemaining++;
 14115  0132AC  2A33               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 14116                           
 14117                           ;mcc_generated_files/uart1.c: 223:  } else {
 14118  0132AE  0012               	return	
 14119  0132B0                     l585:
 14120                           
 14121                           ;mcc_generated_files/uart1.c: 224:   PIE3bits.U1TXIE = 0;
 14122  0132B0  0139               	movlb	57	; () banked
 14123  0132B2  9993               	bcf	147,4,b	;volatile
 14124                           
 14125                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14126  0132B4  0012               	return		;funcret
 14127  0132B6                     __end_of_UART1_Transmit_ISR:
 14128                           	opt callstack 0
 14129                           
 14130 ;; *************** function _UART1_rx_vect_isr *****************
 14131 ;; Defined at:
 14132 ;;		line 207 in file "mcc_generated_files/uart1.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;		None
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  1    wreg      void 
 14139 ;; Registers used:
 14140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14141 ;; Tracked objects:
 14142 ;;		On entry : 0/0
 14143 ;;		On exit  : 0/0
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14150 ;;Total ram usage:        0 bytes
 14151 ;; Hardware stack levels used:    1
 14152 ;; Hardware stack levels required when called:    1
 14153 ;; This function calls:
 14154 ;;		Absolute function
 14155 ;;		_UART1_Receive_ISR
 14156 ;; This function is called by:
 14157 ;;		Interrupt level 2
 14158 ;; This function uses a non-reentrant model
 14159 ;;
 14160                           
 14161                           	psect	text105
 14162  01353C                     __ptext105:
 14163                           	opt callstack 0
 14164  01353C                     _UART1_rx_vect_isr:
 14165                           	opt callstack 13
 14166                           
 14167                           ;incstack = 0
 14168  01353C  EE13  F2AA         	lfsr	1,___inthi_sp
 14169                           
 14170                           ;mcc_generated_files/uart1.c: 209:  if (UART1_RxInterruptHandler) {
 14171  013540  5010               	movf	_UART1_RxInterruptHandler^0,w,c
 14172  013542  1011               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 14173  013544  1012               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 14174  013546  B4D8               	btfsc	status,2,c
 14175  013548  0011               	retfie		f
 14176                           
 14177                           ;mcc_generated_files/uart1.c: 210:   UART1_RxInterruptHandler();
 14178  01354A  D801               	call	i2u328_48
 14179  01354C  0011               	retfie		f
 14180  01354E                     i2u328_48:
 14181  01354E  0005               	push	
 14182  013550  6EFA               	movwf	pclath,c
 14183  013552  5010               	movf	_UART1_RxInterruptHandler^0,w,c
 14184  013554  6EFD               	movwf	tosl,c
 14185  013556  5011               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 14186  013558  6EFE               	movwf	tosh,c
 14187  01355A  5012               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 14188  01355C  6EFF               	movwf	tosu,c
 14189  01355E  50FA               	movf	pclath,w,c
 14190  013560  0012               	return		;indir
 14191  013562                     __end_of_UART1_rx_vect_isr:
 14192                           	opt callstack 0
 14193                           
 14194 ;; *************** function _UART1_Receive_ISR *****************
 14195 ;; Defined at:
 14196 ;;		line 230 in file "mcc_generated_files/uart1.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;		None
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;		None
 14201 ;; Return value:  Size  Location     Type
 14202 ;;                  1  [STACK] void 
 14203 ;; Registers used:
 14204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14205 ;; Tracked objects:
 14206 ;;		On entry : 0/0
 14207 ;;		On exit  : 0/0
 14208 ;;		Unchanged: 0/0
 14209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;Total ram usage:        0 bytes
 14215 ;; Hardware stack levels used:    1
 14216 ;; This function calls:
 14217 ;;		Nothing
 14218 ;; This function is called by:
 14219 ;;		_UART1_Initialize
 14220 ;;		_UART1_rx_vect_isr
 14221 ;; This function uses a reentrant model
 14222 ;;
 14223                           
 14224                           	psect	text106
 14225  0136D6                     __ptext106:
 14226                           	opt callstack 0
 14227  0136D6                     _UART1_Receive_ISR:
 14228                           	opt callstack 13
 14229                           
 14230                           ;mcc_generated_files/uart1.c: 233:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14231                           
 14232                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14233                           ;incstack = 0
 14234  0136D6  0E00               	movlw	low _uart1RxBuffer
 14235  0136D8  2432               	addwf	_uart1RxHead^0,w,c	;volatile
 14236  0136DA  6ED9               	movwf	fsr2l,c
 14237  0136DC  6ADA               	clrf	fsr2h,c
 14238  0136DE  0E04               	movlw	high _uart1RxBuffer
 14239  0136E0  22DA               	addwfc	fsr2h,f,c
 14240  0136E2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14241  0136E8  2A32               	incf	_uart1RxHead^0,f,c	;volatile
 14242                           
 14243                           ;mcc_generated_files/uart1.c: 234:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14244  0136EA  2832               	incf	_uart1RxHead^0,w,c
 14245  0136EC  B4D8               	btfsc	status,2,c
 14246                           
 14247                           ;mcc_generated_files/uart1.c: 235:   uart1RxHead = 0;
 14248  0136EE  6A32               	clrf	_uart1RxHead^0,c	;volatile
 14249                           
 14250                           ;mcc_generated_files/uart1.c: 237:  uart1RxCount++;
 14251  0136F0  2A30               	incf	_uart1RxCount^0,f,c	;volatile
 14252                           
 14253                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14254  0136F2  0012               	return		;funcret
 14255  0136F4                     __end_of_UART1_Receive_ISR:
 14256                           	opt callstack 0
 14257                           
 14258 ;; *************** function _UART2_tx_vect_isr *****************
 14259 ;; Defined at:
 14260 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14261 ;; Parameters:    Size  Location     Type
 14262 ;;		None
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;		None
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  1    wreg      void 
 14267 ;; Registers used:
 14268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14278 ;;Total ram usage:        0 bytes
 14279 ;; Hardware stack levels used:    1
 14280 ;; Hardware stack levels required when called:    1
 14281 ;; This function calls:
 14282 ;;		Absolute function
 14283 ;;		_UART2_Transmit_ISR
 14284 ;; This function is called by:
 14285 ;;		Interrupt level 2
 14286 ;; This function uses a non-reentrant model
 14287 ;;
 14288                           
 14289                           	psect	text107
 14290  013564                     __ptext107:
 14291                           	opt callstack 0
 14292  013564                     _UART2_tx_vect_isr:
 14293                           	opt callstack 13
 14294                           
 14295                           ;incstack = 0
 14296  013564  EE13  F2AA         	lfsr	1,___inthi_sp
 14297                           
 14298                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 14299  013568  5013               	movf	_UART2_TxInterruptHandler^0,w,c
 14300  01356A  1014               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 14301  01356C  1015               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 14302  01356E  B4D8               	btfsc	status,2,c
 14303  013570  0011               	retfie		f
 14304                           
 14305                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 14306  013572  D801               	call	i2u330_48
 14307  013574  0011               	retfie		f
 14308  013576                     i2u330_48:
 14309  013576  0005               	push	
 14310  013578  6EFA               	movwf	pclath,c
 14311  01357A  5013               	movf	_UART2_TxInterruptHandler^0,w,c
 14312  01357C  6EFD               	movwf	tosl,c
 14313  01357E  5014               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 14314  013580  6EFE               	movwf	tosh,c
 14315  013582  5015               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 14316  013584  6EFF               	movwf	tosu,c
 14317  013586  50FA               	movf	pclath,w,c
 14318  013588  0012               	return		;indir
 14319  01358A                     __end_of_UART2_tx_vect_isr:
 14320                           	opt callstack 0
 14321                           
 14322 ;; *************** function _UART2_Transmit_ISR *****************
 14323 ;; Defined at:
 14324 ;;		line 213 in file "mcc_generated_files/uart2.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;		None
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;		None
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  1  [STACK] void 
 14331 ;; Registers used:
 14332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 3B/39
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14342 ;;Total ram usage:        0 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; This function calls:
 14345 ;;		Nothing
 14346 ;; This function is called by:
 14347 ;;		_UART2_Initialize
 14348 ;;		_UART2_tx_vect_isr
 14349 ;; This function uses a reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text108
 14353  0132B6                     __ptext108:
 14354                           	opt callstack 0
 14355  0132B6                     _UART2_Transmit_ISR:
 14356                           	opt callstack 13
 14357                           
 14358                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 14359                           
 14360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14361                           ;incstack = 0
 14362  0132B6  0E40               	movlw	64
 14363  0132B8  602D               	cpfslt	_uart2TxBufferRemaining^0,c
 14364  0132BA  D010               	goto	l705
 14365                           
 14366                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14367  0132BC  0E00               	movlw	low _uart2TxBuffer
 14368  0132BE  242E               	addwf	_uart2TxTail^0,w,c	;volatile
 14369  0132C0  6ED9               	movwf	fsr2l,c
 14370  0132C2  6ADA               	clrf	fsr2h,c
 14371  0132C4  0E02               	movlw	high _uart2TxBuffer
 14372  0132C6  22DA               	addwfc	fsr2h,f,c
 14373  0132C8  50DF               	movf	indf2,w,c
 14374  0132CA  013D               	movlb	61	; () banked
 14375  0132CC  6FD2               	movwf	210,b	;volatile
 14376                           
 14377                           ; BSR set to: 61
 14378  0132CE  2A2E               	incf	_uart2TxTail^0,f,c	;volatile
 14379                           
 14380                           ; BSR set to: 61
 14381                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14382  0132D0  0E3F               	movlw	63
 14383  0132D2  642E               	cpfsgt	_uart2TxTail^0,c
 14384  0132D4  D001               	goto	l5368
 14385                           
 14386                           ; BSR set to: 61
 14387                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14388  0132D6  6A2E               	clrf	_uart2TxTail^0,c	;volatile
 14389  0132D8                     l5368:
 14390                           
 14391                           ; BSR set to: 61
 14392                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14393  0132D8  2A2D               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 14394                           
 14395                           ;mcc_generated_files/uart2.c: 224:     }
 14396  0132DA  0012               	return	
 14397  0132DC                     l705:
 14398                           
 14399                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14400  0132DC  0139               	movlb	57	; () banked
 14401  0132DE  9796               	bcf	150,3,b	;volatile
 14402                           
 14403                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14404  0132E0  0012               	return		;funcret
 14405  0132E2                     __end_of_UART2_Transmit_ISR:
 14406                           	opt callstack 0
 14407                           
 14408 ;; *************** function _UART2_rx_vect_isr *****************
 14409 ;; Defined at:
 14410 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;		None
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;		None
 14415 ;; Return value:  Size  Location     Type
 14416 ;;                  1    wreg      void 
 14417 ;; Registers used:
 14418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14419 ;; Tracked objects:
 14420 ;;		On entry : 0/0
 14421 ;;		On exit  : 0/0
 14422 ;;		Unchanged: 0/0
 14423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14428 ;;Total ram usage:        0 bytes
 14429 ;; Hardware stack levels used:    1
 14430 ;; Hardware stack levels required when called:    1
 14431 ;; This function calls:
 14432 ;;		Absolute function
 14433 ;;		_UART2_Receive_ISR
 14434 ;; This function is called by:
 14435 ;;		Interrupt level 2
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text109
 14440  01358C                     __ptext109:
 14441                           	opt callstack 0
 14442  01358C                     _UART2_rx_vect_isr:
 14443                           	opt callstack 13
 14444                           
 14445                           ;incstack = 0
 14446  01358C  EE13  F2AA         	lfsr	1,___inthi_sp
 14447                           
 14448                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14449  013590  5016               	movf	_UART2_RxInterruptHandler^0,w,c
 14450  013592  1017               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 14451  013594  1018               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 14452  013596  B4D8               	btfsc	status,2,c
 14453  013598  0011               	retfie		f
 14454                           
 14455                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14456  01359A  D801               	call	i2u332_48
 14457  01359C  0011               	retfie		f
 14458  01359E                     i2u332_48:
 14459  01359E  0005               	push	
 14460  0135A0  6EFA               	movwf	pclath,c
 14461  0135A2  5016               	movf	_UART2_RxInterruptHandler^0,w,c
 14462  0135A4  6EFD               	movwf	tosl,c
 14463  0135A6  5017               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 14464  0135A8  6EFE               	movwf	tosh,c
 14465  0135AA  5018               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 14466  0135AC  6EFF               	movwf	tosu,c
 14467  0135AE  50FA               	movf	pclath,w,c
 14468  0135B0  0012               	return		;indir
 14469  0135B2                     __end_of_UART2_rx_vect_isr:
 14470                           	opt callstack 0
 14471                           
 14472 ;; *************** function _UART2_Receive_ISR *****************
 14473 ;; Defined at:
 14474 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14475 ;; Parameters:    Size  Location     Type
 14476 ;;		None
 14477 ;; Auto vars:     Size  Location     Type
 14478 ;;		None
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1  [STACK] void 
 14481 ;; Registers used:
 14482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14492 ;;Total ram usage:        0 bytes
 14493 ;; Hardware stack levels used:    1
 14494 ;; This function calls:
 14495 ;;		Nothing
 14496 ;; This function is called by:
 14497 ;;		_UART2_Initialize
 14498 ;;		_UART2_rx_vect_isr
 14499 ;; This function uses a reentrant model
 14500 ;;
 14501                           
 14502                           	psect	text110
 14503  0136F4                     __ptext110:
 14504                           	opt callstack 0
 14505  0136F4                     _UART2_Receive_ISR:
 14506                           	opt callstack 13
 14507                           
 14508                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14509                           
 14510                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14511                           ;incstack = 0
 14512  0136F4  0E00               	movlw	low _uart2RxBuffer
 14513  0136F6  242C               	addwf	_uart2RxHead^0,w,c	;volatile
 14514  0136F8  6ED9               	movwf	fsr2l,c
 14515  0136FA  6ADA               	clrf	fsr2h,c
 14516  0136FC  0E05               	movlw	high _uart2RxBuffer
 14517  0136FE  22DA               	addwfc	fsr2h,f,c
 14518  013700  006F F743 FFDF     	movff	15824,indf2	;volatile
 14519  013706  2A2C               	incf	_uart2RxHead^0,f,c	;volatile
 14520                           
 14521                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14522  013708  282C               	incf	_uart2RxHead^0,w,c
 14523  01370A  B4D8               	btfsc	status,2,c
 14524                           
 14525                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14526  01370C  6A2C               	clrf	_uart2RxHead^0,c	;volatile
 14527                           
 14528                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14529  01370E  2A2A               	incf	_uart2RxCount^0,f,c	;volatile
 14530                           
 14531                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14532  013710  0012               	return		;funcret
 14533  013712                     __end_of_UART2_Receive_ISR:
 14534                           	opt callstack 0
 14535                           
 14536 ;; *************** function _TMR6_ISR *****************
 14537 ;; Defined at:
 14538 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14539 ;; Parameters:    Size  Location     Type
 14540 ;;		None
 14541 ;; Auto vars:     Size  Location     Type
 14542 ;;		None
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  1    wreg      void 
 14545 ;; Registers used:
 14546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14556 ;;Total ram usage:        1 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:    2
 14559 ;; This function calls:
 14560 ;;		_TMR6_CallBack
 14561 ;; This function is called by:
 14562 ;;		Interrupt level 2
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           	psect	text111
 14567  013780                     __ptext111:
 14568                           	opt callstack 0
 14569  013780                     _TMR6_ISR:
 14570                           	opt callstack 12
 14571                           
 14572                           ;incstack = 0
 14573  013780  0060  F0D8  F05A   	movff	btemp,??_TMR6_ISR
 14574  013786  EE13  F2AA         	lfsr	1,___inthi_sp
 14575                           
 14576                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 14577  01378A  0139               	movlb	57	; () banked
 14578  01378C  91A9               	bcf	169,0,b	;volatile
 14579                           
 14580                           ; BSR set to: 57
 14581                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 14582  01378E  EC1E  F09B         	call	_TMR6_CallBack	;wreg free
 14583  013792  0060  F168  F036   	movff	??_TMR6_ISR,btemp
 14584  013798  0011               	retfie		f
 14585  01379A                     __end_of_TMR6_ISR:
 14586                           	opt callstack 0
 14587                           
 14588 ;; *************** function _TMR6_CallBack *****************
 14589 ;; Defined at:
 14590 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14591 ;; Parameters:    Size  Location     Type
 14592 ;;		None
 14593 ;; Auto vars:     Size  Location     Type
 14594 ;;		None
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1  [STACK] void 
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14599 ;; Tracked objects:
 14600 ;;		On entry : 3F/39
 14601 ;;		On exit  : 0/0
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14608 ;;Total ram usage:        0 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    1
 14611 ;; This function calls:
 14612 ;;		Absolute function
 14613 ;;		_TMR6_DefaultInterruptHandler
 14614 ;; This function is called by:
 14615 ;;		_TMR6_ISR
 14616 ;; This function uses a reentrant model
 14617 ;;
 14618                           
 14619                           	psect	text112
 14620  01363C                     __ptext112:
 14621                           	opt callstack 0
 14622  01363C                     _TMR6_CallBack:
 14623                           	opt callstack 12
 14624                           
 14625                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 14626                           
 14627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14628                           ;incstack = 0
 14629  01363C  5004               	movf	_TMR6_InterruptHandler^0,w,c
 14630  01363E  1005               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 14631  013640  1006               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 14632  013642  B4D8               	btfsc	status,2,c
 14633  013644  0012               	return	
 14634                           
 14635                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 14636  013646  D801               	call	u308_48
 14637  013648  0012               	return	
 14638  01364A                     u308_48:
 14639  01364A  0005               	push	
 14640  01364C  6EFA               	movwf	pclath,c
 14641  01364E  5004               	movf	_TMR6_InterruptHandler^0,w,c
 14642  013650  6EFD               	movwf	tosl,c
 14643  013652  5005               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 14644  013654  6EFE               	movwf	tosh,c
 14645  013656  5006               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 14646  013658  6EFF               	movwf	tosu,c
 14647  01365A  50FA               	movf	pclath,w,c
 14648  01365C  0012               	return		;indir
 14649  01365E                     __end_of_TMR6_CallBack:
 14650                           	opt callstack 0
 14651                           
 14652 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14653 ;; Defined at:
 14654 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14655 ;; Parameters:    Size  Location     Type
 14656 ;;		None
 14657 ;; Auto vars:     Size  Location     Type
 14658 ;;  i               1  [STACK] unsigned char 
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1  [STACK] void 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/39
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14672 ;;Total ram usage:        0 bytes
 14673 ;; Hardware stack levels used:    1
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_TMR6_Initialize
 14678 ;;		_TMR6_CallBack
 14679 ;; This function uses a reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text113
 14683  012F32                     __ptext113:
 14684                           	opt callstack 0
 14685  012F32                     _TMR6_DefaultInterruptHandler:
 14686                           	opt callstack 0
 14687                           
 14688                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14689  012F32  52E6               	movf	postinc1,f,c
 14690                           
 14691                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14692                           ;stkvar	_i @ sp[(-1)+0]
 14693                           
 14694                           ;incstack = 0
 14695  012F34  0EFF               	movlw	-1
 14696  012F36  6AE3               	clrf	plusw1,c
 14697  012F38                     l5192:
 14698                           
 14699                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14700                           ;stkvar	_i @ sp[(-1)+0]
 14701  012F38  0EFF               	movlw	-1
 14702  012F3A  50E3               	movf	plusw1,w,c
 14703  012F3C  0D02               	mullw	2
 14704  012F3E  50F3               	movf	243,w,c
 14705  012F40  0F80               	addlw	low _tickCount
 14706  012F42  6ED9               	movwf	fsr2l,c
 14707  012F44  6ADA               	clrf	fsr2h,c
 14708  012F46  50DE               	movf	postinc2,w,c
 14709  012F48  10DE               	iorwf	postinc2,w,c
 14710  012F4A  B4D8               	btfsc	status,2,c
 14711  012F4C  D00A               	goto	l5196
 14712                           
 14713                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14714                           ;stkvar	_i @ sp[(-1)+0]
 14715  012F4E  0EFF               	movlw	-1
 14716  012F50  50E3               	movf	plusw1,w,c
 14717  012F52  0D02               	mullw	2
 14718  012F54  50F3               	movf	243,w,c
 14719  012F56  0F80               	addlw	low _tickCount
 14720  012F58  6ED9               	movwf	fsr2l,c
 14721  012F5A  6ADA               	clrf	fsr2h,c
 14722  012F5C  06DE               	decf	postinc2,f,c
 14723  012F5E  0E00               	movlw	0
 14724  012F60  5ADD               	subwfb	postdec2,f,c
 14725  012F62                     l5196:
 14726                           
 14727                           ;mcc_generated_files/tmr6.c: 207:  }
 14728                           ;stkvar	_i @ sp[(-1)+0]
 14729  012F62  0EFF               	movlw	-1
 14730  012F64  2AE3               	incf	plusw1,f,c
 14731                           
 14732                           ;stkvar	_i @ sp[(-1)+0]
 14733  012F66  0EFF               	movlw	-1
 14734  012F68  006F FF8C  F036    	movff	plusw1,btemp
 14735  012F6E  0E0B               	movlw	11
 14736  012F70  6436               	cpfsgt	btemp^0,c
 14737  012F72  D7E2               	goto	l5192
 14738                           
 14739                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14740  012F74  52E5               	movf	postdec1,f,c
 14741  012F76  0012               	return		;funcret
 14742  012F78                     __end_of_TMR6_DefaultInterruptHandler:
 14743                           	opt callstack 0
 14744                           
 14745 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14746 ;; Defined at:
 14747 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  1    wreg      void 
 14754 ;; Registers used:
 14755 ;;		None
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 3F/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14765 ;;Total ram usage:        0 bytes
 14766 ;; Hardware stack levels used:    1
 14767 ;; This function calls:
 14768 ;;		Nothing
 14769 ;; This function is called by:
 14770 ;;		Interrupt level 2
 14771 ;; This function uses a non-reentrant model
 14772 ;;
 14773                           
 14774                           	psect	text114
 14775  013898                     __ptext114:
 14776                           	opt callstack 0
 14777  013898                     _DMA1_DMASCNT_ISR:
 14778                           	opt callstack 14
 14779                           
 14780                           ;incstack = 0
 14781  013898  EE13  F2AA         	lfsr	1,___inthi_sp
 14782                           
 14783                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14784  01389C  0139               	movlb	57	; () banked
 14785  01389E  91A2               	bcf	162,0,b	;volatile
 14786                           
 14787                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14788  0138A0  0100               	movlb	0	; () banked
 14789  0138A2  9798               	bcf	_spi_link& (0+255),3,b	;volatile
 14790                           
 14791                           ; BSR set to: 0
 14792  0138A4  0011               	retfie		f
 14793  0138A6                     __end_of_DMA1_DMASCNT_ISR:
 14794                           	opt callstack 0
 14795                           
 14796 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14797 ;; Defined at:
 14798 ;;		line 134 in file "mcc_generated_files/dma1.c"
 14799 ;; Parameters:    Size  Location     Type
 14800 ;;		None
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;		None
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  1    wreg      void 
 14805 ;; Registers used:
 14806 ;;		None
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 3F/39
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;Total ram usage:        0 bytes
 14817 ;; Hardware stack levels used:    1
 14818 ;; This function calls:
 14819 ;;		Nothing
 14820 ;; This function is called by:
 14821 ;;		Interrupt level 2
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text115
 14826  0138B0                     __ptext115:
 14827                           	opt callstack 0
 14828  0138B0                     _DMA1_DMADCNT_ISR:
 14829                           	opt callstack 14
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;incstack = 0
 14833  0138B0  EE13  F2AA         	lfsr	1,___inthi_sp
 14834                           
 14835                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 14836  0138B4  0139               	movlb	57	; () banked
 14837  0138B6  93A2               	bcf	162,1,b	;volatile
 14838                           
 14839                           ; BSR set to: 57
 14840  0138B8  0011               	retfie		f
 14841  0138BA                     __end_of_DMA1_DMADCNT_ISR:
 14842                           	opt callstack 0
 14843                           
 14844 ;; *************** function _DMA1_DMAA_ISR *****************
 14845 ;; Defined at:
 14846 ;;		line 144 in file "mcc_generated_files/dma1.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;		None
 14849 ;; Auto vars:     Size  Location     Type
 14850 ;;		None
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  1    wreg      void 
 14853 ;; Registers used:
 14854 ;;		None
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/0
 14857 ;;		On exit  : 3F/39
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;Total ram usage:        0 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; This function calls:
 14867 ;;		Nothing
 14868 ;; This function is called by:
 14869 ;;		Interrupt level 2
 14870 ;; This function uses a non-reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text116
 14874  0138BC                     __ptext116:
 14875                           	opt callstack 0
 14876  0138BC                     _DMA1_DMAA_ISR:
 14877                           	opt callstack 14
 14878                           
 14879                           ; BSR set to: 57
 14880                           ;incstack = 0
 14881  0138BC  EE13  F2AA         	lfsr	1,___inthi_sp
 14882                           
 14883                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 14884  0138C0  0139               	movlb	57	; () banked
 14885  0138C2  97A2               	bcf	162,3,b	;volatile
 14886                           
 14887                           ; BSR set to: 57
 14888  0138C4  0011               	retfie		f
 14889  0138C6                     __end_of_DMA1_DMAA_ISR:
 14890                           	opt callstack 0
 14891                           
 14892 ;; *************** function _DMA1_DMAOR_ISR *****************
 14893 ;; Defined at:
 14894 ;;		line 155 in file "mcc_generated_files/dma1.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;                  1    wreg      void 
 14901 ;; Registers used:
 14902 ;;		None
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/0
 14905 ;;		On exit  : 3F/39
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used:    1
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		Interrupt level 2
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text117
 14922  0138C8                     __ptext117:
 14923                           	opt callstack 0
 14924  0138C8                     _DMA1_DMAOR_ISR:
 14925                           	opt callstack 14
 14926                           
 14927                           ; BSR set to: 57
 14928                           ;incstack = 0
 14929  0138C8  EE13  F2AA         	lfsr	1,___inthi_sp
 14930                           
 14931                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 14932  0138CC  0139               	movlb	57	; () banked
 14933  0138CE  95A2               	bcf	162,2,b	;volatile
 14934                           
 14935                           ; BSR set to: 57
 14936  0138D0  0011               	retfie		f
 14937  0138D2                     __end_of_DMA1_DMAOR_ISR:
 14938                           	opt callstack 0
 14939                           
 14940                           ;
 14941                           ; Interrupt Vector Table @ 0x8
 14942                           ;
 14943                           
 14944                           	psect	ivt0x8
 14945  000008                     __pivt0x8:
 14946                           	opt callstack 0
 14947  000008                     ivt0x8_base:
 14948                           	opt callstack 0
 14949                           
 14950                           ; Vector 0 : SWINT
 14951  000008  4E41               	dw	_Default_ISR shr (0+2)
 14952                           
 14953                           ; Vector 1 : HLVD
 14954  00000A  4E41               	dw	_Default_ISR shr (0+2)
 14955                           
 14956                           ; Vector 2 : OSF
 14957  00000C  4E41               	dw	_Default_ISR shr (0+2)
 14958                           
 14959                           ; Vector 3 : CSW
 14960  00000E  4E41               	dw	_Default_ISR shr (0+2)
 14961                           
 14962                           ; Vector 4 : NVM
 14963  000010  4E41               	dw	_Default_ISR shr (0+2)
 14964                           
 14965                           ; Vector 5 : SCAN
 14966  000012  4E41               	dw	_Default_ISR shr (0+2)
 14967                           
 14968                           ; Vector 6 : CRC
 14969  000014  4E41               	dw	_Default_ISR shr (0+2)
 14970                           
 14971                           ; Vector 7 : IOC
 14972  000016  4E41               	dw	_Default_ISR shr (0+2)
 14973                           
 14974                           ; Vector 8 : INT0
 14975  000018  4E1E               	dw	_INT0_ISR shr (0+2)
 14976                           
 14977                           ; Vector 9 : ZCD
 14978  00001A  4E41               	dw	_Default_ISR shr (0+2)
 14979                           
 14980                           ; Vector 10 : AD
 14981  00001C  4C3C               	dw	_ADCC_ISR shr (0+2)
 14982                           
 14983                           ; Vector 11 : ADT
 14984  00001E  4B84               	dw	_ADCC_ThresholdISR shr (0+2)
 14985                           
 14986                           ; Vector 12 : CMP1
 14987  000020  4E41               	dw	_Default_ISR shr (0+2)
 14988                           
 14989                           ; Vector 13 : SMT1
 14990  000022  4E41               	dw	_Default_ISR shr (0+2)
 14991                           
 14992                           ; Vector 14 : SMT1PRA
 14993  000024  4E41               	dw	_Default_ISR shr (0+2)
 14994                           
 14995                           ; Vector 15 : SMT1PRW
 14996  000026  4E41               	dw	_Default_ISR shr (0+2)
 14997                           
 14998                           ; Vector 16 : DMA1SCNT
 14999  000028  4E26               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 15000                           
 15001                           ; Vector 17 : DMA1DCNT
 15002  00002A  4E2C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 15003                           
 15004                           ; Vector 18 : DMA1OR
 15005  00002C  4E32               	dw	_DMA1_DMAOR_ISR shr (0+2)
 15006                           
 15007                           ; Vector 19 : DMA1A
 15008  00002E  4E2F               	dw	_DMA1_DMAA_ISR shr (0+2)
 15009                           
 15010                           ; Vector 20 : SPI1RX
 15011  000030  4E41               	dw	_Default_ISR shr (0+2)
 15012                           
 15013                           ; Vector 21 : SPI1TX
 15014  000032  4E41               	dw	_Default_ISR shr (0+2)
 15015                           
 15016                           ; Vector 22 : SPI1
 15017  000034  4E41               	dw	_Default_ISR shr (0+2)
 15018                           
 15019                           ; Vector 23 : I2C1RX
 15020  000036  4E41               	dw	_Default_ISR shr (0+2)
 15021                           
 15022                           ; Vector 24 : I2C1TX
 15023  000038  4E41               	dw	_Default_ISR shr (0+2)
 15024                           
 15025                           ; Vector 25 : I2C1
 15026  00003A  4E41               	dw	_Default_ISR shr (0+2)
 15027                           
 15028                           ; Vector 26 : I2C1E
 15029  00003C  4E41               	dw	_Default_ISR shr (0+2)
 15030                           
 15031                           ; Vector 27 : U1RX
 15032  00003E  4D4F               	dw	_UART1_rx_vect_isr shr (0+2)
 15033                           
 15034                           ; Vector 28 : U1TX
 15035  000040  4D45               	dw	_UART1_tx_vect_isr shr (0+2)
 15036                           
 15037                           ; Vector 29 : U1E
 15038  000042  4E41               	dw	_Default_ISR shr (0+2)
 15039                           
 15040                           ; Vector 30 : U1
 15041  000044  4E41               	dw	_Default_ISR shr (0+2)
 15042                           
 15043                           ; Vector 31 : TMR0
 15044  000046  4E41               	dw	_Default_ISR shr (0+2)
 15045                           
 15046                           ; Vector 32 : TMR1
 15047  000048  4E41               	dw	_Default_ISR shr (0+2)
 15048                           
 15049                           ; Vector 33 : TMR1G
 15050  00004A  4E41               	dw	_Default_ISR shr (0+2)
 15051                           
 15052                           ; Vector 34 : TMR2
 15053  00004C  4E41               	dw	_Default_ISR shr (0+2)
 15054                           
 15055                           ; Vector 35 : CCP1
 15056  00004E  4E41               	dw	_Default_ISR shr (0+2)
 15057                           
 15058                           ; Vector 36 : Undefined
 15059  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 15060                           
 15061                           ; Vector 37 : NCO1
 15062  000052  4E41               	dw	_Default_ISR shr (0+2)
 15063                           
 15064                           ; Vector 38 : CWG1
 15065  000054  4E41               	dw	_Default_ISR shr (0+2)
 15066                           
 15067                           ; Vector 39 : CLC1
 15068  000056  4E41               	dw	_Default_ISR shr (0+2)
 15069                           
 15070                           ; Vector 40 : INT1
 15071  000058  4E22               	dw	_INT1_ISR shr (0+2)
 15072                           
 15073                           ; Vector 41 : CMP2
 15074  00005A  4E41               	dw	_Default_ISR shr (0+2)
 15075                           
 15076                           ; Vector 42 : DMA2SCNT
 15077  00005C  4E41               	dw	_Default_ISR shr (0+2)
 15078                           
 15079                           ; Vector 43 : DMA2DCNT
 15080  00005E  4E41               	dw	_Default_ISR shr (0+2)
 15081                           
 15082                           ; Vector 44 : DMA2OR
 15083  000060  4E41               	dw	_Default_ISR shr (0+2)
 15084                           
 15085                           ; Vector 45 : DMA2A
 15086  000062  4E41               	dw	_Default_ISR shr (0+2)
 15087                           
 15088                           ; Vector 46 : I2C2RX
 15089  000064  4E41               	dw	_Default_ISR shr (0+2)
 15090                           
 15091                           ; Vector 47 : I2C2TX
 15092  000066  4E41               	dw	_Default_ISR shr (0+2)
 15093                           
 15094                           ; Vector 48 : I2C2
 15095  000068  4E41               	dw	_Default_ISR shr (0+2)
 15096                           
 15097                           ; Vector 49 : I2C2E
 15098  00006A  4E41               	dw	_Default_ISR shr (0+2)
 15099                           
 15100                           ; Vector 50 : U2RX
 15101  00006C  4D63               	dw	_UART2_rx_vect_isr shr (0+2)
 15102                           
 15103                           ; Vector 51 : U2TX
 15104  00006E  4D59               	dw	_UART2_tx_vect_isr shr (0+2)
 15105                           
 15106                           ; Vector 52 : U2E
 15107  000070  4E41               	dw	_Default_ISR shr (0+2)
 15108                           
 15109                           ; Vector 53 : U2
 15110  000072  4E41               	dw	_Default_ISR shr (0+2)
 15111                           
 15112                           ; Vector 54 : TMR3
 15113  000074  4E41               	dw	_Default_ISR shr (0+2)
 15114                           
 15115                           ; Vector 55 : TMR3G
 15116  000076  4E41               	dw	_Default_ISR shr (0+2)
 15117                           
 15118                           ; Vector 56 : TMR4
 15119  000078  4E41               	dw	_Default_ISR shr (0+2)
 15120                           
 15121                           ; Vector 57 : CCP2
 15122  00007A  4E41               	dw	_Default_ISR shr (0+2)
 15123                           
 15124                           ; Vector 58 : Undefined
 15125  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15126                           
 15127                           ; Vector 59 : CWG2
 15128  00007E  4E41               	dw	_Default_ISR shr (0+2)
 15129                           
 15130                           ; Vector 60 : CLC2
 15131  000080  4E41               	dw	_Default_ISR shr (0+2)
 15132                           
 15133                           ; Vector 61 : INT2
 15134  000082  4E41               	dw	_Default_ISR shr (0+2)
 15135                           
 15136                           ; Vector 62 : Undefined
 15137  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15138                           
 15139                           ; Vector 63 : Undefined
 15140  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15141                           
 15142                           ; Vector 64 : Undefined
 15143  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15144                           
 15145                           ; Vector 65 : Undefined
 15146  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15147                           
 15148                           ; Vector 66 : Undefined
 15149  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15150                           
 15151                           ; Vector 67 : Undefined
 15152  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15153                           
 15154                           ; Vector 68 : Undefined
 15155  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15156                           
 15157                           ; Vector 69 : Undefined
 15158  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15159                           
 15160                           ; Vector 70 : TMR5
 15161  000094  4B2B               	dw	_TMR5_ISR shr (0+2)
 15162                           
 15163                           ; Vector 71 : TMR5G
 15164  000096  4E41               	dw	_Default_ISR shr (0+2)
 15165                           
 15166                           ; Vector 72 : TMR6
 15167  000098  4DE0               	dw	_TMR6_ISR shr (0+2)
 15168                           
 15169                           ; Vector 73 : CCP3
 15170  00009A  4E41               	dw	_Default_ISR shr (0+2)
 15171                           
 15172                           ; Vector 74 : CWG3
 15173  00009C  4E41               	dw	_Default_ISR shr (0+2)
 15174                           
 15175                           ; Vector 75 : CLC3
 15176  00009E  4E41               	dw	_Default_ISR shr (0+2)
 15177                           
 15178                           ; Vector 76 : Undefined
 15179  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15180                           
 15181                           ; Vector 77 : Undefined
 15182  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15183                           
 15184                           ; Vector 78 : Undefined
 15185  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15186                           
 15187                           ; Vector 79 : Undefined
 15188  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15189                           
 15190                           ; Vector 80 : CCP4
 15191  0000A8  4E41               	dw	_Default_ISR shr (0+2)
 15192                           
 15193                           ; Vector 81 : CLC4
 15194  0000AA  4E41               	dw	_Default_ISR shr (0+2)
 15195  0000AC                     ivt0x8_undefint:
 15196                           	opt callstack 0
 15197  0000AC  00FF               	reset	
 15198                           
 15199                           	psect	text118
 15200  000000                     __ptext118:
 15201                           	opt callstack 0
 15202                           
 15203                           	psect	rparam
 15204  0000                     
 15205                           	psect	temp
 15206  000036                     btemp:
 15207                           	opt callstack 0
 15208  000036                     	ds	32
 15209  0000                     wtemp0	set	btemp
 15210  0000                     wtemp1	set	btemp+2
 15211  0000                     wtemp2	set	btemp+4
 15212  0000                     wtemp3	set	btemp+6
 15213  0000                     wtemp4	set	btemp+8
 15214  0000                     wtemp5	set	btemp+10
 15215  0000                     wtemp8	set	btemp+1
 15216  0000                     ttemp0	set	btemp
 15217  0000                     ttemp1	set	btemp+3
 15218  0000                     ttemp2	set	btemp+6
 15219  0000                     ttemp3	set	btemp+9
 15220  0000                     ttemp5	set	btemp+1
 15221  0000                     ttemp6	set	btemp+4
 15222  0000                     ttemp7	set	btemp+8
 15223  0000                     ltemp0	set	btemp
 15224  0000                     ltemp1	set	btemp+4
 15225  0000                     ltemp2	set	btemp+8
 15226  0000                     lltemp0	set	btemp
 15227  0000                     lltemp1	set	btemp+8
 15228  0000                     lltemp2	set	btemp+16
 15229  0000                     lltemp3	set	btemp+24
 15230                           tosu	equ	0x3FFF
 15231                           tosh	equ	0x3FFE
 15232                           tosl	equ	0x3FFD
 15233                           stkptr	equ	0x3FFC
 15234                           pclatu	equ	0x3FFB
 15235                           pclath	equ	0x3FFA
 15236                           pcl	equ	0x3FF9
 15237                           tblptru	equ	0x3FF8
 15238                           tblptrh	equ	0x3FF7
 15239                           tblptrl	equ	0x3FF6
 15240                           tablat	equ	0x3FF5
 15241                           prodh	equ	0x3FF4
 15242                           prodl	equ	0x3FF3
 15243                           indf0	equ	0x3FEF
 15244                           postinc0	equ	0x3FEE
 15245                           postdec0	equ	0x3FED
 15246                           preinc0	equ	0x3FEC
 15247                           plusw0	equ	0x3FEB
 15248                           fsr0h	equ	0x3FEA
 15249                           fsr0l	equ	0x3FE9
 15250                           wreg	equ	0x3FE8
 15251                           indf1	equ	0x3FE7
 15252                           postinc1	equ	0x3FE6
 15253                           postdec1	equ	0x3FE5
 15254                           preinc1	equ	0x3FE4
 15255                           plusw1	equ	0x3FE3
 15256                           fsr1h	equ	0x3FE2
 15257                           fsr1l	equ	0x3FE1
 15258                           bsr	equ	0x3FE0
 15259                           indf2	equ	0x3FDF
 15260                           postinc2	equ	0x3FDE
 15261                           postdec2	equ	0x3FDD
 15262                           preinc2	equ	0x3FDC
 15263                           plusw2	equ	0x3FDB
 15264                           fsr2h	equ	0x3FDA
 15265                           fsr2l	equ	0x3FD9
 15266                           status	equ	0x3FD8


Data Sizes:
    Strings     238
    Constant    144
    Data        212
    BSS         1157
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      5      58
    BANK0           160      4     141
    BANK1           256      0     253
    BANK2           256      0     198
    BANK3           256      0     218
    BANK4           256      0     255
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> STR_14(CODE[9]), STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_9(CODE[18]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4501_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK3[218]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[18]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[24]), STR_21(CODE[15]), STR_20(CODE[15]), STR_19(CODE[15]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[18]), 
		 -> STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_14(CODE[9]), STR_13(CODE[12]), 
		 -> D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK1[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_14(CODE[9]), 
		 -> STR_13(CODE[12]), D.lcd(BANK3[216]), D(BANK3[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK1[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_14(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_13(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), V(BANK1[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK3[216]), D(BANK3[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1953spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1953spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  119139
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   11866
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1   70275
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   34891
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   10813
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   24166
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   23902
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   11835
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   11974
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   10588
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   10489
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           39    33      6   10253
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   3     3      0      22
                                              1 COMRAM     3     3      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              4 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _fputc
                 _putch
                   _ringBufS_put_dma
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DA      11       85.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      8D       5       88.1%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      5      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     562      58        0.0%
DATA                 0      0     562       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov  2 02:16:22 2019

                    _SPI1_Exchange8bit 365E               __end_of_set_display_info 36B8  
                                    _D 0300                                      _R 0060  
                                    _T FE81                                      _V 0100  
     __end_of_TMR5_SetInterruptHandler 3474                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                 __end_of_FVR_Initialize 38F2  
                          __CFG_LVP$ON 000000                                    l171 381E  
                                  l705 32DC                                    l585 32B0  
                                  l839 366C                                    _GIE 01FE97  
                                  _abs 2E60                                    _pad 2134  
              __size_of_PMD_Initialize 0014                        _TMR2_Initialize 37B2  
                                  prod 003FF3                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 35F8  
                   _UART1_Transmit_ISR 328A                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 361A                           __CFG_ZCD$OFF 000000  
                                 l1032 3038                                   l1240 0D4C  
                                 l1326 2D12                                   l1249 0EF8  
                                 l1542 30D2                                   l1462 25EC  
                                 l2511 1F12                                   l1551 1B6A  
                                 l1481 3140                                   l1706 060C  
                                 l1466 27C6                                   l1555 1CC6  
                                 l4300 17C6                                   l1733 1424  
                                 l1559 2026                                   l4320 18D6  
                                 l4242 2E90                                   l1754 09C8  
                                 l2477 2EA0                                   l2557 28D8  
                                 l1686 2188                                   l1782 0524  
                                 l6102 24CA                   _ADCC_StartConversion 3838  
                                 l1599 36B4                                   l4336 1A0A  
                                 l4328 195E                                   l4264 28C8  
                                 l6032 0452                                   l6008 0228  
                                 l6104 250C                                   l4282 16AE  
                                 l6042 04B0                                   l6018 02D6  
                                 l4196 26C0                                   l4276 165A  
                                 l4198 26E2                                   l6038 04AC  
                                 l6070 10E6                                   l5192 2F38  
                                 l4288 16F4                                   l6048 04D0  
                                 l5346 32AC                                   l6090 12BC  
                                 l6082 120E                                   l6154 264C  
                                 l6306 1B3A                                   l5196 2F62  
                                 l4724 35CE                                   l5268 30E8  
                                 l6076 11A4                                   l4804 314A  
                                 l6190 1F3E                                   l6318 1C62  
                                 l6406 0EFC                                   l5368 32D8  
                                 l6432 1008                                   l6408 0F24  
                                 l6360 0D36                                   l5546 2A90  
                                 l5394 3020                                   l6426 0F78  
                                 l6418 0F54                                   l5812 0646  
                                 l5804 05FC                                   l5900 15B8  
                                 l6444 103C                                   l6364 0D54  
                                 l5734 1E28                                   l5750 29B4  
                                 l6366 0D66                                   l6358 0D2E  
                                 l5760 2180                                   l5816 0664  
                                 l5920 09F2                                   l5746 2976  
                                 l5770 2210                                   l5762 2192  
                                 l5850 094C                                   l5826 086A  
                                 l5914 09B8                                   l5756 2158  
                                 l5780 292C                                   l5766 21CE  
                                 l5846 091C                                   l5862 13A6  
                                 l5950 0B84                                   l5934 0A8E  
                                 l5926 0A2E                                   l5778 2900  
                                 l5882 1496                                   l5892 1550  
                                 l5886 14C6                                   l5878 145A  
                                 l5974 0CD0                                   l5958 0BFE  
                                 l5896 157C                                   l5996 00EA  
                                 STR_1 FF96                                   STR_2 FFC7  
                                 STR_3 FFF5                                   STR_4 FF85  
                                 STR_5 FFA7                                   STR_6 FFC7  
                                 STR_7 FFF5                                   STR_8 FF74  
                                 STR_9 FF62                                   u2000 16AA  
                                 u2011 16B4                                   u2020 16EE  
                                 u2100 18D0                                   u2030 1720  
                                 u2120 1926                                   u2050 17FE  
                                 u2130 1958                                   u2140 198A  
                                 _LATA 003FBA                                   u2070 1850  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2160 1A42                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u4010 013E  
                                 _LATF 003FBF                                   u2180 1A94  
                                 u4100 1330                                   u1800 2710  
                                 u4040 032A                                   u4130 262C  
                                 _T2PR 003FAB                                   u1900 3250  
                                 u4220 1CB2                                   u1910 3252  
                                 u1830 3220                                   u4230 1CB4  
                                 u1807 2702                                   u3440 1E1C  
                                 u1920 2FB0                                   u1840 3222  
                                 u3610 0632                                   u1930 2FB2  
                                 u3460 1E98                                   u3620 087E  
                                 u3540 055E                                   u1940 2886  
                                 u3550 0560                                   u1950 2888  
                                 u3631 08AE                                   u3640 08C4  
                                 u2905 2B62                                   u3641 08C2  
                                 u2906 2B64                                   u1890 2E74  
                                 u3650 08D8                                   u3570 05D0  
                                 u3810 099E                                   _T6PR 003F93  
                                 u1980 1654                                   u3660 08DC  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u3590 05E2                                   u3750 14BC  
                                 u3910 0BFA                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u2880 2B2E  
                                 u3680 08F2                                   u3760 1502  
                                 u3920 0C1A                                   u3840 0A86  
                                 _PMD4 0039C4                                   u2865 2FEC  
                                 _PMD5 0039C5                                   u3850 0ADA  
                                 _PMD6 0039C6                                   u3931 0C4A  
                                 u3915 0BDC                                   _PMD7 0039C7  
                                 u3940 0C60                                   u3860 0ADC  
                                 u3941 0C5E                                   u3790 15DE  
                                 u3950 0C74                                   u3767 14F4  
                                 u3960 0C78                                   u3880 0B3A  
                                 u2898 2B30                                   u3890 0B3C  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                       __end_of_ADCC_ISR 3128  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00AA  
                                 _ctoa 28E2                                   _main 0D08  
                                 _dtoa 052E                                   _seed 00CA  
                                 _prec 0021                                   _nout 00A8  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 133A  
                                 btemp 0036                                   _xtoa 0984  
               __end_of_check_adc_scan 38EA                                   prodh 003FF4  
                                 prodl 003FF3                                   start 00AE  
                      _timer5ReloadVal 0027              __end_of_SPI1_Exchange8bit 367C  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 353C  
                         ___param_bank 000000                     ?_UART1_rx_vect_isr 0056  
                     __end_of_INT0_ISR 3886                       __end_of_INT1_ISR 3896  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 25F4  
        __end_of_OSCILLATOR_Initialize 3824                                  PRLOCK 0039EF  
                      __end_of___aodiv 1878                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 1AB8                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 FFFC  
                                STR_11 FFF9                                  STR_20 FFB8  
                                STR_21 FFB8                                  STR_13 FFD6  
                                STR_14 FFEC                                  STR_22 FF11  
                                STR_15 FF3C                                  STR_16 FF3C  
                                STR_24 FF4F                                  STR_17 FFE2  
                                STR_25 FF29                          __CFG_WDTE$OFF 000000  
                                STR_18 FFE2                                  STR_19 FFB8  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0007  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005A                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 3904  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 3514                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 2D08                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 379A                           _DMA1CON1bits 003BFD  
                                _flags 0023                                  _fputc 1DF8  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 2FBC  
                                _fputs 2966                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 0056                                  _srand 3194  
                                _width 001F                                  _putch 374A  
                      __end_of_islower 322C               _INT1_SetInterruptHandler 3474  
                      __end_of_isupper 325C                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0036  
                                ltemp1 003A                                  ltemp2 003E  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                ttemp0 0036                                  ttemp1 0039  
                                ttemp2 003C                                  ttemp3 003F  
                                ttemp5 0037                                  ttemp6 003A  
                                ttemp7 003E                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 3424            _UART1_SetRxInterruptHandler 33FC  
                                wtemp0 0036                                  wtemp1 0038  
                                wtemp2 003A                                  wtemp3 003C  
                                wtemp4 003E                                  wtemp5 0040  
                                wtemp8 0037                        __end_of_sprintf 2134  
                      __end_of_toupper 28E2                    ??_UART1_tx_vect_isr 005A  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 3562  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 2EEC  
                __end_of_ringBufS_init 3384                        __initialization 23E4  
                    _UART2_rx_vect_isr 358C                           __end_of_ctoa 2966  
                         __end_of_main 104E                           __end_of_dtoa 0984  
                         __end_of_stoa 15F8                           __end_of_xtoa 0D08  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0056  
              __end_of_TMR2_Initialize 37CA               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 344C                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005A              __end_of_UART1_tx_vect_isr 353A  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 32E2  
                      _PWM8_Initialize 37F8                       _UART1_Initialize 2B86  
                    _UART2_tx_vect_isr 3564                     _UART2_Transmit_ISR 32B6  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 303E  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 2FBC  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0056                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1049 2CFA  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u130_48 3628                         __CFG_WDTCCS$SC 000000  
                               u151_40 36C0                                 u311_28 35E4  
                               u151_46 36C2                                 u128_48 3606  
                               u322_40 2AA4                                 _FVRCON 003EC1  
                     _mode_lamp_bright 3868                                 u322_46 2AA6  
                               u308_48 364A                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               u294_20 376C                                 _IVTADU 00389F  
                               u294_26 376E           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 2E0E  
                  ??_UART2_tx_vect_isr 005A              __end_of_UART2_rx_vect_isr 35B2  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 38A6  
                     _UART2_Initialize 2C4C                                 _WaitMs 3128  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                    _ADCC_ThresholdISR 2E10                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 273C                     ?_ADCC_ThresholdISR 0056  
                               _memset 104E                   __size_of_help_button 0038  
                               clear_0 2430                                 clear_1 2444  
                               clear_2 2456                                 clear_3 2462  
                               clear_4 246E                                 clear_5 247A  
                               clear_6 2486                                 _printf 2BEA  
                   _eaDogM_WriteString 25F4                              ?_ADCC_ISR 0056  
                               _strlen 269A                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 2AB8                         _PMD_Initialize 3824  
            __end_of_UART2_tx_vect_isr 358A                                 lltemp0 0036  
                               lltemp1 003E                                 lltemp2 0046  
                               lltemp3 004E                    ??_ADCC_ThresholdISR 0057  
               __end_of_start_adc_scan 307A                           __mediumconst FE80  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 2D62  
                     __end_of_vfprintf 254A                             _StartTimer 307A  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 2F32  
                    _SYSTEM_Initialize 2EA6                             __accesstop 0060  
              __end_of__initialization 2498                              ?_INT0_ISR 0056  
                            ?_INT1_ISR 0056                   __end_of_display_help 38E2  
                 __end_of_display_info 38DA              __end_of_CLKREF_Initialize 38B0  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 2FFE                  _set_temp_display_help 384A  
            __end_of_ADCC_ThresholdISR 2E60                 __end_of_ringBufS_flush 27CE  
                       __pcstackCOMRAM 0056                             ___inthi_sp 0EAA  
                           ___intlo_sp 1755                           __pidataBANK0 37CA  
                         __pidataBANK1 2326                              ?_TMR5_ISR 0056  
                            ?_TMR6_ISR 0056                         ivt0x8_undefint 00AC  
                        __end_of_fputc 1F1C                          __end_of_fputs 29E4  
                        __end_of_srand 31C8                  __end_of_TMR5_CallBack 35F8  
                        __end_of_putch 3764                __end_of_PWM8_Initialize 380E  
              __end_of_TMR6_Initialize 330C                      _adc_int_t_handler 2A4E  
               __end_of_PMD_Initialize 3838                             ??_ADCC_ISR 0056  
                __end_of_TMR6_CallBack 365E            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 38BC  
                       _clear_adc_scan 38F2                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0016              __end_of_SYSTEM_Initialize 2EEC  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 0060                             __pbssBANK1 01BD  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           _check_help 1AB8                  _INT0_InterruptHandler 001C  
                           ??_INT0_ISR 0056                             ??_INT1_ISR 0056  
                    __end_of_TimerDone 35D6                       _DMA1_DMADCNT_ISR 38B0  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 372E                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 344C                __end_of_ADCC_Initialize 2B20  
                           ??_TMR5_ISR 00E9              __end_of_adc_int_t_handler 2AB8  
                           ??_TMR6_ISR 005A                                _ADFLTRH 003EE7  
                              _ADFLTRL 003EE6                                _DMA1DSA 003BF0  
                              _DMA2DSA 003BD0                                _DMA1DSZ 003BEE  
                              _DMA2DSZ 003BCE                                _DMA1SSA 003BF9  
                              _DMA2SSA 003BD9   __end_of_ADCC_SetADTIInterruptHandler 34EC  
__size_of_ADCC_SetADTIInterruptHandler 0028           _ADCC_SetADTIInterruptHandler 34C4  
                              _DMA1SSZ 003BF7                                _DMA2SSZ 003BD7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                    _UART1_Receive_ISR 36D6                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                 __end_of_clear_adc_scan 38F8  
                       ?_DMA1_DMAA_ISR 0056                       _DMA1_DMASCNT_ISR 3898  
                              _U1ERRIE 003DFA                     __size_of_set_vterm 001C  
                              _U1ERRIR 003DF9                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                         ?_Default_ISR 0056             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 052E  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
                              _PWM8DCH 003F61                                _PWM8DCL 003F60  
                              _PWM8CON 003F62                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 303E      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000             __size_of_ADCC_ThresholdISR 0050  
                        _mode_lamp_dim 379A                                __Lparam 0000  
             __end_of_UART1_Initialize 2BEA                        __size_of_WaitMs 0036  
                              ___aodiv 15F8                                ___aomod 1878  
            __end_of_UART1_Receive_ISR 36F4                   __end_of_init_display 2326  
                              __pcinit 23E4               __end_of_mode_lamp_bright 3876  
                      __size_of_memset 02EC               __size_of_adc_int_handler 001E  
                  _eaDogM_WriteCommand 385A                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C                                __ptext0 0D08  
                              __ptext1 303E                                __ptext2 3838  
                              __ptext3 3194                                __ptext4 223C  
                              __ptext5 330C                                __ptext6 3334  
                              __ptext7 365E                                __ptext8 335C  
                              __ptext9 367C                      _UART2_Receive_ISR 36F4  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us208999 1862  
                              us219999 1AA6                                us353999 0548  
                              us370999 134C                  _OSCILLATOR_Initialize 380E  
                              us383999 0A04                           __size_of_abs 0046  
                         __size_of_pad 0108                                _isalpha 2F78  
                              _mode_sw 0029                                _islower 31FC  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 2CAA                                _isupper 322C  
           __size_of_SYSTEM_Initialize 0046                                _sprintf 202A  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _toupper 285E                   end_of_initialization 2498  
  __end_of_UART1_SetTxInterruptHandler 33FC            _UART1_SetTxInterruptHandler 33D4  
  __end_of_UART2_SetRxInterruptHandler 33D4            _UART2_SetRxInterruptHandler 33AC  
                    __end_of_set_vterm 374A                      __end_of_vfpfcnvrt 052E  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
           __size_of_adc_int_t_handler 006A                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 3904              __end_of_UART2_Receive_ISR 3712  
                       wdtdelay@dcount 00A4                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005B                  _INT1_InterruptHandler 0019  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 3424  
                         _display_help 38DA                  _TMR5_InterruptHandler 0001  
                         _display_info 38D2   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 0038    __end_of_ADCC_SetADIInterruptHandler 3514  
          _ADCC_SetADIInterruptHandler 34EC                             _update_lcd 1F1C  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 29E4                        _SPI1_Initialize 37E2  
                __end_of_get_vterm_ptr 328A                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                         __end_of_WaitMs 315E  
         __end_of_INTERRUPT_Initialize 2B86                             _vterm_dump 1CCA  
 __end_of_INT0_DefaultInterruptHandler 390C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 390A             __size_of_UART1_Receive_ISR 001E  
                      _DMA2_Initialize 2D62                      __size_of_TMR5_ISR 005C  
                    __size_of_TMR6_ISR 001A                    __size_of_check_help 0212  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 133A  
                       __end_of_printf 2C4C               __end_of_DMA1_DMADCNT_ISR 38BA  
          __size_of_PWM8_LoadDutyValue 0042                  __end_of_INT0_CallBack 361A  
                       __end_of_strlen 273C                    start_initialization 23E4  
 __end_of_TMR5_DefaultInterruptHandler 377E  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 3764        __size_of_PIN_MANAGER_Initialize 0090  
                          __end_of_abs 2EA6                  __end_of_INT1_CallBack 363C  
            __size_of_set_display_info 001E                            __end_of_pad 223C  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 335C  
        __size_of_ADCC_StartConversion 0012                             ivt0x8_base 0008  
                        _uart1RxBuffer 0400                          _uart2RxBuffer 0500  
                        _uart1TxBuffer 01BD               __end_of_DMA1_DMASCNT_ISR 38A6  
                        _uart2TxBuffer 0200                         _DMA1_DMAOR_ISR 38C8  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00A6                              _TimerDone 35B2  
                        _ringBufS_init 335C                            __pdataBANK0 00D2  
                          __pdataBANK1 0100             __size_of_UART2_Receive_ISR 001E  
           __end_of_EXT_INT_Initialize 31FC                    __end_of_help_button 30EE  
      __end_of_eaDogM_WriteStringAtPos 3194                __end_of_DMA1_Initialize 2A4E  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 34C4  
                        __pcstackBANK0 00E9               __size_of_TMR2_Initialize 0018  
              __end_of_SPI1_Initialize 37F8               _UART1_RxInterruptHandler 0010  
             _UART2_TxInterruptHandler 0013                              __end_of_T FF11  
            __size_of_ringBufS_put_dma 00AA                           _init_display 223C  
               __end_of_DMA1_DMAOR_ISR 38D2                 __size_of_TMR5_CallBack 0022  
                _TMR6_InterruptHandler 0004                 __size_of_TMR6_CallBack 0022  
              __end_of_DMA2_Initialize 2DBC                 _PIN_MANAGER_Initialize 27CE  
                 __end_of_wait_lcd_set 38FE                          __pmediumconst FE80  
                            __ptext100 390E                              __ptext101 36B8  
                            __ptext110 36F4                              __ptext102 2E10  
                            __ptext111 3780                              __ptext103 3514  
                            __ptext112 363C                              __ptext104 328A  
                            __ptext113 2F32                              __ptext105 353C  
                            __ptext114 3898                              __ptext106 36D6  
                            __ptext115 38B0                              __ptext107 3564  
                            __ptext116 38BC                              __ptext108 32B6  
                            __ptext117 38C8                              __ptext109 358C  
                            __ptext118 0000                     __end_of_StartTimer 30B6  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00AC  
                             _ADCC_ISR 30F0                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 007E                         __size_of_srand 0034  
                       __size_of_putch 001A                   _INTERRUPT_Initialize 2B20  
                             _T6CLKCON 003F96                        ?_DMA1_DMAOR_ISR 0056  
                             _INT0_ISR 3878                               _INT1_ISR 3888  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0080  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0283                              _ring_buf2 0240  
                             i2u330_48 3576                               i2u155_48 310C  
                             i2u155_49 3120                               i2u332_48 359E  
                             i2u324_48 2E38                               i2u324_49 2E4C  
                             i2u326_48 3526                               i2u328_48 354E  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               _PIR4bits 0039A4  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046                              _set_vterm 372E  
                  __size_of_update_lcd 010E                            _help_button 30B6  
           __end_of_UART1_Transmit_ISR 32B6                               _TMR5_ISR 2CAC  
                             _TMR6_ISR 3780                              _port_data 00D9  
                            _vfpfcnvrt 0000                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 35D6                             _ADCON0bits 003EF8  
                   __end_of_check_help 1CCA                              _start_lcd 38FE  
              __size_of_FVR_Initialize 0008              __size_of_send_lcd_cmd_dma 0052  
                        _TMR6_CallBack 363C                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                       _set_display_info 369A  
             __size_of_PWM8_Initialize 0016               __size_of_TMR6_Initialize 002A  
                          _INTCON0bits 003FD2                              copy_data0 23F8  
                            copy_data1 241A               _INT0_SetInterruptHandler 349C  
                  __size_of_vterm_dump 012E                 _uart1TxBufferRemaining 0033  
  __end_of_UART2_SetTxInterruptHandler 33AC            _UART2_SetTxInterruptHandler 3384  
                         _uart1RxCount 0030                           _uart2RxCount 002A  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                               __Lrparam 0000  
              __size_of_check_adc_scan 0008                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 3712                           _send_lcd_cmd 3334  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _adc_int_handler 36B8                  __end_of_DMA1_DMAA_ISR 38C6  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 0056  
             __size_of_ADCC_Initialize 0068            __end_of_eaDogM_WriteCommand 3868  
                     __size_of_isalpha 0044                               __pivt0x8 0008  
                     __size_of_islower 0030                     ??_DMA1_DMADCNT_ISR 005B  
                             __ptext10 385A                               __ptext11 38F2  
                             __ptext20 3712                               __ptext12 1AB8  
                             __ptext21 2D08                               __ptext13 1CCA  
                             __ptext30 0984                               __ptext22 25F4  
                             __ptext14 202A                               __ptext31 285E  
                             __ptext23 38F8                               __ptext15 325C  
                             __ptext40 28E2                               __ptext32 31FC  
                             __ptext24 38FE                               __ptext16 3128  
                             __ptext41 2134                               __ptext33 322C  
                             __ptext25 273C                               __ptext17 1F1C  
                             __ptext50 379A                               __ptext42 269A  
                             __ptext34 2F78                               __ptext26 104E  
                             __ptext18 315E                               __ptext51 3868  
                             __ptext43 2966                               __ptext35 133A  
                             __ptext27 2BEA                               __ptext19 2DBC  
                             __ptext60 2C4C                               __ptext52 2FBC  
                             __ptext44 1DF8                               __ptext36 052E  
                             __ptext28 249E                               __ptext61 3384  
                             __ptext53 30B6                               __ptext45 374A  
                             __ptext37 2E60                               __ptext29 0000  
                             __ptext70 37B2                               __ptext62 33AC  
                             __ptext54 35B2                               __ptext46 254A  
                             __ptext38 1878                               __ptext71 37E2  
                             __ptext63 2B86                               __ptext55 307A  
                             __ptext47 372E                               __ptext39 15F8  
                             __ptext80 349C                               __ptext72 37F8  
                             __ptext64 33D4                               __ptext56 38D2  
                             __ptext48 384A                               __ptext81 2D62  
                             __ptext73 3824                               __ptext65 33FC  
                             __ptext57 38DA                               __ptext49 369A  
                             __ptext90 3764                               __ptext82 29E4  
                             __ptext74 27CE                               __ptext66 32E2  
                             __ptext58 38E2                               __ptext91 3878  
                             __ptext83 38A6                               __ptext75 380E  
                             __ptext67 3424                               __ptext59 2EA6  
                             __ptext92 35F8                               __ptext84 2AB8  
                             __ptext76 2B20                               __ptext68 2EEC  
                             __ptext93 390A                               __ptext85 34C4  
                             __ptext77 38EA                               __ptext69 344C  
                             __ptext94 3888                               __ptext86 34EC  
                             __ptext78 31C8                               __ptext95 361A  
                             __ptext87 2CAC                               __ptext79 3474  
                             __ptext96 390C                               __ptext88 2FFE  
                             __ptext97 3904                               __ptext89 35D6  
                             __ptext98 30F0                               __ptext99 2A4E  
                     __size_of_isupper 0030                       __size_of_sprintf 010A  
                     __size_of_toupper 0084                       _ringBufS_put_dma 254A  
                        __size_of_ctoa 0084                          __size_of_main 0346  
                        __size_of_dtoa 0456                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 0384  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0056  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 000A                              stoa@F1144 00D2  
                   ??_DMA1_DMASCNT_ISR 005B           __end_of_ADCC_StartConversion 384A  
                             _spi_link 0098                               _wdtdelay 2D08  
           __end_of_UART2_Transmit_ISR 32E2                               _vfprintf 249E  
           __end_of_PWM8_LoadDutyValue 2FFE   __end_of_INT1_DefaultInterruptHandler 390E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 390C  
                        ??_Default_ISR 0056                            _uart1RxHead 0032  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0035  
                          _uart2RxHead 002C                            _uart1RxTail 0031  
                       _get_raw_result 367C                            _uart2TxHead 002F  
                          _uart1TxTail 0034                            _uart2RxTail 002B  
                          _uart2TxTail 002E                           _wait_lcd_set 38F8  
                   _EXT_INT_Initialize 31C8   __end_of_TMR6_DefaultInterruptHandler 2F78  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 2F32  
 __end_of_ADCC_DefaultInterruptHandler 3910  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 390E                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 330C  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 385A  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 269A  
                __end_of_mode_lamp_dim 37B2                __end_of_adc_int_handler 36D6  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 202A                 _uart2TxBufferRemaining 002D  
                       _FVR_Initialize 38EA                 __end_of_get_raw_result 369A  
                     _send_lcd_cmd_dma 2DBC                  TMR5_ISR@CountCallBack 0025  
     __end_of_INT1_SetInterruptHandler 349C              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 005B               _UART1_TxInterruptHandler 000D  
            __end_of_send_lcd_cmd_long 3334                __size_of_start_adc_scan 003C  
                  __end_of_Default_ISR 390A         __end_of_PIN_MANAGER_Initialize 285E  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 1DF8  
              _eaDogM_WriteStringAtPos 315E                          _get_vterm_ptr 325C  
                       _check_adc_scan 38E2              __size_of_UART2_Initialize 005E  
