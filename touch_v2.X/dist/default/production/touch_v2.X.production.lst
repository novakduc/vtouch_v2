

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov  5 03:12:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=4,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=4,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=4,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=4,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=4,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=4,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=4,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=4,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   162                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   163                           	psect	text140,global,reloc=4,class=CODE,delta=1
   164                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   165                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   166  0000                     
   167                           ; Version 2.10
   168                           ; Generated 31/07/2019 GMT
   169                           ; 
   170                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   171                           ; All rights reserved.
   172                           ; 
   173                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   174                           ; 
   175                           ; Redistribution and use in source and binary forms, with or without modification, are
   176                           ; permitted provided that the following conditions are met:
   177                           ; 
   178                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   179                           ;        conditions and the following disclaimer.
   180                           ; 
   181                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   182                           ;        of conditions and the following disclaimer in the documentation and/or other
   183                           ;        materials provided with the distribution.
   184                           ; 
   185                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   186                           ;        software without specific prior written permission.
   187                           ; 
   188                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   189                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   190                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   191                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   192                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   193                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   194                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   195                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   196                           ; 
   197                           ; 
   198                           ; Code-generator required, PIC18F57K42 Definitions
   199                           ; 
   200                           ; SFR Addresses
   201  0000                     
   202 ;;_mode	offset	0
   203 ;;_channel	offset=-1 (param)
   204 ;;_s	offset=-2 (param)
   205 ;;_new	offset=-4 (param)
   206 ;;_bn	offset=-5 (param)
   207 ;;_slow	offset=-6 (param)
   208 ;;_cmd	offset=-1 (param)
   209 ;;_cmd	offset=-1 (param)
   210 ;;_data	offset=-1 (param)
   211 ;;__this	offset=-2 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_chan	offset=-1 (param)
   214 ;;_to_what	offset=-2 (param)
   215 ;;_index	offset=-1 (param)
   216 ;;_arg	offset	0
   217 ;;_exp	offset	4
   218 ;;_sign	offset=-1 (param)
   219 ;;_val	offset=-5 (param)
   220 ;;_flipper	offset=-1 (param)
   221 ;;_f	offset	0
   222 ;;_ap	offset	6
   223 ;;_s	offset=-3 (param)
   224 ;;_fmt	offset=-5 (param)
   225 ;;_line	offset=-1 (param)
   226 ;;_vterm	offset=-2 (param)
   227 ;;_numMilliseconds	offset=-2 (param)
   228 ;;_vterm	offset=-1 (param)
   229 ;;_r	offset=-1 (param)
   230 ;;_c	offset=-2 (param)
   231 ;;_strPtr	offset=-4 (param)
   232 ;;_strPtr	offset=-1 (param)
   233 ;;_delay	offset=-4 (param)
   234 ;;_strPtr	offset=-2 (param)
   235 ;;__this	offset=-2 (param)
   236 ;;_clearBuffer	offset=-3 (param)
   237 ;;_s	offset	0
   238 ;;_k	offset	2
   239 ;;_dest	offset=-2 (param)
   240 ;;_c	offset=-4 (param)
   241 ;;_n	offset=-6 (param)
   242 ;;_ap	offset	0
   243 ;;_fmt	offset=-3 (param)
   244 ;;_cfmt	offset	0
   245 ;;_fp	offset=-2 (param)
   246 ;;_fmt	offset=-4 (param)
   247 ;;_ap	offset=-6 (param)
   248 ;;_vfpfcnvrt$4150	offset	0
   249 ;;_vfpfcnvrt$4156	offset	2
   250 ;;_vfpfcnvrt$4149	offset	4
   251 ;;_llu	offset	6
   252 ;;_ll	offset	14
   253 ;;_f	offset	22
   254 ;;_ct	offset	26
   255 ;;_cp	offset	29
   256 ;;_c	offset	31
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_xtoa$4135	offset	0
   261 ;;_xtoa$4134	offset	2
   262 ;;_n	offset	4
   263 ;;_c	offset	12
   264 ;;_i	offset	14
   265 ;;_w	offset	16
   266 ;;_p	offset	18
   267 ;;_fp	offset=-2 (param)
   268 ;;_d	offset=-10 (param)
   269 ;;_x	offset=-11 (param)
   270 ;;_toupper$4787	offset	0
   271 ;;_c	offset=-2 (param)
   272 ;;_c	offset=-2 (param)
   273 ;;_c	offset=-2 (param)
   274 ;;_r	offset	0
   275 ;;_l	offset	2
   276 ;;__l	offset=-2 (param)
   277 ;;__r	offset=-4 (param)
   278 ;;_n	offset=-6 (param)
   279 ;;_nuls	offset	0
   280 ;;_l	offset	7
   281 ;;_p	offset	9
   282 ;;_cp	offset	11
   283 ;;_w	offset	13
   284 ;;_i	offset	15
   285 ;;_fp	offset=-2 (param)
   286 ;;_s	offset=-4 (param)
   287 ;;_efgtoa$4114	offset	0
   288 ;;_efgtoa$4113	offset	2
   289 ;;_efgtoa$4112	offset	4
   290 ;;_efgtoa$4108	offset	6
   291 ;;_efgtoa$4104	offset	8
   292 ;;_efgtoa$4103	offset	10
   293 ;;_u	offset	12
   294 ;;_g	offset	16
   295 ;;_l	offset	20
   296 ;;_h	offset	24
   297 ;;_ou	offset	28
   298 ;;_n	offset	32
   299 ;;_e	offset	34
   300 ;;_i	offset	36
   301 ;;_w	offset	38
   302 ;;_p	offset	40
   303 ;;_sign	offset	42
   304 ;;_d	offset	44
   305 ;;_ne	offset	46
   306 ;;_m	offset	48
   307 ;;_pp	offset	50
   308 ;;_t	offset	52
   309 ;;_mode	offset	54
   310 ;;_nmode	offset	55
   311 ;;_fp	offset=-2 (param)
   312 ;;_f	offset=-6 (param)
   313 ;;_c	offset=-7 (param)
   314 ;;_tolower$4772	offset	0
   315 ;;_c	offset=-2 (param)
   316 ;;_c	offset=-2 (param)
   317 ;;_d	offset	0
   318 ;;_s	offset	2
   319 ;;_dest	offset=-2 (param)
   320 ;;_src	offset=-4 (param)
   321 ;;_u	offset	0
   322 ;;_m	offset	4
   323 ;;_e	offset	8
   324 ;;_x	offset=-4 (param)
   325 ;;_u	offset	0
   326 ;;_e	offset	4
   327 ;;_x	offset=-4 (param)
   328 ;;_exp1	offset	0
   329 ;;_sign1	offset	1
   330 ;;_f1	offset=-4 (param)
   331 ;;_b	offset=-4 (param)
   332 ;;_a	offset=-8 (param)
   333 ;;_grs	offset	0
   334 ;;_bexp	offset	1
   335 ;;_aexp	offset	2
   336 ;;_signs	offset	3
   337 ;;_b	offset=-4 (param)
   338 ;;_a	offset=-8 (param)
   339 ;;_f1	offset=-4 (param)
   340 ;;_prod	offset	0
   341 ;;_grs	offset	4
   342 ;;_temp	offset	8
   343 ;;_bexp	offset	10
   344 ;;_aexp	offset	11
   345 ;;_sign	offset	12
   346 ;;_b	offset=-4 (param)
   347 ;;_a	offset=-8 (param)
   348 ;;_ff1	offset=-4 (param)
   349 ;;_ff2	offset=-8 (param)
   350 ;;_ff1	offset=-4 (param)
   351 ;;_ff2	offset=-8 (param)
   352 ;;_grs	offset	0
   353 ;;_rem	offset	4
   354 ;;_new_exp	offset	8
   355 ;;_aexp	offset	10
   356 ;;_bexp	offset	11
   357 ;;_sign	offset	12
   358 ;;_b	offset=-4 (param)
   359 ;;_a	offset=-8 (param)
   360 ;;_sign	offset	0
   361 ;;_counter	offset	1
   362 ;;_dividend	offset=-2 (param)
   363 ;;_divisor	offset=-4 (param)
   364 ;;_quotient	offset	0
   365 ;;_sign	offset	2
   366 ;;_counter	offset	3
   367 ;;_dividend	offset=-2 (param)
   368 ;;_divisor	offset=-4 (param)
   369 ;;_dtoa$4080	offset	0
   370 ;;_n	offset	2
   371 ;;_i	offset	10
   372 ;;_s	offset	12
   373 ;;_w	offset	14
   374 ;;_p	offset	16
   375 ;;_fp	offset=-2 (param)
   376 ;;_d	offset=-10 (param)
   377 ;;_a	offset=-2 (param)
   378 ;;_sign	offset	0
   379 ;;_counter	offset	1
   380 ;;_dividend	offset=-8 (param)
   381 ;;_divisor	offset=-16 (param)
   382 ;;_quotient	offset	0
   383 ;;_sign	offset	8
   384 ;;_counter	offset	9
   385 ;;_dividend	offset=-8 (param)
   386 ;;_divisor	offset=-16 (param)
   387 ;;_w	offset	0
   388 ;;_fp	offset=-2 (param)
   389 ;;_c	offset=-3 (param)
   390 ;;_w	offset	0
   391 ;;_i	offset	2
   392 ;;_fp	offset=-2 (param)
   393 ;;_buf	offset=-4 (param)
   394 ;;_p	offset=-6 (param)
   395 ;;_a	offset	0
   396 ;;_s	offset=-2 (param)
   397 ;;_i	offset	0
   398 ;;_c	offset	2
   399 ;;_s	offset=-2 (param)
   400 ;;_fp	offset=-4 (param)
   401 ;;_c	offset=-2 (param)
   402 ;;_fp	offset=-4 (param)
   403 ;;_c	offset=-1 (param)
   404 ;;__this	offset=-2 (param)
   405 ;;_c	offset=-3 (param)
   406 ;;_atoi$4633	offset	0
   407 ;;_atoi$4631	offset	2
   408 ;;_atoi$4632	offset	4
   409 ;;_n	offset	5
   410 ;;_neg	offset	7
   411 ;;_s	offset=-2 (param)
   412 ;;_isspace$4671	offset	0
   413 ;;_c	offset=-2 (param)
   414 ;;_c	offset=-2 (param)
   415 ;;_vterm	offset=-1 (param)
   416 ;;_new_response_info	offset=-1 (param)
   417 ;;_new_response_info	offset=-1 (param)
   418 ;;_level	offset=-2 (param)
   419 ;;_dutyValue	offset=-2 (param)
   420 ;;_timer	offset=-1 (param)
   421 ;;_timer	offset=-1 (param)
   422 ;;_count	offset=-3 (param)
   423 ;;_InterruptHandler	offset=-3 (param)
   424 ;;_InterruptHandler	offset=-3 (param)
   425 ;;_InterruptHandler	offset=-3 (param)
   426 ;;_InterruptHandler	offset=-3 (param)
   427 ;;_InterruptHandler	offset=-3 (param)
   428 ;;_InterruptHandler	offset=-3 (param)
   429 ;;_state	offset	0
   430 ;;_InterruptHandler	offset=-3 (param)
   431 ;;_InterruptHandler	offset=-3 (param)
   432 ;;_InterruptHandler	offset=-3 (param)
   433 ;;_InterruptHandler	offset=-3 (param)
   434 ;;_timerVal	offset=-2 (param)
   435 ;;_channel	offset=-1 (param)
   436 ;;_i	offset	0
   437                           
   438                           	psect	idataBANK0
   439  017F26                     __pidataBANK0:
   440                           	opt callstack 0
   441                           
   442                           ;initializer for stoa@F1166
   443  017F26  28                 	db	40
   444  017F27  6E                 	db	110
   445  017F28  75                 	db	117
   446  017F29  6C                 	db	108
   447  017F2A  6C                 	db	108
   448  017F2B  29                 	db	41
   449  017F2C  00                 	db	0
   450                           
   451                           ;initializer for _port_data
   452  017F2D  FF                 	db	255
   453  017F2E  00                 	db	0
   454  017F2F  FF                 	db	255
   455  017F30  00                 	db	0
   456  017F31  FF                 	db	255
   457  017F32  00                 	db	0
   458  017F33  FF                 	db	255
   459  017F34  00                 	db	0
   460  017F35  FF                 	db	255
   461  017F36  00                 	db	0
   462  017F37  FF                 	db	255
   463  017F38  00                 	db	0
   464  017F39  FF                 	db	255
   465  017F3A  00                 	db	0
   466  017F3B  FF                 	db	255
   467  017F3C  00                 	db	0
   468                           
   469                           	psect	idataBANK2
   470  016926                     __pidataBANK2:
   471                           	opt callstack 0
   472                           
   473                           ;initializer for _V
   474  016926  00                 	db	0
   475  016927  00                 	db	0
   476  016928  00                 	db	0
   477  016929  00                 	db	0
   478  01692A  00                 	db	0
   479  01692B  00                 	db	0
   480  01692C  00                 	db	0
   481  01692D  00                 	db	0
   482  01692E  00                 	db	0
   483  01692F  00                 	db	0
   484  016930  00                 	db	0
   485  016931  00                 	db	0
   486  016932  00                 	db	0
   487  016933  00                 	db	0
   488  016934  00                 	db	0
   489  016935  00                 	db	0
   490  016936  00                 	db	0
   491  016937  00                 	db	0
   492  016938  00                 	db	0
   493  016939  00                 	db	0
   494  01693A  00                 	db	0
   495  01693B  00                 	db	0
   496  01693C  00                 	db	0
   497  01693D  00                 	db	0
   498  01693E  00                 	db	0
   499  01693F  00                 	db	0
   500  016940  00                 	db	0
   501  016941  00                 	db	0
   502  016942  00                 	db	0
   503  016943  00                 	db	0
   504  016944  00                 	db	0
   505  016945  00                 	db	0
   506  016946  00                 	db	0
   507  016947  00                 	db	0
   508  016948  00                 	db	0
   509  016949  00                 	db	0
   510  01694A  00                 	db	0
   511  01694B  00                 	db	0
   512  01694C  00                 	db	0
   513  01694D  00                 	db	0
   514  01694E  00                 	db	0
   515  01694F  00                 	db	0
   516  016950  00                 	db	0
   517  016951  00                 	db	0
   518  016952  00                 	db	0
   519  016953  00                 	db	0
   520  016954  00                 	db	0
   521  016955  00                 	db	0
   522  016956  00                 	db	0
   523  016957  00                 	db	0
   524  016958  00                 	db	0
   525  016959  00                 	db	0
   526  01695A  00                 	db	0
   527  01695B  00                 	db	0
   528  01695C  00                 	db	0
   529  01695D  00                 	db	0
   530  01695E  00                 	db	0
   531  01695F  00                 	db	0
   532  016960  00                 	db	0
   533  016961  00                 	db	0
   534  016962  00                 	db	0
   535  016963  00                 	db	0
   536  016964  00                 	db	0
   537  016965  00                 	db	0
   538  016966  00                 	db	0
   539  016967  00                 	db	0
   540  016968  00                 	db	0
   541  016969  00                 	db	0
   542  01696A  00                 	db	0
   543  01696B  00                 	db	0
   544  01696C  00                 	db	0
   545  01696D  00                 	db	0
   546  01696E  00                 	db	0
   547  01696F  00                 	db	0
   548  016970  00                 	db	0
   549  016971  00                 	db	0
   550  016972  00                 	db	0
   551  016973  00                 	db	0
   552  016974  00                 	db	0
   553  016975  00                 	db	0
   554  016976  00                 	db	0
   555  016977  00                 	db	0
   556  016978  00                 	db	0
   557  016979  00                 	db	0
   558  01697A  00                 	db	0
   559  01697B  00                 	db	0
   560  01697C  00                 	db	0
   561  01697D  00                 	db	0
   562  01697E  00                 	db	0
   563  01697F  00                 	db	0
   564  016980  00                 	db	0
   565  016981  00                 	db	0
   566  016982  00                 	db	0
   567  016983  00                 	db	0
   568  016984  00                 	db	0
   569  016985  00                 	db	0
   570  016986  00                 	db	0
   571  016987  00                 	db	0
   572  016988  00                 	db	0
   573  016989  00                 	db	0
   574  01698A  00                 	db	0
   575  01698B  00                 	db	0
   576  01698C  00                 	db	0
   577  01698D  00                 	db	0
   578  01698E  00                 	db	0
   579  01698F  00                 	db	0
   580  016990  00                 	db	0
   581  016991  00                 	db	0
   582  016992  00                 	db	0
   583  016993  00                 	db	0
   584  016994  00                 	db	0
   585  016995  00                 	db	0
   586  016996  00                 	db	0
   587  016997  00                 	db	0
   588  016998  00                 	db	0
   589  016999  00                 	db	0
   590  01699A  00                 	db	0
   591  01699B  00                 	db	0
   592  01699C  00                 	db	0
   593  01699D  00                 	db	0
   594  01699E  00                 	db	0
   595  01699F  00                 	db	0
   596  0169A0  00                 	db	0
   597  0169A1  00                 	db	0
   598  0169A2  00                 	db	0
   599  0169A3  00                 	db	0
   600  0169A4  00                 	db	0
   601  0169A5  00                 	db	0
   602  0169A6  00                 	db	0
   603  0169A7  0000               	dw	0
   604  0169A9  0000               	dw	0
   605  0169AB  0000               	dw	0
   606  0169AD  0000               	dw	0
   607  0169AF  0000               	dw	0
   608  0169B1  0000               	dw	0
   609  0169B3  00                 	db	0
   610  0169B4  00                 	db	0
   611  0169B5  00                 	db	0
   612  0169B6  00                 	db	0
   613  0169B7  00                 	db	0
   614  0169B8  00                 	db	0
   615  0169B9  00                 	db	0
   616  0169BA  00                 	db	0
   617  0169BB  0000               	dw	0
   618  0169BD  0000               	dw	0
   619  0169BF  0000               	dw	0
   620  0169C1  0000               	dw	0
   621  0169C3  0000               	dw	0
   622  0169C5  0000               	dw	0
   623  0169C7  0000               	dw	0
   624  0169C9  0000               	dw	0
   625  0169CB  0000               	dw	0
   626  0169CD  00                 	db	0
   627  0169CE  00                 	db	0
   628  0169CF  00                 	db	0
   629  0169D0  00                 	db	0
   630  0169D1  00                 	db	0
   631  0169D2  00                 	db	0
   632  0169D3  00                 	db	0
   633  0169D4  00                 	db	0
   634  0169D5  00                 	db	0
   635  0169D6  00                 	db	0
   636  0169D7  00                 	db	0
   637  0169D8  00                 	db	0
   638  0169D9  0000               	dw	0
   639  0169DB  0000               	dw	0
   640  0169DD  01                 	db	1
   641  0169DE  00                 	db	0
   642  0169DF  01                 	db	1
   643  0169E0  00                 	db	0
   644  0169E1  2D                 	db	45
   645  0169E2  00                 	db	0
   646                           
   647                           	psect	mediumconst
   648  00FE72                     __pmediumconst:
   649                           	opt callstack 0
   650  00FE72  00                 	db	0
   651  00FE73                     _T:
   652                           	opt callstack 0
   653  00FE73  63                 	db	99
   654  00FE74  6F                 	db	111
   655  00FE75  6D                 	db	109
   656  00FE76  6D                 	db	109
   657  00FE77  61                 	db	97
   658  00FE78  6E                 	db	110
   659  00FE79  64                 	db	100
   660  00FE7A  73                 	db	115
   661  00FE7B  20                 	db	32
   662  00FE7C  31                 	db	49
   663  00FE7D  00                 	db	0
   664  00FE7E  00                 	db	0
   665  00FE7F  00                 	db	0
   666  00FE80  00                 	db	0
   667  00FE81  00                 	db	0
   668  00FE82  00                 	db	0
   669  00FE83  00                 	db	0
   670  00FE84  00                 	db	0
   671  00FE85  64                 	db	100
   672  00FE86  69                 	db	105
   673  00FE87  73                 	db	115
   674  00FE88  70                 	db	112
   675  00FE89  6C                 	db	108
   676  00FE8A  61                 	db	97
   677  00FE8B  79                 	db	121
   678  00FE8C  73                 	db	115
   679  00FE8D  20                 	db	32
   680  00FE8E  31                 	db	49
   681  00FE8F  00                 	db	0
   682  00FE90  00                 	db	0
   683  00FE91  00                 	db	0
   684  00FE92  00                 	db	0
   685  00FE93  00                 	db	0
   686  00FE94  00                 	db	0
   687  00FE95  00                 	db	0
   688  00FE96  00                 	db	0
   689  00FE97  63                 	db	99
   690  00FE98  6F                 	db	111
   691  00FE99  6D                 	db	109
   692  00FE9A  6D                 	db	109
   693  00FE9B  61                 	db	97
   694  00FE9C  6E                 	db	110
   695  00FE9D  64                 	db	100
   696  00FE9E  73                 	db	115
   697  00FE9F  20                 	db	32
   698  00FEA0  32                 	db	50
   699  00FEA1  00                 	db	0
   700  00FEA2  00                 	db	0
   701  00FEA3  00                 	db	0
   702  00FEA4  00                 	db	0
   703  00FEA5  00                 	db	0
   704  00FEA6  00                 	db	0
   705  00FEA7  00                 	db	0
   706  00FEA8  00                 	db	0
   707  00FEA9  64                 	db	100
   708  00FEAA  69                 	db	105
   709  00FEAB  73                 	db	115
   710  00FEAC  70                 	db	112
   711  00FEAD  6C                 	db	108
   712  00FEAE  61                 	db	97
   713  00FEAF  79                 	db	121
   714  00FEB0  73                 	db	115
   715  00FEB1  20                 	db	32
   716  00FEB2  32                 	db	50
   717  00FEB3  00                 	db	0
   718  00FEB4  00                 	db	0
   719  00FEB5  00                 	db	0
   720  00FEB6  00                 	db	0
   721  00FEB7  00                 	db	0
   722  00FEB8  00                 	db	0
   723  00FEB9  00                 	db	0
   724  00FEBA  00                 	db	0
   725  00FEBB  63                 	db	99
   726  00FEBC  6F                 	db	111
   727  00FEBD  6D                 	db	109
   728  00FEBE  6D                 	db	109
   729  00FEBF  61                 	db	97
   730  00FEC0  6E                 	db	110
   731  00FEC1  64                 	db	100
   732  00FEC2  73                 	db	115
   733  00FEC3  20                 	db	32
   734  00FEC4  33                 	db	51
   735  00FEC5  00                 	db	0
   736  00FEC6  00                 	db	0
   737  00FEC7  00                 	db	0
   738  00FEC8  00                 	db	0
   739  00FEC9  00                 	db	0
   740  00FECA  00                 	db	0
   741  00FECB  00                 	db	0
   742  00FECC  00                 	db	0
   743  00FECD  64                 	db	100
   744  00FECE  69                 	db	105
   745  00FECF  73                 	db	115
   746  00FED0  70                 	db	112
   747  00FED1  6C                 	db	108
   748  00FED2  61                 	db	97
   749  00FED3  79                 	db	121
   750  00FED4  73                 	db	115
   751  00FED5  20                 	db	32
   752  00FED6  33                 	db	51
   753  00FED7  00                 	db	0
   754  00FED8  00                 	db	0
   755  00FED9  00                 	db	0
   756  00FEDA  00                 	db	0
   757  00FEDB  00                 	db	0
   758  00FEDC  00                 	db	0
   759  00FEDD  00                 	db	0
   760  00FEDE  00                 	db	0
   761  00FEDF  63                 	db	99
   762  00FEE0  6F                 	db	111
   763  00FEE1  6D                 	db	109
   764  00FEE2  6D                 	db	109
   765  00FEE3  61                 	db	97
   766  00FEE4  6E                 	db	110
   767  00FEE5  64                 	db	100
   768  00FEE6  73                 	db	115
   769  00FEE7  20                 	db	32
   770  00FEE8  34                 	db	52
   771  00FEE9  00                 	db	0
   772  00FEEA  00                 	db	0
   773  00FEEB  00                 	db	0
   774  00FEEC  00                 	db	0
   775  00FEED  00                 	db	0
   776  00FEEE  00                 	db	0
   777  00FEEF  00                 	db	0
   778  00FEF0  00                 	db	0
   779  00FEF1  64                 	db	100
   780  00FEF2  69                 	db	105
   781  00FEF3  73                 	db	115
   782  00FEF4  70                 	db	112
   783  00FEF5  6C                 	db	108
   784  00FEF6  61                 	db	97
   785  00FEF7  79                 	db	121
   786  00FEF8  73                 	db	115
   787  00FEF9  20                 	db	32
   788  00FEFA  34                 	db	52
   789  00FEFB  00                 	db	0
   790  00FEFC  00                 	db	0
   791  00FEFD  00                 	db	0
   792  00FEFE  00                 	db	0
   793  00FEFF  00                 	db	0
   794  00FF00  00                 	db	0
   795  00FF01  00                 	db	0
   796  00FF02  00                 	db	0
   797  00FF03                     __end_of_T:
   798                           	opt callstack 0
   799  0000                     _IVTADL	set	14493
   800  0000                     _IVTADH	set	14494
   801  0000                     _IVTADU	set	14495
   802  0000                     _PIR4bits	set	14756
   803  0000                     _PIE8bits	set	14744
   804  0000                     _PIR8bits	set	14760
   805  0000                     _SCANPR	set	14839
   806  0000                     _DMA2PR	set	14836
   807  0000                     _DMA1PR	set	14835
   808  0000                     _MAINPR	set	14834
   809  0000                     _ISRPR	set	14833
   810  0000                     _PIE2bits	set	14738
   811  0000                     _PIR2bits	set	14754
   812  0000                     _PIE9bits	set	14745
   813  0000                     _PIR9bits	set	14761
   814  0000                     _PIE6bits	set	14742
   815  0000                     _PIE3bits	set	14739
   816  0000                     _PMD7	set	14791
   817  0000                     _PMD6	set	14790
   818  0000                     _PMD5	set	14789
   819  0000                     _PMD4	set	14788
   820  0000                     _PMD3	set	14787
   821  0000                     _PMD2	set	14786
   822  0000                     _PMD1	set	14785
   823  0000                     _PMD0	set	14784
   824  0000                     _OSCTUNE	set	14814
   825  0000                     _OSCFRQ	set	14815
   826  0000                     _OSCEN	set	14813
   827  0000                     _OSCCON3	set	14811
   828  0000                     _OSCCON1	set	14809
   829  0000                     _IPR8bits	set	14728
   830  0000                     _IPR9bits	set	14729
   831  0000                     _IPR5bits	set	14725
   832  0000                     _IPR1bits	set	14721
   833  0000                     _IPR3bits	set	14723
   834  0000                     _IPR6bits	set	14726
   835  0000                     _IPR2bits	set	14722
   836  0000                     _PIE5bits	set	14741
   837  0000                     _PIE1bits	set	14737
   838  0000                     _PIR5bits	set	14757
   839  0000                     _PIR1bits	set	14753
   840  0000                     _PLLR	set	118496
   841  0000                     _SPI1SDIPPS	set	15071
   842  0000                     _U1RXPPS	set	15077
   843  0000                     _RC6PPS	set	14870
   844  0000                     _RC5PPS	set	14869
   845  0000                     _INT1PPS	set	15041
   846  0000                     _RD1PPS	set	14873
   847  0000                     _INT0PPS	set	15040
   848  0000                     _RC3PPS	set	14867
   849  0000                     _RB6PPS	set	14862
   850  0000                     _SPI1SCKPPS	set	15070
   851  0000                     _U2RXPPS	set	15080
   852  0000                     _SLRCONF	set	14995
   853  0000                     _SLRCONE	set	14979
   854  0000                     _SLRCOND	set	14963
   855  0000                     _SLRCONC	set	14947
   856  0000                     _SLRCONB	set	14931
   857  0000                     _SLRCONA	set	14915
   858  0000                     _ODCOND	set	14962
   859  0000                     _ODCONC	set	14946
   860  0000                     _ODCONB	set	14930
   861  0000                     _ODCONA	set	14914
   862  0000                     _ODCONF	set	14994
   863  0000                     _ODCONE	set	14978
   864  0000                     _WPUC	set	14945
   865  0000                     _WPUA	set	14913
   866  0000                     _WPUB	set	14929
   867  0000                     _WPUE	set	14977
   868  0000                     _WPUF	set	14993
   869  0000                     _WPUD	set	14961
   870  0000                     _ANSELA	set	14912
   871  0000                     _ANSELF	set	14992
   872  0000                     _ANSELE	set	14976
   873  0000                     _ANSELB	set	14928
   874  0000                     _ANSELC	set	14944
   875  0000                     _ANSELD	set	14960
   876  0000                     _DMA2SSA	set	15321
   877  0000                     _DMA1SSA	set	15353
   878  0000                     _DMA2DSZ	set	15310
   879  0000                     _DMA2SSZ	set	15319
   880  0000                     _DMA2DSA	set	15312
   881  0000                     _DMA1DSZ	set	15342
   882  0000                     _DMA1SSZ	set	15351
   883  0000                     _DMA1DSA	set	15344
   884  0000                     _DMA1CON0bits	set	15356
   885  0000                     _DMA1CON1bits	set	15357
   886  0000                     _DMA2CON0	set	15324
   887  0000                     _DMA2AIRQ	set	15326
   888  0000                     _DMA2SIRQ	set	15327
   889  0000                     _DMA2CON1	set	15325
   890  0000                     _DMA1CON0	set	15356
   891  0000                     _DMA1AIRQ	set	15358
   892  0000                     _DMA1SIRQ	set	15359
   893  0000                     _DMA1CON1	set	15357
   894  0000                     _CLKRCON	set	15589
   895  0000                     _CLKRCLK	set	15590
   896  0000                     _SPI1INTFbits	set	15642
   897  0000                     _SPI1RXB	set	15632
   898  0000                     _SPI1TXB	set	15633
   899  0000                     _SPI1TCNTL	set	15634
   900  0000                     _SPI1CON0	set	15636
   901  0000                     _SPI1CLK	set	15644
   902  0000                     _SPI1BAUD	set	15641
   903  0000                     _SPI1CON2	set	15638
   904  0000                     _SPI1CON1	set	15637
   905  0000                     _U2RXB	set	15824
   906  0000                     _U2TXB	set	15826
   907  0000                     _U2ERRIE	set	15842
   908  0000                     _U2ERRIR	set	15841
   909  0000                     _U2UIR	set	15840
   910  0000                     _U2FIFO	set	15839
   911  0000                     _U2BRGH	set	15838
   912  0000                     _U2BRGL	set	15837
   913  0000                     _U2CON2	set	15836
   914  0000                     _U2CON1	set	15835
   915  0000                     _U2CON0	set	15834
   916  0000                     _U2P3L	set	15832
   917  0000                     _U2P2L	set	15830
   918  0000                     _U2P1L	set	15828
   919  0000                     _U1RXB	set	15848
   920  0000                     _U1TXB	set	15850
   921  0000                     _U1ERRIE	set	15866
   922  0000                     _U1ERRIR	set	15865
   923  0000                     _U1UIR	set	15864
   924  0000                     _U1FIFO	set	15863
   925  0000                     _U1BRGH	set	15862
   926  0000                     _U1BRGL	set	15861
   927  0000                     _U1CON2	set	15860
   928  0000                     _U1CON1	set	15859
   929  0000                     _U1CON0	set	15858
   930  0000                     _U1P3H	set	15857
   931  0000                     _U1P3L	set	15856
   932  0000                     _U1P2H	set	15855
   933  0000                     _U1P2L	set	15854
   934  0000                     _U1P1H	set	15853
   935  0000                     _U1P1L	set	15852
   936  0000                     _FVRCON	set	16065
   937  0000                     _ADFLTRL	set	16102
   938  0000                     _ADFLTRH	set	16103
   939  0000                     _ADCON0bits	set	16120
   940  0000                     _ADCON0	set	16120
   941  0000                     _ADCLK	set	16127
   942  0000                     _ADACT	set	16126
   943  0000                     _ADREF	set	16125
   944  0000                     _ADSTAT	set	16124
   945  0000                     _ADCON3	set	16123
   946  0000                     _ADCON2	set	16122
   947  0000                     _ADCON1	set	16121
   948  0000                     _ADPREH	set	16119
   949  0000                     _ADPREL	set	16118
   950  0000                     _ADCAP	set	16117
   951  0000                     _ADACQH	set	16116
   952  0000                     _ADACQL	set	16115
   953  0000                     _ADPCH	set	16113
   954  0000                     _ADRPT	set	16108
   955  0000                     _ADACCU	set	16106
   956  0000                     _ADSTPTH	set	16101
   957  0000                     _ADSTPTL	set	16100
   958  0000                     _ADUTHH	set	16097
   959  0000                     _ADUTHL	set	16096
   960  0000                     _ADLTHH	set	16095
   961  0000                     _ADLTHL	set	16094
   962  0000                     _CCPTMRS1bits	set	16223
   963  0000                     _LATCbits	set	16316
   964  0000                     _LATDbits	set	16317
   965  0000                     _PORTBbits	set	16331
   966  0000                     _T2CON	set	16300
   967  0000                     _T2TMR	set	16298
   968  0000                     _T2PR	set	16299
   969  0000                     _T2RST	set	16303
   970  0000                     _T2HLT	set	16301
   971  0000                     _T2CLKCON	set	16302
   972  0000                     _PWM8DCL	set	16224
   973  0000                     _PWM8DCH	set	16225
   974  0000                     _PWM8CON	set	16226
   975  0000                     _LATEbits	set	16318
   976  0000                     _T5CONbits	set	16282
   977  0000                     _T5CON	set	16282
   978  0000                     _TMR5L	set	16280
   979  0000                     _TMR5H	set	16281
   980  0000                     _T5CLK	set	16285
   981  0000                     _T5GATE	set	16284
   982  0000                     _T5GCON	set	16283
   983  0000                     _T6CON	set	16276
   984  0000                     _T6TMR	set	16274
   985  0000                     _T6PR	set	16275
   986  0000                     _T6RST	set	16279
   987  0000                     _T6HLT	set	16277
   988  0000                     _T6CLKCON	set	16278
   989  0000                     _TRISD	set	16325
   990  0000                     _TRISC	set	16324
   991  0000                     _TRISB	set	16323
   992  0000                     _TRISA	set	16322
   993  0000                     _TRISF	set	16327
   994  0000                     _TRISE	set	16326
   995  0000                     _LATC	set	16316
   996  0000                     _LATB	set	16315
   997  0000                     _LATF	set	16319
   998  0000                     _LATA	set	16314
   999  0000                     _LATD	set	16317
  1000  0000                     _LATE	set	16318
  1001  0000                     _IVTLOCKbits	set	16340
  1002  0000                     _IVTLOCK	set	16340
  1003  0000                     _INTCON0bits	set	16338
  1004  0000                     _GIE	set	130711
  1005  00FF03                     
  1006                           ; BSR set to: 57
  1007  00FF03  20                 	db	32
  1008  00FF04  4D                 	db	77	;'M'
  1009  00FF05  65                 	db	101	;'e'
  1010  00FF06  73                 	db	115	;'s'
  1011  00FF07  67                 	db	103	;'g'
  1012  00FF08  20                 	db	32
  1013  00FF09  25                 	db	37
  1014  00FF0A  64                 	db	100	;'d'
  1015  00FF0B  20                 	db	32
  1016  00FF0C  53                 	db	83	;'S'
  1017  00FF0D  74                 	db	116	;'t'
  1018  00FF0E  61                 	db	97	;'a'
  1019  00FF0F  63                 	db	99	;'c'
  1020  00FF10  6B                 	db	107	;'k'
  1021  00FF11  20                 	db	32
  1022  00FF12  25                 	db	37
  1023  00FF13  64                 	db	100	;'d'
  1024  00FF14  20                 	db	32
  1025  00FF15  20                 	db	32
  1026  00FF16  20                 	db	32
  1027  00FF17  20                 	db	32
  1028  00FF18  20                 	db	32
  1029  00FF19  20                 	db	32
  1030  00FF1A  00                 	db	0
  1031  00FF1B                     STR_26:
  1032                           
  1033                           ; BSR set to: 57
  1034  00FF1B  20                 	db	32
  1035  00FF1C  20                 	db	32
  1036  00FF1D  20                 	db	32
  1037  00FF1E  20                 	db	32
  1038  00FF1F  20                 	db	32
  1039  00FF20  20                 	db	32
  1040  00FF21  20                 	db	32
  1041  00FF22  20                 	db	32
  1042  00FF23  20                 	db	32
  1043  00FF24  20                 	db	32
  1044  00FF25  20                 	db	32
  1045  00FF26  20                 	db	32
  1046  00FF27  20                 	db	32
  1047  00FF28  20                 	db	32
  1048  00FF29  20                 	db	32
  1049  00FF2A  20                 	db	32
  1050  00FF2B  20                 	db	32
  1051  00FF2C  20                 	db	32
  1052  00FF2D  00                 	db	0
  1053  00FF2E                     STR_16:
  1054                           
  1055                           ; BSR set to: 57
  1056  00FF2E  48                 	db	72	;'H'
  1057  00FF2F  45                 	db	69	;'E'
  1058  00FF30  4C                 	db	76	;'L'
  1059  00FF31  50                 	db	80	;'P'
  1060  00FF32  20                 	db	32
  1061  00FF33  25                 	db	37
  1062  00FF34  73                 	db	115	;'s'
  1063  00FF35  20                 	db	32
  1064  00FF36  20                 	db	32
  1065  00FF37  20                 	db	32
  1066  00FF38  20                 	db	32
  1067  00FF39  20                 	db	32
  1068  00FF3A  20                 	db	32
  1069  00FF3B  20                 	db	32
  1070  00FF3C  20                 	db	32
  1071  00FF3D  20                 	db	32
  1072  00FF3E  20                 	db	32
  1073  00FF3F  20                 	db	32
  1074  00FF40  00                 	db	0
  1075  00FF41                     
  1076                           ; BSR set to: 57
  1077  00FF41  44                 	db	68	;'D'
  1078  00FF42  49                 	db	73	;'I'
  1079  00FF43  53                 	db	83	;'S'
  1080  00FF44  50                 	db	80	;'P'
  1081  00FF45  4C                 	db	76	;'L'
  1082  00FF46  41                 	db	65	;'A'
  1083  00FF47  59                 	db	89	;'Y'
  1084  00FF48  20                 	db	32
  1085  00FF49  25                 	db	37
  1086  00FF4A  73                 	db	115	;'s'
  1087  00FF4B  20                 	db	32
  1088  00FF4C  20                 	db	32
  1089  00FF4D  20                 	db	32
  1090  00FF4E  20                 	db	32
  1091  00FF4F  20                 	db	32
  1092  00FF50  20                 	db	32
  1093  00FF51  20                 	db	32
  1094  00FF52  20                 	db	32
  1095  00FF53  00                 	db	0
  1096  00FF54                     STR_8:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF54  20                 	db	32
  1100  00FF55  56                 	db	86	;'V'
  1101  00FF56  54                 	db	84	;'T'
  1102  00FF57  45                 	db	69	;'E'
  1103  00FF58  52                 	db	82	;'R'
  1104  00FF59  4D                 	db	77	;'M'
  1105  00FF5A  20                 	db	32
  1106  00FF5B  23                 	db	35
  1107  00FF5C  32                 	db	50	;'2'
  1108  00FF5D  20                 	db	32
  1109  00FF5E  20                 	db	32
  1110  00FF5F  20                 	db	32
  1111  00FF60  20                 	db	32
  1112  00FF61  20                 	db	32
  1113  00FF62  20                 	db	32
  1114  00FF63  20                 	db	32
  1115  00FF64  00                 	db	0
  1116  00FF65                     STR_4:
  1117                           
  1118                           ; BSR set to: 57
  1119  00FF65  20                 	db	32
  1120  00FF66  4E                 	db	78	;'N'
  1121  00FF67  53                 	db	83	;'S'
  1122  00FF68  41                 	db	65	;'A'
  1123  00FF69  53                 	db	83	;'S'
  1124  00FF6A  50                 	db	80	;'P'
  1125  00FF6B  4F                 	db	79	;'O'
  1126  00FF6C  4F                 	db	79	;'O'
  1127  00FF6D  4B                 	db	75	;'K'
  1128  00FF6E  20                 	db	32
  1129  00FF6F  20                 	db	32
  1130  00FF70  20                 	db	32
  1131  00FF71  20                 	db	32
  1132  00FF72  20                 	db	32
  1133  00FF73  20                 	db	32
  1134  00FF74  20                 	db	32
  1135  00FF75  00                 	db	0
  1136  00FF76                     STR_1:
  1137                           
  1138                           ; BSR set to: 57
  1139  00FF76  20                 	db	32
  1140  00FF77  4D                 	db	77	;'M'
  1141  00FF78  42                 	db	66	;'B'
  1142  00FF79  4D                 	db	77	;'M'
  1143  00FF7A  43                 	db	67	;'C'
  1144  00FF7B  20                 	db	32
  1145  00FF7C  53                 	db	83	;'S'
  1146  00FF7D  4F                 	db	79	;'O'
  1147  00FF7E  4C                 	db	76	;'L'
  1148  00FF7F  41                 	db	65	;'A'
  1149  00FF80  52                 	db	82	;'R'
  1150  00FF81  4D                 	db	77	;'M'
  1151  00FF82  4F                 	db	79	;'O'
  1152  00FF83  4E                 	db	78	;'N'
  1153  00FF84  20                 	db	32
  1154  00FF85  20                 	db	32
  1155  00FF86  00                 	db	0
  1156  00FF87                     STR_5:
  1157                           
  1158                           ; BSR set to: 57
  1159  00FF87  20                 	db	32
  1160  00FF88  53                 	db	83	;'S'
  1161  00FF89  45                 	db	69	;'E'
  1162  00FF8A  51                 	db	81	;'Q'
  1163  00FF8B  55                 	db	85	;'U'
  1164  00FF8C  45                 	db	69	;'E'
  1165  00FF8D  4E                 	db	78	;'N'
  1166  00FF8E  43                 	db	67	;'C'
  1167  00FF8F  45                 	db	69	;'E'
  1168  00FF90  20                 	db	32
  1169  00FF91  54                 	db	84	;'T'
  1170  00FF92  45                 	db	69	;'E'
  1171  00FF93  53                 	db	83	;'S'
  1172  00FF94  54                 	db	84	;'T'
  1173  00FF95  20                 	db	32
  1174  00FF96  20                 	db	32
  1175  00FF97  00                 	db	0
  1176  00FF98                     STR_20:
  1177                           
  1178                           ; BSR set to: 57
  1179  00FF98  76                 	db	118	;'v'
  1180  00FF99  74                 	db	116	;'t'
  1181  00FF9A  65                 	db	101	;'e'
  1182  00FF9B  72                 	db	114	;'r'
  1183  00FF9C  6D                 	db	109	;'m'
  1184  00FF9D  20                 	db	32
  1185  00FF9E  25                 	db	37
  1186  00FF9F  78                 	db	120	;'x'
  1187  00FFA0  3A                 	db	58	;':'
  1188  00FFA1  25                 	db	37
  1189  00FFA2  78                 	db	120	;'x'
  1190  00FFA3  20                 	db	32
  1191  00FFA4  20                 	db	32
  1192  00FFA5  20                 	db	32
  1193  00FFA6  00                 	db	0
  1194  00FFA7                     STR_2:
  1195                           
  1196                           ; BSR set to: 57
  1197  00FFA7  20                 	db	32
  1198  00FFA8  56                 	db	86	;'V'
  1199  00FFA9  65                 	db	101	;'e'
  1200  00FFAA  72                 	db	114	;'r'
  1201  00FFAB  73                 	db	115	;'s'
  1202  00FFAC  69                 	db	105	;'i'
  1203  00FFAD  6F                 	db	111	;'o'
  1204  00FFAE  6E                 	db	110	;'n'
  1205  00FFAF  20                 	db	32
  1206  00FFB0  25                 	db	37
  1207  00FFB1  73                 	db	115	;'s'
  1208  00FFB2  20                 	db	32
  1209  00FFB3  20                 	db	32
  1210  00FFB4  20                 	db	32
  1211  00FFB5  00                 	db	0
  1212  00FFB6                     STR_9:
  1213                           
  1214                           ; BSR set to: 57
  1215  00FFB6  25                 	db	37
  1216  00FFB7  64                 	db	100	;'d'
  1217  00FFB8  20                 	db	32
  1218  00FFB9  25                 	db	37
  1219  00FFBA  32                 	db	50	;'2'
  1220  00FFBB  2E                 	db	46
  1221  00FFBC  32                 	db	50	;'2'
  1222  00FFBD  66                 	db	102	;'f'
  1223  00FFBE  20                 	db	32
  1224  00FFBF  20                 	db	32
  1225  00FFC0  20                 	db	32
  1226  00FFC1  23                 	db	35
  1227  00FFC2  00                 	db	0
  1228  00FFC3                     STR_14:
  1229                           
  1230                           ; BSR set to: 57
  1231  00FFC3  4E                 	db	78	;'N'
  1232  00FFC4  6F                 	db	111	;'o'
  1233  00FFC5  76                 	db	118	;'v'
  1234  00FFC6  20                 	db	32
  1235  00FFC7  20                 	db	32
  1236  00FFC8  34                 	db	52	;'4'
  1237  00FFC9  20                 	db	32
  1238  00FFCA  32                 	db	50	;'2'
  1239  00FFCB  30                 	db	48	;'0'
  1240  00FFCC  31                 	db	49	;'1'
  1241  00FFCD  39                 	db	57	;'9'
  1242  00FFCE  00                 	db	0
  1243  00FFCF                     STR_18:
  1244                           
  1245                           ; BSR set to: 57
  1246  00FFCF  25                 	db	37
  1247  00FFD0  73                 	db	115	;'s'
  1248  00FFD1  20                 	db	32
  1249  00FFD2  20                 	db	32
  1250  00FFD3  20                 	db	32
  1251  00FFD4  20                 	db	32
  1252  00FFD5  20                 	db	32
  1253  00FFD6  20                 	db	32
  1254  00FFD7  20                 	db	32
  1255  00FFD8  00                 	db	0
  1256  00FFD9                     STR_15:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FFD9  31                 	db	49	;'1'
  1260  00FFDA  39                 	db	57	;'9'
  1261  00FFDB  3A                 	db	58	;':'
  1262  00FFDC  31                 	db	49	;'1'
  1263  00FFDD  32                 	db	50	;'2'
  1264  00FFDE  3A                 	db	58	;':'
  1265  00FFDF  34                 	db	52	;'4'
  1266  00FFE0  37                 	db	55	;'7'
  1267  00FFE1  00                 	db	0
  1268  00FFE2                     STR_32:
  1269                           
  1270                           ; BSR set to: 57
  1271  00FFE2  49                 	db	73	;'I'
  1272  00FFE3  4E                 	db	78	;'N'
  1273  00FFE4  46                 	db	70	;'F'
  1274  00FFE5  00                 	db	0
  1275  00FFE6                     STR_36:
  1276                           
  1277                           ; BSR set to: 57
  1278  00FFE6  4E                 	db	78	;'N'
  1279  00FFE7  41                 	db	65	;'A'
  1280  00FFE8  4E                 	db	78	;'N'
  1281  00FFE9  00                 	db	0
  1282  00FFEA                     STR_33:
  1283                           
  1284                           ; BSR set to: 57
  1285  00FFEA  69                 	db	105	;'i'
  1286  00FFEB  6E                 	db	110	;'n'
  1287  00FFEC  66                 	db	102	;'f'
  1288  00FFED  00                 	db	0
  1289  00FFEE                     STR_37:
  1290                           
  1291                           ; BSR set to: 57
  1292  00FFEE  6E                 	db	110	;'n'
  1293  00FFEF  61                 	db	97	;'a'
  1294  00FFF0  6E                 	db	110	;'n'
  1295  00FFF1  00                 	db	0
  1296  00FFF2                     STR_3:
  1297                           
  1298                           ; BSR set to: 57
  1299  00FFF2  30                 	db	48	;'0'
  1300  00FFF3  2E                 	db	46
  1301  00FFF4  37                 	db	55	;'7'
  1302  00FFF5  00                 	db	0
  1303  00FFF6                     STR_40:
  1304                           
  1305                           ; BSR set to: 57
  1306  00FFF6  6C                 	db	108	;'l'
  1307  00FFF7  66                 	db	102	;'f'
  1308  00FFF8  00                 	db	0
  1309  00FFF9                     STR_12:
  1310                           
  1311                           ; BSR set to: 57
  1312  00FFF9  25                 	db	37
  1313  00FFFA  63                 	db	99	;'c'
  1314  00FFFB  00                 	db	0
  1315  00FFFC                     STR_11:
  1316                           
  1317                           ; BSR set to: 57
  1318  00FFFC  25                 	db	37
  1319  00FFFD  73                 	db	115	;'s'
  1320  00FFFE  00                 	db	0
  1321  0000                     
  1322                           ; #config settings
  1323  00FFFF  00                 	db	0	; dummy byte at the end
  1324  0000                     
  1325                           	psect	cinit
  1326  01679C                     __pcinit:
  1327                           	opt callstack 0
  1328  01679C                     start_initialization:
  1329                           	opt callstack 0
  1330  01679C                     __initialization:
  1331                           	opt callstack 0
  1332                           
  1333                           ; Initialize objects allocated to BANK2 (189 bytes)
  1334                           ; load TBLPTR registers with __pidataBANK2
  1335  01679C  0E26               	movlw	low __pidataBANK2
  1336  01679E  6EF6               	movwf	tblptrl,c
  1337  0167A0  0E69               	movlw	high __pidataBANK2
  1338  0167A2  6EF7               	movwf	tblptrh,c
  1339  0167A4  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1340  0167A6  6EF8               	movwf	tblptru,c
  1341  0167A8  EE00  F200         	lfsr	0,__pdataBANK2
  1342  0167AC  EE20 F0BD          	lfsr	2,189
  1343  0167B0                     copy_data0:
  1344  0167B0  0009               	tblrd		*+
  1345  0167B2  006F FFD7 FFEE     	movff	tablat,postinc0
  1346  0167B8  50DD               	movf	postdec2,w,c
  1347  0167BA  50D9               	movf	fsr2l,w,c
  1348  0167BC  E1F9               	bnz	copy_data0
  1349                           
  1350                           ; Initialize objects allocated to BANK0 (23 bytes)
  1351                           ; load TBLPTR registers with __pidataBANK0
  1352  0167BE  0E26               	movlw	low __pidataBANK0
  1353  0167C0  6EF6               	movwf	tblptrl,c
  1354  0167C2  0E7F               	movlw	high __pidataBANK0
  1355  0167C4  6EF7               	movwf	tblptrh,c
  1356  0167C6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1357  0167C8  6EF8               	movwf	tblptru,c
  1358  0167CA  EE00  F0C5         	lfsr	0,__pdataBANK0
  1359  0167CE  EE20 F017          	lfsr	2,23
  1360  0167D2                     copy_data1:
  1361  0167D2  0009               	tblrd		*+
  1362  0167D4  006F FFD7 FFEE     	movff	tablat,postinc0
  1363  0167DA  50DD               	movf	postdec2,w,c
  1364  0167DC  50D9               	movf	fsr2l,w,c
  1365  0167DE  E1F9               	bnz	copy_data1
  1366                           
  1367                           ; Clear objects allocated to BANK6 (255 bytes)
  1368  0167E0  EE01  F200         	lfsr	0,__pbssBANK6
  1369  0167E4  EE20 F0FF          	lfsr	2,255
  1370  0167E8                     clear_0:
  1371  0167E8  6AEE               	clrf	postinc0,c
  1372  0167EA  50DD               	movf	postdec2,w,c
  1373  0167EC  50D9               	movf	fsr2l,w,c
  1374  0167EE  E1FC               	bnz	clear_0
  1375  0167F0  50DA               	movf	fsr2h,w,c
  1376  0167F2  E1FA               	bnz	clear_0
  1377                           
  1378                           ; Clear objects allocated to BANK5 (255 bytes)
  1379  0167F4  EE01  F100         	lfsr	0,__pbssBANK5
  1380  0167F8  EE20 F0FF          	lfsr	2,255
  1381  0167FC                     clear_1:
  1382  0167FC  6AEE               	clrf	postinc0,c
  1383  0167FE  50DD               	movf	postdec2,w,c
  1384  016800  50D9               	movf	fsr2l,w,c
  1385  016802  E1FC               	bnz	clear_1
  1386  016804  50DA               	movf	fsr2h,w,c
  1387  016806  E1FA               	bnz	clear_1
  1388                           
  1389                           ; Clear objects allocated to BANK4 (218 bytes)
  1390  016808  EE01  F000         	lfsr	0,__pbssBANK4
  1391  01680C  0EDA               	movlw	218
  1392  01680E                     clear_2:
  1393  01680E  6AEE               	clrf	postinc0,c
  1394  016810  06E8               	decf	wreg,f,c
  1395  016812  E1FD               	bnz	clear_2
  1396                           
  1397                           ; Clear objects allocated to BANK3 (198 bytes)
  1398  016814  EE00  F300         	lfsr	0,__pbssBANK3
  1399  016818  0EC6               	movlw	198
  1400  01681A                     clear_3:
  1401  01681A  6AEE               	clrf	postinc0,c
  1402  01681C  06E8               	decf	wreg,f,c
  1403  01681E  E1FD               	bnz	clear_3
  1404                           
  1405                           ; Clear objects allocated to BANK2 (64 bytes)
  1406  016820  EE00  F2BD         	lfsr	0,__pbssBANK2
  1407  016824  0E40               	movlw	64
  1408  016826                     clear_4:
  1409  016826  6AEE               	clrf	postinc0,c
  1410  016828  06E8               	decf	wreg,f,c
  1411  01682A  E1FD               	bnz	clear_4
  1412                           
  1413                           ; Clear objects allocated to BANK1 (244 bytes)
  1414  01682C  EE00  F100         	lfsr	0,__pbssBANK1
  1415  016830  0EF4               	movlw	244
  1416  016832                     clear_5:
  1417  016832  6AEE               	clrf	postinc0,c
  1418  016834  06E8               	decf	wreg,f,c
  1419  016836  E1FD               	bnz	clear_5
  1420                           
  1421                           ; Clear objects allocated to BANK0 (101 bytes)
  1422  016838  EE00  F060         	lfsr	0,__pbssBANK0
  1423  01683C  0E65               	movlw	101
  1424  01683E                     clear_6:
  1425  01683E  6AEE               	clrf	postinc0,c
  1426  016840  06E8               	decf	wreg,f,c
  1427  016842  E1FD               	bnz	clear_6
  1428                           
  1429                           ; Clear objects allocated to COMRAM (52 bytes)
  1430  016844  EE00  F001         	lfsr	0,__pbssCOMRAM
  1431  016848  0E34               	movlw	52
  1432  01684A                     clear_7:
  1433  01684A  6AEE               	clrf	postinc0,c
  1434  01684C  06E8               	decf	wreg,f,c
  1435  01684E  E1FD               	bnz	clear_7
  1436                           
  1437                           ;
  1438                           ; Setup IVTBASE
  1439                           ;
  1440  016850  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1441  016852  6ED5               	movwf	213,c
  1442  016854  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1443  016856  6ED6               	movwf	214,c
  1444  016858  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1445  01685A  6ED7               	movwf	215,c
  1446  01685C                     end_of_initialization:
  1447                           	opt callstack 0
  1448  01685C                     __end_of__initialization:
  1449                           	opt callstack 0
  1450  01685C  0100               	movlb	0
  1451  01685E  EFB1  F09B         	goto	_main	;jump to C main() function
  1452                           
  1453                           	psect	bssCOMRAM
  1454  000001                     __pbssCOMRAM:
  1455                           	opt callstack 0
  1456  000001                     _TMR6_InterruptHandler:
  1457                           	opt callstack 0
  1458  000001                     	ds	3
  1459  000004                     _ADCC_ADTI_InterruptHandler:
  1460                           	opt callstack 0
  1461  000004                     	ds	3
  1462  000007                     _ADCC_ADI_InterruptHandler:
  1463                           	opt callstack 0
  1464  000007                     	ds	3
  1465  00000A                     _UART1_TxInterruptHandler:
  1466                           	opt callstack 0
  1467  00000A                     	ds	3
  1468  00000D                     _UART1_RxInterruptHandler:
  1469                           	opt callstack 0
  1470  00000D                     	ds	3
  1471  000010                     _UART2_TxInterruptHandler:
  1472                           	opt callstack 0
  1473  000010                     	ds	3
  1474  000013                     _UART2_RxInterruptHandler:
  1475                           	opt callstack 0
  1476  000013                     	ds	3
  1477  000016                     _INT1_InterruptHandler:
  1478                           	opt callstack 0
  1479  000016                     	ds	3
  1480  000019                     _INT0_InterruptHandler:
  1481                           	opt callstack 0
  1482  000019                     	ds	3
  1483  00001C                     _nout:
  1484                           	opt callstack 0
  1485  00001C                     	ds	2
  1486  00001E                     _width:
  1487                           	opt callstack 0
  1488  00001E                     	ds	2
  1489  000020                     _prec:
  1490                           	opt callstack 0
  1491  000020                     	ds	2
  1492  000022                     _flags:
  1493                           	opt callstack 0
  1494  000022                     	ds	2
  1495  000024                     TMR5_ISR@CountCallBack:
  1496                           	opt callstack 0
  1497  000024                     	ds	2
  1498  000026                     _timer5ReloadVal:
  1499                           	opt callstack 0
  1500  000026                     	ds	2
  1501  000028                     _mode_sw:
  1502                           	opt callstack 0
  1503  000028                     	ds	1
  1504  000029                     _uart2RxCount:
  1505                           	opt callstack 0
  1506  000029                     	ds	1
  1507  00002A                     _uart2RxTail:
  1508                           	opt callstack 0
  1509  00002A                     	ds	1
  1510  00002B                     _uart2RxHead:
  1511                           	opt callstack 0
  1512  00002B                     	ds	1
  1513  00002C                     _uart2TxBufferRemaining:
  1514                           	opt callstack 0
  1515  00002C                     	ds	1
  1516  00002D                     _uart2TxTail:
  1517                           	opt callstack 0
  1518  00002D                     	ds	1
  1519  00002E                     _uart2TxHead:
  1520                           	opt callstack 0
  1521  00002E                     	ds	1
  1522  00002F                     _uart1RxCount:
  1523                           	opt callstack 0
  1524  00002F                     	ds	1
  1525  000030                     _uart1RxTail:
  1526                           	opt callstack 0
  1527  000030                     	ds	1
  1528  000031                     _uart1RxHead:
  1529                           	opt callstack 0
  1530  000031                     	ds	1
  1531  000032                     _uart1TxBufferRemaining:
  1532                           	opt callstack 0
  1533  000032                     	ds	1
  1534  000033                     _uart1TxTail:
  1535                           	opt callstack 0
  1536  000033                     	ds	1
  1537  000034                     _uart1TxHead:
  1538                           	opt callstack 0
  1539  000034                     	ds	1
  1540                           
  1541                           	psect	bssBANK0
  1542  000060                     __pbssBANK0:
  1543                           	opt callstack 0
  1544  000060                     _R:
  1545                           	opt callstack 0
  1546  000060                     	ds	34
  1547  000082                     _tickCount:
  1548                           	opt callstack 0
  1549  000082                     	ds	24
  1550  00009A                     _spi_link:
  1551                           	opt callstack 0
  1552  00009A                     	ds	12
  1553  0000A6                     floorf@F524:
  1554                           	opt callstack 0
  1555  0000A6                     	ds	4
  1556  0000AA                     ___fpclassifyf@F463:
  1557                           	opt callstack 0
  1558  0000AA                     	ds	4
  1559  0000AE                     lp_filter@lp_x:
  1560                           	opt callstack 0
  1561  0000AE                     	ds	4
  1562  0000B2                     lp_filter@lp_speed:
  1563                           	opt callstack 0
  1564  0000B2                     	ds	4
  1565  0000B6                     wdtdelay@dcount:
  1566                           	opt callstack 0
  1567  0000B6                     	ds	4
  1568  0000BA                     _TMR5_InterruptHandler:
  1569                           	opt callstack 0
  1570  0000BA                     	ds	3
  1571  0000BD                     _seed:
  1572                           	opt callstack 0
  1573  0000BD                     	ds	8
  1574                           
  1575                           	psect	dataBANK0
  1576  0000C5                     __pdataBANK0:
  1577                           	opt callstack 0
  1578  0000C5                     stoa@F1166:
  1579                           	opt callstack 0
  1580  0000C5                     	ds	7
  1581  0000CC                     _port_data:
  1582                           	opt callstack 0
  1583  0000CC                     	ds	16
  1584                           
  1585                           	psect	bssBANK1
  1586  000100                     __pbssBANK1:
  1587                           	opt callstack 0
  1588  000100                     _C:
  1589                           	opt callstack 0
  1590  000100                     	ds	104
  1591  000168                     lp_filter@smooth:
  1592                           	opt callstack 0
  1593  000168                     	ds	60
  1594  0001A4                     _dbuf:
  1595                           	opt callstack 0
  1596  0001A4                     	ds	80
  1597                           
  1598                           	psect	bssBANK2
  1599  0002BD                     __pbssBANK2:
  1600                           	opt callstack 0
  1601  0002BD                     _uart1TxBuffer:
  1602                           	opt callstack 0
  1603  0002BD                     	ds	64
  1604                           
  1605                           	psect	dataBANK2
  1606  000200                     __pdataBANK2:
  1607                           	opt callstack 0
  1608  000200                     _V:
  1609                           	opt callstack 0
  1610  000200                     	ds	189
  1611                           
  1612                           	psect	bssBANK3
  1613  000300                     __pbssBANK3:
  1614                           	opt callstack 0
  1615  000300                     _uart2TxBuffer:
  1616                           	opt callstack 0
  1617  000300                     	ds	64
  1618  000340                     _ring_buf2:
  1619                           	opt callstack 0
  1620  000340                     	ds	67
  1621  000383                     _ring_buf1:
  1622                           	opt callstack 0
  1623  000383                     	ds	67
  1624                           
  1625                           	psect	bssBANK4
  1626  000400                     __pbssBANK4:
  1627                           	opt callstack 0
  1628  000400                     _D:
  1629                           	opt callstack 0
  1630  000400                     	ds	218
  1631                           
  1632                           	psect	bssBANK5
  1633  000500                     __pbssBANK5:
  1634                           	opt callstack 0
  1635  000500                     _uart1RxBuffer:
  1636                           	opt callstack 0
  1637  000500                     	ds	255
  1638                           
  1639                           	psect	bssBANK6
  1640  000600                     __pbssBANK6:
  1641                           	opt callstack 0
  1642  000600                     _uart2RxBuffer:
  1643                           	opt callstack 0
  1644  000600                     	ds	255
  1645                           
  1646                           	psect	cstackBANK0
  1647  0000DC                     __pcstackBANK0:
  1648                           	opt callstack 0
  1649  0000DC                     ??_TMR6_ISR:
  1650                           
  1651                           ; 1 bytes @ 0x0
  1652  0000DC                     	ds	1
  1653  0000DD                     ??_TMR5_ISR:
  1654                           
  1655                           ; 1 bytes @ 0x1
  1656  0000DD                     	ds	4
  1657                           
  1658                           	psect	cstackCOMRAM
  1659  000055                     __pcstackCOMRAM:
  1660                           	opt callstack 0
  1661  000055                     ??_ADCC_ISR:
  1662  000055                     
  1663                           ; 1 bytes @ 0x0
  1664  000055                     	ds	1
  1665  000056                     ??_ADCC_ThresholdISR:
  1666                           
  1667                           ; 1 bytes @ 0x1
  1668  000056                     	ds	5
  1669                           
  1670 ;;
  1671 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1672 ;;
  1673 ;; *************** function _main *****************
  1674 ;; Defined at:
  1675 ;;		line 149 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  mode            1  [STACK] enum E17005
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1  [STACK] void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels required when called:   19
  1695 ;; This function calls:
  1696 ;;		_SYSTEM_Initialize
  1697 ;;		_StartTimer
  1698 ;;		_TimerDone
  1699 ;;		_WaitMs
  1700 ;;		_check_adc_scan
  1701 ;;		_check_help
  1702 ;;		_clear_adc_scan
  1703 ;;		_conv_raw_result
  1704 ;;		_eaDogM_WriteCommand
  1705 ;;		_get_raw_result
  1706 ;;		_get_vterm_ptr
  1707 ;;		_init_display
  1708 ;;		_lp_filter
  1709 ;;		_mode_lamp_dim
  1710 ;;		_set_display_info
  1711 ;;		_set_vterm
  1712 ;;		_sprintf
  1713 ;;		_srand
  1714 ;;		_start_adc_scan
  1715 ;;		_update_lcd
  1716 ;; This function is called by:
  1717 ;;		Startup code after reset
  1718 ;; This function uses a reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text0
  1722  013762                     __ptext0:
  1723                           	opt callstack 0
  1724  013762                     _main:
  1725                           	opt callstack 0
  1726                           
  1727                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1728  013762  52E6               	movf	postinc1,f,c
  1729                           
  1730                           ;main.c: 151:  UI_STATES mode;;main.c: 154:  SYSTEM_Initialize();
  1731                           
  1732                           ;incstack = 0
  1733  013764  EC08  F0BB         	call	_SYSTEM_Initialize	;wreg free
  1734                           
  1735                           ; BSR set to: 60
  1736                           ;main.c: 157:  (INTCON0bits.GIEH = 1);
  1737  013768  8ED2               	bsf	210,7,c	;volatile
  1738                           
  1739                           ; BSR set to: 60
  1740                           ;main.c: 160:  (INTCON0bits.GIEL = 1);
  1741  01376A  8CD2               	bsf	210,6,c	;volatile
  1742                           
  1743                           ; BSR set to: 60
  1744                           ;main.c: 162:  V.ui_state = UI_STATE_INIT;
  1745  01376C  0102               	movlb	2	; () banked
  1746  01376E  6B00               	clrf	_V& (0+255),b	;volatile
  1747                           
  1748                           ; BSR set to: 2
  1749                           ;main.c: 167:  WaitMs(300);
  1750  013770  0E2C               	movlw	44
  1751  013772  6EE6               	movwf	postinc1,c
  1752  013774  0E01               	movlw	1
  1753  013776  6EE6               	movwf	postinc1,c
  1754  013778  EC2A  F0BC         	call	_WaitMs	;wreg free
  1755                           
  1756                           ;main.c: 168:  if (PORTBbits.RB0) {
  1757  01377C  A0CB               	btfss	203,0,c	;volatile
  1758  01377E  D004               	goto	l9899
  1759                           
  1760                           ;main.c: 169:   mode = UI_STATE_HOST;
  1761                           ;stkvar	_mode @ sp[(-1)+0]
  1762  013780  0EFF               	movlw	-1
  1763  013782  6AE3               	clrf	plusw1,c
  1764  013784  2AE3               	incf	plusw1,f,c
  1765                           
  1766                           ;main.c: 170:  } else {
  1767  013786  D004               	goto	l9901
  1768  013788                     l9899:
  1769                           
  1770                           ;main.c: 171:   mode = UI_STATE_LOG;
  1771                           ;stkvar	_mode @ sp[(-1)+0]
  1772  013788  0EFF               	movlw	-1
  1773  01378A  6AE3               	clrf	plusw1,c
  1774  01378C  80E3               	bsf	plusw1,0,c
  1775  01378E  82E3               	bsf	plusw1,1,c	;indir
  1776  013790                     l9901:
  1777                           
  1778                           ;main.c: 174:  if (mode == UI_STATE_HOST) {
  1779                           ;stkvar	_mode @ sp[(-1)+0]
  1780  013790  0EFF               	movlw	-1
  1781  013792  04E3               	decf	plusw1,w,c
  1782  013794  A4D8               	btfss	status,2,c
  1783  013796  D007               	goto	l1242
  1784                           
  1785                           ;main.c: 175:   do { LATDbits.LATD0 = 1; } while(0);
  1786  013798  80BD               	bsf	189,0,c	;volatile
  1787                           
  1788                           ;main.c: 176:   V.mode_pwm = 70;
  1789  01379A  0E00               	movlw	0
  1790  01379C  0102               	movlb	2	; () banked
  1791  01379E  6FA0               	movwf	(_V+160)& (0+255),b	;volatile
  1792  0137A0  0E46               	movlw	70
  1793  0137A2  6F9F               	movwf	(_V+159)& (0+255),b	;volatile
  1794                           
  1795                           ;main.c: 177:  } else {
  1796  0137A4  D004               	goto	l9905
  1797  0137A6                     l1242:
  1798  0137A6  90BD               	bcf	189,0,c	;volatile
  1799                           
  1800                           ;main.c: 179:   V.mode_pwm = 0;
  1801  0137A8  0102               	movlb	2	; () banked
  1802  0137AA  6B9F               	clrf	(_V+159)& (0+255),b	;volatile
  1803  0137AC  6BA0               	clrf	(_V+160)& (0+255),b	;volatile
  1804  0137AE                     l9905:
  1805                           
  1806                           ; BSR set to: 2
  1807                           ;main.c: 181:  mode_lamp_dim(V.mode_pwm);
  1808  0137AE  0060  FA7F  FFE6   	movff	_V+159,postinc1
  1809  0137B4  0060  FA83  FFE6   	movff	_V+160,postinc1
  1810  0137BA  EC7B  F0BF         	call	_mode_lamp_dim	;wreg free
  1811  0137BE  D0CB               	goto	l9947
  1812  0137C0                     l9907:
  1813                           
  1814                           ; BSR set to: 2
  1815                           ;main.c: 192:    init_display();
  1816  0137C0  ECEF  F0B2         	call	_init_display	;wreg free
  1817                           
  1818                           ; BSR set to: 61
  1819                           ;main.c: 193:    eaDogM_WriteCommand(0b00001100);
  1820  0137C4  0E0C               	movlw	12
  1821  0137C6  6EE6               	movwf	postinc1,c
  1822  0137C8  ECDB  F0BF         	call	_eaDogM_WriteCommand	;wreg free
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 195:    V.ui_state = mode;
  1826                           ;stkvar	_mode @ sp[(-1)+0]
  1827  0137CC  0EFF               	movlw	-1
  1828  0137CE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;main.c: 196:    srand(1957);
  1832  0137D4  0EA5               	movlw	165
  1833  0137D6  6EE6               	movwf	postinc1,c
  1834  0137D8  0E07               	movlw	7
  1835  0137DA  6EE6               	movwf	postinc1,c
  1836  0137DC  EC60  F0BC         	call	_srand	;wreg free
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 197:    set_vterm(0);
  1840  0137E0  0E00               	movlw	0
  1841  0137E2  6EE6               	movwf	postinc1,c
  1842  0137E4  EC46  F0BF         	call	_set_vterm	;wreg free
  1843                           
  1844                           ; BSR set to: 4
  1845                           ;main.c: 198:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1846  0137E8  0E76               	movlw	low STR_1
  1847  0137EA  6EE6               	movwf	postinc1,c
  1848  0137EC  0EFF               	movlw	high STR_1
  1849  0137EE  6EE6               	movwf	postinc1,c
  1850  0137F0  0E00               	movlw	0
  1851  0137F2  6EE6               	movwf	postinc1,c
  1852  0137F4  0E00               	movlw	0
  1853  0137F6  6EE6               	movwf	postinc1,c
  1854  0137F8  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1855  0137FC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1856  013802  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1857  013808  0E04               	movlw	4
  1858  01380A  6EE6               	movwf	postinc1,c
  1859  01380C  EC6A  F0B2         	call	_sprintf	;wreg free
  1860                           
  1861                           ;main.c: 199:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.7");
  1862  013810  0EF2               	movlw	low STR_3
  1863  013812  6EE6               	movwf	postinc1,c
  1864  013814  0EFF               	movlw	high STR_3
  1865  013816  6EE6               	movwf	postinc1,c
  1866  013818  0EA7               	movlw	low STR_2
  1867  01381A  6EE6               	movwf	postinc1,c
  1868  01381C  0EFF               	movlw	high STR_2
  1869  01381E  6EE6               	movwf	postinc1,c
  1870  013820  0E00               	movlw	0
  1871  013822  6EE6               	movwf	postinc1,c
  1872  013824  0E01               	movlw	1
  1873  013826  6EE6               	movwf	postinc1,c
  1874  013828  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1875  01382C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1876  013832  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1877  013838  0E06               	movlw	6
  1878  01383A  6EE6               	movwf	postinc1,c
  1879  01383C  EC6A  F0B2         	call	_sprintf	;wreg free
  1880                           
  1881                           ;main.c: 200:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1882  013840  0E65               	movlw	low STR_4
  1883  013842  6EE6               	movwf	postinc1,c
  1884  013844  0EFF               	movlw	high STR_4
  1885  013846  6EE6               	movwf	postinc1,c
  1886  013848  0E00               	movlw	0
  1887  01384A  6EE6               	movwf	postinc1,c
  1888  01384C  0E02               	movlw	2
  1889  01384E  6EE6               	movwf	postinc1,c
  1890  013850  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1891  013854  0060  F0D7  FFE6   	movff	btemp,postinc1
  1892  01385A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1893  013860  0E04               	movlw	4
  1894  013862  6EE6               	movwf	postinc1,c
  1895  013864  EC6A  F0B2         	call	_sprintf	;wreg free
  1896                           
  1897                           ;main.c: 201:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1898  013868  0E87               	movlw	low STR_5
  1899  01386A  6EE6               	movwf	postinc1,c
  1900  01386C  0EFF               	movlw	high STR_5
  1901  01386E  6EE6               	movwf	postinc1,c
  1902  013870  0E02               	movlw	2
  1903  013872  6EE6               	movwf	postinc1,c
  1904  013874  0E00               	movlw	0
  1905  013876  6EE6               	movwf	postinc1,c
  1906  013878  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1907  01387C  0060  F0D7  FFE6   	movff	btemp,postinc1
  1908  013882  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1909  013888  0E04               	movlw	4
  1910  01388A  6EE6               	movwf	postinc1,c
  1911  01388C  EC6A  F0B2         	call	_sprintf	;wreg free
  1912                           
  1913                           ;main.c: 202:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.7");
  1914  013890  0EF2               	movlw	low STR_3
  1915  013892  6EE6               	movwf	postinc1,c
  1916  013894  0EFF               	movlw	high STR_3
  1917  013896  6EE6               	movwf	postinc1,c
  1918  013898  0EA7               	movlw	low STR_2
  1919  01389A  6EE6               	movwf	postinc1,c
  1920  01389C  0EFF               	movlw	high STR_2
  1921  01389E  6EE6               	movwf	postinc1,c
  1922  0138A0  0E02               	movlw	2
  1923  0138A2  6EE6               	movwf	postinc1,c
  1924  0138A4  0E01               	movlw	1
  1925  0138A6  6EE6               	movwf	postinc1,c
  1926  0138A8  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1927  0138AC  0060  F0D7  FFE6   	movff	btemp,postinc1
  1928  0138B2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1929  0138B8  0E06               	movlw	6
  1930  0138BA  6EE6               	movwf	postinc1,c
  1931  0138BC  EC6A  F0B2         	call	_sprintf	;wreg free
  1932                           
  1933                           ;main.c: 203:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  1934  0138C0  0E54               	movlw	low STR_8
  1935  0138C2  6EE6               	movwf	postinc1,c
  1936  0138C4  0EFF               	movlw	high STR_8
  1937  0138C6  6EE6               	movwf	postinc1,c
  1938  0138C8  0E02               	movlw	2
  1939  0138CA  6EE6               	movwf	postinc1,c
  1940  0138CC  0E02               	movlw	2
  1941  0138CE  6EE6               	movwf	postinc1,c
  1942  0138D0  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  1943  0138D4  0060  F0D7  FFE6   	movff	btemp,postinc1
  1944  0138DA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1945  0138E0  0E04               	movlw	4
  1946  0138E2  6EE6               	movwf	postinc1,c
  1947  0138E4  EC6A  F0B2         	call	_sprintf	;wreg free
  1948                           
  1949                           ;main.c: 204:    update_lcd(0);
  1950  0138E8  0E00               	movlw	0
  1951  0138EA  6EE6               	movwf	postinc1,c
  1952  0138EC  ECE3  F0B1         	call	_update_lcd	;wreg free
  1953                           
  1954                           ;main.c: 205:    WaitMs(3000);
  1955  0138F0  0EB8               	movlw	184
  1956  0138F2  6EE6               	movwf	postinc1,c
  1957  0138F4  0E0B               	movlw	11
  1958  0138F6  6EE6               	movwf	postinc1,c
  1959  0138F8  EC2A  F0BC         	call	_WaitMs	;wreg free
  1960                           
  1961                           ;main.c: 206:    StartTimer(TMR_DISPLAY, 100);
  1962  0138FC  0E64               	movlw	100
  1963  0138FE  6EE6               	movwf	postinc1,c
  1964  013900  0E00               	movlw	0
  1965  013902  6EE6               	movwf	postinc1,c
  1966  013904  0E0A               	movlw	10
  1967  013906  6EE6               	movwf	postinc1,c
  1968  013908  ECD4  F0BB         	call	_StartTimer	;wreg free
  1969                           
  1970                           ;main.c: 207:    StartTimer(TMR_ADC, 200);
  1971  01390C  0EC8               	movlw	200
  1972  01390E  6EE6               	movwf	postinc1,c
  1973  013910  0E00               	movlw	0
  1974  013912  6EE6               	movwf	postinc1,c
  1975  013914  0E01               	movlw	1
  1976  013916  6EE6               	movwf	postinc1,c
  1977  013918  ECD4  F0BB         	call	_StartTimer	;wreg free
  1978                           
  1979                           ;main.c: 208:    StartTimer(TMR_INFO, 3000);
  1980  01391C  0EB8               	movlw	184
  1981  01391E  6EE6               	movwf	postinc1,c
  1982  013920  0E0B               	movlw	11
  1983  013922  6EE6               	movwf	postinc1,c
  1984  013924  0E07               	movlw	7
  1985  013926  6EE6               	movwf	postinc1,c
  1986  013928  ECD4  F0BB         	call	_StartTimer	;wreg free
  1987                           
  1988                           ;main.c: 209:    StartTimer(TMR_FLIPPER, 1500);
  1989  01392C  0EDC               	movlw	220
  1990  01392E  6EE6               	movwf	postinc1,c
  1991  013930  0E05               	movlw	5
  1992  013932  6EE6               	movwf	postinc1,c
  1993  013934  0E0B               	movlw	11
  1994  013936  6EE6               	movwf	postinc1,c
  1995  013938  ECD4  F0BB         	call	_StartTimer	;wreg free
  1996                           
  1997                           ;main.c: 210:    StartTimer(TMR_HELPDIS, 3000);
  1998  01393C  0EB8               	movlw	184
  1999  01393E  6EE6               	movwf	postinc1,c
  2000  013940  0E0B               	movlw	11
  2001  013942  6EE6               	movwf	postinc1,c
  2002  013944  0E09               	movlw	9
  2003  013946  6EE6               	movwf	postinc1,c
  2004  013948  ECD4  F0BB         	call	_StartTimer	;wreg free
  2005                           
  2006                           ;main.c: 212:    start_adc_scan();
  2007  01394C  ECFF  F0B8         	call	_start_adc_scan	;wreg free
  2008                           
  2009                           ;main.c: 214:    break;
  2010  013950  D016               	goto	l9949
  2011  013952                     l1251:
  2012                           
  2013                           ; BSR set to: 2
  2014                           ;main.c: 221:    V.ui_state = UI_STATE_INIT;
  2015  013952  6B00               	clrf	_V& (0+255),b	;volatile
  2016                           
  2017                           ;main.c: 222:    break;
  2018  013954  D014               	goto	l9949
  2019  013956                     l9947:
  2020  013956  0102               	movlb	2	; () banked
  2021  013958  5100               	movf	_V& (0+255),w,b	;volatile
  2022  01395A  6E3F               	movwf	(btemp+10)^0,c
  2023  01395C  6A40               	clrf	(btemp+11)^0,c
  2024                           
  2025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 1, Range of values is 0 to 0
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ;	Chosen strategy is simple_byte
  2032  01395E  5040               	movf	(btemp+11)^0,w,c
  2033  013960  0A00               	xorlw	0	; case 0
  2034  013962  A4D8               	btfss	status,2,c
  2035  013964  D7F6               	goto	l1251
  2036                           
  2037                           ; BSR set to: 2
  2038                           ; Switch size 1, requested type "simple"
  2039                           ; Number of cases is 4, Range of values is 0 to 4
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; simple_byte           13     7 (average)
  2043                           ;	Chosen strategy is simple_byte
  2044  013966  503F               	movf	(btemp+10)^0,w,c
  2045  013968  0A00               	xorlw	0	; case 0
  2046  01396A  B4D8               	btfsc	status,2,c
  2047  01396C  D729               	goto	l9907
  2048  01396E  0A01               	xorlw	1	; case 1
  2049  013970  B4D8               	btfsc	status,2,c
  2050  013972  D005               	goto	l9949
  2051  013974  0A02               	xorlw	2	; case 3
  2052  013976  B4D8               	btfsc	status,2,c
  2053  013978  D002               	goto	l9949
  2054  01397A  0A07               	xorlw	7	; case 4
  2055  01397C  D7EA               	goto	l1251
  2056  01397E                     l9949:
  2057                           
  2058                           ;main.c: 225:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2059  01397E  0E01               	movlw	1
  2060  013980  6EE6               	movwf	postinc1,c
  2061  013982  EC87  F0BE         	call	_TimerDone	;wreg free
  2062  013986  5035               	movf	btemp^0,w,c
  2063  013988  B4D8               	btfsc	status,2,c
  2064  01398A  D059               	goto	l9961
  2065  01398C  EC1F  F0C0         	call	_check_adc_scan	;wreg free
  2066  013990  5035               	movf	btemp^0,w,c
  2067  013992  B4D8               	btfsc	status,2,c
  2068  013994  D054               	goto	l9961
  2069                           
  2070                           ;main.c: 229:    C.calc[C_BATT] = lp_filter(conv_raw_result(C_BATT, C_CONV), C_BATT, 1);
  2071  013996  0E01               	movlw	1
  2072  013998  6EE6               	movwf	postinc1,c
  2073  01399A  0E00               	movlw	0
  2074  01399C  6EE6               	movwf	postinc1,c
  2075  01399E  0E00               	movlw	0
  2076  0139A0  6EE6               	movwf	postinc1,c
  2077  0139A2  0E00               	movlw	0
  2078  0139A4  6EE6               	movwf	postinc1,c
  2079  0139A6  ECF4  F0AA         	call	_conv_raw_result	;wreg free
  2080  0139AA  0060  F0D7  FFE6   	movff	btemp,postinc1
  2081  0139B0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2082  0139B6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2083  0139BC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2084  0139C2  EC96  F0A6         	call	_lp_filter	;wreg free
  2085  0139C6  0060  F0D4  F100   	movff	btemp,_C
  2086  0139CC  0060  F0D8  F101   	movff	btemp+1,_C+1
  2087  0139D2  0060  F0DC  F102   	movff	btemp+2,_C+2
  2088  0139D8  0060  F0E0  F103   	movff	btemp+3,_C+3
  2089                           
  2090                           ;main.c: 230:    C.calc[V_CC] = lp_filter(conv_raw_result(V_CC, V_CONV), V_CC, 0);
  2091  0139DE  0E00               	movlw	0
  2092  0139E0  6EE6               	movwf	postinc1,c
  2093  0139E2  0E02               	movlw	2
  2094  0139E4  6EE6               	movwf	postinc1,c
  2095  0139E6  0E01               	movlw	1
  2096  0139E8  6EE6               	movwf	postinc1,c
  2097  0139EA  0E02               	movlw	2
  2098  0139EC  6EE6               	movwf	postinc1,c
  2099  0139EE  ECF4  F0AA         	call	_conv_raw_result	;wreg free
  2100  0139F2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2101  0139F8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2102  0139FE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2103  013A04  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2104  013A0A  EC96  F0A6         	call	_lp_filter	;wreg free
  2105  013A0E  0060  F0D4  F108   	movff	btemp,_C+8
  2106  013A14  0060  F0D8  F109   	movff	btemp+1,_C+9
  2107  013A1A  0060  F0DC  F10A   	movff	btemp+2,_C+10
  2108  013A20  0060  F0E0  F10B   	movff	btemp+3,_C+11
  2109                           
  2110                           ;main.c: 234:    clear_adc_scan();
  2111  013A26  EC27  F0C0         	call	_clear_adc_scan	;wreg free
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;main.c: 235:    start_adc_scan();
  2115  013A2A  ECFF  F0B8         	call	_start_adc_scan	;wreg free
  2116                           
  2117                           ;main.c: 236:    StartTimer(TMR_ADC, 200);
  2118  013A2E  0EC8               	movlw	200
  2119  013A30  6EE6               	movwf	postinc1,c
  2120  013A32  0E00               	movlw	0
  2121  013A34  6EE6               	movwf	postinc1,c
  2122  013A36  0E01               	movlw	1
  2123  013A38  6EE6               	movwf	postinc1,c
  2124  013A3A  ECD4  F0BB         	call	_StartTimer	;wreg free
  2125  013A3E                     l9961:
  2126                           
  2127                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2128                           
  2129                           ;main.c: 239:   if (V.ticks) {
  2130  013A3E  0E0A               	movlw	10
  2131  013A40  6EE6               	movwf	postinc1,c
  2132  013A42  EC87  F0BE         	call	_TimerDone	;wreg free
  2133  013A46  5035               	movf	btemp^0,w,c
  2134  013A48  B4D8               	btfsc	status,2,c
  2135  013A4A  D06B               	goto	l9977
  2136                           
  2137                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2138  013A4C  0E09               	movlw	9
  2139  013A4E  6EE6               	movwf	postinc1,c
  2140  013A50  EC87  F0BE         	call	_TimerDone	;wreg free
  2141  013A54  5035               	movf	btemp^0,w,c
  2142  013A56  B4D8               	btfsc	status,2,c
  2143  013A58  D004               	goto	l9969
  2144                           
  2145                           ;main.c: 245:     set_display_info(DIS_STR);
  2146  013A5A  0E00               	movlw	0
  2147  013A5C  6EE6               	movwf	postinc1,c
  2148  013A5E  ECFC  F0BE         	call	_set_display_info	;wreg free
  2149  013A62                     l9969:
  2150                           
  2151                           ;main.c: 247:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2152  013A62  0060  F403  FFE6   	movff	_C,postinc1
  2153  013A68  0060  F407  FFE6   	movff	_C+1,postinc1
  2154  013A6E  0060  F40B  FFE6   	movff	_C+2,postinc1
  2155  013A74  0060  F40F  FFE6   	movff	_C+3,postinc1
  2156  013A7A  0E00               	movlw	0
  2157  013A7C  6EE6               	movwf	postinc1,c
  2158  013A7E  ECED  F0BE         	call	_get_raw_result	;wreg free
  2159  013A82  0060  F0D7  FFE6   	movff	btemp,postinc1
  2160  013A88  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2161  013A8E  0EB6               	movlw	low STR_9
  2162  013A90  6EE6               	movwf	postinc1,c
  2163  013A92  0EFF               	movlw	high STR_9
  2164  013A94  6EE6               	movwf	postinc1,c
  2165  013A96  0E00               	movlw	0
  2166  013A98  6EE6               	movwf	postinc1,c
  2167  013A9A  0E01               	movlw	1
  2168  013A9C  6EE6               	movwf	postinc1,c
  2169  013A9E  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  2170  013AA2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2171  013AA8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2172  013AAE  0E0A               	movlw	10
  2173  013AB0  6EE6               	movwf	postinc1,c
  2174  013AB2  EC6A  F0B2         	call	_sprintf	;wreg free
  2175                           
  2176                           ;main.c: 248:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f   #", get_raw_result(V_CC), C.ca
      +                          lc[V_CC]);
  2177  013AB6  0060  F423  FFE6   	movff	_C+8,postinc1
  2178  013ABC  0060  F427  FFE6   	movff	_C+9,postinc1
  2179  013AC2  0060  F42B  FFE6   	movff	_C+10,postinc1
  2180  013AC8  0060  F42F  FFE6   	movff	_C+11,postinc1
  2181  013ACE  0E02               	movlw	2
  2182  013AD0  6EE6               	movwf	postinc1,c
  2183  013AD2  ECED  F0BE         	call	_get_raw_result	;wreg free
  2184  013AD6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2185  013ADC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2186  013AE2  0EB6               	movlw	low STR_9
  2187  013AE4  6EE6               	movwf	postinc1,c
  2188  013AE6  0EFF               	movlw	high STR_9
  2189  013AE8  6EE6               	movwf	postinc1,c
  2190  013AEA  0E00               	movlw	0
  2191  013AEC  6EE6               	movwf	postinc1,c
  2192  013AEE  0E02               	movlw	2
  2193  013AF0  6EE6               	movwf	postinc1,c
  2194  013AF2  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  2195  013AF6  0060  F0D7  FFE6   	movff	btemp,postinc1
  2196  013AFC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2197  013B02  0E0A               	movlw	10
  2198  013B04  6EE6               	movwf	postinc1,c
  2199  013B06  EC6A  F0B2         	call	_sprintf	;wreg free
  2200                           
  2201                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 100);
  2202  013B0A  0E64               	movlw	100
  2203  013B0C  6EE6               	movwf	postinc1,c
  2204  013B0E  0E00               	movlw	0
  2205  013B10  6EE6               	movwf	postinc1,c
  2206  013B12  0E0A               	movlw	10
  2207  013B14  6EE6               	movwf	postinc1,c
  2208  013B16  ECD4  F0BB         	call	_StartTimer	;wreg free
  2209                           
  2210                           ;main.c: 250:    update_lcd(0);
  2211  013B1A  0E00               	movlw	0
  2212  013B1C  6EE6               	movwf	postinc1,c
  2213  013B1E  ECE3  F0B1         	call	_update_lcd	;wreg free
  2214  013B22                     l9977:
  2215                           
  2216                           ;main.c: 256:   check_help(V.flipper);
  2217  013B22  0102               	movlb	2	; () banked
  2218  013B24  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  2219  013B26  6EE6               	movwf	postinc1,c
  2220  013B28  ECE9  F0A8         	call	_check_help	;wreg free
  2221                           
  2222                           ;main.c: 261:   if (V.set_sequ) {
  2223  013B2C  0102               	movlb	2	; () banked
  2224  013B2E  A7A7               	btfss	(_V+167)& (0+255),3,b	;volatile
  2225  013B30  D712               	goto	l9947
  2226                           
  2227                           ; BSR set to: 2
  2228                           ;main.c: 262:    if (TimerDone(TMR_INFO)) {
  2229  013B32  0E07               	movlw	7
  2230  013B34  6EE6               	movwf	postinc1,c
  2231  013B36  EC87  F0BE         	call	_TimerDone	;wreg free
  2232  013B3A  5035               	movf	btemp^0,w,c
  2233  013B3C  B4D8               	btfsc	status,2,c
  2234  013B3E  D00B               	goto	l9989
  2235                           
  2236                           ;main.c: 263:     V.set_sequ = 0;
  2237  013B40  0102               	movlb	2	; () banked
  2238  013B42  97A7               	bcf	(_V+167)& (0+255),3,b	;volatile
  2239                           
  2240                           ; BSR set to: 2
  2241                           ;main.c: 264:     set_vterm(0);
  2242  013B44  0E00               	movlw	0
  2243  013B46  6EE6               	movwf	postinc1,c
  2244  013B48  EC46  F0BF         	call	_set_vterm	;wreg free
  2245                           
  2246                           ; BSR set to: 4
  2247                           ;main.c: 265:     update_lcd(0);
  2248  013B4C  0E00               	movlw	0
  2249  013B4E  6EE6               	movwf	postinc1,c
  2250  013B50  ECE3  F0B1         	call	_update_lcd	;wreg free
  2251                           
  2252                           ;main.c: 266:    } else {
  2253  013B54  D700               	goto	l9947
  2254  013B56                     l9989:
  2255                           
  2256                           ;main.c: 267:     set_vterm(2);
  2257  013B56  0E02               	movlw	2
  2258  013B58  6EE6               	movwf	postinc1,c
  2259  013B5A  EC46  F0BF         	call	_set_vterm	;wreg free
  2260                           
  2261                           ; BSR set to: 4
  2262                           ;main.c: 268:     update_lcd(2);
  2263  013B5E  0E02               	movlw	2
  2264  013B60  6EE6               	movwf	postinc1,c
  2265  013B62  ECE3  F0B1         	call	_update_lcd	;wreg free
  2266  013B66  D6F7               	goto	l9947
  2267  013B68                     __end_of_main:
  2268                           	opt callstack 0
  2269                           
  2270 ;; *************** function _start_adc_scan *****************
  2271 ;; Defined at:
  2272 ;;		line 29 in file "daq.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1  [STACK] _Bool 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/4
  2283 ;;		On exit  : 1/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    7
  2293 ;; This function calls:
  2294 ;;		_ADCC_SetADIInterruptHandler
  2295 ;;		_ADCC_SetADTIInterruptHandler
  2296 ;;		_ADCC_StartConversion
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text1
  2303  0171FE                     __ptext1:
  2304                           	opt callstack 0
  2305  0171FE                     _start_adc_scan:
  2306                           	opt callstack 23
  2307                           
  2308                           ;daq.c: 31:  if (R.done)
  2309                           
  2310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2311                           ;incstack = 0
  2312  0171FE  0100               	movlb	0	; () banked
  2313  017200  5181               	movf	(_R+33)& (0+255),w,b	;volatile
  2314  017202  A4D8               	btfss	status,2,c
  2315  017204  0012               	return	
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;daq.c: 34:  R.scan_index = 0;
  2319  017206  6B7E               	clrf	(_R+30)& (0+255),b	;volatile
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;daq.c: 35:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2323  017208  013A               	movlb	58	; () banked
  2324  01720A  5140               	movf	64,w,b	;volatile
  2325  01720C  006E F940  F035    	movff	14928,btemp	;volatile
  2326  017212  6A36               	clrf	(btemp+1)^0,c
  2327  017214  0060  F0D4  F036   	movff	btemp,btemp+1
  2328  01721A  6A35               	clrf	btemp^0,c
  2329  01721C  2635               	addwf	btemp^0,f,c
  2330  01721E  0E00               	movlw	0
  2331  017220  2236               	addwfc	(btemp+1)^0,f,c
  2332  017222  0E77               	movlw	119
  2333  017224  1435               	andwf	btemp^0,w,c
  2334  017226  0100               	movlb	0	; () banked
  2335  017228  6F7F               	movwf	(_R+31)& (0+255),b	;volatile
  2336  01722A  0E3C               	movlw	60
  2337  01722C  1436               	andwf	(btemp+1)^0,w,c
  2338  01722E  6F80               	movwf	(_R+32)& (0+255),b	;volatile
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;daq.c: 36:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2342  017230  0E16               	movlw	low _adc_int_handler
  2343  017232  6EE6               	movwf	postinc1,c
  2344  017234  0E7E               	movlw	high _adc_int_handler
  2345  017236  6EE6               	movwf	postinc1,c
  2346  017238  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2347  01723A  6EE6               	movwf	postinc1,c
  2348  01723C  EC24  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2349                           
  2350                           ;daq.c: 37:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2351  017240  0E16               	movlw	low _adc_int_t_handler
  2352  017242  6EE6               	movwf	postinc1,c
  2353  017244  0E6D               	movlw	high _adc_int_t_handler
  2354  017246  6EE6               	movwf	postinc1,c
  2355  017248  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2356  01724A  6EE6               	movwf	postinc1,c
  2357  01724C  EC10  F0BE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2358                           
  2359                           ;daq.c: 38:  ADCC_StartConversion(R.scan_index & 0xf);
  2360  017250  0100               	movlb	0	; () banked
  2361  017252  517E               	movf	(_R+30)& (0+255),w,b	;volatile
  2362  017254  0B0F               	andlw	15
  2363  017256  6EE6               	movwf	postinc1,c
  2364  017258  ECCA  F0BF         	call	_ADCC_StartConversion	;wreg free
  2365                           
  2366                           ; BSR set to: 62
  2367  01725C  82BE               	bsf	190,1,c	;volatile
  2368                           
  2369                           ; BSR set to: 62
  2370  01725E  84BE               	bsf	190,2,c	;volatile
  2371                           
  2372                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2373  017260  0012               	return		;funcret
  2374  017262                     __end_of_start_adc_scan:
  2375                           	opt callstack 0
  2376                           
  2377 ;; *************** function _ADCC_StartConversion *****************
  2378 ;; Defined at:
  2379 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  channel         1  [STACK] enum E16136
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1  [STACK] void 
  2386 ;; Registers used:
  2387 ;;		fsr1l, fsr1h
  2388 ;; Tracked objects:
  2389 ;;		On entry : 3F/0
  2390 ;;		On exit  : 3F/3E
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    6
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_start_adc_scan
  2404 ;;		_adc_int_t_handler
  2405 ;; This function uses a reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text2
  2409  017F94                     __ptext2:
  2410                           	opt callstack 0
  2411  017F94                     _ADCC_StartConversion:
  2412                           	opt callstack 6
  2413                           
  2414                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2415                           ;stkvar	_channel @ sp[(0)+-1]
  2416                           
  2417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2418                           ;incstack = 0
  2419  017F94  0EFF               	movlw	-1
  2420  017F96  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2421                           
  2422                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2423  017F9C  013E               	movlb	62	; () banked
  2424  017F9E  8FF8               	bsf	248,7,b	;volatile
  2425                           
  2426                           ; BSR set to: 62
  2427                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2428  017FA0  81F8               	bsf	248,0,b	;volatile
  2429                           
  2430                           ; BSR set to: 62
  2431                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2432  017FA2  52E5               	movf	postdec1,f,c
  2433  017FA4  0012               	return		;funcret
  2434  017FA6                     __end_of_ADCC_StartConversion:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function _srand *****************
  2438 ;; Defined at:
  2439 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  s               2  [STACK] unsigned int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1  [STACK] void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2448 ;; Tracked objects:
  2449 ;;		On entry : 3F/0
  2450 ;;		On exit  : 3F/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    6
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text3
  2468  0178C0                     __ptext3:
  2469                           	opt callstack 0
  2470  0178C0                     _srand:
  2471                           	opt callstack 24
  2472                           
  2473                           ;stkvar	_s @ sp[(0)+-2]
  2474                           
  2475                           ; BSR set to: 62
  2476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2477                           ;incstack = 0
  2478  0178C0  0EFE               	movlw	-2
  2479  0178C2  50E3               	movf	plusw1,w,c
  2480  0178C4  0FFF               	addlw	255
  2481  0178C6  6E3F               	movwf	(btemp+10)^0,c
  2482  0178C8  0EFF               	movlw	-1
  2483  0178CA  006F FF8C  F040    	movff	plusw1,btemp+11
  2484  0178D0  0EFF               	movlw	255
  2485  0178D2  2240               	addwfc	(btemp+11)^0,f,c
  2486  0178D4  0060  F0FC  F0BD   	movff	btemp+10,_seed
  2487  0178DA  0060  F100  F0BE   	movff	btemp+11,_seed+1
  2488  0178E0  0100               	movlb	0	; () banked
  2489  0178E2  6BBF               	clrf	(_seed+2)& (0+255),b
  2490  0178E4  6BC0               	clrf	(_seed+3)& (0+255),b
  2491  0178E6  6BC1               	clrf	(_seed+4)& (0+255),b
  2492  0178E8  6BC2               	clrf	(_seed+5)& (0+255),b
  2493  0178EA  6BC3               	clrf	(_seed+6)& (0+255),b
  2494  0178EC  6BC4               	clrf	(_seed+7)& (0+255),b
  2495                           
  2496                           ; BSR set to: 0
  2497                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2498  0178EE  52E5               	movf	postdec1,f,c
  2499  0178F0  52E5               	movf	postdec1,f,c
  2500  0178F2  0012               	return		;funcret
  2501  0178F4                     __end_of_srand:
  2502                           	opt callstack 0
  2503                           
  2504 ;; *************** function _lp_filter *****************
  2505 ;; Defined at:
  2506 ;;		line 3 in file "mbmc.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  new             4  [STACK] float 
  2509 ;;  bn              1  [STACK] unsigned char 
  2510 ;;  slow            1  [STACK] char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  4  [STACK] float 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/4
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    8
  2529 ;; This function calls:
  2530 ;;		___fladd
  2531 ;;		___fldiv
  2532 ;;		___flmul
  2533 ;;		___flsub
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text4
  2540  014D2C                     __ptext4:
  2541                           	opt callstack 0
  2542  014D2C                     _lp_filter:
  2543                           	opt callstack 22
  2544                           
  2545                           ;mbmc.c: 3: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 4: {;mbmc.c: 5: 
      +                           static float smooth[0xF], lp_speed, lp_x;;mbmc.c: 7:  if (bn > 0xF)
  2546                           ;stkvar	_bn @ sp[(0)+-5]
  2547                           
  2548                           ; BSR set to: 0
  2549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2550                           ;incstack = 0
  2551  014D2C  0EFB               	movlw	-5
  2552  014D2E  006F FF8C  F035    	movff	plusw1,btemp
  2553  014D34  0E0F               	movlw	15
  2554  014D36  6435               	cpfsgt	btemp^0,c
  2555  014D38  D011               	goto	l8545
  2556                           
  2557                           ;mbmc.c: 8:   return new;
  2558                           ;stkvar	_new @ sp[(0)+-4]
  2559  014D3A  0EFC               	movlw	-4
  2560  014D3C  006F FF8C  F035    	movff	plusw1,btemp
  2561  014D42  0EFD               	movlw	-3
  2562  014D44  006F FF8C  F036    	movff	plusw1,btemp+1
  2563  014D4A  0EFE               	movlw	-2
  2564  014D4C  006F FF8C  F037    	movff	plusw1,btemp+2
  2565  014D52  0EFF               	movlw	-1
  2566  014D54  006F FF8C  F038    	movff	plusw1,btemp+3
  2567  014D5A  D116               	goto	l1679
  2568  014D5C                     l8545:
  2569                           
  2570                           ;mbmc.c: 9:  if (slow) {
  2571                           ;stkvar	_slow @ sp[(0)+-6]
  2572  014D5C  0EFA               	movlw	-6
  2573  014D5E  50E3               	movf	plusw1,w,c
  2574  014D60  B4D8               	btfsc	status,2,c
  2575  014D62  D009               	goto	l8549
  2576                           
  2577                           ;mbmc.c: 10:   lp_speed = 0.066;
  2578  014D64  0E02               	movlw	2
  2579  014D66  0100               	movlb	0	; () banked
  2580  014D68  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2581  014D6A  0E2B               	movlw	43
  2582  014D6C  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2583  014D6E  0E87               	movlw	135
  2584  014D70  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2585  014D72  0E3D               	movlw	61
  2586  014D74  D008               	goto	L1
  2587  014D76                     l8549:
  2588                           
  2589                           ;mbmc.c: 12:   lp_speed = 0.250;
  2590  014D76  0E00               	movlw	0
  2591  014D78  0100               	movlb	0	; () banked
  2592  014D7A  6FB2               	movwf	lp_filter@lp_speed& (0+255),b
  2593  014D7C  0E00               	movlw	0
  2594  014D7E  6FB3               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  2595  014D80  0E80               	movlw	128
  2596  014D82  6FB4               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  2597  014D84  0E3E               	movlw	62
  2598  014D86                     L1:
  2599  014D86  6FB5               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;mbmc.c: 14:  lp_x = ((smooth[bn]*1000.0) + (((new * 1000.0)-(smooth[bn]*1000.0)) * lp_s
      +                          peed)) / 1000.0;
  2603  014D88  0E00               	movlw	0
  2604  014D8A  6EE6               	movwf	postinc1,c
  2605  014D8C  0E00               	movlw	0
  2606  014D8E  6EE6               	movwf	postinc1,c
  2607  014D90  0E7A               	movlw	122
  2608  014D92  6EE6               	movwf	postinc1,c
  2609  014D94  0E44               	movlw	68
  2610  014D96  6EE6               	movwf	postinc1,c
  2611  014D98  0060  F2CB  FFE6   	movff	lp_filter@lp_speed,postinc1
  2612  014D9E  0060  F2CF  FFE6   	movff	lp_filter@lp_speed+1,postinc1
  2613  014DA4  0060  F2D3  FFE6   	movff	lp_filter@lp_speed+2,postinc1
  2614  014DAA  0060  F2D7  FFE6   	movff	lp_filter@lp_speed+3,postinc1
  2615  014DB0  0E00               	movlw	0
  2616  014DB2  6EE6               	movwf	postinc1,c
  2617  014DB4  0E00               	movlw	0
  2618  014DB6  6EE6               	movwf	postinc1,c
  2619  014DB8  0E7A               	movlw	122
  2620  014DBA  6EE6               	movwf	postinc1,c
  2621  014DBC  0E44               	movlw	68
  2622  014DBE  6EE6               	movwf	postinc1,c
  2623                           
  2624                           ;stkvar	_bn @ sp[(-12)+-5]
  2625  014DC0  0EEF               	movlw	-17
  2626  014DC2  50E3               	movf	plusw1,w,c
  2627  014DC4  0D04               	mullw	4
  2628  014DC6  0E68               	movlw	low lp_filter@smooth
  2629  014DC8  24F3               	addwf	243,w,c
  2630  014DCA  6ED9               	movwf	fsr2l,c
  2631  014DCC  0E01               	movlw	high lp_filter@smooth
  2632  014DCE  20F4               	addwfc	prodh,w,c
  2633  014DD0  6EDA               	movwf	fsr2h,c
  2634  014DD2  006F FF7B FFE6     	movff	postinc2,postinc1
  2635  014DD8  006F FF7B FFE6     	movff	postinc2,postinc1
  2636  014DDE  006F FF7B FFE6     	movff	postinc2,postinc1
  2637  014DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  2638  014DEA  ECC1  F08E         	call	___flmul	;wreg free
  2639  014DEE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2640  014DF4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2641  014DFA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2642  014E00  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2643  014E06  0E00               	movlw	0
  2644  014E08  6EE6               	movwf	postinc1,c
  2645  014E0A  0E00               	movlw	0
  2646  014E0C  6EE6               	movwf	postinc1,c
  2647  014E0E  0E7A               	movlw	122
  2648  014E10  6EE6               	movwf	postinc1,c
  2649  014E12  0E44               	movlw	68
  2650  014E14  6EE6               	movwf	postinc1,c
  2651                           
  2652                           ;stkvar	_new @ sp[(-16)+-4]
  2653  014E16  0EEC               	movlw	-20
  2654  014E18  006F FF8F FFE6     	movff	plusw1,postinc1
  2655  014E1E  006F FF8F FFE6     	movff	plusw1,postinc1
  2656  014E24  006F FF8F FFE6     	movff	plusw1,postinc1
  2657  014E2A  006F FF8F FFE6     	movff	plusw1,postinc1
  2658  014E30  ECC1  F08E         	call	___flmul	;wreg free
  2659  014E34  0060  F0D7  FFE6   	movff	btemp,postinc1
  2660  014E3A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2661  014E40  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2662  014E46  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2663  014E4C  ECC2  F0BA         	call	___flsub	;wreg free
  2664  014E50  0060  F0D7  FFE6   	movff	btemp,postinc1
  2665  014E56  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2666  014E5C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2667  014E62  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2668  014E68  ECC1  F08E         	call	___flmul	;wreg free
  2669  014E6C  0060  F0D7  FFE6   	movff	btemp,postinc1
  2670  014E72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2671  014E78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2672  014E7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2673  014E84  0E00               	movlw	0
  2674  014E86  6EE6               	movwf	postinc1,c
  2675  014E88  0E00               	movlw	0
  2676  014E8A  6EE6               	movwf	postinc1,c
  2677  014E8C  0E7A               	movlw	122
  2678  014E8E  6EE6               	movwf	postinc1,c
  2679  014E90  0E44               	movlw	68
  2680  014E92  6EE6               	movwf	postinc1,c
  2681                           
  2682                           ;stkvar	_bn @ sp[(-12)+-5]
  2683  014E94  0EEF               	movlw	-17
  2684  014E96  50E3               	movf	plusw1,w,c
  2685  014E98  0D04               	mullw	4
  2686  014E9A  0E68               	movlw	low lp_filter@smooth
  2687  014E9C  24F3               	addwf	243,w,c
  2688  014E9E  6ED9               	movwf	fsr2l,c
  2689  014EA0  0E01               	movlw	high lp_filter@smooth
  2690  014EA2  20F4               	addwfc	prodh,w,c
  2691  014EA4  6EDA               	movwf	fsr2h,c
  2692  014EA6  006F FF7B FFE6     	movff	postinc2,postinc1
  2693  014EAC  006F FF7B FFE6     	movff	postinc2,postinc1
  2694  014EB2  006F FF7B FFE6     	movff	postinc2,postinc1
  2695  014EB8  006F FF7B FFE6     	movff	postinc2,postinc1
  2696  014EBE  ECC1  F08E         	call	___flmul	;wreg free
  2697  014EC2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2698  014EC8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2699  014ECE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2700  014ED4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2701  014EDA  ECD6  F092         	call	___fladd	;wreg free
  2702  014EDE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2703  014EE4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2704  014EEA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  2705  014EF0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  2706  014EF6  ECB4  F096         	call	___fldiv	;wreg free
  2707  014EFA  0060  F0D4  F0AE   	movff	btemp,lp_filter@lp_x
  2708  014F00  0060  F0D8  F0AF   	movff	btemp+1,lp_filter@lp_x+1
  2709  014F06  0060  F0DC  F0B0   	movff	btemp+2,lp_filter@lp_x+2
  2710  014F0C  0060  F0E0  F0B1   	movff	btemp+3,lp_filter@lp_x+3
  2711                           
  2712                           ;mbmc.c: 15:  smooth[bn] = lp_x;
  2713                           ;stkvar	_bn @ sp[(0)+-5]
  2714  014F12  0EFB               	movlw	-5
  2715  014F14  50E3               	movf	plusw1,w,c
  2716  014F16  0D04               	mullw	4
  2717  014F18  0E68               	movlw	low lp_filter@smooth
  2718  014F1A  24F3               	addwf	243,w,c
  2719  014F1C  6ED9               	movwf	fsr2l,c
  2720  014F1E  0E01               	movlw	high lp_filter@smooth
  2721  014F20  20F4               	addwfc	prodh,w,c
  2722  014F22  6EDA               	movwf	fsr2h,c
  2723  014F24  0060  F2BB  FFDE   	movff	lp_filter@lp_x,postinc2
  2724  014F2A  0060  F2BF  FFDE   	movff	lp_filter@lp_x+1,postinc2
  2725  014F30  0060  F2C3  FFDE   	movff	lp_filter@lp_x+2,postinc2
  2726  014F36  0060  F2C7  FFDE   	movff	lp_filter@lp_x+3,postinc2
  2727                           
  2728                           ;mbmc.c: 16:  if (slow == (-1)) {
  2729                           ;stkvar	_slow @ sp[(0)+-6]
  2730  014F3C  0EFA               	movlw	-6
  2731  014F3E  28E3               	incf	plusw1,w,c
  2732  014F40  A4D8               	btfss	status,2,c
  2733  014F42  D016               	goto	l8561
  2734                           
  2735                           ;mbmc.c: 17:   lp_x = 0.0;
  2736  014F44  0100               	movlb	0	; () banked
  2737  014F46  6BAE               	clrf	lp_filter@lp_x& (0+255),b
  2738  014F48  6BAF               	clrf	(lp_filter@lp_x+1)& (0+255),b
  2739  014F4A  6BB0               	clrf	(lp_filter@lp_x+2)& (0+255),b
  2740  014F4C  6BB1               	clrf	(lp_filter@lp_x+3)& (0+255),b
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;mbmc.c: 18:   smooth[bn] = 0.0;
  2744                           ;stkvar	_bn @ sp[(0)+-5]
  2745  014F4E  0EFB               	movlw	-5
  2746  014F50  50E3               	movf	plusw1,w,c
  2747  014F52  0D04               	mullw	4
  2748  014F54  0E68               	movlw	low lp_filter@smooth
  2749  014F56  24F3               	addwf	243,w,c
  2750  014F58  6ED9               	movwf	fsr2l,c
  2751  014F5A  0E01               	movlw	high lp_filter@smooth
  2752  014F5C  20F4               	addwfc	prodh,w,c
  2753  014F5E  6EDA               	movwf	fsr2h,c
  2754  014F60  0E00               	movlw	0
  2755  014F62  6EDE               	movwf	postinc2,c
  2756  014F64  0E00               	movlw	0
  2757  014F66  6EDE               	movwf	postinc2,c
  2758  014F68  0E00               	movlw	0
  2759  014F6A  6EDE               	movwf	postinc2,c
  2760  014F6C  0E00               	movlw	0
  2761  014F6E  6EDD               	movwf	postdec2,c
  2762  014F70                     l8561:
  2763                           
  2764                           ;mbmc.c: 20:  return lp_x;
  2765  014F70  0060  F2B8  F035   	movff	lp_filter@lp_x,btemp
  2766  014F76  0060  F2BC  F036   	movff	lp_filter@lp_x+1,btemp+1
  2767  014F7C  0060  F2C0  F037   	movff	lp_filter@lp_x+2,btemp+2
  2768  014F82  0060  F2C4  F038   	movff	lp_filter@lp_x+3,btemp+3
  2769  014F88                     l1679:
  2770                           
  2771                           ; _lp_filter: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  2772  014F88  0EFA               	movlw	250
  2773  014F8A  26E1               	addwf	fsr1l,f,c
  2774  014F8C  0EFF               	movlw	255
  2775  014F8E  22E2               	addwfc	fsr1h,f,c
  2776  014F90  0012               	return		;funcret
  2777  014F92                     __end_of_lp_filter:
  2778                           	opt callstack 0
  2779                           
  2780 ;; *************** function _init_display *****************
  2781 ;; Defined at:
  2782 ;;		line 37 in file "eadog.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1  [STACK] void 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/2
  2793 ;;		On exit  : 3F/3D
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    8
  2803 ;; This function calls:
  2804 ;;		_ringBufS_init
  2805 ;;		_send_lcd_cmd
  2806 ;;		_send_lcd_cmd_long
  2807 ;;		_wdtdelay
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text5
  2814  0165DE                     __ptext5:
  2815                           	opt callstack 0
  2816  0165DE                     _init_display:
  2817                           	opt callstack 22
  2818                           
  2819                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2820                           
  2821                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2822                           ;incstack = 0
  2823  0165DE  0E83               	movlw	low _ring_buf1
  2824  0165E0  0100               	movlb	0	; () banked
  2825  0165E2  6FA0               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2826  0165E4  0E03               	movlw	high _ring_buf1
  2827  0165E6  6FA1               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2828                           
  2829                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2830  0165E8  0E40               	movlw	low _ring_buf2
  2831  0165EA  6F9E               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2832  0165EC  0E03               	movlw	high _ring_buf2
  2833  0165EE  6F9F               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2837  0165F0  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  2838  0165F6  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  2839  0165FC  EC5C  F0BD         	call	_ringBufS_init	;wreg free
  2840                           
  2841                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2842  016600  0060  F27B  FFE6   	movff	_spi_link+4,postinc1
  2843  016606  0060  F27F  FFE6   	movff	_spi_link+5,postinc1
  2844  01660C  EC5C  F0BD         	call	_ringBufS_init	;wreg free
  2845                           
  2846                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2847  016610  84BE               	bsf	190,2,c	;volatile
  2848  016612  84BC               	bsf	188,2,c	;volatile
  2849                           
  2850                           ;eadog.c: 46:  wdtdelay(350000);
  2851  016614  0E30               	movlw	48
  2852  016616  6EE6               	movwf	postinc1,c
  2853  016618  0E57               	movlw	87
  2854  01661A  6EE6               	movwf	postinc1,c
  2855  01661C  0E05               	movlw	5
  2856  01661E  6EE6               	movwf	postinc1,c
  2857  016620  0E00               	movlw	0
  2858  016622  6EE6               	movwf	postinc1,c
  2859  016624  ECF2  F0B9         	call	_wdtdelay	;wreg free
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2863  016628  0E39               	movlw	57
  2864  01662A  6EE6               	movwf	postinc1,c
  2865  01662C  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2869  016630  0E1D               	movlw	29
  2870  016632  6EE6               	movwf	postinc1,c
  2871  016634  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2875  016638  0E50               	movlw	80
  2876  01663A  6EE6               	movwf	postinc1,c
  2877  01663C  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2881  016640  0E6C               	movlw	108
  2882  016642  6EE6               	movwf	postinc1,c
  2883  016644  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2887  016648  0E76               	movlw	118
  2888  01664A  6EE6               	movwf	postinc1,c
  2889  01664C  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2893  016650  0E38               	movlw	56
  2894  016652  6EE6               	movwf	postinc1,c
  2895  016654  EC34  F0BD         	call	_send_lcd_cmd_long	;wreg free
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2899  016658  0E0F               	movlw	15
  2900  01665A  6EE6               	movwf	postinc1,c
  2901  01665C  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2905  016660  0E01               	movlw	1
  2906  016662  6EE6               	movwf	postinc1,c
  2907  016664  EC34  F0BD         	call	_send_lcd_cmd_long	;wreg free
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2911  016668  0E02               	movlw	2
  2912  01666A  6EE6               	movwf	postinc1,c
  2913  01666C  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2917  016670  0E06               	movlw	6
  2918  016672  6EE6               	movwf	postinc1,c
  2919  016674  EC48  F0BD         	call	_send_lcd_cmd	;wreg free
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;eadog.c: 57:  wdtdelay(30);
  2923  016678  0E1E               	movlw	30
  2924  01667A  6EE6               	movwf	postinc1,c
  2925  01667C  0E00               	movlw	0
  2926  01667E  6EE6               	movwf	postinc1,c
  2927  016680  0E00               	movlw	0
  2928  016682  6EE6               	movwf	postinc1,c
  2929  016684  0E00               	movlw	0
  2930  016686  6EE6               	movwf	postinc1,c
  2931  016688  ECF2  F0B9         	call	_wdtdelay	;wreg free
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2935  01668C  0E02               	movlw	2
  2936  01668E  013D               	movlb	61	; () banked
  2937  016690  6F16               	movwf	22,b	;volatile
  2938                           
  2939                           ; BSR set to: 61
  2940                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2941  016692  0E40               	movlw	64
  2942  016694  6F15               	movwf	21,b	;volatile
  2943                           
  2944                           ; BSR set to: 61
  2945                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2946  016696  0E83               	movlw	131
  2947  016698  6F14               	movwf	20,b	;volatile
  2948                           
  2949                           ; BSR set to: 61
  2950                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2951  01669A  931A               	bcf	26,1,b	;volatile
  2952                           
  2953                           ; BSR set to: 61
  2954                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2955  01669C  0E3F               	movlw	-193
  2956  01669E  013B               	movlb	59	; () banked
  2957  0166A0  17FD               	andwf	253,f,b	;volatile
  2958                           
  2959                           ; BSR set to: 59
  2960                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2961  0166A2  9BFD               	bcf	253,5,b	;volatile
  2962                           
  2963                           ; BSR set to: 59
  2964                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2965  0166A4  51FD               	movf	253,w,b	;volatile
  2966  0166A6  0BF9               	andlw	-7
  2967  0166A8  0902               	iorlw	2
  2968  0166AA  6FFD               	movwf	253,b	;volatile
  2969                           
  2970                           ; BSR set to: 59
  2971                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2972  0166AC  0EE7               	movlw	-25
  2973  0166AE  17FD               	andwf	253,f,b	;volatile
  2974                           
  2975                           ; BSR set to: 59
  2976                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2977  0166B0  81FD               	bsf	253,0,b	;volatile
  2978                           
  2979                           ; BSR set to: 59
  2980                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2981  0166B2  0E83               	movlw	low _ring_buf1
  2982  0166B4  6FF9               	movwf	249,b	;volatile
  2983  0166B6  0E03               	movlw	high _ring_buf1
  2984  0166B8  6FFA               	movwf	250,b	;volatile
  2985  0166BA  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2986  0166BC  6FFB               	movwf	251,b	;volatile
  2987                           
  2988                           ; BSR set to: 59
  2989                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2990  0166BE  9BFC               	bcf	252,5,b	;volatile
  2991                           
  2992                           ; BSR set to: 59
  2993                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2994  0166C0  013D               	movlb	61	; () banked
  2995  0166C2  831A               	bsf	26,1,b	;volatile
  2996                           
  2997                           ; BSR set to: 61
  2998                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2999  0166C4  94BE               	bcf	190,2,c	;volatile
  3000                           
  3001                           ; BSR set to: 61
  3002                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3003  0166C6  0012               	return		;funcret
  3004  0166C8                     __end_of_init_display:
  3005                           	opt callstack 0
  3006                           
  3007 ;; *************** function _send_lcd_cmd_long *****************
  3008 ;; Defined at:
  3009 ;;		line 114 in file "eadog.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  cmd             1  [STACK] const unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1  [STACK] void 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3018 ;; Tracked objects:
  3019 ;;		On entry : 3F/0
  3020 ;;		On exit  : 3F/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    7
  3030 ;; This function calls:
  3031 ;;		_SPI1_Exchange8bit
  3032 ;;		_wdtdelay
  3033 ;; This function is called by:
  3034 ;;		_init_display
  3035 ;; This function uses a reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text6
  3039  017A68                     __ptext6:
  3040                           	opt callstack 0
  3041  017A68                     _send_lcd_cmd_long:
  3042                           	opt callstack 22
  3043                           
  3044                           ; BSR set to: 61
  3045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3046                           ;incstack = 0
  3047                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3048  017A68  92BC               	bcf	188,1,c	;volatile
  3049                           
  3050                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3051  017A6A  94BC               	bcf	188,2,c	;volatile
  3052                           
  3053                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3054                           ;stkvar	_cmd @ sp[(0)+-1]
  3055  017A6C  0EFF               	movlw	-1
  3056  017A6E  50E3               	movf	plusw1,w,c
  3057  017A70  6EE6               	movwf	postinc1,c
  3058  017A72  ECDE  F0BE         	call	_SPI1_Exchange8bit	;wreg free
  3059                           
  3060                           ; BSR set to: 57
  3061                           ;eadog.c: 119:  wdtdelay(800);
  3062  017A76  0E20               	movlw	32
  3063  017A78  6EE6               	movwf	postinc1,c
  3064  017A7A  0E03               	movlw	3
  3065  017A7C  6EE6               	movwf	postinc1,c
  3066  017A7E  0E00               	movlw	0
  3067  017A80  6EE6               	movwf	postinc1,c
  3068  017A82  0E00               	movlw	0
  3069  017A84  6EE6               	movwf	postinc1,c
  3070  017A86  ECF2  F0B9         	call	_wdtdelay	;wreg free
  3071                           
  3072                           ; BSR set to: 0
  3073  017A8A  82BC               	bsf	188,1,c	;volatile
  3074                           
  3075                           ; BSR set to: 0
  3076                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3077  017A8C  52E5               	movf	postdec1,f,c
  3078  017A8E  0012               	return		;funcret
  3079  017A90                     __end_of_send_lcd_cmd_long:
  3080                           	opt callstack 0
  3081                           
  3082 ;; *************** function _send_lcd_cmd *****************
  3083 ;; Defined at:
  3084 ;;		line 102 in file "eadog.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  cmd             1  [STACK] const unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1  [STACK] void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3093 ;; Tracked objects:
  3094 ;;		On entry : 3F/0
  3095 ;;		On exit  : 3F/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    7
  3105 ;; This function calls:
  3106 ;;		_SPI1_Exchange8bit
  3107 ;;		_wdtdelay
  3108 ;; This function is called by:
  3109 ;;		_init_display
  3110 ;; This function uses a reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text7
  3114  017A90                     __ptext7:
  3115                           	opt callstack 0
  3116  017A90                     _send_lcd_cmd:
  3117                           	opt callstack 22
  3118                           
  3119                           ; BSR set to: 0
  3120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3121                           ;incstack = 0
  3122                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3123  017A90  92BC               	bcf	188,1,c	;volatile
  3124                           
  3125                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3126  017A92  94BC               	bcf	188,2,c	;volatile
  3127                           
  3128                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3129                           ;stkvar	_cmd @ sp[(0)+-1]
  3130  017A94  0EFF               	movlw	-1
  3131  017A96  50E3               	movf	plusw1,w,c
  3132  017A98  6EE6               	movwf	postinc1,c
  3133  017A9A  ECDE  F0BE         	call	_SPI1_Exchange8bit	;wreg free
  3134                           
  3135                           ; BSR set to: 57
  3136                           ;eadog.c: 107:  wdtdelay(30);
  3137  017A9E  0E1E               	movlw	30
  3138  017AA0  6EE6               	movwf	postinc1,c
  3139  017AA2  0E00               	movlw	0
  3140  017AA4  6EE6               	movwf	postinc1,c
  3141  017AA6  0E00               	movlw	0
  3142  017AA8  6EE6               	movwf	postinc1,c
  3143  017AAA  0E00               	movlw	0
  3144  017AAC  6EE6               	movwf	postinc1,c
  3145  017AAE  ECF2  F0B9         	call	_wdtdelay	;wreg free
  3146                           
  3147                           ; BSR set to: 0
  3148  017AB2  82BC               	bsf	188,1,c	;volatile
  3149                           
  3150                           ; BSR set to: 0
  3151                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3152  017AB4  52E5               	movf	postdec1,f,c
  3153  017AB6  0012               	return		;funcret
  3154  017AB8                     __end_of_send_lcd_cmd:
  3155                           	opt callstack 0
  3156                           
  3157 ;; *************** function _SPI1_Exchange8bit *****************
  3158 ;; Defined at:
  3159 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  data            1  [STACK] unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1  [STACK] unsigned char 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 3F/39
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    6
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_send_lcd_cmd
  3184 ;;		_send_lcd_cmd_long
  3185 ;; This function uses a reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text8
  3189  017DBC                     __ptext8:
  3190                           	opt callstack 0
  3191  017DBC                     _SPI1_Exchange8bit:
  3192                           	opt callstack 22
  3193                           
  3194                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3195                           
  3196                           ; BSR set to: 0
  3197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3198                           ;incstack = 0
  3199  017DBC  0E01               	movlw	1
  3200  017DBE  013D               	movlb	61	; () banked
  3201  017DC0  6F12               	movwf	18,b	;volatile
  3202                           
  3203                           ; BSR set to: 61
  3204                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3205                           ;stkvar	_data @ sp[(0)+-1]
  3206  017DC2  0EFF               	movlw	-1
  3207  017DC4  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3208  017DCA                     l835:
  3209                           
  3210                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3211  017DCA  0139               	movlb	57	; () banked
  3212  017DCC  A9A2               	btfss	162,4,b	;volatile
  3213  017DCE  D7FD               	goto	l835
  3214                           
  3215                           ; BSR set to: 57
  3216                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3217  017DD0  006F F440  F035    	movff	15632,btemp	;volatile
  3218                           
  3219                           ; BSR set to: 57
  3220                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3221  017DD6  52E5               	movf	postdec1,f,c
  3222  017DD8  0012               	return		;funcret
  3223  017DDA                     __end_of_SPI1_Exchange8bit:
  3224                           	opt callstack 0
  3225                           
  3226 ;; *************** function _ringBufS_init *****************
  3227 ;; Defined at:
  3228 ;;		line 22 in file "ringbufs.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  _this           2  [STACK] PTR volatile struct ring
  3231 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1  [STACK] void 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    7
  3250 ;; This function calls:
  3251 ;;		_memset
  3252 ;; This function is called by:
  3253 ;;		_init_display
  3254 ;; This function uses a reentrant model
  3255 ;;
  3256                           
  3257                           	psect	text9
  3258  017AB8                     __ptext9:
  3259                           	opt callstack 0
  3260  017AB8                     _ringBufS_init:
  3261                           	opt callstack 22
  3262                           
  3263                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3264                           
  3265                           ; BSR set to: 57
  3266                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3267                           ;incstack = 0
  3268  017AB8  0E43               	movlw	67
  3269  017ABA  6EE6               	movwf	postinc1,c
  3270  017ABC  0E00               	movlw	0
  3271  017ABE  6EE6               	movwf	postinc1,c
  3272  017AC0  0E00               	movlw	0
  3273  017AC2  6EE6               	movwf	postinc1,c
  3274  017AC4  0E00               	movlw	0
  3275  017AC6  6EE6               	movwf	postinc1,c
  3276                           
  3277                           ;stkvar	__this @ sp[(-4)+-2]
  3278  017AC8  0EFA               	movlw	-6
  3279  017ACA  006F FF8F FFE6     	movff	plusw1,postinc1
  3280  017AD0  006F FF8F FFE6     	movff	plusw1,postinc1
  3281  017AD6  EC47  F0A1         	call	_memset	;wreg free
  3282                           
  3283                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3284  017ADA  52E5               	movf	postdec1,f,c
  3285  017ADC  52E5               	movf	postdec1,f,c
  3286  017ADE  0012               	return		;funcret
  3287  017AE0                     __end_of_ringBufS_init:
  3288                           	opt callstack 0
  3289                           
  3290 ;; *************** function _eaDogM_WriteCommand *****************
  3291 ;; Defined at:
  3292 ;;		line 160 in file "eadog.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  cmd             1  [STACK] const unsigned char 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1  [STACK] void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3301 ;; Tracked objects:
  3302 ;;		On entry : 3F/3D
  3303 ;;		On exit  : 3F/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:   16
  3313 ;; This function calls:
  3314 ;;		_send_lcd_cmd_dma
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text10
  3321  017FB6                     __ptext10:
  3322                           	opt callstack 0
  3323  017FB6                     _eaDogM_WriteCommand:
  3324                           	opt callstack 14
  3325                           
  3326                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3327                           ;stkvar	_cmd @ sp[(0)+-1]
  3328                           
  3329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3330                           ;incstack = 0
  3331  017FB6  0EFF               	movlw	-1
  3332  017FB8  50E3               	movf	plusw1,w,c
  3333  017FBA  6EE6               	movwf	postinc1,c
  3334  017FBC  EC4C  F0BA         	call	_send_lcd_cmd_dma	;wreg free
  3335                           
  3336                           ; BSR set to: 0
  3337                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3338  017FC0  52E5               	movf	postdec1,f,c
  3339  017FC2  0012               	return		;funcret
  3340  017FC4                     __end_of_eaDogM_WriteCommand:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _conv_raw_result *****************
  3344 ;; Defined at:
  3345 ;;		line 71 in file "daq.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  chan            1  [STACK] enum E16136
  3348 ;;  to_what         1  [STACK] enum E16198
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  4  [STACK] float 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/4
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    7
  3367 ;; This function calls:
  3368 ;;		___fladd
  3369 ;;		___fldiv
  3370 ;;		___flmul
  3371 ;;		___xxtofl
  3372 ;;		_get_raw_result
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text11
  3379  0155E8                     __ptext11:
  3380                           	opt callstack 0
  3381  0155E8                     _conv_raw_result:
  3382                           	opt callstack 23
  3383                           
  3384                           ;daq.c: 71: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 72: {;
      +                          daq.c: 73:  switch (to_what) {
  3385                           
  3386                           ; BSR set to: 0
  3387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3388                           ;incstack = 0
  3389  0155E8  D0D9               	goto	l8529
  3390  0155EA                     l8503:
  3391                           
  3392                           ;daq.c: 75:   return 25.0;
  3393  0155EA  0E00               	movlw	0
  3394  0155EC  6E35               	movwf	btemp^0,c
  3395  0155EE  0E00               	movlw	0
  3396  0155F0  6E36               	movwf	(btemp+1)^0,c
  3397  0155F2  0EC8               	movlw	200
  3398  0155F4  6E37               	movwf	(btemp+2)^0,c
  3399  0155F6  0E41               	movlw	65
  3400  0155F8  D0CF               	goto	L2
  3401  0155FA                     l8509:
  3402                           
  3403                           ;daq.c: 78:   return(((float) get_raw_result(chan) * 1.25) - 2500.0)*59.32 / 1000.0;
  3404  0155FA  0E00               	movlw	0
  3405  0155FC  6EE6               	movwf	postinc1,c
  3406  0155FE  0E00               	movlw	0
  3407  015600  6EE6               	movwf	postinc1,c
  3408  015602  0E7A               	movlw	122
  3409  015604  6EE6               	movwf	postinc1,c
  3410  015606  0E44               	movlw	68
  3411  015608  6EE6               	movwf	postinc1,c
  3412  01560A  0EAE               	movlw	174
  3413  01560C  6EE6               	movwf	postinc1,c
  3414  01560E  0E47               	movlw	71
  3415  015610  6EE6               	movwf	postinc1,c
  3416  015612  0E6D               	movlw	109
  3417  015614  6EE6               	movwf	postinc1,c
  3418  015616  0E42               	movlw	66
  3419  015618  6EE6               	movwf	postinc1,c
  3420  01561A  0E00               	movlw	0
  3421  01561C  6EE6               	movwf	postinc1,c
  3422  01561E  0E40               	movlw	64
  3423  015620  6EE6               	movwf	postinc1,c
  3424  015622  0E1C               	movlw	28
  3425  015624  6EE6               	movwf	postinc1,c
  3426  015626  0EC5               	movlw	197
  3427  015628  6EE6               	movwf	postinc1,c
  3428  01562A  0E00               	movlw	0
  3429  01562C  6EE6               	movwf	postinc1,c
  3430  01562E  0E00               	movlw	0
  3431  015630  6EE6               	movwf	postinc1,c
  3432  015632  0EA0               	movlw	160
  3433  015634  6EE6               	movwf	postinc1,c
  3434  015636  0E3F               	movlw	63
  3435  015638  6EE6               	movwf	postinc1,c
  3436                           
  3437                           ;stkvar	_chan @ sp[(-16)+-1]
  3438  01563A  0EEF               	movlw	-17
  3439  01563C  50E3               	movf	plusw1,w,c
  3440  01563E  6EE6               	movwf	postinc1,c
  3441  015640  ECED  F0BE         	call	_get_raw_result	;wreg free
  3442  015644  0060  F0D4  F03F   	movff	btemp,btemp+10
  3443  01564A  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3444  015650  503F               	movf	(btemp+10)^0,w,c
  3445  015652  6E39               	movwf	(btemp+4)^0,c
  3446  015654  5040               	movf	(btemp+11)^0,w,c
  3447  015656  6E3A               	movwf	(btemp+5)^0,c
  3448  015658  6A3B               	clrf	(btemp+6)^0,c
  3449  01565A  6A3C               	clrf	(btemp+7)^0,c
  3450  01565C  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3451  015662  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3452  015668  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3453  01566E  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3454  015674  0E00               	movlw	0
  3455  015676  6EE6               	movwf	postinc1,c
  3456  015678  ECF2  F0A9         	call	___xxtofl	;wreg free
  3457  01567C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3458  015682  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3459  015688  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3460  01568E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3461  015694  ECC1  F08E         	call	___flmul	;wreg free
  3462  015698  0060  F0D7  FFE6   	movff	btemp,postinc1
  3463  01569E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3464  0156A4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3465  0156AA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3466  0156B0  ECD6  F092         	call	___fladd	;wreg free
  3467  0156B4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3468  0156BA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3469  0156C0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3470  0156C6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3471  0156CC  ECC1  F08E         	call	___flmul	;wreg free
  3472  0156D0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3473  0156D6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3474  0156DC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3475  0156E2  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3476  0156E8  ECB4  F096         	call	___fldiv	;wreg free
  3477  0156EC  D06A               	goto	l1650
  3478  0156EE                     l8515:
  3479                           
  3480                           ;daq.c: 81:   return((float) get_raw_result(chan) * 8.250825) / 1000.0;
  3481  0156EE  0E00               	movlw	0
  3482  0156F0  6EE6               	movwf	postinc1,c
  3483  0156F2  0E00               	movlw	0
  3484  0156F4  6EE6               	movwf	postinc1,c
  3485  0156F6  0E7A               	movlw	122
  3486  0156F8  6EE6               	movwf	postinc1,c
  3487  0156FA  0E44               	movlw	68
  3488  0156FC  6EE6               	movwf	postinc1,c
  3489  0156FE  0E61               	movlw	97
  3490  015700  6EE6               	movwf	postinc1,c
  3491  015702  0E03               	movlw	3
  3492  015704  6EE6               	movwf	postinc1,c
  3493  015706  0E04               	movlw	4
  3494  015708  6EE6               	movwf	postinc1,c
  3495  01570A  0E41               	movlw	65
  3496  01570C  6EE6               	movwf	postinc1,c
  3497                           
  3498                           ;stkvar	_chan @ sp[(-8)+-1]
  3499  01570E  0EF7               	movlw	-9
  3500  015710  50E3               	movf	plusw1,w,c
  3501  015712  6EE6               	movwf	postinc1,c
  3502  015714  ECED  F0BE         	call	_get_raw_result	;wreg free
  3503  015718  0060  F0D4  F03F   	movff	btemp,btemp+10
  3504  01571E  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3505  015724  503F               	movf	(btemp+10)^0,w,c
  3506  015726  6E39               	movwf	(btemp+4)^0,c
  3507  015728  5040               	movf	(btemp+11)^0,w,c
  3508  01572A  6E3A               	movwf	(btemp+5)^0,c
  3509  01572C  6A3B               	clrf	(btemp+6)^0,c
  3510  01572E  6A3C               	clrf	(btemp+7)^0,c
  3511  015730  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3512  015736  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3513  01573C  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3514  015742  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3515  015748  0E00               	movlw	0
  3516  01574A  6EE6               	movwf	postinc1,c
  3517  01574C  ECF2  F0A9         	call	___xxtofl	;wreg free
  3518  015750  0060  F0D7  FFE6   	movff	btemp,postinc1
  3519  015756  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3520  01575C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3521  015762  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3522  015768  ECC1  F08E         	call	___flmul	;wreg free
  3523  01576C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3524  015772  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3525  015778  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3526  01577E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3527  015784  ECB4  F096         	call	___fldiv	;wreg free
  3528  015788  D01C               	goto	l1650
  3529  01578A                     l8521:
  3530                           
  3531                           ;daq.c: 84:   return 0.0;
  3532  01578A  0E00               	movlw	0
  3533  01578C  6E35               	movwf	btemp^0,c
  3534  01578E  0E00               	movlw	0
  3535  015790  6E36               	movwf	(btemp+1)^0,c
  3536  015792  0E00               	movlw	0
  3537  015794  6E37               	movwf	(btemp+2)^0,c
  3538  015796  0E00               	movlw	0
  3539  015798                     L2:
  3540  015798  6E38               	movwf	(btemp+3)^0,c
  3541  01579A  D013               	goto	l1650
  3542  01579C                     l8529:
  3543                           
  3544                           ;stkvar	_to_what @ sp[(0)+-2]
  3545  01579C  0EFE               	movlw	-2
  3546  01579E  50E3               	movf	plusw1,w,c
  3547  0157A0  6E3F               	movwf	(btemp+10)^0,c
  3548  0157A2  6A40               	clrf	(btemp+11)^0,c
  3549                           
  3550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 1, Range of values is 0 to 0
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte            4     3 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557  0157A4  5040               	movf	(btemp+11)^0,w,c
  3558  0157A6  0A00               	xorlw	0	; case 0
  3559  0157A8  A4D8               	btfss	status,2,c
  3560  0157AA  D7EF               	goto	l8521
  3561                           
  3562                           ; Switch size 1, requested type "simple"
  3563                           ; Number of cases is 3, Range of values is 0 to 2
  3564                           ; switch strategies available:
  3565                           ; Name         Instructions Cycles
  3566                           ; simple_byte           10     6 (average)
  3567                           ;	Chosen strategy is simple_byte
  3568  0157AC  503F               	movf	(btemp+10)^0,w,c
  3569  0157AE  0A00               	xorlw	0	; case 0
  3570  0157B0  B4D8               	btfsc	status,2,c
  3571  0157B2  D723               	goto	l8509
  3572  0157B4  0A01               	xorlw	1	; case 1
  3573  0157B6  B4D8               	btfsc	status,2,c
  3574  0157B8  D79A               	goto	l8515
  3575  0157BA  0A03               	xorlw	3	; case 2
  3576  0157BC  B4D8               	btfsc	status,2,c
  3577  0157BE  D715               	goto	l8503
  3578  0157C0  D7E4               	goto	l8521
  3579  0157C2                     l1650:
  3580                           
  3581                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  3582  0157C2  52E5               	movf	postdec1,f,c
  3583  0157C4  52E5               	movf	postdec1,f,c
  3584  0157C6  0012               	return		;funcret
  3585  0157C8                     __end_of_conv_raw_result:
  3586                           	opt callstack 0
  3587                           
  3588 ;; *************** function _get_raw_result *****************
  3589 ;; Defined at:
  3590 ;;		line 63 in file "daq.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  index           1  [STACK] enum E16136
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2  [STACK] unsigned short 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/4
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    6
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;;		_conv_raw_result
  3616 ;; This function uses a reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text12
  3620  017DDA                     __ptext12:
  3621                           	opt callstack 0
  3622  017DDA                     _get_raw_result:
  3623                           	opt callstack 24
  3624                           
  3625                           ;daq.c: 63: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 64: {;daq.c: 65:  r
      +                          eturn R.raw_adc[index];
  3626                           ;stkvar	_index @ sp[(0)+-1]
  3627                           
  3628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3629                           ;incstack = 0
  3630  017DDA  0EFF               	movlw	-1
  3631  017DDC  50E3               	movf	plusw1,w,c
  3632  017DDE  0D02               	mullw	2
  3633  017DE0  50F3               	movf	243,w,c
  3634  017DE2  0F60               	addlw	low _R
  3635  017DE4  6ED9               	movwf	fsr2l,c
  3636  017DE6  6ADA               	clrf	fsr2h,c
  3637  017DE8  006F FF78  F035    	movff	postinc2,btemp
  3638  017DEE  006F FF74  F036    	movff	postdec2,btemp+1
  3639                           
  3640                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  3641  017DF4  52E5               	movf	postdec1,f,c
  3642  017DF6  0012               	return		;funcret
  3643  017DF8                     __end_of_get_raw_result:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function ___xxtofl *****************
  3647 ;; Defined at:
  3648 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  sign            1  [STACK] unsigned char 
  3651 ;;  val             4  [STACK] long 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  arg             4  [STACK] unsigned long 
  3654 ;;  exp             1  [STACK] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  4  [STACK] unsigned char 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/4
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    6
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_conv_raw_result
  3675 ;; This function uses a reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text13
  3679  0153E4                     __ptext13:
  3680                           	opt callstack 0
  3681  0153E4                     ___xxtofl:
  3682                           	opt callstack 0
  3683                           
  3684                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3685  0153E4  0E05               	movlw	5
  3686  0153E6  26E1               	addwf	fsr1l,f,c
  3687  0153E8  0E00               	movlw	0
  3688  0153EA  22E2               	addwfc	fsr1h,f,c
  3689                           
  3690                           ;stkvar	_sign @ sp[(-5)+-1]
  3691                           
  3692                           ;incstack = 0
  3693  0153EC  0EFA               	movlw	-6
  3694  0153EE  50E3               	movf	plusw1,w,c
  3695  0153F0  B4D8               	btfsc	status,2,c
  3696  0153F2  D01D               	goto	l8269
  3697                           
  3698                           ;stkvar	_val @ sp[(-5)+-5]
  3699  0153F4  0EF9               	movlw	-7
  3700  0153F6  AEE3               	btfss	plusw1,7,c
  3701  0153F8  D01A               	goto	l8269
  3702                           
  3703                           ;stkvar	_val @ sp[(-5)+-5]
  3704  0153FA  0EF6               	movlw	-10
  3705  0153FC  006F FF8C  F03D    	movff	plusw1,btemp+8
  3706  015402  0EF7               	movlw	-9
  3707  015404  006F FF8C  F03E    	movff	plusw1,btemp+9
  3708  01540A  0EF8               	movlw	-8
  3709  01540C  006F FF8C  F03F    	movff	plusw1,btemp+10
  3710  015412  0EF9               	movlw	-7
  3711  015414  006F FF8C  F040    	movff	plusw1,btemp+11
  3712  01541A  1E3D               	comf	(btemp+8)^0,f,c
  3713  01541C  1E3E               	comf	(btemp+9)^0,f,c
  3714  01541E  1E3F               	comf	(btemp+10)^0,f,c
  3715  015420  1E40               	comf	(btemp+11)^0,f,c
  3716  015422  2A3D               	incf	(btemp+8)^0,f,c
  3717  015424  0E00               	movlw	0
  3718  015426  223E               	addwfc	(btemp+9)^0,f,c
  3719  015428  223F               	addwfc	(btemp+10)^0,f,c
  3720  01542A  2240               	addwfc	(btemp+11)^0,f,c
  3721  01542C  D010               	goto	L3
  3722  01542E                     l8269:
  3723                           
  3724                           ;stkvar	_val @ sp[(-5)+-5]
  3725  01542E  0EF6               	movlw	-10
  3726  015430  006F FF8C  F03D    	movff	plusw1,btemp+8
  3727  015436  0EF7               	movlw	-9
  3728  015438  006F FF8C  F03E    	movff	plusw1,btemp+9
  3729  01543E  0EF8               	movlw	-8
  3730  015440  006F FF8C  F03F    	movff	plusw1,btemp+10
  3731  015446  0EF9               	movlw	-7
  3732  015448  006F FF8C  F040    	movff	plusw1,btemp+11
  3733  01544E                     L3:
  3734                           
  3735                           ;stkvar	_arg @ sp[(-5)+0]
  3736  01544E  0EFB               	movlw	-5
  3737  015450  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3738  015456  0EFC               	movlw	-4
  3739  015458  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3740  01545E  0EFD               	movlw	-3
  3741  015460  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3742  015466  0EFE               	movlw	-2
  3743  015468  0060  F103  FFE3   	movff	btemp+11,plusw1
  3744                           
  3745                           ;stkvar	_val @ sp[(-5)+-5]
  3746  01546E  0EF6               	movlw	-10
  3747  015470  50E3               	movf	plusw1,w,c
  3748  015472  E113               	bnz	l8277
  3749  015474  0EF7               	movlw	-9
  3750  015476  50E3               	movf	plusw1,w,c
  3751  015478  E110               	bnz	l8277
  3752  01547A  0EF8               	movlw	-8
  3753  01547C  50E3               	movf	plusw1,w,c
  3754  01547E  E10D               	bnz	l8277
  3755  015480  0EF9               	movlw	-7
  3756  015482  50E3               	movf	plusw1,w,c
  3757  015484  A4D8               	btfss	status,2,c
  3758  015486  D009               	goto	l8277
  3759  015488  0E00               	movlw	0
  3760  01548A  6E35               	movwf	btemp^0,c
  3761  01548C  0E00               	movlw	0
  3762  01548E  6E36               	movwf	(btemp+1)^0,c
  3763  015490  0E00               	movlw	0
  3764  015492  6E37               	movwf	(btemp+2)^0,c
  3765  015494  0E00               	movlw	0
  3766  015496  6E38               	movwf	(btemp+3)^0,c
  3767  015498  D0A2               	goto	l2621
  3768  01549A                     l8277:
  3769  01549A  0E96               	movlw	150
  3770  01549C  6E40               	movwf	(btemp+11)^0,c
  3771                           
  3772                           ;stkvar	_exp @ sp[(-5)+4]
  3773  01549E  0EFF               	movlw	-1
  3774  0154A0  0060  F103  FFE3   	movff	btemp+11,plusw1
  3775  0154A6  D00B               	goto	l8281
  3776  0154A8                     l8279:
  3777                           
  3778                           ;stkvar	_exp @ sp[(-5)+4]
  3779  0154A8  0EFF               	movlw	-1
  3780  0154AA  2AE3               	incf	plusw1,f,c
  3781                           
  3782                           ;stkvar	_arg @ sp[(-5)+0]
  3783  0154AC  90D8               	bcf	status,0,c
  3784  0154AE  0EFE               	movlw	-2
  3785  0154B0  32E3               	rrcf	plusw1,f,c
  3786  0154B2  0EFD               	movlw	-3
  3787  0154B4  32E3               	rrcf	plusw1,f,c
  3788  0154B6  0EFC               	movlw	-4
  3789  0154B8  32E3               	rrcf	plusw1,f,c
  3790  0154BA  0EFB               	movlw	-5
  3791  0154BC  32E3               	rrcf	plusw1,f,c
  3792  0154BE                     l8281:
  3793                           
  3794                           ;stkvar	_arg @ sp[(-5)+0]
  3795  0154BE  50E1               	movf	fsr1l,w,c
  3796  0154C0  0FFB               	addlw	-5
  3797  0154C2  6ED9               	movwf	fsr2l,c
  3798  0154C4  50E2               	movf	fsr1h,w,c
  3799  0154C6  6EDA               	movwf	fsr2h,c
  3800  0154C8  0EFF               	movlw	255
  3801  0154CA  22DA               	addwfc	fsr2h,f,c
  3802  0154CC  52DE               	movf	postinc2,f,c
  3803  0154CE  52DE               	movf	postinc2,f,c
  3804  0154D0  52DE               	movf	postinc2,f,c
  3805  0154D2  0EFE               	movlw	254
  3806  0154D4  14DD               	andwf	postdec2,w,c
  3807  0154D6  B4D8               	btfsc	status,2,c
  3808  0154D8  D018               	goto	l8289
  3809  0154DA  D7E6               	goto	l8279
  3810  0154DC                     l8283:
  3811                           
  3812                           ;stkvar	_exp @ sp[(-5)+4]
  3813  0154DC  0EFF               	movlw	-1
  3814  0154DE  2AE3               	incf	plusw1,f,c
  3815                           
  3816                           ;stkvar	_arg @ sp[(-5)+0]
  3817  0154E0  50E1               	movf	fsr1l,w,c
  3818  0154E2  0FFB               	addlw	-5
  3819  0154E4  6ED9               	movwf	fsr2l,c
  3820  0154E6  50E2               	movf	fsr1h,w,c
  3821  0154E8  6EDA               	movwf	fsr2h,c
  3822  0154EA  0EFF               	movlw	255
  3823  0154EC  22DA               	addwfc	fsr2h,f,c
  3824  0154EE  2ADE               	incf	postinc2,f,c
  3825  0154F0  0E00               	movlw	0
  3826  0154F2  22DE               	addwfc	postinc2,f,c
  3827  0154F4  22DE               	addwfc	postinc2,f,c
  3828  0154F6  22DE               	addwfc	postinc2,f,c
  3829                           
  3830                           ;stkvar	_arg @ sp[(-5)+0]
  3831  0154F8  90D8               	bcf	status,0,c
  3832  0154FA  0EFE               	movlw	-2
  3833  0154FC  32E3               	rrcf	plusw1,f,c
  3834  0154FE  0EFD               	movlw	-3
  3835  015500  32E3               	rrcf	plusw1,f,c
  3836  015502  0EFC               	movlw	-4
  3837  015504  32E3               	rrcf	plusw1,f,c
  3838  015506  0EFB               	movlw	-5
  3839  015508  32E3               	rrcf	plusw1,f,c
  3840  01550A                     l8289:
  3841                           
  3842                           ;stkvar	_arg @ sp[(-5)+0]
  3843  01550A  50E1               	movf	fsr1l,w,c
  3844  01550C  0FFB               	addlw	-5
  3845  01550E  6ED9               	movwf	fsr2l,c
  3846  015510  50E2               	movf	fsr1h,w,c
  3847  015512  6EDA               	movwf	fsr2h,c
  3848  015514  0EFF               	movlw	255
  3849  015516  22DA               	addwfc	fsr2h,f,c
  3850  015518  52DE               	movf	postinc2,f,c
  3851  01551A  52DE               	movf	postinc2,f,c
  3852  01551C  52DE               	movf	postinc2,f,c
  3853  01551E  0EFF               	movlw	255
  3854  015520  14DD               	andwf	postdec2,w,c
  3855  015522  B4D8               	btfsc	status,2,c
  3856  015524  D00C               	goto	l8293
  3857  015526  D7DA               	goto	l8283
  3858  015528                     l8291:
  3859                           
  3860                           ;stkvar	_exp @ sp[(-5)+4]
  3861  015528  0EFF               	movlw	-1
  3862  01552A  06E3               	decf	plusw1,f,c
  3863                           
  3864                           ;stkvar	_arg @ sp[(-5)+0]
  3865  01552C  90D8               	bcf	status,0,c
  3866  01552E  0EFB               	movlw	-5
  3867  015530  36E3               	rlcf	plusw1,f,c
  3868  015532  0EFC               	movlw	-4
  3869  015534  36E3               	rlcf	plusw1,f,c
  3870  015536  0EFD               	movlw	-3
  3871  015538  36E3               	rlcf	plusw1,f,c
  3872  01553A  0EFE               	movlw	-2
  3873  01553C  36E3               	rlcf	plusw1,f,c
  3874  01553E                     l8293:
  3875                           
  3876                           ;stkvar	_arg @ sp[(-5)+0]
  3877  01553E  0EFD               	movlw	-3
  3878  015540  BEE3               	btfsc	plusw1,7,c
  3879  015542  D007               	goto	u7780
  3880                           
  3881                           ;stkvar	_exp @ sp[(-5)+4]
  3882  015544  0EFF               	movlw	-1
  3883  015546  006F FF8C  F035    	movff	plusw1,btemp
  3884  01554C  0E02               	movlw	2
  3885  01554E  6035               	cpfslt	btemp^0,c
  3886  015550  D7EB               	goto	l8291
  3887  015552                     u7780:
  3888                           
  3889                           ;stkvar	_exp @ sp[(-5)+4]
  3890  015552  0EFF               	movlw	-1
  3891  015554  B0E3               	btfsc	plusw1,0,c
  3892  015556  D002               	goto	l8301
  3893                           
  3894                           ;stkvar	_arg @ sp[(-5)+0]
  3895  015558  0EFD               	movlw	-3
  3896  01555A  9EE3               	bcf	plusw1,7,c
  3897  01555C                     l8301:
  3898                           
  3899                           ;stkvar	_exp @ sp[(-5)+4]
  3900  01555C  50E1               	movf	fsr1l,w,c
  3901  01555E  0FFF               	addlw	-1
  3902  015560  6ED9               	movwf	fsr2l,c
  3903  015562  50E2               	movf	fsr1h,w,c
  3904  015564  6EDA               	movwf	fsr2h,c
  3905  015566  0EFF               	movlw	255
  3906  015568  22DA               	addwfc	fsr2h,f,c
  3907  01556A  90D8               	bcf	status,0,c
  3908  01556C  32DF               	rrcf	indf2,f,c
  3909                           
  3910                           ;stkvar	_exp @ sp[(-5)+4]
  3911  01556E  0EFF               	movlw	-1
  3912  015570  006F FF8C  F040    	movff	plusw1,btemp+11
  3913  015576  0060  F100  F039   	movff	btemp+11,btemp+4
  3914  01557C  6A3A               	clrf	(btemp+5)^0,c
  3915  01557E  6A3B               	clrf	(btemp+6)^0,c
  3916  015580  6A3C               	clrf	(btemp+7)^0,c
  3917  015582  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  3918  015588  6A3B               	clrf	(btemp+6)^0,c
  3919  01558A  6A3A               	clrf	(btemp+5)^0,c
  3920  01558C  6A39               	clrf	(btemp+4)^0,c
  3921                           
  3922                           ;stkvar	_arg @ sp[(-5)+0]
  3923  01558E  50E1               	movf	fsr1l,w,c
  3924  015590  0FFB               	addlw	-5
  3925  015592  6ED9               	movwf	fsr2l,c
  3926  015594  50E2               	movf	fsr1h,w,c
  3927  015596  6EDA               	movwf	fsr2h,c
  3928  015598  0EFF               	movlw	255
  3929  01559A  22DA               	addwfc	fsr2h,f,c
  3930  01559C  5039               	movf	(btemp+4)^0,w,c
  3931  01559E  12DE               	iorwf	postinc2,f,c
  3932  0155A0  503A               	movf	(btemp+5)^0,w,c
  3933  0155A2  12DE               	iorwf	postinc2,f,c
  3934  0155A4  503B               	movf	(btemp+6)^0,w,c
  3935  0155A6  12DE               	iorwf	postinc2,f,c
  3936  0155A8  503C               	movf	(btemp+7)^0,w,c
  3937  0155AA  12DE               	iorwf	postinc2,f,c
  3938                           
  3939                           ;stkvar	_sign @ sp[(-5)+-1]
  3940  0155AC  0EFA               	movlw	-6
  3941  0155AE  50E3               	movf	plusw1,w,c
  3942  0155B0  B4D8               	btfsc	status,2,c
  3943  0155B2  D005               	goto	l8311
  3944                           
  3945                           ;stkvar	_val @ sp[(-5)+-5]
  3946  0155B4  0EF9               	movlw	-7
  3947  0155B6  AEE3               	btfss	plusw1,7,c
  3948  0155B8  D002               	goto	l8311
  3949                           
  3950                           ;stkvar	_arg @ sp[(-5)+0]
  3951  0155BA  0EFE               	movlw	-2
  3952  0155BC  8EE3               	bsf	plusw1,7,c
  3953  0155BE                     l8311:
  3954                           
  3955                           ;stkvar	_arg @ sp[(-5)+0]
  3956  0155BE  0EFB               	movlw	-5
  3957  0155C0  006F FF8C  F035    	movff	plusw1,btemp
  3958  0155C6  0EFC               	movlw	-4
  3959  0155C8  006F FF8C  F036    	movff	plusw1,btemp+1
  3960  0155CE  0EFD               	movlw	-3
  3961  0155D0  006F FF8C  F037    	movff	plusw1,btemp+2
  3962  0155D6  0EFE               	movlw	-2
  3963  0155D8  006F FF8C  F038    	movff	plusw1,btemp+3
  3964  0155DE                     l2621:
  3965                           
  3966                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  3967  0155DE  0EF6               	movlw	246
  3968  0155E0  26E1               	addwf	fsr1l,f,c
  3969  0155E2  0EFF               	movlw	255
  3970  0155E4  22E2               	addwfc	fsr1h,f,c
  3971  0155E6  0012               	return		;funcret
  3972  0155E8                     __end_of___xxtofl:
  3973                           	opt callstack 0
  3974                           
  3975 ;; *************** function _clear_adc_scan *****************
  3976 ;; Defined at:
  3977 ;;		line 55 in file "daq.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1  [STACK] void 
  3984 ;; Registers used:
  3985 ;;		None
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/4
  3988 ;;		On exit  : 3F/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    6
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text14
  4006  01804E                     __ptext14:
  4007                           	opt callstack 0
  4008  01804E                     _clear_adc_scan:
  4009                           	opt callstack 24
  4010                           
  4011                           ;daq.c: 57:  R.done = 0;
  4012                           
  4013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4014                           ;incstack = 0
  4015  01804E  0100               	movlb	0	; () banked
  4016  018050  6B81               	clrf	(_R+33)& (0+255),b	;volatile
  4017                           
  4018                           ; BSR set to: 0
  4019                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4020  018052  0012               	return		;funcret
  4021  018054                     __end_of_clear_adc_scan:
  4022                           	opt callstack 0
  4023                           
  4024 ;; *************** function _check_help *****************
  4025 ;; Defined at:
  4026 ;;		line 40 in file "mconfig.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  flipper         1  [STACK] _Bool 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1  [STACK] void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4035 ;; Tracked objects:
  4036 ;;		On entry : 3F/2
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:   18
  4047 ;; This function calls:
  4048 ;;		_StartTimer
  4049 ;;		_TimerDone
  4050 ;;		_display_help
  4051 ;;		_display_info
  4052 ;;		_get_vterm_ptr
  4053 ;;		_help_button
  4054 ;;		_mode_lamp_bright
  4055 ;;		_mode_lamp_dim
  4056 ;;		_set_display_info
  4057 ;;		_set_temp_display_help
  4058 ;;		_set_vterm
  4059 ;;		_sprintf
  4060 ;;		_update_lcd
  4061 ;;		_vterm_dump
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text15
  4068  0151D2                     __ptext15:
  4069                           	opt callstack 0
  4070  0151D2                     _check_help:
  4071                           	opt callstack 12
  4072                           
  4073                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4074                           
  4075                           ; BSR set to: 0
  4076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4077                           ;incstack = 0
  4078  0151D2  ECF2  F0BB         	call	_help_button	;wreg free
  4079  0151D6  5035               	movf	btemp^0,w,c
  4080  0151D8  B4D8               	btfsc	status,2,c
  4081  0151DA  D0D0               	goto	l9831
  4082  0151DC  EC17  F0C0         	call	_display_info	;wreg free
  4083  0151E0  0435               	decf	btemp^0,w,c
  4084  0151E2  B4D8               	btfsc	status,2,c
  4085  0151E4  D0CB               	goto	l9831
  4086                           
  4087                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4088  0151E6  0EDC               	movlw	220
  4089  0151E8  6EE6               	movwf	postinc1,c
  4090  0151EA  0E05               	movlw	5
  4091  0151EC  6EE6               	movwf	postinc1,c
  4092  0151EE  0E0B               	movlw	11
  4093  0151F0  6EE6               	movwf	postinc1,c
  4094  0151F2  ECD4  F0BB         	call	_StartTimer	;wreg free
  4095                           
  4096                           ;mconfig.c: 47:   if (V.debug)
  4097  0151F6  0102               	movlb	2	; () banked
  4098  0151F8  BBA8               	btfsc	(_V+168)& (0+255),5,b	;volatile
  4099                           
  4100                           ; BSR set to: 2
  4101                           ;mconfig.c: 48:    vterm_dump();
  4102  0151FA  ECA4  F0AF         	call	_vterm_dump	;wreg free
  4103                           
  4104                           ;mconfig.c: 50:   set_vterm(1);
  4105  0151FE  0E01               	movlw	1
  4106  015200  6EE6               	movwf	postinc1,c
  4107  015202  EC46  F0BF         	call	_set_vterm	;wreg free
  4108                           
  4109                           ; BSR set to: 4
  4110                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4111  015206  EC17  F0C0         	call	_display_info	;wreg free
  4112  01520A  5035               	movf	btemp^0,w,c
  4113  01520C  6EE6               	movwf	postinc1,c
  4114  01520E  ECD3  F0BF         	call	_set_temp_display_help	;wreg free
  4115                           
  4116                           ; BSR set to: 2
  4117                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4118  015212  0E01               	movlw	1
  4119  015214  6EE6               	movwf	postinc1,c
  4120  015216  ECFC  F0BE         	call	_set_display_info	;wreg free
  4121                           
  4122                           ;mconfig.c: 53:   if (flipper) {
  4123                           ;stkvar	_flipper @ sp[(0)+-1]
  4124  01521A  0EFF               	movlw	-1
  4125  01521C  50E3               	movf	plusw1,w,c
  4126  01521E  B4D8               	btfsc	status,2,c
  4127  015220  D019               	goto	l9819
  4128                           
  4129                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4130  015222  0EC3               	movlw	low STR_14
  4131  015224  6EE6               	movwf	postinc1,c
  4132  015226  0EFF               	movlw	high STR_14
  4133  015228  6EE6               	movwf	postinc1,c
  4134  01522A  0E2E               	movlw	low STR_16
  4135  01522C  6EE6               	movwf	postinc1,c
  4136  01522E  0EFF               	movlw	high STR_16
  4137  015230  6EE6               	movwf	postinc1,c
  4138  015232  0E01               	movlw	1
  4139  015234  6EE6               	movwf	postinc1,c
  4140  015236  0E00               	movlw	0
  4141  015238  6EE6               	movwf	postinc1,c
  4142  01523A  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4143  01523E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4144  015244  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4145  01524A  0E06               	movlw	6
  4146  01524C  6EE6               	movwf	postinc1,c
  4147  01524E  EC6A  F0B2         	call	_sprintf	;wreg free
  4148                           
  4149                           ;mconfig.c: 55:   } else {
  4150  015252  D018               	goto	l1553
  4151  015254                     l9819:
  4152                           
  4153                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4154  015254  0ED9               	movlw	low STR_15
  4155  015256  6EE6               	movwf	postinc1,c
  4156  015258  0EFF               	movlw	high STR_15
  4157  01525A  6EE6               	movwf	postinc1,c
  4158  01525C  0E2E               	movlw	low STR_16
  4159  01525E  6EE6               	movwf	postinc1,c
  4160  015260  0EFF               	movlw	high STR_16
  4161  015262  6EE6               	movwf	postinc1,c
  4162  015264  0E01               	movlw	1
  4163  015266  6EE6               	movwf	postinc1,c
  4164  015268  0E00               	movlw	0
  4165  01526A  6EE6               	movwf	postinc1,c
  4166  01526C  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4167  015270  0060  F0D7  FFE6   	movff	btemp,postinc1
  4168  015276  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4169  01527C  0E06               	movlw	6
  4170  01527E  6EE6               	movwf	postinc1,c
  4171  015280  EC6A  F0B2         	call	_sprintf	;wreg free
  4172  015284                     l1553:
  4173                           
  4174                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4175  015284  0102               	movlb	2	; () banked
  4176  015286  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4177  015288  32E8               	rrcf	wreg,f,c
  4178  01528A  32E8               	rrcf	wreg,f,c
  4179  01528C  0B03               	andlw	3
  4180  01528E  0D24               	mullw	36
  4181  015290  0E12               	movlw	18
  4182  015292  26F3               	addwf	243,f,c
  4183  015294  0E00               	movlw	0
  4184  015296  22F4               	addwfc	244,f,c
  4185  015298  0E73               	movlw	low _T
  4186  01529A  6E3F               	movwf	(btemp+10)^0,c
  4187  01529C  0EFE               	movlw	high _T
  4188  01529E  6E40               	movwf	(btemp+11)^0,c
  4189  0152A0  50F3               	movf	243,w,c
  4190  0152A2  263F               	addwf	(btemp+10)^0,f,c
  4191  0152A4  50F4               	movf	244,w,c
  4192  0152A6  2240               	addwfc	(btemp+11)^0,f,c
  4193  0152A8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4194  0152AE  0060  F103  FFE6   	movff	btemp+11,postinc1
  4195  0152B4  0ECF               	movlw	low STR_18
  4196  0152B6  6EE6               	movwf	postinc1,c
  4197  0152B8  0EFF               	movlw	high STR_18
  4198  0152BA  6EE6               	movwf	postinc1,c
  4199  0152BC  0E01               	movlw	1
  4200  0152BE  6EE6               	movwf	postinc1,c
  4201  0152C0  0E01               	movlw	1
  4202  0152C2  6EE6               	movwf	postinc1,c
  4203  0152C4  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4204  0152C8  0060  F0D7  FFE6   	movff	btemp,postinc1
  4205  0152CE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4206  0152D4  0E06               	movlw	6
  4207  0152D6  6EE6               	movwf	postinc1,c
  4208  0152D8  EC6A  F0B2         	call	_sprintf	;wreg free
  4209                           
  4210                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4211  0152DC  0102               	movlb	2	; () banked
  4212  0152DE  31A9               	rrcf	(_V+169)& (0+255),w,b	;volatile
  4213  0152E0  32E8               	rrcf	wreg,f,c
  4214  0152E2  32E8               	rrcf	wreg,f,c
  4215  0152E4  0B03               	andlw	3
  4216  0152E6  0D24               	mullw	36
  4217  0152E8  0E73               	movlw	low _T
  4218  0152EA  6E3F               	movwf	(btemp+10)^0,c
  4219  0152EC  0EFE               	movlw	high _T
  4220  0152EE  6E40               	movwf	(btemp+11)^0,c
  4221  0152F0  50F3               	movf	243,w,c
  4222  0152F2  263F               	addwf	(btemp+10)^0,f,c
  4223  0152F4  50F4               	movf	244,w,c
  4224  0152F6  2240               	addwfc	(btemp+11)^0,f,c
  4225  0152F8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4226  0152FE  0060  F103  FFE6   	movff	btemp+11,postinc1
  4227  015304  0ECF               	movlw	low STR_18
  4228  015306  6EE6               	movwf	postinc1,c
  4229  015308  0EFF               	movlw	high STR_18
  4230  01530A  6EE6               	movwf	postinc1,c
  4231  01530C  0E01               	movlw	1
  4232  01530E  6EE6               	movwf	postinc1,c
  4233  015310  0E02               	movlw	2
  4234  015312  6EE6               	movwf	postinc1,c
  4235  015314  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4236  015318  0060  F0D7  FFE6   	movff	btemp,postinc1
  4237  01531E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4238  015324  0E06               	movlw	6
  4239  015326  6EE6               	movwf	postinc1,c
  4240  015328  EC6A  F0B2         	call	_sprintf	;wreg free
  4241                           
  4242                           ;mconfig.c: 60:   V.help_id++;
  4243  01532C  EE20  F2A9         	lfsr	2,_V+169	;volatile
  4244  015330  30DF               	rrcf	223,w,c
  4245  015332  6E40               	movwf	(btemp+11)^0,c
  4246  015334  3240               	rrcf	(btemp+11)^0,f,c
  4247  015336  3040               	rrcf	(btemp+11)^0,w,c
  4248  015338  0B03               	andlw	3
  4249  01533A  6E40               	movwf	(btemp+11)^0,c
  4250  01533C  2A40               	incf	(btemp+11)^0,f,c
  4251  01533E  3640               	rlcf	(btemp+11)^0,f,c
  4252  015340  3640               	rlcf	(btemp+11)^0,f,c
  4253  015342  3640               	rlcf	(btemp+11)^0,f,c
  4254  015344  50DF               	movf	223,w,c
  4255  015346  1840               	xorwf	(btemp+11)^0,w,c
  4256  015348  0BE7               	andlw	-25
  4257  01534A  1840               	xorwf	(btemp+11)^0,w,c
  4258  01534C  6EDF               	movwf	223,c
  4259                           
  4260                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4261  01534E  0EB8               	movlw	184
  4262  015350  6EE6               	movwf	postinc1,c
  4263  015352  0E0B               	movlw	11
  4264  015354  6EE6               	movwf	postinc1,c
  4265  015356  0E09               	movlw	9
  4266  015358  6EE6               	movwf	postinc1,c
  4267  01535A  ECD4  F0BB         	call	_StartTimer	;wreg free
  4268                           
  4269                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4270  01535E  0EB8               	movlw	184
  4271  015360  6EE6               	movwf	postinc1,c
  4272  015362  0E0B               	movlw	11
  4273  015364  6EE6               	movwf	postinc1,c
  4274  015366  0E07               	movlw	7
  4275  015368  6EE6               	movwf	postinc1,c
  4276  01536A  ECD4  F0BB         	call	_StartTimer	;wreg free
  4277                           
  4278                           ;mconfig.c: 63:   mode_lamp_bright();
  4279  01536E  ECE2  F0BF         	call	_mode_lamp_bright	;wreg free
  4280                           
  4281                           ;mconfig.c: 64:   update_lcd(1);
  4282  015372  0E01               	movlw	1
  4283  015374  6EE6               	movwf	postinc1,c
  4284  015376  ECE3  F0B1         	call	_update_lcd	;wreg free
  4285                           
  4286                           ;mconfig.c: 65:  } else {
  4287  01537A  D032               	goto	l1557
  4288  01537C                     l9831:
  4289                           
  4290                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4291  01537C  0E09               	movlw	9
  4292  01537E  6EE6               	movwf	postinc1,c
  4293  015380  EC87  F0BE         	call	_TimerDone	;wreg free
  4294  015384  5035               	movf	btemp^0,w,c
  4295  015386  B4D8               	btfsc	status,2,c
  4296  015388  D02B               	goto	l1557
  4297                           
  4298                           ;mconfig.c: 67:    set_vterm(0);
  4299  01538A  0E00               	movlw	0
  4300  01538C  6EE6               	movwf	postinc1,c
  4301  01538E  EC46  F0BF         	call	_set_vterm	;wreg free
  4302                           
  4303                           ; BSR set to: 4
  4304                           ;mconfig.c: 68:    V.help = 0;
  4305  015392  0102               	movlb	2	; () banked
  4306  015394  9DA8               	bcf	(_V+168)& (0+255),6,b	;volatile
  4307                           
  4308                           ; BSR set to: 2
  4309                           ;mconfig.c: 69:    set_display_info(display_help());
  4310  015396  EC1B  F0C0         	call	_display_help	;wreg free
  4311  01539A  5035               	movf	btemp^0,w,c
  4312  01539C  6EE6               	movwf	postinc1,c
  4313  01539E  ECFC  F0BE         	call	_set_display_info	;wreg free
  4314                           
  4315                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4316  0153A2  0060  FA7F  FFE6   	movff	_V+159,postinc1
  4317  0153A8  0060  FA83  FFE6   	movff	_V+160,postinc1
  4318  0153AE  EC7B  F0BF         	call	_mode_lamp_dim	;wreg free
  4319                           
  4320                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4321  0153B2  0E0B               	movlw	11
  4322  0153B4  6EE6               	movwf	postinc1,c
  4323  0153B6  EC87  F0BE         	call	_TimerDone	;wreg free
  4324  0153BA  5035               	movf	btemp^0,w,c
  4325  0153BC  B4D8               	btfsc	status,2,c
  4326  0153BE  D010               	goto	l1557
  4327                           
  4328                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4329  0153C0  0102               	movlb	2	; () banked
  4330  0153C2  51BC               	movf	(_V+188)& (0+255),w,b	;volatile
  4331  0153C4  A4D8               	btfss	status,2,c
  4332  0153C6  D002               	goto	u9790
  4333  0153C8  0E01               	movlw	1
  4334  0153CA  D001               	goto	u9800
  4335  0153CC                     u9790:
  4336  0153CC  0E00               	movlw	0
  4337  0153CE                     u9800:
  4338  0153CE  6FBC               	movwf	(_V+188)& (0+255),b	;volatile
  4339                           
  4340                           ; BSR set to: 2
  4341                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4342  0153D0  0EDC               	movlw	220
  4343  0153D2  6EE6               	movwf	postinc1,c
  4344  0153D4  0E05               	movlw	5
  4345  0153D6  6EE6               	movwf	postinc1,c
  4346  0153D8  0E0B               	movlw	11
  4347  0153DA  6EE6               	movwf	postinc1,c
  4348  0153DC  ECD4  F0BB         	call	_StartTimer	;wreg free
  4349  0153E0                     l1557:
  4350                           
  4351                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4352  0153E0  52E5               	movf	postdec1,f,c
  4353  0153E2  0012               	return		;funcret
  4354  0153E4                     __end_of_check_help:
  4355                           	opt callstack 0
  4356                           
  4357 ;; *************** function _vterm_dump *****************
  4358 ;; Defined at:
  4359 ;;		line 118 in file "mconfig.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1  [STACK] void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4368 ;; Tracked objects:
  4369 ;;		On entry : 3F/2
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:   17
  4380 ;; This function calls:
  4381 ;;		_WaitMs
  4382 ;;		_eaDogM_WriteStringAtPos
  4383 ;;		_get_vterm_ptr
  4384 ;;		_sprintf
  4385 ;;		_wait_lcd_done
  4386 ;; This function is called by:
  4387 ;;		_check_help
  4388 ;; This function uses a reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text16
  4392  015F48                     __ptext16:
  4393                           	opt callstack 0
  4394  015F48                     _vterm_dump:
  4395                           	opt callstack 12
  4396                           
  4397                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4398                           
  4399                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4400                           ;incstack = 0
  4401  015F48  0E01               	movlw	1
  4402  015F4A  6EE6               	movwf	postinc1,c
  4403  015F4C  0E00               	movlw	0
  4404  015F4E  6EE6               	movwf	postinc1,c
  4405  015F50  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4406  015F54  0060  F0D7  FFE6   	movff	btemp,postinc1
  4407  015F5A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4408  015F60  0E00               	movlw	0
  4409  015F62  6EE6               	movwf	postinc1,c
  4410  015F64  0E00               	movlw	0
  4411  015F66  6EE6               	movwf	postinc1,c
  4412  015F68  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4413  015F6C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4414  015F72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4415  015F78  0E98               	movlw	low STR_20
  4416  015F7A  6EE6               	movwf	postinc1,c
  4417  015F7C  0EFF               	movlw	high STR_20
  4418  015F7E  6EE6               	movwf	postinc1,c
  4419  015F80  0E01               	movlw	low (_V+1)
  4420  015F82  6EE6               	movwf	postinc1,c
  4421  015F84  0E02               	movlw	high (_V+1)
  4422  015F86  6EE6               	movwf	postinc1,c
  4423  015F88  0E08               	movlw	8
  4424  015F8A  6EE6               	movwf	postinc1,c
  4425  015F8C  EC6A  F0B2         	call	_sprintf	;wreg free
  4426                           
  4427                           ;mconfig.c: 121:  wait_lcd_done();
  4428  015F90  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4432  015F94  0E01               	movlw	low (_V+1)
  4433  015F96  6EE6               	movwf	postinc1,c
  4434  015F98  0E02               	movlw	high (_V+1)
  4435  015F9A  6EE6               	movwf	postinc1,c
  4436  015F9C  0E00               	movlw	0
  4437  015F9E  6EE6               	movwf	postinc1,c
  4438  015FA0  0E00               	movlw	0
  4439  015FA2  6EE6               	movwf	postinc1,c
  4440  015FA4  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4441                           
  4442                           ; BSR set to: 59
  4443                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4444  015FA8  0E01               	movlw	1
  4445  015FAA  6EE6               	movwf	postinc1,c
  4446  015FAC  0E01               	movlw	1
  4447  015FAE  6EE6               	movwf	postinc1,c
  4448  015FB0  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4449  015FB4  0060  F0D7  FFE6   	movff	btemp,postinc1
  4450  015FBA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4451  015FC0  0E00               	movlw	0
  4452  015FC2  6EE6               	movwf	postinc1,c
  4453  015FC4  0E01               	movlw	1
  4454  015FC6  6EE6               	movwf	postinc1,c
  4455  015FC8  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4456  015FCC  0060  F0D7  FFE6   	movff	btemp,postinc1
  4457  015FD2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4458  015FD8  0E98               	movlw	low STR_20
  4459  015FDA  6EE6               	movwf	postinc1,c
  4460  015FDC  0EFF               	movlw	high STR_20
  4461  015FDE  6EE6               	movwf	postinc1,c
  4462  015FE0  0E01               	movlw	low (_V+1)
  4463  015FE2  6EE6               	movwf	postinc1,c
  4464  015FE4  0E02               	movlw	high (_V+1)
  4465  015FE6  6EE6               	movwf	postinc1,c
  4466  015FE8  0E08               	movlw	8
  4467  015FEA  6EE6               	movwf	postinc1,c
  4468  015FEC  EC6A  F0B2         	call	_sprintf	;wreg free
  4469                           
  4470                           ;mconfig.c: 124:  wait_lcd_done();
  4471  015FF0  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  4472                           
  4473                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  4474  015FF4  0E01               	movlw	low (_V+1)
  4475  015FF6  6EE6               	movwf	postinc1,c
  4476  015FF8  0E02               	movlw	high (_V+1)
  4477  015FFA  6EE6               	movwf	postinc1,c
  4478  015FFC  0E00               	movlw	0
  4479  015FFE  6EE6               	movwf	postinc1,c
  4480  016000  0E01               	movlw	1
  4481  016002  6EE6               	movwf	postinc1,c
  4482  016004  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4483                           
  4484                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  4485  016008  0E01               	movlw	1
  4486  01600A  6EE6               	movwf	postinc1,c
  4487  01600C  0E02               	movlw	2
  4488  01600E  6EE6               	movwf	postinc1,c
  4489  016010  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4490  016014  0060  F0D7  FFE6   	movff	btemp,postinc1
  4491  01601A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4492  016020  0E00               	movlw	0
  4493  016022  6EE6               	movwf	postinc1,c
  4494  016024  0E02               	movlw	2
  4495  016026  6EE6               	movwf	postinc1,c
  4496  016028  ECDC  F0BC         	call	_get_vterm_ptr	;wreg free
  4497  01602C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4498  016032  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4499  016038  0E98               	movlw	low STR_20
  4500  01603A  6EE6               	movwf	postinc1,c
  4501  01603C  0EFF               	movlw	high STR_20
  4502  01603E  6EE6               	movwf	postinc1,c
  4503  016040  0E01               	movlw	low (_V+1)
  4504  016042  6EE6               	movwf	postinc1,c
  4505  016044  0E02               	movlw	high (_V+1)
  4506  016046  6EE6               	movwf	postinc1,c
  4507  016048  0E08               	movlw	8
  4508  01604A  6EE6               	movwf	postinc1,c
  4509  01604C  EC6A  F0B2         	call	_sprintf	;wreg free
  4510                           
  4511                           ;mconfig.c: 127:  wait_lcd_done();
  4512  016050  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  4516  016054  0E01               	movlw	low (_V+1)
  4517  016056  6EE6               	movwf	postinc1,c
  4518  016058  0E02               	movlw	high (_V+1)
  4519  01605A  6EE6               	movwf	postinc1,c
  4520  01605C  0E00               	movlw	0
  4521  01605E  6EE6               	movwf	postinc1,c
  4522  016060  0E02               	movlw	2
  4523  016062  6EE6               	movwf	postinc1,c
  4524  016064  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  4525                           
  4526                           ; BSR set to: 59
  4527                           ;mconfig.c: 129:  WaitMs(3000);
  4528  016068  0EB8               	movlw	184
  4529  01606A  6EE6               	movwf	postinc1,c
  4530  01606C  0E0B               	movlw	11
  4531  01606E  6EE6               	movwf	postinc1,c
  4532  016070  EC2A  F0BC         	call	_WaitMs	;wreg free
  4533                           
  4534                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4535  016074  0012               	return		;funcret
  4536  016076                     __end_of_vterm_dump:
  4537                           	opt callstack 0
  4538                           
  4539 ;; *************** function _sprintf *****************
  4540 ;; Defined at:
  4541 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  s               2  [STACK] PTR unsigned char 
  4544 ;;		 -> D.lcd(216), D(218), V(189), 
  4545 ;;  fmt             2  [STACK] PTR const unsigned char 
  4546 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  4547 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  4548 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  4549 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  4550 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  4551 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  f               6  [STACK] struct _IO_FILE
  4554 ;;  ap              2  [STACK] PTR void [1]
  4555 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4556 ;;  ret             2    0        int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2  [STACK] int 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/4
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:   14
  4573 ;; This function calls:
  4574 ;;		_vfprintf
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;;		_check_help
  4578 ;;		_vterm_dump
  4579 ;; This function uses a reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text17
  4583  0164D4                     __ptext17:
  4584                           	opt callstack 0
  4585  0164D4                     _sprintf:
  4586                           	opt callstack 0
  4587                           
  4588                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4589  0164D4  0E08               	movlw	8
  4590  0164D6  26E1               	addwf	fsr1l,f,c
  4591  0164D8  0E00               	movlw	0
  4592  0164DA  22E2               	addwfc	fsr1h,f,c
  4593                           
  4594                           ;incstack = 0
  4595  0164DC  0EFE               	movlw	254
  4596  0164DE  6E3F               	movwf	(btemp+10)^0,c
  4597  0164E0  0EFF               	movlw	255
  4598  0164E2  6E40               	movwf	(btemp+11)^0,c
  4599                           
  4600                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  4601  0164E4  0EF5               	movlw	245
  4602  0164E6  24E1               	addwf	fsr1l,w,c
  4603  0164E8  6E3D               	movwf	(btemp+8)^0,c
  4604  0164EA  0EFF               	movlw	255
  4605  0164EC  20E2               	addwfc	fsr1h,w,c
  4606  0164EE  6E3E               	movwf	(btemp+9)^0,c
  4607  0164F0  503F               	movf	(btemp+10)^0,w,c
  4608  0164F2  263D               	addwf	(btemp+8)^0,f,c
  4609  0164F4  5040               	movf	(btemp+11)^0,w,c
  4610  0164F6  223E               	addwfc	(btemp+9)^0,f,c
  4611                           
  4612                           ;stkvar	_ap @ sp[(-8)+6]
  4613  0164F8  0EFF               	movlw	-1
  4614  0164FA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4615  016500  0EFE               	movlw	-2
  4616  016502  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4617                           
  4618                           ;stkvar	_s @ sp[(-8)+-3]
  4619  016508  0EF5               	movlw	-11
  4620  01650A  006F FF8C  F03F    	movff	plusw1,btemp+10
  4621  016510  0EF6               	movlw	-10
  4622  016512  006F FF8C  F040    	movff	plusw1,btemp+11
  4623                           
  4624                           ;stkvar	_f @ sp[(-8)+0]
  4625  016518  0EF9               	movlw	-7
  4626  01651A  0060  F103  FFE3   	movff	btemp+11,plusw1
  4627  016520  0EF8               	movlw	-8
  4628  016522  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4629                           
  4630                           ;stkvar	_f @ sp[(-8)+0]
  4631  016528  0EFA               	movlw	250
  4632  01652A  24E1               	addwf	fsr1l,w,c
  4633  01652C  6ED9               	movwf	fsr2l,c
  4634  01652E  0EFF               	movlw	255
  4635  016530  20E2               	addwfc	fsr1h,w,c
  4636  016532  6EDA               	movwf	fsr2h,c
  4637  016534  0E00               	movlw	0
  4638  016536  6EDE               	movwf	postinc2,c
  4639  016538  0E00               	movlw	0
  4640  01653A  6EDD               	movwf	postdec2,c
  4641                           
  4642                           ;stkvar	_f @ sp[(-8)+0]
  4643  01653C  0EFC               	movlw	252
  4644  01653E  24E1               	addwf	fsr1l,w,c
  4645  016540  6ED9               	movwf	fsr2l,c
  4646  016542  0EFF               	movlw	255
  4647  016544  20E2               	addwfc	fsr1h,w,c
  4648  016546  6EDA               	movwf	fsr2h,c
  4649  016548  0E00               	movlw	0
  4650  01654A  6EDE               	movwf	postinc2,c
  4651  01654C  0E00               	movlw	0
  4652  01654E  6EDD               	movwf	postdec2,c
  4653                           
  4654                           ;stkvar	_ap @ sp[(-8)+6]
  4655  016550  0EFE               	movlw	254
  4656  016552  24E1               	addwf	fsr1l,w,c
  4657  016554  6E35               	movwf	btemp^0,c
  4658  016556  0EFF               	movlw	255
  4659  016558  20E2               	addwfc	fsr1h,w,c
  4660  01655A  6E36               	movwf	(btemp+1)^0,c
  4661  01655C  0060  F0D7  FFE6   	movff	btemp,postinc1
  4662  016562  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4663                           
  4664                           ;stkvar	_fmt @ sp[(-10)+-5]
  4665  016568  0EF1               	movlw	-15
  4666  01656A  006F FF8F FFE6     	movff	plusw1,postinc1
  4667  016570  006F FF8F FFE6     	movff	plusw1,postinc1
  4668                           
  4669                           ;stkvar	_f @ sp[(-12)+0]
  4670  016576  0EF4               	movlw	244
  4671  016578  24E1               	addwf	fsr1l,w,c
  4672  01657A  6E35               	movwf	btemp^0,c
  4673  01657C  0EFF               	movlw	255
  4674  01657E  20E2               	addwfc	fsr1h,w,c
  4675  016580  6E36               	movwf	(btemp+1)^0,c
  4676  016582  0060  F0D7  FFE6   	movff	btemp,postinc1
  4677  016588  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4678  01658E  EC47  F0B5         	call	_vfprintf	;wreg free
  4679                           
  4680                           ;stkvar	_f @ sp[(-8)+0]
  4681  016592  0EFA               	movlw	250
  4682  016594  24E1               	addwf	fsr1l,w,c
  4683  016596  6ED9               	movwf	fsr2l,c
  4684  016598  0EFF               	movlw	255
  4685  01659A  20E2               	addwfc	fsr1h,w,c
  4686  01659C  6EDA               	movwf	fsr2h,c
  4687  01659E  006F FF78  F03F    	movff	postinc2,btemp+10
  4688  0165A4  006F FF74  F040    	movff	postdec2,btemp+11
  4689                           
  4690                           ;stkvar	_s @ sp[(-8)+-3]
  4691  0165AA  0EF5               	movlw	-11
  4692  0165AC  006F FF8C  F03D    	movff	plusw1,btemp+8
  4693  0165B2  0EF6               	movlw	-10
  4694  0165B4  006F FF8C  F03E    	movff	plusw1,btemp+9
  4695  0165BA  503F               	movf	(btemp+10)^0,w,c
  4696  0165BC  243D               	addwf	(btemp+8)^0,w,c
  4697  0165BE  6ED9               	movwf	fsr2l,c
  4698  0165C0  5040               	movf	(btemp+11)^0,w,c
  4699  0165C2  203E               	addwfc	(btemp+9)^0,w,c
  4700  0165C4  6EDA               	movwf	fsr2h,c
  4701  0165C6  0E00               	movlw	0
  4702  0165C8  6EDF               	movwf	indf2,c
  4703                           
  4704                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 4, vargsize = 0
  4705  0165CA  0EF8               	movlw	248
  4706  0165CC  26E1               	addwf	fsr1l,f,c
  4707  0165CE  0EFF               	movlw	255
  4708  0165D0  22E2               	addwfc	fsr1h,f,c
  4709  0165D2  52E5               	movf	postdec1,f,c
  4710  0165D4  50E7               	movf	indf1,w,c
  4711  0165D6  5EE1               	subwf	fsr1l,f,c
  4712  0165D8  0E00               	movlw	0
  4713  0165DA  5AE2               	subwfb	fsr1h,f,c
  4714  0165DC  0012               	return		;funcret
  4715  0165DE                     __end_of_sprintf:
  4716                           	opt callstack 0
  4717                           
  4718 ;; *************** function _get_vterm_ptr *****************
  4719 ;; Defined at:
  4720 ;;		line 113 in file "mconfig.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;  line            1  [STACK] unsigned char 
  4723 ;;  vterm           1  [STACK] unsigned char 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  2  [STACK] PTR unsigned char 
  4728 ;; Registers used:
  4729 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/4
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used:    1
  4741 ;; Hardware stack levels required when called:    6
  4742 ;; This function calls:
  4743 ;;		Nothing
  4744 ;; This function is called by:
  4745 ;;		_main
  4746 ;;		_check_help
  4747 ;;		_vterm_dump
  4748 ;; This function uses a reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text18
  4752  0179B8                     __ptext18:
  4753                           	opt callstack 0
  4754  0179B8                     _get_vterm_ptr:
  4755                           	opt callstack 24
  4756                           
  4757                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  4758                           ;stkvar	_vterm @ sp[(0)+-2]
  4759                           
  4760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4761                           ;incstack = 0
  4762  0179B8  0EFE               	movlw	-2
  4763  0179BA  50E3               	movf	plusw1,w,c
  4764  0179BC  0B03               	andlw	3
  4765  0179BE  0D36               	mullw	54
  4766  0179C0  0E00               	movlw	low _D
  4767  0179C2  6E35               	movwf	btemp^0,c
  4768  0179C4  0E04               	movlw	high _D
  4769  0179C6  6E36               	movwf	(btemp+1)^0,c
  4770  0179C8  50F3               	movf	243,w,c
  4771  0179CA  2635               	addwf	btemp^0,f,c
  4772  0179CC  50F4               	movf	244,w,c
  4773  0179CE  2236               	addwfc	(btemp+1)^0,f,c
  4774                           
  4775                           ;stkvar	_line @ sp[(0)+-1]
  4776  0179D0  0EFF               	movlw	-1
  4777  0179D2  50E3               	movf	plusw1,w,c
  4778  0179D4  0B03               	andlw	3
  4779  0179D6  0D12               	mullw	18
  4780  0179D8  50F3               	movf	243,w,c
  4781  0179DA  2635               	addwf	btemp^0,f,c
  4782  0179DC  50F4               	movf	244,w,c
  4783  0179DE  2236               	addwfc	(btemp+1)^0,f,c
  4784                           
  4785                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4786  0179E0  52E5               	movf	postdec1,f,c
  4787  0179E2  52E5               	movf	postdec1,f,c
  4788  0179E4  0012               	return		;funcret
  4789  0179E6                     __end_of_get_vterm_ptr:
  4790                           	opt callstack 0
  4791                           
  4792 ;; *************** function _WaitMs *****************
  4793 ;; Defined at:
  4794 ;;		line 32 in file "timers.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  numMilliseco    2  [STACK] const unsigned short 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1  [STACK] void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/2
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    7
  4815 ;; This function calls:
  4816 ;;		_StartTimer
  4817 ;;		_TimerDone
  4818 ;; This function is called by:
  4819 ;;		_main
  4820 ;;		_vterm_dump
  4821 ;; This function uses a reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text19
  4825  017854                     __ptext19:
  4826                           	opt callstack 0
  4827  017854                     _WaitMs:
  4828                           	opt callstack 21
  4829                           
  4830                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  4831                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4832                           
  4833                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4834                           ;incstack = 0
  4835  017854  0EFE               	movlw	-2
  4836  017856  006F FF8F FFE6     	movff	plusw1,postinc1
  4837  01785C  006F FF8F FFE6     	movff	plusw1,postinc1
  4838  017862  0E00               	movlw	0
  4839  017864  6EE6               	movwf	postinc1,c
  4840  017866  ECD4  F0BB         	call	_StartTimer	;wreg free
  4841                           
  4842                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4843  01786A  D005               	goto	l7763
  4844  01786C                     l1483:
  4845                           
  4846                           ;timers.c: 36:   __nop();
  4847  01786C  F000               	nop	
  4848                           
  4849                           ;timers.c: 37:   __nop();
  4850  01786E  F000               	nop	
  4851                           
  4852                           ;timers.c: 38:   __nop();
  4853  017870  F000               	nop	
  4854                           
  4855                           ;timers.c: 39:   __nop();
  4856  017872  F000               	nop	
  4857  017874  0004               	clrwdt		;# 
  4858  017876                     l7763:
  4859                           
  4860                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  4861  017876  0E00               	movlw	0
  4862  017878  6EE6               	movwf	postinc1,c
  4863  01787A  EC87  F0BE         	call	_TimerDone	;wreg free
  4864  01787E  5035               	movf	btemp^0,w,c
  4865  017880  B4D8               	btfsc	status,2,c
  4866  017882  D7F4               	goto	l1483
  4867                           
  4868                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4869  017884  52E5               	movf	postdec1,f,c
  4870  017886  52E5               	movf	postdec1,f,c
  4871  017888  0012               	return		;funcret
  4872  01788A                     __end_of_WaitMs:
  4873                           	opt callstack 0
  4874                           
  4875 ;; *************** function _update_lcd *****************
  4876 ;; Defined at:
  4877 ;;		line 82 in file "mconfig.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  vterm           1  [STACK] unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1  [STACK] unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/4
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:   17
  4898 ;; This function calls:
  4899 ;;		_eaDogM_WriteStringAtPos
  4900 ;;		_wait_lcd_done
  4901 ;; This function is called by:
  4902 ;;		_main
  4903 ;;		_check_help
  4904 ;; This function uses a reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text20
  4908  0163C6                     __ptext20:
  4909                           	opt callstack 0
  4910  0163C6                     _update_lcd:
  4911                           	opt callstack 13
  4912                           
  4913                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  4914                           ;stkvar	_vterm @ sp[(0)+-1]
  4915                           
  4916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4917                           ;incstack = 0
  4918  0163C6  0EFF               	movlw	-1
  4919  0163C8  006F FF8C  F035    	movff	plusw1,btemp
  4920  0163CE  0E03               	movlw	3
  4921  0163D0  1635               	andwf	btemp^0,f,c
  4922  0163D2  0EFF               	movlw	-1
  4923  0163D4  0060  F0D7  FFE3   	movff	btemp,plusw1
  4924                           
  4925                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  4926  0163DA  0104               	movlb	4	; () banked
  4927  0163DC  A1D8               	btfss	(_D+216)& (0+255),0,b
  4928  0163DE  D004               	goto	l9703
  4929                           
  4930                           ; BSR set to: 4
  4931                           ;stkvar	_vterm @ sp[(0)+-1]
  4932  0163E0  0EFF               	movlw	-1
  4933  0163E2  50E3               	movf	plusw1,w,c
  4934  0163E4  B4D8               	btfsc	status,2,c
  4935  0163E6  D074               	goto	l1561
  4936  0163E8                     l9703:
  4937                           
  4938                           ; BSR set to: 4
  4939                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  4940                           ;stkvar	_vterm @ sp[(0)+-1]
  4941  0163E8  0EFF               	movlw	-1
  4942  0163EA  50E3               	movf	plusw1,w,c
  4943  0163EC  0D36               	mullw	54
  4944  0163EE  0E10               	movlw	low (_D+16)
  4945  0163F0  24F3               	addwf	243,w,c
  4946  0163F2  6ED9               	movwf	fsr2l,c
  4947  0163F4  0E04               	movlw	high (_D+16)
  4948  0163F6  20F4               	addwfc	prodh,w,c
  4949  0163F8  6EDA               	movwf	fsr2h,c
  4950  0163FA  0E00               	movlw	0
  4951  0163FC  6EDF               	movwf	indf2,c
  4952                           
  4953                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  4954                           ;stkvar	_vterm @ sp[(0)+-1]
  4955  0163FE  0EFF               	movlw	-1
  4956  016400  50E3               	movf	plusw1,w,c
  4957  016402  0D36               	mullw	54
  4958  016404  0E22               	movlw	low (_D+34)
  4959  016406  24F3               	addwf	243,w,c
  4960  016408  6ED9               	movwf	fsr2l,c
  4961  01640A  0E04               	movlw	high (_D+34)
  4962  01640C  20F4               	addwfc	prodh,w,c
  4963  01640E  6EDA               	movwf	fsr2h,c
  4964  016410  0E00               	movlw	0
  4965  016412  6EDF               	movwf	indf2,c
  4966                           
  4967                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  4968                           ;stkvar	_vterm @ sp[(0)+-1]
  4969  016414  0EFF               	movlw	-1
  4970  016416  50E3               	movf	plusw1,w,c
  4971  016418  0D36               	mullw	54
  4972  01641A  0E34               	movlw	low (_D+52)
  4973  01641C  24F3               	addwf	243,w,c
  4974  01641E  6ED9               	movwf	fsr2l,c
  4975  016420  0E04               	movlw	high (_D+52)
  4976  016422  20F4               	addwfc	prodh,w,c
  4977  016424  6EDA               	movwf	fsr2h,c
  4978  016426  0E00               	movlw	0
  4979  016428  6EDF               	movwf	indf2,c
  4980                           
  4981                           ; BSR set to: 4
  4982                           ;mconfig.c: 92:  wait_lcd_done();
  4983  01642A  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  4987                           ;stkvar	_vterm @ sp[(0)+-1]
  4988  01642E  0EFF               	movlw	-1
  4989  016430  50E3               	movf	plusw1,w,c
  4990  016432  0D36               	mullw	54
  4991  016434  0E00               	movlw	low _D
  4992  016436  6E3F               	movwf	(btemp+10)^0,c
  4993  016438  0E04               	movlw	high _D
  4994  01643A  6E40               	movwf	(btemp+11)^0,c
  4995  01643C  50F3               	movf	243,w,c
  4996  01643E  263F               	addwf	(btemp+10)^0,f,c
  4997  016440  50F4               	movf	244,w,c
  4998  016442  2240               	addwfc	(btemp+11)^0,f,c
  4999  016444  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5000  01644A  0060  F103  FFE6   	movff	btemp+11,postinc1
  5001  016450  0E00               	movlw	0
  5002  016452  6EE6               	movwf	postinc1,c
  5003  016454  0E00               	movlw	0
  5004  016456  6EE6               	movwf	postinc1,c
  5005  016458  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5006                           
  5007                           ; BSR set to: 59
  5008                           ;mconfig.c: 94:  wait_lcd_done();
  5009  01645C  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5013                           ;stkvar	_vterm @ sp[(0)+-1]
  5014  016460  0EFF               	movlw	-1
  5015  016462  50E3               	movf	plusw1,w,c
  5016  016464  0D36               	mullw	54
  5017  016466  0E00               	movlw	low _D
  5018  016468  6E3F               	movwf	(btemp+10)^0,c
  5019  01646A  0E04               	movlw	high _D
  5020  01646C  6E40               	movwf	(btemp+11)^0,c
  5021  01646E  0E12               	movlw	18
  5022  016470  263F               	addwf	(btemp+10)^0,f,c
  5023  016472  0E00               	movlw	0
  5024  016474  2240               	addwfc	(btemp+11)^0,f,c
  5025  016476  50F3               	movf	243,w,c
  5026  016478  263F               	addwf	(btemp+10)^0,f,c
  5027  01647A  50F4               	movf	244,w,c
  5028  01647C  2240               	addwfc	(btemp+11)^0,f,c
  5029  01647E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5030  016484  0060  F103  FFE6   	movff	btemp+11,postinc1
  5031  01648A  0E00               	movlw	0
  5032  01648C  6EE6               	movwf	postinc1,c
  5033  01648E  0E01               	movlw	1
  5034  016490  6EE6               	movwf	postinc1,c
  5035  016492  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5036                           
  5037                           ; BSR set to: 59
  5038                           ;mconfig.c: 96:  wait_lcd_done();
  5039  016496  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5043                           ;stkvar	_vterm @ sp[(0)+-1]
  5044  01649A  0EFF               	movlw	-1
  5045  01649C  50E3               	movf	plusw1,w,c
  5046  01649E  0D36               	mullw	54
  5047  0164A0  0E00               	movlw	low _D
  5048  0164A2  6E3F               	movwf	(btemp+10)^0,c
  5049  0164A4  0E04               	movlw	high _D
  5050  0164A6  6E40               	movwf	(btemp+11)^0,c
  5051  0164A8  0E24               	movlw	36
  5052  0164AA  263F               	addwf	(btemp+10)^0,f,c
  5053  0164AC  0E00               	movlw	0
  5054  0164AE  2240               	addwfc	(btemp+11)^0,f,c
  5055  0164B0  50F3               	movf	243,w,c
  5056  0164B2  263F               	addwf	(btemp+10)^0,f,c
  5057  0164B4  50F4               	movf	244,w,c
  5058  0164B6  2240               	addwfc	(btemp+11)^0,f,c
  5059  0164B8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5060  0164BE  0060  F103  FFE6   	movff	btemp+11,postinc1
  5061  0164C4  0E00               	movlw	0
  5062  0164C6  6EE6               	movwf	postinc1,c
  5063  0164C8  0E02               	movlw	2
  5064  0164CA  6EE6               	movwf	postinc1,c
  5065  0164CC  EC45  F0BC         	call	_eaDogM_WriteStringAtPos	;wreg free
  5066  0164D0                     l1561:
  5067                           
  5068                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5069  0164D0  52E5               	movf	postdec1,f,c
  5070  0164D2  0012               	return		;funcret
  5071  0164D4                     __end_of_update_lcd:
  5072                           	opt callstack 0
  5073                           
  5074 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5075 ;; Defined at:
  5076 ;;		line 252 in file "eadog.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  r               1  [STACK] const unsigned char 
  5079 ;;  c               1  [STACK] const unsigned char 
  5080 ;;  strPtr          2  [STACK] PTR unsigned char 
  5081 ;;		 -> D.lcd(216), D(218), V(189), 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1  [STACK] void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5088 ;; Tracked objects:
  5089 ;;		On entry : 3F/0
  5090 ;;		On exit  : 3F/3B
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:   16
  5100 ;; This function calls:
  5101 ;;		_eaDogM_WriteString
  5102 ;;		_send_lcd_cmd_dma
  5103 ;; This function is called by:
  5104 ;;		_update_lcd
  5105 ;;		_vterm_dump
  5106 ;; This function uses a reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text21
  5110  01788A                     __ptext21:
  5111                           	opt callstack 0
  5112  01788A                     _eaDogM_WriteStringAtPos:
  5113                           	opt callstack 13
  5114                           
  5115                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5116                           ;stkvar	_c @ sp[(0)+-2]
  5117                           
  5118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5119                           ;incstack = 0
  5120  01788A  0EFE               	movlw	-2
  5121  01788C  006F FF8C  F040    	movff	plusw1,btemp+11
  5122                           
  5123                           ;stkvar	_r @ sp[(0)+-1]
  5124  017892  0EFF               	movlw	-1
  5125  017894  50E3               	movf	plusw1,w,c
  5126  017896  0D10               	mullw	16
  5127  017898  50F3               	movf	243,w,c
  5128  01789A  2440               	addwf	(btemp+11)^0,w,c
  5129  01789C  0F80               	addlw	128
  5130  01789E  6EE6               	movwf	postinc1,c
  5131  0178A0  EC4C  F0BA         	call	_send_lcd_cmd_dma	;wreg free
  5132                           
  5133                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5134                           ;stkvar	_strPtr @ sp[(0)+-4]
  5135  0178A4  0EFC               	movlw	-4
  5136  0178A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5137  0178AC  006F FF8F FFE6     	movff	plusw1,postinc1
  5138  0178B2  EC9B  F0B5         	call	_eaDogM_WriteString	;wreg free
  5139                           
  5140                           ; BSR set to: 59
  5141                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5142  0178B6  52E5               	movf	postdec1,f,c
  5143  0178B8  52E5               	movf	postdec1,f,c
  5144  0178BA  52E5               	movf	postdec1,f,c
  5145  0178BC  52E5               	movf	postdec1,f,c
  5146  0178BE  0012               	return		;funcret
  5147  0178C0                     __end_of_eaDogM_WriteStringAtPos:
  5148                           	opt callstack 0
  5149                           
  5150 ;; *************** function _send_lcd_cmd_dma *****************
  5151 ;; Defined at:
  5152 ;;		line 205 in file "eadog.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  strPtr          1  [STACK] unsigned char 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1  [STACK] void 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/3D
  5163 ;;		On exit  : 3F/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:   15
  5173 ;; This function calls:
  5174 ;;		_printf
  5175 ;;		_ringBufS_flush
  5176 ;;		_start_lcd
  5177 ;;		_wait_lcd_done
  5178 ;;		_wait_lcd_set
  5179 ;; This function is called by:
  5180 ;;		_eaDogM_WriteCommand
  5181 ;;		_eaDogM_WriteStringAtPos
  5182 ;; This function uses a reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text22
  5186  017498                     __ptext22:
  5187                           	opt callstack 0
  5188  017498                     _send_lcd_cmd_dma:
  5189                           	opt callstack 13
  5190                           
  5191                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5192                           
  5193                           ; BSR set to: 59
  5194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5195                           ;incstack = 0
  5196  017498  EC2A  F0C0         	call	_wait_lcd_set	;wreg free
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5200  01749C  0E00               	movlw	0
  5201  01749E  6EE6               	movwf	postinc1,c
  5202  0174A0  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5203  0174A6  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5204  0174AC  ECD6  F0B6         	call	_ringBufS_flush	;wreg free
  5205  0174B0  92BC               	bcf	188,1,c	;volatile
  5206  0174B2  94BC               	bcf	188,2,c	;volatile
  5207                           
  5208                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5209  0174B4  013B               	movlb	59	; () banked
  5210  0174B6  9FFC               	bcf	252,7,b	;volatile
  5211                           
  5212                           ; BSR set to: 59
  5213                           ;eadog.c: 214:  DMA1SSZ = 1;
  5214  0174B8  0E00               	movlw	0
  5215  0174BA  6FF8               	movwf	248,b	;volatile
  5216  0174BC  0E01               	movlw	1
  5217  0174BE  6FF7               	movwf	247,b	;volatile
  5218                           
  5219                           ; BSR set to: 59
  5220                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5221  0174C0  8FFC               	bsf	252,7,b	;volatile
  5222                           
  5223                           ; BSR set to: 59
  5224                           ;eadog.c: 216:  printf("%c", strPtr);
  5225                           ;stkvar	_strPtr @ sp[(0)+-1]
  5226  0174C2  0EFF               	movlw	-1
  5227  0174C4  50E3               	movf	plusw1,w,c
  5228  0174C6  6EE6               	movwf	postinc1,c
  5229  0174C8  0E00               	movlw	0
  5230  0174CA  6EE6               	movwf	postinc1,c
  5231  0174CC  0EF9               	movlw	low STR_12
  5232  0174CE  6EE6               	movwf	postinc1,c
  5233  0174D0  0EFF               	movlw	high STR_12
  5234  0174D2  6EE6               	movwf	postinc1,c
  5235  0174D4  0E04               	movlw	4
  5236  0174D6  6EE6               	movwf	postinc1,c
  5237  0174D8  EC63  F0B9         	call	_printf	;wreg free
  5238                           
  5239                           ;eadog.c: 217:  start_lcd();
  5240  0174DC  EC2D  F0C0         	call	_start_lcd	;wreg free
  5241                           
  5242                           ; BSR set to: 59
  5243                           ;eadog.c: 218:  wait_lcd_done();
  5244  0174E0  EC38  F0BF         	call	_wait_lcd_done	;wreg free
  5245                           
  5246                           ; BSR set to: 0
  5247  0174E4  82BC               	bsf	188,1,c	;volatile
  5248                           
  5249                           ; BSR set to: 0
  5250                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5251  0174E6  52E5               	movf	postdec1,f,c
  5252  0174E8  0012               	return		;funcret
  5253  0174EA                     __end_of_send_lcd_cmd_dma:
  5254                           	opt callstack 0
  5255                           
  5256 ;; *************** function _wait_lcd_done *****************
  5257 ;; Defined at:
  5258 ;;		line 141 in file "eadog.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1  [STACK] void 
  5265 ;; Registers used:
  5266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/2
  5269 ;;		On exit  : 3F/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    7
  5279 ;; This function calls:
  5280 ;;		_wdtdelay
  5281 ;; This function is called by:
  5282 ;;		_send_lcd_cmd_dma
  5283 ;;		_update_lcd
  5284 ;;		_vterm_dump
  5285 ;; This function uses a reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text23
  5289  017E70                     __ptext23:
  5290                           	opt callstack 0
  5291  017E70                     _wait_lcd_done:
  5292                           	opt callstack 22
  5293                           
  5294                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5295                           
  5296                           ; BSR set to: 0
  5297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5298                           ;incstack = 0
  5299  017E70  0100               	movlb	0	; () banked
  5300  017E72  B79A               	btfsc	_spi_link& (0+255),3,b	;volatile
  5301  017E74  D7FD               	goto	_wait_lcd_done
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;eadog.c: 144:  wdtdelay(50);
  5305  017E76  0E32               	movlw	50
  5306  017E78  6EE6               	movwf	postinc1,c
  5307  017E7A  0E00               	movlw	0
  5308  017E7C  6EE6               	movwf	postinc1,c
  5309  017E7E  0E00               	movlw	0
  5310  017E80  6EE6               	movwf	postinc1,c
  5311  017E82  0E00               	movlw	0
  5312  017E84  6EE6               	movwf	postinc1,c
  5313  017E86  ECF2  F0B9         	call	_wdtdelay	;wreg free
  5314                           
  5315                           ; BSR set to: 0
  5316                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5317  017E8A  0012               	return		;funcret
  5318  017E8C                     __end_of_wait_lcd_done:
  5319                           	opt callstack 0
  5320                           
  5321 ;; *************** function _wdtdelay *****************
  5322 ;; Defined at:
  5323 ;;		line 22 in file "eadog.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  delay           4  [STACK] const unsigned long 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1  [STACK] void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 3F/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    6
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_init_display
  5348 ;;		_send_lcd_cmd
  5349 ;;		_send_lcd_cmd_long
  5350 ;;		_wait_lcd_done
  5351 ;; This function uses a reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text24
  5355  0173E4                     __ptext24:
  5356                           	opt callstack 0
  5357  0173E4                     _wdtdelay:
  5358                           	opt callstack 22
  5359                           
  5360                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5361                           
  5362                           ; BSR set to: 0
  5363                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5364                           ;incstack = 0
  5365  0173E4  0100               	movlb	0	; () banked
  5366  0173E6  6BB6               	clrf	wdtdelay@dcount& (0+255),b
  5367  0173E8  6BB7               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5368  0173EA  6BB8               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5369  0173EC  6BB9               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5370  0173EE                     l1328:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;eadog.c: 27:   __nop();
  5374  0173EE  F000               	nop	
  5375  0173F0  0004               	clrwdt		;# 
  5376                           
  5377                           ;eadog.c: 29:  };
  5378  0173F2  0E01               	movlw	1
  5379  0173F4  0100               	movlb	0	; () banked
  5380  0173F6  27B6               	addwf	wdtdelay@dcount& (0+255),f,b
  5381  0173F8  0E00               	movlw	0
  5382  0173FA  23B7               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5383  0173FC  23B8               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5384  0173FE  23B9               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;stkvar	_delay @ sp[(0)+-4]
  5388  017400  0EFC               	movlw	-4
  5389  017402  006F FF8C  F035    	movff	plusw1,btemp
  5390  017408  51B6               	movf	wdtdelay@dcount& (0+255),w,b
  5391  01740A  5C35               	subwf	btemp^0,w,c
  5392  01740C  0EFD               	movlw	-3
  5393  01740E  006F FF8C  F035    	movff	plusw1,btemp
  5394  017414  51B7               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5395  017416  5835               	subwfb	btemp^0,w,c
  5396  017418  0EFE               	movlw	-2
  5397  01741A  006F FF8C  F035    	movff	plusw1,btemp
  5398  017420  51B8               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5399  017422  5835               	subwfb	btemp^0,w,c
  5400  017424  0EFF               	movlw	-1
  5401  017426  006F FF8C  F035    	movff	plusw1,btemp
  5402  01742C  51B9               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5403  01742E  5835               	subwfb	btemp^0,w,c
  5404  017430  B0D8               	btfsc	status,0,c
  5405  017432  D7DD               	goto	l1328
  5406                           
  5407                           ; BSR set to: 0
  5408                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5409  017434  52E5               	movf	postdec1,f,c
  5410  017436  52E5               	movf	postdec1,f,c
  5411  017438  52E5               	movf	postdec1,f,c
  5412  01743A  52E5               	movf	postdec1,f,c
  5413  01743C  0012               	return		;funcret
  5414  01743E                     __end_of_wdtdelay:
  5415                           	opt callstack 0
  5416                           
  5417 ;; *************** function _eaDogM_WriteString *****************
  5418 ;; Defined at:
  5419 ;;		line 184 in file "eadog.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  strPtr          2  [STACK] PTR unsigned char 
  5422 ;;		 -> D.lcd(216), D(218), V(189), 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1  [STACK] void 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5429 ;; Tracked objects:
  5430 ;;		On entry : 3F/0
  5431 ;;		On exit  : 3F/3B
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:   15
  5441 ;; This function calls:
  5442 ;;		_printf
  5443 ;;		_ringBufS_flush
  5444 ;;		_start_lcd
  5445 ;;		_strlen
  5446 ;;		_wait_lcd_set
  5447 ;; This function is called by:
  5448 ;;		_eaDogM_WriteStringAtPos
  5449 ;; This function uses a reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text25
  5453  016B36                     __ptext25:
  5454                           	opt callstack 0
  5455  016B36                     _eaDogM_WriteString:
  5456                           	opt callstack 13
  5457                           
  5458                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  5459                           
  5460                           ; BSR set to: 0
  5461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5462                           ;incstack = 0
  5463  016B36  EC2A  F0C0         	call	_wait_lcd_set	;wreg free
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  5467  016B3A  0E00               	movlw	0
  5468  016B3C  6EE6               	movwf	postinc1,c
  5469  016B3E  0060  F283  FFE6   	movff	_spi_link+6,postinc1
  5470  016B44  0060  F287  FFE6   	movff	_spi_link+7,postinc1
  5471  016B4A  ECD6  F0B6         	call	_ringBufS_flush	;wreg free
  5472  016B4E  94BC               	bcf	188,2,c	;volatile
  5473                           
  5474                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5475                           ;stkvar	_strPtr @ sp[(0)+-2]
  5476  016B50  0EFE               	movlw	-2
  5477  016B52  006F FF8F FFE6     	movff	plusw1,postinc1
  5478  016B58  006F FF8F FFE6     	movff	plusw1,postinc1
  5479  016B5E  ECEE  F0B5         	call	_strlen	;wreg free
  5480  016B62  5036               	movf	(btemp+1)^0,w,c
  5481  016B64  E104               	bnz	u9700
  5482  016B66  0E41               	movlw	65
  5483  016B68  5C35               	subwf	btemp^0,w,c
  5484  016B6A  A0D8               	btfss	status,0,c
  5485  016B6C  D010               	goto	l9669
  5486  016B6E                     u9700:
  5487                           
  5488                           ;stkvar	_strPtr @ sp[(0)+-2]
  5489  016B6E  0EFE               	movlw	-2
  5490  016B70  006F FF8C  F03F    	movff	plusw1,btemp+10
  5491  016B76  0EFF               	movlw	-1
  5492  016B78  006F FF8C  F040    	movff	plusw1,btemp+11
  5493  016B7E  0E40               	movlw	64
  5494  016B80  243F               	addwf	(btemp+10)^0,w,c
  5495  016B82  6ED9               	movwf	fsr2l,c
  5496  016B84  0E00               	movlw	0
  5497  016B86  2040               	addwfc	(btemp+11)^0,w,c
  5498  016B88  6EDA               	movwf	fsr2h,c
  5499  016B8A  0E00               	movlw	0
  5500  016B8C  6EDF               	movwf	indf2,c
  5501  016B8E                     l9669:
  5502                           
  5503                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  5504  016B8E  013B               	movlb	59	; () banked
  5505  016B90  9FFC               	bcf	252,7,b	;volatile
  5506                           
  5507                           ; BSR set to: 59
  5508                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  5509                           ;stkvar	_strPtr @ sp[(0)+-2]
  5510  016B92  0EFE               	movlw	-2
  5511  016B94  006F FF8F FFE6     	movff	plusw1,postinc1
  5512  016B9A  006F FF8F FFE6     	movff	plusw1,postinc1
  5513  016BA0  ECEE  F0B5         	call	_strlen	;wreg free
  5514  016BA4  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  5515  016BAA  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  5516                           
  5517                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  5518  016BB0  013B               	movlb	59	; () banked
  5519  016BB2  8FFC               	bsf	252,7,b	;volatile
  5520                           
  5521                           ; BSR set to: 59
  5522                           ;eadog.c: 195:  printf("%s", strPtr);
  5523                           ;stkvar	_strPtr @ sp[(0)+-2]
  5524  016BB4  0EFE               	movlw	-2
  5525  016BB6  006F FF8F FFE6     	movff	plusw1,postinc1
  5526  016BBC  006F FF8F FFE6     	movff	plusw1,postinc1
  5527  016BC2  0EFC               	movlw	low STR_11
  5528  016BC4  6EE6               	movwf	postinc1,c
  5529  016BC6  0EFF               	movlw	high STR_11
  5530  016BC8  6EE6               	movwf	postinc1,c
  5531  016BCA  0E04               	movlw	4
  5532  016BCC  6EE6               	movwf	postinc1,c
  5533  016BCE  EC63  F0B9         	call	_printf	;wreg free
  5534                           
  5535                           ;eadog.c: 196:  start_lcd();
  5536  016BD2  EC2D  F0C0         	call	_start_lcd	;wreg free
  5537                           
  5538                           ; BSR set to: 59
  5539                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  5540  016BD6  52E5               	movf	postdec1,f,c
  5541  016BD8  52E5               	movf	postdec1,f,c
  5542  016BDA  0012               	return		;funcret
  5543  016BDC                     __end_of_eaDogM_WriteString:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function _wait_lcd_set *****************
  5547 ;; Defined at:
  5548 ;;		line 131 in file "eadog.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;		None
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  1  [STACK] void 
  5555 ;; Registers used:
  5556 ;;		None
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/3D
  5559 ;;		On exit  : 3F/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5566 ;;Total ram usage:        0 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; Hardware stack levels required when called:    6
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_eaDogM_WriteString
  5573 ;;		_send_lcd_cmd_dma
  5574 ;; This function uses a reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text26
  5578  018054                     __ptext26:
  5579                           	opt callstack 0
  5580  018054                     _wait_lcd_set:
  5581                           	opt callstack 21
  5582                           
  5583                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  5584                           
  5585                           ; BSR set to: 59
  5586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5587                           ;incstack = 0
  5588  018054  0100               	movlb	0	; () banked
  5589  018056  879A               	bsf	_spi_link& (0+255),3,b	;volatile
  5590                           
  5591                           ; BSR set to: 0
  5592                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5593  018058  0012               	return		;funcret
  5594  01805A                     __end_of_wait_lcd_set:
  5595                           	opt callstack 0
  5596                           
  5597 ;; *************** function _start_lcd *****************
  5598 ;; Defined at:
  5599 ;;		line 126 in file "eadog.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1  [STACK] void 
  5606 ;; Registers used:
  5607 ;;		None
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/3B
  5610 ;;		On exit  : 3F/3B
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    6
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_eaDogM_WriteString
  5624 ;;		_send_lcd_cmd_dma
  5625 ;; This function uses a reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text27
  5629  01805A                     __ptext27:
  5630                           	opt callstack 0
  5631  01805A                     _start_lcd:
  5632                           	opt callstack 21
  5633                           
  5634                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  5635                           
  5636                           ; BSR set to: 0
  5637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5638                           ;incstack = 0
  5639  01805A  013B               	movlb	59	; () banked
  5640  01805C  8DFC               	bsf	252,6,b	;volatile
  5641                           
  5642                           ; BSR set to: 59
  5643                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5644  01805E  0012               	return		;funcret
  5645  018060                     __end_of_start_lcd:
  5646                           	opt callstack 0
  5647                           
  5648 ;; *************** function _ringBufS_flush *****************
  5649 ;; Defined at:
  5650 ;;		line 76 in file "ringbufs.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5653 ;;		 -> ring_buf1(67), 
  5654 ;;  clearBuffer     1  [STACK] const char 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1  [STACK] void 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5661 ;; Tracked objects:
  5662 ;;		On entry : 3F/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    7
  5673 ;; This function calls:
  5674 ;;		_memset
  5675 ;; This function is called by:
  5676 ;;		_eaDogM_WriteString
  5677 ;;		_send_lcd_cmd_dma
  5678 ;; This function uses a reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text28
  5682  016DAC                     __ptext28:
  5683                           	opt callstack 0
  5684  016DAC                     _ringBufS_flush:
  5685                           	opt callstack 20
  5686                           
  5687                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5688                           ;stkvar	__this @ sp[(0)+-2]
  5689                           
  5690                           ; BSR set to: 59
  5691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5692                           ;incstack = 0
  5693  016DAC  0EFE               	movlw	-2
  5694  016DAE  006F FF8C  F03F    	movff	plusw1,btemp+10
  5695  016DB4  0EFF               	movlw	-1
  5696  016DB6  006F FF8C  F040    	movff	plusw1,btemp+11
  5697  016DBC  0E42               	movlw	66
  5698  016DBE  243F               	addwf	(btemp+10)^0,w,c
  5699  016DC0  6ED9               	movwf	fsr2l,c
  5700  016DC2  0E00               	movlw	0
  5701  016DC4  2040               	addwfc	(btemp+11)^0,w,c
  5702  016DC6  6EDA               	movwf	fsr2h,c
  5703  016DC8  0E00               	movlw	0
  5704  016DCA  6EDF               	movwf	indf2,c
  5705                           
  5706                           ;ringbufs.c: 79:  _this->head = 0;
  5707                           ;stkvar	__this @ sp[(0)+-2]
  5708  016DCC  0EFE               	movlw	-2
  5709  016DCE  006F FF8C  F03F    	movff	plusw1,btemp+10
  5710  016DD4  0EFF               	movlw	-1
  5711  016DD6  006F FF8C  F040    	movff	plusw1,btemp+11
  5712  016DDC  0E40               	movlw	64
  5713  016DDE  243F               	addwf	(btemp+10)^0,w,c
  5714  016DE0  6ED9               	movwf	fsr2l,c
  5715  016DE2  0E00               	movlw	0
  5716  016DE4  2040               	addwfc	(btemp+11)^0,w,c
  5717  016DE6  6EDA               	movwf	fsr2h,c
  5718  016DE8  0E00               	movlw	0
  5719  016DEA  6EDF               	movwf	indf2,c
  5720                           
  5721                           ;ringbufs.c: 80:  _this->tail = 0;
  5722                           ;stkvar	__this @ sp[(0)+-2]
  5723  016DEC  0EFE               	movlw	-2
  5724  016DEE  006F FF8C  F03F    	movff	plusw1,btemp+10
  5725  016DF4  0EFF               	movlw	-1
  5726  016DF6  006F FF8C  F040    	movff	plusw1,btemp+11
  5727  016DFC  0E41               	movlw	65
  5728  016DFE  243F               	addwf	(btemp+10)^0,w,c
  5729  016E00  6ED9               	movwf	fsr2l,c
  5730  016E02  0E00               	movlw	0
  5731  016E04  2040               	addwfc	(btemp+11)^0,w,c
  5732  016E06  6EDA               	movwf	fsr2h,c
  5733  016E08  0E00               	movlw	0
  5734  016E0A  6EDF               	movwf	indf2,c
  5735                           
  5736                           ;ringbufs.c: 81:  if (clearBuffer) {
  5737                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5738  016E0C  0EFD               	movlw	-3
  5739  016E0E  50E3               	movf	plusw1,w,c
  5740  016E10  B4D8               	btfsc	status,2,c
  5741  016E12  D011               	goto	l1468
  5742                           
  5743                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5744  016E14  0E40               	movlw	64
  5745  016E16  6EE6               	movwf	postinc1,c
  5746  016E18  0E00               	movlw	0
  5747  016E1A  6EE6               	movwf	postinc1,c
  5748  016E1C  0E00               	movlw	0
  5749  016E1E  6EE6               	movwf	postinc1,c
  5750  016E20  0E00               	movlw	0
  5751  016E22  6EE6               	movwf	postinc1,c
  5752                           
  5753                           ;stkvar	__this @ sp[(-4)+-2]
  5754  016E24  0EFA               	movlw	-6
  5755  016E26  006F FF8F FFE6     	movff	plusw1,postinc1
  5756  016E2C  006F FF8F FFE6     	movff	plusw1,postinc1
  5757  016E32  EC47  F0A1         	call	_memset	;wreg free
  5758  016E36                     l1468:
  5759                           
  5760                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5761  016E36  52E5               	movf	postdec1,f,c
  5762  016E38  52E5               	movf	postdec1,f,c
  5763  016E3A  52E5               	movf	postdec1,f,c
  5764  016E3C  0012               	return		;funcret
  5765  016E3E                     __end_of_ringBufS_flush:
  5766                           	opt callstack 0
  5767                           
  5768 ;; *************** function _memset *****************
  5769 ;; Defined at:
  5770 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  dest            2  [STACK] PTR void 
  5773 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5774 ;;  c               2  [STACK] int 
  5775 ;;  n               2  [STACK] unsigned int 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  s               2  [STACK] PTR unsigned char 
  5778 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5779 ;;  k               2  [STACK] unsigned int 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  2  [STACK] PTR void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    6
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_ringBufS_init
  5800 ;;		_ringBufS_flush
  5801 ;; This function uses a reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text29
  5805  01428E                     __ptext29:
  5806                           	opt callstack 0
  5807  01428E                     _memset:
  5808                           	opt callstack 0
  5809                           
  5810                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5811  01428E  52E6               	movf	postinc1,f,c
  5812  014290  52E6               	movf	postinc1,f,c
  5813  014292  52E6               	movf	postinc1,f,c
  5814  014294  52E6               	movf	postinc1,f,c
  5815                           
  5816                           ;stkvar	_dest @ sp[(-4)+-2]
  5817                           
  5818                           ;incstack = 0
  5819  014296  0EFA               	movlw	-6
  5820  014298  006F FF8C  F03F    	movff	plusw1,btemp+10
  5821  01429E  0EFB               	movlw	-5
  5822  0142A0  006F FF8C  F040    	movff	plusw1,btemp+11
  5823                           
  5824                           ;stkvar	_s @ sp[(-4)+0]
  5825  0142A6  0EFD               	movlw	-3
  5826  0142A8  0060  F103  FFE3   	movff	btemp+11,plusw1
  5827  0142AE  0EFC               	movlw	-4
  5828  0142B0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5829                           
  5830                           ;stkvar	_n @ sp[(-4)+-6]
  5831  0142B6  0EF6               	movlw	-10
  5832  0142B8  006F FF8C  F035    	movff	plusw1,btemp
  5833  0142BE  0EF7               	movlw	-9
  5834  0142C0  50E3               	movf	plusw1,w,c
  5835  0142C2  1035               	iorwf	btemp^0,w,c
  5836  0142C4  B4D8               	btfsc	status,2,c
  5837  0142C6  D154               	goto	u9670
  5838                           
  5839                           ;stkvar	_c @ sp[(-4)+-4]
  5840                           ;stkvar	_s @ sp[(-4)+0]
  5841  0142C8  0EFC               	movlw	-4
  5842  0142CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5843  0142D0  0EFD               	movlw	-3
  5844  0142D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  5845  0142D8  0EF8               	movlw	-8
  5846  0142DA  006F FF8F FFDF     	movff	plusw1,indf2
  5847                           
  5848                           ;stkvar	_c @ sp[(-4)+-4]
  5849                           ;stkvar	_n @ sp[(-4)+-6]
  5850                           ;stkvar	_s @ sp[(-4)+0]
  5851  0142E0  0EFC               	movlw	-4
  5852  0142E2  006F FF8C  F03F    	movff	plusw1,btemp+10
  5853  0142E8  0EFD               	movlw	-3
  5854  0142EA  006F FF8C  F040    	movff	plusw1,btemp+11
  5855  0142F0  0EF6               	movlw	-10
  5856  0142F2  50E3               	movf	plusw1,w,c
  5857  0142F4  263F               	addwf	(btemp+10)^0,f,c
  5858  0142F6  0EF7               	movlw	-9
  5859  0142F8  50E3               	movf	plusw1,w,c
  5860  0142FA  2240               	addwfc	(btemp+11)^0,f,c
  5861  0142FC  0EFF               	movlw	255
  5862  0142FE  243F               	addwf	(btemp+10)^0,w,c
  5863  014300  6ED9               	movwf	fsr2l,c
  5864  014302  0EFF               	movlw	255
  5865  014304  2040               	addwfc	(btemp+11)^0,w,c
  5866  014306  6EDA               	movwf	fsr2h,c
  5867  014308  0EF8               	movlw	-8
  5868  01430A  006F FF8F FFDF     	movff	plusw1,indf2
  5869                           
  5870                           ;stkvar	_n @ sp[(-4)+-6]
  5871  014310  0EF7               	movlw	-9
  5872  014312  50E3               	movf	plusw1,w,c
  5873  014314  E108               	bnz	l9585
  5874  014316  0EF6               	movlw	-10
  5875  014318  006F FF8C  F035    	movff	plusw1,btemp
  5876  01431E  0E03               	movlw	3
  5877  014320  5E35               	subwf	btemp^0,f,c
  5878  014322  A0D8               	btfss	status,0,c
  5879  014324  D125               	goto	u9670
  5880  014326                     l9585:
  5881                           
  5882                           ;stkvar	_c @ sp[(-4)+-4]
  5883                           ;stkvar	_s @ sp[(-4)+0]
  5884  014326  0EFC               	movlw	-4
  5885  014328  006F FF8C  F03F    	movff	plusw1,btemp+10
  5886  01432E  0EFD               	movlw	-3
  5887  014330  006F FF8C  F040    	movff	plusw1,btemp+11
  5888  014336  0E01               	movlw	1
  5889  014338  243F               	addwf	(btemp+10)^0,w,c
  5890  01433A  6ED9               	movwf	fsr2l,c
  5891  01433C  0E00               	movlw	0
  5892  01433E  2040               	addwfc	(btemp+11)^0,w,c
  5893  014340  6EDA               	movwf	fsr2h,c
  5894  014342  0EF8               	movlw	-8
  5895  014344  006F FF8F FFDF     	movff	plusw1,indf2
  5896                           
  5897                           ;stkvar	_c @ sp[(-4)+-4]
  5898                           ;stkvar	_s @ sp[(-4)+0]
  5899  01434A  0EFC               	movlw	-4
  5900  01434C  006F FF8C  F03F    	movff	plusw1,btemp+10
  5901  014352  0EFD               	movlw	-3
  5902  014354  006F FF8C  F040    	movff	plusw1,btemp+11
  5903  01435A  0E02               	movlw	2
  5904  01435C  243F               	addwf	(btemp+10)^0,w,c
  5905  01435E  6ED9               	movwf	fsr2l,c
  5906  014360  0E00               	movlw	0
  5907  014362  2040               	addwfc	(btemp+11)^0,w,c
  5908  014364  6EDA               	movwf	fsr2h,c
  5909  014366  0EF8               	movlw	-8
  5910  014368  006F FF8F FFDF     	movff	plusw1,indf2
  5911                           
  5912                           ;stkvar	_c @ sp[(-4)+-4]
  5913                           ;stkvar	_n @ sp[(-4)+-6]
  5914                           ;stkvar	_s @ sp[(-4)+0]
  5915  01436E  0EFC               	movlw	-4
  5916  014370  006F FF8C  F03F    	movff	plusw1,btemp+10
  5917  014376  0EFD               	movlw	-3
  5918  014378  006F FF8C  F040    	movff	plusw1,btemp+11
  5919  01437E  0EF6               	movlw	-10
  5920  014380  50E3               	movf	plusw1,w,c
  5921  014382  263F               	addwf	(btemp+10)^0,f,c
  5922  014384  0EF7               	movlw	-9
  5923  014386  50E3               	movf	plusw1,w,c
  5924  014388  2240               	addwfc	(btemp+11)^0,f,c
  5925  01438A  0EFE               	movlw	254
  5926  01438C  243F               	addwf	(btemp+10)^0,w,c
  5927  01438E  6ED9               	movwf	fsr2l,c
  5928  014390  0EFF               	movlw	255
  5929  014392  2040               	addwfc	(btemp+11)^0,w,c
  5930  014394  6EDA               	movwf	fsr2h,c
  5931  014396  0EF8               	movlw	-8
  5932  014398  006F FF8F FFDF     	movff	plusw1,indf2
  5933                           
  5934                           ;stkvar	_c @ sp[(-4)+-4]
  5935                           ;stkvar	_n @ sp[(-4)+-6]
  5936                           ;stkvar	_s @ sp[(-4)+0]
  5937  01439E  0EFC               	movlw	-4
  5938  0143A0  006F FF8C  F03F    	movff	plusw1,btemp+10
  5939  0143A6  0EFD               	movlw	-3
  5940  0143A8  006F FF8C  F040    	movff	plusw1,btemp+11
  5941  0143AE  0EF6               	movlw	-10
  5942  0143B0  50E3               	movf	plusw1,w,c
  5943  0143B2  263F               	addwf	(btemp+10)^0,f,c
  5944  0143B4  0EF7               	movlw	-9
  5945  0143B6  50E3               	movf	plusw1,w,c
  5946  0143B8  2240               	addwfc	(btemp+11)^0,f,c
  5947  0143BA  0EFD               	movlw	253
  5948  0143BC  243F               	addwf	(btemp+10)^0,w,c
  5949  0143BE  6ED9               	movwf	fsr2l,c
  5950  0143C0  0EFF               	movlw	255
  5951  0143C2  2040               	addwfc	(btemp+11)^0,w,c
  5952  0143C4  6EDA               	movwf	fsr2h,c
  5953  0143C6  0EF8               	movlw	-8
  5954  0143C8  006F FF8F FFDF     	movff	plusw1,indf2
  5955                           
  5956                           ;stkvar	_n @ sp[(-4)+-6]
  5957  0143CE  0EF7               	movlw	-9
  5958  0143D0  50E3               	movf	plusw1,w,c
  5959  0143D2  E108               	bnz	l9591
  5960  0143D4  0EF6               	movlw	-10
  5961  0143D6  006F FF8C  F035    	movff	plusw1,btemp
  5962  0143DC  0E07               	movlw	7
  5963  0143DE  5E35               	subwf	btemp^0,f,c
  5964  0143E0  A0D8               	btfss	status,0,c
  5965  0143E2  D0C6               	goto	u9670
  5966  0143E4                     l9591:
  5967                           
  5968                           ;stkvar	_c @ sp[(-4)+-4]
  5969                           ;stkvar	_s @ sp[(-4)+0]
  5970  0143E4  0EFC               	movlw	-4
  5971  0143E6  006F FF8C  F03F    	movff	plusw1,btemp+10
  5972  0143EC  0EFD               	movlw	-3
  5973  0143EE  006F FF8C  F040    	movff	plusw1,btemp+11
  5974  0143F4  0E03               	movlw	3
  5975  0143F6  243F               	addwf	(btemp+10)^0,w,c
  5976  0143F8  6ED9               	movwf	fsr2l,c
  5977  0143FA  0E00               	movlw	0
  5978  0143FC  2040               	addwfc	(btemp+11)^0,w,c
  5979  0143FE  6EDA               	movwf	fsr2h,c
  5980  014400  0EF8               	movlw	-8
  5981  014402  006F FF8F FFDF     	movff	plusw1,indf2
  5982                           
  5983                           ;stkvar	_c @ sp[(-4)+-4]
  5984                           ;stkvar	_n @ sp[(-4)+-6]
  5985                           ;stkvar	_s @ sp[(-4)+0]
  5986  014408  0EFC               	movlw	-4
  5987  01440A  006F FF8C  F03F    	movff	plusw1,btemp+10
  5988  014410  0EFD               	movlw	-3
  5989  014412  006F FF8C  F040    	movff	plusw1,btemp+11
  5990  014418  0EF6               	movlw	-10
  5991  01441A  50E3               	movf	plusw1,w,c
  5992  01441C  263F               	addwf	(btemp+10)^0,f,c
  5993  01441E  0EF7               	movlw	-9
  5994  014420  50E3               	movf	plusw1,w,c
  5995  014422  2240               	addwfc	(btemp+11)^0,f,c
  5996  014424  0EFC               	movlw	252
  5997  014426  243F               	addwf	(btemp+10)^0,w,c
  5998  014428  6ED9               	movwf	fsr2l,c
  5999  01442A  0EFF               	movlw	255
  6000  01442C  2040               	addwfc	(btemp+11)^0,w,c
  6001  01442E  6EDA               	movwf	fsr2h,c
  6002  014430  0EF8               	movlw	-8
  6003  014432  006F FF8F FFDF     	movff	plusw1,indf2
  6004                           
  6005                           ;stkvar	_n @ sp[(-4)+-6]
  6006  014438  0EF7               	movlw	-9
  6007  01443A  50E3               	movf	plusw1,w,c
  6008  01443C  E108               	bnz	l9597
  6009  01443E  0EF6               	movlw	-10
  6010  014440  006F FF8C  F035    	movff	plusw1,btemp
  6011  014446  0E09               	movlw	9
  6012  014448  5E35               	subwf	btemp^0,f,c
  6013  01444A  A0D8               	btfss	status,0,c
  6014  01444C  D091               	goto	u9670
  6015  01444E                     l9597:
  6016                           
  6017                           ;stkvar	_s @ sp[(-4)+0]
  6018  01444E  0EFC               	movlw	-4
  6019  014450  006F FF8C  F03F    	movff	plusw1,btemp+10
  6020  014456  1E3F               	comf	(btemp+10)^0,f,c
  6021  014458  0EFD               	movlw	-3
  6022  01445A  006F FF8C  F040    	movff	plusw1,btemp+11
  6023  014460  1E40               	comf	(btemp+11)^0,f,c
  6024  014462  2A3F               	incf	(btemp+10)^0,f,c
  6025  014464  B4D8               	btfsc	status,2,c
  6026  014466  2A40               	incf	(btemp+11)^0,f,c
  6027  014468  0E03               	movlw	3
  6028  01446A  163F               	andwf	(btemp+10)^0,f,c
  6029  01446C  0E00               	movlw	0
  6030  01446E  1640               	andwf	(btemp+11)^0,f,c
  6031                           
  6032                           ;stkvar	_k @ sp[(-4)+2]
  6033  014470  0EFE               	movlw	-2
  6034  014472  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6035  014478  0EFF               	movlw	-1
  6036  01447A  0060  F103  FFE3   	movff	btemp+11,plusw1
  6037                           
  6038                           ;stkvar	_k @ sp[(-4)+2]
  6039                           ;stkvar	_s @ sp[(-4)+0]
  6040  014480  0EFC               	movlw	-4
  6041  014482  50E3               	movf	plusw1,w,c
  6042  014484  6E35               	movwf	btemp^0,c
  6043  014486  0EFE               	movlw	-2
  6044  014488  50E3               	movf	plusw1,w,c
  6045  01448A  2635               	addwf	btemp^0,f,c
  6046  01448C  0EFC               	movlw	-4
  6047  01448E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6048  014494  0EFD               	movlw	-3
  6049  014496  50E3               	movf	plusw1,w,c
  6050  014498  6E35               	movwf	btemp^0,c
  6051  01449A  0EFF               	movlw	-1
  6052  01449C  50E3               	movf	plusw1,w,c
  6053  01449E  2235               	addwfc	btemp^0,f,c
  6054  0144A0  0EFD               	movlw	-3
  6055  0144A2  0060  F0D7  FFE3   	movff	btemp,plusw1
  6056                           
  6057                           ;stkvar	_k @ sp[(-4)+2]
  6058                           ;stkvar	_n @ sp[(-4)+-6]
  6059  0144A8  0EF6               	movlw	-10
  6060  0144AA  50E3               	movf	plusw1,w,c
  6061  0144AC  6E35               	movwf	btemp^0,c
  6062  0144AE  0EFE               	movlw	-2
  6063  0144B0  50E3               	movf	plusw1,w,c
  6064  0144B2  5E35               	subwf	btemp^0,f,c
  6065  0144B4  0EF6               	movlw	-10
  6066  0144B6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6067  0144BC  0EF7               	movlw	-9
  6068  0144BE  50E3               	movf	plusw1,w,c
  6069  0144C0  6E35               	movwf	btemp^0,c
  6070  0144C2  0EFF               	movlw	-1
  6071  0144C4  50E3               	movf	plusw1,w,c
  6072  0144C6  5A35               	subwfb	btemp^0,f,c
  6073  0144C8  0EF7               	movlw	-9
  6074  0144CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6075  0144D0  0EFC               	movlw	252
  6076  0144D2  6E3F               	movwf	(btemp+10)^0,c
  6077  0144D4  0EFF               	movlw	255
  6078  0144D6  6E40               	movwf	(btemp+11)^0,c
  6079                           
  6080                           ;stkvar	_n @ sp[(-4)+-6]
  6081  0144D8  0EF6               	movlw	-10
  6082  0144DA  006F FF8C  F035    	movff	plusw1,btemp
  6083  0144E0  503F               	movf	(btemp+10)^0,w,c
  6084  0144E2  1635               	andwf	btemp^0,f,c
  6085  0144E4  0EF6               	movlw	-10
  6086  0144E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6087  0144EC  0EF7               	movlw	-9
  6088  0144EE  006F FF8C  F035    	movff	plusw1,btemp
  6089  0144F4  5040               	movf	(btemp+11)^0,w,c
  6090  0144F6  1635               	andwf	btemp^0,f,c
  6091  0144F8  0EF7               	movlw	-9
  6092  0144FA  D02E               	goto	L4
  6093  0144FC                     l9605:
  6094                           
  6095                           ;stkvar	_c @ sp[(-4)+-4]
  6096                           ;stkvar	_s @ sp[(-4)+0]
  6097  0144FC  0EFC               	movlw	-4
  6098  0144FE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6099  014504  0EFD               	movlw	-3
  6100  014506  006F FF8F FFDA     	movff	plusw1,fsr2h
  6101  01450C  0EF8               	movlw	-8
  6102  01450E  006F FF8F FFDF     	movff	plusw1,indf2
  6103                           
  6104                           ;stkvar	_n @ sp[(-4)+-6]
  6105  014514  0EF6               	movlw	-10
  6106  014516  006F FF8C  F035    	movff	plusw1,btemp
  6107  01451C  0E01               	movlw	1
  6108  01451E  5E35               	subwf	btemp^0,f,c
  6109  014520  0EF6               	movlw	-10
  6110  014522  0060  F0D7  FFE3   	movff	btemp,plusw1
  6111  014528  0EF7               	movlw	-9
  6112  01452A  006F FF8C  F035    	movff	plusw1,btemp
  6113  014530  0E00               	movlw	0
  6114  014532  5A35               	subwfb	btemp^0,f,c
  6115  014534  0EF7               	movlw	-9
  6116  014536  0060  F0D7  FFE3   	movff	btemp,plusw1
  6117                           
  6118                           ;stkvar	_s @ sp[(-4)+0]
  6119  01453C  0EFC               	movlw	-4
  6120  01453E  50E3               	movf	plusw1,w,c
  6121  014540  0F01               	addlw	1
  6122  014542  6E35               	movwf	btemp^0,c
  6123  014544  0EFC               	movlw	-4
  6124  014546  0060  F0D7  FFE3   	movff	btemp,plusw1
  6125  01454C  6A35               	clrf	btemp^0,c
  6126  01454E  0EFD               	movlw	-3
  6127  014550  50E3               	movf	plusw1,w,c
  6128  014552  2035               	addwfc	btemp^0,w,c
  6129  014554  6E35               	movwf	btemp^0,c
  6130  014556  0EFD               	movlw	-3
  6131  014558                     L4:
  6132  014558  0060  F0D7  FFE3   	movff	btemp,plusw1
  6133                           
  6134                           ;stkvar	_n @ sp[(-4)+-6]
  6135  01455E  0EF6               	movlw	-10
  6136  014560  006F FF8C  F035    	movff	plusw1,btemp
  6137  014566  0EF7               	movlw	-9
  6138  014568  50E3               	movf	plusw1,w,c
  6139  01456A  1035               	iorwf	btemp^0,w,c
  6140  01456C  A4D8               	btfss	status,2,c
  6141  01456E  D7C6               	goto	l9605
  6142  014570                     u9670:
  6143                           
  6144                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6145  014570  0EF6               	movlw	246
  6146  014572  26E1               	addwf	fsr1l,f,c
  6147  014574  0EFF               	movlw	255
  6148  014576  22E2               	addwfc	fsr1h,f,c
  6149  014578  0012               	return		;funcret
  6150  01457A                     __end_of_memset:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function _printf *****************
  6154 ;; Defined at:
  6155 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  fmt             2  [STACK] PTR const unsigned char 
  6158 ;;		 -> STR_13(3), STR_12(3), STR_11(3), 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  ap              2  [STACK] PTR void [1]
  6161 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6162 ;;  ret             2    0        int 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  2  [STACK] int 
  6165 ;; Registers used:
  6166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6167 ;; Tracked objects:
  6168 ;;		On entry : 3F/3B
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6176 ;;Total ram usage:        0 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:   14
  6179 ;; This function calls:
  6180 ;;		_vfprintf
  6181 ;; This function is called by:
  6182 ;;		_eaDogM_WriteString
  6183 ;;		_send_lcd_cmd_dma
  6184 ;; This function uses a reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text30
  6188  0172C6                     __ptext30:
  6189                           	opt callstack 0
  6190  0172C6                     _printf:
  6191                           	opt callstack 0
  6192                           
  6193                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6194  0172C6  52E6               	movf	postinc1,f,c
  6195  0172C8  52E6               	movf	postinc1,f,c
  6196                           
  6197                           ;stkvar	?_printf @ sp[(-2)+-3]
  6198                           
  6199                           ;incstack = 0
  6200  0172CA  0EFB               	movlw	251
  6201  0172CC  24E1               	addwf	fsr1l,w,c
  6202  0172CE  6E3F               	movwf	(btemp+10)^0,c
  6203  0172D0  0EFF               	movlw	255
  6204  0172D2  20E2               	addwfc	fsr1h,w,c
  6205  0172D4  6E40               	movwf	(btemp+11)^0,c
  6206                           
  6207                           ;stkvar	_ap @ sp[(-2)+0]
  6208  0172D6  0EFF               	movlw	-1
  6209  0172D8  0060  F103  FFE3   	movff	btemp+11,plusw1
  6210  0172DE  0EFE               	movlw	-2
  6211  0172E0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6212                           
  6213                           ;stkvar	_ap @ sp[(-2)+0]
  6214  0172E6  0EFE               	movlw	254
  6215  0172E8  24E1               	addwf	fsr1l,w,c
  6216  0172EA  6E35               	movwf	btemp^0,c
  6217  0172EC  0EFF               	movlw	255
  6218  0172EE  20E2               	addwfc	fsr1h,w,c
  6219  0172F0  6E36               	movwf	(btemp+1)^0,c
  6220  0172F2  0060  F0D7  FFE6   	movff	btemp,postinc1
  6221  0172F8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6222                           
  6223                           ;stkvar	_fmt @ sp[(-4)+-3]
  6224  0172FE  0EF9               	movlw	-7
  6225  017300  006F FF8F FFE6     	movff	plusw1,postinc1
  6226  017306  006F FF8F FFE6     	movff	plusw1,postinc1
  6227  01730C  0E00               	movlw	0
  6228  01730E  6EE6               	movwf	postinc1,c
  6229  017310  0E00               	movlw	0
  6230  017312  6EE6               	movwf	postinc1,c
  6231  017314  EC47  F0B5         	call	_vfprintf	;wreg free
  6232                           
  6233                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6234  017318  52E5               	movf	postdec1,f,c
  6235  01731A  52E5               	movf	postdec1,f,c
  6236  01731C  52E5               	movf	postdec1,f,c
  6237  01731E  50E7               	movf	indf1,w,c
  6238  017320  5EE1               	subwf	fsr1l,f,c
  6239  017322  0E00               	movlw	0
  6240  017324  5AE2               	subwfb	fsr1h,f,c
  6241  017326  0012               	return		;funcret
  6242  017328                     __end_of_printf:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function _vfprintf *****************
  6246 ;; Defined at:
  6247 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6250 ;;		 -> f(6), NULL(0), 
  6251 ;;  fmt             2  [STACK] PTR const unsigned char 
  6252 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6253 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6254 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6255 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6256 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6257 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6258 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6259 ;;  ap              2  [STACK] PTR PTR void 
  6260 ;;		 -> ap(2), ap(2), 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  cfmt            2  [STACK] PTR unsigned char 
  6263 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
  6264 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  6265 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
  6266 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
  6267 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
  6268 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
  6269 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  2  [STACK] int 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/4
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:   13
  6286 ;; This function calls:
  6287 ;;		_vfpfcnvrt
  6288 ;; This function is called by:
  6289 ;;		_sprintf
  6290 ;;		_printf
  6291 ;; This function uses a reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text31
  6295  016A8E                     __ptext31:
  6296                           	opt callstack 0
  6297  016A8E                     _vfprintf:
  6298                           	opt callstack 0
  6299                           
  6300                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6301  016A8E  52E6               	movf	postinc1,f,c
  6302  016A90  52E6               	movf	postinc1,f,c
  6303                           
  6304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6305                           ;stkvar	_fmt @ sp[(-2)+-4]
  6306                           
  6307                           ;incstack = 0
  6308  016A92  0EFA               	movlw	-6
  6309  016A94  006F FF8C  F03F    	movff	plusw1,btemp+10
  6310  016A9A  0EFB               	movlw	-5
  6311  016A9C  006F FF8C  F040    	movff	plusw1,btemp+11
  6312                           
  6313                           ;stkvar	_cfmt @ sp[(-2)+0]
  6314  016AA2  0EFF               	movlw	-1
  6315  016AA4  0060  F103  FFE3   	movff	btemp+11,plusw1
  6316  016AAA  0EFE               	movlw	-2
  6317  016AAC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6318                           
  6319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6320  016AB2  6A1C               	clrf	_nout^0,c
  6321  016AB4  6A1D               	clrf	(_nout+1)^0,c
  6322                           
  6323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6324  016AB6  D020               	goto	l9619
  6325  016AB8                     l9617:
  6326                           
  6327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6328                           ;stkvar	_ap @ sp[(-2)+-6]
  6329  016AB8  0EF8               	movlw	-8
  6330  016ABA  006F FF8F FFE6     	movff	plusw1,postinc1
  6331  016AC0  006F FF8F FFE6     	movff	plusw1,postinc1
  6332                           
  6333                           ;stkvar	_cfmt @ sp[(-4)+0]
  6334  016AC6  0EFC               	movlw	252
  6335  016AC8  24E1               	addwf	fsr1l,w,c
  6336  016ACA  6E35               	movwf	btemp^0,c
  6337  016ACC  0EFF               	movlw	255
  6338  016ACE  20E2               	addwfc	fsr1h,w,c
  6339  016AD0  6E36               	movwf	(btemp+1)^0,c
  6340  016AD2  0060  F0D7  FFE6   	movff	btemp,postinc1
  6341  016AD8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6342                           
  6343                           ;stkvar	_fp @ sp[(-6)+-2]
  6344  016ADE  0EF8               	movlw	-8
  6345  016AE0  006F FF8F FFE6     	movff	plusw1,postinc1
  6346  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
  6347  016AEC  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6348  016AF0  5035               	movf	btemp^0,w,c
  6349  016AF2  261C               	addwf	_nout^0,f,c
  6350  016AF4  5036               	movf	(btemp+1)^0,w,c
  6351  016AF6  221D               	addwfc	(_nout+1)^0,f,c
  6352  016AF8                     l9619:
  6353                           
  6354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6355                           ;stkvar	_cfmt @ sp[(-2)+0]
  6356  016AF8  50E1               	movf	fsr1l,w,c
  6357  016AFA  0FFE               	addlw	-2
  6358  016AFC  6ED9               	movwf	fsr2l,c
  6359  016AFE  50E2               	movf	fsr1h,w,c
  6360  016B00  6EDA               	movwf	fsr2h,c
  6361  016B02  0EFF               	movlw	255
  6362  016B04  22DA               	addwfc	fsr2h,f,c
  6363  016B06  006F FF7B FFF6     	movff	postinc2,tblptrl
  6364  016B0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  6365  016B12                     	if	0	;tblptru may be non-zero
  6366  016B12                     	endif
  6367  016B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6368  016B12  0E00               	movlw	low (__mediumconst shr (0+16))
  6369  016B14  6EF8               	movwf	tblptru,c
  6370  016B16                     	endif
  6371  016B16  0008               	tblrd		*
  6372  016B18  50F5               	movf	tablat,w,c
  6373  016B1A  0900               	iorlw	0
  6374  016B1C  A4D8               	btfss	status,2,c
  6375  016B1E  D7CC               	goto	l9617
  6376                           
  6377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6378  016B20  0060  F070  F035   	movff	_nout,btemp
  6379  016B26  0060  F074  F036   	movff	_nout+1,btemp+1
  6380                           
  6381                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6382  016B2C  0EF8               	movlw	248
  6383  016B2E  26E1               	addwf	fsr1l,f,c
  6384  016B30  0EFF               	movlw	255
  6385  016B32  22E2               	addwfc	fsr1h,f,c
  6386  016B34  0012               	return		;funcret
  6387  016B36                     __end_of_vfprintf:
  6388                           	opt callstack 0
  6389                           
  6390 ;; *************** function _vfpfcnvrt *****************
  6391 ;; Defined at:
  6392 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6395 ;;		 -> f(6), NULL(0), 
  6396 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6397 ;;		 -> cfmt(2), 
  6398 ;;  ap              2  [STACK] PTR PTR void 
  6399 ;;		 -> ap(2), ap(2), 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  llu             8  [STACK] unsigned long long 
  6402 ;;  ll              8  [STACK] long long 
  6403 ;;  f               4  [STACK] long long 
  6404 ;;  ct              3  [STACK] unsigned char [3]
  6405 ;;  vp              3    0        PTR void 
  6406 ;;  cp              2  [STACK] PTR unsigned char 
  6407 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  6408 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  6409 ;;		 -> STR_3(4), V(189), 
  6410 ;;  i               2    0        int 
  6411 ;;  done            2    0        int 
  6412 ;;  c               1  [STACK] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2  [STACK] int 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/4
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   12
  6429 ;; This function calls:
  6430 ;;		_atoi
  6431 ;;		_ctoa
  6432 ;;		_dtoa
  6433 ;;		_efgtoa
  6434 ;;		_fputc
  6435 ;;		_isdigit
  6436 ;;		_isupper
  6437 ;;		_stoa
  6438 ;;		_strncmp
  6439 ;;		_tolower
  6440 ;;		_xtoa
  6441 ;; This function is called by:
  6442 ;;		_vfprintf
  6443 ;; This function uses a reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text32
  6447  011244                     __ptext32:
  6448                           	opt callstack 0
  6449  011244                     _vfpfcnvrt:
  6450                           	opt callstack 0
  6451                           
  6452                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6453  011244  0E20               	movlw	32
  6454  011246  26E1               	addwf	fsr1l,f,c
  6455  011248  0E00               	movlw	0
  6456  01124A  22E2               	addwfc	fsr1h,f,c
  6457                           
  6458                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6459                           ;stkvar	_fmt @ sp[(-32)+-4]
  6460                           
  6461                           ;incstack = 0
  6462  01124C  0EDC               	movlw	-36
  6463  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6464  011254  0EDD               	movlw	-35
  6465  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  6466  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6467  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  6468  011268                     	if	0	;tblptru may be non-zero
  6469  011268                     	endif
  6470  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6471  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  6472  01126A  6EF8               	movwf	tblptru,c
  6473  01126C                     	endif
  6474  01126C  0008               	tblrd		*
  6475  01126E  50F5               	movf	tablat,w,c
  6476  011270  0A25               	xorlw	37
  6477  011272  A4D8               	btfss	status,2,c
  6478  011274  EF92  F08E         	goto	l9563
  6479                           
  6480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6481                           ;stkvar	_fmt @ sp[(-32)+-4]
  6482  011278  0EDC               	movlw	-36
  6483  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6484  011280  0EDD               	movlw	-35
  6485  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  6486  011288  2ADE               	incf	postinc2,f,c
  6487  01128A  0E00               	movlw	0
  6488  01128C  22DD               	addwfc	postdec2,f,c
  6489                           
  6490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6491  01128E  6A1E               	clrf	_width^0,c
  6492  011290  6A1F               	clrf	(_width+1)^0,c
  6493  011292  6A22               	clrf	_flags^0,c
  6494  011294  6A23               	clrf	(_flags+1)^0,c
  6495                           
  6496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6497  011296  6820               	setf	_prec^0,c
  6498  011298  6821               	setf	(_prec+1)^0,c
  6499                           
  6500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6501                           ;stkvar	_fmt @ sp[(-32)+-4]
  6502  01129A  0EDC               	movlw	-36
  6503  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6504  0112A2  0EDD               	movlw	-35
  6505  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6506  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  6507  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  6508  0112B6                     	if	0	;tblptru may be non-zero
  6509  0112B6                     	endif
  6510  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6511  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  6512  0112B8  6EF8               	movwf	tblptru,c
  6513  0112BA                     	endif
  6514  0112BA  0008               	tblrd		*
  6515  0112BC  50F5               	movf	tablat,w,c
  6516  0112BE  0A2A               	xorlw	42
  6517  0112C0  A4D8               	btfss	status,2,c
  6518  0112C2  D031               	goto	l9427
  6519                           
  6520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6521                           ;stkvar	_fmt @ sp[(-32)+-4]
  6522  0112C4  0EDC               	movlw	-36
  6523  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6524  0112CC  0EDD               	movlw	-35
  6525  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6526  0112D4  2ADE               	incf	postinc2,f,c
  6527  0112D6  0E00               	movlw	0
  6528  0112D8  22DD               	addwfc	postdec2,f,c
  6529                           
  6530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6531                           ;stkvar	_ap @ sp[(-32)+-6]
  6532  0112DA  0EDA               	movlw	-38
  6533  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6534  0112E2  0EDB               	movlw	-37
  6535  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6536  0112EA  0E02               	movlw	2
  6537  0112EC  5EDE               	subwf	postinc2,f,c
  6538  0112EE  0E00               	movlw	0
  6539  0112F0  5ADD               	subwfb	postdec2,f,c
  6540  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  6541  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  6542  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6543  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6544  01130A  006F FF78  F01E    	movff	postinc2,_width
  6545  011310  006F FF74  F01F    	movff	postdec2,_width+1
  6546                           
  6547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6548  011316  AE1F               	btfss	(_width+1)^0,7,c
  6549  011318  D066               	goto	u9430
  6550                           
  6551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6552  01131A  8022               	bsf	_flags^0,0,c
  6553                           
  6554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6555  01131C  6C1E               	negf	_width^0,c
  6556  01131E  1E1F               	comf	(_width+1)^0,f,c
  6557  011320  B0D8               	btfsc	status,0,c
  6558  011322  2A1F               	incf	(_width+1)^0,f,c
  6559  011324  D060               	goto	u9430
  6560  011326                     l9427:
  6561                           
  6562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6563                           ;stkvar	_fmt @ sp[(-32)+-4]
  6564  011326  0EDC               	movlw	-36
  6565  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  6566  01132E  0EDD               	movlw	-35
  6567  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  6568  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  6569  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  6570  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6571  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  6572  01134E  EC5C  F0A5         	call	_atoi	;wreg free
  6573  011352  0060  F0D4  F01E   	movff	btemp,_width
  6574  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  6575                           
  6576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6577  01135E  D00B               	goto	l9431
  6578  011360                     l9429:
  6579                           
  6580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6581                           ;stkvar	_fmt @ sp[(-32)+-4]
  6582  011360  0EDC               	movlw	-36
  6583  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  6584  011368  0EDD               	movlw	-35
  6585  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6586  011370  2ADE               	incf	postinc2,f,c
  6587  011372  0E00               	movlw	0
  6588  011374  22DD               	addwfc	postdec2,f,c
  6589  011376                     l9431:
  6590  011376  0ED0               	movlw	208
  6591  011378  6E3F               	movwf	(btemp+10)^0,c
  6592  01137A  0EFF               	movlw	255
  6593  01137C  6E40               	movwf	(btemp+11)^0,c
  6594                           
  6595                           ;stkvar	_fmt @ sp[(-32)+-4]
  6596  01137E  0EDC               	movlw	-36
  6597  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  6598  011386  0EDD               	movlw	-35
  6599  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  6600  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  6601  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  6602  01139A                     	if	0	;tblptru may be non-zero
  6603  01139A                     	endif
  6604  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6605  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  6606  01139C  6EF8               	movwf	tblptru,c
  6607  01139E                     	endif
  6608  01139E  0008               	tblrd		*
  6609  0113A0  50F5               	movf	tablat,w,c
  6610  0113A2  6E3D               	movwf	(btemp+8)^0,c
  6611  0113A4  6A3E               	clrf	(btemp+9)^0,c
  6612  0113A6  503F               	movf	(btemp+10)^0,w,c
  6613  0113A8  263D               	addwf	(btemp+8)^0,f,c
  6614  0113AA  5040               	movf	(btemp+11)^0,w,c
  6615  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  6616  0113AE  503E               	movf	(btemp+9)^0,w,c
  6617  0113B0  E106               	bnz	u9410
  6618  0113B2  0E0A               	movlw	10
  6619  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  6620  0113B6  B0D8               	btfsc	status,0,c
  6621  0113B8  D002               	goto	u9410
  6622  0113BA  0E01               	movlw	1
  6623  0113BC  D001               	goto	u9420
  6624  0113BE                     u9410:
  6625  0113BE  0E00               	movlw	0
  6626  0113C0                     u9420:
  6627  0113C0  6E3F               	movwf	(btemp+10)^0,c
  6628  0113C2  6A40               	clrf	(btemp+11)^0,c
  6629                           
  6630                           ;stkvar	_vfpfcnvrt$4149 @ sp[(-32)+4]
  6631  0113C4  0EE4               	movlw	-28
  6632  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6633  0113CC  0EE5               	movlw	-27
  6634  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  6635                           
  6636                           ;stkvar	_vfpfcnvrt$4149 @ sp[(-32)+4]
  6637  0113D4  0EE4               	movlw	-28
  6638  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  6639  0113DC  0EE5               	movlw	-27
  6640  0113DE  50E3               	movf	plusw1,w,c
  6641  0113E0  1035               	iorwf	btemp^0,w,c
  6642  0113E2  A4D8               	btfss	status,2,c
  6643  0113E4  D7BD               	goto	l9429
  6644  0113E6                     u9430:
  6645                           
  6646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  6647                           ;stkvar	_fmt @ sp[(-32)+-4]
  6648  0113E6  0EDC               	movlw	-36
  6649  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6650  0113EE  0EDD               	movlw	-35
  6651  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6652  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  6653  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  6654  011402                     	if	0	;tblptru may be non-zero
  6655  011402                     	endif
  6656  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6657  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  6658  011404  6EF8               	movwf	tblptru,c
  6659  011406                     	endif
  6660  011406  0008               	tblrd		*
  6661  011408  50F5               	movf	tablat,w,c
  6662  01140A  0A2E               	xorlw	46
  6663  01140C  A4D8               	btfss	status,2,c
  6664  01140E  D0AC               	goto	u9480
  6665                           
  6666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  6667  011410  6A20               	clrf	_prec^0,c
  6668  011412  6A21               	clrf	(_prec+1)^0,c
  6669                           
  6670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  6671                           ;stkvar	_fmt @ sp[(-32)+-4]
  6672  011414  0EDC               	movlw	-36
  6673  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  6674  01141C  0EDD               	movlw	-35
  6675  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6676  011424  2ADE               	incf	postinc2,f,c
  6677  011426  0E00               	movlw	0
  6678  011428  22DD               	addwfc	postdec2,f,c
  6679                           
  6680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  6681                           ;stkvar	_fmt @ sp[(-32)+-4]
  6682  01142A  0EDC               	movlw	-36
  6683  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6684  011432  0EDD               	movlw	-35
  6685  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  6686  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  6687  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  6688  011446                     	if	0	;tblptru may be non-zero
  6689  011446                     	endif
  6690  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6691  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  6692  011448  6EF8               	movwf	tblptru,c
  6693  01144A                     	endif
  6694  01144A  0008               	tblrd		*
  6695  01144C  50F5               	movf	tablat,w,c
  6696  01144E  0A2A               	xorlw	42
  6697  011450  A4D8               	btfss	status,2,c
  6698  011452  D02A               	goto	l9449
  6699                           
  6700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  6701                           ;stkvar	_fmt @ sp[(-32)+-4]
  6702  011454  0EDC               	movlw	-36
  6703  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  6704  01145C  0EDD               	movlw	-35
  6705  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6706  011464  2ADE               	incf	postinc2,f,c
  6707  011466  0E00               	movlw	0
  6708  011468  22DD               	addwfc	postdec2,f,c
  6709                           
  6710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  6711                           ;stkvar	_ap @ sp[(-32)+-6]
  6712  01146A  0EDA               	movlw	-38
  6713  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6714  011472  0EDB               	movlw	-37
  6715  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  6716  01147A  0E02               	movlw	2
  6717  01147C  5EDE               	subwf	postinc2,f,c
  6718  01147E  0E00               	movlw	0
  6719  011480  5ADD               	subwfb	postdec2,f,c
  6720  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  6721  011488  006F FF74  F040    	movff	postdec2,btemp+11
  6722  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6723  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6724  01149A  006F FF78  F020    	movff	postinc2,_prec
  6725  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  6726                           
  6727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  6728  0114A6  D060               	goto	u9480
  6729  0114A8                     l9449:
  6730                           
  6731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  6732                           ;stkvar	_fmt @ sp[(-32)+-4]
  6733  0114A8  0EDC               	movlw	-36
  6734  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6735  0114B0  0EDD               	movlw	-35
  6736  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6737  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  6738  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  6739  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  6740  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  6741  0114D0  EC5C  F0A5         	call	_atoi	;wreg free
  6742  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  6743  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  6744                           
  6745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6746  0114E0  D00B               	goto	l9453
  6747  0114E2                     l9451:
  6748                           
  6749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  6750                           ;stkvar	_fmt @ sp[(-32)+-4]
  6751  0114E2  0EDC               	movlw	-36
  6752  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6753  0114EA  0EDD               	movlw	-35
  6754  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6755  0114F2  2ADE               	incf	postinc2,f,c
  6756  0114F4  0E00               	movlw	0
  6757  0114F6  22DD               	addwfc	postdec2,f,c
  6758  0114F8                     l9453:
  6759  0114F8  0ED0               	movlw	208
  6760  0114FA  6E3F               	movwf	(btemp+10)^0,c
  6761  0114FC  0EFF               	movlw	255
  6762  0114FE  6E40               	movwf	(btemp+11)^0,c
  6763                           
  6764                           ;stkvar	_fmt @ sp[(-32)+-4]
  6765  011500  0EDC               	movlw	-36
  6766  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  6767  011508  0EDD               	movlw	-35
  6768  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6769  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  6770  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  6771  01151C                     	if	0	;tblptru may be non-zero
  6772  01151C                     	endif
  6773  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6774  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  6775  01151E  6EF8               	movwf	tblptru,c
  6776  011520                     	endif
  6777  011520  0008               	tblrd		*
  6778  011522  50F5               	movf	tablat,w,c
  6779  011524  6E3D               	movwf	(btemp+8)^0,c
  6780  011526  6A3E               	clrf	(btemp+9)^0,c
  6781  011528  503F               	movf	(btemp+10)^0,w,c
  6782  01152A  263D               	addwf	(btemp+8)^0,f,c
  6783  01152C  5040               	movf	(btemp+11)^0,w,c
  6784  01152E  223E               	addwfc	(btemp+9)^0,f,c
  6785  011530  503E               	movf	(btemp+9)^0,w,c
  6786  011532  E106               	bnz	u9460
  6787  011534  0E0A               	movlw	10
  6788  011536  5C3D               	subwf	(btemp+8)^0,w,c
  6789  011538  B0D8               	btfsc	status,0,c
  6790  01153A  D002               	goto	u9460
  6791  01153C  0E01               	movlw	1
  6792  01153E  D001               	goto	u9470
  6793  011540                     u9460:
  6794  011540  0E00               	movlw	0
  6795  011542                     u9470:
  6796  011542  6E3F               	movwf	(btemp+10)^0,c
  6797  011544  6A40               	clrf	(btemp+11)^0,c
  6798                           
  6799                           ;stkvar	_vfpfcnvrt$4150 @ sp[(-32)+0]
  6800  011546  0EE0               	movlw	-32
  6801  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6802  01154E  0EE1               	movlw	-31
  6803  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  6804                           
  6805                           ;stkvar	_vfpfcnvrt$4150 @ sp[(-32)+0]
  6806  011556  0EE0               	movlw	-32
  6807  011558  006F FF8C  F035    	movff	plusw1,btemp
  6808  01155E  0EE1               	movlw	-31
  6809  011560  50E3               	movf	plusw1,w,c
  6810  011562  1035               	iorwf	btemp^0,w,c
  6811  011564  A4D8               	btfss	status,2,c
  6812  011566  D7BD               	goto	l9451
  6813  011568                     u9480:
  6814                           
  6815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  6816                           ;stkvar	_fmt @ sp[(-32)+-4]
  6817  011568  0EDC               	movlw	-36
  6818  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  6819  011570  0EDD               	movlw	-35
  6820  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  6821  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  6822  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  6823  011584                     	if	0	;tblptru may be non-zero
  6824  011584                     	endif
  6825  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6826  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  6827  011586  6EF8               	movwf	tblptru,c
  6828  011588                     	endif
  6829  011588  0008               	tblrd		*
  6830  01158A  50F5               	movf	tablat,w,c
  6831  01158C  6EE6               	movwf	postinc1,c
  6832  01158E  0E00               	movlw	0
  6833  011590  6EE6               	movwf	postinc1,c
  6834  011592  ECED  F0B7         	call	_tolower	;wreg free
  6835                           
  6836                           ;stkvar	_ct @ sp[(-32)+26]
  6837  011596  0EFA               	movlw	-6
  6838  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  6839                           
  6840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  6841                           ;stkvar	_ct @ sp[(-32)+26]
  6842  01159E  0EFA               	movlw	-6
  6843  0115A0  50E3               	movf	plusw1,w,c
  6844  0115A2  B4D8               	btfsc	status,2,c
  6845  0115A4  D05B               	goto	l9469
  6846                           
  6847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  6848                           ;stkvar	_ct @ sp[(-32)+26]
  6849  0115A6  0EFB               	movlw	251
  6850  0115A8  24E1               	addwf	fsr1l,w,c
  6851  0115AA  6ED9               	movwf	fsr2l,c
  6852  0115AC  0EFF               	movlw	255
  6853  0115AE  20E2               	addwfc	fsr1h,w,c
  6854  0115B0  6EDA               	movwf	fsr2h,c
  6855                           
  6856                           ;stkvar	_fmt @ sp[(-32)+-4]
  6857  0115B2  0EDC               	movlw	-36
  6858  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  6859  0115BA  0EDD               	movlw	-35
  6860  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  6861  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  6862  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  6863  0115CE  0E01               	movlw	1
  6864  0115D0  263F               	addwf	(btemp+10)^0,f,c
  6865  0115D2  0E00               	movlw	0
  6866  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  6867  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6868  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6869  0115E2                     	if	0	;tblptru may be non-zero
  6870  0115E2                     	endif
  6871  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6872  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  6873  0115E4  6EF8               	movwf	tblptru,c
  6874  0115E6                     	endif
  6875  0115E6  0008               	tblrd		*
  6876  0115E8  50F5               	movf	tablat,w,c
  6877  0115EA  6EE6               	movwf	postinc1,c
  6878  0115EC  0E00               	movlw	0
  6879  0115EE  6EE6               	movwf	postinc1,c
  6880  0115F0  ECED  F0B7         	call	_tolower	;wreg free
  6881  0115F4  5035               	movf	btemp^0,w,c
  6882  0115F6  6EDF               	movwf	indf2,c
  6883                           
  6884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  6885                           ;stkvar	_ct @ sp[(-32)+26]
  6886  0115F8  0EFB               	movlw	251
  6887  0115FA  24E1               	addwf	fsr1l,w,c
  6888  0115FC  6ED9               	movwf	fsr2l,c
  6889  0115FE  0EFF               	movlw	255
  6890  011600  20E2               	addwfc	fsr1h,w,c
  6891  011602  6EDA               	movwf	fsr2h,c
  6892  011604  50DF               	movf	indf2,w,c
  6893  011606  B4D8               	btfsc	status,2,c
  6894  011608  D029               	goto	l9469
  6895                           
  6896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  6897                           ;stkvar	_ct @ sp[(-32)+26]
  6898  01160A  0EFC               	movlw	252
  6899  01160C  24E1               	addwf	fsr1l,w,c
  6900  01160E  6ED9               	movwf	fsr2l,c
  6901  011610  0EFF               	movlw	255
  6902  011612  20E2               	addwfc	fsr1h,w,c
  6903  011614  6EDA               	movwf	fsr2h,c
  6904                           
  6905                           ;stkvar	_fmt @ sp[(-32)+-4]
  6906  011616  0EDC               	movlw	-36
  6907  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  6908  01161E  0EDD               	movlw	-35
  6909  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  6910  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  6911  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  6912  011632  0E02               	movlw	2
  6913  011634  263F               	addwf	(btemp+10)^0,f,c
  6914  011636  0E00               	movlw	0
  6915  011638  2240               	addwfc	(btemp+11)^0,f,c
  6916  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  6917  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  6918  011646                     	if	0	;tblptru may be non-zero
  6919  011646                     	endif
  6920  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6921  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  6922  011648  6EF8               	movwf	tblptru,c
  6923  01164A                     	endif
  6924  01164A  0008               	tblrd		*
  6925  01164C  50F5               	movf	tablat,w,c
  6926  01164E  6EE6               	movwf	postinc1,c
  6927  011650  0E00               	movlw	0
  6928  011652  6EE6               	movwf	postinc1,c
  6929  011654  ECED  F0B7         	call	_tolower	;wreg free
  6930  011658  5035               	movf	btemp^0,w,c
  6931  01165A  6EDF               	movwf	indf2,c
  6932  01165C                     l9469:
  6933                           
  6934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6935                           ;stkvar	_fmt @ sp[(-32)+-4]
  6936  01165C  0EDC               	movlw	-36
  6937  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6938  011664  0EDD               	movlw	-35
  6939  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  6940  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6941  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  6942  011678                     	if	0	;tblptru may be non-zero
  6943  011678                     	endif
  6944  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6945  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  6946  01167A  6EF8               	movwf	tblptru,c
  6947  01167C                     	endif
  6948  01167C  0008               	tblrd		*
  6949  01167E  50F5               	movf	tablat,w,c
  6950  011680  0A63               	xorlw	99
  6951  011682  A4D8               	btfss	status,2,c
  6952  011684  D036               	goto	l9479
  6953                           
  6954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6955                           ;stkvar	_fmt @ sp[(-32)+-4]
  6956  011686  0EDC               	movlw	-36
  6957  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  6958  01168E  0EDD               	movlw	-35
  6959  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  6960  011696  2ADE               	incf	postinc2,f,c
  6961  011698  0E00               	movlw	0
  6962  01169A  22DD               	addwfc	postdec2,f,c
  6963                           
  6964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6965                           ;stkvar	_ap @ sp[(-32)+-6]
  6966  01169C  0EDA               	movlw	-38
  6967  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6968  0116A4  0EDB               	movlw	-37
  6969  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6970  0116AC  0E02               	movlw	2
  6971  0116AE  5EDE               	subwf	postinc2,f,c
  6972  0116B0  0E00               	movlw	0
  6973  0116B2  5ADD               	subwfb	postdec2,f,c
  6974  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  6975  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  6976  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  6977  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  6978  0116CC  50DF               	movf	indf2,w,c
  6979  0116CE  6E40               	movwf	(btemp+11)^0,c
  6980                           
  6981                           ;stkvar	_c @ sp[(-32)+31]
  6982  0116D0  0EFF               	movlw	-1
  6983  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6984                           
  6985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6986                           ;stkvar	_c @ sp[(-32)+31]
  6987  0116D8  0EFF               	movlw	-1
  6988  0116DA  50E3               	movf	plusw1,w,c
  6989  0116DC  6EE6               	movwf	postinc1,c
  6990                           
  6991                           ;stkvar	_fp @ sp[(-33)+-2]
  6992  0116DE  0EDD               	movlw	-35
  6993  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  6994  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  6995  0116EC  EC67  F0B7         	call	_ctoa	;wreg free
  6996  0116F0  D343               	goto	l1938
  6997  0116F2                     l9479:
  6998                           
  6999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7000                           ;stkvar	_fmt @ sp[(-32)+-4]
  7001  0116F2  0EDC               	movlw	-36
  7002  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7003  0116FA  0EDD               	movlw	-35
  7004  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7005  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7006  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7007  01170E                     	if	0	;tblptru may be non-zero
  7008  01170E                     	endif
  7009  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7010  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7011  011710  6EF8               	movwf	tblptru,c
  7012  011712                     	endif
  7013  011712  0008               	tblrd		*
  7014  011714  50F5               	movf	tablat,w,c
  7015  011716  0A64               	xorlw	100
  7016  011718  B4D8               	btfsc	status,2,c
  7017  01171A  D015               	goto	u9530
  7018                           
  7019                           ;stkvar	_fmt @ sp[(-32)+-4]
  7020  01171C  0EDC               	movlw	-36
  7021  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7022  011724  0EDD               	movlw	-35
  7023  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  7024  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7025  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  7026  011738                     	if	0	;tblptru may be non-zero
  7027  011738                     	endif
  7028  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7029  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  7030  01173A  6EF8               	movwf	tblptru,c
  7031  01173C                     	endif
  7032  01173C  0008               	tblrd		*
  7033  01173E  50F5               	movf	tablat,w,c
  7034  011740  0A69               	xorlw	105
  7035  011742  A4D8               	btfss	status,2,c
  7036  011744  D075               	goto	l9491
  7037  011746                     u9530:
  7038                           
  7039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7040                           ;stkvar	_fmt @ sp[(-32)+-4]
  7041  011746  0EDC               	movlw	-36
  7042  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  7043  01174E  0EDD               	movlw	-35
  7044  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  7045  011756  2ADE               	incf	postinc2,f,c
  7046  011758  0E00               	movlw	0
  7047  01175A  22DD               	addwfc	postdec2,f,c
  7048                           
  7049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7050                           ;stkvar	_ap @ sp[(-32)+-6]
  7051  01175C  0EDA               	movlw	-38
  7052  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7053  011764  0EDB               	movlw	-37
  7054  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  7055  01176C  0E02               	movlw	2
  7056  01176E  5EDE               	subwf	postinc2,f,c
  7057  011770  0E00               	movlw	0
  7058  011772  5ADD               	subwfb	postdec2,f,c
  7059  011774  006F FF78  F03F    	movff	postinc2,btemp+10
  7060  01177A  006F FF74  F040    	movff	postdec2,btemp+11
  7061  011780  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7062  011786  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7063  01178C  006F FF78  F03F    	movff	postinc2,btemp+10
  7064  011792  006F FF74  F040    	movff	postdec2,btemp+11
  7065                           
  7066                           ;stkvar	_ll @ sp[(-32)+14]
  7067  011798  0EEE               	movlw	-18
  7068  01179A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7069  0117A0  0EEF               	movlw	-17
  7070  0117A2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7071  0117A8  6A35               	clrf	btemp^0,c
  7072  0117AA  BEE3               	btfsc	plusw1,7,c
  7073  0117AC  6835               	setf	btemp^0,c
  7074  0117AE  0EF0               	movlw	-16
  7075  0117B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7076  0117B6  0EF1               	movlw	-15
  7077  0117B8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7078  0117BE  0EF2               	movlw	-14
  7079  0117C0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7080  0117C6  0EF3               	movlw	-13
  7081  0117C8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7082  0117CE  0EF4               	movlw	-12
  7083  0117D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  7084  0117D6  0EF5               	movlw	-11
  7085  0117D8  0060  F0D7  FFE3   	movff	btemp,plusw1
  7086                           
  7087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7088                           ;stkvar	_ll @ sp[(-32)+14]
  7089  0117DE  50E1               	movf	fsr1l,w,c
  7090  0117E0  0FEE               	addlw	-18
  7091  0117E2  6ED9               	movwf	fsr2l,c
  7092  0117E4  50E2               	movf	fsr1h,w,c
  7093  0117E6  6EDA               	movwf	fsr2h,c
  7094  0117E8  0EFF               	movlw	255
  7095  0117EA  22DA               	addwfc	fsr2h,f,c
  7096  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  7097  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  7098  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  7099  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  7100  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  7101  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  7102  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  7103  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  7104                           
  7105                           ;stkvar	_fp @ sp[(-40)+-2]
  7106  01181C  0ED6               	movlw	-42
  7107  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  7108  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  7109  01182A  EC71  F099         	call	_dtoa	;wreg free
  7110  01182E  D2A4               	goto	l1938
  7111  011830                     l9491:
  7112                           
  7113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7114                           ;stkvar	_ct @ sp[(-32)+26]
  7115  011830  0EFA               	movlw	-6
  7116  011832  006F FF8C  F035    	movff	plusw1,btemp
  7117  011838  0E66               	movlw	102
  7118  01183A  1835               	xorwf	btemp^0,w,c
  7119  01183C  A4D8               	btfss	status,2,c
  7120  01183E  D06E               	goto	l9503
  7121                           
  7122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7123                           ;stkvar	_fmt @ sp[(-32)+-4]
  7124  011840  0EDC               	movlw	-36
  7125  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  7126  011848  0EDD               	movlw	-35
  7127  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7128  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  7129  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  7130  01185C                     	if	0	;tblptru may be non-zero
  7131  01185C                     	endif
  7132  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7133  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  7134  01185E  6EF8               	movwf	tblptru,c
  7135  011860                     	endif
  7136                           
  7137                           ;stkvar	_c @ sp[(-32)+31]
  7138  011860  0008               	tblrd		*
  7139  011862  0EFF               	movlw	-1
  7140  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  7141                           
  7142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7143                           ;stkvar	_fmt @ sp[(-32)+-4]
  7144  01186A  0EDC               	movlw	-36
  7145  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7146  011872  0EDD               	movlw	-35
  7147  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  7148  01187A  2ADE               	incf	postinc2,f,c
  7149  01187C  0E00               	movlw	0
  7150  01187E  22DD               	addwfc	postdec2,f,c
  7151                           
  7152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7153                           ;stkvar	_ap @ sp[(-32)+-6]
  7154  011880  0EDA               	movlw	-38
  7155  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  7156  011888  0EDB               	movlw	-37
  7157  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7158  011890  0E04               	movlw	4
  7159  011892  5EDE               	subwf	postinc2,f,c
  7160  011894  0E00               	movlw	0
  7161  011896  5ADD               	subwfb	postdec2,f,c
  7162  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7163  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7164  0118A4  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7165  0118AA  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7166  0118B0  006F FF78  F03D    	movff	postinc2,btemp+8
  7167  0118B6  006F FF78  F03E    	movff	postinc2,btemp+9
  7168  0118BC  006F FF78  F03F    	movff	postinc2,btemp+10
  7169  0118C2  006F FF78  F040    	movff	postinc2,btemp+11
  7170                           
  7171                           ;stkvar	_f @ sp[(-32)+22]
  7172  0118C8  0EF6               	movlw	-10
  7173  0118CA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7174  0118D0  0EF7               	movlw	-9
  7175  0118D2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7176  0118D8  0EF8               	movlw	-8
  7177  0118DA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7178  0118E0  0EF9               	movlw	-7
  7179  0118E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7180  0118E8                     l9499:
  7181                           
  7182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7183                           ;stkvar	_c @ sp[(-32)+31]
  7184  0118E8  0EFF               	movlw	-1
  7185  0118EA  50E3               	movf	plusw1,w,c
  7186  0118EC  6EE6               	movwf	postinc1,c
  7187                           
  7188                           ;stkvar	_f @ sp[(-33)+22]
  7189  0118EE  0EF5               	movlw	-11
  7190  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  7191  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7192  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7193  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  7194                           
  7195                           ;stkvar	_fp @ sp[(-37)+-2]
  7196  011908  0ED9               	movlw	-39
  7197  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  7198  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  7199  011916  EC00  F080         	call	_efgtoa	;wreg free
  7200  01191A  D22E               	goto	l1938
  7201  01191C                     l9503:
  7202                           
  7203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7204  01191C  0E02               	movlw	2
  7205  01191E  6EE6               	movwf	postinc1,c
  7206  011920  0E00               	movlw	0
  7207  011922  6EE6               	movwf	postinc1,c
  7208  011924  0EF6               	movlw	low STR_40
  7209  011926  6EE6               	movwf	postinc1,c
  7210  011928  0EFF               	movlw	high STR_40
  7211  01192A  6EE6               	movwf	postinc1,c
  7212                           
  7213                           ;stkvar	_ct @ sp[(-36)+26]
  7214  01192C  0EF6               	movlw	246
  7215  01192E  24E1               	addwf	fsr1l,w,c
  7216  011930  6E35               	movwf	btemp^0,c
  7217  011932  0EFF               	movlw	255
  7218  011934  20E2               	addwfc	fsr1h,w,c
  7219  011936  6E36               	movwf	(btemp+1)^0,c
  7220  011938  0060  F0D7  FFE6   	movff	btemp,postinc1
  7221  01193E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7222  011944  ECE4  F0AB         	call	_strncmp	;wreg free
  7223  011948  5035               	movf	btemp^0,w,c
  7224  01194A  1036               	iorwf	(btemp+1)^0,w,c
  7225  01194C  A4D8               	btfss	status,2,c
  7226  01194E  D096               	goto	l9523
  7227                           
  7228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7229                           ;stkvar	_fmt @ sp[(-32)+-4]
  7230  011950  0EDC               	movlw	-36
  7231  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  7232  011958  0EDD               	movlw	-35
  7233  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7234  011960  006F FF78  F03F    	movff	postinc2,btemp+10
  7235  011966  006F FF74  F040    	movff	postdec2,btemp+11
  7236  01196C  0E01               	movlw	1
  7237  01196E  263F               	addwf	(btemp+10)^0,f,c
  7238  011970  0E00               	movlw	0
  7239  011972  2240               	addwfc	(btemp+11)^0,f,c
  7240  011974  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7241  01197A  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7242  011980                     	if	0	;tblptru may be non-zero
  7243  011980                     	endif
  7244  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7245  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  7246  011982  6EF8               	movwf	tblptru,c
  7247  011984                     	endif
  7248                           
  7249                           ;stkvar	_c @ sp[(-32)+31]
  7250  011984  0008               	tblrd		*
  7251  011986  0EFF               	movlw	-1
  7252  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  7253  01198E  0EBF               	movlw	191
  7254  011990  6E3F               	movwf	(btemp+10)^0,c
  7255  011992  0EFF               	movlw	255
  7256  011994  6E40               	movwf	(btemp+11)^0,c
  7257                           
  7258                           ;stkvar	_fmt @ sp[(-32)+-4]
  7259  011996  0EDC               	movlw	-36
  7260  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  7261  01199E  0EDD               	movlw	-35
  7262  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7263  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7264  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7265  0119B2                     	if	0	;tblptru may be non-zero
  7266  0119B2                     	endif
  7267  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7268  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  7269  0119B4  6EF8               	movwf	tblptru,c
  7270  0119B6                     	endif
  7271  0119B6  0008               	tblrd		*
  7272  0119B8  50F5               	movf	tablat,w,c
  7273  0119BA  6E3D               	movwf	(btemp+8)^0,c
  7274  0119BC  6A3E               	clrf	(btemp+9)^0,c
  7275  0119BE  503F               	movf	(btemp+10)^0,w,c
  7276  0119C0  263D               	addwf	(btemp+8)^0,f,c
  7277  0119C2  5040               	movf	(btemp+11)^0,w,c
  7278  0119C4  223E               	addwfc	(btemp+9)^0,f,c
  7279  0119C6  503E               	movf	(btemp+9)^0,w,c
  7280  0119C8  E106               	bnz	u9560
  7281  0119CA  0E1A               	movlw	26
  7282  0119CC  5C3D               	subwf	(btemp+8)^0,w,c
  7283  0119CE  B0D8               	btfsc	status,0,c
  7284  0119D0  D002               	goto	u9560
  7285  0119D2  0E01               	movlw	1
  7286  0119D4  D001               	goto	u9570
  7287  0119D6                     u9560:
  7288  0119D6  0E00               	movlw	0
  7289  0119D8                     u9570:
  7290  0119D8  6E3F               	movwf	(btemp+10)^0,c
  7291  0119DA  6A40               	clrf	(btemp+11)^0,c
  7292                           
  7293                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+2]
  7294  0119DC  0EE2               	movlw	-30
  7295  0119DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7296  0119E4  0EE3               	movlw	-29
  7297  0119E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  7298                           
  7299                           ;stkvar	_vfpfcnvrt$4156 @ sp[(-32)+2]
  7300  0119EC  0EE2               	movlw	-30
  7301  0119EE  006F FF8C  F035    	movff	plusw1,btemp
  7302  0119F4  0EE3               	movlw	-29
  7303  0119F6  50E3               	movf	plusw1,w,c
  7304  0119F8  1035               	iorwf	btemp^0,w,c
  7305                           
  7306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7307                           ;stkvar	_ap @ sp[(-32)+-6]
  7308                           
  7309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7310                           
  7311                           ;stkvar	_f @ sp[(-32)+22]
  7312                           
  7313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7314                           ;stkvar	_ap @ sp[(-32)+-6]
  7315  0119FA  0EDA               	movlw	-38
  7316  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7317  011A02  0EDB               	movlw	-37
  7318  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  7319  011A0A  0E04               	movlw	4
  7320  011A0C  5EDE               	subwf	postinc2,f,c
  7321  011A0E  0E00               	movlw	0
  7322  011A10  5ADD               	subwfb	postdec2,f,c
  7323  011A12  006F FF78  F03F    	movff	postinc2,btemp+10
  7324  011A18  006F FF74  F040    	movff	postdec2,btemp+11
  7325  011A1E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7326  011A24  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7327  011A2A  006F FF78  F03D    	movff	postinc2,btemp+8
  7328  011A30  006F FF78  F03E    	movff	postinc2,btemp+9
  7329  011A36  006F FF78  F03F    	movff	postinc2,btemp+10
  7330  011A3C  006F FF78  F040    	movff	postinc2,btemp+11
  7331                           
  7332                           ;stkvar	_f @ sp[(-32)+22]
  7333  011A42  0EF6               	movlw	-10
  7334  011A44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7335  011A4A  0EF7               	movlw	-9
  7336  011A4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7337  011A52  0EF8               	movlw	-8
  7338  011A54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7339  011A5A  0EF9               	movlw	-7
  7340  011A5C  0060  F103  FFE3   	movff	btemp+11,plusw1
  7341                           
  7342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7343                           ;stkvar	_fmt @ sp[(-32)+-4]
  7344  011A62  0EDC               	movlw	-36
  7345  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  7346  011A6A  0EDD               	movlw	-35
  7347  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7348  011A72  0E02               	movlw	2
  7349  011A74  26DE               	addwf	postinc2,f,c
  7350  011A76  0E00               	movlw	0
  7351  011A78  22DD               	addwfc	postdec2,f,c
  7352  011A7A  D736               	goto	l9499
  7353  011A7C                     l9523:
  7354                           
  7355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7356                           ;stkvar	_fmt @ sp[(-32)+-4]
  7357  011A7C  0EDC               	movlw	-36
  7358  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7359  011A84  0EDD               	movlw	-35
  7360  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  7361  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7362  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  7363  011A98                     	if	0	;tblptru may be non-zero
  7364  011A98                     	endif
  7365  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7366  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  7367  011A9A  6EF8               	movwf	tblptru,c
  7368  011A9C                     	endif
  7369  011A9C  0008               	tblrd		*
  7370  011A9E  50F5               	movf	tablat,w,c
  7371  011AA0  0A73               	xorlw	115
  7372  011AA2  A4D8               	btfss	status,2,c
  7373  011AA4  D042               	goto	l9533
  7374                           
  7375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7376                           ;stkvar	_fmt @ sp[(-32)+-4]
  7377  011AA6  0EDC               	movlw	-36
  7378  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7379  011AAE  0EDD               	movlw	-35
  7380  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7381  011AB6  2ADE               	incf	postinc2,f,c
  7382  011AB8  0E00               	movlw	0
  7383  011ABA  22DD               	addwfc	postdec2,f,c
  7384                           
  7385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7386                           ;stkvar	_ap @ sp[(-32)+-6]
  7387  011ABC  0EDA               	movlw	-38
  7388  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7389  011AC4  0EDB               	movlw	-37
  7390  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7391  011ACC  0E02               	movlw	2
  7392  011ACE  5EDE               	subwf	postinc2,f,c
  7393  011AD0  0E00               	movlw	0
  7394  011AD2  5ADD               	subwfb	postdec2,f,c
  7395  011AD4  006F FF78  F03F    	movff	postinc2,btemp+10
  7396  011ADA  006F FF74  F040    	movff	postdec2,btemp+11
  7397  011AE0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7398  011AE6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7399  011AEC  006F FF78  F03F    	movff	postinc2,btemp+10
  7400  011AF2  006F FF74  F040    	movff	postdec2,btemp+11
  7401                           
  7402                           ;stkvar	_cp @ sp[(-32)+29]
  7403  011AF8  0EFE               	movlw	-2
  7404  011AFA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7405  011B00  0EFD               	movlw	-3
  7406  011B02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7407                           
  7408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7409                           ;stkvar	_cp @ sp[(-32)+29]
  7410  011B08  0EFD               	movlw	-3
  7411  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  7412  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  7413                           
  7414                           ;stkvar	_fp @ sp[(-34)+-2]
  7415  011B16  0EDC               	movlw	-36
  7416  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7417  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  7418  011B24  ECBD  F0A2         	call	_stoa	;wreg free
  7419  011B28  D127               	goto	l1938
  7420  011B2A                     l9533:
  7421                           
  7422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7423                           ;stkvar	_fmt @ sp[(-32)+-4]
  7424  011B2A  0EDC               	movlw	-36
  7425  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7426  011B32  0EDD               	movlw	-35
  7427  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  7428  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7429  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  7430  011B46                     	if	0	;tblptru may be non-zero
  7431  011B46                     	endif
  7432  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7433  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7434  011B48  6EF8               	movwf	tblptru,c
  7435  011B4A                     	endif
  7436  011B4A  0008               	tblrd		*
  7437  011B4C  50F5               	movf	tablat,w,c
  7438  011B4E  0A78               	xorlw	120
  7439  011B50  B4D8               	btfsc	status,2,c
  7440  011B52  D015               	goto	u9610
  7441                           
  7442                           ;stkvar	_fmt @ sp[(-32)+-4]
  7443  011B54  0EDC               	movlw	-36
  7444  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  7445  011B5C  0EDD               	movlw	-35
  7446  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7447  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  7448  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7449  011B70                     	if	0	;tblptru may be non-zero
  7450  011B70                     	endif
  7451  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7452  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  7453  011B72  6EF8               	movwf	tblptru,c
  7454  011B74                     	endif
  7455  011B74  0008               	tblrd		*
  7456  011B76  50F5               	movf	tablat,w,c
  7457  011B78  0A58               	xorlw	88
  7458  011B7A  A4D8               	btfss	status,2,c
  7459  011B7C  D094               	goto	l9547
  7460  011B7E                     u9610:
  7461                           
  7462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7463                           ;stkvar	_fmt @ sp[(-32)+-4]
  7464  011B7E  0EDC               	movlw	-36
  7465  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  7466  011B86  0EDD               	movlw	-35
  7467  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  7468  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7469  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  7470  011B9A                     	if	0	;tblptru may be non-zero
  7471  011B9A                     	endif
  7472  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7473  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  7474  011B9C  6EF8               	movwf	tblptru,c
  7475  011B9E                     	endif
  7476                           
  7477                           ;stkvar	_c @ sp[(-32)+31]
  7478  011B9E  0008               	tblrd		*
  7479  011BA0  0EFF               	movlw	-1
  7480  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  7481                           
  7482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7483                           ;stkvar	_fmt @ sp[(-32)+-4]
  7484  011BA8  0EDC               	movlw	-36
  7485  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7486  011BB0  0EDD               	movlw	-35
  7487  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7488  011BB8  2ADE               	incf	postinc2,f,c
  7489  011BBA  0E00               	movlw	0
  7490  011BBC  22DD               	addwfc	postdec2,f,c
  7491                           
  7492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7493                           ;stkvar	_ap @ sp[(-32)+-6]
  7494  011BBE  0EDA               	movlw	-38
  7495  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7496  011BC6  0EDB               	movlw	-37
  7497  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7498  011BCE  0E02               	movlw	2
  7499  011BD0  5EDE               	subwf	postinc2,f,c
  7500  011BD2  0E00               	movlw	0
  7501  011BD4  5ADD               	subwfb	postdec2,f,c
  7502  011BD6  006F FF78  F03F    	movff	postinc2,btemp+10
  7503  011BDC  006F FF74  F040    	movff	postdec2,btemp+11
  7504  011BE2  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7505  011BE8  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7506  011BEE  006F FF78  F03F    	movff	postinc2,btemp+10
  7507  011BF4  006F FF74  F040    	movff	postdec2,btemp+11
  7508  011BFA  503F               	movf	(btemp+10)^0,w,c
  7509  011BFC  6E45               	movwf	(btemp+16)^0,c
  7510  011BFE  5040               	movf	(btemp+11)^0,w,c
  7511  011C00  6E46               	movwf	(btemp+17)^0,c
  7512  011C02  6A47               	clrf	(btemp+18)^0,c
  7513  011C04  6A48               	clrf	(btemp+19)^0,c
  7514  011C06  6A49               	clrf	(btemp+20)^0,c
  7515  011C08  6A4A               	clrf	(btemp+21)^0,c
  7516  011C0A  6A4B               	clrf	(btemp+22)^0,c
  7517  011C0C  6A4C               	clrf	(btemp+23)^0,c
  7518                           
  7519                           ;stkvar	_llu @ sp[(-32)+6]
  7520  011C0E  0EE6               	movlw	-26
  7521  011C10  0060  F117  FFE3   	movff	btemp+16,plusw1
  7522  011C16  0EE7               	movlw	-25
  7523  011C18  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7524  011C1E  0EE8               	movlw	-24
  7525  011C20  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7526  011C26  0EE9               	movlw	-23
  7527  011C28  0060  F123  FFE3   	movff	btemp+19,plusw1
  7528  011C2E  0EEA               	movlw	-22
  7529  011C30  0060  F127  FFE3   	movff	btemp+20,plusw1
  7530  011C36  0EEB               	movlw	-21
  7531  011C38  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7532  011C3E  0EEC               	movlw	-20
  7533  011C40  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7534  011C46  0EED               	movlw	-19
  7535  011C48  0060  F133  FFE3   	movff	btemp+23,plusw1
  7536                           
  7537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7538                           ;stkvar	_c @ sp[(-32)+31]
  7539  011C4E  0EFF               	movlw	-1
  7540  011C50  50E3               	movf	plusw1,w,c
  7541  011C52  6EE6               	movwf	postinc1,c
  7542                           
  7543                           ;stkvar	_llu @ sp[(-33)+6]
  7544  011C54  50E1               	movf	fsr1l,w,c
  7545  011C56  0FE5               	addlw	-27
  7546  011C58  6ED9               	movwf	fsr2l,c
  7547  011C5A  50E2               	movf	fsr1h,w,c
  7548  011C5C  6EDA               	movwf	fsr2h,c
  7549  011C5E  0EFF               	movlw	255
  7550  011C60  22DA               	addwfc	fsr2h,f,c
  7551  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7552  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7553  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  7554  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  7555  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  7556  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  7557  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  7558  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  7559                           
  7560                           ;stkvar	_fp @ sp[(-41)+-2]
  7561  011C92  0ED5               	movlw	-43
  7562  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  7563  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  7564  011CA0  ECB4  F09D         	call	_xtoa	;wreg free
  7565  011CA4  D069               	goto	l1938
  7566  011CA6                     l9547:
  7567                           
  7568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7569                           ;stkvar	_fmt @ sp[(-32)+-4]
  7570  011CA6  0EDC               	movlw	-36
  7571  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7572  011CAE  0EDD               	movlw	-35
  7573  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7574  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7575  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7576  011CC2                     	if	0	;tblptru may be non-zero
  7577  011CC2                     	endif
  7578  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7579  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7580  011CC4  6EF8               	movwf	tblptru,c
  7581  011CC6                     	endif
  7582  011CC6  0008               	tblrd		*
  7583  011CC8  50F5               	movf	tablat,w,c
  7584  011CCA  0A25               	xorlw	37
  7585  011CCC  A4D8               	btfss	status,2,c
  7586  011CCE  D01A               	goto	l9557
  7587                           
  7588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7589                           ;stkvar	_fmt @ sp[(-32)+-4]
  7590  011CD0  0EDC               	movlw	-36
  7591  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7592  011CD8  0EDD               	movlw	-35
  7593  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7594  011CE0  2ADE               	incf	postinc2,f,c
  7595  011CE2  0E00               	movlw	0
  7596  011CE4  22DD               	addwfc	postdec2,f,c
  7597                           
  7598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7599                           ;stkvar	_fp @ sp[(-32)+-2]
  7600  011CE6  0EDE               	movlw	-34
  7601  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7602  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  7603  011CF4  0E25               	movlw	37
  7604  011CF6  6EE6               	movwf	postinc1,c
  7605  011CF8  0E00               	movlw	0
  7606  011CFA  6EE6               	movwf	postinc1,c
  7607  011CFC  EC3B  F0B0         	call	_fputc	;wreg free
  7608  011D00                     l9553:
  7609                           
  7610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7611  011D00  0E01               	movlw	1
  7612  011D02  D00C               	goto	L5
  7613  011D04                     l9557:
  7614                           
  7615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7616                           ;stkvar	_fmt @ sp[(-32)+-4]
  7617  011D04  0EDC               	movlw	-36
  7618  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  7619  011D0C  0EDD               	movlw	-35
  7620  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7621  011D14  2ADE               	incf	postinc2,f,c
  7622  011D16  0E00               	movlw	0
  7623  011D18  22DD               	addwfc	postdec2,f,c
  7624                           
  7625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7626  011D1A  0E00               	movlw	0
  7627  011D1C                     L5:
  7628  011D1C  6E35               	movwf	btemp^0,c
  7629  011D1E  0E00               	movlw	0
  7630  011D20  6E36               	movwf	(btemp+1)^0,c
  7631  011D22  D02A               	goto	l1938
  7632  011D24                     l9563:
  7633                           
  7634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7635                           ;stkvar	_fp @ sp[(-32)+-2]
  7636  011D24  0EDE               	movlw	-34
  7637  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  7638  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  7639                           
  7640                           ;stkvar	_fmt @ sp[(-34)+-4]
  7641  011D32  0EDA               	movlw	-38
  7642  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  7643  011D3A  0EDB               	movlw	-37
  7644  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  7645  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  7646  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  7647  011D4E                     	if	0	;tblptru may be non-zero
  7648  011D4E                     	endif
  7649  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7650  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  7651  011D50  6EF8               	movwf	tblptru,c
  7652  011D52                     	endif
  7653  011D52  0008               	tblrd		*
  7654  011D54  50F5               	movf	tablat,w,c
  7655  011D56  6EE6               	movwf	postinc1,c
  7656  011D58  0E00               	movlw	0
  7657  011D5A  6EE6               	movwf	postinc1,c
  7658  011D5C  EC3B  F0B0         	call	_fputc	;wreg free
  7659                           
  7660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7661                           ;stkvar	_fmt @ sp[(-32)+-4]
  7662  011D60  0EDC               	movlw	-36
  7663  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  7664  011D68  0EDD               	movlw	-35
  7665  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7666  011D70  2ADE               	incf	postinc2,f,c
  7667  011D72  0E00               	movlw	0
  7668  011D74  22DD               	addwfc	postdec2,f,c
  7669  011D76  D7C4               	goto	l9553
  7670  011D78                     l1938:
  7671                           
  7672                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7673  011D78  0EDA               	movlw	218
  7674  011D7A  26E1               	addwf	fsr1l,f,c
  7675  011D7C  0EFF               	movlw	255
  7676  011D7E  22E2               	addwfc	fsr1h,f,c
  7677  011D80  0012               	return		;funcret
  7678  011D82                     __end_of_vfpfcnvrt:
  7679                           	opt callstack 0
  7680                           
  7681 ;; *************** function _xtoa *****************
  7682 ;; Defined at:
  7683 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7686 ;;		 -> f(6), NULL(0), 
  7687 ;;  d               8  [STACK] unsigned long long 
  7688 ;;  x               1  [STACK] unsigned char 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  n               8  [STACK] unsigned long long 
  7691 ;;  c               2  [STACK] int 
  7692 ;;  i               2  [STACK] int 
  7693 ;;  w               2  [STACK] int 
  7694 ;;  p               2  [STACK] int 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  2  [STACK] int 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/4
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:   11
  7711 ;; This function calls:
  7712 ;;		_isalpha
  7713 ;;		_isupper
  7714 ;;		_pad
  7715 ;;		_toupper
  7716 ;; This function is called by:
  7717 ;;		_vfpfcnvrt
  7718 ;; This function uses a reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text33
  7722  013B68                     __ptext33:
  7723                           	opt callstack 0
  7724  013B68                     _xtoa:
  7725                           	opt callstack 0
  7726                           
  7727                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7728  013B68  0E14               	movlw	20
  7729  013B6A  26E1               	addwf	fsr1l,f,c
  7730  013B6C  0E00               	movlw	0
  7731  013B6E  22E2               	addwfc	fsr1h,f,c
  7732                           
  7733                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7734                           
  7735                           ;incstack = 0
  7736  013B70  AE21               	btfss	(_prec+1)^0,7,c
  7737                           
  7738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7739  013B72  9222               	bcf	_flags^0,1,c
  7740                           
  7741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7742  013B74  BE21               	btfsc	(_prec+1)^0,7,c
  7743  013B76  D005               	goto	u9210
  7744  013B78  5021               	movf	(_prec+1)^0,w,c
  7745  013B7A  E110               	bnz	l9345
  7746  013B7C  0420               	decf	_prec^0,w,c
  7747  013B7E  B0D8               	btfsc	status,0,c
  7748  013B80  D00D               	goto	l9345
  7749  013B82                     u9210:
  7750  013B82  0E01               	movlw	1
  7751  013B84  6E3F               	movwf	(btemp+10)^0,c
  7752  013B86  0E00               	movlw	0
  7753  013B88  6E40               	movwf	(btemp+11)^0,c
  7754                           
  7755                           ;stkvar	_p @ sp[(-20)+18]
  7756  013B8A  0EFE               	movlw	-2
  7757  013B8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7758  013B92  0EFF               	movlw	-1
  7759  013B94  0060  F103  FFE3   	movff	btemp+11,plusw1
  7760  013B9A  D008               	goto	l1888
  7761  013B9C                     l9345:
  7762                           
  7763                           ;stkvar	_p @ sp[(-20)+18]
  7764  013B9C  0EFE               	movlw	-2
  7765  013B9E  0060  F083  FFE3   	movff	_prec,plusw1
  7766  013BA4  0EFF               	movlw	-1
  7767  013BA6  0060  F087  FFE3   	movff	_prec+1,plusw1
  7768  013BAC                     l1888:
  7769                           
  7770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7771                           ;stkvar	_w @ sp[(-20)+16]
  7772  013BAC  0EFC               	movlw	-4
  7773  013BAE  0060  F07B  FFE3   	movff	_width,plusw1
  7774  013BB4  0EFD               	movlw	-3
  7775  013BB6  0060  F07F  FFE3   	movff	_width+1,plusw1
  7776                           
  7777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7778  013BBC  A822               	btfss	_flags^0,4,c
  7779  013BBE  D00B               	goto	l9351
  7780                           
  7781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7782                           ;stkvar	_w @ sp[(-20)+16]
  7783  013BC0  50E1               	movf	fsr1l,w,c
  7784  013BC2  0FFC               	addlw	-4
  7785  013BC4  6ED9               	movwf	fsr2l,c
  7786  013BC6  50E2               	movf	fsr1h,w,c
  7787  013BC8  6EDA               	movwf	fsr2h,c
  7788  013BCA  0EFF               	movlw	255
  7789  013BCC  22DA               	addwfc	fsr2h,f,c
  7790  013BCE  0EFE               	movlw	254
  7791  013BD0  26DE               	addwf	postinc2,f,c
  7792  013BD2  0EFF               	movlw	255
  7793  013BD4  22DD               	addwfc	postdec2,f,c
  7794  013BD6                     l9351:
  7795                           
  7796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7797                           ;stkvar	_d @ sp[(-20)+-10]
  7798  013BD6  0EE2               	movlw	226
  7799  013BD8  24E1               	addwf	fsr1l,w,c
  7800  013BDA  6ED9               	movwf	fsr2l,c
  7801  013BDC  0EFF               	movlw	255
  7802  013BDE  20E2               	addwfc	fsr1h,w,c
  7803  013BE0  6EDA               	movwf	fsr2h,c
  7804                           
  7805                           ;stkvar	_n @ sp[(-20)+4]
  7806  013BE2  0E08               	movlw	8
  7807  013BE4  6E35               	movwf	btemp^0,c
  7808  013BE6  0EF0               	movlw	-16
  7809  013BE8                     us923999:
  7810  013BE8  006F FF7B FFE3     	movff	postinc2,plusw1
  7811  013BEE  28E8               	incf	wreg,w,c
  7812  013BF0  2E35               	decfsz	btemp^0,f,c
  7813  013BF2  D7FA               	bra	us923999
  7814                           
  7815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7816  013BF4  0E4F               	movlw	79
  7817  013BF6  6E3F               	movwf	(btemp+10)^0,c
  7818  013BF8  0E00               	movlw	0
  7819  013BFA  6E40               	movwf	(btemp+11)^0,c
  7820                           
  7821                           ;stkvar	_i @ sp[(-20)+14]
  7822  013BFC  0EFA               	movlw	-6
  7823  013BFE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7824  013C04  0EFB               	movlw	-5
  7825  013C06  0060  F103  FFE3   	movff	btemp+11,plusw1
  7826                           
  7827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7828  013C0C  0101               	movlb	1	; () banked
  7829  013C0E  6BF3               	clrf	(_dbuf+79)& (0+255),b
  7830                           
  7831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7832  013C10  D0EE               	goto	l9389
  7833  013C12                     l9357:
  7834                           
  7835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  7836                           ;stkvar	_i @ sp[(-20)+14]
  7837  013C12  50E1               	movf	fsr1l,w,c
  7838  013C14  0FFA               	addlw	-6
  7839  013C16  6ED9               	movwf	fsr2l,c
  7840  013C18  50E2               	movf	fsr1h,w,c
  7841  013C1A  6EDA               	movwf	fsr2h,c
  7842  013C1C  0EFF               	movlw	255
  7843  013C1E  22DA               	addwfc	fsr2h,f,c
  7844  013C20  06DE               	decf	postinc2,f,c
  7845  013C22  0E00               	movlw	0
  7846  013C24  5ADD               	subwfb	postdec2,f,c
  7847                           
  7848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7849                           ;stkvar	_n @ sp[(-20)+4]
  7850  013C26  0EF0               	movlw	-16
  7851  013C28  006F FF8C  F03F    	movff	plusw1,btemp+10
  7852  013C2E  0EF1               	movlw	-15
  7853  013C30  006F FF8C  F040    	movff	plusw1,btemp+11
  7854  013C36  0E0F               	movlw	15
  7855  013C38  163F               	andwf	(btemp+10)^0,f,c
  7856  013C3A  0E00               	movlw	0
  7857  013C3C  1640               	andwf	(btemp+11)^0,f,c
  7858                           
  7859                           ;stkvar	_c @ sp[(-20)+12]
  7860  013C3E  0EF8               	movlw	-8
  7861  013C40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7862  013C46  0EF9               	movlw	-7
  7863  013C48  0060  F103  FFE3   	movff	btemp+11,plusw1
  7864                           
  7865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7866                           ;stkvar	_c @ sp[(-20)+12]
  7867  013C4E  0EF9               	movlw	-7
  7868  013C50  BEE3               	btfsc	plusw1,7,c
  7869  013C52  D00F               	goto	l9365
  7870  013C54  0EF9               	movlw	-7
  7871  013C56  50E3               	movf	plusw1,w,c
  7872  013C58  E108               	bnz	u9240
  7873  013C5A  0EF8               	movlw	-8
  7874  013C5C  006F FF8C  F035    	movff	plusw1,btemp
  7875  013C62  0E0A               	movlw	10
  7876  013C64  5E35               	subwf	btemp^0,f,c
  7877  013C66  A0D8               	btfss	status,0,c
  7878  013C68  D004               	goto	l9365
  7879  013C6A                     u9240:
  7880                           
  7881                           ;stkvar	_c @ sp[(-20)+12]
  7882  013C6A  0EF8               	movlw	-8
  7883  013C6C  50E3               	movf	plusw1,w,c
  7884  013C6E  0F57               	addlw	87
  7885  013C70  D003               	goto	L6
  7886  013C72                     l9365:
  7887                           
  7888                           ;stkvar	_c @ sp[(-20)+12]
  7889  013C72  0EF8               	movlw	-8
  7890  013C74  50E3               	movf	plusw1,w,c
  7891  013C76  0F30               	addlw	48
  7892  013C78                     L6:
  7893  013C78  6E3F               	movwf	(btemp+10)^0,c
  7894  013C7A  0EF9               	movlw	-7
  7895  013C7C  006F FF8C  F040    	movff	plusw1,btemp+11
  7896  013C82  0E00               	movlw	0
  7897  013C84  2240               	addwfc	(btemp+11)^0,f,c
  7898                           
  7899                           ;stkvar	_c @ sp[(-20)+12]
  7900  013C86  0EF8               	movlw	-8
  7901  013C88  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7902  013C8E  0EF9               	movlw	-7
  7903  013C90  0060  F103  FFE3   	movff	btemp+11,plusw1
  7904  013C96  0EBF               	movlw	191
  7905  013C98  6E3F               	movwf	(btemp+10)^0,c
  7906  013C9A  0EFF               	movlw	255
  7907  013C9C  6E40               	movwf	(btemp+11)^0,c
  7908                           
  7909                           ;stkvar	_x @ sp[(-20)+-11]
  7910  013C9E  0EE1               	movlw	-31
  7911  013CA0  50E3               	movf	plusw1,w,c
  7912  013CA2  6E3D               	movwf	(btemp+8)^0,c
  7913  013CA4  6A3E               	clrf	(btemp+9)^0,c
  7914  013CA6  503F               	movf	(btemp+10)^0,w,c
  7915  013CA8  263D               	addwf	(btemp+8)^0,f,c
  7916  013CAA  5040               	movf	(btemp+11)^0,w,c
  7917  013CAC  223E               	addwfc	(btemp+9)^0,f,c
  7918  013CAE  503E               	movf	(btemp+9)^0,w,c
  7919  013CB0  E106               	bnz	u9250
  7920  013CB2  0E1A               	movlw	26
  7921  013CB4  5C3D               	subwf	(btemp+8)^0,w,c
  7922  013CB6  B0D8               	btfsc	status,0,c
  7923  013CB8  D002               	goto	u9250
  7924  013CBA  0E01               	movlw	1
  7925  013CBC  D001               	goto	u9260
  7926  013CBE                     u9250:
  7927  013CBE  0E00               	movlw	0
  7928  013CC0                     u9260:
  7929  013CC0  6E3F               	movwf	(btemp+10)^0,c
  7930  013CC2  6A40               	clrf	(btemp+11)^0,c
  7931                           
  7932                           ;stkvar	_xtoa$4134 @ sp[(-20)+2]
  7933  013CC4  0EEE               	movlw	-18
  7934  013CC6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7935  013CCC  0EEF               	movlw	-17
  7936  013CCE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7937                           
  7938                           ;stkvar	_xtoa$4134 @ sp[(-20)+2]
  7939  013CD4  0EEE               	movlw	-18
  7940  013CD6  006F FF8C  F035    	movff	plusw1,btemp
  7941  013CDC  0EEF               	movlw	-17
  7942  013CDE  50E3               	movf	plusw1,w,c
  7943  013CE0  1035               	iorwf	btemp^0,w,c
  7944  013CE2  B4D8               	btfsc	status,2,c
  7945  013CE4  D041               	goto	l9381
  7946  013CE6  0E9F               	movlw	159
  7947  013CE8  6E3F               	movwf	(btemp+10)^0,c
  7948  013CEA  0EFF               	movlw	255
  7949  013CEC  6E40               	movwf	(btemp+11)^0,c
  7950                           
  7951                           ;stkvar	_c @ sp[(-20)+12]
  7952  013CEE  0EF8               	movlw	-8
  7953  013CF0  006F FF8C  F03D    	movff	plusw1,btemp+8
  7954  013CF6  0EF9               	movlw	-7
  7955  013CF8  006F FF8C  F03E    	movff	plusw1,btemp+9
  7956  013CFE  0E20               	movlw	32
  7957  013D00  123D               	iorwf	(btemp+8)^0,f,c
  7958  013D02  0E00               	movlw	0
  7959  013D04  123E               	iorwf	(btemp+9)^0,f,c
  7960  013D06  503F               	movf	(btemp+10)^0,w,c
  7961  013D08  263D               	addwf	(btemp+8)^0,f,c
  7962  013D0A  5040               	movf	(btemp+11)^0,w,c
  7963  013D0C  223E               	addwfc	(btemp+9)^0,f,c
  7964  013D0E  503E               	movf	(btemp+9)^0,w,c
  7965  013D10  E106               	bnz	u9280
  7966  013D12  0E1A               	movlw	26
  7967  013D14  5C3D               	subwf	(btemp+8)^0,w,c
  7968  013D16  B0D8               	btfsc	status,0,c
  7969  013D18  D002               	goto	u9280
  7970  013D1A  0E01               	movlw	1
  7971  013D1C  D001               	goto	u9290
  7972  013D1E                     u9280:
  7973  013D1E  0E00               	movlw	0
  7974  013D20                     u9290:
  7975  013D20  6E3F               	movwf	(btemp+10)^0,c
  7976  013D22  6A40               	clrf	(btemp+11)^0,c
  7977                           
  7978                           ;stkvar	_xtoa$4135 @ sp[(-20)+0]
  7979  013D24  0EEC               	movlw	-20
  7980  013D26  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7981  013D2C  0EED               	movlw	-19
  7982  013D2E  0060  F103  FFE3   	movff	btemp+11,plusw1
  7983                           
  7984                           ;stkvar	_xtoa$4135 @ sp[(-20)+0]
  7985  013D34  0EEC               	movlw	-20
  7986  013D36  006F FF8C  F035    	movff	plusw1,btemp
  7987  013D3C  0EED               	movlw	-19
  7988  013D3E  50E3               	movf	plusw1,w,c
  7989  013D40  1035               	iorwf	btemp^0,w,c
  7990  013D42  B4D8               	btfsc	status,2,c
  7991  013D44  D011               	goto	l9381
  7992                           
  7993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7994                           ;stkvar	_c @ sp[(-20)+12]
  7995  013D46  0EF8               	movlw	-8
  7996  013D48  006F FF8F FFE6     	movff	plusw1,postinc1
  7997  013D4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7998  013D54  ECAB  F0B7         	call	_toupper	;wreg free
  7999                           
  8000                           ;stkvar	_c @ sp[(-20)+12]
  8001  013D58  0EF8               	movlw	-8
  8002  013D5A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8003  013D60  0EF9               	movlw	-7
  8004  013D62  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8005  013D68                     l9381:
  8006                           
  8007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8008                           ;stkvar	_c @ sp[(-20)+12]
  8009                           ;stkvar	_i @ sp[(-20)+14]
  8010  013D68  0EFA               	movlw	-6
  8011  013D6A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8012  013D70  0EFB               	movlw	-5
  8013  013D72  006F FF8C  F040    	movff	plusw1,btemp+11
  8014  013D78  0EA4               	movlw	low _dbuf
  8015  013D7A  243F               	addwf	(btemp+10)^0,w,c
  8016  013D7C  6ED9               	movwf	fsr2l,c
  8017  013D7E  0E01               	movlw	high _dbuf
  8018  013D80  2040               	addwfc	(btemp+11)^0,w,c
  8019  013D82  6EDA               	movwf	fsr2h,c
  8020  013D84  0EF8               	movlw	-8
  8021  013D86  006F FF8F FFDF     	movff	plusw1,indf2
  8022                           
  8023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8024                           ;stkvar	_p @ sp[(-20)+18]
  8025  013D8C  50E1               	movf	fsr1l,w,c
  8026  013D8E  0FFE               	addlw	-2
  8027  013D90  6ED9               	movwf	fsr2l,c
  8028  013D92  50E2               	movf	fsr1h,w,c
  8029  013D94  6EDA               	movwf	fsr2h,c
  8030  013D96  0EFF               	movlw	255
  8031  013D98  22DA               	addwfc	fsr2h,f,c
  8032  013D9A  06DE               	decf	postinc2,f,c
  8033  013D9C  0E00               	movlw	0
  8034  013D9E  5ADD               	subwfb	postdec2,f,c
  8035                           
  8036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8037                           ;stkvar	_w @ sp[(-20)+16]
  8038  013DA0  50E1               	movf	fsr1l,w,c
  8039  013DA2  0FFC               	addlw	-4
  8040  013DA4  6ED9               	movwf	fsr2l,c
  8041  013DA6  50E2               	movf	fsr1h,w,c
  8042  013DA8  6EDA               	movwf	fsr2h,c
  8043  013DAA  0EFF               	movlw	255
  8044  013DAC  22DA               	addwfc	fsr2h,f,c
  8045  013DAE  06DE               	decf	postinc2,f,c
  8046  013DB0  0E00               	movlw	0
  8047  013DB2  5ADD               	subwfb	postdec2,f,c
  8048                           
  8049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8050  013DB4  0E04               	movlw	4
  8051  013DB6  6E40               	movwf	(btemp+11)^0,c
  8052                           
  8053                           ;stkvar	_n @ sp[(-20)+4]
  8054  013DB8  50E1               	movf	fsr1l,w,c
  8055  013DBA  0FF0               	addlw	-16
  8056  013DBC  6ED9               	movwf	fsr2l,c
  8057  013DBE  50E2               	movf	fsr1h,w,c
  8058  013DC0  6EDA               	movwf	fsr2h,c
  8059  013DC2  0EFF               	movlw	255
  8060  013DC4  22DA               	addwfc	fsr2h,f,c
  8061  013DC6  2840               	incf	(btemp+11)^0,w,c
  8062  013DC8  52DE               	movf	postinc2,f,c
  8063  013DCA  D00F               	goto	u9310
  8064  013DCC                     u9315:
  8065  013DCC  52DE               	movf	postinc2,f,c
  8066  013DCE  52DE               	movf	postinc2,f,c
  8067  013DD0  52DE               	movf	postinc2,f,c
  8068  013DD2  52DE               	movf	postinc2,f,c
  8069  013DD4  52DE               	movf	postinc2,f,c
  8070  013DD6  52DE               	movf	postinc2,f,c
  8071  013DD8  90D8               	bcf	status,0,c
  8072  013DDA  32DD               	rrcf	postdec2,f,c
  8073  013DDC  32DD               	rrcf	postdec2,f,c
  8074  013DDE  32DD               	rrcf	postdec2,f,c
  8075  013DE0  32DD               	rrcf	postdec2,f,c
  8076  013DE2  32DD               	rrcf	postdec2,f,c
  8077  013DE4  32DD               	rrcf	postdec2,f,c
  8078  013DE6  32DD               	rrcf	postdec2,f,c
  8079  013DE8  32DE               	rrcf	postinc2,f,c
  8080  013DEA                     u9310:
  8081  013DEA  2EE8               	decfsz	wreg,f,c
  8082  013DEC  D7EF               	goto	u9315
  8083  013DEE                     l9389:
  8084                           
  8085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8086                           ;stkvar	_i @ sp[(-20)+14]
  8087  013DEE  0EFB               	movlw	-5
  8088  013DF0  BEE3               	btfsc	plusw1,7,c
  8089  013DF2  D03A               	goto	u9360
  8090  013DF4  0EFB               	movlw	-5
  8091  013DF6  50E3               	movf	plusw1,w,c
  8092  013DF8  E108               	bnz	u9320
  8093  013DFA  0EFA               	movlw	-6
  8094  013DFC  006F FF8C  F035    	movff	plusw1,btemp
  8095  013E02  0E02               	movlw	2
  8096  013E04  5E35               	subwf	btemp^0,f,c
  8097  013E06  A0D8               	btfss	status,0,c
  8098  013E08  D02F               	goto	u9360
  8099  013E0A                     u9320:
  8100                           
  8101                           ;stkvar	_n @ sp[(-20)+4]
  8102  013E0A  0EF0               	movlw	-16
  8103  013E0C  50E3               	movf	plusw1,w,c
  8104  013E0E  E115               	bnz	u9331
  8105  013E10  0EF1               	movlw	-15
  8106  013E12  50E3               	movf	plusw1,w,c
  8107  013E14  E112               	bnz	u9331
  8108  013E16  0EF2               	movlw	-14
  8109  013E18  50E3               	movf	plusw1,w,c
  8110  013E1A  E10F               	bnz	u9331
  8111  013E1C  0EF3               	movlw	-13
  8112  013E1E  50E3               	movf	plusw1,w,c
  8113  013E20  E10C               	bnz	u9331
  8114  013E22  0EF4               	movlw	-12
  8115  013E24  50E3               	movf	plusw1,w,c
  8116  013E26  E109               	bnz	u9331
  8117  013E28  0EF5               	movlw	-11
  8118  013E2A  50E3               	movf	plusw1,w,c
  8119  013E2C  E106               	bnz	u9331
  8120  013E2E  0EF6               	movlw	-10
  8121  013E30  50E3               	movf	plusw1,w,c
  8122  013E32  E103               	bnz	u9331
  8123  013E34  0EF7               	movlw	-9
  8124  013E36  50E3               	movf	plusw1,w,c
  8125  013E38  A4D8               	btfss	status,2,c
  8126  013E3A                     u9331:
  8127  013E3A  D6EB               	goto	l9357
  8128                           
  8129                           ;stkvar	_p @ sp[(-20)+18]
  8130  013E3C  0EFF               	movlw	-1
  8131  013E3E  BEE3               	btfsc	plusw1,7,c
  8132  013E40  D007               	goto	u9340
  8133  013E42  0EFF               	movlw	-1
  8134  013E44  50E3               	movf	plusw1,w,c
  8135  013E46  E103               	bnz	u9341
  8136  013E48  0EFE               	movlw	-2
  8137  013E4A  04E3               	decf	plusw1,w,c
  8138  013E4C  B0D8               	btfsc	status,0,c
  8139  013E4E                     u9341:
  8140  013E4E  D6E1               	goto	l9357
  8141  013E50                     u9340:
  8142                           
  8143                           ;stkvar	_w @ sp[(-20)+16]
  8144  013E50  0EFD               	movlw	-3
  8145  013E52  BEE3               	btfsc	plusw1,7,c
  8146  013E54  D009               	goto	u9360
  8147  013E56  0EFD               	movlw	-3
  8148  013E58  50E3               	movf	plusw1,w,c
  8149  013E5A  E104               	bnz	u9350
  8150  013E5C  0EFC               	movlw	-4
  8151  013E5E  04E3               	decf	plusw1,w,c
  8152  013E60  A0D8               	btfss	status,0,c
  8153  013E62  D002               	goto	u9360
  8154  013E64                     u9350:
  8155  013E64  B222               	btfsc	_flags^0,1,c
  8156  013E66  D6D5               	goto	l9357
  8157  013E68                     u9360:
  8158                           
  8159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  8160  013E68  A822               	btfss	_flags^0,4,c
  8161  013E6A  D036               	goto	l9405
  8162                           
  8163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  8164                           ;stkvar	_i @ sp[(-20)+14]
  8165  013E6C  50E1               	movf	fsr1l,w,c
  8166  013E6E  0FFA               	addlw	-6
  8167  013E70  6ED9               	movwf	fsr2l,c
  8168  013E72  50E2               	movf	fsr1h,w,c
  8169  013E74  6EDA               	movwf	fsr2h,c
  8170  013E76  0EFF               	movlw	255
  8171  013E78  22DA               	addwfc	fsr2h,f,c
  8172  013E7A  06DE               	decf	postinc2,f,c
  8173  013E7C  0E00               	movlw	0
  8174  013E7E  5ADD               	subwfb	postdec2,f,c
  8175                           
  8176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  8177                           ;stkvar	_x @ sp[(-20)+-11]
  8178                           ;stkvar	_i @ sp[(-20)+14]
  8179  013E80  0EFA               	movlw	-6
  8180  013E82  006F FF8C  F03F    	movff	plusw1,btemp+10
  8181  013E88  0EFB               	movlw	-5
  8182  013E8A  006F FF8C  F040    	movff	plusw1,btemp+11
  8183  013E90  0EA4               	movlw	low _dbuf
  8184  013E92  243F               	addwf	(btemp+10)^0,w,c
  8185  013E94  6ED9               	movwf	fsr2l,c
  8186  013E96  0E01               	movlw	high _dbuf
  8187  013E98  2040               	addwfc	(btemp+11)^0,w,c
  8188  013E9A  6EDA               	movwf	fsr2h,c
  8189  013E9C  0EE1               	movlw	-31
  8190  013E9E  006F FF8F FFDF     	movff	plusw1,indf2
  8191                           
  8192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  8193                           ;stkvar	_i @ sp[(-20)+14]
  8194  013EA4  50E1               	movf	fsr1l,w,c
  8195  013EA6  0FFA               	addlw	-6
  8196  013EA8  6ED9               	movwf	fsr2l,c
  8197  013EAA  50E2               	movf	fsr1h,w,c
  8198  013EAC  6EDA               	movwf	fsr2h,c
  8199  013EAE  0EFF               	movlw	255
  8200  013EB0  22DA               	addwfc	fsr2h,f,c
  8201  013EB2  06DE               	decf	postinc2,f,c
  8202  013EB4  0E00               	movlw	0
  8203  013EB6  5ADD               	subwfb	postdec2,f,c
  8204                           
  8205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  8206                           ;stkvar	_i @ sp[(-20)+14]
  8207  013EB8  0EFA               	movlw	-6
  8208  013EBA  006F FF8C  F03F    	movff	plusw1,btemp+10
  8209  013EC0  0EFB               	movlw	-5
  8210  013EC2  006F FF8C  F040    	movff	plusw1,btemp+11
  8211  013EC8  0EA4               	movlw	low _dbuf
  8212  013ECA  243F               	addwf	(btemp+10)^0,w,c
  8213  013ECC  6ED9               	movwf	fsr2l,c
  8214  013ECE  0E01               	movlw	high _dbuf
  8215  013ED0  2040               	addwfc	(btemp+11)^0,w,c
  8216  013ED2  6EDA               	movwf	fsr2h,c
  8217  013ED4  0E30               	movlw	48
  8218  013ED6  6EDF               	movwf	indf2,c
  8219  013ED8                     l9405:
  8220                           
  8221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  8222                           ;stkvar	_w @ sp[(-20)+16]
  8223  013ED8  0EFC               	movlw	-4
  8224  013EDA  006F FF8F FFE6     	movff	plusw1,postinc1
  8225  013EE0  006F FF8F FFE6     	movff	plusw1,postinc1
  8226                           
  8227                           ;stkvar	_i @ sp[(-22)+14]
  8228  013EE6  0EA4               	movlw	low _dbuf
  8229  013EE8  6E3F               	movwf	(btemp+10)^0,c
  8230  013EEA  0E01               	movlw	high _dbuf
  8231  013EEC  6E40               	movwf	(btemp+11)^0,c
  8232  013EEE  0EF8               	movlw	-8
  8233  013EF0  50E3               	movf	plusw1,w,c
  8234  013EF2  263F               	addwf	(btemp+10)^0,f,c
  8235  013EF4  0EF9               	movlw	-7
  8236  013EF6  50E3               	movf	plusw1,w,c
  8237  013EF8  2240               	addwfc	(btemp+11)^0,f,c
  8238  013EFA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8239  013F00  0060  F103  FFE6   	movff	btemp+11,postinc1
  8240                           
  8241                           ;stkvar	_fp @ sp[(-24)+-2]
  8242  013F06  0EE6               	movlw	-26
  8243  013F08  006F FF8F FFE6     	movff	plusw1,postinc1
  8244  013F0E  006F FF8F FFE6     	movff	plusw1,postinc1
  8245  013F14  EC59  F0B1         	call	_pad	;wreg free
  8246                           
  8247                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  8248  013F18  0EE1               	movlw	225
  8249  013F1A  26E1               	addwf	fsr1l,f,c
  8250  013F1C  0EFF               	movlw	255
  8251  013F1E  22E2               	addwfc	fsr1h,f,c
  8252  013F20  0012               	return		;funcret
  8253  013F22                     __end_of_xtoa:
  8254                           	opt callstack 0
  8255                           
  8256 ;; *************** function _toupper *****************
  8257 ;; Defined at:
  8258 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  c               2  [STACK] int 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  2  [STACK] int 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/1
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    7
  8279 ;; This function calls:
  8280 ;;		_islower
  8281 ;; This function is called by:
  8282 ;;		_xtoa
  8283 ;; This function uses a reentrant model
  8284 ;;
  8285                           
  8286                           	psect	text34
  8287  016F56                     __ptext34:
  8288                           	opt callstack 0
  8289  016F56                     _toupper:
  8290                           	opt callstack 0
  8291                           
  8292                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8293  016F56  52E6               	movf	postinc1,f,c
  8294  016F58  52E6               	movf	postinc1,f,c
  8295                           
  8296                           ;stkvar	_c @ sp[(-2)+-2]
  8297                           
  8298                           ;incstack = 0
  8299  016F5A  0EFC               	movlw	-4
  8300  016F5C  50E3               	movf	plusw1,w,c
  8301  016F5E  0F9F               	addlw	159
  8302  016F60  6E3F               	movwf	(btemp+10)^0,c
  8303  016F62  0EFD               	movlw	-3
  8304  016F64  006F FF8C  F040    	movff	plusw1,btemp+11
  8305  016F6A  0EFF               	movlw	255
  8306  016F6C  2240               	addwfc	(btemp+11)^0,f,c
  8307  016F6E  5040               	movf	(btemp+11)^0,w,c
  8308  016F70  E106               	bnz	u5010
  8309  016F72  0E1A               	movlw	26
  8310  016F74  5C3F               	subwf	(btemp+10)^0,w,c
  8311  016F76  B0D8               	btfsc	status,0,c
  8312  016F78  D002               	goto	u5010
  8313  016F7A  0E01               	movlw	1
  8314  016F7C  D001               	goto	u5020
  8315  016F7E                     u5010:
  8316  016F7E  0E00               	movlw	0
  8317  016F80                     u5020:
  8318  016F80  6E3F               	movwf	(btemp+10)^0,c
  8319  016F82  6A40               	clrf	(btemp+11)^0,c
  8320                           
  8321                           ;stkvar	_toupper$4787 @ sp[(-2)+0]
  8322  016F84  0EFE               	movlw	-2
  8323  016F86  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8324  016F8C  0EFF               	movlw	-1
  8325  016F8E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8326                           
  8327                           ;stkvar	_toupper$4787 @ sp[(-2)+0]
  8328  016F94  0EFE               	movlw	-2
  8329  016F96  006F FF8C  F035    	movff	plusw1,btemp
  8330  016F9C  0EFF               	movlw	-1
  8331  016F9E  50E3               	movf	plusw1,w,c
  8332  016FA0  1035               	iorwf	btemp^0,w,c
  8333  016FA2  B4D8               	btfsc	status,2,c
  8334  016FA4  D00D               	goto	l6257
  8335                           
  8336                           ;stkvar	_c @ sp[(-2)+-2]
  8337  016FA6  0EFC               	movlw	-4
  8338  016FA8  006F FF8C  F035    	movff	plusw1,btemp
  8339  016FAE  0EFD               	movlw	-3
  8340  016FB0  006F FF8C  F036    	movff	plusw1,btemp+1
  8341  016FB6  0E5F               	movlw	95
  8342  016FB8  1635               	andwf	btemp^0,f,c
  8343  016FBA  0E00               	movlw	0
  8344  016FBC  1636               	andwf	(btemp+1)^0,f,c
  8345  016FBE  D008               	goto	l2818
  8346  016FC0                     l6257:
  8347                           
  8348                           ;stkvar	_c @ sp[(-2)+-2]
  8349  016FC0  0EFC               	movlw	-4
  8350  016FC2  006F FF8C  F035    	movff	plusw1,btemp
  8351  016FC8  0EFD               	movlw	-3
  8352  016FCA  006F FF8C  F036    	movff	plusw1,btemp+1
  8353  016FD0                     l2818:
  8354                           
  8355                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8356  016FD0  52E5               	movf	postdec1,f,c
  8357  016FD2  52E5               	movf	postdec1,f,c
  8358  016FD4  52E5               	movf	postdec1,f,c
  8359  016FD6  52E5               	movf	postdec1,f,c
  8360  016FD8  0012               	return		;funcret
  8361  016FDA                     __end_of_toupper:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _islower *****************
  8365 ;; Defined at:
  8366 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  c               2  [STACK] int 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  2  [STACK] int 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    6
  8387 ;; This function calls:
  8388 ;;		Nothing
  8389 ;; This function is called by:
  8390 ;;		_toupper
  8391 ;; This function uses a reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text35
  8395  017928                     __ptext35:
  8396                           	opt callstack 0
  8397  017928                     _islower:
  8398                           	opt callstack 16
  8399                           
  8400                           ;stkvar	_c @ sp[(0)+-2]
  8401                           
  8402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8403                           ;incstack = 0
  8404  017928  0EFE               	movlw	-2
  8405  01792A  50E3               	movf	plusw1,w,c
  8406  01792C  0F9F               	addlw	159
  8407  01792E  6E3F               	movwf	(btemp+10)^0,c
  8408  017930  0EFF               	movlw	-1
  8409  017932  006F FF8C  F040    	movff	plusw1,btemp+11
  8410  017938  0EFF               	movlw	255
  8411  01793A  2240               	addwfc	(btemp+11)^0,f,c
  8412  01793C  5040               	movf	(btemp+11)^0,w,c
  8413  01793E  E106               	bnz	u4700
  8414  017940  0E1A               	movlw	26
  8415  017942  5C3F               	subwf	(btemp+10)^0,w,c
  8416  017944  B0D8               	btfsc	status,0,c
  8417  017946  D002               	goto	u4700
  8418  017948  0E01               	movlw	1
  8419  01794A  D001               	goto	u4710
  8420  01794C                     u4700:
  8421  01794C  0E00               	movlw	0
  8422  01794E                     u4710:
  8423  01794E  6E35               	movwf	btemp^0,c
  8424  017950  6A36               	clrf	(btemp+1)^0,c
  8425                           
  8426                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8427  017952  52E5               	movf	postdec1,f,c
  8428  017954  52E5               	movf	postdec1,f,c
  8429  017956  0012               	return		;funcret
  8430  017958                     __end_of_islower:
  8431                           	opt callstack 0
  8432                           
  8433 ;; *************** function _isalpha *****************
  8434 ;; Defined at:
  8435 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  c               2  [STACK] int 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  2  [STACK] int 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    6
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_xtoa
  8460 ;; This function uses a reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text36
  8464  0176E2                     __ptext36:
  8465                           	opt callstack 0
  8466  0176E2                     _isalpha:
  8467                           	opt callstack 17
  8468                           
  8469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8470                           ;incstack = 0
  8471  0176E2  0E9F               	movlw	159
  8472  0176E4  6E3F               	movwf	(btemp+10)^0,c
  8473  0176E6  0EFF               	movlw	255
  8474  0176E8  6E40               	movwf	(btemp+11)^0,c
  8475                           
  8476                           ;stkvar	_c @ sp[(0)+-2]
  8477  0176EA  0EFE               	movlw	-2
  8478  0176EC  006F FF8C  F03D    	movff	plusw1,btemp+8
  8479  0176F2  0EFF               	movlw	-1
  8480  0176F4  006F FF8C  F03E    	movff	plusw1,btemp+9
  8481  0176FA  0E20               	movlw	32
  8482  0176FC  123D               	iorwf	(btemp+8)^0,f,c
  8483  0176FE  0E00               	movlw	0
  8484  017700  123E               	iorwf	(btemp+9)^0,f,c
  8485  017702  503F               	movf	(btemp+10)^0,w,c
  8486  017704  263D               	addwf	(btemp+8)^0,f,c
  8487  017706  5040               	movf	(btemp+11)^0,w,c
  8488  017708  223E               	addwfc	(btemp+9)^0,f,c
  8489  01770A  503E               	movf	(btemp+9)^0,w,c
  8490  01770C  E106               	bnz	u4990
  8491  01770E  0E1A               	movlw	26
  8492  017710  5C3D               	subwf	(btemp+8)^0,w,c
  8493  017712  B0D8               	btfsc	status,0,c
  8494  017714  D002               	goto	u4990
  8495  017716  0E01               	movlw	1
  8496  017718  D001               	goto	u5000
  8497  01771A                     u4990:
  8498  01771A  0E00               	movlw	0
  8499  01771C                     u5000:
  8500  01771C  6E35               	movwf	btemp^0,c
  8501  01771E  6A36               	clrf	(btemp+1)^0,c
  8502                           
  8503                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8504  017720  52E5               	movf	postdec1,f,c
  8505  017722  52E5               	movf	postdec1,f,c
  8506  017724  0012               	return		;funcret
  8507  017726                     __end_of_isalpha:
  8508                           	opt callstack 0
  8509                           
  8510 ;; *************** function _strncmp *****************
  8511 ;; Defined at:
  8512 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  _l              2  [STACK] PTR const unsigned char 
  8515 ;;		 -> ct(3), 
  8516 ;;  _r              2  [STACK] PTR const unsigned char 
  8517 ;;		 -> STR_42(3), 
  8518 ;;  n               2  [STACK] unsigned int 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  r               2  [STACK] PTR const unsigned char 
  8521 ;;		 -> STR_42(3), 
  8522 ;;  l               2  [STACK] PTR const unsigned char 
  8523 ;;		 -> ct(3), 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  2  [STACK] int 
  8526 ;; Registers used:
  8527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/4
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;Total ram usage:        0 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:    6
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_vfpfcnvrt
  8544 ;; This function uses a reentrant model
  8545 ;;
  8546                           
  8547                           	psect	text37
  8548  0157C8                     __ptext37:
  8549                           	opt callstack 0
  8550  0157C8                     _strncmp:
  8551                           	opt callstack 0
  8552                           
  8553                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8554  0157C8  52E6               	movf	postinc1,f,c
  8555  0157CA  52E6               	movf	postinc1,f,c
  8556  0157CC  52E6               	movf	postinc1,f,c
  8557  0157CE  52E6               	movf	postinc1,f,c
  8558                           
  8559                           ;stkvar	__l @ sp[(-4)+-2]
  8560                           
  8561                           ;incstack = 0
  8562  0157D0  0EFA               	movlw	-6
  8563  0157D2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8564  0157D8  0EFB               	movlw	-5
  8565  0157DA  006F FF8C  F040    	movff	plusw1,btemp+11
  8566                           
  8567                           ;stkvar	_l @ sp[(-4)+2]
  8568  0157E0  0EFF               	movlw	-1
  8569  0157E2  0060  F103  FFE3   	movff	btemp+11,plusw1
  8570  0157E8  0EFE               	movlw	-2
  8571  0157EA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8572                           
  8573                           ;stkvar	__r @ sp[(-4)+-4]
  8574  0157F0  0EF8               	movlw	-8
  8575  0157F2  006F FF8C  F03F    	movff	plusw1,btemp+10
  8576  0157F8  0EF9               	movlw	-7
  8577  0157FA  006F FF8C  F040    	movff	plusw1,btemp+11
  8578                           
  8579                           ;stkvar	_r @ sp[(-4)+0]
  8580  015800  0EFD               	movlw	-3
  8581  015802  0060  F103  FFE3   	movff	btemp+11,plusw1
  8582  015808  0EFC               	movlw	-4
  8583  01580A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8584                           
  8585                           ;stkvar	_n @ sp[(-4)+-6]
  8586  015810  0EF6               	movlw	-10
  8587  015812  006F FF8C  F035    	movff	plusw1,btemp
  8588  015818  0E01               	movlw	1
  8589  01581A  5E35               	subwf	btemp^0,f,c
  8590  01581C  0EF6               	movlw	-10
  8591  01581E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8592  015824  0EF7               	movlw	-9
  8593  015826  006F FF8C  F035    	movff	plusw1,btemp
  8594  01582C  0E00               	movlw	0
  8595  01582E  5A35               	subwfb	btemp^0,f,c
  8596  015830  0EF7               	movlw	-9
  8597  015832  0060  F0D7  FFE3   	movff	btemp,plusw1
  8598  015838  0EF6               	movlw	-10
  8599  01583A  28E3               	incf	plusw1,w,c
  8600  01583C  E13F               	bnz	l7415
  8601  01583E  0EF7               	movlw	-9
  8602  015840  28E3               	incf	plusw1,w,c
  8603  015842  A4D8               	btfss	status,2,c
  8604  015844  D03B               	goto	l7415
  8605  015846  0E00               	movlw	0
  8606  015848  6E35               	movwf	btemp^0,c
  8607  01584A  0E00               	movlw	0
  8608  01584C  6E36               	movwf	(btemp+1)^0,c
  8609  01584E  D09B               	goto	l2790
  8610  015850                     l7413:
  8611                           
  8612                           ;stkvar	_l @ sp[(-4)+2]
  8613  015850  0EFE               	movlw	-2
  8614  015852  50E3               	movf	plusw1,w,c
  8615  015854  0F01               	addlw	1
  8616  015856  6E35               	movwf	btemp^0,c
  8617  015858  0EFE               	movlw	-2
  8618  01585A  0060  F0D7  FFE3   	movff	btemp,plusw1
  8619  015860  6A35               	clrf	btemp^0,c
  8620  015862  0EFF               	movlw	-1
  8621  015864  50E3               	movf	plusw1,w,c
  8622  015866  2035               	addwfc	btemp^0,w,c
  8623  015868  6E35               	movwf	btemp^0,c
  8624  01586A  0EFF               	movlw	-1
  8625  01586C  0060  F0D7  FFE3   	movff	btemp,plusw1
  8626                           
  8627                           ;stkvar	_r @ sp[(-4)+0]
  8628  015872  0EFC               	movlw	-4
  8629  015874  50E3               	movf	plusw1,w,c
  8630  015876  0F01               	addlw	1
  8631  015878  6E35               	movwf	btemp^0,c
  8632  01587A  0EFC               	movlw	-4
  8633  01587C  0060  F0D7  FFE3   	movff	btemp,plusw1
  8634  015882  6A35               	clrf	btemp^0,c
  8635  015884  0EFD               	movlw	-3
  8636  015886  50E3               	movf	plusw1,w,c
  8637  015888  2035               	addwfc	btemp^0,w,c
  8638  01588A  6E35               	movwf	btemp^0,c
  8639  01588C  0EFD               	movlw	-3
  8640  01588E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8641                           
  8642                           ;stkvar	_n @ sp[(-4)+-6]
  8643  015894  0EF6               	movlw	-10
  8644  015896  006F FF8C  F035    	movff	plusw1,btemp
  8645  01589C  0E01               	movlw	1
  8646  01589E  5E35               	subwf	btemp^0,f,c
  8647  0158A0  0EF6               	movlw	-10
  8648  0158A2  0060  F0D7  FFE3   	movff	btemp,plusw1
  8649  0158A8  0EF7               	movlw	-9
  8650  0158AA  006F FF8C  F035    	movff	plusw1,btemp
  8651  0158B0  0E00               	movlw	0
  8652  0158B2  5A35               	subwfb	btemp^0,f,c
  8653  0158B4  0EF7               	movlw	-9
  8654  0158B6  0060  F0D7  FFE3   	movff	btemp,plusw1
  8655  0158BC                     l7415:
  8656                           
  8657                           ;stkvar	_l @ sp[(-4)+2]
  8658  0158BC  0EFE               	movlw	-2
  8659  0158BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8660  0158C4  0EFF               	movlw	-1
  8661  0158C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8662  0158CC  50DF               	movf	indf2,w,c
  8663  0158CE  B4D8               	btfsc	status,2,c
  8664  0158D0  D03B               	goto	u7190
  8665                           
  8666                           ;stkvar	_r @ sp[(-4)+0]
  8667  0158D2  50E1               	movf	fsr1l,w,c
  8668  0158D4  0FFC               	addlw	-4
  8669  0158D6  6ED9               	movwf	fsr2l,c
  8670  0158D8  50E2               	movf	fsr1h,w,c
  8671  0158DA  6EDA               	movwf	fsr2h,c
  8672  0158DC  0EFF               	movlw	255
  8673  0158DE  22DA               	addwfc	fsr2h,f,c
  8674  0158E0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8675  0158E6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8676  0158EC                     	if	0	;tblptru may be non-zero
  8677  0158EC                     	endif
  8678  0158EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8679  0158EC  0E00               	movlw	low (__mediumconst shr (0+16))
  8680  0158EE  6EF8               	movwf	tblptru,c
  8681  0158F0                     	endif
  8682  0158F0  0008               	tblrd		*
  8683  0158F2  50F5               	movf	tablat,w,c
  8684  0158F4  0900               	iorlw	0
  8685  0158F6  B4D8               	btfsc	status,2,c
  8686  0158F8  D027               	goto	u7190
  8687                           
  8688                           ;stkvar	_n @ sp[(-4)+-6]
  8689  0158FA  0EF6               	movlw	-10
  8690  0158FC  006F FF8C  F035    	movff	plusw1,btemp
  8691  015902  0EF7               	movlw	-9
  8692  015904  50E3               	movf	plusw1,w,c
  8693  015906  1035               	iorwf	btemp^0,w,c
  8694  015908  B4D8               	btfsc	status,2,c
  8695  01590A  D01E               	goto	u7190
  8696                           
  8697                           ;stkvar	_l @ sp[(-4)+2]
  8698  01590C  0EFE               	movlw	-2
  8699  01590E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8700  015914  0EFF               	movlw	-1
  8701  015916  006F FF8F FFDA     	movff	plusw1,fsr2h
  8702  01591C  50DF               	movf	indf2,w,c
  8703  01591E  6E40               	movwf	(btemp+11)^0,c
  8704                           
  8705                           ;stkvar	_r @ sp[(-4)+0]
  8706  015920  50E1               	movf	fsr1l,w,c
  8707  015922  0FFC               	addlw	-4
  8708  015924  6ED9               	movwf	fsr2l,c
  8709  015926  50E2               	movf	fsr1h,w,c
  8710  015928  6EDA               	movwf	fsr2h,c
  8711  01592A  0EFF               	movlw	255
  8712  01592C  22DA               	addwfc	fsr2h,f,c
  8713  01592E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8714  015934  006F FF77 FFF7     	movff	postdec2,tblptrh
  8715  01593A                     	if	0	;tblptru may be non-zero
  8716  01593A                     	endif
  8717  01593A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8718  01593A  0E00               	movlw	low (__mediumconst shr (0+16))
  8719  01593C  6EF8               	movwf	tblptru,c
  8720  01593E                     	endif
  8721  01593E  0008               	tblrd		*
  8722  015940  50F5               	movf	tablat,w,c
  8723  015942  1840               	xorwf	(btemp+11)^0,w,c
  8724  015944  B4D8               	btfsc	status,2,c
  8725  015946  D784               	goto	l7413
  8726  015948                     u7190:
  8727                           
  8728                           ;stkvar	_l @ sp[(-4)+2]
  8729  015948  0EFE               	movlw	-2
  8730  01594A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8731  015950  0EFF               	movlw	-1
  8732  015952  006F FF8F FFDA     	movff	plusw1,fsr2h
  8733  015958  50DF               	movf	indf2,w,c
  8734  01595A  6E35               	movwf	btemp^0,c
  8735  01595C  6A36               	clrf	(btemp+1)^0,c
  8736                           
  8737                           ;stkvar	_r @ sp[(-4)+0]
  8738  01595E  50E1               	movf	fsr1l,w,c
  8739  015960  0FFC               	addlw	-4
  8740  015962  6ED9               	movwf	fsr2l,c
  8741  015964  50E2               	movf	fsr1h,w,c
  8742  015966  6EDA               	movwf	fsr2h,c
  8743  015968  0EFF               	movlw	255
  8744  01596A  22DA               	addwfc	fsr2h,f,c
  8745  01596C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8746  015972  006F FF77 FFF7     	movff	postdec2,tblptrh
  8747  015978                     	if	0	;tblptru may be non-zero
  8748  015978                     	endif
  8749  015978                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8750  015978  0E00               	movlw	low (__mediumconst shr (0+16))
  8751  01597A  6EF8               	movwf	tblptru,c
  8752  01597C                     	endif
  8753  01597C  0008               	tblrd		*
  8754  01597E  50F5               	movf	tablat,w,c
  8755  015980  5E35               	subwf	btemp^0,f,c
  8756  015982  0E00               	movlw	0
  8757  015984  5A36               	subwfb	(btemp+1)^0,f,c
  8758  015986                     l2790:
  8759                           
  8760                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  8761  015986  0EF6               	movlw	246
  8762  015988  26E1               	addwf	fsr1l,f,c
  8763  01598A  0EFF               	movlw	255
  8764  01598C  22E2               	addwfc	fsr1h,f,c
  8765  01598E  0012               	return		;funcret
  8766  015990                     __end_of_strncmp:
  8767                           	opt callstack 0
  8768                           
  8769 ;; *************** function _stoa *****************
  8770 ;; Defined at:
  8771 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8774 ;;		 -> f(6), NULL(0), 
  8775 ;;  s               2  [STACK] PTR unsigned char 
  8776 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(9), STR_14(12), 
  8777 ;;		 -> D.lcd(216), D(218), T(144), STR_7(4), 
  8778 ;;		 -> STR_3(4), V(189), 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  nuls            7  [STACK] unsigned char [7]
  8781 ;;  l               2  [STACK] int 
  8782 ;;  p               2  [STACK] int 
  8783 ;;  cp              2  [STACK] PTR unsigned char 
  8784 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_15(9), 
  8785 ;;		 -> STR_14(12), D.lcd(216), D(218), T(144), 
  8786 ;;		 -> STR_7(4), STR_3(4), V(189), 
  8787 ;;  w               2  [STACK] int 
  8788 ;;  i               2  [STACK] int 
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  2  [STACK] int 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/4
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;Total ram usage:        0 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:    9
  8805 ;; This function calls:
  8806 ;;		_fputc
  8807 ;;		_strlen
  8808 ;; This function is called by:
  8809 ;;		_vfpfcnvrt
  8810 ;; This function uses a reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text38
  8814  01457A                     __ptext38:
  8815                           	opt callstack 0
  8816  01457A                     _stoa:
  8817                           	opt callstack 0
  8818                           
  8819                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8820  01457A  0E11               	movlw	17
  8821  01457C  26E1               	addwf	fsr1l,f,c
  8822  01457E  0E00               	movlw	0
  8823  014580  22E2               	addwfc	fsr1h,f,c
  8824                           
  8825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8826                           
  8827                           ;incstack = 0
  8828  014582  EE20  F0C5         	lfsr	2,stoa@F1166
  8829                           
  8830                           ;stkvar	_nuls @ sp[(-17)+0]
  8831  014586  0E07               	movlw	7
  8832  014588  6E35               	movwf	btemp^0,c
  8833  01458A  0EEF               	movlw	-17
  8834  01458C                     us910999:
  8835  01458C  006F FF7B FFE3     	movff	postinc2,plusw1
  8836  014592  28E8               	incf	wreg,w,c
  8837  014594  2E35               	decfsz	btemp^0,f,c
  8838  014596  D7FA               	bra	us910999
  8839                           
  8840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8841                           ;stkvar	_s @ sp[(-17)+-4]
  8842  014598  0EEB               	movlw	-21
  8843  01459A  006F FF8C  F03F    	movff	plusw1,btemp+10
  8844  0145A0  0EEC               	movlw	-20
  8845  0145A2  006F FF8C  F040    	movff	plusw1,btemp+11
  8846                           
  8847                           ;stkvar	_cp @ sp[(-17)+11]
  8848  0145A8  0EFB               	movlw	-5
  8849  0145AA  0060  F103  FFE3   	movff	btemp+11,plusw1
  8850  0145B0  0EFA               	movlw	-6
  8851  0145B2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8852                           
  8853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8854                           ;stkvar	_cp @ sp[(-17)+11]
  8855  0145B8  0EFA               	movlw	-6
  8856  0145BA  006F FF8C  F035    	movff	plusw1,btemp
  8857  0145C0  0EFB               	movlw	-5
  8858  0145C2  50E3               	movf	plusw1,w,c
  8859  0145C4  1035               	iorwf	btemp^0,w,c
  8860  0145C6  A4D8               	btfss	status,2,c
  8861  0145C8  D00E               	goto	l9293
  8862                           
  8863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8864                           ;stkvar	_nuls @ sp[(-17)+0]
  8865  0145CA  0EEF               	movlw	239
  8866  0145CC  24E1               	addwf	fsr1l,w,c
  8867  0145CE  6E3F               	movwf	(btemp+10)^0,c
  8868  0145D0  0EFF               	movlw	255
  8869  0145D2  20E2               	addwfc	fsr1h,w,c
  8870  0145D4  6E40               	movwf	(btemp+11)^0,c
  8871                           
  8872                           ;stkvar	_cp @ sp[(-17)+11]
  8873  0145D6  0EFB               	movlw	-5
  8874  0145D8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8875  0145DE  0EFA               	movlw	-6
  8876  0145E0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8877  0145E6                     l9293:
  8878                           
  8879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8880                           ;stkvar	_cp @ sp[(-17)+11]
  8881  0145E6  0EFA               	movlw	-6
  8882  0145E8  006F FF8F FFE6     	movff	plusw1,postinc1
  8883  0145EE  006F FF8F FFE6     	movff	plusw1,postinc1
  8884  0145F4  ECEE  F0B5         	call	_strlen	;wreg free
  8885                           
  8886                           ;stkvar	_l @ sp[(-17)+7]
  8887  0145F8  0EF6               	movlw	-10
  8888  0145FA  0060  F0D7  FFE3   	movff	btemp,plusw1
  8889  014600  0EF7               	movlw	-9
  8890  014602  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8891                           
  8892                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8893                           ;stkvar	_p @ sp[(-17)+9]
  8894  014608  0EF8               	movlw	-8
  8895  01460A  0060  F083  FFE3   	movff	_prec,plusw1
  8896  014610  0EF9               	movlw	-7
  8897  014612  0060  F087  FFE3   	movff	_prec+1,plusw1
  8898                           
  8899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8900                           ;stkvar	_p @ sp[(-17)+9]
  8901  014618  0EF9               	movlw	-7
  8902  01461A  BEE3               	btfsc	plusw1,7,c
  8903  01461C  D023               	goto	l1867
  8904                           
  8905                           ;stkvar	_l @ sp[(-17)+7]
  8906                           ;stkvar	_p @ sp[(-17)+9]
  8907  01461E  50E1               	movf	fsr1l,w,c
  8908  014620  0FF8               	addlw	-8
  8909  014622  6ED9               	movwf	fsr2l,c
  8910  014624  50E2               	movf	fsr1h,w,c
  8911  014626  6EDA               	movwf	fsr2h,c
  8912  014628  0EFF               	movlw	255
  8913  01462A  22DA               	addwfc	fsr2h,f,c
  8914  01462C  0EF6               	movlw	-10
  8915  01462E  50E3               	movf	plusw1,w,c
  8916  014630  5CDE               	subwf	postinc2,w,c
  8917  014632  50DE               	movf	postinc2,w,c
  8918  014634  0A80               	xorlw	128
  8919  014636  6E35               	movwf	btemp^0,c
  8920  014638  0EF7               	movlw	-9
  8921  01463A  50E3               	movf	plusw1,w,c
  8922  01463C  0A80               	xorlw	128
  8923  01463E  5835               	subwfb	btemp^0,w,c
  8924  014640  B0D8               	btfsc	status,0,c
  8925  014642  D010               	goto	l1867
  8926                           
  8927                           ;stkvar	_p @ sp[(-17)+9]
  8928                           ;stkvar	_l @ sp[(-17)+7]
  8929  014644  0EF8               	movlw	-8
  8930  014646  006F FF8C  F035    	movff	plusw1,btemp
  8931  01464C  0EF6               	movlw	-10
  8932  01464E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8933  014654  0EF9               	movlw	-7
  8934  014656  006F FF8C  F035    	movff	plusw1,btemp
  8935  01465C  0EF7               	movlw	-9
  8936  01465E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8937  014664                     l1867:
  8938                           
  8939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8940                           ;stkvar	_l @ sp[(-17)+7]
  8941                           ;stkvar	_p @ sp[(-17)+9]
  8942  014664  0EF6               	movlw	-10
  8943  014666  006F FF8C  F035    	movff	plusw1,btemp
  8944  01466C  0EF8               	movlw	-8
  8945  01466E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8946  014674  0EF7               	movlw	-9
  8947  014676  006F FF8C  F035    	movff	plusw1,btemp
  8948  01467C  0EF9               	movlw	-7
  8949  01467E  0060  F0D7  FFE3   	movff	btemp,plusw1
  8950                           
  8951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8952                           ;stkvar	_w @ sp[(-17)+13]
  8953  014684  0EFC               	movlw	-4
  8954  014686  0060  F07B  FFE3   	movff	_width,plusw1
  8955  01468C  0EFD               	movlw	-3
  8956  01468E  0060  F07F  FFE3   	movff	_width+1,plusw1
  8957                           
  8958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8959  014694  A022               	btfss	_flags^0,0,c
  8960  014696  D01F               	goto	l9313
  8961  014698  D031               	goto	u9150
  8962  01469A                     l9309:
  8963                           
  8964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8965                           ;stkvar	_fp @ sp[(-17)+-2]
  8966  01469A  0EED               	movlw	-19
  8967  01469C  006F FF8F FFE6     	movff	plusw1,postinc1
  8968  0146A2  006F FF8F FFE6     	movff	plusw1,postinc1
  8969  0146A8  0E20               	movlw	32
  8970  0146AA  6EE6               	movwf	postinc1,c
  8971  0146AC  0E00               	movlw	0
  8972  0146AE  6EE6               	movwf	postinc1,c
  8973  0146B0  EC3B  F0B0         	call	_fputc	;wreg free
  8974                           
  8975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8976                           ;stkvar	_l @ sp[(-17)+7]
  8977  0146B4  0EF6               	movlw	-10
  8978  0146B6  50E3               	movf	plusw1,w,c
  8979  0146B8  0F01               	addlw	1
  8980  0146BA  6E35               	movwf	btemp^0,c
  8981  0146BC  0EF6               	movlw	-10
  8982  0146BE  0060  F0D7  FFE3   	movff	btemp,plusw1
  8983  0146C4  6A35               	clrf	btemp^0,c
  8984  0146C6  0EF7               	movlw	-9
  8985  0146C8  50E3               	movf	plusw1,w,c
  8986  0146CA  2035               	addwfc	btemp^0,w,c
  8987  0146CC  6E35               	movwf	btemp^0,c
  8988  0146CE  0EF7               	movlw	-9
  8989  0146D0  0060  F0D7  FFE3   	movff	btemp,plusw1
  8990  0146D6                     l9313:
  8991                           
  8992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8993                           ;stkvar	_w @ sp[(-17)+13]
  8994                           ;stkvar	_l @ sp[(-17)+7]
  8995  0146D6  50E1               	movf	fsr1l,w,c
  8996  0146D8  0FF6               	addlw	-10
  8997  0146DA  6ED9               	movwf	fsr2l,c
  8998  0146DC  50E2               	movf	fsr1h,w,c
  8999  0146DE  6EDA               	movwf	fsr2h,c
  9000  0146E0  0EFF               	movlw	255
  9001  0146E2  22DA               	addwfc	fsr2h,f,c
  9002  0146E4  0EFC               	movlw	-4
  9003  0146E6  50E3               	movf	plusw1,w,c
  9004  0146E8  5CDE               	subwf	postinc2,w,c
  9005  0146EA  50DE               	movf	postinc2,w,c
  9006  0146EC  0A80               	xorlw	128
  9007  0146EE  6E35               	movwf	btemp^0,c
  9008  0146F0  0EFD               	movlw	-3
  9009  0146F2  50E3               	movf	plusw1,w,c
  9010  0146F4  0A80               	xorlw	128
  9011  0146F6  5835               	subwfb	btemp^0,w,c
  9012  0146F8  A0D8               	btfss	status,0,c
  9013  0146FA  D7CF               	goto	l9309
  9014  0146FC                     u9150:
  9015                           
  9016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9017                           ;stkvar	_i @ sp[(-17)+15]
  9018  0146FC  0EFE               	movlw	-2
  9019  0146FE  6AE3               	clrf	plusw1,c
  9020  014700  0EFF               	movlw	-1
  9021  014702  6AE3               	clrf	plusw1,c
  9022                           
  9023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9024  014704  D045               	goto	l9323
  9025  014706                     l9317:
  9026                           
  9027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  9028                           ;stkvar	_fp @ sp[(-17)+-2]
  9029  014706  0EED               	movlw	-19
  9030  014708  006F FF8F FFE6     	movff	plusw1,postinc1
  9031  01470E  006F FF8F FFE6     	movff	plusw1,postinc1
  9032                           
  9033                           ;stkvar	_cp @ sp[(-19)+11]
  9034  014714  0EF8               	movlw	-8
  9035  014716  006F FF8F FFF6     	movff	plusw1,tblptrl
  9036  01471C  0EF9               	movlw	-7
  9037  01471E  006F FF8F FFF7     	movff	plusw1,tblptrh
  9038  014724  0E00               	movlw	low (__mediumconst shr (0+16))
  9039  014726  6EF8               	movwf	tblptru,c
  9040  014728  0E1F               	movlw	(high __ramtop+-1)
  9041  01472A  64F7               	cpfsgt	tblptrh,c
  9042  01472C  D003               	bra	u9167
  9043  01472E  0008               	tblrd		*
  9044  014730  50F5               	movf	tablat,w,c
  9045  014732  D007               	bra	u9160
  9046  014734                     u9167:
  9047  014734  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9048  01473A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9049  014740  50EF               	movf	indf0,w,c
  9050  014742                     u9160:
  9051  014742  6EE6               	movwf	postinc1,c
  9052  014744  0E00               	movlw	0
  9053  014746  6EE6               	movwf	postinc1,c
  9054  014748  EC3B  F0B0         	call	_fputc	;wreg free
  9055                           
  9056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9057                           ;stkvar	_cp @ sp[(-17)+11]
  9058  01474C  0EFA               	movlw	-6
  9059  01474E  50E3               	movf	plusw1,w,c
  9060  014750  0F01               	addlw	1
  9061  014752  6E35               	movwf	btemp^0,c
  9062  014754  0EFA               	movlw	-6
  9063  014756  0060  F0D7  FFE3   	movff	btemp,plusw1
  9064  01475C  6A35               	clrf	btemp^0,c
  9065  01475E  0EFB               	movlw	-5
  9066  014760  50E3               	movf	plusw1,w,c
  9067  014762  2035               	addwfc	btemp^0,w,c
  9068  014764  6E35               	movwf	btemp^0,c
  9069  014766  0EFB               	movlw	-5
  9070  014768  0060  F0D7  FFE3   	movff	btemp,plusw1
  9071                           
  9072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9073                           ;stkvar	_i @ sp[(-17)+15]
  9074  01476E  0EFE               	movlw	-2
  9075  014770  50E3               	movf	plusw1,w,c
  9076  014772  0F01               	addlw	1
  9077  014774  6E35               	movwf	btemp^0,c
  9078  014776  0EFE               	movlw	-2
  9079  014778  0060  F0D7  FFE3   	movff	btemp,plusw1
  9080  01477E  6A35               	clrf	btemp^0,c
  9081  014780  0EFF               	movlw	-1
  9082  014782  50E3               	movf	plusw1,w,c
  9083  014784  2035               	addwfc	btemp^0,w,c
  9084  014786  6E35               	movwf	btemp^0,c
  9085  014788  0EFF               	movlw	-1
  9086  01478A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9087  014790                     l9323:
  9088                           
  9089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  9090                           ;stkvar	_p @ sp[(-17)+9]
  9091                           ;stkvar	_i @ sp[(-17)+15]
  9092  014790  50E1               	movf	fsr1l,w,c
  9093  014792  0FFE               	addlw	-2
  9094  014794  6ED9               	movwf	fsr2l,c
  9095  014796  50E2               	movf	fsr1h,w,c
  9096  014798  6EDA               	movwf	fsr2h,c
  9097  01479A  0EFF               	movlw	255
  9098  01479C  22DA               	addwfc	fsr2h,f,c
  9099  01479E  0EF8               	movlw	-8
  9100  0147A0  50E3               	movf	plusw1,w,c
  9101  0147A2  5CDE               	subwf	postinc2,w,c
  9102  0147A4  50DE               	movf	postinc2,w,c
  9103  0147A6  0A80               	xorlw	128
  9104  0147A8  6E35               	movwf	btemp^0,c
  9105  0147AA  0EF9               	movlw	-7
  9106  0147AC  50E3               	movf	plusw1,w,c
  9107  0147AE  0A80               	xorlw	128
  9108  0147B0  5835               	subwfb	btemp^0,w,c
  9109  0147B2  A0D8               	btfss	status,0,c
  9110  0147B4  D7A8               	goto	l9317
  9111                           
  9112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  9113  0147B6  B022               	btfsc	_flags^0,0,c
  9114  0147B8  D01F               	goto	l9331
  9115  0147BA  D031               	goto	u9190
  9116  0147BC                     l9327:
  9117                           
  9118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  9119                           ;stkvar	_fp @ sp[(-17)+-2]
  9120  0147BC  0EED               	movlw	-19
  9121  0147BE  006F FF8F FFE6     	movff	plusw1,postinc1
  9122  0147C4  006F FF8F FFE6     	movff	plusw1,postinc1
  9123  0147CA  0E20               	movlw	32
  9124  0147CC  6EE6               	movwf	postinc1,c
  9125  0147CE  0E00               	movlw	0
  9126  0147D0  6EE6               	movwf	postinc1,c
  9127  0147D2  EC3B  F0B0         	call	_fputc	;wreg free
  9128                           
  9129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  9130                           ;stkvar	_l @ sp[(-17)+7]
  9131  0147D6  0EF6               	movlw	-10
  9132  0147D8  50E3               	movf	plusw1,w,c
  9133  0147DA  0F01               	addlw	1
  9134  0147DC  6E35               	movwf	btemp^0,c
  9135  0147DE  0EF6               	movlw	-10
  9136  0147E0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9137  0147E6  6A35               	clrf	btemp^0,c
  9138  0147E8  0EF7               	movlw	-9
  9139  0147EA  50E3               	movf	plusw1,w,c
  9140  0147EC  2035               	addwfc	btemp^0,w,c
  9141  0147EE  6E35               	movwf	btemp^0,c
  9142  0147F0  0EF7               	movlw	-9
  9143  0147F2  0060  F0D7  FFE3   	movff	btemp,plusw1
  9144  0147F8                     l9331:
  9145                           
  9146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  9147                           ;stkvar	_w @ sp[(-17)+13]
  9148                           ;stkvar	_l @ sp[(-17)+7]
  9149  0147F8  50E1               	movf	fsr1l,w,c
  9150  0147FA  0FF6               	addlw	-10
  9151  0147FC  6ED9               	movwf	fsr2l,c
  9152  0147FE  50E2               	movf	fsr1h,w,c
  9153  014800  6EDA               	movwf	fsr2h,c
  9154  014802  0EFF               	movlw	255
  9155  014804  22DA               	addwfc	fsr2h,f,c
  9156  014806  0EFC               	movlw	-4
  9157  014808  50E3               	movf	plusw1,w,c
  9158  01480A  5CDE               	subwf	postinc2,w,c
  9159  01480C  50DE               	movf	postinc2,w,c
  9160  01480E  0A80               	xorlw	128
  9161  014810  6E35               	movwf	btemp^0,c
  9162  014812  0EFD               	movlw	-3
  9163  014814  50E3               	movf	plusw1,w,c
  9164  014816  0A80               	xorlw	128
  9165  014818  5835               	subwfb	btemp^0,w,c
  9166  01481A  A0D8               	btfss	status,0,c
  9167  01481C  D7CF               	goto	l9327
  9168  01481E                     u9190:
  9169                           
  9170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  9171                           ;stkvar	_l @ sp[(-17)+7]
  9172  01481E  0EF6               	movlw	-10
  9173  014820  006F FF8C  F035    	movff	plusw1,btemp
  9174  014826  0EF7               	movlw	-9
  9175  014828  006F FF8C  F036    	movff	plusw1,btemp+1
  9176                           
  9177                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  9178  01482E  0EEB               	movlw	235
  9179  014830  26E1               	addwf	fsr1l,f,c
  9180  014832  0EFF               	movlw	255
  9181  014834  22E2               	addwfc	fsr1h,f,c
  9182  014836  0012               	return		;funcret
  9183  014838                     __end_of_stoa:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function _efgtoa *****************
  9187 ;; Defined at:
  9188 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9191 ;;		 -> f(6), NULL(0), 
  9192 ;;  f               4  [STACK] PTR struct _IO_FILE
  9193 ;;  c               1  [STACK] unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  u               4  [STACK] unsigned char 
  9196 ;;  g               4  [STACK] unsigned char 
  9197 ;;  l               4  [STACK] unsigned char 
  9198 ;;  h               4  [STACK] unsigned char 
  9199 ;;  ou              4  [STACK] unsigned char 
  9200 ;;  n               2  [STACK] int 
  9201 ;;  e               2  [STACK] int 
  9202 ;;  i               2  [STACK] int 
  9203 ;;  w               2  [STACK] int 
  9204 ;;  p               2  [STACK] int 
  9205 ;;  sign            2  [STACK] int 
  9206 ;;  d               2  [STACK] int 
  9207 ;;  ne              2  [STACK] int 
  9208 ;;  m               2  [STACK] int 
  9209 ;;  pp              2  [STACK] int 
  9210 ;;  t               2  [STACK] int 
  9211 ;;  mode            1  [STACK] unsigned char 
  9212 ;;  nmode           1  [STACK] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  2  [STACK] int 
  9215 ;; Registers used:
  9216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/4
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9226 ;;Total ram usage:        0 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:   11
  9229 ;; This function calls:
  9230 ;;		___awdiv
  9231 ;;		___awmod
  9232 ;;		___fladd
  9233 ;;		___fldiv
  9234 ;;		___fleq
  9235 ;;		___flge
  9236 ;;		___flmul
  9237 ;;		___flneg
  9238 ;;		___flsub
  9239 ;;		___fltol
  9240 ;;		___fpclassifyf
  9241 ;;		_floorf
  9242 ;;		_isupper
  9243 ;;		_pad
  9244 ;;		_strcpy
  9245 ;;		_tolower
  9246 ;; This function is called by:
  9247 ;;		_vfpfcnvrt
  9248 ;; This function uses a reentrant model
  9249 ;;
  9250                           
  9251                           	psect	text39
  9252  010000                     __ptext39:
  9253                           	opt callstack 0
  9254  010000                     _efgtoa:
  9255                           	opt callstack 0
  9256                           
  9257                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9258  010000  0E38               	movlw	56
  9259  010002  26E1               	addwf	fsr1l,f,c
  9260  010004  0E00               	movlw	0
  9261  010006  22E2               	addwfc	fsr1h,f,c
  9262                           
  9263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  9264                           ;stkvar	_sign @ sp[(-56)+42]
  9265                           
  9266                           ;incstack = 0
  9267  010008  0EF2               	movlw	-14
  9268  01000A  6AE3               	clrf	plusw1,c
  9269  01000C  0EF3               	movlw	-13
  9270  01000E  6AE3               	clrf	plusw1,c
  9271                           
  9272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  9273                           ;stkvar	_f @ sp[(-56)+-6]
  9274  010010  0EC2               	movlw	-62
  9275  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
  9276  010018  0EC3               	movlw	-61
  9277  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
  9278  010020  0EC4               	movlw	-60
  9279  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
  9280  010028  0EC5               	movlw	-59
  9281  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
  9282                           
  9283                           ;stkvar	_g @ sp[(-56)+16]
  9284  010030  0ED8               	movlw	-40
  9285  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9286  010038  0ED9               	movlw	-39
  9287  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9288  010040  0EDA               	movlw	-38
  9289  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9290  010048  0EDB               	movlw	-37
  9291  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9292                           
  9293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  9294                           ;stkvar	_g @ sp[(-56)+16]
  9295  010050  0EDB               	movlw	-37
  9296  010052  AEE3               	btfss	plusw1,7,c
  9297  010054  D02B               	goto	l8991
  9298                           
  9299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  9300  010056  0E01               	movlw	1
  9301  010058  6E3F               	movwf	(btemp+10)^0,c
  9302  01005A  0E00               	movlw	0
  9303  01005C  6E40               	movwf	(btemp+11)^0,c
  9304                           
  9305                           ;stkvar	_sign @ sp[(-56)+42]
  9306  01005E  0EF2               	movlw	-14
  9307  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9308  010066  0EF3               	movlw	-13
  9309  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
  9310                           
  9311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  9312                           ;stkvar	_g @ sp[(-56)+16]
  9313  01006E  0ED8               	movlw	-40
  9314  010070  006F FF8F FFE6     	movff	plusw1,postinc1
  9315  010076  006F FF8F FFE6     	movff	plusw1,postinc1
  9316  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
  9317  010082  006F FF8F FFE6     	movff	plusw1,postinc1
  9318  010088  EC9E  F0BA         	call	___flneg	;wreg free
  9319                           
  9320                           ;stkvar	_g @ sp[(-56)+16]
  9321  01008C  0ED8               	movlw	-40
  9322  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9323  010094  0ED9               	movlw	-39
  9324  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9325  01009C  0EDA               	movlw	-38
  9326  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9327  0100A4  0EDB               	movlw	-37
  9328  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9329  0100AC                     l8991:
  9330                           
  9331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  9332                           ;stkvar	_n @ sp[(-56)+32]
  9333  0100AC  0EE8               	movlw	-24
  9334  0100AE  6AE3               	clrf	plusw1,c
  9335  0100B0  0EE9               	movlw	-23
  9336  0100B2  6AE3               	clrf	plusw1,c
  9337                           
  9338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  9339                           ;stkvar	_w @ sp[(-56)+38]
  9340  0100B4  0EEE               	movlw	-18
  9341  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
  9342  0100BC  0EEF               	movlw	-17
  9343  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
  9344                           
  9345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  9346                           ;stkvar	_sign @ sp[(-56)+42]
  9347  0100C4  0EF2               	movlw	-14
  9348  0100C6  006F FF8C  F035    	movff	plusw1,btemp
  9349  0100CC  0EF3               	movlw	-13
  9350  0100CE  50E3               	movf	plusw1,w,c
  9351  0100D0  1035               	iorwf	btemp^0,w,c
  9352  0100D2  A4D8               	btfss	status,2,c
  9353  0100D4  D002               	goto	u8600
  9354  0100D6  A422               	btfss	_flags^0,2,c
  9355  0100D8  D036               	goto	l9011
  9356  0100DA                     u8600:
  9357                           
  9358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  9359                           ;stkvar	_sign @ sp[(-56)+42]
  9360  0100DA  0EF2               	movlw	-14
  9361  0100DC  006F FF8C  F035    	movff	plusw1,btemp
  9362  0100E2  0EF3               	movlw	-13
  9363  0100E4  50E3               	movf	plusw1,w,c
  9364  0100E6  1035               	iorwf	btemp^0,w,c
  9365  0100E8  A4D8               	btfss	status,2,c
  9366  0100EA  D002               	goto	l9003
  9367  0100EC  0E2B               	movlw	43
  9368  0100EE  D001               	goto	L7
  9369  0100F0                     l9003:
  9370  0100F0  0E2D               	movlw	45
  9371  0100F2                     L7:
  9372  0100F2  6E3F               	movwf	(btemp+10)^0,c
  9373  0100F4  0E00               	movlw	0
  9374  0100F6  6E40               	movwf	(btemp+11)^0,c
  9375                           
  9376                           ;stkvar	_efgtoa$4103 @ sp[(-56)+10]
  9377  0100F8  0ED2               	movlw	-46
  9378  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9379  010100  0ED3               	movlw	-45
  9380  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
  9381                           
  9382                           ;stkvar	_efgtoa$4103 @ sp[(-56)+10]
  9383  010108  0ED2               	movlw	-46
  9384  01010A  006F FF8C  F1A4    	movff	plusw1,_dbuf
  9385                           
  9386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  9387                           ;stkvar	_n @ sp[(-56)+32]
  9388  010110  0EE8               	movlw	-24
  9389  010112  50E3               	movf	plusw1,w,c
  9390  010114  0F01               	addlw	1
  9391  010116  6E35               	movwf	btemp^0,c
  9392  010118  0EE8               	movlw	-24
  9393  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
  9394  010120  6A35               	clrf	btemp^0,c
  9395  010122  0EE9               	movlw	-23
  9396  010124  50E3               	movf	plusw1,w,c
  9397  010126  2035               	addwfc	btemp^0,w,c
  9398  010128  6E35               	movwf	btemp^0,c
  9399  01012A  0EE9               	movlw	-23
  9400  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9401                           
  9402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  9403                           ;stkvar	_w @ sp[(-56)+38]
  9404  010132  50E1               	movf	fsr1l,w,c
  9405  010134  0FEE               	addlw	-18
  9406  010136  6ED9               	movwf	fsr2l,c
  9407  010138  50E2               	movf	fsr1h,w,c
  9408  01013A  6EDA               	movwf	fsr2h,c
  9409  01013C  0EFF               	movlw	255
  9410  01013E  22DA               	addwfc	fsr2h,f,c
  9411  010140  06DE               	decf	postinc2,f,c
  9412  010142  0E00               	movlw	0
  9413  010144  5ADD               	subwfb	postdec2,f,c
  9414  010146                     l9011:
  9415                           
  9416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9417                           ;stkvar	_g @ sp[(-56)+16]
  9418  010146  0ED8               	movlw	-40
  9419  010148  006F FF8F FFE6     	movff	plusw1,postinc1
  9420  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
  9421  010154  006F FF8F FFE6     	movff	plusw1,postinc1
  9422  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
  9423  010160  ECC8  F0AC         	call	___fpclassifyf	;wreg free
  9424  010164  0435               	decf	btemp^0,w,c
  9425  010166  1036               	iorwf	(btemp+1)^0,w,c
  9426  010168  A4D8               	btfss	status,2,c
  9427  01016A  D076               	goto	l9029
  9428  01016C  0EBF               	movlw	191
  9429  01016E  6E3F               	movwf	(btemp+10)^0,c
  9430  010170  0EFF               	movlw	255
  9431  010172  6E40               	movwf	(btemp+11)^0,c
  9432                           
  9433                           ;stkvar	_c @ sp[(-56)+-7]
  9434  010174  0EC1               	movlw	-63
  9435  010176  50E3               	movf	plusw1,w,c
  9436  010178  6E3D               	movwf	(btemp+8)^0,c
  9437  01017A  6A3E               	clrf	(btemp+9)^0,c
  9438  01017C  503F               	movf	(btemp+10)^0,w,c
  9439  01017E  263D               	addwf	(btemp+8)^0,f,c
  9440  010180  5040               	movf	(btemp+11)^0,w,c
  9441  010182  223E               	addwfc	(btemp+9)^0,f,c
  9442  010184  503E               	movf	(btemp+9)^0,w,c
  9443  010186  E106               	bnz	u8630
  9444  010188  0E1A               	movlw	26
  9445  01018A  5C3D               	subwf	(btemp+8)^0,w,c
  9446  01018C  B0D8               	btfsc	status,0,c
  9447  01018E  D002               	goto	u8630
  9448  010190  0E01               	movlw	1
  9449  010192  D001               	goto	u8640
  9450  010194                     u8630:
  9451  010194  0E00               	movlw	0
  9452  010196                     u8640:
  9453  010196  6E3F               	movwf	(btemp+10)^0,c
  9454  010198  6A40               	clrf	(btemp+11)^0,c
  9455                           
  9456                           ;stkvar	_efgtoa$4104 @ sp[(-56)+8]
  9457  01019A  0ED0               	movlw	-48
  9458  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9459  0101A2  0ED1               	movlw	-47
  9460  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  9461                           
  9462                           ;stkvar	_efgtoa$4104 @ sp[(-56)+8]
  9463  0101AA  0ED0               	movlw	-48
  9464  0101AC  006F FF8C  F035    	movff	plusw1,btemp
  9465  0101B2  0ED1               	movlw	-47
  9466  0101B4  50E3               	movf	plusw1,w,c
  9467  0101B6  1035               	iorwf	btemp^0,w,c
  9468  0101B8  B4D8               	btfsc	status,2,c
  9469  0101BA  D017               	goto	l9021
  9470                           
  9471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  9472  0101BC  0EE2               	movlw	low STR_32
  9473  0101BE  6EE6               	movwf	postinc1,c
  9474  0101C0  0EFF               	movlw	high STR_32
  9475  0101C2  6EE6               	movwf	postinc1,c
  9476                           
  9477                           ;stkvar	_n @ sp[(-58)+32]
  9478  0101C4  0EA4               	movlw	low _dbuf
  9479  0101C6  6E3F               	movwf	(btemp+10)^0,c
  9480  0101C8  0E01               	movlw	high _dbuf
  9481  0101CA  6E40               	movwf	(btemp+11)^0,c
  9482  0101CC  0EE6               	movlw	-26
  9483  0101CE  50E3               	movf	plusw1,w,c
  9484  0101D0  263F               	addwf	(btemp+10)^0,f,c
  9485  0101D2  0EE7               	movlw	-25
  9486  0101D4  50E3               	movf	plusw1,w,c
  9487  0101D6  2240               	addwfc	(btemp+11)^0,f,c
  9488  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9489  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
  9490  0101E4  EC64  F0B3         	call	_strcpy	;wreg free
  9491                           
  9492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  9493  0101E8  D016               	goto	l9023
  9494  0101EA                     l9021:
  9495                           
  9496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  9497  0101EA  0EEA               	movlw	low STR_33
  9498  0101EC  6EE6               	movwf	postinc1,c
  9499  0101EE  0EFF               	movlw	high STR_33
  9500  0101F0  6EE6               	movwf	postinc1,c
  9501                           
  9502                           ;stkvar	_n @ sp[(-58)+32]
  9503  0101F2  0EA4               	movlw	low _dbuf
  9504  0101F4  6E3F               	movwf	(btemp+10)^0,c
  9505  0101F6  0E01               	movlw	high _dbuf
  9506  0101F8  6E40               	movwf	(btemp+11)^0,c
  9507  0101FA  0EE6               	movlw	-26
  9508  0101FC  50E3               	movf	plusw1,w,c
  9509  0101FE  263F               	addwf	(btemp+10)^0,f,c
  9510  010200  0EE7               	movlw	-25
  9511  010202  50E3               	movf	plusw1,w,c
  9512  010204  2240               	addwfc	(btemp+11)^0,f,c
  9513  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9514  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
  9515  010212  EC64  F0B3         	call	_strcpy	;wreg free
  9516  010216                     l9023:
  9517                           
  9518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  9519                           ;stkvar	_w @ sp[(-56)+38]
  9520  010216  50E1               	movf	fsr1l,w,c
  9521  010218  0FEE               	addlw	-18
  9522  01021A  6ED9               	movwf	fsr2l,c
  9523  01021C  50E2               	movf	fsr1h,w,c
  9524  01021E  6EDA               	movwf	fsr2h,c
  9525  010220  0EFF               	movlw	255
  9526  010222  22DA               	addwfc	fsr2h,f,c
  9527  010224  0EFD               	movlw	253
  9528  010226  26DE               	addwf	postinc2,f,c
  9529  010228  0EFF               	movlw	255
  9530  01022A  22DD               	addwfc	postdec2,f,c
  9531  01022C                     l9025:
  9532                           
  9533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  9534                           ;stkvar	_w @ sp[(-56)+38]
  9535  01022C  0EEE               	movlw	-18
  9536  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
  9537  010234  006F FF8F FFE6     	movff	plusw1,postinc1
  9538  01023A  0EA4               	movlw	low _dbuf
  9539  01023C  6EE6               	movwf	postinc1,c
  9540  01023E  0E01               	movlw	high _dbuf
  9541  010240  6EE6               	movwf	postinc1,c
  9542                           
  9543                           ;stkvar	_fp @ sp[(-60)+-2]
  9544  010242  0EC2               	movlw	-62
  9545  010244  006F FF8F FFE6     	movff	plusw1,postinc1
  9546  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
  9547  010250  EC59  F0B1         	call	_pad	;wreg free
  9548  010254  EF1D  F089         	goto	l1785
  9549  010258                     l9029:
  9550                           
  9551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9552                           ;stkvar	_g @ sp[(-56)+16]
  9553  010258  0ED8               	movlw	-40
  9554  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
  9555  010260  006F FF8F FFE6     	movff	plusw1,postinc1
  9556  010266  006F FF8F FFE6     	movff	plusw1,postinc1
  9557  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
  9558  010272  ECC8  F0AC         	call	___fpclassifyf	;wreg free
  9559  010276  5035               	movf	btemp^0,w,c
  9560  010278  1036               	iorwf	(btemp+1)^0,w,c
  9561  01027A  A4D8               	btfss	status,2,c
  9562  01027C  D056               	goto	l9047
  9563  01027E  0EBF               	movlw	191
  9564  010280  6E3F               	movwf	(btemp+10)^0,c
  9565  010282  0EFF               	movlw	255
  9566  010284  6E40               	movwf	(btemp+11)^0,c
  9567                           
  9568                           ;stkvar	_c @ sp[(-56)+-7]
  9569  010286  0EC1               	movlw	-63
  9570  010288  50E3               	movf	plusw1,w,c
  9571  01028A  6E3D               	movwf	(btemp+8)^0,c
  9572  01028C  6A3E               	clrf	(btemp+9)^0,c
  9573  01028E  503F               	movf	(btemp+10)^0,w,c
  9574  010290  263D               	addwf	(btemp+8)^0,f,c
  9575  010292  5040               	movf	(btemp+11)^0,w,c
  9576  010294  223E               	addwfc	(btemp+9)^0,f,c
  9577  010296  503E               	movf	(btemp+9)^0,w,c
  9578  010298  E106               	bnz	u8670
  9579  01029A  0E1A               	movlw	26
  9580  01029C  5C3D               	subwf	(btemp+8)^0,w,c
  9581  01029E  B0D8               	btfsc	status,0,c
  9582  0102A0  D002               	goto	u8670
  9583  0102A2  0E01               	movlw	1
  9584  0102A4  D001               	goto	u8680
  9585  0102A6                     u8670:
  9586  0102A6  0E00               	movlw	0
  9587  0102A8                     u8680:
  9588  0102A8  6E3F               	movwf	(btemp+10)^0,c
  9589  0102AA  6A40               	clrf	(btemp+11)^0,c
  9590                           
  9591                           ;stkvar	_efgtoa$4108 @ sp[(-56)+6]
  9592  0102AC  0ECE               	movlw	-50
  9593  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9594  0102B4  0ECF               	movlw	-49
  9595  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
  9596                           
  9597                           ;stkvar	_efgtoa$4108 @ sp[(-56)+6]
  9598  0102BC  0ECE               	movlw	-50
  9599  0102BE  006F FF8C  F035    	movff	plusw1,btemp
  9600  0102C4  0ECF               	movlw	-49
  9601  0102C6  50E3               	movf	plusw1,w,c
  9602  0102C8  1035               	iorwf	btemp^0,w,c
  9603  0102CA  B4D8               	btfsc	status,2,c
  9604  0102CC  D017               	goto	l9039
  9605                           
  9606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  9607  0102CE  0EE6               	movlw	low STR_36
  9608  0102D0  6EE6               	movwf	postinc1,c
  9609  0102D2  0EFF               	movlw	high STR_36
  9610  0102D4  6EE6               	movwf	postinc1,c
  9611                           
  9612                           ;stkvar	_n @ sp[(-58)+32]
  9613  0102D6  0EA4               	movlw	low _dbuf
  9614  0102D8  6E3F               	movwf	(btemp+10)^0,c
  9615  0102DA  0E01               	movlw	high _dbuf
  9616  0102DC  6E40               	movwf	(btemp+11)^0,c
  9617  0102DE  0EE6               	movlw	-26
  9618  0102E0  50E3               	movf	plusw1,w,c
  9619  0102E2  263F               	addwf	(btemp+10)^0,f,c
  9620  0102E4  0EE7               	movlw	-25
  9621  0102E6  50E3               	movf	plusw1,w,c
  9622  0102E8  2240               	addwfc	(btemp+11)^0,f,c
  9623  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9624  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
  9625  0102F6  EC64  F0B3         	call	_strcpy	;wreg free
  9626                           
  9627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  9628  0102FA  D78D               	goto	l9023
  9629  0102FC                     l9039:
  9630                           
  9631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  9632  0102FC  0EEE               	movlw	low STR_37
  9633  0102FE  6EE6               	movwf	postinc1,c
  9634  010300  0EFF               	movlw	high STR_37
  9635  010302  6EE6               	movwf	postinc1,c
  9636                           
  9637                           ;stkvar	_n @ sp[(-58)+32]
  9638  010304  0EA4               	movlw	low _dbuf
  9639  010306  6E3F               	movwf	(btemp+10)^0,c
  9640  010308  0E01               	movlw	high _dbuf
  9641  01030A  6E40               	movwf	(btemp+11)^0,c
  9642  01030C  0EE6               	movlw	-26
  9643  01030E  50E3               	movf	plusw1,w,c
  9644  010310  263F               	addwf	(btemp+10)^0,f,c
  9645  010312  0EE7               	movlw	-25
  9646  010314  50E3               	movf	plusw1,w,c
  9647  010316  2240               	addwfc	(btemp+11)^0,f,c
  9648  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9649  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
  9650  010324  EC64  F0B3         	call	_strcpy	;wreg free
  9651  010328  D776               	goto	l9023
  9652  01032A                     l9047:
  9653                           
  9654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  9655  01032A  0E00               	movlw	0
  9656  01032C  6E3D               	movwf	(btemp+8)^0,c
  9657  01032E  0E00               	movlw	0
  9658  010330  6E3E               	movwf	(btemp+9)^0,c
  9659  010332  0E80               	movlw	128
  9660  010334  6E3F               	movwf	(btemp+10)^0,c
  9661  010336  0E3F               	movlw	63
  9662  010338  6E40               	movwf	(btemp+11)^0,c
  9663                           
  9664                           ;stkvar	_u @ sp[(-56)+12]
  9665  01033A  0ED4               	movlw	-44
  9666  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  9667  010342  0ED5               	movlw	-43
  9668  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  9669  01034A  0ED6               	movlw	-42
  9670  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9671  010352  0ED7               	movlw	-41
  9672  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
  9673                           
  9674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  9675                           ;stkvar	_e @ sp[(-56)+34]
  9676  01035A  0EEA               	movlw	-22
  9677  01035C  6AE3               	clrf	plusw1,c
  9678  01035E  0EEB               	movlw	-21
  9679  010360  6AE3               	clrf	plusw1,c
  9680                           
  9681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  9682  010362  0E00               	movlw	0
  9683  010364  6EE6               	movwf	postinc1,c
  9684  010366  0E00               	movlw	0
  9685  010368  6EE6               	movwf	postinc1,c
  9686  01036A  0E00               	movlw	0
  9687  01036C  6EE6               	movwf	postinc1,c
  9688  01036E  0E00               	movlw	0
  9689  010370  6EE6               	movwf	postinc1,c
  9690                           
  9691                           ;stkvar	_g @ sp[(-60)+16]
  9692  010372  0ED4               	movlw	-44
  9693  010374  006F FF8F FFE6     	movff	plusw1,postinc1
  9694  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
  9695  010380  006F FF8F FFE6     	movff	plusw1,postinc1
  9696  010386  006F FF8F FFE6     	movff	plusw1,postinc1
  9697  01038C  EC31  F0B4         	call	___fleq	;wreg free
  9698  010390  A035               	btfss	btemp& (0+255),0,c
  9699  010392  D039               	goto	l9059
  9700  010394  D0BC               	goto	u8720
  9701  010396                     l9055:
  9702                           
  9703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  9704  010396  0E00               	movlw	0
  9705  010398  6EE6               	movwf	postinc1,c
  9706  01039A  0E00               	movlw	0
  9707  01039C  6EE6               	movwf	postinc1,c
  9708  01039E  0E20               	movlw	32
  9709  0103A0  6EE6               	movwf	postinc1,c
  9710  0103A2  0E41               	movlw	65
  9711  0103A4  6EE6               	movwf	postinc1,c
  9712                           
  9713                           ;stkvar	_u @ sp[(-60)+12]
  9714  0103A6  0ED0               	movlw	-48
  9715  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9716  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
  9717  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
  9718  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9719  0103C0  ECC1  F08E         	call	___flmul	;wreg free
  9720                           
  9721                           ;stkvar	_u @ sp[(-56)+12]
  9722  0103C4  0ED4               	movlw	-44
  9723  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
  9724  0103CC  0ED5               	movlw	-43
  9725  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9726  0103D4  0ED6               	movlw	-42
  9727  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9728  0103DC  0ED7               	movlw	-41
  9729  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9730                           
  9731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  9732                           ;stkvar	_e @ sp[(-56)+34]
  9733  0103E4  0EEA               	movlw	-22
  9734  0103E6  50E3               	movf	plusw1,w,c
  9735  0103E8  0F01               	addlw	1
  9736  0103EA  6E35               	movwf	btemp^0,c
  9737  0103EC  0EEA               	movlw	-22
  9738  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
  9739  0103F4  6A35               	clrf	btemp^0,c
  9740  0103F6  0EEB               	movlw	-21
  9741  0103F8  50E3               	movf	plusw1,w,c
  9742  0103FA  2035               	addwfc	btemp^0,w,c
  9743  0103FC  6E35               	movwf	btemp^0,c
  9744  0103FE  0EEB               	movlw	-21
  9745  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
  9746  010406                     l9059:
  9747                           
  9748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  9749  010406  0E00               	movlw	0
  9750  010408  6EE6               	movwf	postinc1,c
  9751  01040A  0E00               	movlw	0
  9752  01040C  6EE6               	movwf	postinc1,c
  9753  01040E  0E20               	movlw	32
  9754  010410  6EE6               	movwf	postinc1,c
  9755  010412  0E41               	movlw	65
  9756  010414  6EE6               	movwf	postinc1,c
  9757                           
  9758                           ;stkvar	_u @ sp[(-60)+12]
  9759  010416  0ED0               	movlw	-48
  9760  010418  006F FF8F FFE6     	movff	plusw1,postinc1
  9761  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
  9762  010424  006F FF8F FFE6     	movff	plusw1,postinc1
  9763  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
  9764  010430  ECC1  F08E         	call	___flmul	;wreg free
  9765  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
  9766  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  9767  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  9768  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  9769                           
  9770                           ;stkvar	_g @ sp[(-60)+16]
  9771  01044C  0ED4               	movlw	-44
  9772  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
  9773  010454  006F FF8F FFE6     	movff	plusw1,postinc1
  9774  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
  9775  010460  006F FF8F FFE6     	movff	plusw1,postinc1
  9776  010466  EC4C  F0AE         	call	___flge	;wreg free
  9777  01046A  A035               	btfss	btemp& (0+255),0,c
  9778  01046C  D032               	goto	l9065
  9779  01046E  D793               	goto	l9055
  9780  010470                     l9061:
  9781                           
  9782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  9783  010470  0E00               	movlw	0
  9784  010472  6EE6               	movwf	postinc1,c
  9785  010474  0E00               	movlw	0
  9786  010476  6EE6               	movwf	postinc1,c
  9787  010478  0E20               	movlw	32
  9788  01047A  6EE6               	movwf	postinc1,c
  9789  01047C  0E41               	movlw	65
  9790  01047E  6EE6               	movwf	postinc1,c
  9791                           
  9792                           ;stkvar	_u @ sp[(-60)+12]
  9793  010480  0ED0               	movlw	-48
  9794  010482  006F FF8F FFE6     	movff	plusw1,postinc1
  9795  010488  006F FF8F FFE6     	movff	plusw1,postinc1
  9796  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
  9797  010494  006F FF8F FFE6     	movff	plusw1,postinc1
  9798  01049A  ECB4  F096         	call	___fldiv	;wreg free
  9799                           
  9800                           ;stkvar	_u @ sp[(-56)+12]
  9801  01049E  0ED4               	movlw	-44
  9802  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
  9803  0104A6  0ED5               	movlw	-43
  9804  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  9805  0104AE  0ED6               	movlw	-42
  9806  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
  9807  0104B6  0ED7               	movlw	-41
  9808  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
  9809                           
  9810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  9811                           ;stkvar	_e @ sp[(-56)+34]
  9812  0104BE  50E1               	movf	fsr1l,w,c
  9813  0104C0  0FEA               	addlw	-22
  9814  0104C2  6ED9               	movwf	fsr2l,c
  9815  0104C4  50E2               	movf	fsr1h,w,c
  9816  0104C6  6EDA               	movwf	fsr2h,c
  9817  0104C8  0EFF               	movlw	255
  9818  0104CA  22DA               	addwfc	fsr2h,f,c
  9819  0104CC  06DE               	decf	postinc2,f,c
  9820  0104CE  0E00               	movlw	0
  9821  0104D0  5ADD               	subwfb	postdec2,f,c
  9822  0104D2                     l9065:
  9823                           
  9824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  9825                           ;stkvar	_u @ sp[(-56)+12]
  9826  0104D2  0ED4               	movlw	-44
  9827  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
  9828  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9829  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9830  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9831                           
  9832                           ;stkvar	_g @ sp[(-60)+16]
  9833  0104EC  0ED4               	movlw	-44
  9834  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
  9835  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
  9836  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
  9837  010500  006F FF8F FFE6     	movff	plusw1,postinc1
  9838  010506  EC4C  F0AE         	call	___flge	;wreg free
  9839  01050A  A035               	btfss	btemp& (0+255),0,c
  9840  01050C  D7B1               	goto	l9061
  9841  01050E                     u8720:
  9842                           
  9843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  9844                           ;stkvar	_c @ sp[(-56)+-7]
  9845  01050E  0EC1               	movlw	-63
  9846  010510  50E3               	movf	plusw1,w,c
  9847  010512  6EE6               	movwf	postinc1,c
  9848  010514  0E00               	movlw	0
  9849  010516  6EE6               	movwf	postinc1,c
  9850  010518  ECED  F0B7         	call	_tolower	;wreg free
  9851                           
  9852                           ;stkvar	_mode @ sp[(-56)+54]
  9853  01051C  0EFE               	movlw	-2
  9854  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9855                           
  9856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  9857                           ;stkvar	_mode @ sp[(-56)+54]
  9858                           ;stkvar	_nmode @ sp[(-56)+55]
  9859  010524  0EFE               	movlw	-2
  9860  010526  006F FF8C  F035    	movff	plusw1,btemp
  9861  01052C  0EFF               	movlw	-1
  9862  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
  9863                           
  9864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  9865                           ;stkvar	_mode @ sp[(-56)+54]
  9866  010534  0EFE               	movlw	-2
  9867  010536  006F FF8C  F035    	movff	plusw1,btemp
  9868  01053C  0E67               	movlw	103
  9869  01053E  1835               	xorwf	btemp^0,w,c
  9870  010540  A4D8               	btfss	status,2,c
  9871  010542  D025               	goto	l9083
  9872                           
  9873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  9874  010544  5020               	movf	_prec^0,w,c
  9875  010546  1021               	iorwf	(_prec+1)^0,w,c
  9876  010548  A4D8               	btfss	status,2,c
  9877  01054A  D004               	goto	l9077
  9878                           
  9879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  9880  01054C  0E00               	movlw	0
  9881  01054E  6E21               	movwf	(_prec+1)^0,c
  9882  010550  0E01               	movlw	1
  9883  010552  6E20               	movwf	_prec^0,c
  9884  010554                     l9077:
  9885                           
  9886                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  9887  010554  BE21               	btfsc	(_prec+1)^0,7,c
  9888  010556  D005               	goto	u8750
  9889  010558  5021               	movf	(_prec+1)^0,w,c
  9890  01055A  E110               	bnz	l9081
  9891  01055C  0420               	decf	_prec^0,w,c
  9892  01055E  B0D8               	btfsc	status,0,c
  9893  010560  D00D               	goto	l9081
  9894  010562                     u8750:
  9895  010562  0E06               	movlw	6
  9896  010564  6E3F               	movwf	(btemp+10)^0,c
  9897  010566  0E00               	movlw	0
  9898  010568  6E40               	movwf	(btemp+11)^0,c
  9899                           
  9900                           ;stkvar	_p @ sp[(-56)+40]
  9901  01056A  0EF0               	movlw	-16
  9902  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9903  010572  0EF1               	movlw	-15
  9904  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
  9905  01057A  D00C               	goto	l9089
  9906  01057C                     l9081:
  9907                           
  9908                           ;stkvar	_p @ sp[(-56)+40]
  9909  01057C  0EF0               	movlw	-16
  9910  01057E  0060  F083  FFE3   	movff	_prec,plusw1
  9911  010584  0EF1               	movlw	-15
  9912  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
  9913  01058C  D003               	goto	l9089
  9914  01058E                     l9083:
  9915                           
  9916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  9917  01058E  AE21               	btfss	(_prec+1)^0,7,c
  9918  010590  D7F5               	goto	l9081
  9919  010592  D7E7               	goto	u8750
  9920  010594                     l9089:
  9921                           
  9922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  9923                           ;stkvar	_mode @ sp[(-56)+54]
  9924  010594  0EFE               	movlw	-2
  9925  010596  006F FF8C  F035    	movff	plusw1,btemp
  9926  01059C  0E67               	movlw	103
  9927  01059E  1835               	xorwf	btemp^0,w,c
  9928  0105A0  A4D8               	btfss	status,2,c
  9929  0105A2  D02F               	goto	l9099
  9930                           
  9931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  9932                           ;stkvar	_e @ sp[(-56)+34]
  9933  0105A4  0EEB               	movlw	-21
  9934  0105A6  AEE3               	btfss	plusw1,7,c
  9935  0105A8  D00E               	goto	u8780
  9936  0105AA  0EEA               	movlw	-22
  9937  0105AC  006F FF8C  F035    	movff	plusw1,btemp
  9938  0105B2  0EFC               	movlw	252
  9939  0105B4  5E35               	subwf	btemp^0,f,c
  9940  0105B6  0EEB               	movlw	-21
  9941  0105B8  006F FF8C  F035    	movff	plusw1,btemp
  9942  0105BE  0EFF               	movlw	255
  9943  0105C0  5A35               	subwfb	btemp^0,f,c
  9944  0105C2  A0D8               	btfss	status,0,c
  9945  0105C4  D018               	goto	l9097
  9946  0105C6                     u8780:
  9947                           
  9948                           ;stkvar	_e @ sp[(-56)+34]
  9949                           ;stkvar	_p @ sp[(-56)+40]
  9950  0105C6  0EF0               	movlw	-16
  9951  0105C8  50E3               	movf	plusw1,w,c
  9952  0105CA  0FFF               	addlw	255
  9953  0105CC  6E3F               	movwf	(btemp+10)^0,c
  9954  0105CE  0EF1               	movlw	-15
  9955  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
  9956  0105D6  0EFF               	movlw	255
  9957  0105D8  2240               	addwfc	(btemp+11)^0,f,c
  9958  0105DA  0EEA               	movlw	-22
  9959  0105DC  50E3               	movf	plusw1,w,c
  9960  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
  9961  0105E0  5040               	movf	(btemp+11)^0,w,c
  9962  0105E2  0A80               	xorlw	128
  9963  0105E4  6E35               	movwf	btemp^0,c
  9964  0105E6  0EEB               	movlw	-21
  9965  0105E8  50E3               	movf	plusw1,w,c
  9966  0105EA  0A80               	xorlw	128
  9967  0105EC  5835               	subwfb	btemp^0,w,c
  9968  0105EE  A0D8               	btfss	status,0,c
  9969  0105F0  D002               	goto	l9097
  9970                           
  9971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  9972  0105F2  0E66               	movlw	102
  9973  0105F4  D001               	goto	L8
  9974  0105F6                     l9097:
  9975                           
  9976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  9977  0105F6  0E65               	movlw	101
  9978  0105F8                     L8:
  9979  0105F8  6E40               	movwf	(btemp+11)^0,c
  9980                           
  9981                           ;stkvar	_nmode @ sp[(-56)+55]
  9982  0105FA  0EFF               	movlw	-1
  9983  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
  9984  010602                     l9099:
  9985                           
  9986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  9987                           ;stkvar	_p @ sp[(-56)+40]
  9988                           ;stkvar	_m @ sp[(-56)+48]
  9989  010602  0EF0               	movlw	-16
  9990  010604  006F FF8C  F035    	movff	plusw1,btemp
  9991  01060A  0EF8               	movlw	-8
  9992  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9993  010612  0EF1               	movlw	-15
  9994  010614  006F FF8C  F035    	movff	plusw1,btemp
  9995  01061A  0EF9               	movlw	-7
  9996  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
  9997                           
  9998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  9999                           ;stkvar	_mode @ sp[(-56)+54]
 10000  010622  0EFE               	movlw	-2
 10001  010624  006F FF8C  F035    	movff	plusw1,btemp
 10002  01062A  0E67               	movlw	103
 10003  01062C  1835               	xorwf	btemp^0,w,c
 10004  01062E  A4D8               	btfss	status,2,c
 10005  010630  D00B               	goto	u8820
 10006                           
 10007                           ;stkvar	_nmode @ sp[(-56)+55]
 10008  010632  0EFF               	movlw	-1
 10009  010634  006F FF8C  F035    	movff	plusw1,btemp
 10010  01063A  0E66               	movlw	102
 10011  01063C  1835               	xorwf	btemp^0,w,c
 10012  01063E  A4D8               	btfss	status,2,c
 10013  010640  D014               	goto	l1814
 10014                           
 10015                           ;stkvar	_e @ sp[(-56)+34]
 10016  010642  0EEB               	movlw	-21
 10017  010644  AEE3               	btfss	plusw1,7,c
 10018  010646  D011               	goto	l1814
 10019  010648                     u8820:
 10020                           
 10021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 10022                           ;stkvar	_m @ sp[(-56)+48]
 10023  010648  0EF8               	movlw	-8
 10024  01064A  50E3               	movf	plusw1,w,c
 10025  01064C  0F01               	addlw	1
 10026  01064E  6E35               	movwf	btemp^0,c
 10027  010650  0EF8               	movlw	-8
 10028  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 10029  010658  6A35               	clrf	btemp^0,c
 10030  01065A  0EF9               	movlw	-7
 10031  01065C  50E3               	movf	plusw1,w,c
 10032  01065E  2035               	addwfc	btemp^0,w,c
 10033  010660  6E35               	movwf	btemp^0,c
 10034  010662  0EF9               	movlw	-7
 10035  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 10036  01066A                     l1814:
 10037                           
 10038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 10039                           ;stkvar	_nmode @ sp[(-56)+55]
 10040  01066A  0EFF               	movlw	-1
 10041  01066C  006F FF8C  F035    	movff	plusw1,btemp
 10042  010672  0E66               	movlw	102
 10043  010674  1835               	xorwf	btemp^0,w,c
 10044  010676  A4D8               	btfss	status,2,c
 10045  010678  D03B               	goto	l9119
 10046                           
 10047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 10048                           ;stkvar	_e @ sp[(-56)+34]
 10049  01067A  0EEB               	movlw	-21
 10050  01067C  AEE3               	btfss	plusw1,7,c
 10051  01067E  D01C               	goto	l9115
 10052                           
 10053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 10054  010680  0E00               	movlw	0
 10055  010682  6E3D               	movwf	(btemp+8)^0,c
 10056  010684  0E00               	movlw	0
 10057  010686  6E3E               	movwf	(btemp+9)^0,c
 10058  010688  0E80               	movlw	128
 10059  01068A  6E3F               	movwf	(btemp+10)^0,c
 10060  01068C  0E3F               	movlw	63
 10061  01068E  6E40               	movwf	(btemp+11)^0,c
 10062                           
 10063                           ;stkvar	_u @ sp[(-56)+12]
 10064  010690  0ED4               	movlw	-44
 10065  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10066  010698  0ED5               	movlw	-43
 10067  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10068  0106A0  0ED6               	movlw	-42
 10069  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10070  0106A8  0ED7               	movlw	-41
 10071  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10072                           
 10073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 10074                           ;stkvar	_e @ sp[(-56)+34]
 10075  0106B0  0EEA               	movlw	-22
 10076  0106B2  6AE3               	clrf	plusw1,c
 10077  0106B4  0EEB               	movlw	-21
 10078  0106B6  6AE3               	clrf	plusw1,c
 10079  0106B8                     l9115:
 10080                           
 10081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 10082                           ;stkvar	_mode @ sp[(-56)+54]
 10083  0106B8  0EFE               	movlw	-2
 10084  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 10085  0106C0  0E67               	movlw	103
 10086  0106C2  1835               	xorwf	btemp^0,w,c
 10087  0106C4  B4D8               	btfsc	status,2,c
 10088  0106C6  D014               	goto	l9119
 10089                           
 10090                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 10091                           ;stkvar	_e @ sp[(-56)+34]
 10092                           ;stkvar	_m @ sp[(-56)+48]
 10093  0106C8  0EF8               	movlw	-8
 10094  0106CA  50E3               	movf	plusw1,w,c
 10095  0106CC  6E35               	movwf	btemp^0,c
 10096  0106CE  0EEA               	movlw	-22
 10097  0106D0  50E3               	movf	plusw1,w,c
 10098  0106D2  2635               	addwf	btemp^0,f,c
 10099  0106D4  0EF8               	movlw	-8
 10100  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10101  0106DC  0EF9               	movlw	-7
 10102  0106DE  50E3               	movf	plusw1,w,c
 10103  0106E0  6E35               	movwf	btemp^0,c
 10104  0106E2  0EEB               	movlw	-21
 10105  0106E4  50E3               	movf	plusw1,w,c
 10106  0106E6  2235               	addwfc	btemp^0,f,c
 10107  0106E8  0EF9               	movlw	-7
 10108  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10109  0106F0                     l9119:
 10110                           
 10111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 10112                           ;stkvar	_i @ sp[(-56)+36]
 10113  0106F0  0EEC               	movlw	-20
 10114  0106F2  6AE3               	clrf	plusw1,c
 10115  0106F4  0EED               	movlw	-19
 10116  0106F6  6AE3               	clrf	plusw1,c
 10117                           
 10118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 10119                           ;stkvar	_g @ sp[(-56)+16]
 10120  0106F8  0ED8               	movlw	-40
 10121  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 10122  010700  0ED9               	movlw	-39
 10123  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 10124  010708  0EDA               	movlw	-38
 10125  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10126  010710  0EDB               	movlw	-37
 10127  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 10128                           
 10129                           ;stkvar	_h @ sp[(-56)+24]
 10130  010718  0EE0               	movlw	-32
 10131  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10132  010720  0EE1               	movlw	-31
 10133  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10134  010728  0EE2               	movlw	-30
 10135  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10136  010730  0EE3               	movlw	-29
 10137  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 10138                           
 10139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 10140                           ;stkvar	_u @ sp[(-56)+12]
 10141  010738  0ED4               	movlw	-44
 10142  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 10143  010740  0ED5               	movlw	-43
 10144  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 10145  010748  0ED6               	movlw	-42
 10146  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 10147  010750  0ED7               	movlw	-41
 10148  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 10149                           
 10150                           ;stkvar	_ou @ sp[(-56)+28]
 10151  010758  0EE4               	movlw	-28
 10152  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10153  010760  0EE5               	movlw	-27
 10154  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10155  010768  0EE6               	movlw	-26
 10156  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10157  010770  0EE7               	movlw	-25
 10158  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 10159                           
 10160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10161  010778  D0D6               	goto	l9135
 10162  01077A                     l9125:
 10163                           
 10164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 10165                           ;stkvar	_u @ sp[(-56)+12]
 10166  01077A  0ED4               	movlw	-44
 10167  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 10168  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 10169  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 10170  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 10171                           
 10172                           ;stkvar	_h @ sp[(-60)+24]
 10173  010794  0EDC               	movlw	-36
 10174  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 10175  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 10176  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10177  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10178  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 10179  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 10180  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10181  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10182  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10183  0107CA  EC91  F09F         	call	_floorf	;wreg free
 10184                           
 10185                           ;stkvar	_l @ sp[(-56)+20]
 10186  0107CE  0EDC               	movlw	-36
 10187  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10188  0107D6  0EDD               	movlw	-35
 10189  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10190  0107DE  0EDE               	movlw	-34
 10191  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10192  0107E6  0EDF               	movlw	-33
 10193  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10194                           
 10195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 10196                           ;stkvar	_l @ sp[(-56)+20]
 10197  0107EE  0EDC               	movlw	-36
 10198  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10199  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10200  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 10201  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 10202  010808  EC93  F0AD         	call	___fltol	;wreg free
 10203  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 10204  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10205                           
 10206                           ;stkvar	_d @ sp[(-56)+44]
 10207  010818  0EF4               	movlw	-12
 10208  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10209  010820  0EF5               	movlw	-11
 10210  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 10211                           
 10212                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 10213                           ;stkvar	_u @ sp[(-56)+12]
 10214  010828  0ED4               	movlw	-44
 10215  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 10216  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 10217  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 10218  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 10219                           
 10220                           ;stkvar	_l @ sp[(-60)+20]
 10221  010842  0ED8               	movlw	-40
 10222  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 10223  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 10224  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 10225  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 10226  01085C  ECC1  F08E         	call	___flmul	;wreg free
 10227  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 10228  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10229  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10230  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10231                           
 10232                           ;stkvar	_h @ sp[(-60)+24]
 10233  010878  0EDC               	movlw	-36
 10234  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 10235  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 10236  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 10237  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 10238  010892  ECC2  F0BA         	call	___flsub	;wreg free
 10239                           
 10240                           ;stkvar	_h @ sp[(-56)+24]
 10241  010896  0EE0               	movlw	-32
 10242  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 10243  01089E  0EE1               	movlw	-31
 10244  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10245  0108A6  0EE2               	movlw	-30
 10246  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10247  0108AE  0EE3               	movlw	-29
 10248  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10249                           
 10250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 10251  0108B6  0E00               	movlw	0
 10252  0108B8  6EE6               	movwf	postinc1,c
 10253  0108BA  0E00               	movlw	0
 10254  0108BC  6EE6               	movwf	postinc1,c
 10255  0108BE  0E20               	movlw	32
 10256  0108C0  6EE6               	movwf	postinc1,c
 10257  0108C2  0E41               	movlw	65
 10258  0108C4  6EE6               	movwf	postinc1,c
 10259                           
 10260                           ;stkvar	_u @ sp[(-60)+12]
 10261  0108C6  0ED0               	movlw	-48
 10262  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10263  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10264  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10265  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10266  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 10267                           
 10268                           ;stkvar	_u @ sp[(-56)+12]
 10269  0108E4  0ED4               	movlw	-44
 10270  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10271  0108EC  0ED5               	movlw	-43
 10272  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10273  0108F4  0ED6               	movlw	-42
 10274  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10275  0108FC  0ED7               	movlw	-41
 10276  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10277                           
 10278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 10279                           ;stkvar	_i @ sp[(-56)+36]
 10280  010904  0EEC               	movlw	-20
 10281  010906  50E3               	movf	plusw1,w,c
 10282  010908  0F01               	addlw	1
 10283  01090A  6E35               	movwf	btemp^0,c
 10284  01090C  0EEC               	movlw	-20
 10285  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10286  010914  6A35               	clrf	btemp^0,c
 10287  010916  0EED               	movlw	-19
 10288  010918  50E3               	movf	plusw1,w,c
 10289  01091A  2035               	addwfc	btemp^0,w,c
 10290  01091C  6E35               	movwf	btemp^0,c
 10291  01091E  0EED               	movlw	-19
 10292  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 10293  010926                     l9135:
 10294                           
 10295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 10296                           ;stkvar	_m @ sp[(-56)+48]
 10297                           ;stkvar	_i @ sp[(-56)+36]
 10298  010926  50E1               	movf	fsr1l,w,c
 10299  010928  0FEC               	addlw	-20
 10300  01092A  6ED9               	movwf	fsr2l,c
 10301  01092C  50E2               	movf	fsr1h,w,c
 10302  01092E  6EDA               	movwf	fsr2h,c
 10303  010930  0EFF               	movlw	255
 10304  010932  22DA               	addwfc	fsr2h,f,c
 10305  010934  0EF8               	movlw	-8
 10306  010936  50E3               	movf	plusw1,w,c
 10307  010938  5CDE               	subwf	postinc2,w,c
 10308  01093A  50DE               	movf	postinc2,w,c
 10309  01093C  0A80               	xorlw	128
 10310  01093E  6E35               	movwf	btemp^0,c
 10311  010940  0EF9               	movlw	-7
 10312  010942  50E3               	movf	plusw1,w,c
 10313  010944  0A80               	xorlw	128
 10314  010946  5835               	subwfb	btemp^0,w,c
 10315  010948  A0D8               	btfss	status,0,c
 10316  01094A  D717               	goto	l9125
 10317                           
 10318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 10319  01094C  0E00               	movlw	0
 10320  01094E  6EE6               	movwf	postinc1,c
 10321  010950  0E00               	movlw	0
 10322  010952  6EE6               	movwf	postinc1,c
 10323  010954  0EA0               	movlw	160
 10324  010956  6EE6               	movwf	postinc1,c
 10325  010958  0E40               	movlw	64
 10326  01095A  6EE6               	movwf	postinc1,c
 10327                           
 10328                           ;stkvar	_u @ sp[(-60)+12]
 10329  01095C  0ED0               	movlw	-48
 10330  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 10331  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 10332  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 10333  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 10334  010976  ECC1  F08E         	call	___flmul	;wreg free
 10335                           
 10336                           ;stkvar	_l @ sp[(-56)+20]
 10337  01097A  0EDC               	movlw	-36
 10338  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10339  010982  0EDD               	movlw	-35
 10340  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10341  01098A  0EDE               	movlw	-34
 10342  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10343  010992  0EDF               	movlw	-33
 10344  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10345                           
 10346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 10347                           ;stkvar	_l @ sp[(-56)+20]
 10348  01099A  0EDC               	movlw	-36
 10349  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 10350  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10351  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10352  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10353                           
 10354                           ;stkvar	_h @ sp[(-60)+24]
 10355  0109B4  0EDC               	movlw	-36
 10356  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 10357  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10358  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10359  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 10360  0109CE  EC4C  F0AE         	call	___flge	;wreg free
 10361  0109D2  A035               	btfss	btemp& (0+255),0,c
 10362  0109D4  D021               	goto	u8890
 10363                           
 10364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 10365                           ;stkvar	_l @ sp[(-56)+20]
 10366                           
 10367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 10368                           
 10369                           ;stkvar	_l @ sp[(-56)+20]
 10370                           
 10371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 10372  0109D6  0EDC               	movlw	-36
 10373  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 10374  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10375  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10376  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 10377                           
 10378                           ;stkvar	_h @ sp[(-60)+24]
 10379  0109F0  0EDC               	movlw	-36
 10380  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 10381  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 10382  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 10383  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 10384  010A0A  EC31  F0B4         	call	___fleq	;wreg free
 10385  010A0E  A035               	btfss	btemp& (0+255),0,c
 10386  010A10  D01B               	goto	l9149
 10387                           
 10388                           ;stkvar	_d @ sp[(-56)+44]
 10389  010A12  0EF4               	movlw	-12
 10390  010A14  B0E3               	btfsc	plusw1,0,c
 10391  010A16  D018               	goto	l9149
 10392  010A18                     u8890:
 10393                           
 10394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 10395  010A18  0E00               	movlw	0
 10396  010A1A  6E3D               	movwf	(btemp+8)^0,c
 10397  010A1C  0E00               	movlw	0
 10398  010A1E  6E3E               	movwf	(btemp+9)^0,c
 10399  010A20  0E00               	movlw	0
 10400  010A22  6E3F               	movwf	(btemp+10)^0,c
 10401  010A24  0E00               	movlw	0
 10402  010A26  6E40               	movwf	(btemp+11)^0,c
 10403                           
 10404                           ;stkvar	_l @ sp[(-56)+20]
 10405  010A28  0EDC               	movlw	-36
 10406  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10407  010A30  0EDD               	movlw	-35
 10408  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10409  010A38  0EDE               	movlw	-34
 10410  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10411  010A40  0EDF               	movlw	-33
 10412  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 10413  010A48                     l9149:
 10414                           
 10415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 10416                           ;stkvar	_l @ sp[(-56)+20]
 10417  010A48  0EDC               	movlw	-36
 10418  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 10419  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 10420  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 10421  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10422                           
 10423                           ;stkvar	_g @ sp[(-60)+16]
 10424  010A62  0ED4               	movlw	-44
 10425  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10426  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10427  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 10428  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 10429  010A7C  ECD6  F092         	call	___fladd	;wreg free
 10430                           
 10431                           ;stkvar	_h @ sp[(-56)+24]
 10432  010A80  0EE0               	movlw	-32
 10433  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 10434  010A88  0EE1               	movlw	-31
 10435  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10436  010A90  0EE2               	movlw	-30
 10437  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10438  010A98  0EE3               	movlw	-29
 10439  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10440                           
 10441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 10442                           ;stkvar	_ou @ sp[(-56)+28]
 10443  010AA0  0EE4               	movlw	-28
 10444  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 10445  010AA8  0EE5               	movlw	-27
 10446  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 10447  010AB0  0EE6               	movlw	-26
 10448  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10449  010AB8  0EE7               	movlw	-25
 10450  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 10451                           
 10452                           ;stkvar	_u @ sp[(-56)+12]
 10453  010AC0  0ED4               	movlw	-44
 10454  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 10455  010AC8  0ED5               	movlw	-43
 10456  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 10457  010AD0  0ED6               	movlw	-42
 10458  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10459  010AD8  0ED7               	movlw	-41
 10460  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 10461                           
 10462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 10463                           ;stkvar	_nmode @ sp[(-56)+55]
 10464  010AE0  0EFF               	movlw	-1
 10465  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 10466  010AE8  0E65               	movlw	101
 10467  010AEA  1835               	xorwf	btemp^0,w,c
 10468  010AEC  B4D8               	btfsc	status,2,c
 10469  010AEE  D011               	goto	l9157
 10470                           
 10471                           ;stkvar	_e @ sp[(-56)+34]
 10472                           ;stkvar	_ne @ sp[(-56)+46]
 10473  010AF0  0EEA               	movlw	-22
 10474  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 10475  010AF8  0EF6               	movlw	-10
 10476  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 10477  010B00  0EEB               	movlw	-21
 10478  010B02  006F FF8C  F035    	movff	plusw1,btemp
 10479  010B08  0EF7               	movlw	-9
 10480  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10481  010B10  D004               	goto	l1829
 10482  010B12                     l9157:
 10483                           
 10484                           ;stkvar	_ne @ sp[(-56)+46]
 10485  010B12  0EF6               	movlw	-10
 10486  010B14  6AE3               	clrf	plusw1,c
 10487  010B16  0EF7               	movlw	-9
 10488  010B18  6AE3               	clrf	plusw1,c
 10489  010B1A                     l1829:
 10490                           
 10491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 10492                           ;stkvar	_pp @ sp[(-56)+50]
 10493  010B1A  0EFA               	movlw	-6
 10494  010B1C  6AE3               	clrf	plusw1,c
 10495  010B1E  0EFB               	movlw	-5
 10496  010B20  6AE3               	clrf	plusw1,c
 10497                           
 10498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 10499                           ;stkvar	_t @ sp[(-56)+52]
 10500  010B22  0EFC               	movlw	-4
 10501  010B24  6AE3               	clrf	plusw1,c
 10502  010B26  0EFD               	movlw	-3
 10503  010B28  6AE3               	clrf	plusw1,c
 10504                           
 10505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 10506                           ;stkvar	_i @ sp[(-56)+36]
 10507  010B2A  0EEC               	movlw	-20
 10508  010B2C  6AE3               	clrf	plusw1,c
 10509  010B2E  0EED               	movlw	-19
 10510  010B30  6AE3               	clrf	plusw1,c
 10511                           
 10512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10513  010B32  D1B7               	goto	l9209
 10514  010B34                     l9159:
 10515                           
 10516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 10517                           ;stkvar	_u @ sp[(-56)+12]
 10518  010B34  0ED4               	movlw	-44
 10519  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 10520  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10521  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 10522  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 10523                           
 10524                           ;stkvar	_h @ sp[(-60)+24]
 10525  010B4E  0EDC               	movlw	-36
 10526  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 10527  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 10528  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10529  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 10530  010B68  ECB4  F096         	call	___fldiv	;wreg free
 10531  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 10532  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10533  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10534  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10535  010B84  EC91  F09F         	call	_floorf	;wreg free
 10536                           
 10537                           ;stkvar	_l @ sp[(-56)+20]
 10538  010B88  0EDC               	movlw	-36
 10539  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10540  010B90  0EDD               	movlw	-35
 10541  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10542  010B98  0EDE               	movlw	-34
 10543  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10544  010BA0  0EDF               	movlw	-33
 10545  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10546                           
 10547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 10548                           ;stkvar	_l @ sp[(-56)+20]
 10549  010BA8  0EDC               	movlw	-36
 10550  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 10551  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 10552  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 10553  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 10554  010BC2  EC93  F0AD         	call	___fltol	;wreg free
 10555  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 10556  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 10557                           
 10558                           ;stkvar	_d @ sp[(-56)+44]
 10559  010BD2  0EF4               	movlw	-12
 10560  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10561  010BDA  0EF5               	movlw	-11
 10562  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 10563                           
 10564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10565  010BE2  B822               	btfsc	_flags^0,4,c
 10566  010BE4  D026               	goto	l9173
 10567                           
 10568                           ;stkvar	_d @ sp[(-56)+44]
 10569  010BE6  0EF4               	movlw	-12
 10570  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 10571  010BEE  0EF5               	movlw	-11
 10572  010BF0  50E3               	movf	plusw1,w,c
 10573  010BF2  1035               	iorwf	btemp^0,w,c
 10574  010BF4  A4D8               	btfss	status,2,c
 10575  010BF6  D01D               	goto	l9173
 10576                           
 10577                           ;stkvar	_mode @ sp[(-56)+54]
 10578  010BF8  0EFE               	movlw	-2
 10579  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 10580  010C00  0E67               	movlw	103
 10581  010C02  1835               	xorwf	btemp^0,w,c
 10582  010C04  A4D8               	btfss	status,2,c
 10583  010C06  D015               	goto	l9173
 10584                           
 10585                           ;stkvar	_ne @ sp[(-56)+46]
 10586  010C08  0EF7               	movlw	-9
 10587  010C0A  AEE3               	btfss	plusw1,7,c
 10588  010C0C  D012               	goto	l9173
 10589                           
 10590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 10591                           ;stkvar	_t @ sp[(-56)+52]
 10592  010C0E  0EFC               	movlw	-4
 10593  010C10  50E3               	movf	plusw1,w,c
 10594  010C12  0F01               	addlw	1
 10595  010C14  6E35               	movwf	btemp^0,c
 10596  010C16  0EFC               	movlw	-4
 10597  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 10598  010C1E  6A35               	clrf	btemp^0,c
 10599  010C20  0EFD               	movlw	-3
 10600  010C22  50E3               	movf	plusw1,w,c
 10601  010C24  2035               	addwfc	btemp^0,w,c
 10602  010C26  6E35               	movwf	btemp^0,c
 10603  010C28  0EFD               	movlw	-3
 10604  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10605                           
 10606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 10607  010C30  D0AF               	goto	l9201
 10608  010C32                     l9173:
 10609                           
 10610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 10611                           ;stkvar	_pp @ sp[(-56)+50]
 10612  010C32  0EFA               	movlw	-6
 10613  010C34  006F FF8C  F035    	movff	plusw1,btemp
 10614  010C3A  0EFB               	movlw	-5
 10615  010C3C  50E3               	movf	plusw1,w,c
 10616  010C3E  1035               	iorwf	btemp^0,w,c
 10617  010C40  A4D8               	btfss	status,2,c
 10618  010C42  D070               	goto	l9193
 10619                           
 10620                           ;stkvar	_ne @ sp[(-56)+46]
 10621  010C44  0EF7               	movlw	-9
 10622  010C46  AEE3               	btfss	plusw1,7,c
 10623  010C48  D06D               	goto	l9193
 10624                           
 10625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 10626                           ;stkvar	_n @ sp[(-56)+32]
 10627  010C4A  0EE8               	movlw	-24
 10628  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10629  010C52  0EE9               	movlw	-23
 10630  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 10631  010C5A  0EA4               	movlw	low _dbuf
 10632  010C5C  243F               	addwf	(btemp+10)^0,w,c
 10633  010C5E  6ED9               	movwf	fsr2l,c
 10634  010C60  0E01               	movlw	high _dbuf
 10635  010C62  2040               	addwfc	(btemp+11)^0,w,c
 10636  010C64  6EDA               	movwf	fsr2h,c
 10637  010C66  0E2E               	movlw	46
 10638  010C68  6EDF               	movwf	indf2,c
 10639                           
 10640                           ;stkvar	_n @ sp[(-56)+32]
 10641  010C6A  0EE8               	movlw	-24
 10642  010C6C  50E3               	movf	plusw1,w,c
 10643  010C6E  0F01               	addlw	1
 10644  010C70  6E35               	movwf	btemp^0,c
 10645  010C72  0EE8               	movlw	-24
 10646  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 10647  010C7A  6A35               	clrf	btemp^0,c
 10648  010C7C  0EE9               	movlw	-23
 10649  010C7E  50E3               	movf	plusw1,w,c
 10650  010C80  2035               	addwfc	btemp^0,w,c
 10651  010C82  6E35               	movwf	btemp^0,c
 10652  010C84  0EE9               	movlw	-23
 10653  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 10654                           
 10655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 10656                           ;stkvar	_w @ sp[(-56)+38]
 10657  010C8C  50E1               	movf	fsr1l,w,c
 10658  010C8E  0FEE               	addlw	-18
 10659  010C90  6ED9               	movwf	fsr2l,c
 10660  010C92  50E2               	movf	fsr1h,w,c
 10661  010C94  6EDA               	movwf	fsr2h,c
 10662  010C96  0EFF               	movlw	255
 10663  010C98  22DA               	addwfc	fsr2h,f,c
 10664  010C9A  06DE               	decf	postinc2,f,c
 10665  010C9C  0E00               	movlw	0
 10666  010C9E  5ADD               	subwfb	postdec2,f,c
 10667                           
 10668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 10669  010CA0  0E01               	movlw	1
 10670  010CA2  6E3F               	movwf	(btemp+10)^0,c
 10671  010CA4  0E00               	movlw	0
 10672  010CA6  6E40               	movwf	(btemp+11)^0,c
 10673                           
 10674                           ;stkvar	_pp @ sp[(-56)+50]
 10675  010CA8  0EFA               	movlw	-6
 10676  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10677  010CB0  0EFB               	movlw	-5
 10678  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 10679  010CB8  D035               	goto	l9193
 10680  010CBA                     l9185:
 10681                           
 10682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 10683                           ;stkvar	_n @ sp[(-56)+32]
 10684  010CBA  0EE8               	movlw	-24
 10685  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 10686  010CC2  0EE9               	movlw	-23
 10687  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 10688  010CCA  0EA4               	movlw	low _dbuf
 10689  010CCC  243F               	addwf	(btemp+10)^0,w,c
 10690  010CCE  6ED9               	movwf	fsr2l,c
 10691  010CD0  0E01               	movlw	high _dbuf
 10692  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 10693  010CD4  6EDA               	movwf	fsr2h,c
 10694  010CD6  0E30               	movlw	48
 10695  010CD8  6EDF               	movwf	indf2,c
 10696                           
 10697                           ;stkvar	_n @ sp[(-56)+32]
 10698  010CDA  0EE8               	movlw	-24
 10699  010CDC  50E3               	movf	plusw1,w,c
 10700  010CDE  0F01               	addlw	1
 10701  010CE0  6E35               	movwf	btemp^0,c
 10702  010CE2  0EE8               	movlw	-24
 10703  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 10704  010CEA  6A35               	clrf	btemp^0,c
 10705  010CEC  0EE9               	movlw	-23
 10706  010CEE  50E3               	movf	plusw1,w,c
 10707  010CF0  2035               	addwfc	btemp^0,w,c
 10708  010CF2  6E35               	movwf	btemp^0,c
 10709  010CF4  0EE9               	movlw	-23
 10710  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10711                           
 10712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 10713                           ;stkvar	_w @ sp[(-56)+38]
 10714  010CFC  50E1               	movf	fsr1l,w,c
 10715  010CFE  0FEE               	addlw	-18
 10716  010D00  6ED9               	movwf	fsr2l,c
 10717  010D02  50E2               	movf	fsr1h,w,c
 10718  010D04  6EDA               	movwf	fsr2h,c
 10719  010D06  0EFF               	movlw	255
 10720  010D08  22DA               	addwfc	fsr2h,f,c
 10721  010D0A  06DE               	decf	postinc2,f,c
 10722  010D0C  0E00               	movlw	0
 10723  010D0E  5ADD               	subwfb	postdec2,f,c
 10724                           
 10725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 10726                           ;stkvar	_t @ sp[(-56)+52]
 10727  010D10  50E1               	movf	fsr1l,w,c
 10728  010D12  0FFC               	addlw	-4
 10729  010D14  6ED9               	movwf	fsr2l,c
 10730  010D16  50E2               	movf	fsr1h,w,c
 10731  010D18  6EDA               	movwf	fsr2h,c
 10732  010D1A  0EFF               	movlw	255
 10733  010D1C  22DA               	addwfc	fsr2h,f,c
 10734  010D1E  06DE               	decf	postinc2,f,c
 10735  010D20  0E00               	movlw	0
 10736  010D22  5ADD               	subwfb	postdec2,f,c
 10737  010D24                     l9193:
 10738                           
 10739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 10740                           ;stkvar	_t @ sp[(-56)+52]
 10741  010D24  0EFC               	movlw	-4
 10742  010D26  006F FF8C  F035    	movff	plusw1,btemp
 10743  010D2C  0EFD               	movlw	-3
 10744  010D2E  50E3               	movf	plusw1,w,c
 10745  010D30  1035               	iorwf	btemp^0,w,c
 10746  010D32  A4D8               	btfss	status,2,c
 10747  010D34  D7C2               	goto	l9185
 10748                           
 10749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 10750                           ;stkvar	_n @ sp[(-56)+32]
 10751  010D36  0EE8               	movlw	-24
 10752  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 10753  010D3E  0EE9               	movlw	-23
 10754  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 10755  010D46  0EA4               	movlw	low _dbuf
 10756  010D48  243F               	addwf	(btemp+10)^0,w,c
 10757  010D4A  6ED9               	movwf	fsr2l,c
 10758  010D4C  0E01               	movlw	high _dbuf
 10759  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 10760  010D50  6EDA               	movwf	fsr2h,c
 10761                           
 10762                           ;stkvar	_d @ sp[(-56)+44]
 10763  010D52  0EF4               	movlw	-12
 10764  010D54  50E3               	movf	plusw1,w,c
 10765  010D56  0F30               	addlw	48
 10766  010D58  6EDF               	movwf	indf2,c
 10767                           
 10768                           ;stkvar	_n @ sp[(-56)+32]
 10769  010D5A  0EE8               	movlw	-24
 10770  010D5C  50E3               	movf	plusw1,w,c
 10771  010D5E  0F01               	addlw	1
 10772  010D60  6E35               	movwf	btemp^0,c
 10773  010D62  0EE8               	movlw	-24
 10774  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 10775  010D6A  6A35               	clrf	btemp^0,c
 10776  010D6C  0EE9               	movlw	-23
 10777  010D6E  50E3               	movf	plusw1,w,c
 10778  010D70  2035               	addwfc	btemp^0,w,c
 10779  010D72  6E35               	movwf	btemp^0,c
 10780  010D74  0EE9               	movlw	-23
 10781  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 10782                           
 10783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 10784                           ;stkvar	_w @ sp[(-56)+38]
 10785  010D7C  50E1               	movf	fsr1l,w,c
 10786  010D7E  0FEE               	addlw	-18
 10787  010D80  6ED9               	movwf	fsr2l,c
 10788  010D82  50E2               	movf	fsr1h,w,c
 10789  010D84  6EDA               	movwf	fsr2h,c
 10790  010D86  0EFF               	movlw	255
 10791  010D88  22DA               	addwfc	fsr2h,f,c
 10792  010D8A  06DE               	decf	postinc2,f,c
 10793  010D8C  0E00               	movlw	0
 10794  010D8E  5ADD               	subwfb	postdec2,f,c
 10795  010D90                     l9201:
 10796                           
 10797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 10798                           ;stkvar	_u @ sp[(-56)+12]
 10799  010D90  0ED4               	movlw	-44
 10800  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 10801  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 10802  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10803  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10804                           
 10805                           ;stkvar	_l @ sp[(-60)+20]
 10806  010DAA  0ED8               	movlw	-40
 10807  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10808  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 10809  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 10810  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 10811  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 10812  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 10813  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 10814  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 10815  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 10816                           
 10817                           ;stkvar	_h @ sp[(-60)+24]
 10818  010DE0  0EDC               	movlw	-36
 10819  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 10820  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10821  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10822  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10823  010DFA  ECC2  F0BA         	call	___flsub	;wreg free
 10824                           
 10825                           ;stkvar	_h @ sp[(-56)+24]
 10826  010DFE  0EE0               	movlw	-32
 10827  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 10828  010E06  0EE1               	movlw	-31
 10829  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10830  010E0E  0EE2               	movlw	-30
 10831  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10832  010E16  0EE3               	movlw	-29
 10833  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10834                           
 10835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 10836  010E1E  0E00               	movlw	0
 10837  010E20  6EE6               	movwf	postinc1,c
 10838  010E22  0E00               	movlw	0
 10839  010E24  6EE6               	movwf	postinc1,c
 10840  010E26  0E20               	movlw	32
 10841  010E28  6EE6               	movwf	postinc1,c
 10842  010E2A  0E41               	movlw	65
 10843  010E2C  6EE6               	movwf	postinc1,c
 10844                           
 10845                           ;stkvar	_u @ sp[(-60)+12]
 10846  010E2E  0ED0               	movlw	-48
 10847  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 10848  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 10849  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 10850  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 10851  010E48  ECB4  F096         	call	___fldiv	;wreg free
 10852                           
 10853                           ;stkvar	_u @ sp[(-56)+12]
 10854  010E4C  0ED4               	movlw	-44
 10855  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10856  010E54  0ED5               	movlw	-43
 10857  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10858  010E5C  0ED6               	movlw	-42
 10859  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 10860  010E64  0ED7               	movlw	-41
 10861  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 10862                           
 10863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 10864                           ;stkvar	_ne @ sp[(-56)+46]
 10865  010E6C  50E1               	movf	fsr1l,w,c
 10866  010E6E  0FF6               	addlw	-10
 10867  010E70  6ED9               	movwf	fsr2l,c
 10868  010E72  50E2               	movf	fsr1h,w,c
 10869  010E74  6EDA               	movwf	fsr2h,c
 10870  010E76  0EFF               	movlw	255
 10871  010E78  22DA               	addwfc	fsr2h,f,c
 10872  010E7A  06DE               	decf	postinc2,f,c
 10873  010E7C  0E00               	movlw	0
 10874  010E7E  5ADD               	subwfb	postdec2,f,c
 10875                           
 10876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 10877                           ;stkvar	_i @ sp[(-56)+36]
 10878  010E80  0EEC               	movlw	-20
 10879  010E82  50E3               	movf	plusw1,w,c
 10880  010E84  0F01               	addlw	1
 10881  010E86  6E35               	movwf	btemp^0,c
 10882  010E88  0EEC               	movlw	-20
 10883  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10884  010E90  6A35               	clrf	btemp^0,c
 10885  010E92  0EED               	movlw	-19
 10886  010E94  50E3               	movf	plusw1,w,c
 10887  010E96  2035               	addwfc	btemp^0,w,c
 10888  010E98  6E35               	movwf	btemp^0,c
 10889  010E9A  0EED               	movlw	-19
 10890  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 10891  010EA2                     l9209:
 10892                           
 10893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 10894                           ;stkvar	_m @ sp[(-56)+48]
 10895                           ;stkvar	_i @ sp[(-56)+36]
 10896  010EA2  50E1               	movf	fsr1l,w,c
 10897  010EA4  0FEC               	addlw	-20
 10898  010EA6  6ED9               	movwf	fsr2l,c
 10899  010EA8  50E2               	movf	fsr1h,w,c
 10900  010EAA  6EDA               	movwf	fsr2h,c
 10901  010EAC  0EFF               	movlw	255
 10902  010EAE  22DA               	addwfc	fsr2h,f,c
 10903  010EB0  0EF8               	movlw	-8
 10904  010EB2  50E3               	movf	plusw1,w,c
 10905  010EB4  5CDE               	subwf	postinc2,w,c
 10906  010EB6  50DE               	movf	postinc2,w,c
 10907  010EB8  0A80               	xorlw	128
 10908  010EBA  6E35               	movwf	btemp^0,c
 10909  010EBC  0EF9               	movlw	-7
 10910  010EBE  50E3               	movf	plusw1,w,c
 10911  010EC0  0A80               	xorlw	128
 10912  010EC2  5835               	subwfb	btemp^0,w,c
 10913  010EC4  B0D8               	btfsc	status,0,c
 10914  010EC6  D00E               	goto	u8990
 10915                           
 10916                           ;stkvar	_n @ sp[(-56)+32]
 10917  010EC8  0EE9               	movlw	-23
 10918  010ECA  BEE3               	btfsc	plusw1,7,c
 10919  010ECC  D633               	goto	l9159
 10920  010ECE  0EE9               	movlw	-23
 10921  010ED0  50E3               	movf	plusw1,w,c
 10922  010ED2  E108               	bnz	u8990
 10923  010ED4  0EE8               	movlw	-24
 10924  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 10925  010EDC  0E4B               	movlw	75
 10926  010EDE  5E35               	subwf	btemp^0,f,c
 10927  010EE0  A0D8               	btfss	status,0,c
 10928  010EE2  D628               	goto	l9159
 10929  010EE4                     u8990:
 10930                           
 10931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 10932                           ;stkvar	_pp @ sp[(-56)+50]
 10933  010EE4  0EFA               	movlw	-6
 10934  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 10935  010EEC  0EFB               	movlw	-5
 10936  010EEE  50E3               	movf	plusw1,w,c
 10937  010EF0  1035               	iorwf	btemp^0,w,c
 10938  010EF2  B4D8               	btfsc	status,2,c
 10939  010EF4  A822               	btfss	_flags^0,4,c
 10940  010EF6  D021               	goto	l9221
 10941                           
 10942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 10943                           ;stkvar	_n @ sp[(-56)+32]
 10944  010EF8  0EE8               	movlw	-24
 10945  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 10946  010F00  0EE9               	movlw	-23
 10947  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 10948  010F08  0EA4               	movlw	low _dbuf
 10949  010F0A  243F               	addwf	(btemp+10)^0,w,c
 10950  010F0C  6ED9               	movwf	fsr2l,c
 10951  010F0E  0E01               	movlw	high _dbuf
 10952  010F10  2040               	addwfc	(btemp+11)^0,w,c
 10953  010F12  6EDA               	movwf	fsr2h,c
 10954  010F14  0E2E               	movlw	46
 10955  010F16  6EDF               	movwf	indf2,c
 10956                           
 10957                           ;stkvar	_n @ sp[(-56)+32]
 10958  010F18  0EE8               	movlw	-24
 10959  010F1A  50E3               	movf	plusw1,w,c
 10960  010F1C  0F01               	addlw	1
 10961  010F1E  6E35               	movwf	btemp^0,c
 10962  010F20  0EE8               	movlw	-24
 10963  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 10964  010F28  6A35               	clrf	btemp^0,c
 10965  010F2A  0EE9               	movlw	-23
 10966  010F2C  50E3               	movf	plusw1,w,c
 10967  010F2E  2035               	addwfc	btemp^0,w,c
 10968  010F30  6E35               	movwf	btemp^0,c
 10969  010F32  0EE9               	movlw	-23
 10970  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 10971  010F3A                     l9221:
 10972                           
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 10974                           ;stkvar	_n @ sp[(-56)+32]
 10975  010F3A  0EE8               	movlw	-24
 10976  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 10977  010F42  0EE9               	movlw	-23
 10978  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 10979  010F4A  0EA4               	movlw	low _dbuf
 10980  010F4C  243F               	addwf	(btemp+10)^0,w,c
 10981  010F4E  6ED9               	movwf	fsr2l,c
 10982  010F50  0E01               	movlw	high _dbuf
 10983  010F52  2040               	addwfc	(btemp+11)^0,w,c
 10984  010F54  6EDA               	movwf	fsr2h,c
 10985  010F56  0E00               	movlw	0
 10986  010F58  6EDF               	movwf	indf2,c
 10987                           
 10988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 10989                           ;stkvar	_nmode @ sp[(-56)+55]
 10990  010F5A  0EFF               	movlw	-1
 10991  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 10992  010F62  0E65               	movlw	101
 10993  010F64  1835               	xorwf	btemp^0,w,c
 10994  010F66  A4D8               	btfss	status,2,c
 10995  010F68  EF16  F081         	goto	l9025
 10996                           
 10997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 10998  010F6C  0E4F               	movlw	79
 10999  010F6E  6E3F               	movwf	(btemp+10)^0,c
 11000  010F70  0E00               	movlw	0
 11001  010F72  6E40               	movwf	(btemp+11)^0,c
 11002                           
 11003                           ;stkvar	_i @ sp[(-56)+36]
 11004  010F74  0EEC               	movlw	-20
 11005  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11006  010F7C  0EED               	movlw	-19
 11007  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11008                           
 11009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11010                           ;stkvar	_i @ sp[(-56)+36]
 11011  010F84  0EEC               	movlw	-20
 11012  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 11013  010F8C  0EED               	movlw	-19
 11014  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 11015  010F94  0EA4               	movlw	low _dbuf
 11016  010F96  243F               	addwf	(btemp+10)^0,w,c
 11017  010F98  6ED9               	movwf	fsr2l,c
 11018  010F9A  0E01               	movlw	high _dbuf
 11019  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 11020  010F9E  6EDA               	movwf	fsr2h,c
 11021  010FA0  0E00               	movlw	0
 11022  010FA2  6EDF               	movwf	indf2,c
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 11025                           ;stkvar	_sign @ sp[(-56)+42]
 11026  010FA4  0EF2               	movlw	-14
 11027  010FA6  6AE3               	clrf	plusw1,c
 11028  010FA8  0EF3               	movlw	-13
 11029  010FAA  6AE3               	clrf	plusw1,c
 11030                           
 11031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 11032                           ;stkvar	_e @ sp[(-56)+34]
 11033  010FAC  0EEB               	movlw	-21
 11034  010FAE  AEE3               	btfss	plusw1,7,c
 11035  010FB0  D012               	goto	l9235
 11036                           
 11037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 11038  010FB2  0E01               	movlw	1
 11039  010FB4  6E3F               	movwf	(btemp+10)^0,c
 11040  010FB6  0E00               	movlw	0
 11041  010FB8  6E40               	movwf	(btemp+11)^0,c
 11042                           
 11043                           ;stkvar	_sign @ sp[(-56)+42]
 11044  010FBA  0EF2               	movlw	-14
 11045  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11046  010FC2  0EF3               	movlw	-13
 11047  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11048                           
 11049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 11050                           ;stkvar	_e @ sp[(-56)+34]
 11051                           ;stkvar	_e @ sp[(-56)+34]
 11052  010FCA  0EEA               	movlw	-22
 11053  010FCC  6CE3               	negf	plusw1,c
 11054  010FCE  0EEB               	movlw	-21
 11055  010FD0  1EE3               	comf	plusw1,f,c
 11056  010FD2  B0D8               	btfsc	status,0,c
 11057  010FD4  2AE3               	incf	plusw1,f,c
 11058  010FD6                     l9235:
 11059                           
 11060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 11061  010FD6  0E02               	movlw	2
 11062  010FD8  6E3F               	movwf	(btemp+10)^0,c
 11063  010FDA  0E00               	movlw	0
 11064  010FDC  6E40               	movwf	(btemp+11)^0,c
 11065                           
 11066                           ;stkvar	_p @ sp[(-56)+40]
 11067  010FDE  0EF0               	movlw	-16
 11068  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11069  010FE6  0EF1               	movlw	-15
 11070  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11073  010FEE  D051               	goto	l9247
 11074  010FF0                     l9237:
 11075                           
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 11077                           ;stkvar	_i @ sp[(-56)+36]
 11078  010FF0  50E1               	movf	fsr1l,w,c
 11079  010FF2  0FEC               	addlw	-20
 11080  010FF4  6ED9               	movwf	fsr2l,c
 11081  010FF6  50E2               	movf	fsr1h,w,c
 11082  010FF8  6EDA               	movwf	fsr2h,c
 11083  010FFA  0EFF               	movlw	255
 11084  010FFC  22DA               	addwfc	fsr2h,f,c
 11085  010FFE  06DE               	decf	postinc2,f,c
 11086  011000  0E00               	movlw	0
 11087  011002  5ADD               	subwfb	postdec2,f,c
 11088                           
 11089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 11090                           ;stkvar	_i @ sp[(-56)+36]
 11091  011004  0EEC               	movlw	-20
 11092  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 11093  01100C  0EED               	movlw	-19
 11094  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 11095  011014  0EA4               	movlw	low _dbuf
 11096  011016  243F               	addwf	(btemp+10)^0,w,c
 11097  011018  6ED9               	movwf	fsr2l,c
 11098  01101A  0E01               	movlw	high _dbuf
 11099  01101C  2040               	addwfc	(btemp+11)^0,w,c
 11100  01101E  6EDA               	movwf	fsr2h,c
 11101  011020  0E0A               	movlw	10
 11102  011022  6EE6               	movwf	postinc1,c
 11103  011024  0E00               	movlw	0
 11104  011026  6EE6               	movwf	postinc1,c
 11105                           
 11106                           ;stkvar	_e @ sp[(-58)+34]
 11107  011028  0EE8               	movlw	-24
 11108  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 11109  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 11110  011036  ECCD  F0B0         	call	___awmod	;wreg free
 11111  01103A  5035               	movf	btemp^0,w,c
 11112  01103C  0F30               	addlw	48
 11113  01103E  6EDF               	movwf	indf2,c
 11114                           
 11115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 11116  011040  0E0A               	movlw	10
 11117  011042  6EE6               	movwf	postinc1,c
 11118  011044  0E00               	movlw	0
 11119  011046  6EE6               	movwf	postinc1,c
 11120                           
 11121                           ;stkvar	_e @ sp[(-58)+34]
 11122  011048  0EE8               	movlw	-24
 11123  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 11124  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 11125  011056  ECFD  F0AE         	call	___awdiv	;wreg free
 11126                           
 11127                           ;stkvar	_e @ sp[(-56)+34]
 11128  01105A  0EEA               	movlw	-22
 11129  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11130  011062  0EEB               	movlw	-21
 11131  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11132                           
 11133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 11134                           ;stkvar	_p @ sp[(-56)+40]
 11135  01106A  50E1               	movf	fsr1l,w,c
 11136  01106C  0FF0               	addlw	-16
 11137  01106E  6ED9               	movwf	fsr2l,c
 11138  011070  50E2               	movf	fsr1h,w,c
 11139  011072  6EDA               	movwf	fsr2h,c
 11140  011074  0EFF               	movlw	255
 11141  011076  22DA               	addwfc	fsr2h,f,c
 11142  011078  06DE               	decf	postinc2,f,c
 11143  01107A  0E00               	movlw	0
 11144  01107C  5ADD               	subwfb	postdec2,f,c
 11145                           
 11146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 11147                           ;stkvar	_w @ sp[(-56)+38]
 11148  01107E  50E1               	movf	fsr1l,w,c
 11149  011080  0FEE               	addlw	-18
 11150  011082  6ED9               	movwf	fsr2l,c
 11151  011084  50E2               	movf	fsr1h,w,c
 11152  011086  6EDA               	movwf	fsr2h,c
 11153  011088  0EFF               	movlw	255
 11154  01108A  22DA               	addwfc	fsr2h,f,c
 11155  01108C  06DE               	decf	postinc2,f,c
 11156  01108E  0E00               	movlw	0
 11157  011090  5ADD               	subwfb	postdec2,f,c
 11158  011092                     l9247:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 11161                           ;stkvar	_e @ sp[(-56)+34]
 11162  011092  0EEA               	movlw	-22
 11163  011094  006F FF8C  F035    	movff	plusw1,btemp
 11164  01109A  0EEB               	movlw	-21
 11165  01109C  50E3               	movf	plusw1,w,c
 11166  01109E  1035               	iorwf	btemp^0,w,c
 11167  0110A0  A4D8               	btfss	status,2,c
 11168  0110A2  D7A6               	goto	l9237
 11169                           
 11170                           ;stkvar	_p @ sp[(-56)+40]
 11171  0110A4  0EF1               	movlw	-15
 11172  0110A6  BEE3               	btfsc	plusw1,7,c
 11173  0110A8  D007               	goto	u9050
 11174  0110AA  0EF1               	movlw	-15
 11175  0110AC  50E3               	movf	plusw1,w,c
 11176  0110AE  E1A0               	bnz	l9237
 11177  0110B0  0EF0               	movlw	-16
 11178  0110B2  04E3               	decf	plusw1,w,c
 11179  0110B4  B0D8               	btfsc	status,0,c
 11180  0110B6  D79C               	goto	l9237
 11181  0110B8                     u9050:
 11182                           
 11183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 11184                           ;stkvar	_i @ sp[(-56)+36]
 11185  0110B8  50E1               	movf	fsr1l,w,c
 11186  0110BA  0FEC               	addlw	-20
 11187  0110BC  6ED9               	movwf	fsr2l,c
 11188  0110BE  50E2               	movf	fsr1h,w,c
 11189  0110C0  6EDA               	movwf	fsr2h,c
 11190  0110C2  0EFF               	movlw	255
 11191  0110C4  22DA               	addwfc	fsr2h,f,c
 11192  0110C6  06DE               	decf	postinc2,f,c
 11193  0110C8  0E00               	movlw	0
 11194  0110CA  5ADD               	subwfb	postdec2,f,c
 11195                           
 11196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 11197                           ;stkvar	_sign @ sp[(-56)+42]
 11198  0110CC  0EF2               	movlw	-14
 11199  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 11200  0110D4  0EF3               	movlw	-13
 11201  0110D6  50E3               	movf	plusw1,w,c
 11202  0110D8  1035               	iorwf	btemp^0,w,c
 11203  0110DA  A4D8               	btfss	status,2,c
 11204  0110DC  D002               	goto	l9257
 11205  0110DE  0E2B               	movlw	43
 11206  0110E0  D001               	goto	L9
 11207  0110E2                     l9257:
 11208  0110E2  0E2D               	movlw	45
 11209  0110E4                     L9:
 11210  0110E4  6E3F               	movwf	(btemp+10)^0,c
 11211  0110E6  0E00               	movlw	0
 11212  0110E8  6E40               	movwf	(btemp+11)^0,c
 11213                           
 11214                           ;stkvar	_efgtoa$4112 @ sp[(-56)+4]
 11215  0110EA  0ECC               	movlw	-52
 11216  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11217  0110F2  0ECD               	movlw	-51
 11218  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11219                           
 11220                           ;stkvar	_efgtoa$4112 @ sp[(-56)+4]
 11221                           ;stkvar	_i @ sp[(-56)+36]
 11222  0110FA  0EEC               	movlw	-20
 11223  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11224  011102  0EED               	movlw	-19
 11225  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 11226  01110A  0EA4               	movlw	low _dbuf
 11227  01110C  243F               	addwf	(btemp+10)^0,w,c
 11228  01110E  6ED9               	movwf	fsr2l,c
 11229  011110  0E01               	movlw	high _dbuf
 11230  011112  2040               	addwfc	(btemp+11)^0,w,c
 11231  011114  6EDA               	movwf	fsr2h,c
 11232  011116  0ECC               	movlw	-52
 11233  011118  006F FF8F FFDF     	movff	plusw1,indf2
 11234                           
 11235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 11236                           ;stkvar	_w @ sp[(-56)+38]
 11237  01111E  50E1               	movf	fsr1l,w,c
 11238  011120  0FEE               	addlw	-18
 11239  011122  6ED9               	movwf	fsr2l,c
 11240  011124  50E2               	movf	fsr1h,w,c
 11241  011126  6EDA               	movwf	fsr2h,c
 11242  011128  0EFF               	movlw	255
 11243  01112A  22DA               	addwfc	fsr2h,f,c
 11244  01112C  06DE               	decf	postinc2,f,c
 11245  01112E  0E00               	movlw	0
 11246  011130  5ADD               	subwfb	postdec2,f,c
 11247                           
 11248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11249                           ;stkvar	_i @ sp[(-56)+36]
 11250  011132  50E1               	movf	fsr1l,w,c
 11251  011134  0FEC               	addlw	-20
 11252  011136  6ED9               	movwf	fsr2l,c
 11253  011138  50E2               	movf	fsr1h,w,c
 11254  01113A  6EDA               	movwf	fsr2h,c
 11255  01113C  0EFF               	movlw	255
 11256  01113E  22DA               	addwfc	fsr2h,f,c
 11257  011140  06DE               	decf	postinc2,f,c
 11258  011142  0E00               	movlw	0
 11259  011144  5ADD               	subwfb	postdec2,f,c
 11260  011146  0EBF               	movlw	191
 11261  011148  6E3F               	movwf	(btemp+10)^0,c
 11262  01114A  0EFF               	movlw	255
 11263  01114C  6E40               	movwf	(btemp+11)^0,c
 11264                           
 11265                           ;stkvar	_c @ sp[(-56)+-7]
 11266  01114E  0EC1               	movlw	-63
 11267  011150  50E3               	movf	plusw1,w,c
 11268  011152  6E3D               	movwf	(btemp+8)^0,c
 11269  011154  6A3E               	clrf	(btemp+9)^0,c
 11270  011156  503F               	movf	(btemp+10)^0,w,c
 11271  011158  263D               	addwf	(btemp+8)^0,f,c
 11272  01115A  5040               	movf	(btemp+11)^0,w,c
 11273  01115C  223E               	addwfc	(btemp+9)^0,f,c
 11274  01115E  503E               	movf	(btemp+9)^0,w,c
 11275  011160  E106               	bnz	u9070
 11276  011162  0E1A               	movlw	26
 11277  011164  5C3D               	subwf	(btemp+8)^0,w,c
 11278  011166  B0D8               	btfsc	status,0,c
 11279  011168  D002               	goto	u9070
 11280  01116A  0E01               	movlw	1
 11281  01116C  D001               	goto	u9080
 11282  01116E                     u9070:
 11283  01116E  0E00               	movlw	0
 11284  011170                     u9080:
 11285  011170  6E3F               	movwf	(btemp+10)^0,c
 11286  011172  6A40               	clrf	(btemp+11)^0,c
 11287                           
 11288                           ;stkvar	_efgtoa$4114 @ sp[(-56)+0]
 11289  011174  0EC8               	movlw	-56
 11290  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11291  01117C  0EC9               	movlw	-55
 11292  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 11293                           
 11294                           ;stkvar	_efgtoa$4114 @ sp[(-56)+0]
 11295  011184  0EC8               	movlw	-56
 11296  011186  006F FF8C  F035    	movff	plusw1,btemp
 11297  01118C  0EC9               	movlw	-55
 11298  01118E  50E3               	movf	plusw1,w,c
 11299  011190  1035               	iorwf	btemp^0,w,c
 11300  011192  A4D8               	btfss	status,2,c
 11301  011194  D002               	goto	l9273
 11302  011196  0E65               	movlw	101
 11303  011198  D001               	goto	L10
 11304  01119A                     l9273:
 11305  01119A  0E45               	movlw	69
 11306  01119C                     L10:
 11307  01119C  6E3F               	movwf	(btemp+10)^0,c
 11308  01119E  0E00               	movlw	0
 11309  0111A0  6E40               	movwf	(btemp+11)^0,c
 11310                           
 11311                           ;stkvar	_efgtoa$4113 @ sp[(-56)+2]
 11312  0111A2  0ECA               	movlw	-54
 11313  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11314  0111AA  0ECB               	movlw	-53
 11315  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11316                           
 11317                           ;stkvar	_efgtoa$4113 @ sp[(-56)+2]
 11318                           ;stkvar	_i @ sp[(-56)+36]
 11319  0111B2  0EEC               	movlw	-20
 11320  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11321  0111BA  0EED               	movlw	-19
 11322  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 11323  0111C2  0EA4               	movlw	low _dbuf
 11324  0111C4  243F               	addwf	(btemp+10)^0,w,c
 11325  0111C6  6ED9               	movwf	fsr2l,c
 11326  0111C8  0E01               	movlw	high _dbuf
 11327  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 11328  0111CC  6EDA               	movwf	fsr2h,c
 11329  0111CE  0ECA               	movlw	-54
 11330  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 11331                           
 11332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 11333                           ;stkvar	_w @ sp[(-56)+38]
 11334  0111D6  50E1               	movf	fsr1l,w,c
 11335  0111D8  0FEE               	addlw	-18
 11336  0111DA  6ED9               	movwf	fsr2l,c
 11337  0111DC  50E2               	movf	fsr1h,w,c
 11338  0111DE  6EDA               	movwf	fsr2h,c
 11339  0111E0  0EFF               	movlw	255
 11340  0111E2  22DA               	addwfc	fsr2h,f,c
 11341  0111E4  06DE               	decf	postinc2,f,c
 11342  0111E6  0E00               	movlw	0
 11343  0111E8  5ADD               	subwfb	postdec2,f,c
 11344                           
 11345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 11346                           ;stkvar	_i @ sp[(-56)+36]
 11347  0111EA  0EEC               	movlw	-20
 11348  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 11349  0111F2  0EED               	movlw	-19
 11350  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 11351  0111FA  0EA4               	movlw	low _dbuf
 11352  0111FC  243F               	addwf	(btemp+10)^0,w,c
 11353  0111FE  6E3D               	movwf	(btemp+8)^0,c
 11354  011200  0E01               	movlw	high _dbuf
 11355  011202  2040               	addwfc	(btemp+11)^0,w,c
 11356  011204  6E3E               	movwf	(btemp+9)^0,c
 11357  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 11358  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 11359                           
 11360                           ;stkvar	_n @ sp[(-58)+32]
 11361  011212  0EA4               	movlw	low _dbuf
 11362  011214  6E3F               	movwf	(btemp+10)^0,c
 11363  011216  0E01               	movlw	high _dbuf
 11364  011218  6E40               	movwf	(btemp+11)^0,c
 11365  01121A  0EE6               	movlw	-26
 11366  01121C  50E3               	movf	plusw1,w,c
 11367  01121E  263F               	addwf	(btemp+10)^0,f,c
 11368  011220  0EE7               	movlw	-25
 11369  011222  50E3               	movf	plusw1,w,c
 11370  011224  2240               	addwfc	(btemp+11)^0,f,c
 11371  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11372  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11373  011232  EC64  F0B3         	call	_strcpy	;wreg free
 11374  011236  EF16  F081         	goto	l9025
 11375  01123A                     l1785:
 11376                           
 11377                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 11378  01123A  0EC1               	movlw	193
 11379  01123C  26E1               	addwf	fsr1l,f,c
 11380  01123E  0EFF               	movlw	255
 11381  011240  22E2               	addwfc	fsr1h,f,c
 11382  011242  0012               	return		;funcret
 11383  011244                     __end_of_efgtoa:
 11384                           	opt callstack 0
 11385                           
 11386 ;; *************** function _tolower *****************
 11387 ;; Defined at:
 11388 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  c               2  [STACK] int 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  2  [STACK] int 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/4
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11406 ;;Total ram usage:        0 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    7
 11409 ;; This function calls:
 11410 ;;		_isupper
 11411 ;; This function is called by:
 11412 ;;		_efgtoa
 11413 ;;		_vfpfcnvrt
 11414 ;; This function uses a reentrant model
 11415 ;;
 11416                           
 11417                           	psect	text40
 11418  016FDA                     __ptext40:
 11419                           	opt callstack 0
 11420  016FDA                     _tolower:
 11421                           	opt callstack 0
 11422                           
 11423                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11424  016FDA  52E6               	movf	postinc1,f,c
 11425  016FDC  52E6               	movf	postinc1,f,c
 11426                           
 11427                           ;stkvar	_c @ sp[(-2)+-2]
 11428                           
 11429                           ;incstack = 0
 11430  016FDE  0EFC               	movlw	-4
 11431  016FE0  50E3               	movf	plusw1,w,c
 11432  016FE2  0FBF               	addlw	191
 11433  016FE4  6E3F               	movwf	(btemp+10)^0,c
 11434  016FE6  0EFD               	movlw	-3
 11435  016FE8  006F FF8C  F040    	movff	plusw1,btemp+11
 11436  016FEE  0EFF               	movlw	255
 11437  016FF0  2240               	addwfc	(btemp+11)^0,f,c
 11438  016FF2  5040               	movf	(btemp+11)^0,w,c
 11439  016FF4  E106               	bnz	u4860
 11440  016FF6  0E1A               	movlw	26
 11441  016FF8  5C3F               	subwf	(btemp+10)^0,w,c
 11442  016FFA  B0D8               	btfsc	status,0,c
 11443  016FFC  D002               	goto	u4860
 11444  016FFE  0E01               	movlw	1
 11445  017000  D001               	goto	u4870
 11446  017002                     u4860:
 11447  017002  0E00               	movlw	0
 11448  017004                     u4870:
 11449  017004  6E3F               	movwf	(btemp+10)^0,c
 11450  017006  6A40               	clrf	(btemp+11)^0,c
 11451                           
 11452                           ;stkvar	_tolower$4772 @ sp[(-2)+0]
 11453  017008  0EFE               	movlw	-2
 11454  01700A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11455  017010  0EFF               	movlw	-1
 11456  017012  0060  F103  FFE3   	movff	btemp+11,plusw1
 11457                           
 11458                           ;stkvar	_tolower$4772 @ sp[(-2)+0]
 11459  017018  0EFE               	movlw	-2
 11460  01701A  006F FF8C  F035    	movff	plusw1,btemp
 11461  017020  0EFF               	movlw	-1
 11462  017022  50E3               	movf	plusw1,w,c
 11463  017024  1035               	iorwf	btemp^0,w,c
 11464  017026  B4D8               	btfsc	status,2,c
 11465  017028  D00D               	goto	l6201
 11466                           
 11467                           ;stkvar	_c @ sp[(-2)+-2]
 11468  01702A  0EFC               	movlw	-4
 11469  01702C  006F FF8C  F035    	movff	plusw1,btemp
 11470  017032  0EFD               	movlw	-3
 11471  017034  006F FF8C  F036    	movff	plusw1,btemp+1
 11472  01703A  0E20               	movlw	32
 11473  01703C  1235               	iorwf	btemp^0,f,c
 11474  01703E  0E00               	movlw	0
 11475  017040  1236               	iorwf	(btemp+1)^0,f,c
 11476  017042  D008               	goto	l2805
 11477  017044                     l6201:
 11478                           
 11479                           ;stkvar	_c @ sp[(-2)+-2]
 11480  017044  0EFC               	movlw	-4
 11481  017046  006F FF8C  F035    	movff	plusw1,btemp
 11482  01704C  0EFD               	movlw	-3
 11483  01704E  006F FF8C  F036    	movff	plusw1,btemp+1
 11484  017054                     l2805:
 11485                           
 11486                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11487  017054  52E5               	movf	postdec1,f,c
 11488  017056  52E5               	movf	postdec1,f,c
 11489  017058  52E5               	movf	postdec1,f,c
 11490  01705A  52E5               	movf	postdec1,f,c
 11491  01705C  0012               	return		;funcret
 11492  01705E                     __end_of_tolower:
 11493                           	opt callstack 0
 11494                           
 11495 ;; *************** function _isupper *****************
 11496 ;; Defined at:
 11497 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  c               2  [STACK] int 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  2  [STACK] int 
 11504 ;; Registers used:
 11505 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11515 ;;Total ram usage:        0 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    6
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_efgtoa
 11522 ;;		_xtoa
 11523 ;;		_vfpfcnvrt
 11524 ;;		_tolower
 11525 ;; This function uses a reentrant model
 11526 ;;
 11527                           
 11528                           	psect	text41
 11529  017958                     __ptext41:
 11530                           	opt callstack 0
 11531  017958                     _isupper:
 11532                           	opt callstack 17
 11533                           
 11534                           ;stkvar	_c @ sp[(0)+-2]
 11535                           
 11536                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11537                           ;incstack = 0
 11538  017958  0EFE               	movlw	-2
 11539  01795A  50E3               	movf	plusw1,w,c
 11540  01795C  0FBF               	addlw	191
 11541  01795E  6E3F               	movwf	(btemp+10)^0,c
 11542  017960  0EFF               	movlw	-1
 11543  017962  006F FF8C  F040    	movff	plusw1,btemp+11
 11544  017968  0EFF               	movlw	255
 11545  01796A  2240               	addwfc	(btemp+11)^0,f,c
 11546  01796C  5040               	movf	(btemp+11)^0,w,c
 11547  01796E  E106               	bnz	u4260
 11548  017970  0E1A               	movlw	26
 11549  017972  5C3F               	subwf	(btemp+10)^0,w,c
 11550  017974  B0D8               	btfsc	status,0,c
 11551  017976  D002               	goto	u4260
 11552  017978  0E01               	movlw	1
 11553  01797A  D001               	goto	u4270
 11554  01797C                     u4260:
 11555  01797C  0E00               	movlw	0
 11556  01797E                     u4270:
 11557  01797E  6E35               	movwf	btemp^0,c
 11558  017980  6A36               	clrf	(btemp+1)^0,c
 11559                           
 11560                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11561  017982  52E5               	movf	postdec1,f,c
 11562  017984  52E5               	movf	postdec1,f,c
 11563  017986  0012               	return		;funcret
 11564  017988                     __end_of_isupper:
 11565                           	opt callstack 0
 11566                           
 11567 ;; *************** function _strcpy *****************
 11568 ;; Defined at:
 11569 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  dest            2  [STACK] PTR unsigned char 
 11572 ;;		 -> dbuf(80), 
 11573 ;;  src             2  [STACK] PTR const unsigned char 
 11574 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11575 ;;		 -> dbuf(80), 
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;  d               2  [STACK] PTR unsigned char 
 11578 ;;		 -> dbuf(80), 
 11579 ;;  s               2  [STACK] PTR const unsigned char 
 11580 ;;		 -> STR_37(4), STR_36(4), STR_33(4), STR_32(4), 
 11581 ;;		 -> dbuf(80), 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  2  [STACK] PTR unsigned char 
 11584 ;; Registers used:
 11585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/4
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11595 ;;Total ram usage:        0 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    6
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_efgtoa
 11602 ;; This function uses a reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text42
 11606  0166C8                     __ptext42:
 11607                           	opt callstack 0
 11608  0166C8                     _strcpy:
 11609                           	opt callstack 0
 11610                           
 11611                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11612  0166C8  52E6               	movf	postinc1,f,c
 11613  0166CA  52E6               	movf	postinc1,f,c
 11614  0166CC  52E6               	movf	postinc1,f,c
 11615  0166CE  52E6               	movf	postinc1,f,c
 11616                           
 11617                           ;stkvar	_src @ sp[(-4)+-4]
 11618                           
 11619                           ;incstack = 0
 11620  0166D0  0EF8               	movlw	-8
 11621  0166D2  006F FF8C  F03F    	movff	plusw1,btemp+10
 11622  0166D8  0EF9               	movlw	-7
 11623  0166DA  006F FF8C  F040    	movff	plusw1,btemp+11
 11624                           
 11625                           ;stkvar	_s @ sp[(-4)+2]
 11626  0166E0  0EFF               	movlw	-1
 11627  0166E2  0060  F103  FFE3   	movff	btemp+11,plusw1
 11628  0166E8  0EFE               	movlw	-2
 11629  0166EA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11630                           
 11631                           ;stkvar	_dest @ sp[(-4)+-2]
 11632  0166F0  0EFA               	movlw	-6
 11633  0166F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 11634  0166F8  0EFB               	movlw	-5
 11635  0166FA  006F FF8C  F040    	movff	plusw1,btemp+11
 11636                           
 11637                           ;stkvar	_d @ sp[(-4)+0]
 11638  016700  0EFD               	movlw	-3
 11639  016702  0060  F103  FFE3   	movff	btemp+11,plusw1
 11640  016708  0EFC               	movlw	-4
 11641  01670A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11642  016710                     l8899:
 11643                           
 11644                           ;stkvar	_s @ sp[(-4)+2]
 11645  016710  50E1               	movf	fsr1l,w,c
 11646  016712  0FFE               	addlw	-2
 11647  016714  6ED9               	movwf	fsr2l,c
 11648  016716  50E2               	movf	fsr1h,w,c
 11649  016718  6EDA               	movwf	fsr2h,c
 11650  01671A  0EFF               	movlw	255
 11651  01671C  22DA               	addwfc	fsr2h,f,c
 11652  01671E  006F FF7C  F03F    	movff	indf2,btemp+10
 11653  016724  0E01               	movlw	1
 11654  016726  26DE               	addwf	postinc2,f,c
 11655  016728  006F FF7C  F040    	movff	indf2,btemp+11
 11656  01672E  0E00               	movlw	0
 11657  016730  22DD               	addwfc	postdec2,f,c
 11658  016732  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 11659  016738  0060  F103  FFF7   	movff	btemp+11,tblptrh
 11660  01673E  0E00               	movlw	low (__mediumconst shr (0+16))
 11661  016740  6EF8               	movwf	tblptru,c
 11662                           
 11663                           ;stkvar	_d @ sp[(-4)+0]
 11664  016742  50E1               	movf	fsr1l,w,c
 11665  016744  0FFC               	addlw	-4
 11666  016746  6ED9               	movwf	fsr2l,c
 11667  016748  50E2               	movf	fsr1h,w,c
 11668  01674A  6EDA               	movwf	fsr2h,c
 11669  01674C  0EFF               	movlw	255
 11670  01674E  22DA               	addwfc	fsr2h,f,c
 11671  016750  006F FF7C  F03F    	movff	indf2,btemp+10
 11672  016756  0E01               	movlw	1
 11673  016758  26DE               	addwf	postinc2,f,c
 11674  01675A  006F FF7C  F040    	movff	indf2,btemp+11
 11675  016760  0E00               	movlw	0
 11676  016762  22DD               	addwfc	postdec2,f,c
 11677  016764  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 11678  01676A  0060  F103  FFDA   	movff	btemp+11,fsr2h
 11679  016770  0E1F               	movlw	(high __ramtop+-1)
 11680  016772  64F7               	cpfsgt	tblptrh,c
 11681  016774  D003               	bra	u8387
 11682  016776  0008               	tblrd		*
 11683  016778  50F5               	movf	tablat,w,c
 11684  01677A  D007               	bra	u8380
 11685  01677C                     u8387:
 11686  01677C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11687  016782  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11688  016788  50EF               	movf	indf0,w,c
 11689  01678A                     u8380:
 11690  01678A  6EDF               	movwf	indf2,c
 11691  01678C  50DF               	movf	indf2,w,c
 11692  01678E  A4D8               	btfss	status,2,c
 11693  016790  D7BF               	goto	l8899
 11694                           
 11695                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 11696  016792  0EF8               	movlw	248
 11697  016794  26E1               	addwf	fsr1l,f,c
 11698  016796  0EFF               	movlw	255
 11699  016798  22E2               	addwfc	fsr1h,f,c
 11700  01679A  0012               	return		;funcret
 11701  01679C                     __end_of_strcpy:
 11702                           	opt callstack 0
 11703                           
 11704 ;; *************** function _floorf *****************
 11705 ;; Defined at:
 11706 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  x               4  [STACK] float 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  u               4  [STACK] struct .
 11711 ;;  m               4  [STACK] unsigned long 
 11712 ;;  e               2  [STACK] int 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  4  [STACK] float 
 11715 ;; Registers used:
 11716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/4
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11726 ;;Total ram usage:        0 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:    6
 11729 ;; This function calls:
 11730 ;;		Nothing
 11731 ;; This function is called by:
 11732 ;;		_efgtoa
 11733 ;; This function uses a reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text43
 11737  013F22                     __ptext43:
 11738                           	opt callstack 0
 11739  013F22                     _floorf:
 11740                           	opt callstack 0
 11741                           
 11742                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11743  013F22  0E0A               	movlw	10
 11744  013F24  26E1               	addwf	fsr1l,f,c
 11745  013F26  0E00               	movlw	0
 11746  013F28  22E2               	addwfc	fsr1h,f,c
 11747                           
 11748                           ;incstack = 0
 11749  013F2A  0060  F298  F03D   	movff	floorf@F524,btemp+8
 11750  013F30  0060  F29C  F03E   	movff	floorf@F524+1,btemp+9
 11751  013F36  0060  F2A0  F03F   	movff	floorf@F524+2,btemp+10
 11752  013F3C  0060  F2A4  F040   	movff	floorf@F524+3,btemp+11
 11753                           
 11754                           ;stkvar	_u @ sp[(-10)+0]
 11755  013F42  0EF6               	movlw	-10
 11756  013F44  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11757  013F4A  0EF7               	movlw	-9
 11758  013F4C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11759  013F52  0EF8               	movlw	-8
 11760  013F54  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11761  013F5A  0EF9               	movlw	-7
 11762  013F5C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11763                           
 11764                           ;stkvar	_x @ sp[(-10)+-4]
 11765  013F62  0EF2               	movlw	-14
 11766  013F64  006F FF8C  F03D    	movff	plusw1,btemp+8
 11767  013F6A  0EF3               	movlw	-13
 11768  013F6C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11769  013F72  0EF4               	movlw	-12
 11770  013F74  006F FF8C  F03F    	movff	plusw1,btemp+10
 11771  013F7A  0EF5               	movlw	-11
 11772  013F7C  006F FF8C  F040    	movff	plusw1,btemp+11
 11773                           
 11774                           ;stkvar	_u @ sp[(-10)+0]
 11775  013F82  0EF6               	movlw	-10
 11776  013F84  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11777  013F8A  0EF7               	movlw	-9
 11778  013F8C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11779  013F92  0EF8               	movlw	-8
 11780  013F94  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11781  013F9A  0EF9               	movlw	-7
 11782  013F9C  0060  F103  FFE3   	movff	btemp+11,plusw1
 11783  013FA2  0E81               	movlw	129
 11784  013FA4  6E3F               	movwf	(btemp+10)^0,c
 11785  013FA6  0EFF               	movlw	255
 11786  013FA8  6E40               	movwf	(btemp+11)^0,c
 11787                           
 11788                           ;stkvar	_u @ sp[(-10)+0]
 11789  013FAA  0EF6               	movlw	-10
 11790  013FAC  006F FF8C  F039    	movff	plusw1,btemp+4
 11791  013FB2  0EF7               	movlw	-9
 11792  013FB4  006F FF8C  F03A    	movff	plusw1,btemp+5
 11793  013FBA  0EF8               	movlw	-8
 11794  013FBC  006F FF8C  F03B    	movff	plusw1,btemp+6
 11795  013FC2  0EF9               	movlw	-7
 11796  013FC4  006F FF8C  F03C    	movff	plusw1,btemp+7
 11797  013FCA  0E18               	movlw	24
 11798  013FCC  D005               	goto	u4890
 11799  013FCE                     u4895:
 11800  013FCE  90D8               	bcf	status,0,c
 11801  013FD0  323C               	rrcf	(btemp+7)^0,f,c
 11802  013FD2  323B               	rrcf	(btemp+6)^0,f,c
 11803  013FD4  323A               	rrcf	(btemp+5)^0,f,c
 11804  013FD6  3239               	rrcf	(btemp+4)^0,f,c
 11805  013FD8                     u4890:
 11806  013FD8  2EE8               	decfsz	wreg,f,c
 11807  013FDA  D7F9               	goto	u4895
 11808  013FDC  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 11809  013FE2  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 11810  013FE8  0EFF               	movlw	255
 11811  013FEA  163D               	andwf	(btemp+8)^0,f,c
 11812  013FEC  0E00               	movlw	0
 11813  013FEE  163E               	andwf	(btemp+9)^0,f,c
 11814  013FF0  503F               	movf	(btemp+10)^0,w,c
 11815  013FF2  263D               	addwf	(btemp+8)^0,f,c
 11816  013FF4  5040               	movf	(btemp+11)^0,w,c
 11817  013FF6  223E               	addwfc	(btemp+9)^0,f,c
 11818                           
 11819                           ;stkvar	_e @ sp[(-10)+8]
 11820  013FF8  0EFE               	movlw	-2
 11821  013FFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11822  014000  0EFF               	movlw	-1
 11823  014002  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11824                           
 11825                           ;stkvar	_e @ sp[(-10)+8]
 11826  014008  0EFF               	movlw	-1
 11827  01400A  BEE3               	btfsc	plusw1,7,c
 11828  01400C  D019               	goto	l6215
 11829  01400E  0EFF               	movlw	-1
 11830  014010  50E3               	movf	plusw1,w,c
 11831  014012  E108               	bnz	u4900
 11832  014014  0EFE               	movlw	-2
 11833  014016  006F FF8C  F035    	movff	plusw1,btemp
 11834  01401C  0E17               	movlw	23
 11835  01401E  5E35               	subwf	btemp^0,f,c
 11836  014020  A0D8               	btfss	status,0,c
 11837  014022  D00E               	goto	l6215
 11838  014024                     u4900:
 11839                           
 11840                           ;stkvar	_x @ sp[(-10)+-4]
 11841  014024  0EF2               	movlw	-14
 11842  014026  006F FF8C  F035    	movff	plusw1,btemp
 11843  01402C  0EF3               	movlw	-13
 11844  01402E  006F FF8C  F036    	movff	plusw1,btemp+1
 11845  014034  0EF4               	movlw	-12
 11846  014036  006F FF8C  F037    	movff	plusw1,btemp+2
 11847  01403C  0EF5               	movlw	-11
 11848  01403E  D11F               	goto	L11
 11849  014040                     l6215:
 11850                           
 11851                           ;stkvar	_e @ sp[(-10)+8]
 11852  014040  0EFF               	movlw	-1
 11853  014042  BEE3               	btfsc	plusw1,7,c
 11854  014044  D0B4               	goto	l6231
 11855                           
 11856                           ;stkvar	_e @ sp[(-10)+8]
 11857  014046  0EFE               	movlw	-2
 11858  014048  006F FF8C  F040    	movff	plusw1,btemp+11
 11859  01404E  0EFF               	movlw	255
 11860  014050  6E39               	movwf	(btemp+4)^0,c
 11861  014052  0EFF               	movlw	255
 11862  014054  6E3A               	movwf	(btemp+5)^0,c
 11863  014056  0E7F               	movlw	127
 11864  014058  6E3B               	movwf	(btemp+6)^0,c
 11865  01405A  0E00               	movlw	0
 11866  01405C  6E3C               	movwf	(btemp+7)^0,c
 11867  01405E                     u4925:
 11868  01405E  6640               	tstfsz	(btemp+11)^0,c
 11869  014060  D001               	goto	u4926
 11870  014062  D007               	goto	u4927
 11871  014064                     u4926:
 11872  014064  343C               	rlcf	(btemp+7)^0,w,c
 11873  014066  323C               	rrcf	(btemp+7)^0,f,c
 11874  014068  323B               	rrcf	(btemp+6)^0,f,c
 11875  01406A  323A               	rrcf	(btemp+5)^0,f,c
 11876  01406C  3239               	rrcf	(btemp+4)^0,f,c
 11877  01406E  2E40               	decfsz	(btemp+11)^0,f,c
 11878  014070  D7F6               	goto	u4925
 11879  014072                     u4927:
 11880                           
 11881                           ;stkvar	_m @ sp[(-10)+4]
 11882  014072  0EFA               	movlw	-6
 11883  014074  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 11884  01407A  0EFB               	movlw	-5
 11885  01407C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 11886  014082  0EFC               	movlw	-4
 11887  014084  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 11888  01408A  0EFD               	movlw	-3
 11889  01408C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 11890                           
 11891                           ;stkvar	_m @ sp[(-10)+4]
 11892                           ;stkvar	_u @ sp[(-10)+0]
 11893  014092  0EF6               	movlw	-10
 11894  014094  006F FF8C  F03D    	movff	plusw1,btemp+8
 11895  01409A  0EF7               	movlw	-9
 11896  01409C  006F FF8C  F03E    	movff	plusw1,btemp+9
 11897  0140A2  0EF8               	movlw	-8
 11898  0140A4  006F FF8C  F03F    	movff	plusw1,btemp+10
 11899  0140AA  0EF9               	movlw	-7
 11900  0140AC  006F FF8C  F040    	movff	plusw1,btemp+11
 11901  0140B2  0EFA               	movlw	-6
 11902  0140B4  50E3               	movf	plusw1,w,c
 11903  0140B6  163D               	andwf	(btemp+8)^0,f,c
 11904  0140B8  0EFB               	movlw	-5
 11905  0140BA  50E3               	movf	plusw1,w,c
 11906  0140BC  163E               	andwf	(btemp+9)^0,f,c
 11907  0140BE  0EFC               	movlw	-4
 11908  0140C0  50E3               	movf	plusw1,w,c
 11909  0140C2  163F               	andwf	(btemp+10)^0,f,c
 11910  0140C4  0EFD               	movlw	-3
 11911  0140C6  50E3               	movf	plusw1,w,c
 11912  0140C8  1640               	andwf	(btemp+11)^0,f,c
 11913  0140CA  503D               	movf	(btemp+8)^0,w,c
 11914  0140CC  103E               	iorwf	(btemp+9)^0,w,c
 11915  0140CE  103F               	iorwf	(btemp+10)^0,w,c
 11916  0140D0  1040               	iorwf	(btemp+11)^0,w,c
 11917  0140D2  B4D8               	btfsc	status,2,c
 11918  0140D4  D7A7               	goto	u4900
 11919                           
 11920                           ;stkvar	_u @ sp[(-10)+0]
 11921  0140D6  0EF6               	movlw	-10
 11922  0140D8  006F FF8C  F03D    	movff	plusw1,btemp+8
 11923  0140DE  0EF7               	movlw	-9
 11924  0140E0  006F FF8C  F03E    	movff	plusw1,btemp+9
 11925  0140E6  0EF8               	movlw	-8
 11926  0140E8  006F FF8C  F03F    	movff	plusw1,btemp+10
 11927  0140EE  0EF9               	movlw	-7
 11928  0140F0  006F FF8C  F040    	movff	plusw1,btemp+11
 11929  0140F6  0E20               	movlw	32
 11930  0140F8  D005               	goto	u4940
 11931  0140FA                     u4945:
 11932  0140FA  90D8               	bcf	status,0,c
 11933  0140FC  3240               	rrcf	(btemp+11)^0,f,c
 11934  0140FE  323F               	rrcf	(btemp+10)^0,f,c
 11935  014100  323E               	rrcf	(btemp+9)^0,f,c
 11936  014102  323D               	rrcf	(btemp+8)^0,f,c
 11937  014104                     u4940:
 11938  014104  2EE8               	decfsz	wreg,f,c
 11939  014106  D7F9               	goto	u4945
 11940  014108  503D               	movf	(btemp+8)^0,w,c
 11941  01410A  B4D8               	btfsc	status,2,c
 11942  01410C  D028               	goto	l6229
 11943                           
 11944                           ;stkvar	_m @ sp[(-10)+4]
 11945                           ;stkvar	_u @ sp[(-10)+0]
 11946  01410E  0EF6               	movlw	-10
 11947  014110  50E3               	movf	plusw1,w,c
 11948  014112  6E35               	movwf	btemp^0,c
 11949  014114  0EFA               	movlw	-6
 11950  014116  50E3               	movf	plusw1,w,c
 11951  014118  2635               	addwf	btemp^0,f,c
 11952  01411A  0EF6               	movlw	-10
 11953  01411C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11954  014122  0EF7               	movlw	-9
 11955  014124  50E3               	movf	plusw1,w,c
 11956  014126  6E35               	movwf	btemp^0,c
 11957  014128  0EFB               	movlw	-5
 11958  01412A  50E3               	movf	plusw1,w,c
 11959  01412C  2235               	addwfc	btemp^0,f,c
 11960  01412E  0EF7               	movlw	-9
 11961  014130  0060  F0D7  FFE3   	movff	btemp,plusw1
 11962  014136  0EF8               	movlw	-8
 11963  014138  50E3               	movf	plusw1,w,c
 11964  01413A  6E35               	movwf	btemp^0,c
 11965  01413C  0EFC               	movlw	-4
 11966  01413E  50E3               	movf	plusw1,w,c
 11967  014140  2235               	addwfc	btemp^0,f,c
 11968  014142  0EF8               	movlw	-8
 11969  014144  0060  F0D7  FFE3   	movff	btemp,plusw1
 11970  01414A  0EF9               	movlw	-7
 11971  01414C  50E3               	movf	plusw1,w,c
 11972  01414E  6E35               	movwf	btemp^0,c
 11973  014150  0EFD               	movlw	-3
 11974  014152  50E3               	movf	plusw1,w,c
 11975  014154  2235               	addwfc	btemp^0,f,c
 11976  014156  0EF9               	movlw	-7
 11977  014158  0060  F0D7  FFE3   	movff	btemp,plusw1
 11978  01415E                     l6229:
 11979                           
 11980                           ;stkvar	_m @ sp[(-10)+4]
 11981  01415E  0EFA               	movlw	-6
 11982  014160  006F FF8C  F03D    	movff	plusw1,btemp+8
 11983  014166  0EFB               	movlw	-5
 11984  014168  006F FF8C  F03E    	movff	plusw1,btemp+9
 11985  01416E  0EFC               	movlw	-4
 11986  014170  006F FF8C  F03F    	movff	plusw1,btemp+10
 11987  014176  0EFD               	movlw	-3
 11988  014178  006F FF8C  F040    	movff	plusw1,btemp+11
 11989  01417E  1C3D               	comf	(btemp+8)^0,w,c
 11990  014180  6E39               	movwf	(btemp+4)^0,c
 11991  014182  1C3E               	comf	(btemp+9)^0,w,c
 11992  014184  6E3A               	movwf	(btemp+5)^0,c
 11993  014186  1C3F               	comf	(btemp+10)^0,w,c
 11994  014188  6E3B               	movwf	(btemp+6)^0,c
 11995  01418A  1C40               	comf	(btemp+11)^0,w,c
 11996  01418C  6E3C               	movwf	(btemp+7)^0,c
 11997                           
 11998                           ;stkvar	_u @ sp[(-10)+0]
 11999  01418E  50E1               	movf	fsr1l,w,c
 12000  014190  0FF6               	addlw	-10
 12001  014192  6ED9               	movwf	fsr2l,c
 12002  014194  50E2               	movf	fsr1h,w,c
 12003  014196  6EDA               	movwf	fsr2h,c
 12004  014198  0EFF               	movlw	255
 12005  01419A  22DA               	addwfc	fsr2h,f,c
 12006  01419C  5039               	movf	(btemp+4)^0,w,c
 12007  01419E  16DE               	andwf	postinc2,f,c
 12008  0141A0  503A               	movf	(btemp+5)^0,w,c
 12009  0141A2  16DE               	andwf	postinc2,f,c
 12010  0141A4  503B               	movf	(btemp+6)^0,w,c
 12011  0141A6  16DE               	andwf	postinc2,f,c
 12012  0141A8  503C               	movf	(btemp+7)^0,w,c
 12013  0141AA  16DE               	andwf	postinc2,f,c
 12014  0141AC  D05B               	goto	l6239
 12015  0141AE                     l6231:
 12016                           
 12017                           ;stkvar	_u @ sp[(-10)+0]
 12018  0141AE  0EF6               	movlw	-10
 12019  0141B0  006F FF8C  F03D    	movff	plusw1,btemp+8
 12020  0141B6  0EF7               	movlw	-9
 12021  0141B8  006F FF8C  F03E    	movff	plusw1,btemp+9
 12022  0141BE  0EF8               	movlw	-8
 12023  0141C0  006F FF8C  F03F    	movff	plusw1,btemp+10
 12024  0141C6  0EF9               	movlw	-7
 12025  0141C8  006F FF8C  F040    	movff	plusw1,btemp+11
 12026  0141CE  0E20               	movlw	32
 12027  0141D0  D005               	goto	u4960
 12028  0141D2                     u4965:
 12029  0141D2  90D8               	bcf	status,0,c
 12030  0141D4  3240               	rrcf	(btemp+11)^0,f,c
 12031  0141D6  323F               	rrcf	(btemp+10)^0,f,c
 12032  0141D8  323E               	rrcf	(btemp+9)^0,f,c
 12033  0141DA  323D               	rrcf	(btemp+8)^0,f,c
 12034  0141DC                     u4960:
 12035  0141DC  2EE8               	decfsz	wreg,f,c
 12036  0141DE  D7F9               	goto	u4965
 12037  0141E0  663D               	tstfsz	(btemp+8)^0,c
 12038  0141E2  D009               	goto	l6235
 12039                           
 12040                           ;stkvar	_u @ sp[(-10)+0]
 12041  0141E4  0EF6               	movlw	-10
 12042  0141E6  6AE3               	clrf	plusw1,c
 12043  0141E8  0EF7               	movlw	-9
 12044  0141EA  6AE3               	clrf	plusw1,c
 12045  0141EC  0EF8               	movlw	-8
 12046  0141EE  6AE3               	clrf	plusw1,c
 12047  0141F0  0EF9               	movlw	-7
 12048  0141F2  6AE3               	clrf	plusw1,c
 12049  0141F4  D037               	goto	l6239
 12050  0141F6                     l6235:
 12051                           
 12052                           ;stkvar	_u @ sp[(-10)+0]
 12053  0141F6  0EF6               	movlw	-10
 12054  0141F8  006F FF8C  F03D    	movff	plusw1,btemp+8
 12055  0141FE  0EF7               	movlw	-9
 12056  014200  006F FF8C  F03E    	movff	plusw1,btemp+9
 12057  014206  0EF8               	movlw	-8
 12058  014208  006F FF8C  F03F    	movff	plusw1,btemp+10
 12059  01420E  0EF9               	movlw	-7
 12060  014210  006F FF8C  F040    	movff	plusw1,btemp+11
 12061  014216  90D8               	bcf	status,0,c
 12062  014218  343D               	rlcf	(btemp+8)^0,w,c
 12063  01421A  6E39               	movwf	(btemp+4)^0,c
 12064  01421C  343E               	rlcf	(btemp+9)^0,w,c
 12065  01421E  6E3A               	movwf	(btemp+5)^0,c
 12066  014220  343F               	rlcf	(btemp+10)^0,w,c
 12067  014222  6E3B               	movwf	(btemp+6)^0,c
 12068  014224  3440               	rlcf	(btemp+11)^0,w,c
 12069  014226  6E3C               	movwf	(btemp+7)^0,c
 12070  014228  5039               	movf	(btemp+4)^0,w,c
 12071  01422A  103A               	iorwf	(btemp+5)^0,w,c
 12072  01422C  103B               	iorwf	(btemp+6)^0,w,c
 12073  01422E  103C               	iorwf	(btemp+7)^0,w,c
 12074  014230  B4D8               	btfsc	status,2,c
 12075  014232  D018               	goto	l6239
 12076  014234  0E00               	movlw	0
 12077  014236  6E3D               	movwf	(btemp+8)^0,c
 12078  014238  0E00               	movlw	0
 12079  01423A  6E3E               	movwf	(btemp+9)^0,c
 12080  01423C  0E80               	movlw	128
 12081  01423E  6E3F               	movwf	(btemp+10)^0,c
 12082  014240  0EBF               	movlw	191
 12083  014242  6E40               	movwf	(btemp+11)^0,c
 12084                           
 12085                           ;stkvar	_u @ sp[(-10)+0]
 12086  014244  0EF6               	movlw	-10
 12087  014246  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12088  01424C  0EF7               	movlw	-9
 12089  01424E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12090  014254  0EF8               	movlw	-8
 12091  014256  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12092  01425C  0EF9               	movlw	-7
 12093  01425E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12094  014264                     l6239:
 12095                           
 12096                           ;stkvar	_u @ sp[(-10)+0]
 12097  014264  0EF6               	movlw	-10
 12098  014266  006F FF8C  F035    	movff	plusw1,btemp
 12099  01426C  0EF7               	movlw	-9
 12100  01426E  006F FF8C  F036    	movff	plusw1,btemp+1
 12101  014274  0EF8               	movlw	-8
 12102  014276  006F FF8C  F037    	movff	plusw1,btemp+2
 12103  01427C  0EF9               	movlw	-7
 12104  01427E                     L11:
 12105  01427E  006F FF8C  F038    	movff	plusw1,btemp+3
 12106                           
 12107                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12108  014284  0EF2               	movlw	242
 12109  014286  26E1               	addwf	fsr1l,f,c
 12110  014288  0EFF               	movlw	255
 12111  01428A  22E2               	addwfc	fsr1h,f,c
 12112  01428C  0012               	return		;funcret
 12113  01428E                     __end_of_floorf:
 12114                           	opt callstack 0
 12115                           
 12116 ;; *************** function ___fpclassifyf *****************
 12117 ;; Defined at:
 12118 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;  x               4  [STACK] float 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  u               4  [STACK] struct .
 12123 ;;  e               2  [STACK] int 
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  2  [STACK] int 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/4
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12137 ;;Total ram usage:        0 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:    6
 12140 ;; This function calls:
 12141 ;;		Nothing
 12142 ;; This function is called by:
 12143 ;;		_efgtoa
 12144 ;; This function uses a reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text44
 12148  015990                     __ptext44:
 12149                           	opt callstack 0
 12150  015990                     ___fpclassifyf:
 12151                           	opt callstack 0
 12152                           
 12153                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12154  015990  0E06               	movlw	6
 12155  015992  26E1               	addwf	fsr1l,f,c
 12156  015994  0E00               	movlw	0
 12157  015996  22E2               	addwfc	fsr1h,f,c
 12158                           
 12159                           ;incstack = 0
 12160  015998  0060  F2A8  F03D   	movff	___fpclassifyf@F463,btemp+8
 12161  01599E  0060  F2AC  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 12162  0159A4  0060  F2B0  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 12163  0159AA  0060  F2B4  F040   	movff	___fpclassifyf@F463+3,btemp+11
 12164                           
 12165                           ;stkvar	_u @ sp[(-6)+0]
 12166  0159B0  0EFA               	movlw	-6
 12167  0159B2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12168  0159B8  0EFB               	movlw	-5
 12169  0159BA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12170  0159C0  0EFC               	movlw	-4
 12171  0159C2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12172  0159C8  0EFD               	movlw	-3
 12173  0159CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12174                           
 12175                           ;stkvar	_x @ sp[(-6)+-4]
 12176  0159D0  0EF6               	movlw	-10
 12177  0159D2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12178  0159D8  0EF7               	movlw	-9
 12179  0159DA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12180  0159E0  0EF8               	movlw	-8
 12181  0159E2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12182  0159E8  0EF9               	movlw	-7
 12183  0159EA  006F FF8C  F040    	movff	plusw1,btemp+11
 12184                           
 12185                           ;stkvar	_u @ sp[(-6)+0]
 12186  0159F0  0EFA               	movlw	-6
 12187  0159F2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12188  0159F8  0EFB               	movlw	-5
 12189  0159FA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12190  015A00  0EFC               	movlw	-4
 12191  015A02  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12192  015A08  0EFD               	movlw	-3
 12193  015A0A  0060  F103  FFE3   	movff	btemp+11,plusw1
 12194                           
 12195                           ;stkvar	_u @ sp[(-6)+0]
 12196  015A10  0EFA               	movlw	-6
 12197  015A12  006F FF8C  F03D    	movff	plusw1,btemp+8
 12198  015A18  0EFB               	movlw	-5
 12199  015A1A  006F FF8C  F03E    	movff	plusw1,btemp+9
 12200  015A20  0EFC               	movlw	-4
 12201  015A22  006F FF8C  F03F    	movff	plusw1,btemp+10
 12202  015A28  0EFD               	movlw	-3
 12203  015A2A  006F FF8C  F040    	movff	plusw1,btemp+11
 12204  015A30  0E18               	movlw	24
 12205  015A32  D005               	goto	u4770
 12206  015A34                     u4775:
 12207  015A34  90D8               	bcf	status,0,c
 12208  015A36  3240               	rrcf	(btemp+11)^0,f,c
 12209  015A38  323F               	rrcf	(btemp+10)^0,f,c
 12210  015A3A  323E               	rrcf	(btemp+9)^0,f,c
 12211  015A3C  323D               	rrcf	(btemp+8)^0,f,c
 12212  015A3E                     u4770:
 12213  015A3E  2EE8               	decfsz	wreg,f,c
 12214  015A40  D7F9               	goto	u4775
 12215  015A42  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 12216  015A48  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 12217  015A4E  0EFF               	movlw	255
 12218  015A50  163B               	andwf	(btemp+6)^0,f,c
 12219  015A52  0E00               	movlw	0
 12220  015A54  163C               	andwf	(btemp+7)^0,f,c
 12221                           
 12222                           ;stkvar	_e @ sp[(-6)+4]
 12223  015A56  0EFE               	movlw	-2
 12224  015A58  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 12225  015A5E  0EFF               	movlw	-1
 12226  015A60  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 12227                           
 12228                           ;stkvar	_e @ sp[(-6)+4]
 12229  015A66  0EFE               	movlw	-2
 12230  015A68  006F FF8C  F035    	movff	plusw1,btemp
 12231  015A6E  0EFF               	movlw	-1
 12232  015A70  50E3               	movf	plusw1,w,c
 12233  015A72  1035               	iorwf	btemp^0,w,c
 12234  015A74  A4D8               	btfss	status,2,c
 12235  015A76  D023               	goto	l6177
 12236                           
 12237                           ;stkvar	_u @ sp[(-6)+0]
 12238  015A78  0EFA               	movlw	-6
 12239  015A7A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12240  015A80  0EFB               	movlw	-5
 12241  015A82  006F FF8C  F03E    	movff	plusw1,btemp+9
 12242  015A88  0EFC               	movlw	-4
 12243  015A8A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12244  015A90  0EFD               	movlw	-3
 12245  015A92  006F FF8C  F040    	movff	plusw1,btemp+11
 12246  015A98  90D8               	bcf	status,0,c
 12247  015A9A  343D               	rlcf	(btemp+8)^0,w,c
 12248  015A9C  6E39               	movwf	(btemp+4)^0,c
 12249  015A9E  343E               	rlcf	(btemp+9)^0,w,c
 12250  015AA0  6E3A               	movwf	(btemp+5)^0,c
 12251  015AA2  343F               	rlcf	(btemp+10)^0,w,c
 12252  015AA4  6E3B               	movwf	(btemp+6)^0,c
 12253  015AA6  3440               	rlcf	(btemp+11)^0,w,c
 12254  015AA8  6E3C               	movwf	(btemp+7)^0,c
 12255  015AAA  5039               	movf	(btemp+4)^0,w,c
 12256  015AAC  103A               	iorwf	(btemp+5)^0,w,c
 12257  015AAE  103B               	iorwf	(btemp+6)^0,w,c
 12258  015AB0  103C               	iorwf	(btemp+7)^0,w,c
 12259  015AB2  A4D8               	btfss	status,2,c
 12260  015AB4  D002               	goto	l6173
 12261  015AB6  0E02               	movlw	2
 12262  015AB8  D02E               	goto	L12
 12263  015ABA                     l6173:
 12264  015ABA  0E03               	movlw	3
 12265  015ABC  D02C               	goto	L12
 12266  015ABE                     l6177:
 12267                           
 12268                           ;stkvar	_e @ sp[(-6)+4]
 12269  015ABE  0EFE               	movlw	-2
 12270  015AC0  28E3               	incf	plusw1,w,c
 12271  015AC2  E128               	bnz	l6183
 12272  015AC4  0EFF               	movlw	-1
 12273  015AC6  50E3               	movf	plusw1,w,c
 12274  015AC8  A4D8               	btfss	status,2,c
 12275  015ACA  D024               	goto	l6183
 12276                           
 12277                           ;stkvar	_u @ sp[(-6)+0]
 12278  015ACC  0EFA               	movlw	-6
 12279  015ACE  006F FF8C  F03D    	movff	plusw1,btemp+8
 12280  015AD4  0EFB               	movlw	-5
 12281  015AD6  006F FF8C  F03E    	movff	plusw1,btemp+9
 12282  015ADC  0EFC               	movlw	-4
 12283  015ADE  006F FF8C  F03F    	movff	plusw1,btemp+10
 12284  015AE4  0EFD               	movlw	-3
 12285  015AE6  006F FF8C  F040    	movff	plusw1,btemp+11
 12286  015AEC  0E09               	movlw	9
 12287  015AEE                     u4815:
 12288  015AEE  90D8               	bcf	status,0,c
 12289  015AF0  363D               	rlcf	(btemp+8)^0,f,c
 12290  015AF2  363E               	rlcf	(btemp+9)^0,f,c
 12291  015AF4  363F               	rlcf	(btemp+10)^0,f,c
 12292  015AF6  3640               	rlcf	(btemp+11)^0,f,c
 12293  015AF8  2EE8               	decfsz	wreg,f,c
 12294  015AFA  D7F9               	goto	u4815
 12295  015AFC  503D               	movf	(btemp+8)^0,w,c
 12296  015AFE  103E               	iorwf	(btemp+9)^0,w,c
 12297  015B00  103F               	iorwf	(btemp+10)^0,w,c
 12298  015B02  1040               	iorwf	(btemp+11)^0,w,c
 12299  015B04  A4D8               	btfss	status,2,c
 12300  015B06  D002               	goto	u4820
 12301  015B08  0E01               	movlw	1
 12302  015B0A  D001               	goto	u4830
 12303  015B0C                     u4820:
 12304  015B0C  0E00               	movlw	0
 12305  015B0E                     u4830:
 12306  015B0E  6E35               	movwf	btemp^0,c
 12307  015B10  6A36               	clrf	(btemp+1)^0,c
 12308  015B12  D004               	goto	l2644
 12309  015B14                     l6183:
 12310  015B14  0E04               	movlw	4
 12311  015B16                     L12:
 12312  015B16  6E35               	movwf	btemp^0,c
 12313  015B18  0E00               	movlw	0
 12314  015B1A  6E36               	movwf	(btemp+1)^0,c
 12315  015B1C                     l2644:
 12316                           
 12317                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 12318  015B1C  0EF6               	movlw	246
 12319  015B1E  26E1               	addwf	fsr1l,f,c
 12320  015B20  0EFF               	movlw	255
 12321  015B22  22E2               	addwfc	fsr1h,f,c
 12322  015B24  0012               	return		;funcret
 12323  015B26                     __end_of___fpclassifyf:
 12324                           	opt callstack 0
 12325                           
 12326 ;; *************** function ___fltol *****************
 12327 ;; Defined at:
 12328 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 12329 ;; Parameters:    Size  Location     Type
 12330 ;;  f1              4  [STACK] int 
 12331 ;; Auto vars:     Size  Location     Type
 12332 ;;  exp1            1  [STACK] unsigned char 
 12333 ;;  sign1           1  [STACK] unsigned char 
 12334 ;; Return value:  Size  Location     Type
 12335 ;;                  4  [STACK] long 
 12336 ;; Registers used:
 12337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 12338 ;; Tracked objects:
 12339 ;;		On entry : 0/4
 12340 ;;		On exit  : 0/0
 12341 ;;		Unchanged: 0/0
 12342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12347 ;;Total ram usage:        0 bytes
 12348 ;; Hardware stack levels used:    1
 12349 ;; Hardware stack levels required when called:    6
 12350 ;; This function calls:
 12351 ;;		Nothing
 12352 ;; This function is called by:
 12353 ;;		_efgtoa
 12354 ;; This function uses a reentrant model
 12355 ;;
 12356                           
 12357                           	psect	text45
 12358  015B26                     __ptext45:
 12359                           	opt callstack 0
 12360  015B26                     ___fltol:
 12361                           	opt callstack 0
 12362                           
 12363                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12364  015B26  52E6               	movf	postinc1,f,c
 12365  015B28  52E6               	movf	postinc1,f,c
 12366                           
 12367                           ;stkvar	_f1 @ sp[(-2)+-4]
 12368                           
 12369                           ;incstack = 0
 12370  015B2A  0EFA               	movlw	-6
 12371  015B2C  006F FF8C  F03D    	movff	plusw1,btemp+8
 12372  015B32  0EFB               	movlw	-5
 12373  015B34  006F FF8C  F03E    	movff	plusw1,btemp+9
 12374  015B3A  0EFC               	movlw	-4
 12375  015B3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12376  015B42  0EFD               	movlw	-3
 12377  015B44  006F FF8C  F040    	movff	plusw1,btemp+11
 12378  015B4A  0E18               	movlw	24
 12379  015B4C  D005               	goto	u5980
 12380  015B4E                     u5985:
 12381  015B4E  90D8               	bcf	status,0,c
 12382  015B50  3240               	rrcf	(btemp+11)^0,f,c
 12383  015B52  323F               	rrcf	(btemp+10)^0,f,c
 12384  015B54  323E               	rrcf	(btemp+9)^0,f,c
 12385  015B56  323D               	rrcf	(btemp+8)^0,f,c
 12386  015B58                     u5980:
 12387  015B58  2EE8               	decfsz	wreg,f,c
 12388  015B5A  D7F9               	goto	u5985
 12389                           
 12390                           ;stkvar	_exp1 @ sp[(-2)+0]
 12391  015B5C  0EFE               	movlw	-2
 12392  015B5E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12393  015B64  0EFE               	movlw	-2
 12394  015B66  50E3               	movf	plusw1,w,c
 12395  015B68  A4D8               	btfss	status,2,c
 12396  015B6A  D006               	goto	l6803
 12397  015B6C                     u5990:
 12398  015B6C  0E00               	movlw	0
 12399  015B6E  6E35               	movwf	btemp^0,c
 12400  015B70  6A36               	clrf	(btemp+1)^0,c
 12401  015B72  6A37               	clrf	(btemp+2)^0,c
 12402  015B74  6A38               	clrf	(btemp+3)^0,c
 12403  015B76  D08B               	goto	l2260
 12404  015B78                     l6803:
 12405                           
 12406                           ;stkvar	_f1 @ sp[(-2)+-4]
 12407  015B78  0EFA               	movlw	-6
 12408  015B7A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12409  015B80  0EFB               	movlw	-5
 12410  015B82  006F FF8C  F03E    	movff	plusw1,btemp+9
 12411  015B88  0EFC               	movlw	-4
 12412  015B8A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12413  015B90  0EFD               	movlw	-3
 12414  015B92  006F FF8C  F040    	movff	plusw1,btemp+11
 12415  015B98  0E20               	movlw	32
 12416  015B9A  D005               	goto	u6000
 12417  015B9C                     u6005:
 12418  015B9C  90D8               	bcf	status,0,c
 12419  015B9E  3240               	rrcf	(btemp+11)^0,f,c
 12420  015BA0  323F               	rrcf	(btemp+10)^0,f,c
 12421  015BA2  323E               	rrcf	(btemp+9)^0,f,c
 12422  015BA4  323D               	rrcf	(btemp+8)^0,f,c
 12423  015BA6                     u6000:
 12424  015BA6  2EE8               	decfsz	wreg,f,c
 12425  015BA8  D7F9               	goto	u6005
 12426                           
 12427                           ;stkvar	_sign1 @ sp[(-2)+1]
 12428  015BAA  0EFF               	movlw	-1
 12429  015BAC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12430                           
 12431                           ;stkvar	_f1 @ sp[(-2)+-4]
 12432  015BB2  0EFC               	movlw	-4
 12433  015BB4  8EE3               	bsf	plusw1,7,c
 12434                           
 12435                           ;stkvar	_f1 @ sp[(-2)+-4]
 12436  015BB6  50E1               	movf	fsr1l,w,c
 12437  015BB8  0FFA               	addlw	-6
 12438  015BBA  6ED9               	movwf	fsr2l,c
 12439  015BBC  50E2               	movf	fsr1h,w,c
 12440  015BBE  6EDA               	movwf	fsr2h,c
 12441  015BC0  0EFF               	movlw	255
 12442  015BC2  22DA               	addwfc	fsr2h,f,c
 12443  015BC4  0EFF               	movlw	255
 12444  015BC6  16DE               	andwf	postinc2,f,c
 12445  015BC8  0EFF               	movlw	255
 12446  015BCA  16DE               	andwf	postinc2,f,c
 12447  015BCC  0EFF               	movlw	255
 12448  015BCE  16DE               	andwf	postinc2,f,c
 12449  015BD0  0E00               	movlw	0
 12450  015BD2  16DE               	andwf	postinc2,f,c
 12451                           
 12452                           ;stkvar	_exp1 @ sp[(-2)+0]
 12453  015BD4  0EFE               	movlw	-2
 12454  015BD6  006F FF8C  F035    	movff	plusw1,btemp
 12455  015BDC  0E96               	movlw	150
 12456  015BDE  5E35               	subwf	btemp^0,f,c
 12457  015BE0  0EFE               	movlw	-2
 12458  015BE2  0060  F0D7  FFE3   	movff	btemp,plusw1
 12459                           
 12460                           ;stkvar	_exp1 @ sp[(-2)+0]
 12461  015BE8  0EFE               	movlw	-2
 12462  015BEA  AEE3               	btfss	plusw1,7,c
 12463  015BEC  D014               	goto	l6821
 12464                           
 12465                           ;stkvar	_exp1 @ sp[(-2)+0]
 12466  015BEE  0EFE               	movlw	-2
 12467  015BF0  50E3               	movf	plusw1,w,c
 12468  015BF2  0A80               	xorlw	128
 12469  015BF4  0F97               	addlw	151
 12470  015BF6  A0D8               	btfss	status,0,c
 12471  015BF8  D7B9               	goto	u5990
 12472  015BFA                     l6819:
 12473                           
 12474                           ;stkvar	_f1 @ sp[(-2)+-4]
 12475  015BFA  90D8               	bcf	status,0,c
 12476  015BFC  0EFD               	movlw	-3
 12477  015BFE  32E3               	rrcf	plusw1,f,c
 12478  015C00  0EFC               	movlw	-4
 12479  015C02  32E3               	rrcf	plusw1,f,c
 12480  015C04  0EFB               	movlw	-5
 12481  015C06  32E3               	rrcf	plusw1,f,c
 12482  015C08  0EFA               	movlw	-6
 12483  015C0A  32E3               	rrcf	plusw1,f,c
 12484                           
 12485                           ;stkvar	_exp1 @ sp[(-2)+0]
 12486  015C0C  0EFE               	movlw	-2
 12487  015C0E  2AE3               	incf	plusw1,f,c
 12488  015C10  B4D8               	btfsc	status,2,c
 12489  015C12  D018               	goto	u6050
 12490  015C14  D7F2               	goto	l6819
 12491  015C16                     l6821:
 12492                           
 12493                           ;stkvar	_exp1 @ sp[(-2)+0]
 12494  015C16  0EFE               	movlw	-2
 12495  015C18  006F FF8C  F035    	movff	plusw1,btemp
 12496  015C1E  0E1F               	movlw	31
 12497  015C20  6435               	cpfsgt	btemp^0,c
 12498  015C22  D00C               	goto	l6829
 12499  015C24  D7A3               	goto	u5990
 12500  015C26                     l6827:
 12501                           
 12502                           ;stkvar	_f1 @ sp[(-2)+-4]
 12503  015C26  90D8               	bcf	status,0,c
 12504  015C28  0EFA               	movlw	-6
 12505  015C2A  36E3               	rlcf	plusw1,f,c
 12506  015C2C  0EFB               	movlw	-5
 12507  015C2E  36E3               	rlcf	plusw1,f,c
 12508  015C30  0EFC               	movlw	-4
 12509  015C32  36E3               	rlcf	plusw1,f,c
 12510  015C34  0EFD               	movlw	-3
 12511  015C36  36E3               	rlcf	plusw1,f,c
 12512                           
 12513                           ;stkvar	_exp1 @ sp[(-2)+0]
 12514  015C38  0EFE               	movlw	-2
 12515  015C3A  06E3               	decf	plusw1,f,c
 12516  015C3C                     l6829:
 12517                           
 12518                           ;stkvar	_exp1 @ sp[(-2)+0]
 12519  015C3C  0EFE               	movlw	-2
 12520  015C3E  50E3               	movf	plusw1,w,c
 12521  015C40  A4D8               	btfss	status,2,c
 12522  015C42  D7F1               	goto	l6827
 12523  015C44                     u6050:
 12524                           
 12525                           ;stkvar	_sign1 @ sp[(-2)+1]
 12526  015C44  0EFF               	movlw	-1
 12527  015C46  50E3               	movf	plusw1,w,c
 12528  015C48  B4D8               	btfsc	status,2,c
 12529  015C4A  D011               	goto	u6070
 12530                           
 12531                           ;stkvar	_f1 @ sp[(-2)+-4]
 12532                           ;stkvar	_f1 @ sp[(-2)+-4]
 12533  015C4C  0EFA               	movlw	-6
 12534  015C4E  6CE3               	negf	plusw1,c
 12535  015C50  0EFB               	movlw	-5
 12536  015C52  1EE3               	comf	plusw1,f,c
 12537  015C54  0EFC               	movlw	-4
 12538  015C56  1EE3               	comf	plusw1,f,c
 12539  015C58  0EFD               	movlw	-3
 12540  015C5A  1EE3               	comf	plusw1,f,c
 12541  015C5C  E308               	bnc	u6070
 12542  015C5E  0EFB               	movlw	-5
 12543  015C60  2AE3               	incf	plusw1,f,c
 12544  015C62  E305               	bnc	u6070
 12545  015C64  0EFC               	movlw	-4
 12546  015C66  2AE3               	incf	plusw1,f,c
 12547  015C68  E302               	bnc	u6070
 12548  015C6A  0EFD               	movlw	-3
 12549  015C6C  2AE3               	incf	plusw1,f,c
 12550  015C6E                     u6070:
 12551                           
 12552                           ;stkvar	_f1 @ sp[(-2)+-4]
 12553  015C6E  0EFA               	movlw	-6
 12554  015C70  006F FF8C  F035    	movff	plusw1,btemp
 12555  015C76  0EFB               	movlw	-5
 12556  015C78  006F FF8C  F036    	movff	plusw1,btemp+1
 12557  015C7E  0EFC               	movlw	-4
 12558  015C80  006F FF8C  F037    	movff	plusw1,btemp+2
 12559  015C86  0EFD               	movlw	-3
 12560  015C88  006F FF8C  F038    	movff	plusw1,btemp+3
 12561  015C8E                     l2260:
 12562                           
 12563                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 12564  015C8E  0EFA               	movlw	250
 12565  015C90  26E1               	addwf	fsr1l,f,c
 12566  015C92  0EFF               	movlw	255
 12567  015C94  22E2               	addwfc	fsr1h,f,c
 12568  015C96  0012               	return		;funcret
 12569  015C98                     __end_of___fltol:
 12570                           	opt callstack 0
 12571                           
 12572 ;; *************** function ___flsub *****************
 12573 ;; Defined at:
 12574 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  b               4  [STACK] long 
 12577 ;;  a               4  [STACK] long 
 12578 ;; Auto vars:     Size  Location     Type
 12579 ;;		None
 12580 ;; Return value:  Size  Location     Type
 12581 ;;                  4  [STACK] long 
 12582 ;; Registers used:
 12583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12584 ;; Tracked objects:
 12585 ;;		On entry : 0/0
 12586 ;;		On exit  : 0/0
 12587 ;;		Unchanged: 0/0
 12588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;Total ram usage:        0 bytes
 12594 ;; Hardware stack levels used:    1
 12595 ;; Hardware stack levels required when called:    7
 12596 ;; This function calls:
 12597 ;;		___fladd
 12598 ;; This function is called by:
 12599 ;;		_lp_filter
 12600 ;;		_efgtoa
 12601 ;; This function uses a reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text46
 12605  017584                     __ptext46:
 12606                           	opt callstack 0
 12607  017584                     ___flsub:
 12608                           	opt callstack 16
 12609                           
 12610                           ;stkvar	_a @ sp[(0)+-8]
 12611                           
 12612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12613                           ;incstack = 0
 12614  017584  0EFB               	movlw	-5
 12615  017586  7EE3               	btg	plusw1,7,c
 12616                           
 12617                           ;stkvar	_a @ sp[(0)+-8]
 12618  017588  0EF8               	movlw	-8
 12619  01758A  006F FF8F FFE6     	movff	plusw1,postinc1
 12620  017590  006F FF8F FFE6     	movff	plusw1,postinc1
 12621  017596  006F FF8F FFE6     	movff	plusw1,postinc1
 12622  01759C  006F FF8F FFE6     	movff	plusw1,postinc1
 12623                           
 12624                           ;stkvar	_b @ sp[(-4)+-4]
 12625  0175A2  0EF8               	movlw	-8
 12626  0175A4  006F FF8F FFE6     	movff	plusw1,postinc1
 12627  0175AA  006F FF8F FFE6     	movff	plusw1,postinc1
 12628  0175B0  006F FF8F FFE6     	movff	plusw1,postinc1
 12629  0175B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12630  0175BC  ECD6  F092         	call	___fladd	;wreg free
 12631                           
 12632                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 12633  0175C0  0EF8               	movlw	248
 12634  0175C2  26E1               	addwf	fsr1l,f,c
 12635  0175C4  0EFF               	movlw	255
 12636  0175C6  22E2               	addwfc	fsr1h,f,c
 12637  0175C8  0012               	return		;funcret
 12638  0175CA                     __end_of___flsub:
 12639                           	opt callstack 0
 12640                           
 12641 ;; *************** function ___fladd *****************
 12642 ;; Defined at:
 12643 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  b               4  [STACK] long 
 12646 ;;  a               4  [STACK] long 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  grs             1  [STACK] unsigned char 
 12649 ;;  bexp            1  [STACK] unsigned char 
 12650 ;;  aexp            1  [STACK] unsigned char 
 12651 ;;  signs           1  [STACK] unsigned char 
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  4  [STACK] unsigned char 
 12654 ;; Registers used:
 12655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12656 ;; Tracked objects:
 12657 ;;		On entry : 0/0
 12658 ;;		On exit  : 0/0
 12659 ;;		Unchanged: 0/0
 12660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12665 ;;Total ram usage:        0 bytes
 12666 ;; Hardware stack levels used:    1
 12667 ;; Hardware stack levels required when called:    6
 12668 ;; This function calls:
 12669 ;;		Nothing
 12670 ;; This function is called by:
 12671 ;;		_conv_raw_result
 12672 ;;		_lp_filter
 12673 ;;		_efgtoa
 12674 ;;		___flsub
 12675 ;; This function uses a reentrant model
 12676 ;;
 12677                           
 12678                           	psect	text47
 12679  0125AC                     __ptext47:
 12680                           	opt callstack 0
 12681  0125AC                     ___fladd:
 12682                           	opt callstack 0
 12683                           
 12684                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12685  0125AC  52E6               	movf	postinc1,f,c
 12686  0125AE  52E6               	movf	postinc1,f,c
 12687  0125B0  52E6               	movf	postinc1,f,c
 12688  0125B2  52E6               	movf	postinc1,f,c
 12689                           
 12690                           ;stkvar	_b @ sp[(-4)+-4]
 12691                           
 12692                           ;incstack = 0
 12693  0125B4  0EFB               	movlw	251
 12694  0125B6  24E1               	addwf	fsr1l,w,c
 12695  0125B8  6ED9               	movwf	fsr2l,c
 12696  0125BA  0EFF               	movlw	255
 12697  0125BC  20E2               	addwfc	fsr1h,w,c
 12698  0125BE  6EDA               	movwf	fsr2h,c
 12699  0125C0  50DF               	movf	indf2,w,c
 12700  0125C2  6E40               	movwf	(btemp+11)^0,c
 12701  0125C4  0E80               	movlw	128
 12702  0125C6  1640               	andwf	(btemp+11)^0,f,c
 12703                           
 12704                           ;stkvar	_signs @ sp[(-4)+3]
 12705  0125C8  0EFF               	movlw	-1
 12706  0125CA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12707                           
 12708                           ;stkvar	_b @ sp[(-4)+-4]
 12709  0125D0  0EFB               	movlw	251
 12710  0125D2  24E1               	addwf	fsr1l,w,c
 12711  0125D4  6ED9               	movwf	fsr2l,c
 12712  0125D6  0EFF               	movlw	255
 12713  0125D8  20E2               	addwfc	fsr1h,w,c
 12714  0125DA  6EDA               	movwf	fsr2h,c
 12715  0125DC  50DF               	movf	indf2,w,c
 12716  0125DE  6E40               	movwf	(btemp+11)^0,c
 12717  0125E0  90D8               	bcf	status,0,c
 12718  0125E2  3440               	rlcf	(btemp+11)^0,w,c
 12719  0125E4  6E3F               	movwf	(btemp+10)^0,c
 12720                           
 12721                           ;stkvar	_bexp @ sp[(-4)+1]
 12722  0125E6  0EFD               	movlw	-3
 12723  0125E8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12724                           
 12725                           ;stkvar	_b @ sp[(-4)+-4]
 12726  0125EE  0EFA               	movlw	250
 12727  0125F0  24E1               	addwf	fsr1l,w,c
 12728  0125F2  6ED9               	movwf	fsr2l,c
 12729  0125F4  0EFF               	movlw	255
 12730  0125F6  20E2               	addwfc	fsr1h,w,c
 12731  0125F8  6EDA               	movwf	fsr2h,c
 12732  0125FA  AEDF               	btfss	indf2,7,c
 12733  0125FC  D002               	goto	l5917
 12734                           
 12735                           ;stkvar	_bexp @ sp[(-4)+1]
 12736  0125FE  0EFD               	movlw	-3
 12737  012600  80E3               	bsf	plusw1,0,c
 12738  012602                     l5917:
 12739                           
 12740                           ;stkvar	_bexp @ sp[(-4)+1]
 12741  012602  0EFD               	movlw	-3
 12742  012604  50E3               	movf	plusw1,w,c
 12743  012606  B4D8               	btfsc	status,2,c
 12744  012608  D027               	goto	l5927
 12745                           
 12746                           ;stkvar	_bexp @ sp[(-4)+1]
 12747  01260A  0EFD               	movlw	-3
 12748  01260C  28E3               	incf	plusw1,w,c
 12749  01260E  A4D8               	btfss	status,2,c
 12750  012610  D018               	goto	l5923
 12751  012612  0E00               	movlw	0
 12752  012614  6E3D               	movwf	(btemp+8)^0,c
 12753  012616  0E00               	movlw	0
 12754  012618  6E3E               	movwf	(btemp+9)^0,c
 12755  01261A  0E00               	movlw	0
 12756  01261C  6E3F               	movwf	(btemp+10)^0,c
 12757  01261E  0E00               	movlw	0
 12758  012620  6E40               	movwf	(btemp+11)^0,c
 12759                           
 12760                           ;stkvar	_b @ sp[(-4)+-4]
 12761  012622  0EF8               	movlw	-8
 12762  012624  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12763  01262A  0EF9               	movlw	-7
 12764  01262C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12765  012632  0EFA               	movlw	-6
 12766  012634  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12767  01263A  0EFB               	movlw	-5
 12768  01263C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12769  012642                     l5923:
 12770                           
 12771                           ;stkvar	_b @ sp[(-4)+-4]
 12772  012642  0EFA               	movlw	-6
 12773  012644  8EE3               	bsf	plusw1,7,c
 12774                           
 12775                           ;stkvar	_b @ sp[(-4)+-4]
 12776  012646  0EFB               	movlw	251
 12777  012648  24E1               	addwf	fsr1l,w,c
 12778  01264A  6ED9               	movwf	fsr2l,c
 12779  01264C  0EFF               	movlw	255
 12780  01264E  20E2               	addwfc	fsr1h,w,c
 12781  012650  6EDA               	movwf	fsr2h,c
 12782  012652  0E00               	movlw	0
 12783  012654  6EDF               	movwf	indf2,c
 12784  012656  D018               	goto	l5929
 12785  012658                     l5927:
 12786  012658  0E00               	movlw	0
 12787  01265A  6E3D               	movwf	(btemp+8)^0,c
 12788  01265C  0E00               	movlw	0
 12789  01265E  6E3E               	movwf	(btemp+9)^0,c
 12790  012660  0E00               	movlw	0
 12791  012662  6E3F               	movwf	(btemp+10)^0,c
 12792  012664  0E00               	movlw	0
 12793  012666  6E40               	movwf	(btemp+11)^0,c
 12794                           
 12795                           ;stkvar	_b @ sp[(-4)+-4]
 12796  012668  0EF8               	movlw	-8
 12797  01266A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12798  012670  0EF9               	movlw	-7
 12799  012672  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12800  012678  0EFA               	movlw	-6
 12801  01267A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12802  012680  0EFB               	movlw	-5
 12803  012682  0060  F103  FFE3   	movff	btemp+11,plusw1
 12804  012688                     l5929:
 12805                           
 12806                           ;stkvar	_a @ sp[(-4)+-8]
 12807  012688  0EF7               	movlw	247
 12808  01268A  24E1               	addwf	fsr1l,w,c
 12809  01268C  6ED9               	movwf	fsr2l,c
 12810  01268E  0EFF               	movlw	255
 12811  012690  20E2               	addwfc	fsr1h,w,c
 12812  012692  6EDA               	movwf	fsr2h,c
 12813  012694  50DF               	movf	indf2,w,c
 12814  012696  6E40               	movwf	(btemp+11)^0,c
 12815  012698  0E80               	movlw	128
 12816  01269A  1640               	andwf	(btemp+11)^0,f,c
 12817                           
 12818                           ;stkvar	_aexp @ sp[(-4)+2]
 12819  01269C  0EFE               	movlw	-2
 12820  01269E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12821                           
 12822                           ;stkvar	_signs @ sp[(-4)+3]
 12823                           ;stkvar	_aexp @ sp[(-4)+2]
 12824  0126A4  50E1               	movf	fsr1l,w,c
 12825  0126A6  0FFE               	addlw	-2
 12826  0126A8  6ED9               	movwf	fsr2l,c
 12827  0126AA  50E2               	movf	fsr1h,w,c
 12828  0126AC  6EDA               	movwf	fsr2h,c
 12829  0126AE  0EFF               	movlw	255
 12830  0126B0  22DA               	addwfc	fsr2h,f,c
 12831  0126B2  0EFF               	movlw	-1
 12832  0126B4  50E3               	movf	plusw1,w,c
 12833  0126B6  18DE               	xorwf	postinc2,w,c
 12834  0126B8  B4D8               	btfsc	status,2,c
 12835  0126BA  D002               	goto	l5935
 12836                           
 12837                           ;stkvar	_signs @ sp[(-4)+3]
 12838  0126BC  0EFF               	movlw	-1
 12839  0126BE  8CE3               	bsf	plusw1,6,c
 12840  0126C0                     l5935:
 12841                           
 12842                           ;stkvar	_a @ sp[(-4)+-8]
 12843  0126C0  0EF7               	movlw	247
 12844  0126C2  24E1               	addwf	fsr1l,w,c
 12845  0126C4  6ED9               	movwf	fsr2l,c
 12846  0126C6  0EFF               	movlw	255
 12847  0126C8  20E2               	addwfc	fsr1h,w,c
 12848  0126CA  6EDA               	movwf	fsr2h,c
 12849  0126CC  50DF               	movf	indf2,w,c
 12850  0126CE  6E40               	movwf	(btemp+11)^0,c
 12851  0126D0  90D8               	bcf	status,0,c
 12852  0126D2  3440               	rlcf	(btemp+11)^0,w,c
 12853  0126D4  6E3F               	movwf	(btemp+10)^0,c
 12854                           
 12855                           ;stkvar	_aexp @ sp[(-4)+2]
 12856  0126D6  0EFE               	movlw	-2
 12857  0126D8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12858                           
 12859                           ;stkvar	_a @ sp[(-4)+-8]
 12860  0126DE  0EF6               	movlw	246
 12861  0126E0  24E1               	addwf	fsr1l,w,c
 12862  0126E2  6ED9               	movwf	fsr2l,c
 12863  0126E4  0EFF               	movlw	255
 12864  0126E6  20E2               	addwfc	fsr1h,w,c
 12865  0126E8  6EDA               	movwf	fsr2h,c
 12866  0126EA  AEDF               	btfss	indf2,7,c
 12867  0126EC  D002               	goto	l5941
 12868                           
 12869                           ;stkvar	_aexp @ sp[(-4)+2]
 12870  0126EE  0EFE               	movlw	-2
 12871  0126F0  80E3               	bsf	plusw1,0,c
 12872  0126F2                     l5941:
 12873                           
 12874                           ;stkvar	_aexp @ sp[(-4)+2]
 12875  0126F2  0EFE               	movlw	-2
 12876  0126F4  50E3               	movf	plusw1,w,c
 12877  0126F6  B4D8               	btfsc	status,2,c
 12878  0126F8  D027               	goto	l5951
 12879                           
 12880                           ;stkvar	_aexp @ sp[(-4)+2]
 12881  0126FA  0EFE               	movlw	-2
 12882  0126FC  28E3               	incf	plusw1,w,c
 12883  0126FE  A4D8               	btfss	status,2,c
 12884  012700  D018               	goto	l5947
 12885  012702  0E00               	movlw	0
 12886  012704  6E3D               	movwf	(btemp+8)^0,c
 12887  012706  0E00               	movlw	0
 12888  012708  6E3E               	movwf	(btemp+9)^0,c
 12889  01270A  0E00               	movlw	0
 12890  01270C  6E3F               	movwf	(btemp+10)^0,c
 12891  01270E  0E00               	movlw	0
 12892  012710  6E40               	movwf	(btemp+11)^0,c
 12893                           
 12894                           ;stkvar	_a @ sp[(-4)+-8]
 12895  012712  0EF4               	movlw	-12
 12896  012714  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12897  01271A  0EF5               	movlw	-11
 12898  01271C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12899  012722  0EF6               	movlw	-10
 12900  012724  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12901  01272A  0EF7               	movlw	-9
 12902  01272C  0060  F103  FFE3   	movff	btemp+11,plusw1
 12903  012732                     l5947:
 12904                           
 12905                           ;stkvar	_a @ sp[(-4)+-8]
 12906  012732  0EF6               	movlw	-10
 12907  012734  8EE3               	bsf	plusw1,7,c
 12908                           
 12909                           ;stkvar	_a @ sp[(-4)+-8]
 12910  012736  0EF7               	movlw	247
 12911  012738  24E1               	addwf	fsr1l,w,c
 12912  01273A  6ED9               	movwf	fsr2l,c
 12913  01273C  0EFF               	movlw	255
 12914  01273E  20E2               	addwfc	fsr1h,w,c
 12915  012740  6EDA               	movwf	fsr2h,c
 12916  012742  0E00               	movlw	0
 12917  012744  6EDF               	movwf	indf2,c
 12918  012746  D018               	goto	l5953
 12919  012748                     l5951:
 12920  012748  0E00               	movlw	0
 12921  01274A  6E3D               	movwf	(btemp+8)^0,c
 12922  01274C  0E00               	movlw	0
 12923  01274E  6E3E               	movwf	(btemp+9)^0,c
 12924  012750  0E00               	movlw	0
 12925  012752  6E3F               	movwf	(btemp+10)^0,c
 12926  012754  0E00               	movlw	0
 12927  012756  6E40               	movwf	(btemp+11)^0,c
 12928                           
 12929                           ;stkvar	_a @ sp[(-4)+-8]
 12930  012758  0EF4               	movlw	-12
 12931  01275A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12932  012760  0EF5               	movlw	-11
 12933  012762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12934  012768  0EF6               	movlw	-10
 12935  01276A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12936  012770  0EF7               	movlw	-9
 12937  012772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12938  012778                     l5953:
 12939                           
 12940                           ;stkvar	_bexp @ sp[(-4)+1]
 12941                           ;stkvar	_aexp @ sp[(-4)+2]
 12942  012778  50E1               	movf	fsr1l,w,c
 12943  01277A  0FFE               	addlw	-2
 12944  01277C  6ED9               	movwf	fsr2l,c
 12945  01277E  50E2               	movf	fsr1h,w,c
 12946  012780  6EDA               	movwf	fsr2h,c
 12947  012782  0EFF               	movlw	255
 12948  012784  22DA               	addwfc	fsr2h,f,c
 12949  012786  0EFD               	movlw	-3
 12950  012788  50E3               	movf	plusw1,w,c
 12951  01278A  5CDE               	subwf	postinc2,w,c
 12952  01278C  B0D8               	btfsc	status,0,c
 12953  01278E  D0A4               	goto	l5989
 12954                           
 12955                           ;stkvar	_signs @ sp[(-4)+3]
 12956  012790  0EFF               	movlw	-1
 12957  012792  ACE3               	btfss	plusw1,6,c
 12958  012794  D002               	goto	l5959
 12959                           
 12960                           ;stkvar	_signs @ sp[(-4)+3]
 12961  012796  0EFF               	movlw	-1
 12962  012798  7EE3               	btg	plusw1,7,c
 12963  01279A                     l5959:
 12964                           
 12965                           ;stkvar	_bexp @ sp[(-4)+1]
 12966                           ;stkvar	_grs @ sp[(-4)+0]
 12967  01279A  0EFD               	movlw	-3
 12968  01279C  006F FF8C  F035    	movff	plusw1,btemp
 12969  0127A2  0EFC               	movlw	-4
 12970  0127A4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12971                           
 12972                           ;stkvar	_aexp @ sp[(-4)+2]
 12973                           ;stkvar	_bexp @ sp[(-4)+1]
 12974  0127AA  0EFE               	movlw	-2
 12975  0127AC  006F FF8C  F035    	movff	plusw1,btemp
 12976  0127B2  0EFD               	movlw	-3
 12977  0127B4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12978                           
 12979                           ;stkvar	_grs @ sp[(-4)+0]
 12980                           ;stkvar	_aexp @ sp[(-4)+2]
 12981  0127BA  0EFC               	movlw	-4
 12982  0127BC  006F FF8C  F035    	movff	plusw1,btemp
 12983  0127C2  0EFE               	movlw	-2
 12984  0127C4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12985                           
 12986                           ;stkvar	_b @ sp[(-4)+-4]
 12987                           ;stkvar	_grs @ sp[(-4)+0]
 12988  0127CA  0EF8               	movlw	-8
 12989  0127CC  006F FF8C  F035    	movff	plusw1,btemp
 12990  0127D2  0EFC               	movlw	-4
 12991  0127D4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12992                           
 12993                           ;stkvar	_a @ sp[(-4)+-8]
 12994                           ;stkvar	_b @ sp[(-4)+-4]
 12995  0127DA  0EF4               	movlw	-12
 12996  0127DC  006F FF8C  F035    	movff	plusw1,btemp
 12997  0127E2  0EF8               	movlw	-8
 12998  0127E4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12999                           
 13000                           ;stkvar	_grs @ sp[(-4)+0]
 13001                           ;stkvar	_a @ sp[(-4)+-8]
 13002  0127EA  0EFC               	movlw	-4
 13003  0127EC  006F FF8C  F035    	movff	plusw1,btemp
 13004  0127F2  0EF4               	movlw	-12
 13005  0127F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 13006                           
 13007                           ;stkvar	_b @ sp[(-4)+-4]
 13008  0127FA  0EF9               	movlw	249
 13009  0127FC  24E1               	addwf	fsr1l,w,c
 13010  0127FE  6ED9               	movwf	fsr2l,c
 13011  012800  0EFF               	movlw	255
 13012  012802  20E2               	addwfc	fsr1h,w,c
 13013  012804  6EDA               	movwf	fsr2h,c
 13014  012806  50DF               	movf	indf2,w,c
 13015  012808  6E40               	movwf	(btemp+11)^0,c
 13016                           
 13017                           ;stkvar	_grs @ sp[(-4)+0]
 13018  01280A  0EFC               	movlw	-4
 13019  01280C  0060  F103  FFE3   	movff	btemp+11,plusw1
 13020                           
 13021                           ;stkvar	_a @ sp[(-4)+-8]
 13022  012812  0EF5               	movlw	245
 13023  012814  24E1               	addwf	fsr1l,w,c
 13024  012816  6ED9               	movwf	fsr2l,c
 13025  012818  0EFF               	movlw	255
 13026  01281A  20E2               	addwfc	fsr1h,w,c
 13027  01281C  6EDA               	movwf	fsr2h,c
 13028                           
 13029                           ;stkvar	_b @ sp[(-4)+-4]
 13030  01281E  0EF9               	movlw	249
 13031  012820  24E1               	addwf	fsr1l,w,c
 13032  012822  6EE9               	movwf	fsr0l,c
 13033  012824  0EFF               	movlw	255
 13034  012826  20E2               	addwfc	fsr1h,w,c
 13035  012828  6EEA               	movwf	fsr0h,c
 13036  01282A  006F FF7F FFEF     	movff	indf2,indf0
 13037                           
 13038                           ;stkvar	_grs @ sp[(-4)+0]
 13039                           ;stkvar	_a @ sp[(-4)+-8]
 13040  012830  0EF5               	movlw	245
 13041  012832  24E1               	addwf	fsr1l,w,c
 13042  012834  6ED9               	movwf	fsr2l,c
 13043  012836  0EFF               	movlw	255
 13044  012838  20E2               	addwfc	fsr1h,w,c
 13045  01283A  6EDA               	movwf	fsr2h,c
 13046  01283C  0EFC               	movlw	-4
 13047  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 13048                           
 13049                           ;stkvar	_b @ sp[(-4)+-4]
 13050  012844  0EFA               	movlw	250
 13051  012846  24E1               	addwf	fsr1l,w,c
 13052  012848  6ED9               	movwf	fsr2l,c
 13053  01284A  0EFF               	movlw	255
 13054  01284C  20E2               	addwfc	fsr1h,w,c
 13055  01284E  6EDA               	movwf	fsr2h,c
 13056  012850  50DF               	movf	indf2,w,c
 13057  012852  6E40               	movwf	(btemp+11)^0,c
 13058                           
 13059                           ;stkvar	_grs @ sp[(-4)+0]
 13060  012854  0EFC               	movlw	-4
 13061  012856  0060  F103  FFE3   	movff	btemp+11,plusw1
 13062                           
 13063                           ;stkvar	_a @ sp[(-4)+-8]
 13064  01285C  0EF6               	movlw	246
 13065  01285E  24E1               	addwf	fsr1l,w,c
 13066  012860  6ED9               	movwf	fsr2l,c
 13067  012862  0EFF               	movlw	255
 13068  012864  20E2               	addwfc	fsr1h,w,c
 13069  012866  6EDA               	movwf	fsr2h,c
 13070                           
 13071                           ;stkvar	_b @ sp[(-4)+-4]
 13072  012868  0EFA               	movlw	250
 13073  01286A  24E1               	addwf	fsr1l,w,c
 13074  01286C  6EE9               	movwf	fsr0l,c
 13075  01286E  0EFF               	movlw	255
 13076  012870  20E2               	addwfc	fsr1h,w,c
 13077  012872  6EEA               	movwf	fsr0h,c
 13078  012874  006F FF7F FFEF     	movff	indf2,indf0
 13079                           
 13080                           ;stkvar	_grs @ sp[(-4)+0]
 13081                           ;stkvar	_a @ sp[(-4)+-8]
 13082  01287A  0EF6               	movlw	246
 13083  01287C  24E1               	addwf	fsr1l,w,c
 13084  01287E  6ED9               	movwf	fsr2l,c
 13085  012880  0EFF               	movlw	255
 13086  012882  20E2               	addwfc	fsr1h,w,c
 13087  012884  6EDA               	movwf	fsr2h,c
 13088  012886  0EFC               	movlw	-4
 13089  012888  006F FF8F FFDF     	movff	plusw1,indf2
 13090                           
 13091                           ;stkvar	_b @ sp[(-4)+-4]
 13092  01288E  0EFB               	movlw	251
 13093  012890  24E1               	addwf	fsr1l,w,c
 13094  012892  6ED9               	movwf	fsr2l,c
 13095  012894  0EFF               	movlw	255
 13096  012896  20E2               	addwfc	fsr1h,w,c
 13097  012898  6EDA               	movwf	fsr2h,c
 13098  01289A  50DF               	movf	indf2,w,c
 13099  01289C  6E40               	movwf	(btemp+11)^0,c
 13100                           
 13101                           ;stkvar	_grs @ sp[(-4)+0]
 13102  01289E  0EFC               	movlw	-4
 13103  0128A0  0060  F103  FFE3   	movff	btemp+11,plusw1
 13104                           
 13105                           ;stkvar	_a @ sp[(-4)+-8]
 13106  0128A6  0EF7               	movlw	247
 13107  0128A8  24E1               	addwf	fsr1l,w,c
 13108  0128AA  6ED9               	movwf	fsr2l,c
 13109  0128AC  0EFF               	movlw	255
 13110  0128AE  20E2               	addwfc	fsr1h,w,c
 13111  0128B0  6EDA               	movwf	fsr2h,c
 13112                           
 13113                           ;stkvar	_b @ sp[(-4)+-4]
 13114  0128B2  0EFB               	movlw	251
 13115  0128B4  24E1               	addwf	fsr1l,w,c
 13116  0128B6  6EE9               	movwf	fsr0l,c
 13117  0128B8  0EFF               	movlw	255
 13118  0128BA  20E2               	addwfc	fsr1h,w,c
 13119  0128BC  6EEA               	movwf	fsr0h,c
 13120  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 13121                           
 13122                           ;stkvar	_grs @ sp[(-4)+0]
 13123                           ;stkvar	_a @ sp[(-4)+-8]
 13124  0128C4  0EF7               	movlw	247
 13125  0128C6  24E1               	addwf	fsr1l,w,c
 13126  0128C8  6ED9               	movwf	fsr2l,c
 13127  0128CA  0EFF               	movlw	255
 13128  0128CC  20E2               	addwfc	fsr1h,w,c
 13129  0128CE  6EDA               	movwf	fsr2h,c
 13130  0128D0  0EFC               	movlw	-4
 13131  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 13132  0128D8                     l5989:
 13133                           
 13134                           ;stkvar	_grs @ sp[(-4)+0]
 13135  0128D8  0EFC               	movlw	-4
 13136  0128DA  6AE3               	clrf	plusw1,c
 13137                           
 13138                           ;stkvar	_aexp @ sp[(-4)+2]
 13139  0128DC  0EFE               	movlw	-2
 13140  0128DE  50E3               	movf	plusw1,w,c
 13141  0128E0  6E3F               	movwf	(btemp+10)^0,c
 13142  0128E2  6A40               	clrf	(btemp+11)^0,c
 13143                           
 13144                           ;stkvar	_bexp @ sp[(-4)+1]
 13145  0128E4  0EFD               	movlw	-3
 13146  0128E6  50E3               	movf	plusw1,w,c
 13147  0128E8  5E3F               	subwf	(btemp+10)^0,f,c
 13148  0128EA  0E00               	movlw	0
 13149  0128EC  5A40               	subwfb	(btemp+11)^0,f,c
 13150  0128EE  BE40               	btfsc	(btemp+11)^0,7,c
 13151  0128F0  D062               	goto	l6013
 13152  0128F2  5040               	movf	(btemp+11)^0,w,c
 13153  0128F4  E104               	bnz	u4370
 13154  0128F6  0E1A               	movlw	26
 13155  0128F8  5C3F               	subwf	(btemp+10)^0,w,c
 13156  0128FA  A0D8               	btfss	status,0,c
 13157  0128FC  D05C               	goto	l6013
 13158  0128FE                     u4370:
 13159                           
 13160                           ;stkvar	_b @ sp[(-4)+-4]
 13161  0128FE  0EF8               	movlw	-8
 13162  012900  50E3               	movf	plusw1,w,c
 13163  012902  E10A               	bnz	u4381
 13164  012904  0EF9               	movlw	-7
 13165  012906  50E3               	movf	plusw1,w,c
 13166  012908  E107               	bnz	u4381
 13167  01290A  0EFA               	movlw	-6
 13168  01290C  50E3               	movf	plusw1,w,c
 13169  01290E  E104               	bnz	u4381
 13170  012910  0EFB               	movlw	-5
 13171  012912  50E3               	movf	plusw1,w,c
 13172  012914  B4D8               	btfsc	status,2,c
 13173  012916  D003               	goto	u4380
 13174  012918                     u4381:
 13175  012918  6A40               	clrf	(btemp+11)^0,c
 13176  01291A  2A40               	incf	(btemp+11)^0,f,c
 13177  01291C  D001               	goto	u4398
 13178  01291E                     u4380:
 13179  01291E  6A40               	clrf	(btemp+11)^0,c
 13180  012920                     u4398:
 13181                           
 13182                           ;stkvar	_grs @ sp[(-4)+0]
 13183  012920  0EFC               	movlw	-4
 13184  012922  0060  F103  FFE3   	movff	btemp+11,plusw1
 13185                           
 13186                           ;stkvar	_b @ sp[(-4)+-4]
 13187  012928  0EF8               	movlw	-8
 13188  01292A  6AE3               	clrf	plusw1,c
 13189  01292C  0EF9               	movlw	-7
 13190  01292E  6AE3               	clrf	plusw1,c
 13191  012930  0EFA               	movlw	-6
 13192  012932  6AE3               	clrf	plusw1,c
 13193  012934  0EFB               	movlw	-5
 13194  012936  6AE3               	clrf	plusw1,c
 13195                           
 13196                           ;stkvar	_aexp @ sp[(-4)+2]
 13197                           ;stkvar	_bexp @ sp[(-4)+1]
 13198  012938  0EFE               	movlw	-2
 13199  01293A  006F FF8C  F035    	movff	plusw1,btemp
 13200  012940  0EFD               	movlw	-3
 13201  012942  0060  F0D7  FFE3   	movff	btemp,plusw1
 13202  012948  D042               	goto	u4430
 13203  01294A                     l5999:
 13204                           
 13205                           ;stkvar	_grs @ sp[(-4)+0]
 13206  01294A  0EFC               	movlw	-4
 13207  01294C  A0E3               	btfss	plusw1,0,c
 13208  01294E  D00D               	goto	l6003
 13209                           
 13210                           ;stkvar	_grs @ sp[(-4)+0]
 13211  012950  0EFC               	movlw	-4
 13212  012952  006F FF8C  F040    	movff	plusw1,btemp+11
 13213  012958  90D8               	bcf	status,0,c
 13214  01295A  3240               	rrcf	(btemp+11)^0,f,c
 13215  01295C  0E01               	movlw	1
 13216  01295E  1240               	iorwf	(btemp+11)^0,f,c
 13217                           
 13218                           ;stkvar	_grs @ sp[(-4)+0]
 13219  012960  0EFC               	movlw	-4
 13220  012962  0060  F103  FFE3   	movff	btemp+11,plusw1
 13221  012968  D009               	goto	l6005
 13222  01296A                     l6003:
 13223                           
 13224                           ;stkvar	_grs @ sp[(-4)+0]
 13225  01296A  50E1               	movf	fsr1l,w,c
 13226  01296C  0FFC               	addlw	-4
 13227  01296E  6ED9               	movwf	fsr2l,c
 13228  012970  50E2               	movf	fsr1h,w,c
 13229  012972  6EDA               	movwf	fsr2h,c
 13230  012974  0EFF               	movlw	255
 13231  012976  22DA               	addwfc	fsr2h,f,c
 13232  012978  90D8               	bcf	status,0,c
 13233  01297A  32DF               	rrcf	indf2,f,c
 13234  01297C                     l6005:
 13235                           
 13236                           ;stkvar	_b @ sp[(-4)+-4]
 13237  01297C  0EF8               	movlw	-8
 13238  01297E  A0E3               	btfss	plusw1,0,c
 13239  012980  D002               	goto	l6009
 13240                           
 13241                           ;stkvar	_grs @ sp[(-4)+0]
 13242  012982  0EFC               	movlw	-4
 13243  012984  8EE3               	bsf	plusw1,7,c
 13244  012986                     l6009:
 13245  012986  0E01               	movlw	1
 13246  012988  6E40               	movwf	(btemp+11)^0,c
 13247                           
 13248                           ;stkvar	_b @ sp[(-4)+-4]
 13249  01298A  50E1               	movf	fsr1l,w,c
 13250  01298C  0FF8               	addlw	-8
 13251  01298E  6ED9               	movwf	fsr2l,c
 13252  012990  50E2               	movf	fsr1h,w,c
 13253  012992  6EDA               	movwf	fsr2h,c
 13254  012994  0EFF               	movlw	255
 13255  012996  22DA               	addwfc	fsr2h,f,c
 13256  012998  2840               	incf	(btemp+11)^0,w,c
 13257  01299A  52DE               	movf	postinc2,f,c
 13258  01299C  D008               	goto	u4420
 13259  01299E                     u4425:
 13260  01299E  52DE               	movf	postinc2,f,c
 13261  0129A0  90D8               	bcf	status,0,c
 13262  0129A2  BEDC               	btfsc	preinc2,7,c
 13263  0129A4  80D8               	bsf	status,0,c
 13264  0129A6  32DD               	rrcf	postdec2,f,c
 13265  0129A8  32DD               	rrcf	postdec2,f,c
 13266  0129AA  32DD               	rrcf	postdec2,f,c
 13267  0129AC  32DE               	rrcf	postinc2,f,c
 13268  0129AE                     u4420:
 13269  0129AE  2EE8               	decfsz	wreg,f,c
 13270  0129B0  D7F6               	goto	u4425
 13271                           
 13272                           ;stkvar	_bexp @ sp[(-4)+1]
 13273  0129B2  0EFD               	movlw	-3
 13274  0129B4  2AE3               	incf	plusw1,f,c
 13275  0129B6                     l6013:
 13276                           
 13277                           ;stkvar	_aexp @ sp[(-4)+2]
 13278                           ;stkvar	_bexp @ sp[(-4)+1]
 13279  0129B6  50E1               	movf	fsr1l,w,c
 13280  0129B8  0FFD               	addlw	-3
 13281  0129BA  6ED9               	movwf	fsr2l,c
 13282  0129BC  50E2               	movf	fsr1h,w,c
 13283  0129BE  6EDA               	movwf	fsr2h,c
 13284  0129C0  0EFF               	movlw	255
 13285  0129C2  22DA               	addwfc	fsr2h,f,c
 13286  0129C4  0EFE               	movlw	-2
 13287  0129C6  50E3               	movf	plusw1,w,c
 13288  0129C8  5CDE               	subwf	postinc2,w,c
 13289  0129CA  A0D8               	btfss	status,0,c
 13290  0129CC  D7BE               	goto	l5999
 13291  0129CE                     u4430:
 13292                           
 13293                           ;stkvar	_signs @ sp[(-4)+3]
 13294  0129CE  0EFF               	movlw	-1
 13295  0129D0  BCE3               	btfsc	plusw1,6,c
 13296  0129D2  D066               	goto	l6041
 13297                           
 13298                           ;stkvar	_bexp @ sp[(-4)+1]
 13299  0129D4  0EFD               	movlw	-3
 13300  0129D6  50E3               	movf	plusw1,w,c
 13301  0129D8  B4D8               	btfsc	status,2,c
 13302  0129DA  D0F2               	goto	u4530
 13303                           
 13304                           ;stkvar	_a @ sp[(-4)+-8]
 13305                           ;stkvar	_b @ sp[(-4)+-4]
 13306  0129DC  0EF8               	movlw	-8
 13307  0129DE  50E3               	movf	plusw1,w,c
 13308  0129E0  6E35               	movwf	btemp^0,c
 13309  0129E2  0EF4               	movlw	-12
 13310  0129E4  50E3               	movf	plusw1,w,c
 13311  0129E6  2635               	addwf	btemp^0,f,c
 13312  0129E8  0EF8               	movlw	-8
 13313  0129EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 13314  0129F0  0EF9               	movlw	-7
 13315  0129F2  50E3               	movf	plusw1,w,c
 13316  0129F4  6E35               	movwf	btemp^0,c
 13317  0129F6  0EF5               	movlw	-11
 13318  0129F8  50E3               	movf	plusw1,w,c
 13319  0129FA  2235               	addwfc	btemp^0,f,c
 13320  0129FC  0EF9               	movlw	-7
 13321  0129FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 13322  012A04  0EFA               	movlw	-6
 13323  012A06  50E3               	movf	plusw1,w,c
 13324  012A08  6E35               	movwf	btemp^0,c
 13325  012A0A  0EF6               	movlw	-10
 13326  012A0C  50E3               	movf	plusw1,w,c
 13327  012A0E  2235               	addwfc	btemp^0,f,c
 13328  012A10  0EFA               	movlw	-6
 13329  012A12  0060  F0D7  FFE3   	movff	btemp,plusw1
 13330  012A18  0EFB               	movlw	-5
 13331  012A1A  50E3               	movf	plusw1,w,c
 13332  012A1C  6E35               	movwf	btemp^0,c
 13333  012A1E  0EF7               	movlw	-9
 13334  012A20  50E3               	movf	plusw1,w,c
 13335  012A22  2235               	addwfc	btemp^0,f,c
 13336  012A24  0EFB               	movlw	-5
 13337  012A26  0060  F0D7  FFE3   	movff	btemp,plusw1
 13338                           
 13339                           ;stkvar	_b @ sp[(-4)+-4]
 13340  012A2C  0EFB               	movlw	-5
 13341  012A2E  A0E3               	btfss	plusw1,0,c
 13342  012A30  D101               	goto	u4570
 13343                           
 13344                           ;stkvar	_grs @ sp[(-4)+0]
 13345  012A32  0EFC               	movlw	-4
 13346  012A34  A0E3               	btfss	plusw1,0,c
 13347  012A36  D00D               	goto	l6031
 13348                           
 13349                           ;stkvar	_grs @ sp[(-4)+0]
 13350  012A38  0EFC               	movlw	-4
 13351  012A3A  006F FF8C  F040    	movff	plusw1,btemp+11
 13352  012A40  90D8               	bcf	status,0,c
 13353  012A42  3240               	rrcf	(btemp+11)^0,f,c
 13354  012A44  0E01               	movlw	1
 13355  012A46  1240               	iorwf	(btemp+11)^0,f,c
 13356                           
 13357                           ;stkvar	_grs @ sp[(-4)+0]
 13358  012A48  0EFC               	movlw	-4
 13359  012A4A  0060  F103  FFE3   	movff	btemp+11,plusw1
 13360  012A50  D009               	goto	l6033
 13361  012A52                     l6031:
 13362                           
 13363                           ;stkvar	_grs @ sp[(-4)+0]
 13364  012A52  50E1               	movf	fsr1l,w,c
 13365  012A54  0FFC               	addlw	-4
 13366  012A56  6ED9               	movwf	fsr2l,c
 13367  012A58  50E2               	movf	fsr1h,w,c
 13368  012A5A  6EDA               	movwf	fsr2h,c
 13369  012A5C  0EFF               	movlw	255
 13370  012A5E  22DA               	addwfc	fsr2h,f,c
 13371  012A60  90D8               	bcf	status,0,c
 13372  012A62  32DF               	rrcf	indf2,f,c
 13373  012A64                     l6033:
 13374                           
 13375                           ;stkvar	_b @ sp[(-4)+-4]
 13376  012A64  0EF8               	movlw	-8
 13377  012A66  A0E3               	btfss	plusw1,0,c
 13378  012A68  D002               	goto	l6037
 13379                           
 13380                           ;stkvar	_grs @ sp[(-4)+0]
 13381  012A6A  0EFC               	movlw	-4
 13382  012A6C  8EE3               	bsf	plusw1,7,c
 13383  012A6E                     l6037:
 13384  012A6E  0E01               	movlw	1
 13385  012A70  6E40               	movwf	(btemp+11)^0,c
 13386                           
 13387                           ;stkvar	_b @ sp[(-4)+-4]
 13388  012A72  50E1               	movf	fsr1l,w,c
 13389  012A74  0FF8               	addlw	-8
 13390  012A76  6ED9               	movwf	fsr2l,c
 13391  012A78  50E2               	movf	fsr1h,w,c
 13392  012A7A  6EDA               	movwf	fsr2h,c
 13393  012A7C  0EFF               	movlw	255
 13394  012A7E  22DA               	addwfc	fsr2h,f,c
 13395  012A80  2840               	incf	(btemp+11)^0,w,c
 13396  012A82  52DE               	movf	postinc2,f,c
 13397  012A84  D008               	goto	u4490
 13398  012A86                     u4495:
 13399  012A86  52DE               	movf	postinc2,f,c
 13400  012A88  90D8               	bcf	status,0,c
 13401  012A8A  BEDC               	btfsc	preinc2,7,c
 13402  012A8C  80D8               	bsf	status,0,c
 13403  012A8E  32DD               	rrcf	postdec2,f,c
 13404  012A90  32DD               	rrcf	postdec2,f,c
 13405  012A92  32DD               	rrcf	postdec2,f,c
 13406  012A94  32DE               	rrcf	postinc2,f,c
 13407  012A96                     u4490:
 13408  012A96  2EE8               	decfsz	wreg,f,c
 13409  012A98  D7F6               	goto	u4495
 13410                           
 13411                           ;stkvar	_bexp @ sp[(-4)+1]
 13412  012A9A  0EFD               	movlw	-3
 13413  012A9C  2AE3               	incf	plusw1,f,c
 13414  012A9E  D0CA               	goto	u4570
 13415  012AA0                     l6041:
 13416                           
 13417                           ;stkvar	_a @ sp[(-4)+-8]
 13418                           ;stkvar	_b @ sp[(-4)+-4]
 13419  012AA0  50E1               	movf	fsr1l,w,c
 13420  012AA2  0FF8               	addlw	-8
 13421  012AA4  6ED9               	movwf	fsr2l,c
 13422  012AA6  50E2               	movf	fsr1h,w,c
 13423  012AA8  6EDA               	movwf	fsr2h,c
 13424  012AAA  0EFF               	movlw	255
 13425  012AAC  22DA               	addwfc	fsr2h,f,c
 13426  012AAE  0EF4               	movlw	-12
 13427  012AB0  50E3               	movf	plusw1,w,c
 13428  012AB2  5CDE               	subwf	postinc2,w,c
 13429  012AB4  0EF5               	movlw	-11
 13430  012AB6  50E3               	movf	plusw1,w,c
 13431  012AB8  58DE               	subwfb	postinc2,w,c
 13432  012ABA  0EF6               	movlw	-10
 13433  012ABC  50E3               	movf	plusw1,w,c
 13434  012ABE  58DE               	subwfb	postinc2,w,c
 13435  012AC0  50DE               	movf	postinc2,w,c
 13436  012AC2  0A80               	xorlw	128
 13437  012AC4  6E35               	movwf	btemp^0,c
 13438  012AC6  0EF7               	movlw	-9
 13439  012AC8  50E3               	movf	plusw1,w,c
 13440  012ACA  0A80               	xorlw	128
 13441  012ACC  5835               	subwfb	btemp^0,w,c
 13442  012ACE  B0D8               	btfsc	status,0,c
 13443  012AD0  D053               	goto	l6053
 13444                           
 13445                           ;stkvar	_b @ sp[(-4)+-4]
 13446                           ;stkvar	_a @ sp[(-4)+-8]
 13447  012AD2  0EF4               	movlw	-12
 13448  012AD4  006F FF8C  F03D    	movff	plusw1,btemp+8
 13449  012ADA  0EF5               	movlw	-11
 13450  012ADC  006F FF8C  F03E    	movff	plusw1,btemp+9
 13451  012AE2  0EF6               	movlw	-10
 13452  012AE4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13453  012AEA  0EF7               	movlw	-9
 13454  012AEC  006F FF8C  F040    	movff	plusw1,btemp+11
 13455  012AF2  0EF8               	movlw	-8
 13456  012AF4  50E3               	movf	plusw1,w,c
 13457  012AF6  5E3D               	subwf	(btemp+8)^0,f,c
 13458  012AF8  0EF9               	movlw	-7
 13459  012AFA  50E3               	movf	plusw1,w,c
 13460  012AFC  5A3E               	subwfb	(btemp+9)^0,f,c
 13461  012AFE  0EFA               	movlw	-6
 13462  012B00  50E3               	movf	plusw1,w,c
 13463  012B02  5A3F               	subwfb	(btemp+10)^0,f,c
 13464  012B04  0EFB               	movlw	-5
 13465  012B06  50E3               	movf	plusw1,w,c
 13466  012B08  5A40               	subwfb	(btemp+11)^0,f,c
 13467  012B0A  0EFF               	movlw	255
 13468  012B0C  243D               	addwf	(btemp+8)^0,w,c
 13469  012B0E  6E39               	movwf	(btemp+4)^0,c
 13470  012B10  0EFF               	movlw	255
 13471  012B12  203E               	addwfc	(btemp+9)^0,w,c
 13472  012B14  6E3A               	movwf	(btemp+5)^0,c
 13473  012B16  0EFF               	movlw	255
 13474  012B18  203F               	addwfc	(btemp+10)^0,w,c
 13475  012B1A  6E3B               	movwf	(btemp+6)^0,c
 13476  012B1C  0EFF               	movlw	255
 13477  012B1E  2040               	addwfc	(btemp+11)^0,w,c
 13478  012B20  6E3C               	movwf	(btemp+7)^0,c
 13479                           
 13480                           ;stkvar	_b @ sp[(-4)+-4]
 13481  012B22  0EF8               	movlw	-8
 13482  012B24  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13483  012B2A  0EF9               	movlw	-7
 13484  012B2C  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13485  012B32  0EFA               	movlw	-6
 13486  012B34  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13487  012B3A  0EFB               	movlw	-5
 13488  012B3C  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13489                           
 13490                           ;stkvar	_signs @ sp[(-4)+3]
 13491  012B42  0EFF               	movlw	-1
 13492  012B44  7EE3               	btg	plusw1,7,c
 13493                           
 13494                           ;stkvar	_grs @ sp[(-4)+0]
 13495  012B46  0EFC               	movlw	-4
 13496  012B48  50E3               	movf	plusw1,w,c
 13497  012B4A  0800               	sublw	0
 13498  012B4C  6E40               	movwf	(btemp+11)^0,c
 13499                           
 13500                           ;stkvar	_grs @ sp[(-4)+0]
 13501  012B4E  0EFC               	movlw	-4
 13502  012B50  0060  F103  FFE3   	movff	btemp+11,plusw1
 13503                           
 13504                           ;stkvar	_grs @ sp[(-4)+0]
 13505  012B56  0EFC               	movlw	-4
 13506  012B58  50E3               	movf	plusw1,w,c
 13507  012B5A  A4D8               	btfss	status,2,c
 13508  012B5C  D020               	goto	l6055
 13509                           
 13510                           ;stkvar	_b @ sp[(-4)+-4]
 13511  012B5E  50E1               	movf	fsr1l,w,c
 13512  012B60  0FF8               	addlw	-8
 13513  012B62  6ED9               	movwf	fsr2l,c
 13514  012B64  50E2               	movf	fsr1h,w,c
 13515  012B66  6EDA               	movwf	fsr2h,c
 13516  012B68  0EFF               	movlw	255
 13517  012B6A  22DA               	addwfc	fsr2h,f,c
 13518  012B6C  2ADE               	incf	postinc2,f,c
 13519  012B6E  0E00               	movlw	0
 13520  012B70  22DE               	addwfc	postinc2,f,c
 13521  012B72  22DE               	addwfc	postinc2,f,c
 13522  012B74  22DE               	addwfc	postinc2,f,c
 13523  012B76  D013               	goto	l6055
 13524  012B78                     l6053:
 13525                           
 13526                           ;stkvar	_a @ sp[(-4)+-8]
 13527                           ;stkvar	_b @ sp[(-4)+-4]
 13528  012B78  50E1               	movf	fsr1l,w,c
 13529  012B7A  0FF8               	addlw	-8
 13530  012B7C  6ED9               	movwf	fsr2l,c
 13531  012B7E  50E2               	movf	fsr1h,w,c
 13532  012B80  6EDA               	movwf	fsr2h,c
 13533  012B82  0EFF               	movlw	255
 13534  012B84  22DA               	addwfc	fsr2h,f,c
 13535  012B86  0EF4               	movlw	-12
 13536  012B88  50E3               	movf	plusw1,w,c
 13537  012B8A  5EDE               	subwf	postinc2,f,c
 13538  012B8C  0EF5               	movlw	-11
 13539  012B8E  50E3               	movf	plusw1,w,c
 13540  012B90  5ADE               	subwfb	postinc2,f,c
 13541  012B92  0EF6               	movlw	-10
 13542  012B94  50E3               	movf	plusw1,w,c
 13543  012B96  5ADE               	subwfb	postinc2,f,c
 13544  012B98  0EF7               	movlw	-9
 13545  012B9A  50E3               	movf	plusw1,w,c
 13546  012B9C  5ADE               	subwfb	postinc2,f,c
 13547  012B9E                     l6055:
 13548                           
 13549                           ;stkvar	_b @ sp[(-4)+-4]
 13550  012B9E  0EF8               	movlw	-8
 13551  012BA0  50E3               	movf	plusw1,w,c
 13552  012BA2  E145               	bnz	l6077
 13553  012BA4  0EF9               	movlw	-7
 13554  012BA6  50E3               	movf	plusw1,w,c
 13555  012BA8  E142               	bnz	l6077
 13556  012BAA  0EFA               	movlw	-6
 13557  012BAC  50E3               	movf	plusw1,w,c
 13558  012BAE  E13F               	bnz	l6077
 13559  012BB0  0EFB               	movlw	-5
 13560  012BB2  50E3               	movf	plusw1,w,c
 13561  012BB4  A4D8               	btfss	status,2,c
 13562  012BB6  D03B               	goto	l6077
 13563                           
 13564                           ;stkvar	_grs @ sp[(-4)+0]
 13565  012BB8  0EFC               	movlw	-4
 13566  012BBA  50E3               	movf	plusw1,w,c
 13567  012BBC  A4D8               	btfss	status,2,c
 13568  012BBE  D037               	goto	l6077
 13569  012BC0                     u4530:
 13570  012BC0  0E00               	movlw	0
 13571  012BC2  6E35               	movwf	btemp^0,c
 13572  012BC4  0E00               	movlw	0
 13573  012BC6  6E36               	movwf	(btemp+1)^0,c
 13574  012BC8  0E00               	movlw	0
 13575  012BCA  6E37               	movwf	(btemp+2)^0,c
 13576  012BCC  0E00               	movlw	0
 13577  012BCE  6E38               	movwf	(btemp+3)^0,c
 13578  012BD0  D0C6               	goto	l2500
 13579  012BD2                     l6063:
 13580                           
 13581                           ;stkvar	_b @ sp[(-4)+-4]
 13582  012BD2  90D8               	bcf	status,0,c
 13583  012BD4  0EF8               	movlw	-8
 13584  012BD6  36E3               	rlcf	plusw1,f,c
 13585  012BD8  0EF9               	movlw	-7
 13586  012BDA  36E3               	rlcf	plusw1,f,c
 13587  012BDC  0EFA               	movlw	-6
 13588  012BDE  36E3               	rlcf	plusw1,f,c
 13589  012BE0  0EFB               	movlw	-5
 13590  012BE2  36E3               	rlcf	plusw1,f,c
 13591                           
 13592                           ;stkvar	_grs @ sp[(-4)+0]
 13593  012BE4  0EFC               	movlw	-4
 13594  012BE6  AEE3               	btfss	plusw1,7,c
 13595  012BE8  D002               	goto	l2512
 13596                           
 13597                           ;stkvar	_b @ sp[(-4)+-4]
 13598  012BEA  0EF8               	movlw	-8
 13599  012BEC  80E3               	bsf	plusw1,0,c
 13600  012BEE                     l2512:
 13601                           
 13602                           ;stkvar	_grs @ sp[(-4)+0]
 13603  012BEE  0EFC               	movlw	-4
 13604  012BF0  A0E3               	btfss	plusw1,0,c
 13605  012BF2  D00E               	goto	l6071
 13606                           
 13607                           ;stkvar	_grs @ sp[(-4)+0]
 13608  012BF4  0EFC               	movlw	-4
 13609  012BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 13610  012BFC  90D8               	bcf	status,0,c
 13611  012BFE  3440               	rlcf	(btemp+11)^0,w,c
 13612  012C00  6E3F               	movwf	(btemp+10)^0,c
 13613  012C02  0E01               	movlw	1
 13614  012C04  123F               	iorwf	(btemp+10)^0,f,c
 13615                           
 13616                           ;stkvar	_grs @ sp[(-4)+0]
 13617  012C06  0EFC               	movlw	-4
 13618  012C08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13619  012C0E  D009               	goto	l6073
 13620  012C10                     l6071:
 13621                           
 13622                           ;stkvar	_grs @ sp[(-4)+0]
 13623  012C10  50E1               	movf	fsr1l,w,c
 13624  012C12  0FFC               	addlw	-4
 13625  012C14  6ED9               	movwf	fsr2l,c
 13626  012C16  50E2               	movf	fsr1h,w,c
 13627  012C18  6EDA               	movwf	fsr2h,c
 13628  012C1A  0EFF               	movlw	255
 13629  012C1C  22DA               	addwfc	fsr2h,f,c
 13630  012C1E  90D8               	bcf	status,0,c
 13631  012C20  36DF               	rlcf	indf2,f,c
 13632  012C22                     l6073:
 13633                           
 13634                           ;stkvar	_bexp @ sp[(-4)+1]
 13635  012C22  0EFD               	movlw	-3
 13636  012C24  50E3               	movf	plusw1,w,c
 13637  012C26  B4D8               	btfsc	status,2,c
 13638  012C28  D002               	goto	l6077
 13639                           
 13640                           ;stkvar	_bexp @ sp[(-4)+1]
 13641  012C2A  0EFD               	movlw	-3
 13642  012C2C  06E3               	decf	plusw1,f,c
 13643  012C2E                     l6077:
 13644                           
 13645                           ;stkvar	_b @ sp[(-4)+-4]
 13646  012C2E  0EFA               	movlw	-6
 13647  012C30  AEE3               	btfss	plusw1,7,c
 13648  012C32  D7CF               	goto	l6063
 13649  012C34                     u4570:
 13650                           
 13651                           ;stkvar	_aexp @ sp[(-4)+2]
 13652  012C34  0EFE               	movlw	-2
 13653  012C36  6AE3               	clrf	plusw1,c
 13654                           
 13655                           ;stkvar	_grs @ sp[(-4)+0]
 13656  012C38  0EFC               	movlw	-4
 13657  012C3A  AEE3               	btfss	plusw1,7,c
 13658  012C3C  D00F               	goto	l6091
 13659                           
 13660                           ;stkvar	_grs @ sp[(-4)+0]
 13661  012C3E  0EFC               	movlw	-4
 13662  012C40  006F FF8C  F040    	movff	plusw1,btemp+11
 13663  012C46  0E7F               	movlw	127
 13664  012C48  1640               	andwf	(btemp+11)^0,f,c
 13665  012C4A  B4D8               	btfsc	status,2,c
 13666  012C4C  D004               	goto	l6087
 13667  012C4E                     u4590:
 13668                           
 13669                           ;stkvar	_aexp @ sp[(-4)+2]
 13670  012C4E  0EFE               	movlw	-2
 13671  012C50  6AE3               	clrf	plusw1,c
 13672  012C52  2AE3               	incf	plusw1,f,c
 13673  012C54  D003               	goto	l6091
 13674  012C56                     l6087:
 13675                           
 13676                           ;stkvar	_b @ sp[(-4)+-4]
 13677  012C56  0EF8               	movlw	-8
 13678  012C58  B0E3               	btfsc	plusw1,0,c
 13679  012C5A  D7F9               	goto	u4590
 13680  012C5C                     l6091:
 13681                           
 13682                           ;stkvar	_aexp @ sp[(-4)+2]
 13683  012C5C  0EFE               	movlw	-2
 13684  012C5E  50E3               	movf	plusw1,w,c
 13685  012C60  B4D8               	btfsc	status,2,c
 13686  012C62  D02B               	goto	l6103
 13687                           
 13688                           ;stkvar	_b @ sp[(-4)+-4]
 13689  012C64  50E1               	movf	fsr1l,w,c
 13690  012C66  0FF8               	addlw	-8
 13691  012C68  6ED9               	movwf	fsr2l,c
 13692  012C6A  50E2               	movf	fsr1h,w,c
 13693  012C6C  6EDA               	movwf	fsr2h,c
 13694  012C6E  0EFF               	movlw	255
 13695  012C70  22DA               	addwfc	fsr2h,f,c
 13696  012C72  2ADE               	incf	postinc2,f,c
 13697  012C74  0E00               	movlw	0
 13698  012C76  22DE               	addwfc	postinc2,f,c
 13699  012C78  22DE               	addwfc	postinc2,f,c
 13700  012C7A  22DE               	addwfc	postinc2,f,c
 13701                           
 13702                           ;stkvar	_b @ sp[(-4)+-4]
 13703  012C7C  0EFB               	movlw	-5
 13704  012C7E  A0E3               	btfss	plusw1,0,c
 13705  012C80  D01C               	goto	l6103
 13706  012C82  0E01               	movlw	1
 13707  012C84  6E40               	movwf	(btemp+11)^0,c
 13708                           
 13709                           ;stkvar	_b @ sp[(-4)+-4]
 13710  012C86  50E1               	movf	fsr1l,w,c
 13711  012C88  0FF8               	addlw	-8
 13712  012C8A  6ED9               	movwf	fsr2l,c
 13713  012C8C  50E2               	movf	fsr1h,w,c
 13714  012C8E  6EDA               	movwf	fsr2h,c
 13715  012C90  0EFF               	movlw	255
 13716  012C92  22DA               	addwfc	fsr2h,f,c
 13717  012C94  2840               	incf	(btemp+11)^0,w,c
 13718  012C96  52DE               	movf	postinc2,f,c
 13719  012C98  D008               	goto	u4630
 13720  012C9A                     u4635:
 13721  012C9A  52DE               	movf	postinc2,f,c
 13722  012C9C  90D8               	bcf	status,0,c
 13723  012C9E  BEDC               	btfsc	preinc2,7,c
 13724  012CA0  80D8               	bsf	status,0,c
 13725  012CA2  32DD               	rrcf	postdec2,f,c
 13726  012CA4  32DD               	rrcf	postdec2,f,c
 13727  012CA6  32DD               	rrcf	postdec2,f,c
 13728  012CA8  32DE               	rrcf	postinc2,f,c
 13729  012CAA                     u4630:
 13730  012CAA  2EE8               	decfsz	wreg,f,c
 13731  012CAC  D7F6               	goto	u4635
 13732                           
 13733                           ;stkvar	_bexp @ sp[(-4)+1]
 13734  012CAE  0EFD               	movlw	-3
 13735  012CB0  28E3               	incf	plusw1,w,c
 13736  012CB2  B4D8               	btfsc	status,2,c
 13737  012CB4  D002               	goto	l6103
 13738                           
 13739                           ;stkvar	_bexp @ sp[(-4)+1]
 13740  012CB6  0EFD               	movlw	-3
 13741  012CB8  2AE3               	incf	plusw1,f,c
 13742  012CBA                     l6103:
 13743                           
 13744                           ;stkvar	_bexp @ sp[(-4)+1]
 13745  012CBA  0EFD               	movlw	-3
 13746  012CBC  28E3               	incf	plusw1,w,c
 13747  012CBE  B4D8               	btfsc	status,2,c
 13748  012CC0  D004               	goto	u4660
 13749                           
 13750                           ;stkvar	_bexp @ sp[(-4)+1]
 13751  012CC2  0EFD               	movlw	-3
 13752  012CC4  50E3               	movf	plusw1,w,c
 13753  012CC6  A4D8               	btfss	status,2,c
 13754  012CC8  D00E               	goto	l6113
 13755  012CCA                     u4660:
 13756                           
 13757                           ;stkvar	_b @ sp[(-4)+-4]
 13758  012CCA  0EF8               	movlw	-8
 13759  012CCC  6AE3               	clrf	plusw1,c
 13760  012CCE  0EF9               	movlw	-7
 13761  012CD0  6AE3               	clrf	plusw1,c
 13762  012CD2  0EFA               	movlw	-6
 13763  012CD4  6AE3               	clrf	plusw1,c
 13764  012CD6  0EFB               	movlw	-5
 13765  012CD8  6AE3               	clrf	plusw1,c
 13766                           
 13767                           ;stkvar	_bexp @ sp[(-4)+1]
 13768  012CDA  0EFD               	movlw	-3
 13769  012CDC  50E3               	movf	plusw1,w,c
 13770  012CDE  A4D8               	btfss	status,2,c
 13771  012CE0  D002               	goto	l6113
 13772                           
 13773                           ;stkvar	_signs @ sp[(-4)+3]
 13774  012CE2  0EFF               	movlw	-1
 13775  012CE4  6AE3               	clrf	plusw1,c
 13776  012CE6                     l6113:
 13777                           
 13778                           ;stkvar	_bexp @ sp[(-4)+1]
 13779  012CE6  0EFD               	movlw	-3
 13780  012CE8  A0E3               	btfss	plusw1,0,c
 13781  012CEA  D009               	goto	l6117
 13782                           
 13783                           ;stkvar	_b @ sp[(-4)+-4]
 13784  012CEC  0EFA               	movlw	250
 13785  012CEE  24E1               	addwf	fsr1l,w,c
 13786  012CF0  6ED9               	movwf	fsr2l,c
 13787  012CF2  0EFF               	movlw	255
 13788  012CF4  20E2               	addwfc	fsr1h,w,c
 13789  012CF6  6EDA               	movwf	fsr2h,c
 13790  012CF8  0E00               	movlw	0
 13791  012CFA  8EDB               	bsf	plusw2,7,c
 13792  012CFC  D008               	goto	l6119
 13793  012CFE                     l6117:
 13794                           
 13795                           ;stkvar	_b @ sp[(-4)+-4]
 13796  012CFE  0EFA               	movlw	250
 13797  012D00  24E1               	addwf	fsr1l,w,c
 13798  012D02  6ED9               	movwf	fsr2l,c
 13799  012D04  0EFF               	movlw	255
 13800  012D06  20E2               	addwfc	fsr1h,w,c
 13801  012D08  6EDA               	movwf	fsr2h,c
 13802  012D0A  0E7F               	movlw	127
 13803  012D0C  16DF               	andwf	indf2,f,c
 13804  012D0E                     l6119:
 13805                           
 13806                           ;stkvar	_b @ sp[(-4)+-4]
 13807  012D0E  0EFB               	movlw	251
 13808  012D10  24E1               	addwf	fsr1l,w,c
 13809  012D12  6ED9               	movwf	fsr2l,c
 13810  012D14  0EFF               	movlw	255
 13811  012D16  20E2               	addwfc	fsr1h,w,c
 13812  012D18  6EDA               	movwf	fsr2h,c
 13813                           
 13814                           ;stkvar	_bexp @ sp[(-4)+1]
 13815  012D1A  0EFD               	movlw	-3
 13816  012D1C  006F FF8C  F040    	movff	plusw1,btemp+11
 13817  012D22  90D8               	bcf	status,0,c
 13818  012D24  3040               	rrcf	(btemp+11)^0,w,c
 13819  012D26  6EDF               	movwf	indf2,c
 13820                           
 13821                           ;stkvar	_signs @ sp[(-4)+3]
 13822  012D28  0EFF               	movlw	-1
 13823  012D2A  AEE3               	btfss	plusw1,7,c
 13824  012D2C  D008               	goto	l6125
 13825                           
 13826                           ;stkvar	_b @ sp[(-4)+-4]
 13827  012D2E  0EFB               	movlw	251
 13828  012D30  24E1               	addwf	fsr1l,w,c
 13829  012D32  6ED9               	movwf	fsr2l,c
 13830  012D34  0EFF               	movlw	255
 13831  012D36  20E2               	addwfc	fsr1h,w,c
 13832  012D38  6EDA               	movwf	fsr2h,c
 13833  012D3A  0E00               	movlw	0
 13834  012D3C  8EDB               	bsf	plusw2,7,c
 13835  012D3E                     l6125:
 13836                           
 13837                           ;stkvar	_b @ sp[(-4)+-4]
 13838  012D3E  0EF8               	movlw	-8
 13839  012D40  006F FF8C  F035    	movff	plusw1,btemp
 13840  012D46  0EF9               	movlw	-7
 13841  012D48  006F FF8C  F036    	movff	plusw1,btemp+1
 13842  012D4E  0EFA               	movlw	-6
 13843  012D50  006F FF8C  F037    	movff	plusw1,btemp+2
 13844  012D56  0EFB               	movlw	-5
 13845  012D58  006F FF8C  F038    	movff	plusw1,btemp+3
 13846  012D5E                     l2500:
 13847                           
 13848                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13849  012D5E  0EF4               	movlw	244
 13850  012D60  26E1               	addwf	fsr1l,f,c
 13851  012D62  0EFF               	movlw	255
 13852  012D64  22E2               	addwfc	fsr1h,f,c
 13853  012D66  0012               	return		;funcret
 13854  012D68                     __end_of___fladd:
 13855                           	opt callstack 0
 13856                           
 13857 ;; *************** function ___flneg *****************
 13858 ;; Defined at:
 13859 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  f1              4  [STACK] unsigned char 
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;		None
 13864 ;; Return value:  Size  Location     Type
 13865 ;;                  4  [STACK] unsigned char 
 13866 ;; Registers used:
 13867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/4
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13877 ;;Total ram usage:        0 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    6
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_efgtoa
 13884 ;; This function uses a reentrant model
 13885 ;;
 13886                           
 13887                           	psect	text48
 13888  01753C                     __ptext48:
 13889                           	opt callstack 0
 13890  01753C                     ___flneg:
 13891                           	opt callstack 17
 13892                           
 13893                           ;stkvar	_f1 @ sp[(0)+-4]
 13894                           
 13895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13896                           ;incstack = 0
 13897  01753C  0EFC               	movlw	-4
 13898  01753E  50E3               	movf	plusw1,w,c
 13899  017540  E10A               	bnz	u5970
 13900  017542  0EFD               	movlw	-3
 13901  017544  50E3               	movf	plusw1,w,c
 13902  017546  E107               	bnz	u5970
 13903  017548  0EFE               	movlw	-2
 13904  01754A  50E3               	movf	plusw1,w,c
 13905  01754C  E104               	bnz	u5970
 13906  01754E  0EFF               	movlw	-1
 13907  017550  50E3               	movf	plusw1,w,c
 13908  017552  B4D8               	btfsc	status,2,c
 13909  017554  D002               	goto	l6793
 13910  017556                     u5970:
 13911                           
 13912                           ;stkvar	_f1 @ sp[(0)+-4]
 13913  017556  0EFF               	movlw	-1
 13914  017558  7EE3               	btg	plusw1,7,c
 13915  01755A                     l6793:
 13916                           
 13917                           ;stkvar	_f1 @ sp[(0)+-4]
 13918  01755A  0EFC               	movlw	-4
 13919  01755C  006F FF8C  F035    	movff	plusw1,btemp
 13920  017562  0EFD               	movlw	-3
 13921  017564  006F FF8C  F036    	movff	plusw1,btemp+1
 13922  01756A  0EFE               	movlw	-2
 13923  01756C  006F FF8C  F037    	movff	plusw1,btemp+2
 13924  017572  0EFF               	movlw	-1
 13925  017574  006F FF8C  F038    	movff	plusw1,btemp+3
 13926                           
 13927                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13928  01757A  52E5               	movf	postdec1,f,c
 13929  01757C  52E5               	movf	postdec1,f,c
 13930  01757E  52E5               	movf	postdec1,f,c
 13931  017580  52E5               	movf	postdec1,f,c
 13932  017582  0012               	return		;funcret
 13933  017584                     __end_of___flneg:
 13934                           	opt callstack 0
 13935                           
 13936 ;; *************** function ___flmul *****************
 13937 ;; Defined at:
 13938 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;  b               4  [STACK] unsigned char 
 13941 ;;  a               4  [STACK] unsigned char 
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;  prod            4  [STACK] struct .
 13944 ;;  grs             4  [STACK] unsigned long 
 13945 ;;  temp            2  [STACK] struct .
 13946 ;;  bexp            1  [STACK] unsigned char 
 13947 ;;  aexp            1  [STACK] unsigned char 
 13948 ;;  sign            1  [STACK] unsigned char 
 13949 ;; Return value:  Size  Location     Type
 13950 ;;                  4  [STACK] unsigned char 
 13951 ;; Registers used:
 13952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/0
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13962 ;;Total ram usage:        0 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:    6
 13965 ;; This function calls:
 13966 ;;		Nothing
 13967 ;; This function is called by:
 13968 ;;		_conv_raw_result
 13969 ;;		_lp_filter
 13970 ;;		_efgtoa
 13971 ;; This function uses a reentrant model
 13972 ;;
 13973                           
 13974                           	psect	text49
 13975  011D82                     __ptext49:
 13976                           	opt callstack 0
 13977  011D82                     ___flmul:
 13978                           	opt callstack 0
 13979                           
 13980                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13981  011D82  0E0D               	movlw	13
 13982  011D84  26E1               	addwf	fsr1l,f,c
 13983  011D86  0E00               	movlw	0
 13984  011D88  22E2               	addwfc	fsr1h,f,c
 13985                           
 13986                           ;stkvar	_b @ sp[(-13)+-4]
 13987                           
 13988                           ;incstack = 0
 13989  011D8A  0EF2               	movlw	242
 13990  011D8C  24E1               	addwf	fsr1l,w,c
 13991  011D8E  6ED9               	movwf	fsr2l,c
 13992  011D90  0EFF               	movlw	255
 13993  011D92  20E2               	addwfc	fsr1h,w,c
 13994  011D94  6EDA               	movwf	fsr2h,c
 13995  011D96  50DF               	movf	indf2,w,c
 13996  011D98  6E40               	movwf	(btemp+11)^0,c
 13997  011D9A  0E80               	movlw	128
 13998  011D9C  1640               	andwf	(btemp+11)^0,f,c
 13999                           
 14000                           ;stkvar	_sign @ sp[(-13)+12]
 14001  011D9E  0EFF               	movlw	-1
 14002  011DA0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14003                           
 14004                           ;stkvar	_b @ sp[(-13)+-4]
 14005  011DA6  0EF2               	movlw	242
 14006  011DA8  24E1               	addwf	fsr1l,w,c
 14007  011DAA  6ED9               	movwf	fsr2l,c
 14008  011DAC  0EFF               	movlw	255
 14009  011DAE  20E2               	addwfc	fsr1h,w,c
 14010  011DB0  6EDA               	movwf	fsr2h,c
 14011  011DB2  50DF               	movf	indf2,w,c
 14012  011DB4  6E40               	movwf	(btemp+11)^0,c
 14013  011DB6  90D8               	bcf	status,0,c
 14014  011DB8  3440               	rlcf	(btemp+11)^0,w,c
 14015  011DBA  6E3F               	movwf	(btemp+10)^0,c
 14016                           
 14017                           ;stkvar	_bexp @ sp[(-13)+10]
 14018  011DBC  0EFD               	movlw	-3
 14019  011DBE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14020                           
 14021                           ;stkvar	_b @ sp[(-13)+-4]
 14022  011DC4  0EF1               	movlw	241
 14023  011DC6  24E1               	addwf	fsr1l,w,c
 14024  011DC8  6ED9               	movwf	fsr2l,c
 14025  011DCA  0EFF               	movlw	255
 14026  011DCC  20E2               	addwfc	fsr1h,w,c
 14027  011DCE  6EDA               	movwf	fsr2h,c
 14028  011DD0  AEDF               	btfss	indf2,7,c
 14029  011DD2  D002               	goto	l6509
 14030                           
 14031                           ;stkvar	_bexp @ sp[(-13)+10]
 14032  011DD4  0EFD               	movlw	-3
 14033  011DD6  80E3               	bsf	plusw1,0,c
 14034  011DD8                     l6509:
 14035                           
 14036                           ;stkvar	_bexp @ sp[(-13)+10]
 14037  011DD8  0EFD               	movlw	-3
 14038  011DDA  50E3               	movf	plusw1,w,c
 14039  011DDC  B4D8               	btfsc	status,2,c
 14040  011DDE  D01F               	goto	l6517
 14041                           
 14042                           ;stkvar	_bexp @ sp[(-13)+10]
 14043  011DE0  0EFD               	movlw	-3
 14044  011DE2  28E3               	incf	plusw1,w,c
 14045  011DE4  A4D8               	btfss	status,2,c
 14046  011DE6  D018               	goto	l6515
 14047  011DE8  0E00               	movlw	0
 14048  011DEA  6E3D               	movwf	(btemp+8)^0,c
 14049  011DEC  0E00               	movlw	0
 14050  011DEE  6E3E               	movwf	(btemp+9)^0,c
 14051  011DF0  0E00               	movlw	0
 14052  011DF2  6E3F               	movwf	(btemp+10)^0,c
 14053  011DF4  0E00               	movlw	0
 14054  011DF6  6E40               	movwf	(btemp+11)^0,c
 14055                           
 14056                           ;stkvar	_b @ sp[(-13)+-4]
 14057  011DF8  0EEF               	movlw	-17
 14058  011DFA  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14059  011E00  0EF0               	movlw	-16
 14060  011E02  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14061  011E08  0EF1               	movlw	-15
 14062  011E0A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14063  011E10  0EF2               	movlw	-14
 14064  011E12  0060  F103  FFE3   	movff	btemp+11,plusw1
 14065  011E18                     l6515:
 14066                           
 14067                           ;stkvar	_b @ sp[(-13)+-4]
 14068  011E18  0EF1               	movlw	-15
 14069  011E1A  8EE3               	bsf	plusw1,7,c
 14070  011E1C  D018               	goto	l6519
 14071  011E1E                     l6517:
 14072  011E1E  0E00               	movlw	0
 14073  011E20  6E3D               	movwf	(btemp+8)^0,c
 14074  011E22  0E00               	movlw	0
 14075  011E24  6E3E               	movwf	(btemp+9)^0,c
 14076  011E26  0E00               	movlw	0
 14077  011E28  6E3F               	movwf	(btemp+10)^0,c
 14078  011E2A  0E00               	movlw	0
 14079  011E2C  6E40               	movwf	(btemp+11)^0,c
 14080                           
 14081                           ;stkvar	_b @ sp[(-13)+-4]
 14082  011E2E  0EEF               	movlw	-17
 14083  011E30  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14084  011E36  0EF0               	movlw	-16
 14085  011E38  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14086  011E3E  0EF1               	movlw	-15
 14087  011E40  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14088  011E46  0EF2               	movlw	-14
 14089  011E48  0060  F103  FFE3   	movff	btemp+11,plusw1
 14090  011E4E                     l6519:
 14091                           
 14092                           ;stkvar	_a @ sp[(-13)+-8]
 14093  011E4E  0EEE               	movlw	238
 14094  011E50  24E1               	addwf	fsr1l,w,c
 14095  011E52  6ED9               	movwf	fsr2l,c
 14096  011E54  0EFF               	movlw	255
 14097  011E56  20E2               	addwfc	fsr1h,w,c
 14098  011E58  6EDA               	movwf	fsr2h,c
 14099  011E5A  50DF               	movf	indf2,w,c
 14100  011E5C  6E40               	movwf	(btemp+11)^0,c
 14101  011E5E  0E80               	movlw	128
 14102  011E60  1640               	andwf	(btemp+11)^0,f,c
 14103                           
 14104                           ;stkvar	_sign @ sp[(-13)+12]
 14105  011E62  50E1               	movf	fsr1l,w,c
 14106  011E64  0FFF               	addlw	-1
 14107  011E66  6ED9               	movwf	fsr2l,c
 14108  011E68  50E2               	movf	fsr1h,w,c
 14109  011E6A  6EDA               	movwf	fsr2h,c
 14110  011E6C  0EFF               	movlw	255
 14111  011E6E  22DA               	addwfc	fsr2h,f,c
 14112  011E70  5040               	movf	(btemp+11)^0,w,c
 14113  011E72  1ADF               	xorwf	indf2,f,c
 14114                           
 14115                           ;stkvar	_a @ sp[(-13)+-8]
 14116  011E74  0EEE               	movlw	238
 14117  011E76  24E1               	addwf	fsr1l,w,c
 14118  011E78  6ED9               	movwf	fsr2l,c
 14119  011E7A  0EFF               	movlw	255
 14120  011E7C  20E2               	addwfc	fsr1h,w,c
 14121  011E7E  6EDA               	movwf	fsr2h,c
 14122  011E80  50DF               	movf	indf2,w,c
 14123  011E82  6E40               	movwf	(btemp+11)^0,c
 14124  011E84  90D8               	bcf	status,0,c
 14125  011E86  3440               	rlcf	(btemp+11)^0,w,c
 14126  011E88  6E3F               	movwf	(btemp+10)^0,c
 14127                           
 14128                           ;stkvar	_aexp @ sp[(-13)+11]
 14129  011E8A  0EFE               	movlw	-2
 14130  011E8C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14131                           
 14132                           ;stkvar	_a @ sp[(-13)+-8]
 14133  011E92  0EED               	movlw	237
 14134  011E94  24E1               	addwf	fsr1l,w,c
 14135  011E96  6ED9               	movwf	fsr2l,c
 14136  011E98  0EFF               	movlw	255
 14137  011E9A  20E2               	addwfc	fsr1h,w,c
 14138  011E9C  6EDA               	movwf	fsr2h,c
 14139  011E9E  AEDF               	btfss	indf2,7,c
 14140  011EA0  D002               	goto	l6527
 14141                           
 14142                           ;stkvar	_aexp @ sp[(-13)+11]
 14143  011EA2  0EFE               	movlw	-2
 14144  011EA4  80E3               	bsf	plusw1,0,c
 14145  011EA6                     l6527:
 14146                           
 14147                           ;stkvar	_aexp @ sp[(-13)+11]
 14148  011EA6  0EFE               	movlw	-2
 14149  011EA8  50E3               	movf	plusw1,w,c
 14150  011EAA  B4D8               	btfsc	status,2,c
 14151  011EAC  D01F               	goto	l6535
 14152                           
 14153                           ;stkvar	_aexp @ sp[(-13)+11]
 14154  011EAE  0EFE               	movlw	-2
 14155  011EB0  28E3               	incf	plusw1,w,c
 14156  011EB2  A4D8               	btfss	status,2,c
 14157  011EB4  D018               	goto	l6533
 14158  011EB6  0E00               	movlw	0
 14159  011EB8  6E3D               	movwf	(btemp+8)^0,c
 14160  011EBA  0E00               	movlw	0
 14161  011EBC  6E3E               	movwf	(btemp+9)^0,c
 14162  011EBE  0E00               	movlw	0
 14163  011EC0  6E3F               	movwf	(btemp+10)^0,c
 14164  011EC2  0E00               	movlw	0
 14165  011EC4  6E40               	movwf	(btemp+11)^0,c
 14166                           
 14167                           ;stkvar	_a @ sp[(-13)+-8]
 14168  011EC6  0EEB               	movlw	-21
 14169  011EC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14170  011ECE  0EEC               	movlw	-20
 14171  011ED0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14172  011ED6  0EED               	movlw	-19
 14173  011ED8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14174  011EDE  0EEE               	movlw	-18
 14175  011EE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14176  011EE6                     l6533:
 14177                           
 14178                           ;stkvar	_a @ sp[(-13)+-8]
 14179  011EE6  0EED               	movlw	-19
 14180  011EE8  8EE3               	bsf	plusw1,7,c
 14181  011EEA  D018               	goto	l6537
 14182  011EEC                     l6535:
 14183  011EEC  0E00               	movlw	0
 14184  011EEE  6E3D               	movwf	(btemp+8)^0,c
 14185  011EF0  0E00               	movlw	0
 14186  011EF2  6E3E               	movwf	(btemp+9)^0,c
 14187  011EF4  0E00               	movlw	0
 14188  011EF6  6E3F               	movwf	(btemp+10)^0,c
 14189  011EF8  0E00               	movlw	0
 14190  011EFA  6E40               	movwf	(btemp+11)^0,c
 14191                           
 14192                           ;stkvar	_a @ sp[(-13)+-8]
 14193  011EFC  0EEB               	movlw	-21
 14194  011EFE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14195  011F04  0EEC               	movlw	-20
 14196  011F06  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14197  011F0C  0EED               	movlw	-19
 14198  011F0E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14199  011F14  0EEE               	movlw	-18
 14200  011F16  0060  F103  FFE3   	movff	btemp+11,plusw1
 14201  011F1C                     l6537:
 14202                           
 14203                           ;stkvar	_aexp @ sp[(-13)+11]
 14204  011F1C  0EFE               	movlw	-2
 14205  011F1E  50E3               	movf	plusw1,w,c
 14206  011F20  B4D8               	btfsc	status,2,c
 14207  011F22  D004               	goto	u5600
 14208                           
 14209                           ;stkvar	_bexp @ sp[(-13)+10]
 14210  011F24  0EFD               	movlw	-3
 14211  011F26  50E3               	movf	plusw1,w,c
 14212  011F28  A4D8               	btfss	status,2,c
 14213  011F2A  D009               	goto	l6545
 14214  011F2C                     u5600:
 14215  011F2C  0E00               	movlw	0
 14216  011F2E  6E35               	movwf	btemp^0,c
 14217  011F30  0E00               	movlw	0
 14218  011F32  6E36               	movwf	(btemp+1)^0,c
 14219  011F34  0E00               	movlw	0
 14220  011F36  6E37               	movwf	(btemp+2)^0,c
 14221  011F38  0E00               	movlw	0
 14222  011F3A  6E38               	movwf	(btemp+3)^0,c
 14223  011F3C  D332               	goto	l2581
 14224  011F3E                     l6545:
 14225                           
 14226                           ;stkvar	_b @ sp[(-13)+-4]
 14227  011F3E  0EEF               	movlw	-17
 14228  011F40  006F FF8C  F040    	movff	plusw1,btemp+11
 14229                           
 14230                           ;stkvar	_a @ sp[(-13)+-8]
 14231  011F46  0EED               	movlw	237
 14232  011F48  24E1               	addwf	fsr1l,w,c
 14233  011F4A  6ED9               	movwf	fsr2l,c
 14234  011F4C  0EFF               	movlw	255
 14235  011F4E  20E2               	addwfc	fsr1h,w,c
 14236  011F50  6EDA               	movwf	fsr2h,c
 14237  011F52  50DF               	movf	indf2,w,c
 14238  011F54  0240               	mulwf	(btemp+11)^0,c
 14239                           
 14240                           ;stkvar	_temp @ sp[(-13)+8]
 14241  011F56  0EFB               	movlw	-5
 14242  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 14243  011F5E  0EFC               	movlw	-4
 14244  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 14245                           
 14246                           ;stkvar	_temp @ sp[(-13)+8]
 14247  011F66  0EFB               	movlw	-5
 14248  011F68  006F FF8C  F040    	movff	plusw1,btemp+11
 14249  011F6E  0060  F100  F039   	movff	btemp+11,btemp+4
 14250  011F74  6A3A               	clrf	(btemp+5)^0,c
 14251  011F76  6A3B               	clrf	(btemp+6)^0,c
 14252  011F78  6A3C               	clrf	(btemp+7)^0,c
 14253                           
 14254                           ;stkvar	_grs @ sp[(-13)+4]
 14255  011F7A  0EF7               	movlw	-9
 14256  011F7C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14257  011F82  0EF8               	movlw	-8
 14258  011F84  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14259  011F8A  0EF9               	movlw	-7
 14260  011F8C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14261  011F92  0EFA               	movlw	-6
 14262  011F94  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14263                           
 14264                           ;stkvar	_temp @ sp[(-13)+8]
 14265  011F9A  0EFC               	movlw	252
 14266  011F9C  24E1               	addwf	fsr1l,w,c
 14267  011F9E  6ED9               	movwf	fsr2l,c
 14268  011FA0  0EFF               	movlw	255
 14269  011FA2  20E2               	addwfc	fsr1h,w,c
 14270  011FA4  6EDA               	movwf	fsr2h,c
 14271  011FA6  50DF               	movf	indf2,w,c
 14272  011FA8  6E40               	movwf	(btemp+11)^0,c
 14273  011FAA  0060  F100  F039   	movff	btemp+11,btemp+4
 14274  011FB0  6A3A               	clrf	(btemp+5)^0,c
 14275  011FB2  6A3B               	clrf	(btemp+6)^0,c
 14276  011FB4  6A3C               	clrf	(btemp+7)^0,c
 14277                           
 14278                           ;stkvar	_prod @ sp[(-13)+0]
 14279  011FB6  0EF3               	movlw	-13
 14280  011FB8  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 14281  011FBE  0EF4               	movlw	-12
 14282  011FC0  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 14283  011FC6  0EF5               	movlw	-11
 14284  011FC8  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14285  011FCE  0EF6               	movlw	-10
 14286  011FD0  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14287                           
 14288                           ;stkvar	_b @ sp[(-13)+-4]
 14289  011FD6  0EF0               	movlw	240
 14290  011FD8  24E1               	addwf	fsr1l,w,c
 14291  011FDA  6ED9               	movwf	fsr2l,c
 14292  011FDC  0EFF               	movlw	255
 14293  011FDE  20E2               	addwfc	fsr1h,w,c
 14294  011FE0  6EDA               	movwf	fsr2h,c
 14295  011FE2  50DF               	movf	indf2,w,c
 14296  011FE4  6E40               	movwf	(btemp+11)^0,c
 14297                           
 14298                           ;stkvar	_a @ sp[(-13)+-8]
 14299  011FE6  0EEC               	movlw	236
 14300  011FE8  24E1               	addwf	fsr1l,w,c
 14301  011FEA  6ED9               	movwf	fsr2l,c
 14302  011FEC  0EFF               	movlw	255
 14303  011FEE  20E2               	addwfc	fsr1h,w,c
 14304  011FF0  6EDA               	movwf	fsr2h,c
 14305  011FF2  50DF               	movf	indf2,w,c
 14306  011FF4  0240               	mulwf	(btemp+11)^0,c
 14307                           
 14308                           ;stkvar	_temp @ sp[(-13)+8]
 14309  011FF6  0EFB               	movlw	-5
 14310  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 14311  011FFE  0EFC               	movlw	-4
 14312  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 14313                           
 14314                           ;stkvar	_grs @ sp[(-13)+4]
 14315  012006  50E1               	movf	fsr1l,w,c
 14316  012008  0FF7               	addlw	-9
 14317  01200A  6ED9               	movwf	fsr2l,c
 14318  01200C  50E2               	movf	fsr1h,w,c
 14319  01200E  6EDA               	movwf	fsr2h,c
 14320  012010  0EFF               	movlw	255
 14321  012012  22DA               	addwfc	fsr2h,f,c
 14322                           
 14323                           ;stkvar	_temp @ sp[(-13)+8]
 14324  012014  0EFB               	movlw	-5
 14325  012016  50E3               	movf	plusw1,w,c
 14326  012018  26DE               	addwf	postinc2,f,c
 14327  01201A  0E00               	movlw	0
 14328  01201C  22DE               	addwfc	postinc2,f,c
 14329  01201E  22DE               	addwfc	postinc2,f,c
 14330  012020  22DE               	addwfc	postinc2,f,c
 14331                           
 14332                           ;stkvar	_prod @ sp[(-13)+0]
 14333  012022  50E1               	movf	fsr1l,w,c
 14334  012024  0FF3               	addlw	-13
 14335  012026  6ED9               	movwf	fsr2l,c
 14336  012028  50E2               	movf	fsr1h,w,c
 14337  01202A  6EDA               	movwf	fsr2h,c
 14338  01202C  0EFF               	movlw	255
 14339  01202E  22DA               	addwfc	fsr2h,f,c
 14340                           
 14341                           ;stkvar	_temp @ sp[(-13)+8]
 14342  012030  0EFC               	movlw	252
 14343  012032  24E1               	addwf	fsr1l,w,c
 14344  012034  6EE9               	movwf	fsr0l,c
 14345  012036  0EFF               	movlw	255
 14346  012038  20E2               	addwfc	fsr1h,w,c
 14347  01203A  6EEA               	movwf	fsr0h,c
 14348  01203C  50EF               	movf	indf0,w,c
 14349  01203E  26DE               	addwf	postinc2,f,c
 14350  012040  0E00               	movlw	0
 14351  012042  22DE               	addwfc	postinc2,f,c
 14352  012044  22DE               	addwfc	postinc2,f,c
 14353  012046  22DE               	addwfc	postinc2,f,c
 14354                           
 14355                           ;stkvar	_b @ sp[(-13)+-4]
 14356  012048  0EF1               	movlw	241
 14357  01204A  24E1               	addwf	fsr1l,w,c
 14358  01204C  6ED9               	movwf	fsr2l,c
 14359  01204E  0EFF               	movlw	255
 14360  012050  20E2               	addwfc	fsr1h,w,c
 14361  012052  6EDA               	movwf	fsr2h,c
 14362  012054  50DF               	movf	indf2,w,c
 14363  012056  6E40               	movwf	(btemp+11)^0,c
 14364                           
 14365                           ;stkvar	_a @ sp[(-13)+-8]
 14366  012058  0EEB               	movlw	-21
 14367  01205A  50E3               	movf	plusw1,w,c
 14368  01205C  0240               	mulwf	(btemp+11)^0,c
 14369                           
 14370                           ;stkvar	_temp @ sp[(-13)+8]
 14371  01205E  0EFB               	movlw	-5
 14372  012060  006F FFCF FFE3     	movff	prodl,plusw1
 14373  012066  0EFC               	movlw	-4
 14374  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 14375                           
 14376                           ;stkvar	_grs @ sp[(-13)+4]
 14377  01206E  50E1               	movf	fsr1l,w,c
 14378  012070  0FF7               	addlw	-9
 14379  012072  6ED9               	movwf	fsr2l,c
 14380  012074  50E2               	movf	fsr1h,w,c
 14381  012076  6EDA               	movwf	fsr2h,c
 14382  012078  0EFF               	movlw	255
 14383  01207A  22DA               	addwfc	fsr2h,f,c
 14384                           
 14385                           ;stkvar	_temp @ sp[(-13)+8]
 14386  01207C  0EFB               	movlw	-5
 14387  01207E  50E3               	movf	plusw1,w,c
 14388  012080  26DE               	addwf	postinc2,f,c
 14389  012082  0E00               	movlw	0
 14390  012084  22DE               	addwfc	postinc2,f,c
 14391  012086  22DE               	addwfc	postinc2,f,c
 14392  012088  22DE               	addwfc	postinc2,f,c
 14393                           
 14394                           ;stkvar	_prod @ sp[(-13)+0]
 14395  01208A  50E1               	movf	fsr1l,w,c
 14396  01208C  0FF3               	addlw	-13
 14397  01208E  6ED9               	movwf	fsr2l,c
 14398  012090  50E2               	movf	fsr1h,w,c
 14399  012092  6EDA               	movwf	fsr2h,c
 14400  012094  0EFF               	movlw	255
 14401  012096  22DA               	addwfc	fsr2h,f,c
 14402                           
 14403                           ;stkvar	_temp @ sp[(-13)+8]
 14404  012098  0EFC               	movlw	252
 14405  01209A  24E1               	addwf	fsr1l,w,c
 14406  01209C  6EE9               	movwf	fsr0l,c
 14407  01209E  0EFF               	movlw	255
 14408  0120A0  20E2               	addwfc	fsr1h,w,c
 14409  0120A2  6EEA               	movwf	fsr0h,c
 14410  0120A4  50EF               	movf	indf0,w,c
 14411  0120A6  26DE               	addwf	postinc2,f,c
 14412  0120A8  0E00               	movlw	0
 14413  0120AA  22DE               	addwfc	postinc2,f,c
 14414  0120AC  22DE               	addwfc	postinc2,f,c
 14415  0120AE  22DE               	addwfc	postinc2,f,c
 14416                           
 14417                           ;stkvar	_grs @ sp[(-13)+4]
 14418  0120B0  50E1               	movf	fsr1l,w,c
 14419  0120B2  0FF7               	addlw	-9
 14420  0120B4  6ED9               	movwf	fsr2l,c
 14421  0120B6  50E2               	movf	fsr1h,w,c
 14422  0120B8  6EDA               	movwf	fsr2h,c
 14423  0120BA  0EFF               	movlw	255
 14424  0120BC  22DA               	addwfc	fsr2h,f,c
 14425  0120BE  0E08               	movlw	8
 14426  0120C0                     u5615:
 14427  0120C0  90D8               	bcf	status,0,c
 14428  0120C2  36DE               	rlcf	postinc2,f,c
 14429  0120C4  36DE               	rlcf	postinc2,f,c
 14430  0120C6  36DE               	rlcf	postinc2,f,c
 14431  0120C8  36DD               	rlcf	postdec2,f,c
 14432  0120CA  52DD               	movf	postdec2,f,c
 14433  0120CC  52DD               	movf	postdec2,f,c
 14434  0120CE  2EE8               	decfsz	wreg,f,c
 14435  0120D0  D7F7               	goto	u5615
 14436                           
 14437                           ;stkvar	_b @ sp[(-13)+-4]
 14438  0120D2  0EF0               	movlw	240
 14439  0120D4  24E1               	addwf	fsr1l,w,c
 14440  0120D6  6ED9               	movwf	fsr2l,c
 14441  0120D8  0EFF               	movlw	255
 14442  0120DA  20E2               	addwfc	fsr1h,w,c
 14443  0120DC  6EDA               	movwf	fsr2h,c
 14444  0120DE  50DF               	movf	indf2,w,c
 14445  0120E0  6E40               	movwf	(btemp+11)^0,c
 14446                           
 14447                           ;stkvar	_a @ sp[(-13)+-8]
 14448  0120E2  0EEB               	movlw	-21
 14449  0120E4  50E3               	movf	plusw1,w,c
 14450  0120E6  0240               	mulwf	(btemp+11)^0,c
 14451                           
 14452                           ;stkvar	_temp @ sp[(-13)+8]
 14453  0120E8  0EFB               	movlw	-5
 14454  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 14455  0120F0  0EFC               	movlw	-4
 14456  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 14457                           
 14458                           ;stkvar	_temp @ sp[(-13)+8]
 14459  0120F8  0EFB               	movlw	-5
 14460  0120FA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14461  012100  0EFC               	movlw	-4
 14462  012102  006F FF8C  F040    	movff	plusw1,btemp+11
 14463                           
 14464                           ;stkvar	_grs @ sp[(-13)+4]
 14465  012108  50E1               	movf	fsr1l,w,c
 14466  01210A  0FF7               	addlw	-9
 14467  01210C  6ED9               	movwf	fsr2l,c
 14468  01210E  50E2               	movf	fsr1h,w,c
 14469  012110  6EDA               	movwf	fsr2h,c
 14470  012112  0EFF               	movlw	255
 14471  012114  22DA               	addwfc	fsr2h,f,c
 14472  012116  503F               	movf	(btemp+10)^0,w,c
 14473  012118  26DE               	addwf	postinc2,f,c
 14474  01211A  5040               	movf	(btemp+11)^0,w,c
 14475  01211C  22DE               	addwfc	postinc2,f,c
 14476  01211E  0E00               	movlw	0
 14477  012120  22DE               	addwfc	postinc2,f,c
 14478  012122  22DE               	addwfc	postinc2,f,c
 14479                           
 14480                           ;stkvar	_b @ sp[(-13)+-4]
 14481  012124  0EEF               	movlw	-17
 14482  012126  006F FF8C  F040    	movff	plusw1,btemp+11
 14483                           
 14484                           ;stkvar	_a @ sp[(-13)+-8]
 14485  01212C  0EEC               	movlw	236
 14486  01212E  24E1               	addwf	fsr1l,w,c
 14487  012130  6ED9               	movwf	fsr2l,c
 14488  012132  0EFF               	movlw	255
 14489  012134  20E2               	addwfc	fsr1h,w,c
 14490  012136  6EDA               	movwf	fsr2h,c
 14491  012138  50DF               	movf	indf2,w,c
 14492  01213A  0240               	mulwf	(btemp+11)^0,c
 14493                           
 14494                           ;stkvar	_temp @ sp[(-13)+8]
 14495  01213C  0EFB               	movlw	-5
 14496  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 14497  012144  0EFC               	movlw	-4
 14498  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 14499                           
 14500                           ;stkvar	_temp @ sp[(-13)+8]
 14501  01214C  0EFB               	movlw	-5
 14502  01214E  006F FF8C  F03F    	movff	plusw1,btemp+10
 14503  012154  0EFC               	movlw	-4
 14504  012156  006F FF8C  F040    	movff	plusw1,btemp+11
 14505                           
 14506                           ;stkvar	_grs @ sp[(-13)+4]
 14507  01215C  50E1               	movf	fsr1l,w,c
 14508  01215E  0FF7               	addlw	-9
 14509  012160  6ED9               	movwf	fsr2l,c
 14510  012162  50E2               	movf	fsr1h,w,c
 14511  012164  6EDA               	movwf	fsr2h,c
 14512  012166  0EFF               	movlw	255
 14513  012168  22DA               	addwfc	fsr2h,f,c
 14514  01216A  503F               	movf	(btemp+10)^0,w,c
 14515  01216C  26DE               	addwf	postinc2,f,c
 14516  01216E  5040               	movf	(btemp+11)^0,w,c
 14517  012170  22DE               	addwfc	postinc2,f,c
 14518  012172  0E00               	movlw	0
 14519  012174  22DE               	addwfc	postinc2,f,c
 14520  012176  22DE               	addwfc	postinc2,f,c
 14521                           
 14522                           ;stkvar	_grs @ sp[(-13)+4]
 14523  012178  50E1               	movf	fsr1l,w,c
 14524  01217A  0FF7               	addlw	-9
 14525  01217C  6ED9               	movwf	fsr2l,c
 14526  01217E  50E2               	movf	fsr1h,w,c
 14527  012180  6EDA               	movwf	fsr2h,c
 14528  012182  0EFF               	movlw	255
 14529  012184  22DA               	addwfc	fsr2h,f,c
 14530  012186  0E08               	movlw	8
 14531  012188                     u5625:
 14532  012188  90D8               	bcf	status,0,c
 14533  01218A  36DE               	rlcf	postinc2,f,c
 14534  01218C  36DE               	rlcf	postinc2,f,c
 14535  01218E  36DE               	rlcf	postinc2,f,c
 14536  012190  36DD               	rlcf	postdec2,f,c
 14537  012192  52DD               	movf	postdec2,f,c
 14538  012194  52DD               	movf	postdec2,f,c
 14539  012196  2EE8               	decfsz	wreg,f,c
 14540  012198  D7F7               	goto	u5625
 14541                           
 14542                           ;stkvar	_b @ sp[(-13)+-4]
 14543  01219A  0EEF               	movlw	-17
 14544  01219C  006F FF8C  F040    	movff	plusw1,btemp+11
 14545                           
 14546                           ;stkvar	_a @ sp[(-13)+-8]
 14547  0121A2  0EEB               	movlw	-21
 14548  0121A4  50E3               	movf	plusw1,w,c
 14549  0121A6  0240               	mulwf	(btemp+11)^0,c
 14550                           
 14551                           ;stkvar	_temp @ sp[(-13)+8]
 14552  0121A8  0EFB               	movlw	-5
 14553  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 14554  0121B0  0EFC               	movlw	-4
 14555  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 14556                           
 14557                           ;stkvar	_temp @ sp[(-13)+8]
 14558  0121B8  0EFB               	movlw	-5
 14559  0121BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 14560  0121C0  0EFC               	movlw	-4
 14561  0121C2  006F FF8C  F040    	movff	plusw1,btemp+11
 14562                           
 14563                           ;stkvar	_grs @ sp[(-13)+4]
 14564  0121C8  50E1               	movf	fsr1l,w,c
 14565  0121CA  0FF7               	addlw	-9
 14566  0121CC  6ED9               	movwf	fsr2l,c
 14567  0121CE  50E2               	movf	fsr1h,w,c
 14568  0121D0  6EDA               	movwf	fsr2h,c
 14569  0121D2  0EFF               	movlw	255
 14570  0121D4  22DA               	addwfc	fsr2h,f,c
 14571  0121D6  503F               	movf	(btemp+10)^0,w,c
 14572  0121D8  26DE               	addwf	postinc2,f,c
 14573  0121DA  5040               	movf	(btemp+11)^0,w,c
 14574  0121DC  22DE               	addwfc	postinc2,f,c
 14575  0121DE  0E00               	movlw	0
 14576  0121E0  22DE               	addwfc	postinc2,f,c
 14577  0121E2  22DE               	addwfc	postinc2,f,c
 14578                           
 14579                           ;stkvar	_b @ sp[(-13)+-4]
 14580  0121E4  0EF0               	movlw	240
 14581  0121E6  24E1               	addwf	fsr1l,w,c
 14582  0121E8  6ED9               	movwf	fsr2l,c
 14583  0121EA  0EFF               	movlw	255
 14584  0121EC  20E2               	addwfc	fsr1h,w,c
 14585  0121EE  6EDA               	movwf	fsr2h,c
 14586  0121F0  50DF               	movf	indf2,w,c
 14587  0121F2  6E40               	movwf	(btemp+11)^0,c
 14588                           
 14589                           ;stkvar	_a @ sp[(-13)+-8]
 14590  0121F4  0EED               	movlw	237
 14591  0121F6  24E1               	addwf	fsr1l,w,c
 14592  0121F8  6ED9               	movwf	fsr2l,c
 14593  0121FA  0EFF               	movlw	255
 14594  0121FC  20E2               	addwfc	fsr1h,w,c
 14595  0121FE  6EDA               	movwf	fsr2h,c
 14596  012200  50DF               	movf	indf2,w,c
 14597  012202  0240               	mulwf	(btemp+11)^0,c
 14598                           
 14599                           ;stkvar	_temp @ sp[(-13)+8]
 14600  012204  0EFB               	movlw	-5
 14601  012206  006F FFCF FFE3     	movff	prodl,plusw1
 14602  01220C  0EFC               	movlw	-4
 14603  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 14604                           
 14605                           ;stkvar	_temp @ sp[(-13)+8]
 14606  012214  0EFB               	movlw	-5
 14607  012216  006F FF8C  F03F    	movff	plusw1,btemp+10
 14608  01221C  0EFC               	movlw	-4
 14609  01221E  006F FF8C  F040    	movff	plusw1,btemp+11
 14610                           
 14611                           ;stkvar	_prod @ sp[(-13)+0]
 14612  012224  50E1               	movf	fsr1l,w,c
 14613  012226  0FF3               	addlw	-13
 14614  012228  6ED9               	movwf	fsr2l,c
 14615  01222A  50E2               	movf	fsr1h,w,c
 14616  01222C  6EDA               	movwf	fsr2h,c
 14617  01222E  0EFF               	movlw	255
 14618  012230  22DA               	addwfc	fsr2h,f,c
 14619  012232  503F               	movf	(btemp+10)^0,w,c
 14620  012234  26DE               	addwf	postinc2,f,c
 14621  012236  5040               	movf	(btemp+11)^0,w,c
 14622  012238  22DE               	addwfc	postinc2,f,c
 14623  01223A  0E00               	movlw	0
 14624  01223C  22DE               	addwfc	postinc2,f,c
 14625  01223E  22DE               	addwfc	postinc2,f,c
 14626                           
 14627                           ;stkvar	_b @ sp[(-13)+-4]
 14628  012240  0EF1               	movlw	241
 14629  012242  24E1               	addwf	fsr1l,w,c
 14630  012244  6ED9               	movwf	fsr2l,c
 14631  012246  0EFF               	movlw	255
 14632  012248  20E2               	addwfc	fsr1h,w,c
 14633  01224A  6EDA               	movwf	fsr2h,c
 14634  01224C  50DF               	movf	indf2,w,c
 14635  01224E  6E40               	movwf	(btemp+11)^0,c
 14636                           
 14637                           ;stkvar	_a @ sp[(-13)+-8]
 14638  012250  0EEC               	movlw	236
 14639  012252  24E1               	addwf	fsr1l,w,c
 14640  012254  6ED9               	movwf	fsr2l,c
 14641  012256  0EFF               	movlw	255
 14642  012258  20E2               	addwfc	fsr1h,w,c
 14643  01225A  6EDA               	movwf	fsr2h,c
 14644  01225C  50DF               	movf	indf2,w,c
 14645  01225E  0240               	mulwf	(btemp+11)^0,c
 14646                           
 14647                           ;stkvar	_temp @ sp[(-13)+8]
 14648  012260  0EFB               	movlw	-5
 14649  012262  006F FFCF FFE3     	movff	prodl,plusw1
 14650  012268  0EFC               	movlw	-4
 14651  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 14652                           
 14653                           ;stkvar	_temp @ sp[(-13)+8]
 14654  012270  0EFB               	movlw	-5
 14655  012272  006F FF8C  F03F    	movff	plusw1,btemp+10
 14656  012278  0EFC               	movlw	-4
 14657  01227A  006F FF8C  F040    	movff	plusw1,btemp+11
 14658                           
 14659                           ;stkvar	_prod @ sp[(-13)+0]
 14660  012280  50E1               	movf	fsr1l,w,c
 14661  012282  0FF3               	addlw	-13
 14662  012284  6ED9               	movwf	fsr2l,c
 14663  012286  50E2               	movf	fsr1h,w,c
 14664  012288  6EDA               	movwf	fsr2h,c
 14665  01228A  0EFF               	movlw	255
 14666  01228C  22DA               	addwfc	fsr2h,f,c
 14667  01228E  503F               	movf	(btemp+10)^0,w,c
 14668  012290  26DE               	addwf	postinc2,f,c
 14669  012292  5040               	movf	(btemp+11)^0,w,c
 14670  012294  22DE               	addwfc	postinc2,f,c
 14671  012296  0E00               	movlw	0
 14672  012298  22DE               	addwfc	postinc2,f,c
 14673  01229A  22DE               	addwfc	postinc2,f,c
 14674                           
 14675                           ;stkvar	_b @ sp[(-13)+-4]
 14676  01229C  0EF1               	movlw	241
 14677  01229E  24E1               	addwf	fsr1l,w,c
 14678  0122A0  6ED9               	movwf	fsr2l,c
 14679  0122A2  0EFF               	movlw	255
 14680  0122A4  20E2               	addwfc	fsr1h,w,c
 14681  0122A6  6EDA               	movwf	fsr2h,c
 14682  0122A8  50DF               	movf	indf2,w,c
 14683  0122AA  6E40               	movwf	(btemp+11)^0,c
 14684                           
 14685                           ;stkvar	_a @ sp[(-13)+-8]
 14686  0122AC  0EED               	movlw	237
 14687  0122AE  24E1               	addwf	fsr1l,w,c
 14688  0122B0  6ED9               	movwf	fsr2l,c
 14689  0122B2  0EFF               	movlw	255
 14690  0122B4  20E2               	addwfc	fsr1h,w,c
 14691  0122B6  6EDA               	movwf	fsr2h,c
 14692  0122B8  50DF               	movf	indf2,w,c
 14693  0122BA  0240               	mulwf	(btemp+11)^0,c
 14694                           
 14695                           ;stkvar	_temp @ sp[(-13)+8]
 14696  0122BC  0EFB               	movlw	-5
 14697  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 14698  0122C4  0EFC               	movlw	-4
 14699  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 14700                           
 14701                           ;stkvar	_temp @ sp[(-13)+8]
 14702  0122CC  0EFB               	movlw	-5
 14703  0122CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 14704  0122D4  0EFC               	movlw	-4
 14705  0122D6  006F FF8C  F040    	movff	plusw1,btemp+11
 14706  0122DC  503F               	movf	(btemp+10)^0,w,c
 14707  0122DE  6E39               	movwf	(btemp+4)^0,c
 14708  0122E0  5040               	movf	(btemp+11)^0,w,c
 14709  0122E2  6E3A               	movwf	(btemp+5)^0,c
 14710  0122E4  6A3B               	clrf	(btemp+6)^0,c
 14711  0122E6  6A3C               	clrf	(btemp+7)^0,c
 14712  0122E8  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 14713  0122EE  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 14714  0122F4  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 14715  0122FA  6A39               	clrf	(btemp+4)^0,c
 14716                           
 14717                           ;stkvar	_prod @ sp[(-13)+0]
 14718  0122FC  50E1               	movf	fsr1l,w,c
 14719  0122FE  0FF3               	addlw	-13
 14720  012300  6ED9               	movwf	fsr2l,c
 14721  012302  50E2               	movf	fsr1h,w,c
 14722  012304  6EDA               	movwf	fsr2h,c
 14723  012306  0EFF               	movlw	255
 14724  012308  22DA               	addwfc	fsr2h,f,c
 14725  01230A  5039               	movf	(btemp+4)^0,w,c
 14726  01230C  26DE               	addwf	postinc2,f,c
 14727  01230E  503A               	movf	(btemp+5)^0,w,c
 14728  012310  22DE               	addwfc	postinc2,f,c
 14729  012312  503B               	movf	(btemp+6)^0,w,c
 14730  012314  22DE               	addwfc	postinc2,f,c
 14731  012316  503C               	movf	(btemp+7)^0,w,c
 14732  012318  22DE               	addwfc	postinc2,f,c
 14733                           
 14734                           ;stkvar	_prod @ sp[(-13)+0]
 14735  01231A  50E1               	movf	fsr1l,w,c
 14736  01231C  0FF3               	addlw	-13
 14737  01231E  6ED9               	movwf	fsr2l,c
 14738  012320  50E2               	movf	fsr1h,w,c
 14739  012322  6EDA               	movwf	fsr2h,c
 14740  012324  0EFF               	movlw	255
 14741  012326  22DA               	addwfc	fsr2h,f,c
 14742                           
 14743                           ;stkvar	_grs @ sp[(-13)+4]
 14744  012328  0EFA               	movlw	250
 14745  01232A  24E1               	addwf	fsr1l,w,c
 14746  01232C  6EE9               	movwf	fsr0l,c
 14747  01232E  0EFF               	movlw	255
 14748  012330  20E2               	addwfc	fsr1h,w,c
 14749  012332  6EEA               	movwf	fsr0h,c
 14750  012334  50EF               	movf	indf0,w,c
 14751  012336  26DE               	addwf	postinc2,f,c
 14752  012338  0E00               	movlw	0
 14753  01233A  22DE               	addwfc	postinc2,f,c
 14754  01233C  22DE               	addwfc	postinc2,f,c
 14755  01233E  22DE               	addwfc	postinc2,f,c
 14756                           
 14757                           ;stkvar	_grs @ sp[(-13)+4]
 14758  012340  50E1               	movf	fsr1l,w,c
 14759  012342  0FF7               	addlw	-9
 14760  012344  6ED9               	movwf	fsr2l,c
 14761  012346  50E2               	movf	fsr1h,w,c
 14762  012348  6EDA               	movwf	fsr2h,c
 14763  01234A  0EFF               	movlw	255
 14764  01234C  22DA               	addwfc	fsr2h,f,c
 14765  01234E  0E08               	movlw	8
 14766  012350                     u5635:
 14767  012350  90D8               	bcf	status,0,c
 14768  012352  36DE               	rlcf	postinc2,f,c
 14769  012354  36DE               	rlcf	postinc2,f,c
 14770  012356  36DE               	rlcf	postinc2,f,c
 14771  012358  36DD               	rlcf	postdec2,f,c
 14772  01235A  52DD               	movf	postdec2,f,c
 14773  01235C  52DD               	movf	postdec2,f,c
 14774  01235E  2EE8               	decfsz	wreg,f,c
 14775  012360  D7F7               	goto	u5635
 14776  012362  0E82               	movlw	130
 14777  012364  6E3F               	movwf	(btemp+10)^0,c
 14778  012366  0EFF               	movlw	255
 14779  012368  6E40               	movwf	(btemp+11)^0,c
 14780                           
 14781                           ;stkvar	_bexp @ sp[(-13)+10]
 14782  01236A  0EFD               	movlw	-3
 14783  01236C  50E3               	movf	plusw1,w,c
 14784  01236E  6E3D               	movwf	(btemp+8)^0,c
 14785  012370  6A3E               	clrf	(btemp+9)^0,c
 14786                           
 14787                           ;stkvar	_aexp @ sp[(-13)+11]
 14788  012372  0EFE               	movlw	-2
 14789  012374  50E3               	movf	plusw1,w,c
 14790  012376  263D               	addwf	(btemp+8)^0,f,c
 14791  012378  0E00               	movlw	0
 14792  01237A  223E               	addwfc	(btemp+9)^0,f,c
 14793  01237C  503F               	movf	(btemp+10)^0,w,c
 14794  01237E  263D               	addwf	(btemp+8)^0,f,c
 14795  012380  5040               	movf	(btemp+11)^0,w,c
 14796  012382  223E               	addwfc	(btemp+9)^0,f,c
 14797                           
 14798                           ;stkvar	_temp @ sp[(-13)+8]
 14799  012384  0EFB               	movlw	-5
 14800  012386  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14801  01238C  0EFC               	movlw	-4
 14802  01238E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14803  012394  D021               	goto	l6607
 14804  012396                     l6597:
 14805                           
 14806                           ;stkvar	_prod @ sp[(-13)+0]
 14807  012396  90D8               	bcf	status,0,c
 14808  012398  0EF3               	movlw	-13
 14809  01239A  36E3               	rlcf	plusw1,f,c
 14810  01239C  0EF4               	movlw	-12
 14811  01239E  36E3               	rlcf	plusw1,f,c
 14812  0123A0  0EF5               	movlw	-11
 14813  0123A2  36E3               	rlcf	plusw1,f,c
 14814  0123A4  0EF6               	movlw	-10
 14815  0123A6  36E3               	rlcf	plusw1,f,c
 14816                           
 14817                           ;stkvar	_grs @ sp[(-13)+4]
 14818  0123A8  0EFA               	movlw	-6
 14819  0123AA  AEE3               	btfss	plusw1,7,c
 14820  0123AC  D002               	goto	l6603
 14821                           
 14822                           ;stkvar	_prod @ sp[(-13)+0]
 14823  0123AE  0EF3               	movlw	-13
 14824  0123B0  80E3               	bsf	plusw1,0,c
 14825  0123B2                     l6603:
 14826                           
 14827                           ;stkvar	_grs @ sp[(-13)+4]
 14828  0123B2  90D8               	bcf	status,0,c
 14829  0123B4  0EF7               	movlw	-9
 14830  0123B6  36E3               	rlcf	plusw1,f,c
 14831  0123B8  0EF8               	movlw	-8
 14832  0123BA  36E3               	rlcf	plusw1,f,c
 14833  0123BC  0EF9               	movlw	-7
 14834  0123BE  36E3               	rlcf	plusw1,f,c
 14835  0123C0  0EFA               	movlw	-6
 14836  0123C2  36E3               	rlcf	plusw1,f,c
 14837                           
 14838                           ;stkvar	_temp @ sp[(-13)+8]
 14839  0123C4  50E1               	movf	fsr1l,w,c
 14840  0123C6  0FFB               	addlw	-5
 14841  0123C8  6ED9               	movwf	fsr2l,c
 14842  0123CA  50E2               	movf	fsr1h,w,c
 14843  0123CC  6EDA               	movwf	fsr2h,c
 14844  0123CE  0EFF               	movlw	255
 14845  0123D0  22DA               	addwfc	fsr2h,f,c
 14846  0123D2  06DE               	decf	postinc2,f,c
 14847  0123D4  0E00               	movlw	0
 14848  0123D6  5ADD               	subwfb	postdec2,f,c
 14849  0123D8                     l6607:
 14850                           
 14851                           ;stkvar	_prod @ sp[(-13)+0]
 14852  0123D8  0EF5               	movlw	-11
 14853  0123DA  AEE3               	btfss	plusw1,7,c
 14854  0123DC  D7DC               	goto	l6597
 14855                           
 14856                           ;stkvar	_aexp @ sp[(-13)+11]
 14857  0123DE  0EFE               	movlw	-2
 14858  0123E0  6AE3               	clrf	plusw1,c
 14859                           
 14860                           ;stkvar	_grs @ sp[(-13)+4]
 14861  0123E2  0EFA               	movlw	-6
 14862  0123E4  AEE3               	btfss	plusw1,7,c
 14863  0123E6  D020               	goto	l6621
 14864                           
 14865                           ;stkvar	_grs @ sp[(-13)+4]
 14866  0123E8  50E1               	movf	fsr1l,w,c
 14867  0123EA  0FF7               	addlw	-9
 14868  0123EC  6ED9               	movwf	fsr2l,c
 14869  0123EE  50E2               	movf	fsr1h,w,c
 14870  0123F0  6EDA               	movwf	fsr2h,c
 14871  0123F2  0EFF               	movlw	255
 14872  0123F4  22DA               	addwfc	fsr2h,f,c
 14873  0123F6  0EFF               	movlw	255
 14874  0123F8  14DE               	andwf	postinc2,w,c
 14875  0123FA  6E3D               	movwf	(btemp+8)^0,c
 14876  0123FC  0EFF               	movlw	255
 14877  0123FE  14DE               	andwf	postinc2,w,c
 14878  012400  6E3E               	movwf	(btemp+9)^0,c
 14879  012402  0EFF               	movlw	255
 14880  012404  14DE               	andwf	postinc2,w,c
 14881  012406  6E3F               	movwf	(btemp+10)^0,c
 14882  012408  0E7F               	movlw	127
 14883  01240A  14DE               	andwf	postinc2,w,c
 14884  01240C  6E40               	movwf	(btemp+11)^0,c
 14885  01240E  503D               	movf	(btemp+8)^0,w,c
 14886  012410  103E               	iorwf	(btemp+9)^0,w,c
 14887  012412  103F               	iorwf	(btemp+10)^0,w,c
 14888  012414  1040               	iorwf	(btemp+11)^0,w,c
 14889  012416  B4D8               	btfsc	status,2,c
 14890  012418  D004               	goto	l6617
 14891  01241A                     u5670:
 14892                           
 14893                           ;stkvar	_aexp @ sp[(-13)+11]
 14894  01241A  0EFE               	movlw	-2
 14895  01241C  6AE3               	clrf	plusw1,c
 14896  01241E  2AE3               	incf	plusw1,f,c
 14897  012420  D003               	goto	l6621
 14898  012422                     l6617:
 14899                           
 14900                           ;stkvar	_prod @ sp[(-13)+0]
 14901  012422  0EF3               	movlw	-13
 14902  012424  B0E3               	btfsc	plusw1,0,c
 14903  012426  D7F9               	goto	u5670
 14904  012428                     l6621:
 14905                           
 14906                           ;stkvar	_aexp @ sp[(-13)+11]
 14907  012428  0EFE               	movlw	-2
 14908  01242A  50E3               	movf	plusw1,w,c
 14909  01242C  B4D8               	btfsc	status,2,c
 14910  01242E  D036               	goto	l6631
 14911                           
 14912                           ;stkvar	_prod @ sp[(-13)+0]
 14913  012430  50E1               	movf	fsr1l,w,c
 14914  012432  0FF3               	addlw	-13
 14915  012434  6ED9               	movwf	fsr2l,c
 14916  012436  50E2               	movf	fsr1h,w,c
 14917  012438  6EDA               	movwf	fsr2h,c
 14918  01243A  0EFF               	movlw	255
 14919  01243C  22DA               	addwfc	fsr2h,f,c
 14920  01243E  2ADE               	incf	postinc2,f,c
 14921  012440  0E00               	movlw	0
 14922  012442  22DE               	addwfc	postinc2,f,c
 14923  012444  22DE               	addwfc	postinc2,f,c
 14924  012446  22DE               	addwfc	postinc2,f,c
 14925                           
 14926                           ;stkvar	_prod @ sp[(-13)+0]
 14927  012448  0EF6               	movlw	-10
 14928  01244A  A0E3               	btfss	plusw1,0,c
 14929  01244C  D027               	goto	l6631
 14930  01244E  0E01               	movlw	1
 14931  012450  6E40               	movwf	(btemp+11)^0,c
 14932                           
 14933                           ;stkvar	_prod @ sp[(-13)+0]
 14934  012452  50E1               	movf	fsr1l,w,c
 14935  012454  0FF3               	addlw	-13
 14936  012456  6ED9               	movwf	fsr2l,c
 14937  012458  50E2               	movf	fsr1h,w,c
 14938  01245A  6EDA               	movwf	fsr2h,c
 14939  01245C  0EFF               	movlw	255
 14940  01245E  22DA               	addwfc	fsr2h,f,c
 14941  012460  2840               	incf	(btemp+11)^0,w,c
 14942  012462  52DE               	movf	postinc2,f,c
 14943  012464  D008               	goto	u5710
 14944  012466                     u5715:
 14945  012466  52DE               	movf	postinc2,f,c
 14946  012468  90D8               	bcf	status,0,c
 14947  01246A  BEDC               	btfsc	preinc2,7,c
 14948  01246C  80D8               	bsf	status,0,c
 14949  01246E  32DD               	rrcf	postdec2,f,c
 14950  012470  32DD               	rrcf	postdec2,f,c
 14951  012472  32DD               	rrcf	postdec2,f,c
 14952  012474  32DE               	rrcf	postinc2,f,c
 14953  012476                     u5710:
 14954  012476  2EE8               	decfsz	wreg,f,c
 14955  012478  D7F6               	goto	u5715
 14956                           
 14957                           ;stkvar	_temp @ sp[(-13)+8]
 14958  01247A  0EFB               	movlw	-5
 14959  01247C  50E3               	movf	plusw1,w,c
 14960  01247E  0F01               	addlw	1
 14961  012480  6E35               	movwf	btemp^0,c
 14962  012482  0EFB               	movlw	-5
 14963  012484  0060  F0D7  FFE3   	movff	btemp,plusw1
 14964  01248A  6A35               	clrf	btemp^0,c
 14965  01248C  0EFC               	movlw	-4
 14966  01248E  50E3               	movf	plusw1,w,c
 14967  012490  2035               	addwfc	btemp^0,w,c
 14968  012492  6E35               	movwf	btemp^0,c
 14969  012494  0EFC               	movlw	-4
 14970  012496  0060  F0D7  FFE3   	movff	btemp,plusw1
 14971  01249C                     l6631:
 14972                           
 14973                           ;stkvar	_temp @ sp[(-13)+8]
 14974  01249C  0EFC               	movlw	-4
 14975  01249E  BEE3               	btfsc	plusw1,7,c
 14976  0124A0  D020               	goto	l6635
 14977  0124A2  0EFC               	movlw	-4
 14978  0124A4  50E3               	movf	plusw1,w,c
 14979  0124A6  E104               	bnz	u5720
 14980  0124A8  0EFB               	movlw	-5
 14981  0124AA  28E3               	incf	plusw1,w,c
 14982  0124AC  A0D8               	btfss	status,0,c
 14983  0124AE  D019               	goto	l6635
 14984  0124B0                     u5720:
 14985  0124B0  0E00               	movlw	0
 14986  0124B2  6E3D               	movwf	(btemp+8)^0,c
 14987  0124B4  0E00               	movlw	0
 14988  0124B6  6E3E               	movwf	(btemp+9)^0,c
 14989  0124B8  0E80               	movlw	128
 14990  0124BA  6E3F               	movwf	(btemp+10)^0,c
 14991  0124BC  0E7F               	movlw	127
 14992  0124BE  6E40               	movwf	(btemp+11)^0,c
 14993                           
 14994                           ;stkvar	_prod @ sp[(-13)+0]
 14995  0124C0  0EF3               	movlw	-13
 14996  0124C2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14997  0124C8  0EF4               	movlw	-12
 14998  0124CA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14999  0124D0  0EF5               	movlw	-11
 15000  0124D2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15001  0124D8  0EF6               	movlw	-10
 15002  0124DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 15003  0124E0  D044               	goto	l6651
 15004  0124E2                     l6635:
 15005                           
 15006                           ;stkvar	_temp @ sp[(-13)+8]
 15007  0124E2  0EFC               	movlw	-4
 15008  0124E4  BEE3               	btfsc	plusw1,7,c
 15009  0124E6  D007               	goto	u5730
 15010  0124E8  0EFC               	movlw	-4
 15011  0124EA  50E3               	movf	plusw1,w,c
 15012  0124EC  E10F               	bnz	l6641
 15013  0124EE  0EFB               	movlw	-5
 15014  0124F0  04E3               	decf	plusw1,w,c
 15015  0124F2  B0D8               	btfsc	status,0,c
 15016  0124F4  D00B               	goto	l6641
 15017  0124F6                     u5730:
 15018                           
 15019                           ;stkvar	_prod @ sp[(-13)+0]
 15020  0124F6  0EF3               	movlw	-13
 15021  0124F8  6AE3               	clrf	plusw1,c
 15022  0124FA  0EF4               	movlw	-12
 15023  0124FC  6AE3               	clrf	plusw1,c
 15024  0124FE  0EF5               	movlw	-11
 15025  012500  6AE3               	clrf	plusw1,c
 15026  012502  0EF6               	movlw	-10
 15027  012504  6AE3               	clrf	plusw1,c
 15028                           
 15029                           ;stkvar	_sign @ sp[(-13)+12]
 15030  012506  0EFF               	movlw	-1
 15031  012508  6AE3               	clrf	plusw1,c
 15032  01250A  D02F               	goto	l6651
 15033  01250C                     l6641:
 15034                           
 15035                           ;stkvar	_temp @ sp[(-13)+8]
 15036                           ;stkvar	_bexp @ sp[(-13)+10]
 15037  01250C  0EFB               	movlw	-5
 15038  01250E  006F FF8C  F035    	movff	plusw1,btemp
 15039  012514  0EFD               	movlw	-3
 15040  012516  0060  F0D7  FFE3   	movff	btemp,plusw1
 15041                           
 15042                           ;stkvar	_prod @ sp[(-13)+0]
 15043  01251C  50E1               	movf	fsr1l,w,c
 15044  01251E  0FF3               	addlw	-13
 15045  012520  6ED9               	movwf	fsr2l,c
 15046  012522  50E2               	movf	fsr1h,w,c
 15047  012524  6EDA               	movwf	fsr2h,c
 15048  012526  0EFF               	movlw	255
 15049  012528  22DA               	addwfc	fsr2h,f,c
 15050  01252A  0EFF               	movlw	255
 15051  01252C  16DE               	andwf	postinc2,f,c
 15052  01252E  0EFF               	movlw	255
 15053  012530  16DE               	andwf	postinc2,f,c
 15054  012532  0E7F               	movlw	127
 15055  012534  16DE               	andwf	postinc2,f,c
 15056  012536  0E00               	movlw	0
 15057  012538  16DE               	andwf	postinc2,f,c
 15058                           
 15059                           ;stkvar	_bexp @ sp[(-13)+10]
 15060  01253A  0EFD               	movlw	-3
 15061  01253C  A0E3               	btfss	plusw1,0,c
 15062  01253E  D008               	goto	l6649
 15063                           
 15064                           ;stkvar	_prod @ sp[(-13)+0]
 15065  012540  0EF5               	movlw	245
 15066  012542  24E1               	addwf	fsr1l,w,c
 15067  012544  6ED9               	movwf	fsr2l,c
 15068  012546  0EFF               	movlw	255
 15069  012548  20E2               	addwfc	fsr1h,w,c
 15070  01254A  6EDA               	movwf	fsr2h,c
 15071  01254C  0E00               	movlw	0
 15072  01254E  8EDB               	bsf	plusw2,7,c
 15073  012550                     l6649:
 15074                           
 15075                           ;stkvar	_prod @ sp[(-13)+0]
 15076  012550  0EF6               	movlw	246
 15077  012552  24E1               	addwf	fsr1l,w,c
 15078  012554  6ED9               	movwf	fsr2l,c
 15079  012556  0EFF               	movlw	255
 15080  012558  20E2               	addwfc	fsr1h,w,c
 15081  01255A  6EDA               	movwf	fsr2h,c
 15082                           
 15083                           ;stkvar	_bexp @ sp[(-13)+10]
 15084  01255C  0EFD               	movlw	-3
 15085  01255E  006F FF8C  F040    	movff	plusw1,btemp+11
 15086  012564  90D8               	bcf	status,0,c
 15087  012566  3040               	rrcf	(btemp+11)^0,w,c
 15088  012568  6EDF               	movwf	indf2,c
 15089  01256A                     l6651:
 15090                           
 15091                           ;stkvar	_sign @ sp[(-13)+12]
 15092  01256A  0EFF               	movlw	-1
 15093  01256C  006F FF8C  F040    	movff	plusw1,btemp+11
 15094                           
 15095                           ;stkvar	_prod @ sp[(-13)+0]
 15096  012572  0EF6               	movlw	246
 15097  012574  24E1               	addwf	fsr1l,w,c
 15098  012576  6ED9               	movwf	fsr2l,c
 15099  012578  0EFF               	movlw	255
 15100  01257A  20E2               	addwfc	fsr1h,w,c
 15101  01257C  6EDA               	movwf	fsr2h,c
 15102  01257E  5040               	movf	(btemp+11)^0,w,c
 15103  012580  12DF               	iorwf	indf2,f,c
 15104                           
 15105                           ;stkvar	_prod @ sp[(-13)+0]
 15106  012582  0EF3               	movlw	-13
 15107  012584  006F FF8C  F035    	movff	plusw1,btemp
 15108  01258A  0EF4               	movlw	-12
 15109  01258C  006F FF8C  F036    	movff	plusw1,btemp+1
 15110  012592  0EF5               	movlw	-11
 15111  012594  006F FF8C  F037    	movff	plusw1,btemp+2
 15112  01259A  0EF6               	movlw	-10
 15113  01259C  006F FF8C  F038    	movff	plusw1,btemp+3
 15114  0125A2                     l2581:
 15115                           
 15116                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 15117  0125A2  0EEB               	movlw	235
 15118  0125A4  26E1               	addwf	fsr1l,f,c
 15119  0125A6  0EFF               	movlw	255
 15120  0125A8  22E2               	addwfc	fsr1h,f,c
 15121  0125AA  0012               	return		;funcret
 15122  0125AC                     __end_of___flmul:
 15123                           	opt callstack 0
 15124                           
 15125 ;; *************** function ___flge *****************
 15126 ;; Defined at:
 15127 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  ff1             4  [STACK] unsigned char 
 15130 ;;  ff2             4  [STACK] unsigned char 
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;		None
 15133 ;; Return value:  Size  Location     Type
 15134 ;;		None               void
 15135 ;; Registers used:
 15136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15137 ;; Tracked objects:
 15138 ;;		On entry : 0/4
 15139 ;;		On exit  : 0/0
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15146 ;;Total ram usage:        0 bytes
 15147 ;; Hardware stack levels used:    1
 15148 ;; Hardware stack levels required when called:    6
 15149 ;; This function calls:
 15150 ;;		Nothing
 15151 ;; This function is called by:
 15152 ;;		_efgtoa
 15153 ;; This function uses a reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text50
 15157  015C98                     __ptext50:
 15158                           	opt callstack 0
 15159  015C98                     ___flge:
 15160                           	opt callstack 17
 15161                           
 15162                           ;stkvar	_ff1 @ sp[(0)+-4]
 15163                           
 15164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15165                           ;incstack = 0
 15166  015C98  50E1               	movf	fsr1l,w,c
 15167  015C9A  0FFC               	addlw	-4
 15168  015C9C  6ED9               	movwf	fsr2l,c
 15169  015C9E  50E2               	movf	fsr1h,w,c
 15170  015CA0  6EDA               	movwf	fsr2h,c
 15171  015CA2  0EFF               	movlw	255
 15172  015CA4  22DA               	addwfc	fsr2h,f,c
 15173  015CA6  0E00               	movlw	0
 15174  015CA8  14DE               	andwf	postinc2,w,c
 15175  015CAA  6E3D               	movwf	(btemp+8)^0,c
 15176  015CAC  0E00               	movlw	0
 15177  015CAE  14DE               	andwf	postinc2,w,c
 15178  015CB0  6E3E               	movwf	(btemp+9)^0,c
 15179  015CB2  0E80               	movlw	128
 15180  015CB4  14DE               	andwf	postinc2,w,c
 15181  015CB6  6E3F               	movwf	(btemp+10)^0,c
 15182  015CB8  0E7F               	movlw	127
 15183  015CBA  14DE               	andwf	postinc2,w,c
 15184  015CBC  6E40               	movwf	(btemp+11)^0,c
 15185  015CBE  503D               	movf	(btemp+8)^0,w,c
 15186  015CC0  103E               	iorwf	(btemp+9)^0,w,c
 15187  015CC2  103F               	iorwf	(btemp+10)^0,w,c
 15188  015CC4  1040               	iorwf	(btemp+11)^0,w,c
 15189  015CC6  A4D8               	btfss	status,2,c
 15190  015CC8  D008               	goto	l6767
 15191                           
 15192                           ;stkvar	_ff1 @ sp[(0)+-4]
 15193  015CCA  0EFC               	movlw	-4
 15194  015CCC  6AE3               	clrf	plusw1,c
 15195  015CCE  0EFD               	movlw	-3
 15196  015CD0  6AE3               	clrf	plusw1,c
 15197  015CD2  0EFE               	movlw	-2
 15198  015CD4  6AE3               	clrf	plusw1,c
 15199  015CD6  0EFF               	movlw	-1
 15200  015CD8  6AE3               	clrf	plusw1,c
 15201  015CDA                     l6767:
 15202                           
 15203                           ;stkvar	_ff2 @ sp[(0)+-8]
 15204  015CDA  50E1               	movf	fsr1l,w,c
 15205  015CDC  0FF8               	addlw	-8
 15206  015CDE  6ED9               	movwf	fsr2l,c
 15207  015CE0  50E2               	movf	fsr1h,w,c
 15208  015CE2  6EDA               	movwf	fsr2h,c
 15209  015CE4  0EFF               	movlw	255
 15210  015CE6  22DA               	addwfc	fsr2h,f,c
 15211  015CE8  0E00               	movlw	0
 15212  015CEA  14DE               	andwf	postinc2,w,c
 15213  015CEC  6E3D               	movwf	(btemp+8)^0,c
 15214  015CEE  0E00               	movlw	0
 15215  015CF0  14DE               	andwf	postinc2,w,c
 15216  015CF2  6E3E               	movwf	(btemp+9)^0,c
 15217  015CF4  0E80               	movlw	128
 15218  015CF6  14DE               	andwf	postinc2,w,c
 15219  015CF8  6E3F               	movwf	(btemp+10)^0,c
 15220  015CFA  0E7F               	movlw	127
 15221  015CFC  14DE               	andwf	postinc2,w,c
 15222  015CFE  6E40               	movwf	(btemp+11)^0,c
 15223  015D00  503D               	movf	(btemp+8)^0,w,c
 15224  015D02  103E               	iorwf	(btemp+9)^0,w,c
 15225  015D04  103F               	iorwf	(btemp+10)^0,w,c
 15226  015D06  1040               	iorwf	(btemp+11)^0,w,c
 15227  015D08  A4D8               	btfss	status,2,c
 15228  015D0A  D008               	goto	l2226
 15229                           
 15230                           ;stkvar	_ff2 @ sp[(0)+-8]
 15231  015D0C  0EF8               	movlw	-8
 15232  015D0E  6AE3               	clrf	plusw1,c
 15233  015D10  0EF9               	movlw	-7
 15234  015D12  6AE3               	clrf	plusw1,c
 15235  015D14  0EFA               	movlw	-6
 15236  015D16  6AE3               	clrf	plusw1,c
 15237  015D18  0EFB               	movlw	-5
 15238  015D1A  6AE3               	clrf	plusw1,c
 15239  015D1C                     l2226:
 15240                           
 15241                           ;stkvar	_ff1 @ sp[(0)+-4]
 15242  015D1C  0EFF               	movlw	-1
 15243  015D1E  AEE3               	btfss	plusw1,7,c
 15244  015D20  D024               	goto	l6773
 15245                           
 15246                           ;stkvar	_ff1 @ sp[(0)+-4]
 15247  015D22  0E00               	movlw	0
 15248  015D24  6E3D               	movwf	(btemp+8)^0,c
 15249  015D26  0E00               	movlw	0
 15250  015D28  6E3E               	movwf	(btemp+9)^0,c
 15251  015D2A  0E00               	movlw	0
 15252  015D2C  6E3F               	movwf	(btemp+10)^0,c
 15253  015D2E  0E80               	movlw	128
 15254  015D30  6E40               	movwf	(btemp+11)^0,c
 15255  015D32  0EFC               	movlw	-4
 15256  015D34  50E3               	movf	plusw1,w,c
 15257  015D36  5E3D               	subwf	(btemp+8)^0,f,c
 15258  015D38  0EFD               	movlw	-3
 15259  015D3A  50E3               	movf	plusw1,w,c
 15260  015D3C  5A3E               	subwfb	(btemp+9)^0,f,c
 15261  015D3E  0EFE               	movlw	-2
 15262  015D40  50E3               	movf	plusw1,w,c
 15263  015D42  5A3F               	subwfb	(btemp+10)^0,f,c
 15264  015D44  0EFF               	movlw	-1
 15265  015D46  50E3               	movf	plusw1,w,c
 15266  015D48  5A40               	subwfb	(btemp+11)^0,f,c
 15267                           
 15268                           ;stkvar	_ff1 @ sp[(0)+-4]
 15269  015D4A  0EFC               	movlw	-4
 15270  015D4C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15271  015D52  0EFD               	movlw	-3
 15272  015D54  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15273  015D5A  0EFE               	movlw	-2
 15274  015D5C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15275  015D62  0EFF               	movlw	-1
 15276  015D64  0060  F103  FFE3   	movff	btemp+11,plusw1
 15277  015D6A                     l6773:
 15278                           
 15279                           ;stkvar	_ff2 @ sp[(0)+-8]
 15280  015D6A  0EFB               	movlw	-5
 15281  015D6C  AEE3               	btfss	plusw1,7,c
 15282  015D6E  D024               	goto	l6777
 15283                           
 15284                           ;stkvar	_ff2 @ sp[(0)+-8]
 15285  015D70  0E00               	movlw	0
 15286  015D72  6E3D               	movwf	(btemp+8)^0,c
 15287  015D74  0E00               	movlw	0
 15288  015D76  6E3E               	movwf	(btemp+9)^0,c
 15289  015D78  0E00               	movlw	0
 15290  015D7A  6E3F               	movwf	(btemp+10)^0,c
 15291  015D7C  0E80               	movlw	128
 15292  015D7E  6E40               	movwf	(btemp+11)^0,c
 15293  015D80  0EF8               	movlw	-8
 15294  015D82  50E3               	movf	plusw1,w,c
 15295  015D84  5E3D               	subwf	(btemp+8)^0,f,c
 15296  015D86  0EF9               	movlw	-7
 15297  015D88  50E3               	movf	plusw1,w,c
 15298  015D8A  5A3E               	subwfb	(btemp+9)^0,f,c
 15299  015D8C  0EFA               	movlw	-6
 15300  015D8E  50E3               	movf	plusw1,w,c
 15301  015D90  5A3F               	subwfb	(btemp+10)^0,f,c
 15302  015D92  0EFB               	movlw	-5
 15303  015D94  50E3               	movf	plusw1,w,c
 15304  015D96  5A40               	subwfb	(btemp+11)^0,f,c
 15305                           
 15306                           ;stkvar	_ff2 @ sp[(0)+-8]
 15307  015D98  0EF8               	movlw	-8
 15308  015D9A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15309  015DA0  0EF9               	movlw	-7
 15310  015DA2  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15311  015DA8  0EFA               	movlw	-6
 15312  015DAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15313  015DB0  0EFB               	movlw	-5
 15314  015DB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 15315  015DB8                     l6777:
 15316                           
 15317                           ;stkvar	_ff1 @ sp[(0)+-4]
 15318  015DB8  0EFF               	movlw	-1
 15319  015DBA  7EE3               	btg	plusw1,7,c
 15320                           
 15321                           ;stkvar	_ff2 @ sp[(0)+-8]
 15322  015DBC  0EFB               	movlw	-5
 15323  015DBE  7EE3               	btg	plusw1,7,c
 15324                           
 15325                           ;stkvar	_ff2 @ sp[(0)+-8]
 15326                           ;stkvar	_ff1 @ sp[(0)+-4]
 15327  015DC0  50E1               	movf	fsr1l,w,c
 15328  015DC2  0FFC               	addlw	-4
 15329  015DC4  6ED9               	movwf	fsr2l,c
 15330  015DC6  50E2               	movf	fsr1h,w,c
 15331  015DC8  6EDA               	movwf	fsr2h,c
 15332  015DCA  0EFF               	movlw	255
 15333  015DCC  22DA               	addwfc	fsr2h,f,c
 15334  015DCE  0EF8               	movlw	-8
 15335  015DD0  50E3               	movf	plusw1,w,c
 15336  015DD2  5CDE               	subwf	postinc2,w,c
 15337  015DD4  0EF9               	movlw	-7
 15338  015DD6  50E3               	movf	plusw1,w,c
 15339  015DD8  58DE               	subwfb	postinc2,w,c
 15340  015DDA  0EFA               	movlw	-6
 15341  015DDC  50E3               	movf	plusw1,w,c
 15342  015DDE  58DE               	subwfb	postinc2,w,c
 15343  015DE0  0EFB               	movlw	-5
 15344  015DE2  50E3               	movf	plusw1,w,c
 15345  015DE4  58DE               	subwfb	postinc2,w,c
 15346  015DE6  B0D8               	btfsc	status,0,c
 15347  015DE8  D002               	goto	l6785
 15348  015DEA  9035               	bcf	btemp& (0+255),0,c
 15349  015DEC  D001               	goto	l2233
 15350  015DEE                     l6785:
 15351  015DEE  8035               	bsf	btemp& (0+255),0,c
 15352  015DF0                     l2233:
 15353                           
 15354                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15355  015DF0  0EF8               	movlw	248
 15356  015DF2  26E1               	addwf	fsr1l,f,c
 15357  015DF4  0EFF               	movlw	255
 15358  015DF6  22E2               	addwfc	fsr1h,f,c
 15359  015DF8  0012               	return		;funcret
 15360  015DFA                     __end_of___flge:
 15361                           	opt callstack 0
 15362                           
 15363 ;; *************** function ___fleq *****************
 15364 ;; Defined at:
 15365 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;  ff1             4  [STACK] unsigned char 
 15368 ;;  ff2             4  [STACK] unsigned char 
 15369 ;; Auto vars:     Size  Location     Type
 15370 ;;		None
 15371 ;; Return value:  Size  Location     Type
 15372 ;;		None               void
 15373 ;; Registers used:
 15374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/4
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15384 ;;Total ram usage:        0 bytes
 15385 ;; Hardware stack levels used:    1
 15386 ;; Hardware stack levels required when called:    6
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_efgtoa
 15391 ;; This function uses a reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text51
 15395  016862                     __ptext51:
 15396                           	opt callstack 0
 15397  016862                     ___fleq:
 15398                           	opt callstack 17
 15399                           
 15400                           ;stkvar	_ff1 @ sp[(0)+-4]
 15401                           
 15402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15403                           ;incstack = 0
 15404  016862  50E1               	movf	fsr1l,w,c
 15405  016864  0FFC               	addlw	-4
 15406  016866  6ED9               	movwf	fsr2l,c
 15407  016868  50E2               	movf	fsr1h,w,c
 15408  01686A  6EDA               	movwf	fsr2h,c
 15409  01686C  0EFF               	movlw	255
 15410  01686E  22DA               	addwfc	fsr2h,f,c
 15411  016870  0E00               	movlw	0
 15412  016872  14DE               	andwf	postinc2,w,c
 15413  016874  6E3D               	movwf	(btemp+8)^0,c
 15414  016876  0E00               	movlw	0
 15415  016878  14DE               	andwf	postinc2,w,c
 15416  01687A  6E3E               	movwf	(btemp+9)^0,c
 15417  01687C  0E80               	movlw	128
 15418  01687E  14DE               	andwf	postinc2,w,c
 15419  016880  6E3F               	movwf	(btemp+10)^0,c
 15420  016882  0E7F               	movlw	127
 15421  016884  14DE               	andwf	postinc2,w,c
 15422  016886  6E40               	movwf	(btemp+11)^0,c
 15423  016888  503D               	movf	(btemp+8)^0,w,c
 15424  01688A  103E               	iorwf	(btemp+9)^0,w,c
 15425  01688C  103F               	iorwf	(btemp+10)^0,w,c
 15426  01688E  1040               	iorwf	(btemp+11)^0,w,c
 15427  016890  A4D8               	btfss	status,2,c
 15428  016892  D008               	goto	l6751
 15429                           
 15430                           ;stkvar	_ff1 @ sp[(0)+-4]
 15431  016894  0EFC               	movlw	-4
 15432  016896  6AE3               	clrf	plusw1,c
 15433  016898  0EFD               	movlw	-3
 15434  01689A  6AE3               	clrf	plusw1,c
 15435  01689C  0EFE               	movlw	-2
 15436  01689E  6AE3               	clrf	plusw1,c
 15437  0168A0  0EFF               	movlw	-1
 15438  0168A2  6AE3               	clrf	plusw1,c
 15439  0168A4                     l6751:
 15440                           
 15441                           ;stkvar	_ff2 @ sp[(0)+-8]
 15442  0168A4  50E1               	movf	fsr1l,w,c
 15443  0168A6  0FF8               	addlw	-8
 15444  0168A8  6ED9               	movwf	fsr2l,c
 15445  0168AA  50E2               	movf	fsr1h,w,c
 15446  0168AC  6EDA               	movwf	fsr2h,c
 15447  0168AE  0EFF               	movlw	255
 15448  0168B0  22DA               	addwfc	fsr2h,f,c
 15449  0168B2  0E00               	movlw	0
 15450  0168B4  14DE               	andwf	postinc2,w,c
 15451  0168B6  6E3D               	movwf	(btemp+8)^0,c
 15452  0168B8  0E00               	movlw	0
 15453  0168BA  14DE               	andwf	postinc2,w,c
 15454  0168BC  6E3E               	movwf	(btemp+9)^0,c
 15455  0168BE  0E80               	movlw	128
 15456  0168C0  14DE               	andwf	postinc2,w,c
 15457  0168C2  6E3F               	movwf	(btemp+10)^0,c
 15458  0168C4  0E7F               	movlw	127
 15459  0168C6  14DE               	andwf	postinc2,w,c
 15460  0168C8  6E40               	movwf	(btemp+11)^0,c
 15461  0168CA  503D               	movf	(btemp+8)^0,w,c
 15462  0168CC  103E               	iorwf	(btemp+9)^0,w,c
 15463  0168CE  103F               	iorwf	(btemp+10)^0,w,c
 15464  0168D0  1040               	iorwf	(btemp+11)^0,w,c
 15465  0168D2  A4D8               	btfss	status,2,c
 15466  0168D4  D008               	goto	l6755
 15467                           
 15468                           ;stkvar	_ff2 @ sp[(0)+-8]
 15469  0168D6  0EF8               	movlw	-8
 15470  0168D8  6AE3               	clrf	plusw1,c
 15471  0168DA  0EF9               	movlw	-7
 15472  0168DC  6AE3               	clrf	plusw1,c
 15473  0168DE  0EFA               	movlw	-6
 15474  0168E0  6AE3               	clrf	plusw1,c
 15475  0168E2  0EFB               	movlw	-5
 15476  0168E4  6AE3               	clrf	plusw1,c
 15477  0168E6                     l6755:
 15478                           
 15479                           ;stkvar	_ff2 @ sp[(0)+-8]
 15480                           ;stkvar	_ff1 @ sp[(0)+-4]
 15481  0168E6  50E1               	movf	fsr1l,w,c
 15482  0168E8  0FFC               	addlw	-4
 15483  0168EA  6ED9               	movwf	fsr2l,c
 15484  0168EC  50E2               	movf	fsr1h,w,c
 15485  0168EE  6EDA               	movwf	fsr2h,c
 15486  0168F0  0EFF               	movlw	255
 15487  0168F2  22DA               	addwfc	fsr2h,f,c
 15488  0168F4  0EF8               	movlw	-8
 15489  0168F6  50E3               	movf	plusw1,w,c
 15490  0168F8  18DE               	xorwf	postinc2,w,c
 15491  0168FA  E10D               	bnz	u5910
 15492  0168FC  0EF9               	movlw	-7
 15493  0168FE  50E3               	movf	plusw1,w,c
 15494  016900  18DE               	xorwf	postinc2,w,c
 15495  016902  E109               	bnz	u5910
 15496  016904  0EFA               	movlw	-6
 15497  016906  50E3               	movf	plusw1,w,c
 15498  016908  18DE               	xorwf	postinc2,w,c
 15499  01690A  E105               	bnz	u5910
 15500  01690C  0EFB               	movlw	-5
 15501  01690E  50E3               	movf	plusw1,w,c
 15502  016910  18DE               	xorwf	postinc2,w,c
 15503  016912  B4D8               	btfsc	status,2,c
 15504  016914  D002               	goto	l6759
 15505  016916                     u5910:
 15506  016916  9035               	bcf	btemp& (0+255),0,c
 15507  016918  D001               	goto	l2222
 15508  01691A                     l6759:
 15509  01691A  8035               	bsf	btemp& (0+255),0,c
 15510  01691C                     l2222:
 15511                           
 15512                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15513  01691C  0EF8               	movlw	248
 15514  01691E  26E1               	addwf	fsr1l,f,c
 15515  016920  0EFF               	movlw	255
 15516  016922  22E2               	addwfc	fsr1h,f,c
 15517  016924  0012               	return		;funcret
 15518  016926                     __end_of___fleq:
 15519                           	opt callstack 0
 15520                           
 15521 ;; *************** function ___fldiv *****************
 15522 ;; Defined at:
 15523 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15524 ;; Parameters:    Size  Location     Type
 15525 ;;  b               4  [STACK] unsigned char 
 15526 ;;  a               4  [STACK] unsigned char 
 15527 ;; Auto vars:     Size  Location     Type
 15528 ;;  grs             4  [STACK] unsigned long 
 15529 ;;  rem             4  [STACK] unsigned long 
 15530 ;;  new_exp         2  [STACK] short 
 15531 ;;  aexp            1  [STACK] unsigned char 
 15532 ;;  bexp            1  [STACK] unsigned char 
 15533 ;;  sign            1  [STACK] unsigned char 
 15534 ;; Return value:  Size  Location     Type
 15535 ;;                  4  [STACK] unsigned char 
 15536 ;; Registers used:
 15537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15538 ;; Tracked objects:
 15539 ;;		On entry : 0/0
 15540 ;;		On exit  : 0/0
 15541 ;;		Unchanged: 0/0
 15542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15547 ;;Total ram usage:        0 bytes
 15548 ;; Hardware stack levels used:    1
 15549 ;; Hardware stack levels required when called:    6
 15550 ;; This function calls:
 15551 ;;		Nothing
 15552 ;; This function is called by:
 15553 ;;		_conv_raw_result
 15554 ;;		_lp_filter
 15555 ;;		_efgtoa
 15556 ;; This function uses a reentrant model
 15557 ;;
 15558                           
 15559                           	psect	text52
 15560  012D68                     __ptext52:
 15561                           	opt callstack 0
 15562  012D68                     ___fldiv:
 15563                           	opt callstack 0
 15564                           
 15565                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15566  012D68  0E0D               	movlw	13
 15567  012D6A  26E1               	addwf	fsr1l,f,c
 15568  012D6C  0E00               	movlw	0
 15569  012D6E  22E2               	addwfc	fsr1h,f,c
 15570                           
 15571                           ;stkvar	_b @ sp[(-13)+-4]
 15572                           
 15573                           ;incstack = 0
 15574  012D70  0EF2               	movlw	242
 15575  012D72  24E1               	addwf	fsr1l,w,c
 15576  012D74  6ED9               	movwf	fsr2l,c
 15577  012D76  0EFF               	movlw	255
 15578  012D78  20E2               	addwfc	fsr1h,w,c
 15579  012D7A  6EDA               	movwf	fsr2h,c
 15580  012D7C  50DF               	movf	indf2,w,c
 15581  012D7E  6E40               	movwf	(btemp+11)^0,c
 15582  012D80  0E80               	movlw	128
 15583  012D82  1640               	andwf	(btemp+11)^0,f,c
 15584                           
 15585                           ;stkvar	_sign @ sp[(-13)+12]
 15586  012D84  0EFF               	movlw	-1
 15587  012D86  0060  F103  FFE3   	movff	btemp+11,plusw1
 15588                           
 15589                           ;stkvar	_b @ sp[(-13)+-4]
 15590  012D8C  0EF2               	movlw	242
 15591  012D8E  24E1               	addwf	fsr1l,w,c
 15592  012D90  6ED9               	movwf	fsr2l,c
 15593  012D92  0EFF               	movlw	255
 15594  012D94  20E2               	addwfc	fsr1h,w,c
 15595  012D96  6EDA               	movwf	fsr2h,c
 15596  012D98  50DF               	movf	indf2,w,c
 15597  012D9A  6E40               	movwf	(btemp+11)^0,c
 15598  012D9C  90D8               	bcf	status,0,c
 15599  012D9E  3440               	rlcf	(btemp+11)^0,w,c
 15600  012DA0  6E3F               	movwf	(btemp+10)^0,c
 15601                           
 15602                           ;stkvar	_bexp @ sp[(-13)+11]
 15603  012DA2  0EFE               	movlw	-2
 15604  012DA4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15605                           
 15606                           ;stkvar	_b @ sp[(-13)+-4]
 15607  012DAA  0EF1               	movlw	241
 15608  012DAC  24E1               	addwf	fsr1l,w,c
 15609  012DAE  6ED9               	movwf	fsr2l,c
 15610  012DB0  0EFF               	movlw	255
 15611  012DB2  20E2               	addwfc	fsr1h,w,c
 15612  012DB4  6EDA               	movwf	fsr2h,c
 15613  012DB6  AEDF               	btfss	indf2,7,c
 15614  012DB8  D002               	goto	l6353
 15615                           
 15616                           ;stkvar	_bexp @ sp[(-13)+11]
 15617  012DBA  0EFE               	movlw	-2
 15618  012DBC  80E3               	bsf	plusw1,0,c
 15619  012DBE                     l6353:
 15620                           
 15621                           ;stkvar	_bexp @ sp[(-13)+11]
 15622  012DBE  0EFE               	movlw	-2
 15623  012DC0  50E3               	movf	plusw1,w,c
 15624  012DC2  B4D8               	btfsc	status,2,c
 15625  012DC4  D027               	goto	l6363
 15626                           
 15627                           ;stkvar	_bexp @ sp[(-13)+11]
 15628  012DC6  0EFE               	movlw	-2
 15629  012DC8  28E3               	incf	plusw1,w,c
 15630  012DCA  A4D8               	btfss	status,2,c
 15631  012DCC  D018               	goto	l6359
 15632  012DCE  0E00               	movlw	0
 15633  012DD0  6E3D               	movwf	(btemp+8)^0,c
 15634  012DD2  0E00               	movlw	0
 15635  012DD4  6E3E               	movwf	(btemp+9)^0,c
 15636  012DD6  0E00               	movlw	0
 15637  012DD8  6E3F               	movwf	(btemp+10)^0,c
 15638  012DDA  0E00               	movlw	0
 15639  012DDC  6E40               	movwf	(btemp+11)^0,c
 15640                           
 15641                           ;stkvar	_b @ sp[(-13)+-4]
 15642  012DDE  0EEF               	movlw	-17
 15643  012DE0  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15644  012DE6  0EF0               	movlw	-16
 15645  012DE8  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15646  012DEE  0EF1               	movlw	-15
 15647  012DF0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15648  012DF6  0EF2               	movlw	-14
 15649  012DF8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15650  012DFE                     l6359:
 15651                           
 15652                           ;stkvar	_b @ sp[(-13)+-4]
 15653  012DFE  0EF1               	movlw	-15
 15654  012E00  8EE3               	bsf	plusw1,7,c
 15655                           
 15656                           ;stkvar	_b @ sp[(-13)+-4]
 15657  012E02  0EF2               	movlw	242
 15658  012E04  24E1               	addwf	fsr1l,w,c
 15659  012E06  6ED9               	movwf	fsr2l,c
 15660  012E08  0EFF               	movlw	255
 15661  012E0A  20E2               	addwfc	fsr1h,w,c
 15662  012E0C  6EDA               	movwf	fsr2h,c
 15663  012E0E  0E00               	movlw	0
 15664  012E10  6EDF               	movwf	indf2,c
 15665  012E12  D018               	goto	l6365
 15666  012E14                     l6363:
 15667  012E14  0E00               	movlw	0
 15668  012E16  6E3D               	movwf	(btemp+8)^0,c
 15669  012E18  0E00               	movlw	0
 15670  012E1A  6E3E               	movwf	(btemp+9)^0,c
 15671  012E1C  0E00               	movlw	0
 15672  012E1E  6E3F               	movwf	(btemp+10)^0,c
 15673  012E20  0E00               	movlw	0
 15674  012E22  6E40               	movwf	(btemp+11)^0,c
 15675                           
 15676                           ;stkvar	_b @ sp[(-13)+-4]
 15677  012E24  0EEF               	movlw	-17
 15678  012E26  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15679  012E2C  0EF0               	movlw	-16
 15680  012E2E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15681  012E34  0EF1               	movlw	-15
 15682  012E36  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15683  012E3C  0EF2               	movlw	-14
 15684  012E3E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15685  012E44                     l6365:
 15686                           
 15687                           ;stkvar	_a @ sp[(-13)+-8]
 15688  012E44  0EEE               	movlw	238
 15689  012E46  24E1               	addwf	fsr1l,w,c
 15690  012E48  6ED9               	movwf	fsr2l,c
 15691  012E4A  0EFF               	movlw	255
 15692  012E4C  20E2               	addwfc	fsr1h,w,c
 15693  012E4E  6EDA               	movwf	fsr2h,c
 15694  012E50  50DF               	movf	indf2,w,c
 15695  012E52  6E40               	movwf	(btemp+11)^0,c
 15696  012E54  0E80               	movlw	128
 15697  012E56  1640               	andwf	(btemp+11)^0,f,c
 15698                           
 15699                           ;stkvar	_sign @ sp[(-13)+12]
 15700  012E58  50E1               	movf	fsr1l,w,c
 15701  012E5A  0FFF               	addlw	-1
 15702  012E5C  6ED9               	movwf	fsr2l,c
 15703  012E5E  50E2               	movf	fsr1h,w,c
 15704  012E60  6EDA               	movwf	fsr2h,c
 15705  012E62  0EFF               	movlw	255
 15706  012E64  22DA               	addwfc	fsr2h,f,c
 15707  012E66  5040               	movf	(btemp+11)^0,w,c
 15708  012E68  1ADF               	xorwf	indf2,f,c
 15709                           
 15710                           ;stkvar	_a @ sp[(-13)+-8]
 15711  012E6A  0EEE               	movlw	238
 15712  012E6C  24E1               	addwf	fsr1l,w,c
 15713  012E6E  6ED9               	movwf	fsr2l,c
 15714  012E70  0EFF               	movlw	255
 15715  012E72  20E2               	addwfc	fsr1h,w,c
 15716  012E74  6EDA               	movwf	fsr2h,c
 15717  012E76  50DF               	movf	indf2,w,c
 15718  012E78  6E40               	movwf	(btemp+11)^0,c
 15719  012E7A  90D8               	bcf	status,0,c
 15720  012E7C  3440               	rlcf	(btemp+11)^0,w,c
 15721  012E7E  6E3F               	movwf	(btemp+10)^0,c
 15722                           
 15723                           ;stkvar	_aexp @ sp[(-13)+10]
 15724  012E80  0EFD               	movlw	-3
 15725  012E82  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15726                           
 15727                           ;stkvar	_a @ sp[(-13)+-8]
 15728  012E88  0EED               	movlw	237
 15729  012E8A  24E1               	addwf	fsr1l,w,c
 15730  012E8C  6ED9               	movwf	fsr2l,c
 15731  012E8E  0EFF               	movlw	255
 15732  012E90  20E2               	addwfc	fsr1h,w,c
 15733  012E92  6EDA               	movwf	fsr2h,c
 15734  012E94  AEDF               	btfss	indf2,7,c
 15735  012E96  D002               	goto	l6373
 15736                           
 15737                           ;stkvar	_aexp @ sp[(-13)+10]
 15738  012E98  0EFD               	movlw	-3
 15739  012E9A  80E3               	bsf	plusw1,0,c
 15740  012E9C                     l6373:
 15741                           
 15742                           ;stkvar	_aexp @ sp[(-13)+10]
 15743  012E9C  0EFD               	movlw	-3
 15744  012E9E  50E3               	movf	plusw1,w,c
 15745  012EA0  B4D8               	btfsc	status,2,c
 15746  012EA2  D027               	goto	l6383
 15747                           
 15748                           ;stkvar	_aexp @ sp[(-13)+10]
 15749  012EA4  0EFD               	movlw	-3
 15750  012EA6  28E3               	incf	plusw1,w,c
 15751  012EA8  A4D8               	btfss	status,2,c
 15752  012EAA  D018               	goto	l6379
 15753  012EAC  0E00               	movlw	0
 15754  012EAE  6E3D               	movwf	(btemp+8)^0,c
 15755  012EB0  0E00               	movlw	0
 15756  012EB2  6E3E               	movwf	(btemp+9)^0,c
 15757  012EB4  0E00               	movlw	0
 15758  012EB6  6E3F               	movwf	(btemp+10)^0,c
 15759  012EB8  0E00               	movlw	0
 15760  012EBA  6E40               	movwf	(btemp+11)^0,c
 15761                           
 15762                           ;stkvar	_a @ sp[(-13)+-8]
 15763  012EBC  0EEB               	movlw	-21
 15764  012EBE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15765  012EC4  0EEC               	movlw	-20
 15766  012EC6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15767  012ECC  0EED               	movlw	-19
 15768  012ECE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15769  012ED4  0EEE               	movlw	-18
 15770  012ED6  0060  F103  FFE3   	movff	btemp+11,plusw1
 15771  012EDC                     l6379:
 15772                           
 15773                           ;stkvar	_a @ sp[(-13)+-8]
 15774  012EDC  0EED               	movlw	-19
 15775  012EDE  8EE3               	bsf	plusw1,7,c
 15776                           
 15777                           ;stkvar	_a @ sp[(-13)+-8]
 15778  012EE0  0EEE               	movlw	238
 15779  012EE2  24E1               	addwf	fsr1l,w,c
 15780  012EE4  6ED9               	movwf	fsr2l,c
 15781  012EE6  0EFF               	movlw	255
 15782  012EE8  20E2               	addwfc	fsr1h,w,c
 15783  012EEA  6EDA               	movwf	fsr2h,c
 15784  012EEC  0E00               	movlw	0
 15785  012EEE  6EDF               	movwf	indf2,c
 15786  012EF0  D018               	goto	l6385
 15787  012EF2                     l6383:
 15788  012EF2  0E00               	movlw	0
 15789  012EF4  6E3D               	movwf	(btemp+8)^0,c
 15790  012EF6  0E00               	movlw	0
 15791  012EF8  6E3E               	movwf	(btemp+9)^0,c
 15792  012EFA  0E00               	movlw	0
 15793  012EFC  6E3F               	movwf	(btemp+10)^0,c
 15794  012EFE  0E00               	movlw	0
 15795  012F00  6E40               	movwf	(btemp+11)^0,c
 15796                           
 15797                           ;stkvar	_a @ sp[(-13)+-8]
 15798  012F02  0EEB               	movlw	-21
 15799  012F04  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15800  012F0A  0EEC               	movlw	-20
 15801  012F0C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15802  012F12  0EED               	movlw	-19
 15803  012F14  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15804  012F1A  0EEE               	movlw	-18
 15805  012F1C  0060  F103  FFE3   	movff	btemp+11,plusw1
 15806  012F22                     l6385:
 15807                           
 15808                           ;stkvar	_a @ sp[(-13)+-8]
 15809  012F22  0EEB               	movlw	-21
 15810  012F24  50E3               	movf	plusw1,w,c
 15811  012F26  E139               	bnz	l6397
 15812  012F28  0EEC               	movlw	-20
 15813  012F2A  50E3               	movf	plusw1,w,c
 15814  012F2C  E136               	bnz	l6397
 15815  012F2E  0EED               	movlw	-19
 15816  012F30  50E3               	movf	plusw1,w,c
 15817  012F32  E133               	bnz	l6397
 15818  012F34  0EEE               	movlw	-18
 15819  012F36  50E3               	movf	plusw1,w,c
 15820  012F38  A4D8               	btfss	status,2,c
 15821  012F3A  D02F               	goto	l6397
 15822                           
 15823                           ;stkvar	_b @ sp[(-13)+-4]
 15824  012F3C  0EEF               	movlw	-17
 15825  012F3E  6AE3               	clrf	plusw1,c
 15826  012F40  0EF0               	movlw	-16
 15827  012F42  6AE3               	clrf	plusw1,c
 15828  012F44  0EF1               	movlw	-15
 15829  012F46  6AE3               	clrf	plusw1,c
 15830  012F48  0EF2               	movlw	-14
 15831  012F4A  6AE3               	clrf	plusw1,c
 15832                           
 15833                           ;stkvar	_b @ sp[(-13)+-4]
 15834  012F4C  0EF1               	movlw	241
 15835  012F4E  24E1               	addwf	fsr1l,w,c
 15836  012F50  6ED9               	movwf	fsr2l,c
 15837  012F52  0EFF               	movlw	255
 15838  012F54  20E2               	addwfc	fsr1h,w,c
 15839  012F56  6EDA               	movwf	fsr2h,c
 15840  012F58  0E80               	movlw	128
 15841  012F5A  12DE               	iorwf	postinc2,f,c
 15842  012F5C  0E7F               	movlw	127
 15843  012F5E  12DD               	iorwf	postdec2,f,c
 15844  012F60                     l6391:
 15845                           
 15846                           ;stkvar	_sign @ sp[(-13)+12]
 15847  012F60  0EFF               	movlw	-1
 15848  012F62  006F FF8C  F040    	movff	plusw1,btemp+11
 15849                           
 15850                           ;stkvar	_b @ sp[(-13)+-4]
 15851  012F68  0EF2               	movlw	242
 15852  012F6A  24E1               	addwf	fsr1l,w,c
 15853  012F6C  6ED9               	movwf	fsr2l,c
 15854  012F6E  0EFF               	movlw	255
 15855  012F70  20E2               	addwfc	fsr1h,w,c
 15856  012F72  6EDA               	movwf	fsr2h,c
 15857  012F74  5040               	movf	(btemp+11)^0,w,c
 15858  012F76  12DF               	iorwf	indf2,f,c
 15859                           
 15860                           ;stkvar	_b @ sp[(-13)+-4]
 15861  012F78  0EEF               	movlw	-17
 15862  012F7A  006F FF8C  F035    	movff	plusw1,btemp
 15863  012F80  0EF0               	movlw	-16
 15864  012F82  006F FF8C  F036    	movff	plusw1,btemp+1
 15865  012F88  0EF1               	movlw	-15
 15866  012F8A  006F FF8C  F037    	movff	plusw1,btemp+2
 15867  012F90  0EF2               	movlw	-14
 15868  012F92  006F FF8C  F038    	movff	plusw1,btemp+3
 15869  012F98  D19F               	goto	l2545
 15870  012F9A                     l6397:
 15871                           
 15872                           ;stkvar	_bexp @ sp[(-13)+11]
 15873  012F9A  0EFE               	movlw	-2
 15874  012F9C  50E3               	movf	plusw1,w,c
 15875  012F9E  A4D8               	btfss	status,2,c
 15876  012FA0  D009               	goto	l6405
 15877  012FA2  0E00               	movlw	0
 15878  012FA4  6E35               	movwf	btemp^0,c
 15879  012FA6  0E00               	movlw	0
 15880  012FA8  6E36               	movwf	(btemp+1)^0,c
 15881  012FAA  0E00               	movlw	0
 15882  012FAC  6E37               	movwf	(btemp+2)^0,c
 15883  012FAE  0E00               	movlw	0
 15884  012FB0  6E38               	movwf	(btemp+3)^0,c
 15885  012FB2  D192               	goto	l2545
 15886  012FB4                     l6405:
 15887                           
 15888                           ;stkvar	_bexp @ sp[(-13)+11]
 15889  012FB4  0EFE               	movlw	-2
 15890  012FB6  50E3               	movf	plusw1,w,c
 15891  012FB8  6E3F               	movwf	(btemp+10)^0,c
 15892  012FBA  6A40               	clrf	(btemp+11)^0,c
 15893                           
 15894                           ;stkvar	_aexp @ sp[(-13)+10]
 15895  012FBC  0EFD               	movlw	-3
 15896  012FBE  50E3               	movf	plusw1,w,c
 15897  012FC0  5E3F               	subwf	(btemp+10)^0,f,c
 15898  012FC2  0E00               	movlw	0
 15899  012FC4  5A40               	subwfb	(btemp+11)^0,f,c
 15900  012FC6  0E7F               	movlw	127
 15901  012FC8  263F               	addwf	(btemp+10)^0,f,c
 15902  012FCA  0E00               	movlw	0
 15903  012FCC  2240               	addwfc	(btemp+11)^0,f,c
 15904                           
 15905                           ;stkvar	_new_exp @ sp[(-13)+8]
 15906  012FCE  0EFB               	movlw	-5
 15907  012FD0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15908  012FD6  0EFC               	movlw	-4
 15909  012FD8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15910                           
 15911                           ;stkvar	_b @ sp[(-13)+-4]
 15912  012FDE  0EEF               	movlw	-17
 15913  012FE0  006F FF8C  F03D    	movff	plusw1,btemp+8
 15914  012FE6  0EF0               	movlw	-16
 15915  012FE8  006F FF8C  F03E    	movff	plusw1,btemp+9
 15916  012FEE  0EF1               	movlw	-15
 15917  012FF0  006F FF8C  F03F    	movff	plusw1,btemp+10
 15918  012FF6  0EF2               	movlw	-14
 15919  012FF8  006F FF8C  F040    	movff	plusw1,btemp+11
 15920                           
 15921                           ;stkvar	_rem @ sp[(-13)+4]
 15922  012FFE  0EF7               	movlw	-9
 15923  013000  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15924  013006  0EF8               	movlw	-8
 15925  013008  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15926  01300E  0EF9               	movlw	-7
 15927  013010  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15928  013016  0EFA               	movlw	-6
 15929  013018  0060  F103  FFE3   	movff	btemp+11,plusw1
 15930                           
 15931                           ;stkvar	_b @ sp[(-13)+-4]
 15932  01301E  0EEF               	movlw	-17
 15933  013020  6AE3               	clrf	plusw1,c
 15934  013022  0EF0               	movlw	-16
 15935  013024  6AE3               	clrf	plusw1,c
 15936  013026  0EF1               	movlw	-15
 15937  013028  6AE3               	clrf	plusw1,c
 15938  01302A  0EF2               	movlw	-14
 15939  01302C  6AE3               	clrf	plusw1,c
 15940                           
 15941                           ;stkvar	_grs @ sp[(-13)+0]
 15942  01302E  0EF3               	movlw	-13
 15943  013030  6AE3               	clrf	plusw1,c
 15944  013032  0EF4               	movlw	-12
 15945  013034  6AE3               	clrf	plusw1,c
 15946  013036  0EF5               	movlw	-11
 15947  013038  6AE3               	clrf	plusw1,c
 15948  01303A  0EF6               	movlw	-10
 15949  01303C  6AE3               	clrf	plusw1,c
 15950                           
 15951                           ;stkvar	_aexp @ sp[(-13)+10]
 15952  01303E  0EFD               	movlw	-3
 15953  013040  6AE3               	clrf	plusw1,c
 15954  013042  D050               	goto	l6433
 15955  013044                     l6415:
 15956                           
 15957                           ;stkvar	_aexp @ sp[(-13)+10]
 15958  013044  0EFD               	movlw	-3
 15959  013046  50E3               	movf	plusw1,w,c
 15960  013048  B4D8               	btfsc	status,2,c
 15961  01304A  D020               	goto	l6425
 15962                           
 15963                           ;stkvar	_rem @ sp[(-13)+4]
 15964  01304C  90D8               	bcf	status,0,c
 15965  01304E  0EF7               	movlw	-9
 15966  013050  36E3               	rlcf	plusw1,f,c
 15967  013052  0EF8               	movlw	-8
 15968  013054  36E3               	rlcf	plusw1,f,c
 15969  013056  0EF9               	movlw	-7
 15970  013058  36E3               	rlcf	plusw1,f,c
 15971  01305A  0EFA               	movlw	-6
 15972  01305C  36E3               	rlcf	plusw1,f,c
 15973                           
 15974                           ;stkvar	_b @ sp[(-13)+-4]
 15975  01305E  90D8               	bcf	status,0,c
 15976  013060  0EEF               	movlw	-17
 15977  013062  36E3               	rlcf	plusw1,f,c
 15978  013064  0EF0               	movlw	-16
 15979  013066  36E3               	rlcf	plusw1,f,c
 15980  013068  0EF1               	movlw	-15
 15981  01306A  36E3               	rlcf	plusw1,f,c
 15982  01306C  0EF2               	movlw	-14
 15983  01306E  36E3               	rlcf	plusw1,f,c
 15984                           
 15985                           ;stkvar	_grs @ sp[(-13)+0]
 15986  013070  0EF6               	movlw	-10
 15987  013072  AEE3               	btfss	plusw1,7,c
 15988  013074  D002               	goto	l6423
 15989                           
 15990                           ;stkvar	_b @ sp[(-13)+-4]
 15991  013076  0EEF               	movlw	-17
 15992  013078  80E3               	bsf	plusw1,0,c
 15993  01307A                     l6423:
 15994                           
 15995                           ;stkvar	_grs @ sp[(-13)+0]
 15996  01307A  90D8               	bcf	status,0,c
 15997  01307C  0EF3               	movlw	-13
 15998  01307E  36E3               	rlcf	plusw1,f,c
 15999  013080  0EF4               	movlw	-12
 16000  013082  36E3               	rlcf	plusw1,f,c
 16001  013084  0EF5               	movlw	-11
 16002  013086  36E3               	rlcf	plusw1,f,c
 16003  013088  0EF6               	movlw	-10
 16004  01308A  36E3               	rlcf	plusw1,f,c
 16005  01308C                     l6425:
 16006                           
 16007                           ;stkvar	_a @ sp[(-13)+-8]
 16008                           ;stkvar	_rem @ sp[(-13)+4]
 16009  01308C  50E1               	movf	fsr1l,w,c
 16010  01308E  0FF7               	addlw	-9
 16011  013090  6ED9               	movwf	fsr2l,c
 16012  013092  50E2               	movf	fsr1h,w,c
 16013  013094  6EDA               	movwf	fsr2h,c
 16014  013096  0EFF               	movlw	255
 16015  013098  22DA               	addwfc	fsr2h,f,c
 16016  01309A  0EEB               	movlw	-21
 16017  01309C  50E3               	movf	plusw1,w,c
 16018  01309E  5CDE               	subwf	postinc2,w,c
 16019  0130A0  0EEC               	movlw	-20
 16020  0130A2  50E3               	movf	plusw1,w,c
 16021  0130A4  58DE               	subwfb	postinc2,w,c
 16022  0130A6  0EED               	movlw	-19
 16023  0130A8  50E3               	movf	plusw1,w,c
 16024  0130AA  58DE               	subwfb	postinc2,w,c
 16025  0130AC  0EEE               	movlw	-18
 16026  0130AE  50E3               	movf	plusw1,w,c
 16027  0130B0  58DE               	subwfb	postinc2,w,c
 16028  0130B2  A0D8               	btfss	status,0,c
 16029  0130B4  D015               	goto	l6431
 16030                           
 16031                           ;stkvar	_grs @ sp[(-13)+0]
 16032  0130B6  0EF6               	movlw	-10
 16033  0130B8  8CE3               	bsf	plusw1,6,c
 16034                           
 16035                           ;stkvar	_a @ sp[(-13)+-8]
 16036                           ;stkvar	_rem @ sp[(-13)+4]
 16037  0130BA  50E1               	movf	fsr1l,w,c
 16038  0130BC  0FF7               	addlw	-9
 16039  0130BE  6ED9               	movwf	fsr2l,c
 16040  0130C0  50E2               	movf	fsr1h,w,c
 16041  0130C2  6EDA               	movwf	fsr2h,c
 16042  0130C4  0EFF               	movlw	255
 16043  0130C6  22DA               	addwfc	fsr2h,f,c
 16044  0130C8  0EEB               	movlw	-21
 16045  0130CA  50E3               	movf	plusw1,w,c
 16046  0130CC  5EDE               	subwf	postinc2,f,c
 16047  0130CE  0EEC               	movlw	-20
 16048  0130D0  50E3               	movf	plusw1,w,c
 16049  0130D2  5ADE               	subwfb	postinc2,f,c
 16050  0130D4  0EED               	movlw	-19
 16051  0130D6  50E3               	movf	plusw1,w,c
 16052  0130D8  5ADE               	subwfb	postinc2,f,c
 16053  0130DA  0EEE               	movlw	-18
 16054  0130DC  50E3               	movf	plusw1,w,c
 16055  0130DE  5ADE               	subwfb	postinc2,f,c
 16056  0130E0                     l6431:
 16057                           
 16058                           ;stkvar	_aexp @ sp[(-13)+10]
 16059  0130E0  0EFD               	movlw	-3
 16060  0130E2  2AE3               	incf	plusw1,f,c
 16061  0130E4                     l6433:
 16062                           
 16063                           ;stkvar	_aexp @ sp[(-13)+10]
 16064  0130E4  0EFD               	movlw	-3
 16065  0130E6  006F FF8C  F035    	movff	plusw1,btemp
 16066  0130EC  0E19               	movlw	25
 16067  0130EE  6435               	cpfsgt	btemp^0,c
 16068  0130F0  D7A9               	goto	l6415
 16069                           
 16070                           ;stkvar	_rem @ sp[(-13)+4]
 16071  0130F2  0EF7               	movlw	-9
 16072  0130F4  50E3               	movf	plusw1,w,c
 16073  0130F6  E10A               	bnz	u5410
 16074  0130F8  0EF8               	movlw	-8
 16075  0130FA  50E3               	movf	plusw1,w,c
 16076  0130FC  E107               	bnz	u5410
 16077  0130FE  0EF9               	movlw	-7
 16078  013100  50E3               	movf	plusw1,w,c
 16079  013102  E104               	bnz	u5410
 16080  013104  0EFA               	movlw	-6
 16081  013106  50E3               	movf	plusw1,w,c
 16082  013108  B4D8               	btfsc	status,2,c
 16083  01310A  D024               	goto	l6449
 16084  01310C                     u5410:
 16085                           
 16086                           ;stkvar	_grs @ sp[(-13)+0]
 16087  01310C  0EF3               	movlw	-13
 16088  01310E  80E3               	bsf	plusw1,0,c
 16089  013110  D021               	goto	l6449
 16090  013112                     l6439:
 16091                           
 16092                           ;stkvar	_b @ sp[(-13)+-4]
 16093  013112  90D8               	bcf	status,0,c
 16094  013114  0EEF               	movlw	-17
 16095  013116  36E3               	rlcf	plusw1,f,c
 16096  013118  0EF0               	movlw	-16
 16097  01311A  36E3               	rlcf	plusw1,f,c
 16098  01311C  0EF1               	movlw	-15
 16099  01311E  36E3               	rlcf	plusw1,f,c
 16100  013120  0EF2               	movlw	-14
 16101  013122  36E3               	rlcf	plusw1,f,c
 16102                           
 16103                           ;stkvar	_grs @ sp[(-13)+0]
 16104  013124  0EF6               	movlw	-10
 16105  013126  AEE3               	btfss	plusw1,7,c
 16106  013128  D002               	goto	l6445
 16107                           
 16108                           ;stkvar	_b @ sp[(-13)+-4]
 16109  01312A  0EEF               	movlw	-17
 16110  01312C  80E3               	bsf	plusw1,0,c
 16111  01312E                     l6445:
 16112                           
 16113                           ;stkvar	_grs @ sp[(-13)+0]
 16114  01312E  90D8               	bcf	status,0,c
 16115  013130  0EF3               	movlw	-13
 16116  013132  36E3               	rlcf	plusw1,f,c
 16117  013134  0EF4               	movlw	-12
 16118  013136  36E3               	rlcf	plusw1,f,c
 16119  013138  0EF5               	movlw	-11
 16120  01313A  36E3               	rlcf	plusw1,f,c
 16121  01313C  0EF6               	movlw	-10
 16122  01313E  36E3               	rlcf	plusw1,f,c
 16123                           
 16124                           ;stkvar	_new_exp @ sp[(-13)+8]
 16125  013140  50E1               	movf	fsr1l,w,c
 16126  013142  0FFB               	addlw	-5
 16127  013144  6ED9               	movwf	fsr2l,c
 16128  013146  50E2               	movf	fsr1h,w,c
 16129  013148  6EDA               	movwf	fsr2h,c
 16130  01314A  0EFF               	movlw	255
 16131  01314C  22DA               	addwfc	fsr2h,f,c
 16132  01314E  06DE               	decf	postinc2,f,c
 16133  013150  0E00               	movlw	0
 16134  013152  5ADD               	subwfb	postdec2,f,c
 16135  013154                     l6449:
 16136                           
 16137                           ;stkvar	_b @ sp[(-13)+-4]
 16138  013154  0EF1               	movlw	-15
 16139  013156  AEE3               	btfss	plusw1,7,c
 16140  013158  D7DC               	goto	l6439
 16141                           
 16142                           ;stkvar	_aexp @ sp[(-13)+10]
 16143  01315A  0EFD               	movlw	-3
 16144  01315C  6AE3               	clrf	plusw1,c
 16145                           
 16146                           ;stkvar	_grs @ sp[(-13)+0]
 16147  01315E  0EF6               	movlw	-10
 16148  013160  AEE3               	btfss	plusw1,7,c
 16149  013162  D020               	goto	l6463
 16150                           
 16151                           ;stkvar	_grs @ sp[(-13)+0]
 16152  013164  50E1               	movf	fsr1l,w,c
 16153  013166  0FF3               	addlw	-13
 16154  013168  6ED9               	movwf	fsr2l,c
 16155  01316A  50E2               	movf	fsr1h,w,c
 16156  01316C  6EDA               	movwf	fsr2h,c
 16157  01316E  0EFF               	movlw	255
 16158  013170  22DA               	addwfc	fsr2h,f,c
 16159  013172  0EFF               	movlw	255
 16160  013174  14DE               	andwf	postinc2,w,c
 16161  013176  6E3D               	movwf	(btemp+8)^0,c
 16162  013178  0EFF               	movlw	255
 16163  01317A  14DE               	andwf	postinc2,w,c
 16164  01317C  6E3E               	movwf	(btemp+9)^0,c
 16165  01317E  0EFF               	movlw	255
 16166  013180  14DE               	andwf	postinc2,w,c
 16167  013182  6E3F               	movwf	(btemp+10)^0,c
 16168  013184  0E7F               	movlw	127
 16169  013186  14DE               	andwf	postinc2,w,c
 16170  013188  6E40               	movwf	(btemp+11)^0,c
 16171  01318A  503D               	movf	(btemp+8)^0,w,c
 16172  01318C  103E               	iorwf	(btemp+9)^0,w,c
 16173  01318E  103F               	iorwf	(btemp+10)^0,w,c
 16174  013190  1040               	iorwf	(btemp+11)^0,w,c
 16175  013192  B4D8               	btfsc	status,2,c
 16176  013194  D004               	goto	l6459
 16177  013196                     u5450:
 16178                           
 16179                           ;stkvar	_aexp @ sp[(-13)+10]
 16180  013196  0EFD               	movlw	-3
 16181  013198  6AE3               	clrf	plusw1,c
 16182  01319A  2AE3               	incf	plusw1,f,c
 16183  01319C  D003               	goto	l6463
 16184  01319E                     l6459:
 16185                           
 16186                           ;stkvar	_b @ sp[(-13)+-4]
 16187  01319E  0EEF               	movlw	-17
 16188  0131A0  B0E3               	btfsc	plusw1,0,c
 16189  0131A2  D7F9               	goto	u5450
 16190  0131A4                     l6463:
 16191                           
 16192                           ;stkvar	_aexp @ sp[(-13)+10]
 16193  0131A4  0EFD               	movlw	-3
 16194  0131A6  50E3               	movf	plusw1,w,c
 16195  0131A8  B4D8               	btfsc	status,2,c
 16196  0131AA  D036               	goto	l6473
 16197                           
 16198                           ;stkvar	_b @ sp[(-13)+-4]
 16199  0131AC  50E1               	movf	fsr1l,w,c
 16200  0131AE  0FEF               	addlw	-17
 16201  0131B0  6ED9               	movwf	fsr2l,c
 16202  0131B2  50E2               	movf	fsr1h,w,c
 16203  0131B4  6EDA               	movwf	fsr2h,c
 16204  0131B6  0EFF               	movlw	255
 16205  0131B8  22DA               	addwfc	fsr2h,f,c
 16206  0131BA  2ADE               	incf	postinc2,f,c
 16207  0131BC  0E00               	movlw	0
 16208  0131BE  22DE               	addwfc	postinc2,f,c
 16209  0131C0  22DE               	addwfc	postinc2,f,c
 16210  0131C2  22DE               	addwfc	postinc2,f,c
 16211                           
 16212                           ;stkvar	_b @ sp[(-13)+-4]
 16213  0131C4  0EF2               	movlw	-14
 16214  0131C6  A0E3               	btfss	plusw1,0,c
 16215  0131C8  D027               	goto	l6473
 16216  0131CA  0E01               	movlw	1
 16217  0131CC  6E40               	movwf	(btemp+11)^0,c
 16218                           
 16219                           ;stkvar	_b @ sp[(-13)+-4]
 16220  0131CE  50E1               	movf	fsr1l,w,c
 16221  0131D0  0FEF               	addlw	-17
 16222  0131D2  6ED9               	movwf	fsr2l,c
 16223  0131D4  50E2               	movf	fsr1h,w,c
 16224  0131D6  6EDA               	movwf	fsr2h,c
 16225  0131D8  0EFF               	movlw	255
 16226  0131DA  22DA               	addwfc	fsr2h,f,c
 16227  0131DC  2840               	incf	(btemp+11)^0,w,c
 16228  0131DE  52DE               	movf	postinc2,f,c
 16229  0131E0  D008               	goto	u5490
 16230  0131E2                     u5495:
 16231  0131E2  52DE               	movf	postinc2,f,c
 16232  0131E4  90D8               	bcf	status,0,c
 16233  0131E6  BEDC               	btfsc	preinc2,7,c
 16234  0131E8  80D8               	bsf	status,0,c
 16235  0131EA  32DD               	rrcf	postdec2,f,c
 16236  0131EC  32DD               	rrcf	postdec2,f,c
 16237  0131EE  32DD               	rrcf	postdec2,f,c
 16238  0131F0  32DE               	rrcf	postinc2,f,c
 16239  0131F2                     u5490:
 16240  0131F2  2EE8               	decfsz	wreg,f,c
 16241  0131F4  D7F6               	goto	u5495
 16242                           
 16243                           ;stkvar	_new_exp @ sp[(-13)+8]
 16244  0131F6  0EFB               	movlw	-5
 16245  0131F8  50E3               	movf	plusw1,w,c
 16246  0131FA  0F01               	addlw	1
 16247  0131FC  6E35               	movwf	btemp^0,c
 16248  0131FE  0EFB               	movlw	-5
 16249  013200  0060  F0D7  FFE3   	movff	btemp,plusw1
 16250  013206  6A35               	clrf	btemp^0,c
 16251  013208  0EFC               	movlw	-4
 16252  01320A  50E3               	movf	plusw1,w,c
 16253  01320C  2035               	addwfc	btemp^0,w,c
 16254  01320E  6E35               	movwf	btemp^0,c
 16255  013210  0EFC               	movlw	-4
 16256  013212  0060  F0D7  FFE3   	movff	btemp,plusw1
 16257  013218                     l6473:
 16258                           
 16259                           ;stkvar	_new_exp @ sp[(-13)+8]
 16260  013218  0EFC               	movlw	-4
 16261  01321A  BEE3               	btfsc	plusw1,7,c
 16262  01321C  D01B               	goto	l6479
 16263  01321E  0EFC               	movlw	-4
 16264  013220  50E3               	movf	plusw1,w,c
 16265  013222  E104               	bnz	u5500
 16266  013224  0EFB               	movlw	-5
 16267  013226  28E3               	incf	plusw1,w,c
 16268  013228  A0D8               	btfss	status,0,c
 16269  01322A  D014               	goto	l6479
 16270  01322C                     u5500:
 16271  01322C  0EFF               	movlw	255
 16272  01322E  6E3F               	movwf	(btemp+10)^0,c
 16273  013230  0E00               	movlw	0
 16274  013232  6E40               	movwf	(btemp+11)^0,c
 16275                           
 16276                           ;stkvar	_new_exp @ sp[(-13)+8]
 16277  013234  0EFB               	movlw	-5
 16278  013236  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16279  01323C  0EFC               	movlw	-4
 16280  01323E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16281                           
 16282                           ;stkvar	_b @ sp[(-13)+-4]
 16283  013244  0EEF               	movlw	-17
 16284  013246  6AE3               	clrf	plusw1,c
 16285  013248  0EF0               	movlw	-16
 16286  01324A  6AE3               	clrf	plusw1,c
 16287  01324C  0EF1               	movlw	-15
 16288  01324E  6AE3               	clrf	plusw1,c
 16289  013250  0EF2               	movlw	-14
 16290  013252  6AE3               	clrf	plusw1,c
 16291  013254                     l6479:
 16292                           
 16293                           ;stkvar	_new_exp @ sp[(-13)+8]
 16294  013254  0EFC               	movlw	-4
 16295  013256  BEE3               	btfsc	plusw1,7,c
 16296  013258  D007               	goto	u5510
 16297  01325A  0EFC               	movlw	-4
 16298  01325C  50E3               	movf	plusw1,w,c
 16299  01325E  E112               	bnz	l6485
 16300  013260  0EFB               	movlw	-5
 16301  013262  04E3               	decf	plusw1,w,c
 16302  013264  B0D8               	btfsc	status,0,c
 16303  013266  D00E               	goto	l6485
 16304  013268                     u5510:
 16305                           
 16306                           ;stkvar	_new_exp @ sp[(-13)+8]
 16307  013268  0EFB               	movlw	-5
 16308  01326A  6AE3               	clrf	plusw1,c
 16309  01326C  0EFC               	movlw	-4
 16310  01326E  6AE3               	clrf	plusw1,c
 16311                           
 16312                           ;stkvar	_b @ sp[(-13)+-4]
 16313  013270  0EEF               	movlw	-17
 16314  013272  6AE3               	clrf	plusw1,c
 16315  013274  0EF0               	movlw	-16
 16316  013276  6AE3               	clrf	plusw1,c
 16317  013278  0EF1               	movlw	-15
 16318  01327A  6AE3               	clrf	plusw1,c
 16319  01327C  0EF2               	movlw	-14
 16320  01327E  6AE3               	clrf	plusw1,c
 16321                           
 16322                           ;stkvar	_sign @ sp[(-13)+12]
 16323  013280  0EFF               	movlw	-1
 16324  013282  6AE3               	clrf	plusw1,c
 16325  013284                     l6485:
 16326                           
 16327                           ;stkvar	_new_exp @ sp[(-13)+8]
 16328                           ;stkvar	_bexp @ sp[(-13)+11]
 16329  013284  0EFB               	movlw	-5
 16330  013286  006F FF8C  F035    	movff	plusw1,btemp
 16331  01328C  0EFE               	movlw	-2
 16332  01328E  0060  F0D7  FFE3   	movff	btemp,plusw1
 16333                           
 16334                           ;stkvar	_bexp @ sp[(-13)+11]
 16335  013294  0EFE               	movlw	-2
 16336  013296  A0E3               	btfss	plusw1,0,c
 16337  013298  D009               	goto	l6491
 16338                           
 16339                           ;stkvar	_b @ sp[(-13)+-4]
 16340  01329A  0EF1               	movlw	241
 16341  01329C  24E1               	addwf	fsr1l,w,c
 16342  01329E  6ED9               	movwf	fsr2l,c
 16343  0132A0  0EFF               	movlw	255
 16344  0132A2  20E2               	addwfc	fsr1h,w,c
 16345  0132A4  6EDA               	movwf	fsr2h,c
 16346  0132A6  0E00               	movlw	0
 16347  0132A8  8EDB               	bsf	plusw2,7,c
 16348  0132AA  D008               	goto	l6493
 16349  0132AC                     l6491:
 16350                           
 16351                           ;stkvar	_b @ sp[(-13)+-4]
 16352  0132AC  0EF1               	movlw	241
 16353  0132AE  24E1               	addwf	fsr1l,w,c
 16354  0132B0  6ED9               	movwf	fsr2l,c
 16355  0132B2  0EFF               	movlw	255
 16356  0132B4  20E2               	addwfc	fsr1h,w,c
 16357  0132B6  6EDA               	movwf	fsr2h,c
 16358  0132B8  0E7F               	movlw	127
 16359  0132BA  16DF               	andwf	indf2,f,c
 16360  0132BC                     l6493:
 16361                           
 16362                           ;stkvar	_b @ sp[(-13)+-4]
 16363  0132BC  0EF2               	movlw	242
 16364  0132BE  24E1               	addwf	fsr1l,w,c
 16365  0132C0  6ED9               	movwf	fsr2l,c
 16366  0132C2  0EFF               	movlw	255
 16367  0132C4  20E2               	addwfc	fsr1h,w,c
 16368  0132C6  6EDA               	movwf	fsr2h,c
 16369                           
 16370                           ;stkvar	_bexp @ sp[(-13)+11]
 16371  0132C8  0EFE               	movlw	-2
 16372  0132CA  006F FF8C  F040    	movff	plusw1,btemp+11
 16373  0132D0  90D8               	bcf	status,0,c
 16374  0132D2  3040               	rrcf	(btemp+11)^0,w,c
 16375  0132D4  6EDF               	movwf	indf2,c
 16376  0132D6  D644               	goto	l6391
 16377  0132D8                     l2545:
 16378                           
 16379                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16380  0132D8  0EEB               	movlw	235
 16381  0132DA  26E1               	addwf	fsr1l,f,c
 16382  0132DC  0EFF               	movlw	255
 16383  0132DE  22E2               	addwfc	fsr1h,f,c
 16384  0132E0  0012               	return		;funcret
 16385  0132E2                     __end_of___fldiv:
 16386                           	opt callstack 0
 16387                           
 16388 ;; *************** function ___awmod *****************
 16389 ;; Defined at:
 16390 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16391 ;; Parameters:    Size  Location     Type
 16392 ;;  dividend        2  [STACK] int 
 16393 ;;  divisor         2  [STACK] int 
 16394 ;; Auto vars:     Size  Location     Type
 16395 ;;  sign            1  [STACK] unsigned char 
 16396 ;;  counter         1  [STACK] unsigned char 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  2  [STACK] int 
 16399 ;; Registers used:
 16400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/4
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16410 ;;Total ram usage:        0 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:    6
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_efgtoa
 16417 ;; This function uses a reentrant model
 16418 ;;
 16419                           
 16420                           	psect	text53
 16421  01619A                     __ptext53:
 16422                           	opt callstack 0
 16423  01619A                     ___awmod:
 16424                           	opt callstack 0
 16425                           
 16426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16427  01619A  52E6               	movf	postinc1,f,c
 16428  01619C  52E6               	movf	postinc1,f,c
 16429                           
 16430                           ;stkvar	_sign @ sp[(-2)+0]
 16431                           
 16432                           ;incstack = 0
 16433  01619E  0EFE               	movlw	-2
 16434  0161A0  6AE3               	clrf	plusw1,c
 16435                           
 16436                           ;stkvar	_dividend @ sp[(-2)+-2]
 16437  0161A2  0EFD               	movlw	-3
 16438  0161A4  AEE3               	btfss	plusw1,7,c
 16439  0161A6  D009               	goto	l6717
 16440                           
 16441                           ;stkvar	_dividend @ sp[(-2)+-2]
 16442                           ;stkvar	_dividend @ sp[(-2)+-2]
 16443  0161A8  0EFC               	movlw	-4
 16444  0161AA  6CE3               	negf	plusw1,c
 16445  0161AC  0EFD               	movlw	-3
 16446  0161AE  1EE3               	comf	plusw1,f,c
 16447  0161B0  B0D8               	btfsc	status,0,c
 16448  0161B2  2AE3               	incf	plusw1,f,c
 16449                           
 16450                           ;stkvar	_sign @ sp[(-2)+0]
 16451  0161B4  0EFE               	movlw	-2
 16452  0161B6  6AE3               	clrf	plusw1,c
 16453  0161B8  2AE3               	incf	plusw1,f,c
 16454  0161BA                     l6717:
 16455                           
 16456                           ;stkvar	_divisor @ sp[(-2)+-4]
 16457  0161BA  0EFB               	movlw	-5
 16458  0161BC  AEE3               	btfss	plusw1,7,c
 16459  0161BE  D006               	goto	l6721
 16460                           
 16461                           ;stkvar	_divisor @ sp[(-2)+-4]
 16462                           ;stkvar	_divisor @ sp[(-2)+-4]
 16463  0161C0  0EFA               	movlw	-6
 16464  0161C2  6CE3               	negf	plusw1,c
 16465  0161C4  0EFB               	movlw	-5
 16466  0161C6  1EE3               	comf	plusw1,f,c
 16467  0161C8  B0D8               	btfsc	status,0,c
 16468  0161CA  2AE3               	incf	plusw1,f,c
 16469  0161CC                     l6721:
 16470                           
 16471                           ;stkvar	_divisor @ sp[(-2)+-4]
 16472  0161CC  0EFA               	movlw	-6
 16473  0161CE  006F FF8C  F035    	movff	plusw1,btemp
 16474  0161D4  0EFB               	movlw	-5
 16475  0161D6  50E3               	movf	plusw1,w,c
 16476  0161D8  1035               	iorwf	btemp^0,w,c
 16477  0161DA  B4D8               	btfsc	status,2,c
 16478  0161DC  D053               	goto	u5870
 16479                           
 16480                           ;stkvar	_counter @ sp[(-2)+1]
 16481  0161DE  0EFF               	movlw	-1
 16482  0161E0  6AE3               	clrf	plusw1,c
 16483  0161E2  D012               	goto	L13
 16484  0161E4                     l6725:
 16485                           
 16486                           ;stkvar	_divisor @ sp[(-2)+-4]
 16487  0161E4  0EFA               	movlw	-6
 16488  0161E6  50E3               	movf	plusw1,w,c
 16489  0161E8  90D8               	bcf	status,0,c
 16490  0161EA  34E8               	rlcf	wreg,w,c
 16491  0161EC  6E35               	movwf	btemp^0,c
 16492  0161EE  0EFA               	movlw	-6
 16493  0161F0  0060  F0D7  FFE3   	movff	btemp,plusw1
 16494  0161F6  0EFB               	movlw	-5
 16495  0161F8  50E3               	movf	plusw1,w,c
 16496  0161FA  34E8               	rlcf	wreg,w,c
 16497  0161FC  6E35               	movwf	btemp^0,c
 16498  0161FE  0EFB               	movlw	-5
 16499  016200  0060  F0D7  FFE3   	movff	btemp,plusw1
 16500                           
 16501                           ;stkvar	_counter @ sp[(-2)+1]
 16502  016206  0EFF               	movlw	-1
 16503  016208                     L13:
 16504  016208  2AE3               	incf	plusw1,f,c
 16505                           
 16506                           ;stkvar	_divisor @ sp[(-2)+-4]
 16507  01620A  0EFB               	movlw	-5
 16508  01620C  AEE3               	btfss	plusw1,7,c
 16509  01620E  D7EA               	goto	l6725
 16510  016210                     u5850:
 16511                           
 16512                           ;stkvar	_divisor @ sp[(-2)+-4]
 16513  016210  0EFA               	movlw	-6
 16514  016212  006F FF8C  F03F    	movff	plusw1,btemp+10
 16515  016218  0EFB               	movlw	-5
 16516  01621A  006F FF8C  F040    	movff	plusw1,btemp+11
 16517                           
 16518                           ;stkvar	_dividend @ sp[(-2)+-2]
 16519  016220  0EFC               	movlw	-4
 16520  016222  006F FF8C  F03D    	movff	plusw1,btemp+8
 16521  016228  0EFD               	movlw	-3
 16522  01622A  006F FF8C  F03E    	movff	plusw1,btemp+9
 16523  016230  503F               	movf	(btemp+10)^0,w,c
 16524  016232  5C3D               	subwf	(btemp+8)^0,w,c
 16525  016234  5040               	movf	(btemp+11)^0,w,c
 16526  016236  583E               	subwfb	(btemp+9)^0,w,c
 16527  016238  A0D8               	btfss	status,0,c
 16528  01623A  D014               	goto	l6735
 16529                           
 16530                           ;stkvar	_divisor @ sp[(-2)+-4]
 16531                           ;stkvar	_dividend @ sp[(-2)+-2]
 16532  01623C  0EFC               	movlw	-4
 16533  01623E  50E3               	movf	plusw1,w,c
 16534  016240  6E35               	movwf	btemp^0,c
 16535  016242  0EFA               	movlw	-6
 16536  016244  50E3               	movf	plusw1,w,c
 16537  016246  5E35               	subwf	btemp^0,f,c
 16538  016248  0EFC               	movlw	-4
 16539  01624A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16540  016250  0EFD               	movlw	-3
 16541  016252  50E3               	movf	plusw1,w,c
 16542  016254  6E35               	movwf	btemp^0,c
 16543  016256  0EFB               	movlw	-5
 16544  016258  50E3               	movf	plusw1,w,c
 16545  01625A  5A35               	subwfb	btemp^0,f,c
 16546  01625C  0EFD               	movlw	-3
 16547  01625E  0060  F0D7  FFE3   	movff	btemp,plusw1
 16548  016264                     l6735:
 16549                           
 16550                           ;stkvar	_divisor @ sp[(-2)+-4]
 16551  016264  90D8               	bcf	status,0,c
 16552  016266  0EFB               	movlw	-5
 16553  016268  32E3               	rrcf	plusw1,f,c
 16554  01626A  0EFA               	movlw	-6
 16555  01626C  32E3               	rrcf	plusw1,f,c
 16556                           
 16557                           ;stkvar	_counter @ sp[(-2)+1]
 16558  01626E  0EFF               	movlw	-1
 16559  016270  50E3               	movf	plusw1,w,c
 16560  016272  6E35               	movwf	btemp^0,c
 16561  016274  0E01               	movlw	1
 16562  016276  5E35               	subwf	btemp^0,f,c
 16563  016278  0EFF               	movlw	-1
 16564  01627A  0060  F0D7  FFE3   	movff	btemp,plusw1
 16565  016280  A4D8               	btfss	status,2,c
 16566  016282  D7C6               	goto	u5850
 16567  016284                     u5870:
 16568                           
 16569                           ;stkvar	_sign @ sp[(-2)+0]
 16570  016284  0EFE               	movlw	-2
 16571  016286  50E3               	movf	plusw1,w,c
 16572  016288  B4D8               	btfsc	status,2,c
 16573  01628A  D006               	goto	l6743
 16574                           
 16575                           ;stkvar	_dividend @ sp[(-2)+-2]
 16576                           ;stkvar	_dividend @ sp[(-2)+-2]
 16577  01628C  0EFC               	movlw	-4
 16578  01628E  6CE3               	negf	plusw1,c
 16579  016290  0EFD               	movlw	-3
 16580  016292  1EE3               	comf	plusw1,f,c
 16581  016294  B0D8               	btfsc	status,0,c
 16582  016296  2AE3               	incf	plusw1,f,c
 16583  016298                     l6743:
 16584                           
 16585                           ;stkvar	_dividend @ sp[(-2)+-2]
 16586  016298  0EFC               	movlw	-4
 16587  01629A  006F FF8C  F035    	movff	plusw1,btemp
 16588  0162A0  0EFD               	movlw	-3
 16589  0162A2  006F FF8C  F036    	movff	plusw1,btemp+1
 16590                           
 16591                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16592  0162A8  0EFA               	movlw	250
 16593  0162AA  26E1               	addwf	fsr1l,f,c
 16594  0162AC  0EFF               	movlw	255
 16595  0162AE  22E2               	addwfc	fsr1h,f,c
 16596  0162B0  0012               	return		;funcret
 16597  0162B2                     __end_of___awmod:
 16598                           	opt callstack 0
 16599                           
 16600 ;; *************** function ___awdiv *****************
 16601 ;; Defined at:
 16602 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16603 ;; Parameters:    Size  Location     Type
 16604 ;;  dividend        2  [STACK] int 
 16605 ;;  divisor         2  [STACK] int 
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;  quotient        2  [STACK] int 
 16608 ;;  sign            1  [STACK] unsigned char 
 16609 ;;  counter         1  [STACK] unsigned char 
 16610 ;; Return value:  Size  Location     Type
 16611 ;;                  2  [STACK] int 
 16612 ;; Registers used:
 16613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/4
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16623 ;;Total ram usage:        0 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; Hardware stack levels required when called:    6
 16626 ;; This function calls:
 16627 ;;		Nothing
 16628 ;; This function is called by:
 16629 ;;		_efgtoa
 16630 ;; This function uses a reentrant model
 16631 ;;
 16632                           
 16633                           	psect	text54
 16634  015DFA                     __ptext54:
 16635                           	opt callstack 0
 16636  015DFA                     ___awdiv:
 16637                           	opt callstack 0
 16638                           
 16639                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16640  015DFA  52E6               	movf	postinc1,f,c
 16641  015DFC  52E6               	movf	postinc1,f,c
 16642  015DFE  52E6               	movf	postinc1,f,c
 16643  015E00  52E6               	movf	postinc1,f,c
 16644                           
 16645                           ;stkvar	_sign @ sp[(-4)+2]
 16646                           
 16647                           ;incstack = 0
 16648  015E02  0EFE               	movlw	-2
 16649  015E04  6AE3               	clrf	plusw1,c
 16650                           
 16651                           ;stkvar	_divisor @ sp[(-4)+-4]
 16652  015E06  0EF9               	movlw	-7
 16653  015E08  AEE3               	btfss	plusw1,7,c
 16654  015E0A  D009               	goto	l6671
 16655                           
 16656                           ;stkvar	_divisor @ sp[(-4)+-4]
 16657                           ;stkvar	_divisor @ sp[(-4)+-4]
 16658  015E0C  0EF8               	movlw	-8
 16659  015E0E  6CE3               	negf	plusw1,c
 16660  015E10  0EF9               	movlw	-7
 16661  015E12  1EE3               	comf	plusw1,f,c
 16662  015E14  B0D8               	btfsc	status,0,c
 16663  015E16  2AE3               	incf	plusw1,f,c
 16664                           
 16665                           ;stkvar	_sign @ sp[(-4)+2]
 16666  015E18  0EFE               	movlw	-2
 16667  015E1A  6AE3               	clrf	plusw1,c
 16668  015E1C  2AE3               	incf	plusw1,f,c
 16669  015E1E                     l6671:
 16670                           
 16671                           ;stkvar	_dividend @ sp[(-4)+-2]
 16672  015E1E  0EFB               	movlw	-5
 16673  015E20  AEE3               	btfss	plusw1,7,c
 16674  015E22  D008               	goto	l6677
 16675                           
 16676                           ;stkvar	_dividend @ sp[(-4)+-2]
 16677                           ;stkvar	_dividend @ sp[(-4)+-2]
 16678  015E24  0EFA               	movlw	-6
 16679  015E26  6CE3               	negf	plusw1,c
 16680  015E28  0EFB               	movlw	-5
 16681  015E2A  1EE3               	comf	plusw1,f,c
 16682  015E2C  B0D8               	btfsc	status,0,c
 16683  015E2E  2AE3               	incf	plusw1,f,c
 16684                           
 16685                           ;stkvar	_sign @ sp[(-4)+2]
 16686  015E30  0EFE               	movlw	-2
 16687  015E32  70E3               	btg	plusw1,0,c
 16688  015E34                     l6677:
 16689                           
 16690                           ;stkvar	_quotient @ sp[(-4)+0]
 16691  015E34  0EFC               	movlw	-4
 16692  015E36  6AE3               	clrf	plusw1,c
 16693  015E38  0EFD               	movlw	-3
 16694  015E3A  6AE3               	clrf	plusw1,c
 16695                           
 16696                           ;stkvar	_divisor @ sp[(-4)+-4]
 16697  015E3C  0EF8               	movlw	-8
 16698  015E3E  006F FF8C  F035    	movff	plusw1,btemp
 16699  015E44  0EF9               	movlw	-7
 16700  015E46  50E3               	movf	plusw1,w,c
 16701  015E48  1035               	iorwf	btemp^0,w,c
 16702  015E4A  B4D8               	btfsc	status,2,c
 16703  015E4C  D066               	goto	u5800
 16704                           
 16705                           ;stkvar	_counter @ sp[(-4)+3]
 16706  015E4E  0EFF               	movlw	-1
 16707  015E50  6AE3               	clrf	plusw1,c
 16708  015E52  D012               	goto	L14
 16709  015E54                     l6683:
 16710                           
 16711                           ;stkvar	_divisor @ sp[(-4)+-4]
 16712  015E54  0EF8               	movlw	-8
 16713  015E56  50E3               	movf	plusw1,w,c
 16714  015E58  90D8               	bcf	status,0,c
 16715  015E5A  34E8               	rlcf	wreg,w,c
 16716  015E5C  6E35               	movwf	btemp^0,c
 16717  015E5E  0EF8               	movlw	-8
 16718  015E60  0060  F0D7  FFE3   	movff	btemp,plusw1
 16719  015E66  0EF9               	movlw	-7
 16720  015E68  50E3               	movf	plusw1,w,c
 16721  015E6A  34E8               	rlcf	wreg,w,c
 16722  015E6C  6E35               	movwf	btemp^0,c
 16723  015E6E  0EF9               	movlw	-7
 16724  015E70  0060  F0D7  FFE3   	movff	btemp,plusw1
 16725                           
 16726                           ;stkvar	_counter @ sp[(-4)+3]
 16727  015E76  0EFF               	movlw	-1
 16728  015E78                     L14:
 16729  015E78  2AE3               	incf	plusw1,f,c
 16730                           
 16731                           ;stkvar	_divisor @ sp[(-4)+-4]
 16732  015E7A  0EF9               	movlw	-7
 16733  015E7C  AEE3               	btfss	plusw1,7,c
 16734  015E7E  D7EA               	goto	l6683
 16735  015E80                     u5780:
 16736                           
 16737                           ;stkvar	_quotient @ sp[(-4)+0]
 16738  015E80  0EFC               	movlw	-4
 16739  015E82  50E3               	movf	plusw1,w,c
 16740  015E84  90D8               	bcf	status,0,c
 16741  015E86  34E8               	rlcf	wreg,w,c
 16742  015E88  6E35               	movwf	btemp^0,c
 16743  015E8A  0EFC               	movlw	-4
 16744  015E8C  0060  F0D7  FFE3   	movff	btemp,plusw1
 16745  015E92  0EFD               	movlw	-3
 16746  015E94  50E3               	movf	plusw1,w,c
 16747  015E96  34E8               	rlcf	wreg,w,c
 16748  015E98  6E35               	movwf	btemp^0,c
 16749  015E9A  0EFD               	movlw	-3
 16750  015E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 16751                           
 16752                           ;stkvar	_divisor @ sp[(-4)+-4]
 16753  015EA2  0EF8               	movlw	-8
 16754  015EA4  006F FF8C  F03F    	movff	plusw1,btemp+10
 16755  015EAA  0EF9               	movlw	-7
 16756  015EAC  006F FF8C  F040    	movff	plusw1,btemp+11
 16757                           
 16758                           ;stkvar	_dividend @ sp[(-4)+-2]
 16759  015EB2  0EFA               	movlw	-6
 16760  015EB4  006F FF8C  F03D    	movff	plusw1,btemp+8
 16761  015EBA  0EFB               	movlw	-5
 16762  015EBC  006F FF8C  F03E    	movff	plusw1,btemp+9
 16763  015EC2  503F               	movf	(btemp+10)^0,w,c
 16764  015EC4  5C3D               	subwf	(btemp+8)^0,w,c
 16765  015EC6  5040               	movf	(btemp+11)^0,w,c
 16766  015EC8  583E               	subwfb	(btemp+9)^0,w,c
 16767  015ECA  A0D8               	btfss	status,0,c
 16768  015ECC  D016               	goto	l6697
 16769                           
 16770                           ;stkvar	_divisor @ sp[(-4)+-4]
 16771                           ;stkvar	_dividend @ sp[(-4)+-2]
 16772  015ECE  0EFA               	movlw	-6
 16773  015ED0  50E3               	movf	plusw1,w,c
 16774  015ED2  6E35               	movwf	btemp^0,c
 16775  015ED4  0EF8               	movlw	-8
 16776  015ED6  50E3               	movf	plusw1,w,c
 16777  015ED8  5E35               	subwf	btemp^0,f,c
 16778  015EDA  0EFA               	movlw	-6
 16779  015EDC  0060  F0D7  FFE3   	movff	btemp,plusw1
 16780  015EE2  0EFB               	movlw	-5
 16781  015EE4  50E3               	movf	plusw1,w,c
 16782  015EE6  6E35               	movwf	btemp^0,c
 16783  015EE8  0EF9               	movlw	-7
 16784  015EEA  50E3               	movf	plusw1,w,c
 16785  015EEC  5A35               	subwfb	btemp^0,f,c
 16786  015EEE  0EFB               	movlw	-5
 16787  015EF0  0060  F0D7  FFE3   	movff	btemp,plusw1
 16788                           
 16789                           ;stkvar	_quotient @ sp[(-4)+0]
 16790  015EF6  0EFC               	movlw	-4
 16791  015EF8  80E3               	bsf	plusw1,0,c
 16792  015EFA                     l6697:
 16793                           
 16794                           ;stkvar	_divisor @ sp[(-4)+-4]
 16795  015EFA  90D8               	bcf	status,0,c
 16796  015EFC  0EF9               	movlw	-7
 16797  015EFE  32E3               	rrcf	plusw1,f,c
 16798  015F00  0EF8               	movlw	-8
 16799  015F02  32E3               	rrcf	plusw1,f,c
 16800                           
 16801                           ;stkvar	_counter @ sp[(-4)+3]
 16802  015F04  0EFF               	movlw	-1
 16803  015F06  50E3               	movf	plusw1,w,c
 16804  015F08  6E35               	movwf	btemp^0,c
 16805  015F0A  0E01               	movlw	1
 16806  015F0C  5E35               	subwf	btemp^0,f,c
 16807  015F0E  0EFF               	movlw	-1
 16808  015F10  0060  F0D7  FFE3   	movff	btemp,plusw1
 16809  015F16  A4D8               	btfss	status,2,c
 16810  015F18  D7B3               	goto	u5780
 16811  015F1A                     u5800:
 16812                           
 16813                           ;stkvar	_sign @ sp[(-4)+2]
 16814  015F1A  0EFE               	movlw	-2
 16815  015F1C  50E3               	movf	plusw1,w,c
 16816  015F1E  B4D8               	btfsc	status,2,c
 16817  015F20  D006               	goto	l6705
 16818                           
 16819                           ;stkvar	_quotient @ sp[(-4)+0]
 16820                           ;stkvar	_quotient @ sp[(-4)+0]
 16821  015F22  0EFC               	movlw	-4
 16822  015F24  6CE3               	negf	plusw1,c
 16823  015F26  0EFD               	movlw	-3
 16824  015F28  1EE3               	comf	plusw1,f,c
 16825  015F2A  B0D8               	btfsc	status,0,c
 16826  015F2C  2AE3               	incf	plusw1,f,c
 16827  015F2E                     l6705:
 16828                           
 16829                           ;stkvar	_quotient @ sp[(-4)+0]
 16830  015F2E  0EFC               	movlw	-4
 16831  015F30  006F FF8C  F035    	movff	plusw1,btemp
 16832  015F36  0EFD               	movlw	-3
 16833  015F38  006F FF8C  F036    	movff	plusw1,btemp+1
 16834                           
 16835                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16836  015F3E  0EF8               	movlw	248
 16837  015F40  26E1               	addwf	fsr1l,f,c
 16838  015F42  0EFF               	movlw	255
 16839  015F44  22E2               	addwfc	fsr1h,f,c
 16840  015F46  0012               	return		;funcret
 16841  015F48                     __end_of___awdiv:
 16842                           	opt callstack 0
 16843                           
 16844 ;; *************** function _dtoa *****************
 16845 ;; Defined at:
 16846 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16847 ;; Parameters:    Size  Location     Type
 16848 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16849 ;;		 -> f(6), NULL(0), 
 16850 ;;  d               8  [STACK] long long 
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  n               8  [STACK] long long 
 16853 ;;  i               2  [STACK] int 
 16854 ;;  s               2  [STACK] int 
 16855 ;;  w               2  [STACK] int 
 16856 ;;  p               2  [STACK] int 
 16857 ;; Return value:  Size  Location     Type
 16858 ;;                  2  [STACK] int 
 16859 ;; Registers used:
 16860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16861 ;; Tracked objects:
 16862 ;;		On entry : 0/4
 16863 ;;		On exit  : 0/0
 16864 ;;		Unchanged: 0/0
 16865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16870 ;;Total ram usage:        0 bytes
 16871 ;; Hardware stack levels used:    1
 16872 ;; Hardware stack levels required when called:   11
 16873 ;; This function calls:
 16874 ;;		___aodiv
 16875 ;;		___aomod
 16876 ;;		_abs
 16877 ;;		_pad
 16878 ;; This function is called by:
 16879 ;;		_vfpfcnvrt
 16880 ;; This function uses a reentrant model
 16881 ;;
 16882                           
 16883                           	psect	text55
 16884  0132E2                     __ptext55:
 16885                           	opt callstack 0
 16886  0132E2                     _dtoa:
 16887                           	opt callstack 0
 16888                           
 16889                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16890  0132E2  0E12               	movlw	18
 16891  0132E4  26E1               	addwf	fsr1l,f,c
 16892  0132E6  0E00               	movlw	0
 16893  0132E8  22E2               	addwfc	fsr1h,f,c
 16894                           
 16895                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16896                           ;stkvar	_d @ sp[(-18)+-10]
 16897                           
 16898                           ;incstack = 0
 16899  0132EA  0EE4               	movlw	228
 16900  0132EC  24E1               	addwf	fsr1l,w,c
 16901  0132EE  6ED9               	movwf	fsr2l,c
 16902  0132F0  0EFF               	movlw	255
 16903  0132F2  20E2               	addwfc	fsr1h,w,c
 16904  0132F4  6EDA               	movwf	fsr2h,c
 16905                           
 16906                           ;stkvar	_n @ sp[(-18)+2]
 16907  0132F6  0E08               	movlw	8
 16908  0132F8  6E35               	movwf	btemp^0,c
 16909  0132FA  0EF0               	movlw	-16
 16910  0132FC                     us841999:
 16911  0132FC  006F FF7B FFE3     	movff	postinc2,plusw1
 16912  013302  28E8               	incf	wreg,w,c
 16913  013304  2E35               	decfsz	btemp^0,f,c
 16914  013306  D7FA               	bra	us841999
 16915                           
 16916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16917                           ;stkvar	_n @ sp[(-18)+2]
 16918  013308  0EF7               	movlw	-9
 16919  01330A  AEE3               	btfss	plusw1,7,c
 16920  01330C  D002               	goto	u8420
 16921  01330E  0E01               	movlw	1
 16922  013310  D001               	goto	u8430
 16923  013312                     u8420:
 16924  013312  0E00               	movlw	0
 16925  013314                     u8430:
 16926  013314  6E3F               	movwf	(btemp+10)^0,c
 16927  013316  6A40               	clrf	(btemp+11)^0,c
 16928                           
 16929                           ;stkvar	_s @ sp[(-18)+12]
 16930  013318  0EFA               	movlw	-6
 16931  01331A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16932  013320  0EFB               	movlw	-5
 16933  013322  0060  F103  FFE3   	movff	btemp+11,plusw1
 16934                           
 16935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16936                           ;stkvar	_s @ sp[(-18)+12]
 16937  013328  0EFA               	movlw	-6
 16938  01332A  006F FF8C  F035    	movff	plusw1,btemp
 16939  013330  0EFB               	movlw	-5
 16940  013332  50E3               	movf	plusw1,w,c
 16941  013334  1035               	iorwf	btemp^0,w,c
 16942  013336  B4D8               	btfsc	status,2,c
 16943  013338  D025               	goto	u8450
 16944                           
 16945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16946                           ;stkvar	_n @ sp[(-18)+2]
 16947                           ;stkvar	_n @ sp[(-18)+2]
 16948  01333A  0EF0               	movlw	-16
 16949  01333C  6CE3               	negf	plusw1,c
 16950  01333E  0EF1               	movlw	-15
 16951  013340  1EE3               	comf	plusw1,f,c
 16952  013342  0EF2               	movlw	-14
 16953  013344  1EE3               	comf	plusw1,f,c
 16954  013346  0EF3               	movlw	-13
 16955  013348  1EE3               	comf	plusw1,f,c
 16956  01334A  0EF4               	movlw	-12
 16957  01334C  1EE3               	comf	plusw1,f,c
 16958  01334E  0EF5               	movlw	-11
 16959  013350  1EE3               	comf	plusw1,f,c
 16960  013352  0EF6               	movlw	-10
 16961  013354  1EE3               	comf	plusw1,f,c
 16962  013356  0EF7               	movlw	-9
 16963  013358  1EE3               	comf	plusw1,f,c
 16964  01335A  E314               	bnc	u8450
 16965  01335C  0EF1               	movlw	-15
 16966  01335E  2AE3               	incf	plusw1,f,c
 16967  013360  E311               	bnc	u8450
 16968  013362  0EF2               	movlw	-14
 16969  013364  2AE3               	incf	plusw1,f,c
 16970  013366  E30E               	bnc	u8450
 16971  013368  0EF3               	movlw	-13
 16972  01336A  2AE3               	incf	plusw1,f,c
 16973  01336C  E30B               	bnc	u8450
 16974  01336E  0EF4               	movlw	-12
 16975  013370  2AE3               	incf	plusw1,f,c
 16976  013372  E308               	bnc	u8450
 16977  013374  0EF5               	movlw	-11
 16978  013376  2AE3               	incf	plusw1,f,c
 16979  013378  E305               	bnc	u8450
 16980  01337A  0EF6               	movlw	-10
 16981  01337C  2AE3               	incf	plusw1,f,c
 16982  01337E  E302               	bnc	u8450
 16983  013380  0EF7               	movlw	-9
 16984  013382  2AE3               	incf	plusw1,f,c
 16985  013384                     u8450:
 16986                           
 16987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16988  013384  AE21               	btfss	(_prec+1)^0,7,c
 16989                           
 16990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16991  013386  9222               	bcf	_flags^0,1,c
 16992                           
 16993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16994  013388  BE21               	btfsc	(_prec+1)^0,7,c
 16995  01338A  D005               	goto	u8470
 16996  01338C  5021               	movf	(_prec+1)^0,w,c
 16997  01338E  E110               	bnz	l8931
 16998  013390  0420               	decf	_prec^0,w,c
 16999  013392  B0D8               	btfsc	status,0,c
 17000  013394  D00D               	goto	l8931
 17001  013396                     u8470:
 17002  013396  0E01               	movlw	1
 17003  013398  6E3F               	movwf	(btemp+10)^0,c
 17004  01339A  0E00               	movlw	0
 17005  01339C  6E40               	movwf	(btemp+11)^0,c
 17006                           
 17007                           ;stkvar	_p @ sp[(-18)+16]
 17008  01339E  0EFE               	movlw	-2
 17009  0133A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17010  0133A6  0EFF               	movlw	-1
 17011  0133A8  0060  F103  FFE3   	movff	btemp+11,plusw1
 17012  0133AE  D008               	goto	l1749
 17013  0133B0                     l8931:
 17014                           
 17015                           ;stkvar	_p @ sp[(-18)+16]
 17016  0133B0  0EFE               	movlw	-2
 17017  0133B2  0060  F083  FFE3   	movff	_prec,plusw1
 17018  0133B8  0EFF               	movlw	-1
 17019  0133BA  0060  F087  FFE3   	movff	_prec+1,plusw1
 17020  0133C0                     l1749:
 17021                           
 17022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17023                           ;stkvar	_w @ sp[(-18)+14]
 17024  0133C0  0EFC               	movlw	-4
 17025  0133C2  0060  F07B  FFE3   	movff	_width,plusw1
 17026  0133C8  0EFD               	movlw	-3
 17027  0133CA  0060  F07F  FFE3   	movff	_width+1,plusw1
 17028                           
 17029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17030                           ;stkvar	_s @ sp[(-18)+12]
 17031  0133D0  0EFA               	movlw	-6
 17032  0133D2  006F FF8C  F035    	movff	plusw1,btemp
 17033  0133D8  0EFB               	movlw	-5
 17034  0133DA  50E3               	movf	plusw1,w,c
 17035  0133DC  1035               	iorwf	btemp^0,w,c
 17036  0133DE  A4D8               	btfss	status,2,c
 17037  0133E0  D002               	goto	u8490
 17038  0133E2  A422               	btfss	_flags^0,2,c
 17039  0133E4  D00A               	goto	l8939
 17040  0133E6                     u8490:
 17041                           
 17042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17043                           ;stkvar	_w @ sp[(-18)+14]
 17044  0133E6  50E1               	movf	fsr1l,w,c
 17045  0133E8  0FFC               	addlw	-4
 17046  0133EA  6ED9               	movwf	fsr2l,c
 17047  0133EC  50E2               	movf	fsr1h,w,c
 17048  0133EE  6EDA               	movwf	fsr2h,c
 17049  0133F0  0EFF               	movlw	255
 17050  0133F2  22DA               	addwfc	fsr2h,f,c
 17051  0133F4  06DE               	decf	postinc2,f,c
 17052  0133F6  0E00               	movlw	0
 17053  0133F8  5ADD               	subwfb	postdec2,f,c
 17054  0133FA                     l8939:
 17055                           
 17056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17057  0133FA  0E4F               	movlw	79
 17058  0133FC  6E3F               	movwf	(btemp+10)^0,c
 17059  0133FE  0E00               	movlw	0
 17060  013400  6E40               	movwf	(btemp+11)^0,c
 17061                           
 17062                           ;stkvar	_i @ sp[(-18)+10]
 17063  013402  0EF8               	movlw	-8
 17064  013404  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17065  01340A  0EF9               	movlw	-7
 17066  01340C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17067                           
 17068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17069  013412  0101               	movlb	1	; () banked
 17070  013414  6BF3               	clrf	(_dbuf+79)& (0+255),b
 17071                           
 17072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17073  013416  D109               	goto	l8953
 17074  013418                     l8943:
 17075                           
 17076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17077                           ;stkvar	_i @ sp[(-18)+10]
 17078  013418  50E1               	movf	fsr1l,w,c
 17079  01341A  0FF8               	addlw	-8
 17080  01341C  6ED9               	movwf	fsr2l,c
 17081  01341E  50E2               	movf	fsr1h,w,c
 17082  013420  6EDA               	movwf	fsr2h,c
 17083  013422  0EFF               	movlw	255
 17084  013424  22DA               	addwfc	fsr2h,f,c
 17085  013426  06DE               	decf	postinc2,f,c
 17086  013428  0E00               	movlw	0
 17087  01342A  5ADD               	subwfb	postdec2,f,c
 17088                           
 17089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17090  01342C  0E0A               	movlw	10
 17091  01342E  6EE6               	movwf	postinc1,c
 17092  013430  0E00               	movlw	0
 17093  013432  6EE6               	movwf	postinc1,c
 17094  013434  0E00               	movlw	0
 17095  013436  6EE6               	movwf	postinc1,c
 17096  013438  0E00               	movlw	0
 17097  01343A  6EE6               	movwf	postinc1,c
 17098  01343C  0E00               	movlw	0
 17099  01343E  6EE6               	movwf	postinc1,c
 17100  013440  0E00               	movlw	0
 17101  013442  6EE6               	movwf	postinc1,c
 17102  013444  0E00               	movlw	0
 17103  013446  6EE6               	movwf	postinc1,c
 17104  013448  0E00               	movlw	0
 17105  01344A  6EE6               	movwf	postinc1,c
 17106                           
 17107                           ;stkvar	_n @ sp[(-26)+2]
 17108  01344C  50E1               	movf	fsr1l,w,c
 17109  01344E  0FE8               	addlw	-24
 17110  013450  6ED9               	movwf	fsr2l,c
 17111  013452  50E2               	movf	fsr1h,w,c
 17112  013454  6EDA               	movwf	fsr2h,c
 17113  013456  0EFF               	movlw	255
 17114  013458  22DA               	addwfc	fsr2h,f,c
 17115  01345A  006F FF7B FFE6     	movff	postinc2,postinc1
 17116  013460  006F FF7B FFE6     	movff	postinc2,postinc1
 17117  013466  006F FF7B FFE6     	movff	postinc2,postinc1
 17118  01346C  006F FF7B FFE6     	movff	postinc2,postinc1
 17119  013472  006F FF7B FFE6     	movff	postinc2,postinc1
 17120  013478  006F FF7B FFE6     	movff	postinc2,postinc1
 17121  01347E  006F FF7B FFE6     	movff	postinc2,postinc1
 17122  013484  006F FF7B FFE6     	movff	postinc2,postinc1
 17123  01348A  ECC9  F0A7         	call	___aomod	;wreg free
 17124  01348E  52E5               	movf	postdec1,f,c
 17125  013490  006F FF9C  F04C    	movff	indf1,btemp+23
 17126  013496  52E5               	movf	postdec1,f,c
 17127  013498  006F FF9C  F04B    	movff	indf1,btemp+22
 17128  01349E  52E5               	movf	postdec1,f,c
 17129  0134A0  006F FF9C  F04A    	movff	indf1,btemp+21
 17130  0134A6  52E5               	movf	postdec1,f,c
 17131  0134A8  006F FF9C  F049    	movff	indf1,btemp+20
 17132  0134AE  52E5               	movf	postdec1,f,c
 17133  0134B0  006F FF9C  F048    	movff	indf1,btemp+19
 17134  0134B6  52E5               	movf	postdec1,f,c
 17135  0134B8  006F FF9C  F047    	movff	indf1,btemp+18
 17136  0134BE  52E5               	movf	postdec1,f,c
 17137  0134C0  006F FF9C  F046    	movff	indf1,btemp+17
 17138  0134C6  52E5               	movf	postdec1,f,c
 17139  0134C8  006F FF9C  F045    	movff	indf1,btemp+16
 17140  0134CE  0EF8               	movlw	248
 17141  0134D0  26E1               	addwf	fsr1l,f,c
 17142  0134D2  0EFF               	movlw	255
 17143  0134D4  22E2               	addwfc	fsr1h,f,c
 17144  0134D6  0060  F114  F03F   	movff	btemp+16,btemp+10
 17145  0134DC  0060  F118  F040   	movff	btemp+17,btemp+11
 17146  0134E2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17147  0134E8  0060  F103  FFE6   	movff	btemp+11,postinc1
 17148  0134EE  ECE5  F0BA         	call	_abs	;wreg free
 17149  0134F2  0E30               	movlw	48
 17150  0134F4  2635               	addwf	btemp^0,f,c
 17151                           
 17152                           ;stkvar	_i @ sp[(-18)+10]
 17153  0134F6  0EF8               	movlw	-8
 17154  0134F8  006F FF8C  F03F    	movff	plusw1,btemp+10
 17155  0134FE  0EF9               	movlw	-7
 17156  013500  006F FF8C  F040    	movff	plusw1,btemp+11
 17157  013506  0EA4               	movlw	low _dbuf
 17158  013508  243F               	addwf	(btemp+10)^0,w,c
 17159  01350A  6ED9               	movwf	fsr2l,c
 17160  01350C  0E01               	movlw	high _dbuf
 17161  01350E  2040               	addwfc	(btemp+11)^0,w,c
 17162  013510  6EDA               	movwf	fsr2h,c
 17163  013512  0060  F0D7  FFDF   	movff	btemp,indf2
 17164                           
 17165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17166                           ;stkvar	_p @ sp[(-18)+16]
 17167  013518  50E1               	movf	fsr1l,w,c
 17168  01351A  0FFE               	addlw	-2
 17169  01351C  6ED9               	movwf	fsr2l,c
 17170  01351E  50E2               	movf	fsr1h,w,c
 17171  013520  6EDA               	movwf	fsr2h,c
 17172  013522  0EFF               	movlw	255
 17173  013524  22DA               	addwfc	fsr2h,f,c
 17174  013526  06DE               	decf	postinc2,f,c
 17175  013528  0E00               	movlw	0
 17176  01352A  5ADD               	subwfb	postdec2,f,c
 17177                           
 17178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17179                           ;stkvar	_w @ sp[(-18)+14]
 17180  01352C  50E1               	movf	fsr1l,w,c
 17181  01352E  0FFC               	addlw	-4
 17182  013530  6ED9               	movwf	fsr2l,c
 17183  013532  50E2               	movf	fsr1h,w,c
 17184  013534  6EDA               	movwf	fsr2h,c
 17185  013536  0EFF               	movlw	255
 17186  013538  22DA               	addwfc	fsr2h,f,c
 17187  01353A  06DE               	decf	postinc2,f,c
 17188  01353C  0E00               	movlw	0
 17189  01353E  5ADD               	subwfb	postdec2,f,c
 17190                           
 17191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17192  013540  0E0A               	movlw	10
 17193  013542  6EE6               	movwf	postinc1,c
 17194  013544  0E00               	movlw	0
 17195  013546  6EE6               	movwf	postinc1,c
 17196  013548  0E00               	movlw	0
 17197  01354A  6EE6               	movwf	postinc1,c
 17198  01354C  0E00               	movlw	0
 17199  01354E  6EE6               	movwf	postinc1,c
 17200  013550  0E00               	movlw	0
 17201  013552  6EE6               	movwf	postinc1,c
 17202  013554  0E00               	movlw	0
 17203  013556  6EE6               	movwf	postinc1,c
 17204  013558  0E00               	movlw	0
 17205  01355A  6EE6               	movwf	postinc1,c
 17206  01355C  0E00               	movlw	0
 17207  01355E  6EE6               	movwf	postinc1,c
 17208                           
 17209                           ;stkvar	_n @ sp[(-26)+2]
 17210  013560  50E1               	movf	fsr1l,w,c
 17211  013562  0FE8               	addlw	-24
 17212  013564  6ED9               	movwf	fsr2l,c
 17213  013566  50E2               	movf	fsr1h,w,c
 17214  013568  6EDA               	movwf	fsr2h,c
 17215  01356A  0EFF               	movlw	255
 17216  01356C  22DA               	addwfc	fsr2h,f,c
 17217  01356E  006F FF7B FFE6     	movff	postinc2,postinc1
 17218  013574  006F FF7B FFE6     	movff	postinc2,postinc1
 17219  01357A  006F FF7B FFE6     	movff	postinc2,postinc1
 17220  013580  006F FF7B FFE6     	movff	postinc2,postinc1
 17221  013586  006F FF7B FFE6     	movff	postinc2,postinc1
 17222  01358C  006F FF7B FFE6     	movff	postinc2,postinc1
 17223  013592  006F FF7B FFE6     	movff	postinc2,postinc1
 17224  013598  006F FF7B FFE6     	movff	postinc2,postinc1
 17225  01359E  EC1C  F0A4         	call	___aodiv	;wreg free
 17226  0135A2  52E5               	movf	postdec1,f,c
 17227  0135A4  006F FF9C  F04C    	movff	indf1,btemp+23
 17228  0135AA  52E5               	movf	postdec1,f,c
 17229  0135AC  006F FF9C  F04B    	movff	indf1,btemp+22
 17230  0135B2  52E5               	movf	postdec1,f,c
 17231  0135B4  006F FF9C  F04A    	movff	indf1,btemp+21
 17232  0135BA  52E5               	movf	postdec1,f,c
 17233  0135BC  006F FF9C  F049    	movff	indf1,btemp+20
 17234  0135C2  52E5               	movf	postdec1,f,c
 17235  0135C4  006F FF9C  F048    	movff	indf1,btemp+19
 17236  0135CA  52E5               	movf	postdec1,f,c
 17237  0135CC  006F FF9C  F047    	movff	indf1,btemp+18
 17238  0135D2  52E5               	movf	postdec1,f,c
 17239  0135D4  006F FF9C  F046    	movff	indf1,btemp+17
 17240  0135DA  52E5               	movf	postdec1,f,c
 17241  0135DC  006F FF9C  F045    	movff	indf1,btemp+16
 17242  0135E2  0EF8               	movlw	248
 17243  0135E4  26E1               	addwf	fsr1l,f,c
 17244  0135E6  0EFF               	movlw	255
 17245  0135E8  22E2               	addwfc	fsr1h,f,c
 17246                           
 17247                           ;stkvar	_n @ sp[(-18)+2]
 17248  0135EA  0EF0               	movlw	-16
 17249  0135EC  0060  F117  FFE3   	movff	btemp+16,plusw1
 17250  0135F2  0EF1               	movlw	-15
 17251  0135F4  0060  F11B  FFE3   	movff	btemp+17,plusw1
 17252  0135FA  0EF2               	movlw	-14
 17253  0135FC  0060  F11F  FFE3   	movff	btemp+18,plusw1
 17254  013602  0EF3               	movlw	-13
 17255  013604  0060  F123  FFE3   	movff	btemp+19,plusw1
 17256  01360A  0EF4               	movlw	-12
 17257  01360C  0060  F127  FFE3   	movff	btemp+20,plusw1
 17258  013612  0EF5               	movlw	-11
 17259  013614  0060  F12B  FFE3   	movff	btemp+21,plusw1
 17260  01361A  0EF6               	movlw	-10
 17261  01361C  0060  F12F  FFE3   	movff	btemp+22,plusw1
 17262  013622  0EF7               	movlw	-9
 17263  013624  0060  F133  FFE3   	movff	btemp+23,plusw1
 17264  01362A                     l8953:
 17265                           
 17266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17267                           ;stkvar	_i @ sp[(-18)+10]
 17268  01362A  0EF9               	movlw	-7
 17269  01362C  BEE3               	btfsc	plusw1,7,c
 17270  01362E  D036               	goto	u8540
 17271  013630  0EF9               	movlw	-7
 17272  013632  50E3               	movf	plusw1,w,c
 17273  013634  E104               	bnz	u8500
 17274  013636  0EF8               	movlw	-8
 17275  013638  04E3               	decf	plusw1,w,c
 17276  01363A  A0D8               	btfss	status,0,c
 17277  01363C  D02F               	goto	u8540
 17278  01363E                     u8500:
 17279                           
 17280                           ;stkvar	_n @ sp[(-18)+2]
 17281  01363E  0EF0               	movlw	-16
 17282  013640  50E3               	movf	plusw1,w,c
 17283  013642  E115               	bnz	u8511
 17284  013644  0EF1               	movlw	-15
 17285  013646  50E3               	movf	plusw1,w,c
 17286  013648  E112               	bnz	u8511
 17287  01364A  0EF2               	movlw	-14
 17288  01364C  50E3               	movf	plusw1,w,c
 17289  01364E  E10F               	bnz	u8511
 17290  013650  0EF3               	movlw	-13
 17291  013652  50E3               	movf	plusw1,w,c
 17292  013654  E10C               	bnz	u8511
 17293  013656  0EF4               	movlw	-12
 17294  013658  50E3               	movf	plusw1,w,c
 17295  01365A  E109               	bnz	u8511
 17296  01365C  0EF5               	movlw	-11
 17297  01365E  50E3               	movf	plusw1,w,c
 17298  013660  E106               	bnz	u8511
 17299  013662  0EF6               	movlw	-10
 17300  013664  50E3               	movf	plusw1,w,c
 17301  013666  E103               	bnz	u8511
 17302  013668  0EF7               	movlw	-9
 17303  01366A  50E3               	movf	plusw1,w,c
 17304  01366C  A4D8               	btfss	status,2,c
 17305  01366E                     u8511:
 17306  01366E  D6D4               	goto	l8943
 17307                           
 17308                           ;stkvar	_p @ sp[(-18)+16]
 17309  013670  0EFF               	movlw	-1
 17310  013672  BEE3               	btfsc	plusw1,7,c
 17311  013674  D007               	goto	u8520
 17312  013676  0EFF               	movlw	-1
 17313  013678  50E3               	movf	plusw1,w,c
 17314  01367A  E103               	bnz	u8521
 17315  01367C  0EFE               	movlw	-2
 17316  01367E  04E3               	decf	plusw1,w,c
 17317  013680  B0D8               	btfsc	status,0,c
 17318  013682                     u8521:
 17319  013682  D6CA               	goto	l8943
 17320  013684                     u8520:
 17321                           
 17322                           ;stkvar	_w @ sp[(-18)+14]
 17323  013684  0EFD               	movlw	-3
 17324  013686  BEE3               	btfsc	plusw1,7,c
 17325  013688  D009               	goto	u8540
 17326  01368A  0EFD               	movlw	-3
 17327  01368C  50E3               	movf	plusw1,w,c
 17328  01368E  E104               	bnz	u8530
 17329  013690  0EFC               	movlw	-4
 17330  013692  04E3               	decf	plusw1,w,c
 17331  013694  A0D8               	btfss	status,0,c
 17332  013696  D002               	goto	u8540
 17333  013698                     u8530:
 17334  013698  B222               	btfsc	_flags^0,1,c
 17335  01369A  D6BE               	goto	l8943
 17336  01369C                     u8540:
 17337                           
 17338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17339                           ;stkvar	_s @ sp[(-18)+12]
 17340  01369C  0EFA               	movlw	-6
 17341  01369E  006F FF8C  F035    	movff	plusw1,btemp
 17342  0136A4  0EFB               	movlw	-5
 17343  0136A6  50E3               	movf	plusw1,w,c
 17344  0136A8  1035               	iorwf	btemp^0,w,c
 17345  0136AA  A4D8               	btfss	status,2,c
 17346  0136AC  D002               	goto	u8560
 17347  0136AE  A422               	btfss	_flags^0,2,c
 17348  0136B0  D033               	goto	l8977
 17349  0136B2                     u8560:
 17350                           
 17351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17352                           ;stkvar	_i @ sp[(-18)+10]
 17353  0136B2  50E1               	movf	fsr1l,w,c
 17354  0136B4  0FF8               	addlw	-8
 17355  0136B6  6ED9               	movwf	fsr2l,c
 17356  0136B8  50E2               	movf	fsr1h,w,c
 17357  0136BA  6EDA               	movwf	fsr2h,c
 17358  0136BC  0EFF               	movlw	255
 17359  0136BE  22DA               	addwfc	fsr2h,f,c
 17360  0136C0  06DE               	decf	postinc2,f,c
 17361  0136C2  0E00               	movlw	0
 17362  0136C4  5ADD               	subwfb	postdec2,f,c
 17363                           
 17364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17365                           ;stkvar	_s @ sp[(-18)+12]
 17366  0136C6  0EFA               	movlw	-6
 17367  0136C8  006F FF8C  F035    	movff	plusw1,btemp
 17368  0136CE  0EFB               	movlw	-5
 17369  0136D0  50E3               	movf	plusw1,w,c
 17370  0136D2  1035               	iorwf	btemp^0,w,c
 17371  0136D4  A4D8               	btfss	status,2,c
 17372  0136D6  D002               	goto	l8973
 17373  0136D8  0E2B               	movlw	43
 17374  0136DA  D001               	goto	L15
 17375  0136DC                     l8973:
 17376  0136DC  0E2D               	movlw	45
 17377  0136DE                     L15:
 17378  0136DE  6E3F               	movwf	(btemp+10)^0,c
 17379  0136E0  0E00               	movlw	0
 17380  0136E2  6E40               	movwf	(btemp+11)^0,c
 17381                           
 17382                           ;stkvar	_dtoa$4080 @ sp[(-18)+0]
 17383  0136E4  0EEE               	movlw	-18
 17384  0136E6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17385  0136EC  0EEF               	movlw	-17
 17386  0136EE  0060  F103  FFE3   	movff	btemp+11,plusw1
 17387                           
 17388                           ;stkvar	_dtoa$4080 @ sp[(-18)+0]
 17389                           ;stkvar	_i @ sp[(-18)+10]
 17390  0136F4  0EF8               	movlw	-8
 17391  0136F6  006F FF8C  F03F    	movff	plusw1,btemp+10
 17392  0136FC  0EF9               	movlw	-7
 17393  0136FE  006F FF8C  F040    	movff	plusw1,btemp+11
 17394  013704  0EA4               	movlw	low _dbuf
 17395  013706  243F               	addwf	(btemp+10)^0,w,c
 17396  013708  6ED9               	movwf	fsr2l,c
 17397  01370A  0E01               	movlw	high _dbuf
 17398  01370C  2040               	addwfc	(btemp+11)^0,w,c
 17399  01370E  6EDA               	movwf	fsr2h,c
 17400  013710  0EEE               	movlw	-18
 17401  013712  006F FF8F FFDF     	movff	plusw1,indf2
 17402  013718                     l8977:
 17403                           
 17404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17405                           ;stkvar	_w @ sp[(-18)+14]
 17406  013718  0EFC               	movlw	-4
 17407  01371A  006F FF8F FFE6     	movff	plusw1,postinc1
 17408  013720  006F FF8F FFE6     	movff	plusw1,postinc1
 17409                           
 17410                           ;stkvar	_i @ sp[(-20)+10]
 17411  013726  0EA4               	movlw	low _dbuf
 17412  013728  6E3F               	movwf	(btemp+10)^0,c
 17413  01372A  0E01               	movlw	high _dbuf
 17414  01372C  6E40               	movwf	(btemp+11)^0,c
 17415  01372E  0EF6               	movlw	-10
 17416  013730  50E3               	movf	plusw1,w,c
 17417  013732  263F               	addwf	(btemp+10)^0,f,c
 17418  013734  0EF7               	movlw	-9
 17419  013736  50E3               	movf	plusw1,w,c
 17420  013738  2240               	addwfc	(btemp+11)^0,f,c
 17421  01373A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 17422  013740  0060  F103  FFE6   	movff	btemp+11,postinc1
 17423                           
 17424                           ;stkvar	_fp @ sp[(-22)+-2]
 17425  013746  0EE8               	movlw	-24
 17426  013748  006F FF8F FFE6     	movff	plusw1,postinc1
 17427  01374E  006F FF8F FFE6     	movff	plusw1,postinc1
 17428  013754  EC59  F0B1         	call	_pad	;wreg free
 17429                           
 17430                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17431  013758  0EE4               	movlw	228
 17432  01375A  26E1               	addwf	fsr1l,f,c
 17433  01375C  0EFF               	movlw	255
 17434  01375E  22E2               	addwfc	fsr1h,f,c
 17435  013760  0012               	return		;funcret
 17436  013762                     __end_of_dtoa:
 17437                           	opt callstack 0
 17438                           
 17439 ;; *************** function _abs *****************
 17440 ;; Defined at:
 17441 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  a               2  [STACK] int 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;		None
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  2  [STACK] int 
 17448 ;; Registers used:
 17449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/1
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17459 ;;Total ram usage:        0 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:    6
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_dtoa
 17466 ;; This function uses a reentrant model
 17467 ;;
 17468                           
 17469                           	psect	text56
 17470  0175CA                     __ptext56:
 17471                           	opt callstack 0
 17472  0175CA                     _abs:
 17473                           	opt callstack 17
 17474                           
 17475                           ;stkvar	_a @ sp[(0)+-2]
 17476                           
 17477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17478                           ;incstack = 0
 17479  0175CA  0EFF               	movlw	-1
 17480  0175CC  BEE3               	btfsc	plusw1,7,c
 17481  0175CE  D007               	goto	u4760
 17482  0175D0  0EFF               	movlw	-1
 17483  0175D2  50E3               	movf	plusw1,w,c
 17484  0175D4  E112               	bnz	l6159
 17485  0175D6  0EFE               	movlw	-2
 17486  0175D8  04E3               	decf	plusw1,w,c
 17487  0175DA  B0D8               	btfsc	status,0,c
 17488  0175DC  D00E               	goto	l6159
 17489  0175DE                     u4760:
 17490                           
 17491                           ;stkvar	_a @ sp[(0)+-2]
 17492  0175DE  0EFE               	movlw	-2
 17493  0175E0  006F FF8C  F035    	movff	plusw1,btemp
 17494  0175E6  1E35               	comf	btemp^0,f,c
 17495  0175E8  0EFF               	movlw	-1
 17496  0175EA  006F FF8C  F036    	movff	plusw1,btemp+1
 17497  0175F0  1E36               	comf	(btemp+1)^0,f,c
 17498  0175F2  2A35               	incf	btemp^0,f,c
 17499  0175F4  B4D8               	btfsc	status,2,c
 17500  0175F6  2A36               	incf	(btemp+1)^0,f,c
 17501  0175F8  D008               	goto	l2652
 17502  0175FA                     l6159:
 17503                           
 17504                           ;stkvar	_a @ sp[(0)+-2]
 17505  0175FA  0EFE               	movlw	-2
 17506  0175FC  006F FF8C  F035    	movff	plusw1,btemp
 17507  017602  0EFF               	movlw	-1
 17508  017604  006F FF8C  F036    	movff	plusw1,btemp+1
 17509  01760A                     l2652:
 17510                           
 17511                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17512  01760A  52E5               	movf	postdec1,f,c
 17513  01760C  52E5               	movf	postdec1,f,c
 17514  01760E  0012               	return		;funcret
 17515  017610                     __end_of_abs:
 17516                           	opt callstack 0
 17517                           
 17518 ;; *************** function ___aomod *****************
 17519 ;; Defined at:
 17520 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17521 ;; Parameters:    Size  Location     Type
 17522 ;;  dividend        8  [STACK] long long 
 17523 ;;  divisor         8  [STACK] long long 
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;  sign            1  [STACK] unsigned char 
 17526 ;;  counter         1  [STACK] unsigned char 
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  8  [STACK] long long 
 17529 ;; Registers used:
 17530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/1
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17540 ;;Total ram usage:        0 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:    6
 17543 ;; This function calls:
 17544 ;;		Nothing
 17545 ;; This function is called by:
 17546 ;;		_dtoa
 17547 ;; This function uses a reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text57
 17551  014F92                     __ptext57:
 17552                           	opt callstack 0
 17553  014F92                     ___aomod:
 17554                           	opt callstack 0
 17555                           
 17556                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17557  014F92  52E6               	movf	postinc1,f,c
 17558  014F94  52E6               	movf	postinc1,f,c
 17559                           
 17560                           ;stkvar	_sign @ sp[(-2)+0]
 17561                           
 17562                           ;incstack = 0
 17563  014F96  0EFE               	movlw	-2
 17564  014F98  6AE3               	clrf	plusw1,c
 17565                           
 17566                           ;stkvar	_dividend @ sp[(-2)+-8]
 17567  014F9A  0EFD               	movlw	-3
 17568  014F9C  AEE3               	btfss	plusw1,7,c
 17569  014F9E  D028               	goto	l6317
 17570                           
 17571                           ;stkvar	_dividend @ sp[(-2)+-8]
 17572                           ;stkvar	_dividend @ sp[(-2)+-8]
 17573  014FA0  0EF6               	movlw	-10
 17574  014FA2  6CE3               	negf	plusw1,c
 17575  014FA4  0EF7               	movlw	-9
 17576  014FA6  1EE3               	comf	plusw1,f,c
 17577  014FA8  0EF8               	movlw	-8
 17578  014FAA  1EE3               	comf	plusw1,f,c
 17579  014FAC  0EF9               	movlw	-7
 17580  014FAE  1EE3               	comf	plusw1,f,c
 17581  014FB0  0EFA               	movlw	-6
 17582  014FB2  1EE3               	comf	plusw1,f,c
 17583  014FB4  0EFB               	movlw	-5
 17584  014FB6  1EE3               	comf	plusw1,f,c
 17585  014FB8  0EFC               	movlw	-4
 17586  014FBA  1EE3               	comf	plusw1,f,c
 17587  014FBC  0EFD               	movlw	-3
 17588  014FBE  1EE3               	comf	plusw1,f,c
 17589  014FC0  E314               	bnc	u5190
 17590  014FC2  0EF7               	movlw	-9
 17591  014FC4  2AE3               	incf	plusw1,f,c
 17592  014FC6  E311               	bnc	u5190
 17593  014FC8  0EF8               	movlw	-8
 17594  014FCA  2AE3               	incf	plusw1,f,c
 17595  014FCC  E30E               	bnc	u5190
 17596  014FCE  0EF9               	movlw	-7
 17597  014FD0  2AE3               	incf	plusw1,f,c
 17598  014FD2  E30B               	bnc	u5190
 17599  014FD4  0EFA               	movlw	-6
 17600  014FD6  2AE3               	incf	plusw1,f,c
 17601  014FD8  E308               	bnc	u5190
 17602  014FDA  0EFB               	movlw	-5
 17603  014FDC  2AE3               	incf	plusw1,f,c
 17604  014FDE  E305               	bnc	u5190
 17605  014FE0  0EFC               	movlw	-4
 17606  014FE2  2AE3               	incf	plusw1,f,c
 17607  014FE4  E302               	bnc	u5190
 17608  014FE6  0EFD               	movlw	-3
 17609  014FE8  2AE3               	incf	plusw1,f,c
 17610  014FEA                     u5190:
 17611                           
 17612                           ;stkvar	_sign @ sp[(-2)+0]
 17613  014FEA  0EFE               	movlw	-2
 17614  014FEC  6AE3               	clrf	plusw1,c
 17615  014FEE  2AE3               	incf	plusw1,f,c
 17616  014FF0                     l6317:
 17617                           
 17618                           ;stkvar	_divisor @ sp[(-2)+-16]
 17619  014FF0  0EF5               	movlw	-11
 17620  014FF2  AEE3               	btfss	plusw1,7,c
 17621  014FF4  D025               	goto	u5210
 17622                           
 17623                           ;stkvar	_divisor @ sp[(-2)+-16]
 17624                           ;stkvar	_divisor @ sp[(-2)+-16]
 17625  014FF6  0EEE               	movlw	-18
 17626  014FF8  6CE3               	negf	plusw1,c
 17627  014FFA  0EEF               	movlw	-17
 17628  014FFC  1EE3               	comf	plusw1,f,c
 17629  014FFE  0EF0               	movlw	-16
 17630  015000  1EE3               	comf	plusw1,f,c
 17631  015002  0EF1               	movlw	-15
 17632  015004  1EE3               	comf	plusw1,f,c
 17633  015006  0EF2               	movlw	-14
 17634  015008  1EE3               	comf	plusw1,f,c
 17635  01500A  0EF3               	movlw	-13
 17636  01500C  1EE3               	comf	plusw1,f,c
 17637  01500E  0EF4               	movlw	-12
 17638  015010  1EE3               	comf	plusw1,f,c
 17639  015012  0EF5               	movlw	-11
 17640  015014  1EE3               	comf	plusw1,f,c
 17641  015016  E314               	bnc	u5210
 17642  015018  0EEF               	movlw	-17
 17643  01501A  2AE3               	incf	plusw1,f,c
 17644  01501C  E311               	bnc	u5210
 17645  01501E  0EF0               	movlw	-16
 17646  015020  2AE3               	incf	plusw1,f,c
 17647  015022  E30E               	bnc	u5210
 17648  015024  0EF1               	movlw	-15
 17649  015026  2AE3               	incf	plusw1,f,c
 17650  015028  E30B               	bnc	u5210
 17651  01502A  0EF2               	movlw	-14
 17652  01502C  2AE3               	incf	plusw1,f,c
 17653  01502E  E308               	bnc	u5210
 17654  015030  0EF3               	movlw	-13
 17655  015032  2AE3               	incf	plusw1,f,c
 17656  015034  E305               	bnc	u5210
 17657  015036  0EF4               	movlw	-12
 17658  015038  2AE3               	incf	plusw1,f,c
 17659  01503A  E302               	bnc	u5210
 17660  01503C  0EF5               	movlw	-11
 17661  01503E  2AE3               	incf	plusw1,f,c
 17662  015040                     u5210:
 17663                           
 17664                           ;stkvar	_divisor @ sp[(-2)+-16]
 17665  015040  0EEE               	movlw	-18
 17666  015042  50E3               	movf	plusw1,w,c
 17667  015044  E116               	bnz	u5220
 17668  015046  0EEF               	movlw	-17
 17669  015048  50E3               	movf	plusw1,w,c
 17670  01504A  E113               	bnz	u5220
 17671  01504C  0EF0               	movlw	-16
 17672  01504E  50E3               	movf	plusw1,w,c
 17673  015050  E110               	bnz	u5220
 17674  015052  0EF1               	movlw	-15
 17675  015054  50E3               	movf	plusw1,w,c
 17676  015056  E10D               	bnz	u5220
 17677  015058  0EF2               	movlw	-14
 17678  01505A  50E3               	movf	plusw1,w,c
 17679  01505C  E10A               	bnz	u5220
 17680  01505E  0EF3               	movlw	-13
 17681  015060  50E3               	movf	plusw1,w,c
 17682  015062  E107               	bnz	u5220
 17683  015064  0EF4               	movlw	-12
 17684  015066  50E3               	movf	plusw1,w,c
 17685  015068  E104               	bnz	u5220
 17686  01506A  0EF5               	movlw	-11
 17687  01506C  50E3               	movf	plusw1,w,c
 17688  01506E  B4D8               	btfsc	status,2,c
 17689  015070  D075               	goto	u5250
 17690  015072                     u5220:
 17691                           
 17692                           ;stkvar	_counter @ sp[(-2)+1]
 17693  015072  0EFF               	movlw	-1
 17694  015074  6AE3               	clrf	plusw1,c
 17695  015076  D012               	goto	L16
 17696  015078                     l6325:
 17697                           
 17698                           ;stkvar	_divisor @ sp[(-2)+-16]
 17699  015078  90D8               	bcf	status,0,c
 17700  01507A  0EEE               	movlw	-18
 17701  01507C  36E3               	rlcf	plusw1,f,c
 17702  01507E  0EEF               	movlw	-17
 17703  015080  36E3               	rlcf	plusw1,f,c
 17704  015082  0EF0               	movlw	-16
 17705  015084  36E3               	rlcf	plusw1,f,c
 17706  015086  0EF1               	movlw	-15
 17707  015088  36E3               	rlcf	plusw1,f,c
 17708  01508A  0EF2               	movlw	-14
 17709  01508C  36E3               	rlcf	plusw1,f,c
 17710  01508E  0EF3               	movlw	-13
 17711  015090  36E3               	rlcf	plusw1,f,c
 17712  015092  0EF4               	movlw	-12
 17713  015094  36E3               	rlcf	plusw1,f,c
 17714  015096  0EF5               	movlw	-11
 17715  015098  36E3               	rlcf	plusw1,f,c
 17716                           
 17717                           ;stkvar	_counter @ sp[(-2)+1]
 17718  01509A  0EFF               	movlw	-1
 17719  01509C                     L16:
 17720  01509C  2AE3               	incf	plusw1,f,c
 17721                           
 17722                           ;stkvar	_divisor @ sp[(-2)+-16]
 17723  01509E  0EF5               	movlw	-11
 17724  0150A0  AEE3               	btfss	plusw1,7,c
 17725  0150A2  D7EA               	goto	l6325
 17726  0150A4                     u5230:
 17727                           
 17728                           ;stkvar	_divisor @ sp[(-2)+-16]
 17729                           ;stkvar	_dividend @ sp[(-2)+-8]
 17730  0150A4  50E1               	movf	fsr1l,w,c
 17731  0150A6  0FF6               	addlw	-10
 17732  0150A8  6ED9               	movwf	fsr2l,c
 17733  0150AA  50E2               	movf	fsr1h,w,c
 17734  0150AC  6EDA               	movwf	fsr2h,c
 17735  0150AE  0EFF               	movlw	255
 17736  0150B0  22DA               	addwfc	fsr2h,f,c
 17737  0150B2  0EEE               	movlw	-18
 17738  0150B4  50E3               	movf	plusw1,w,c
 17739  0150B6  5CDE               	subwf	postinc2,w,c
 17740  0150B8  0EEF               	movlw	-17
 17741  0150BA  50E3               	movf	plusw1,w,c
 17742  0150BC  58DE               	subwfb	postinc2,w,c
 17743  0150BE  0EF0               	movlw	-16
 17744  0150C0  50E3               	movf	plusw1,w,c
 17745  0150C2  58DE               	subwfb	postinc2,w,c
 17746  0150C4  0EF1               	movlw	-15
 17747  0150C6  50E3               	movf	plusw1,w,c
 17748  0150C8  58DE               	subwfb	postinc2,w,c
 17749  0150CA  0EF2               	movlw	-14
 17750  0150CC  50E3               	movf	plusw1,w,c
 17751  0150CE  58DE               	subwfb	postinc2,w,c
 17752  0150D0  0EF3               	movlw	-13
 17753  0150D2  50E3               	movf	plusw1,w,c
 17754  0150D4  58DE               	subwfb	postinc2,w,c
 17755  0150D6  0EF4               	movlw	-12
 17756  0150D8  50E3               	movf	plusw1,w,c
 17757  0150DA  58DE               	subwfb	postinc2,w,c
 17758  0150DC  0EF5               	movlw	-11
 17759  0150DE  50E3               	movf	plusw1,w,c
 17760  0150E0  58DE               	subwfb	postinc2,w,c
 17761  0150E2  A0D8               	btfss	status,0,c
 17762  0150E4  D01F               	goto	l6333
 17763                           
 17764                           ;stkvar	_divisor @ sp[(-2)+-16]
 17765                           ;stkvar	_dividend @ sp[(-2)+-8]
 17766  0150E6  50E1               	movf	fsr1l,w,c
 17767  0150E8  0FF6               	addlw	-10
 17768  0150EA  6ED9               	movwf	fsr2l,c
 17769  0150EC  50E2               	movf	fsr1h,w,c
 17770  0150EE  6EDA               	movwf	fsr2h,c
 17771  0150F0  0EFF               	movlw	255
 17772  0150F2  22DA               	addwfc	fsr2h,f,c
 17773  0150F4  0EEE               	movlw	-18
 17774  0150F6  50E3               	movf	plusw1,w,c
 17775  0150F8  5EDE               	subwf	postinc2,f,c
 17776  0150FA  0EEF               	movlw	-17
 17777  0150FC  50E3               	movf	plusw1,w,c
 17778  0150FE  5ADE               	subwfb	postinc2,f,c
 17779  015100  0EF0               	movlw	-16
 17780  015102  50E3               	movf	plusw1,w,c
 17781  015104  5ADE               	subwfb	postinc2,f,c
 17782  015106  0EF1               	movlw	-15
 17783  015108  50E3               	movf	plusw1,w,c
 17784  01510A  5ADE               	subwfb	postinc2,f,c
 17785  01510C  0EF2               	movlw	-14
 17786  01510E  50E3               	movf	plusw1,w,c
 17787  015110  5ADE               	subwfb	postinc2,f,c
 17788  015112  0EF3               	movlw	-13
 17789  015114  50E3               	movf	plusw1,w,c
 17790  015116  5ADE               	subwfb	postinc2,f,c
 17791  015118  0EF4               	movlw	-12
 17792  01511A  50E3               	movf	plusw1,w,c
 17793  01511C  5ADE               	subwfb	postinc2,f,c
 17794  01511E  0EF5               	movlw	-11
 17795  015120  50E3               	movf	plusw1,w,c
 17796  015122  5ADE               	subwfb	postinc2,f,c
 17797  015124                     l6333:
 17798                           
 17799                           ;stkvar	_divisor @ sp[(-2)+-16]
 17800  015124  90D8               	bcf	status,0,c
 17801  015126  0EF5               	movlw	-11
 17802  015128  32E3               	rrcf	plusw1,f,c
 17803  01512A  0EF4               	movlw	-12
 17804  01512C  32E3               	rrcf	plusw1,f,c
 17805  01512E  0EF3               	movlw	-13
 17806  015130  32E3               	rrcf	plusw1,f,c
 17807  015132  0EF2               	movlw	-14
 17808  015134  32E3               	rrcf	plusw1,f,c
 17809  015136  0EF1               	movlw	-15
 17810  015138  32E3               	rrcf	plusw1,f,c
 17811  01513A  0EF0               	movlw	-16
 17812  01513C  32E3               	rrcf	plusw1,f,c
 17813  01513E  0EEF               	movlw	-17
 17814  015140  32E3               	rrcf	plusw1,f,c
 17815  015142  0EEE               	movlw	-18
 17816  015144  32E3               	rrcf	plusw1,f,c
 17817                           
 17818                           ;stkvar	_counter @ sp[(-2)+1]
 17819  015146  0EFF               	movlw	-1
 17820  015148  50E3               	movf	plusw1,w,c
 17821  01514A  6E35               	movwf	btemp^0,c
 17822  01514C  0E01               	movlw	1
 17823  01514E  5E35               	subwf	btemp^0,f,c
 17824  015150  0EFF               	movlw	-1
 17825  015152  0060  F0D7  FFE3   	movff	btemp,plusw1
 17826  015158  A4D8               	btfss	status,2,c
 17827  01515A  D7A4               	goto	u5230
 17828  01515C                     u5250:
 17829                           
 17830                           ;stkvar	_sign @ sp[(-2)+0]
 17831  01515C  0EFE               	movlw	-2
 17832  01515E  50E3               	movf	plusw1,w,c
 17833  015160  B4D8               	btfsc	status,2,c
 17834  015162  D025               	goto	u5270
 17835                           
 17836                           ;stkvar	_dividend @ sp[(-2)+-8]
 17837                           ;stkvar	_dividend @ sp[(-2)+-8]
 17838  015164  0EF6               	movlw	-10
 17839  015166  6CE3               	negf	plusw1,c
 17840  015168  0EF7               	movlw	-9
 17841  01516A  1EE3               	comf	plusw1,f,c
 17842  01516C  0EF8               	movlw	-8
 17843  01516E  1EE3               	comf	plusw1,f,c
 17844  015170  0EF9               	movlw	-7
 17845  015172  1EE3               	comf	plusw1,f,c
 17846  015174  0EFA               	movlw	-6
 17847  015176  1EE3               	comf	plusw1,f,c
 17848  015178  0EFB               	movlw	-5
 17849  01517A  1EE3               	comf	plusw1,f,c
 17850  01517C  0EFC               	movlw	-4
 17851  01517E  1EE3               	comf	plusw1,f,c
 17852  015180  0EFD               	movlw	-3
 17853  015182  1EE3               	comf	plusw1,f,c
 17854  015184  E314               	bnc	u5270
 17855  015186  0EF7               	movlw	-9
 17856  015188  2AE3               	incf	plusw1,f,c
 17857  01518A  E311               	bnc	u5270
 17858  01518C  0EF8               	movlw	-8
 17859  01518E  2AE3               	incf	plusw1,f,c
 17860  015190  E30E               	bnc	u5270
 17861  015192  0EF9               	movlw	-7
 17862  015194  2AE3               	incf	plusw1,f,c
 17863  015196  E30B               	bnc	u5270
 17864  015198  0EFA               	movlw	-6
 17865  01519A  2AE3               	incf	plusw1,f,c
 17866  01519C  E308               	bnc	u5270
 17867  01519E  0EFB               	movlw	-5
 17868  0151A0  2AE3               	incf	plusw1,f,c
 17869  0151A2  E305               	bnc	u5270
 17870  0151A4  0EFC               	movlw	-4
 17871  0151A6  2AE3               	incf	plusw1,f,c
 17872  0151A8  E302               	bnc	u5270
 17873  0151AA  0EFD               	movlw	-3
 17874  0151AC  2AE3               	incf	plusw1,f,c
 17875  0151AE                     u5270:
 17876                           
 17877                           ;stkvar	_dividend @ sp[(-2)+-8]
 17878  0151AE  0EF6               	movlw	246
 17879  0151B0  24E1               	addwf	fsr1l,w,c
 17880  0151B2  6ED9               	movwf	fsr2l,c
 17881  0151B4  0EFF               	movlw	255
 17882  0151B6  20E2               	addwfc	fsr1h,w,c
 17883  0151B8  6EDA               	movwf	fsr2h,c
 17884                           
 17885                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17886  0151BA  0E08               	movlw	8
 17887  0151BC  6E35               	movwf	btemp^0,c
 17888  0151BE  0EF6               	movlw	-10
 17889  0151C0                     us528999:
 17890  0151C0  006F FF7B FFE3     	movff	postinc2,plusw1
 17891  0151C6  28E8               	incf	wreg,w,c
 17892  0151C8  2E35               	decfsz	btemp^0,f,c
 17893  0151CA  D7FA               	bra	us528999
 17894                           
 17895                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17896  0151CC  52E5               	movf	postdec1,f,c
 17897  0151CE  52E5               	movf	postdec1,f,c
 17898  0151D0  0012               	return		;funcret
 17899  0151D2                     __end_of___aomod:
 17900                           	opt callstack 0
 17901                           
 17902 ;; *************** function ___aodiv *****************
 17903 ;; Defined at:
 17904 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17905 ;; Parameters:    Size  Location     Type
 17906 ;;  dividend        8  [STACK] long long 
 17907 ;;  divisor         8  [STACK] long long 
 17908 ;; Auto vars:     Size  Location     Type
 17909 ;;  quotient        8  [STACK] long long 
 17910 ;;  sign            1  [STACK] unsigned char 
 17911 ;;  counter         1  [STACK] unsigned char 
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  8  [STACK] long long 
 17914 ;; Registers used:
 17915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17916 ;; Tracked objects:
 17917 ;;		On entry : 0/1
 17918 ;;		On exit  : 0/0
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17925 ;;Total ram usage:        0 bytes
 17926 ;; Hardware stack levels used:    1
 17927 ;; Hardware stack levels required when called:    6
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		_dtoa
 17932 ;; This function uses a reentrant model
 17933 ;;
 17934                           
 17935                           	psect	text58
 17936  014838                     __ptext58:
 17937                           	opt callstack 0
 17938  014838                     ___aodiv:
 17939                           	opt callstack 0
 17940                           
 17941                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17942  014838  0E0A               	movlw	10
 17943  01483A  26E1               	addwf	fsr1l,f,c
 17944  01483C  0E00               	movlw	0
 17945  01483E  22E2               	addwfc	fsr1h,f,c
 17946                           
 17947                           ;stkvar	_sign @ sp[(-10)+8]
 17948                           
 17949                           ;incstack = 0
 17950  014840  0EFE               	movlw	-2
 17951  014842  6AE3               	clrf	plusw1,c
 17952                           
 17953                           ;stkvar	_divisor @ sp[(-10)+-16]
 17954  014844  0EED               	movlw	-19
 17955  014846  AEE3               	btfss	plusw1,7,c
 17956  014848  D028               	goto	l6273
 17957                           
 17958                           ;stkvar	_divisor @ sp[(-10)+-16]
 17959                           ;stkvar	_divisor @ sp[(-10)+-16]
 17960  01484A  0EE6               	movlw	-26
 17961  01484C  6CE3               	negf	plusw1,c
 17962  01484E  0EE7               	movlw	-25
 17963  014850  1EE3               	comf	plusw1,f,c
 17964  014852  0EE8               	movlw	-24
 17965  014854  1EE3               	comf	plusw1,f,c
 17966  014856  0EE9               	movlw	-23
 17967  014858  1EE3               	comf	plusw1,f,c
 17968  01485A  0EEA               	movlw	-22
 17969  01485C  1EE3               	comf	plusw1,f,c
 17970  01485E  0EEB               	movlw	-21
 17971  014860  1EE3               	comf	plusw1,f,c
 17972  014862  0EEC               	movlw	-20
 17973  014864  1EE3               	comf	plusw1,f,c
 17974  014866  0EED               	movlw	-19
 17975  014868  1EE3               	comf	plusw1,f,c
 17976  01486A  E314               	bnc	u5070
 17977  01486C  0EE7               	movlw	-25
 17978  01486E  2AE3               	incf	plusw1,f,c
 17979  014870  E311               	bnc	u5070
 17980  014872  0EE8               	movlw	-24
 17981  014874  2AE3               	incf	plusw1,f,c
 17982  014876  E30E               	bnc	u5070
 17983  014878  0EE9               	movlw	-23
 17984  01487A  2AE3               	incf	plusw1,f,c
 17985  01487C  E30B               	bnc	u5070
 17986  01487E  0EEA               	movlw	-22
 17987  014880  2AE3               	incf	plusw1,f,c
 17988  014882  E308               	bnc	u5070
 17989  014884  0EEB               	movlw	-21
 17990  014886  2AE3               	incf	plusw1,f,c
 17991  014888  E305               	bnc	u5070
 17992  01488A  0EEC               	movlw	-20
 17993  01488C  2AE3               	incf	plusw1,f,c
 17994  01488E  E302               	bnc	u5070
 17995  014890  0EED               	movlw	-19
 17996  014892  2AE3               	incf	plusw1,f,c
 17997  014894                     u5070:
 17998                           
 17999                           ;stkvar	_sign @ sp[(-10)+8]
 18000  014894  0EFE               	movlw	-2
 18001  014896  6AE3               	clrf	plusw1,c
 18002  014898  2AE3               	incf	plusw1,f,c
 18003  01489A                     l6273:
 18004                           
 18005                           ;stkvar	_dividend @ sp[(-10)+-8]
 18006  01489A  0EF5               	movlw	-11
 18007  01489C  AEE3               	btfss	plusw1,7,c
 18008  01489E  D027               	goto	l6279
 18009                           
 18010                           ;stkvar	_dividend @ sp[(-10)+-8]
 18011                           ;stkvar	_dividend @ sp[(-10)+-8]
 18012  0148A0  0EEE               	movlw	-18
 18013  0148A2  6CE3               	negf	plusw1,c
 18014  0148A4  0EEF               	movlw	-17
 18015  0148A6  1EE3               	comf	plusw1,f,c
 18016  0148A8  0EF0               	movlw	-16
 18017  0148AA  1EE3               	comf	plusw1,f,c
 18018  0148AC  0EF1               	movlw	-15
 18019  0148AE  1EE3               	comf	plusw1,f,c
 18020  0148B0  0EF2               	movlw	-14
 18021  0148B2  1EE3               	comf	plusw1,f,c
 18022  0148B4  0EF3               	movlw	-13
 18023  0148B6  1EE3               	comf	plusw1,f,c
 18024  0148B8  0EF4               	movlw	-12
 18025  0148BA  1EE3               	comf	plusw1,f,c
 18026  0148BC  0EF5               	movlw	-11
 18027  0148BE  1EE3               	comf	plusw1,f,c
 18028  0148C0  E314               	bnc	u5090
 18029  0148C2  0EEF               	movlw	-17
 18030  0148C4  2AE3               	incf	plusw1,f,c
 18031  0148C6  E311               	bnc	u5090
 18032  0148C8  0EF0               	movlw	-16
 18033  0148CA  2AE3               	incf	plusw1,f,c
 18034  0148CC  E30E               	bnc	u5090
 18035  0148CE  0EF1               	movlw	-15
 18036  0148D0  2AE3               	incf	plusw1,f,c
 18037  0148D2  E30B               	bnc	u5090
 18038  0148D4  0EF2               	movlw	-14
 18039  0148D6  2AE3               	incf	plusw1,f,c
 18040  0148D8  E308               	bnc	u5090
 18041  0148DA  0EF3               	movlw	-13
 18042  0148DC  2AE3               	incf	plusw1,f,c
 18043  0148DE  E305               	bnc	u5090
 18044  0148E0  0EF4               	movlw	-12
 18045  0148E2  2AE3               	incf	plusw1,f,c
 18046  0148E4  E302               	bnc	u5090
 18047  0148E6  0EF5               	movlw	-11
 18048  0148E8  2AE3               	incf	plusw1,f,c
 18049  0148EA                     u5090:
 18050                           
 18051                           ;stkvar	_sign @ sp[(-10)+8]
 18052  0148EA  0EFE               	movlw	-2
 18053  0148EC  70E3               	btg	plusw1,0,c
 18054  0148EE                     l6279:
 18055                           
 18056                           ;stkvar	_quotient @ sp[(-10)+0]
 18057  0148EE  0E07               	movlw	7
 18058  0148F0  6E35               	movwf	btemp^0,c
 18059  0148F2  0EF6               	movlw	-10
 18060  0148F4                     u5101:
 18061  0148F4  6AE3               	clrf	plusw1,c
 18062  0148F6  2AE8               	incf	wreg,f,c
 18063  0148F8  0635               	decf	btemp^0,f,c
 18064  0148FA  E2FC               	bc	u5101
 18065                           
 18066                           ;stkvar	_divisor @ sp[(-10)+-16]
 18067  0148FC  0EE6               	movlw	-26
 18068  0148FE  50E3               	movf	plusw1,w,c
 18069  014900  E116               	bnz	u5110
 18070  014902  0EE7               	movlw	-25
 18071  014904  50E3               	movf	plusw1,w,c
 18072  014906  E113               	bnz	u5110
 18073  014908  0EE8               	movlw	-24
 18074  01490A  50E3               	movf	plusw1,w,c
 18075  01490C  E110               	bnz	u5110
 18076  01490E  0EE9               	movlw	-23
 18077  014910  50E3               	movf	plusw1,w,c
 18078  014912  E10D               	bnz	u5110
 18079  014914  0EEA               	movlw	-22
 18080  014916  50E3               	movf	plusw1,w,c
 18081  014918  E10A               	bnz	u5110
 18082  01491A  0EEB               	movlw	-21
 18083  01491C  50E3               	movf	plusw1,w,c
 18084  01491E  E107               	bnz	u5110
 18085  014920  0EEC               	movlw	-20
 18086  014922  50E3               	movf	plusw1,w,c
 18087  014924  E104               	bnz	u5110
 18088  014926  0EED               	movlw	-19
 18089  014928  50E3               	movf	plusw1,w,c
 18090  01492A  B4D8               	btfsc	status,2,c
 18091  01492C  D088               	goto	u5140
 18092  01492E                     u5110:
 18093                           
 18094                           ;stkvar	_counter @ sp[(-10)+9]
 18095  01492E  0EFF               	movlw	-1
 18096  014930  6AE3               	clrf	plusw1,c
 18097  014932  D012               	goto	L17
 18098  014934                     l6285:
 18099                           
 18100                           ;stkvar	_divisor @ sp[(-10)+-16]
 18101  014934  90D8               	bcf	status,0,c
 18102  014936  0EE6               	movlw	-26
 18103  014938  36E3               	rlcf	plusw1,f,c
 18104  01493A  0EE7               	movlw	-25
 18105  01493C  36E3               	rlcf	plusw1,f,c
 18106  01493E  0EE8               	movlw	-24
 18107  014940  36E3               	rlcf	plusw1,f,c
 18108  014942  0EE9               	movlw	-23
 18109  014944  36E3               	rlcf	plusw1,f,c
 18110  014946  0EEA               	movlw	-22
 18111  014948  36E3               	rlcf	plusw1,f,c
 18112  01494A  0EEB               	movlw	-21
 18113  01494C  36E3               	rlcf	plusw1,f,c
 18114  01494E  0EEC               	movlw	-20
 18115  014950  36E3               	rlcf	plusw1,f,c
 18116  014952  0EED               	movlw	-19
 18117  014954  36E3               	rlcf	plusw1,f,c
 18118                           
 18119                           ;stkvar	_counter @ sp[(-10)+9]
 18120  014956  0EFF               	movlw	-1
 18121  014958                     L17:
 18122  014958  2AE3               	incf	plusw1,f,c
 18123                           
 18124                           ;stkvar	_divisor @ sp[(-10)+-16]
 18125  01495A  0EED               	movlw	-19
 18126  01495C  AEE3               	btfss	plusw1,7,c
 18127  01495E  D7EA               	goto	l6285
 18128  014960                     u5120:
 18129                           
 18130                           ;stkvar	_quotient @ sp[(-10)+0]
 18131  014960  90D8               	bcf	status,0,c
 18132  014962  0EF6               	movlw	-10
 18133  014964  36E3               	rlcf	plusw1,f,c
 18134  014966  0EF7               	movlw	-9
 18135  014968  36E3               	rlcf	plusw1,f,c
 18136  01496A  0EF8               	movlw	-8
 18137  01496C  36E3               	rlcf	plusw1,f,c
 18138  01496E  0EF9               	movlw	-7
 18139  014970  36E3               	rlcf	plusw1,f,c
 18140  014972  0EFA               	movlw	-6
 18141  014974  36E3               	rlcf	plusw1,f,c
 18142  014976  0EFB               	movlw	-5
 18143  014978  36E3               	rlcf	plusw1,f,c
 18144  01497A  0EFC               	movlw	-4
 18145  01497C  36E3               	rlcf	plusw1,f,c
 18146  01497E  0EFD               	movlw	-3
 18147  014980  36E3               	rlcf	plusw1,f,c
 18148                           
 18149                           ;stkvar	_divisor @ sp[(-10)+-16]
 18150                           ;stkvar	_dividend @ sp[(-10)+-8]
 18151  014982  50E1               	movf	fsr1l,w,c
 18152  014984  0FEE               	addlw	-18
 18153  014986  6ED9               	movwf	fsr2l,c
 18154  014988  50E2               	movf	fsr1h,w,c
 18155  01498A  6EDA               	movwf	fsr2h,c
 18156  01498C  0EFF               	movlw	255
 18157  01498E  22DA               	addwfc	fsr2h,f,c
 18158  014990  0EE6               	movlw	-26
 18159  014992  50E3               	movf	plusw1,w,c
 18160  014994  5CDE               	subwf	postinc2,w,c
 18161  014996  0EE7               	movlw	-25
 18162  014998  50E3               	movf	plusw1,w,c
 18163  01499A  58DE               	subwfb	postinc2,w,c
 18164  01499C  0EE8               	movlw	-24
 18165  01499E  50E3               	movf	plusw1,w,c
 18166  0149A0  58DE               	subwfb	postinc2,w,c
 18167  0149A2  0EE9               	movlw	-23
 18168  0149A4  50E3               	movf	plusw1,w,c
 18169  0149A6  58DE               	subwfb	postinc2,w,c
 18170  0149A8  0EEA               	movlw	-22
 18171  0149AA  50E3               	movf	plusw1,w,c
 18172  0149AC  58DE               	subwfb	postinc2,w,c
 18173  0149AE  0EEB               	movlw	-21
 18174  0149B0  50E3               	movf	plusw1,w,c
 18175  0149B2  58DE               	subwfb	postinc2,w,c
 18176  0149B4  0EEC               	movlw	-20
 18177  0149B6  50E3               	movf	plusw1,w,c
 18178  0149B8  58DE               	subwfb	postinc2,w,c
 18179  0149BA  0EED               	movlw	-19
 18180  0149BC  50E3               	movf	plusw1,w,c
 18181  0149BE  58DE               	subwfb	postinc2,w,c
 18182  0149C0  A0D8               	btfss	status,0,c
 18183  0149C2  D021               	goto	l6297
 18184                           
 18185                           ;stkvar	_divisor @ sp[(-10)+-16]
 18186                           ;stkvar	_dividend @ sp[(-10)+-8]
 18187  0149C4  50E1               	movf	fsr1l,w,c
 18188  0149C6  0FEE               	addlw	-18
 18189  0149C8  6ED9               	movwf	fsr2l,c
 18190  0149CA  50E2               	movf	fsr1h,w,c
 18191  0149CC  6EDA               	movwf	fsr2h,c
 18192  0149CE  0EFF               	movlw	255
 18193  0149D0  22DA               	addwfc	fsr2h,f,c
 18194  0149D2  0EE6               	movlw	-26
 18195  0149D4  50E3               	movf	plusw1,w,c
 18196  0149D6  5EDE               	subwf	postinc2,f,c
 18197  0149D8  0EE7               	movlw	-25
 18198  0149DA  50E3               	movf	plusw1,w,c
 18199  0149DC  5ADE               	subwfb	postinc2,f,c
 18200  0149DE  0EE8               	movlw	-24
 18201  0149E0  50E3               	movf	plusw1,w,c
 18202  0149E2  5ADE               	subwfb	postinc2,f,c
 18203  0149E4  0EE9               	movlw	-23
 18204  0149E6  50E3               	movf	plusw1,w,c
 18205  0149E8  5ADE               	subwfb	postinc2,f,c
 18206  0149EA  0EEA               	movlw	-22
 18207  0149EC  50E3               	movf	plusw1,w,c
 18208  0149EE  5ADE               	subwfb	postinc2,f,c
 18209  0149F0  0EEB               	movlw	-21
 18210  0149F2  50E3               	movf	plusw1,w,c
 18211  0149F4  5ADE               	subwfb	postinc2,f,c
 18212  0149F6  0EEC               	movlw	-20
 18213  0149F8  50E3               	movf	plusw1,w,c
 18214  0149FA  5ADE               	subwfb	postinc2,f,c
 18215  0149FC  0EED               	movlw	-19
 18216  0149FE  50E3               	movf	plusw1,w,c
 18217  014A00  5ADE               	subwfb	postinc2,f,c
 18218                           
 18219                           ;stkvar	_quotient @ sp[(-10)+0]
 18220  014A02  0EF6               	movlw	-10
 18221  014A04  80E3               	bsf	plusw1,0,c
 18222  014A06                     l6297:
 18223                           
 18224                           ;stkvar	_divisor @ sp[(-10)+-16]
 18225  014A06  90D8               	bcf	status,0,c
 18226  014A08  0EED               	movlw	-19
 18227  014A0A  32E3               	rrcf	plusw1,f,c
 18228  014A0C  0EEC               	movlw	-20
 18229  014A0E  32E3               	rrcf	plusw1,f,c
 18230  014A10  0EEB               	movlw	-21
 18231  014A12  32E3               	rrcf	plusw1,f,c
 18232  014A14  0EEA               	movlw	-22
 18233  014A16  32E3               	rrcf	plusw1,f,c
 18234  014A18  0EE9               	movlw	-23
 18235  014A1A  32E3               	rrcf	plusw1,f,c
 18236  014A1C  0EE8               	movlw	-24
 18237  014A1E  32E3               	rrcf	plusw1,f,c
 18238  014A20  0EE7               	movlw	-25
 18239  014A22  32E3               	rrcf	plusw1,f,c
 18240  014A24  0EE6               	movlw	-26
 18241  014A26  32E3               	rrcf	plusw1,f,c
 18242                           
 18243                           ;stkvar	_counter @ sp[(-10)+9]
 18244  014A28  0EFF               	movlw	-1
 18245  014A2A  50E3               	movf	plusw1,w,c
 18246  014A2C  6E35               	movwf	btemp^0,c
 18247  014A2E  0E01               	movlw	1
 18248  014A30  5E35               	subwf	btemp^0,f,c
 18249  014A32  0EFF               	movlw	-1
 18250  014A34  0060  F0D7  FFE3   	movff	btemp,plusw1
 18251  014A3A  A4D8               	btfss	status,2,c
 18252  014A3C  D791               	goto	u5120
 18253  014A3E                     u5140:
 18254                           
 18255                           ;stkvar	_sign @ sp[(-10)+8]
 18256  014A3E  0EFE               	movlw	-2
 18257  014A40  50E3               	movf	plusw1,w,c
 18258  014A42  B4D8               	btfsc	status,2,c
 18259  014A44  D025               	goto	u5160
 18260                           
 18261                           ;stkvar	_quotient @ sp[(-10)+0]
 18262                           ;stkvar	_quotient @ sp[(-10)+0]
 18263  014A46  0EF6               	movlw	-10
 18264  014A48  6CE3               	negf	plusw1,c
 18265  014A4A  0EF7               	movlw	-9
 18266  014A4C  1EE3               	comf	plusw1,f,c
 18267  014A4E  0EF8               	movlw	-8
 18268  014A50  1EE3               	comf	plusw1,f,c
 18269  014A52  0EF9               	movlw	-7
 18270  014A54  1EE3               	comf	plusw1,f,c
 18271  014A56  0EFA               	movlw	-6
 18272  014A58  1EE3               	comf	plusw1,f,c
 18273  014A5A  0EFB               	movlw	-5
 18274  014A5C  1EE3               	comf	plusw1,f,c
 18275  014A5E  0EFC               	movlw	-4
 18276  014A60  1EE3               	comf	plusw1,f,c
 18277  014A62  0EFD               	movlw	-3
 18278  014A64  1EE3               	comf	plusw1,f,c
 18279  014A66  E314               	bnc	u5160
 18280  014A68  0EF7               	movlw	-9
 18281  014A6A  2AE3               	incf	plusw1,f,c
 18282  014A6C  E311               	bnc	u5160
 18283  014A6E  0EF8               	movlw	-8
 18284  014A70  2AE3               	incf	plusw1,f,c
 18285  014A72  E30E               	bnc	u5160
 18286  014A74  0EF9               	movlw	-7
 18287  014A76  2AE3               	incf	plusw1,f,c
 18288  014A78  E30B               	bnc	u5160
 18289  014A7A  0EFA               	movlw	-6
 18290  014A7C  2AE3               	incf	plusw1,f,c
 18291  014A7E  E308               	bnc	u5160
 18292  014A80  0EFB               	movlw	-5
 18293  014A82  2AE3               	incf	plusw1,f,c
 18294  014A84  E305               	bnc	u5160
 18295  014A86  0EFC               	movlw	-4
 18296  014A88  2AE3               	incf	plusw1,f,c
 18297  014A8A  E302               	bnc	u5160
 18298  014A8C  0EFD               	movlw	-3
 18299  014A8E  2AE3               	incf	plusw1,f,c
 18300  014A90                     u5160:
 18301                           
 18302                           ;stkvar	_quotient @ sp[(-10)+0]
 18303  014A90  0EF6               	movlw	246
 18304  014A92  24E1               	addwf	fsr1l,w,c
 18305  014A94  6ED9               	movwf	fsr2l,c
 18306  014A96  0EFF               	movlw	255
 18307  014A98  20E2               	addwfc	fsr1h,w,c
 18308  014A9A  6EDA               	movwf	fsr2h,c
 18309                           
 18310                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18311  014A9C  0E08               	movlw	8
 18312  014A9E  6E35               	movwf	btemp^0,c
 18313  014AA0  0EEE               	movlw	-18
 18314  014AA2                     us517999:
 18315  014AA2  006F FF7B FFE3     	movff	postinc2,plusw1
 18316  014AA8  28E8               	incf	wreg,w,c
 18317  014AAA  2E35               	decfsz	btemp^0,f,c
 18318  014AAC  D7FA               	bra	us517999
 18319                           
 18320                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18321  014AAE  0EF6               	movlw	246
 18322  014AB0  26E1               	addwf	fsr1l,f,c
 18323  014AB2  0EFF               	movlw	255
 18324  014AB4  22E2               	addwfc	fsr1h,f,c
 18325  014AB6  0012               	return		;funcret
 18326  014AB8                     __end_of___aodiv:
 18327                           	opt callstack 0
 18328                           
 18329 ;; *************** function _ctoa *****************
 18330 ;; Defined at:
 18331 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18334 ;;		 -> f(6), NULL(0), 
 18335 ;;  c               1  [STACK] unsigned char 
 18336 ;; Auto vars:     Size  Location     Type
 18337 ;;  w               2  [STACK] int 
 18338 ;;  l               2    0        int 
 18339 ;; Return value:  Size  Location     Type
 18340 ;;                  2  [STACK] int 
 18341 ;; Registers used:
 18342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18343 ;; Tracked objects:
 18344 ;;		On entry : 0/4
 18345 ;;		On exit  : 0/0
 18346 ;;		Unchanged: 0/0
 18347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18352 ;;Total ram usage:        0 bytes
 18353 ;; Hardware stack levels used:    1
 18354 ;; Hardware stack levels required when called:   11
 18355 ;; This function calls:
 18356 ;;		_pad
 18357 ;; This function is called by:
 18358 ;;		_vfpfcnvrt
 18359 ;; This function uses a reentrant model
 18360 ;;
 18361                           
 18362                           	psect	text59
 18363  016ECE                     __ptext59:
 18364                           	opt callstack 0
 18365  016ECE                     _ctoa:
 18366                           	opt callstack 0
 18367                           
 18368                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18369  016ECE  52E6               	movf	postinc1,f,c
 18370  016ED0  52E6               	movf	postinc1,f,c
 18371                           
 18372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18373                           
 18374                           ;incstack = 0
 18375  016ED2  501E               	movf	_width^0,w,c
 18376  016ED4  101F               	iorwf	(_width+1)^0,w,c
 18377  016ED6  A4D8               	btfss	status,2,c
 18378  016ED8  D009               	goto	l8905
 18379                           
 18380                           ;stkvar	_w @ sp[(-2)+0]
 18381  016EDA  0EFE               	movlw	-2
 18382  016EDC  0060  F07B  FFE3   	movff	_width,plusw1
 18383  016EE2  0EFF               	movlw	-1
 18384  016EE4  0060  F07F  FFE3   	movff	_width+1,plusw1
 18385  016EEA  D016               	goto	l8907
 18386  016EEC                     l8905:
 18387  016EEC  0EFF               	movlw	255
 18388  016EEE  6E3F               	movwf	(btemp+10)^0,c
 18389  016EF0  0EFF               	movlw	255
 18390  016EF2  6E40               	movwf	(btemp+11)^0,c
 18391  016EF4  0060  F078  F03D   	movff	_width,btemp+8
 18392  016EFA  0060  F07C  F03E   	movff	_width+1,btemp+9
 18393  016F00  503F               	movf	(btemp+10)^0,w,c
 18394  016F02  263D               	addwf	(btemp+8)^0,f,c
 18395  016F04  5040               	movf	(btemp+11)^0,w,c
 18396  016F06  223E               	addwfc	(btemp+9)^0,f,c
 18397                           
 18398                           ;stkvar	_w @ sp[(-2)+0]
 18399  016F08  0EFE               	movlw	-2
 18400  016F0A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 18401  016F10  0EFF               	movlw	-1
 18402  016F12  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 18403  016F18                     l8907:
 18404                           
 18405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18406                           ;stkvar	_c @ sp[(-2)+-3]
 18407  016F18  0EFB               	movlw	-5
 18408  016F1A  006F FF8C  F1A4    	movff	plusw1,_dbuf
 18409                           
 18410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18411  016F20  0101               	movlb	1	; () banked
 18412  016F22  6BA5               	clrf	(_dbuf+1)& (0+255),b
 18413                           
 18414                           ; BSR set to: 1
 18415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18416                           ;stkvar	_w @ sp[(-2)+0]
 18417  016F24  0EFE               	movlw	-2
 18418  016F26  006F FF8F FFE6     	movff	plusw1,postinc1
 18419  016F2C  006F FF8F FFE6     	movff	plusw1,postinc1
 18420  016F32  0EA4               	movlw	low _dbuf
 18421  016F34  6EE6               	movwf	postinc1,c
 18422  016F36  0E01               	movlw	high _dbuf
 18423  016F38  6EE6               	movwf	postinc1,c
 18424                           
 18425                           ;stkvar	_fp @ sp[(-6)+-2]
 18426  016F3A  0EF8               	movlw	-8
 18427  016F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 18428  016F42  006F FF8F FFE6     	movff	plusw1,postinc1
 18429  016F48  EC59  F0B1         	call	_pad	;wreg free
 18430                           
 18431                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18432  016F4C  0EFB               	movlw	251
 18433  016F4E  26E1               	addwf	fsr1l,f,c
 18434  016F50  0EFF               	movlw	255
 18435  016F52  22E2               	addwfc	fsr1h,f,c
 18436  016F54  0012               	return		;funcret
 18437  016F56                     __end_of_ctoa:
 18438                           	opt callstack 0
 18439                           
 18440 ;; *************** function _pad *****************
 18441 ;; Defined at:
 18442 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18443 ;; Parameters:    Size  Location     Type
 18444 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18445 ;;		 -> f(6), NULL(0), 
 18446 ;;  buf             2  [STACK] PTR unsigned char 
 18447 ;;		 -> dbuf(80), 
 18448 ;;  p               2  [STACK] int 
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;  w               2  [STACK] int 
 18451 ;;  i               2  [STACK] int 
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  2  [STACK] int 
 18454 ;; Registers used:
 18455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/1
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18465 ;;Total ram usage:        0 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; Hardware stack levels required when called:   10
 18468 ;; This function calls:
 18469 ;;		_fputc
 18470 ;;		_fputs
 18471 ;;		_strlen
 18472 ;; This function is called by:
 18473 ;;		_ctoa
 18474 ;;		_dtoa
 18475 ;;		_efgtoa
 18476 ;;		_xtoa
 18477 ;; This function uses a reentrant model
 18478 ;;
 18479                           
 18480                           	psect	text60
 18481  0162B2                     __ptext60:
 18482                           	opt callstack 0
 18483  0162B2                     _pad:
 18484                           	opt callstack 0
 18485                           
 18486                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18487  0162B2  52E6               	movf	postinc1,f,c
 18488  0162B4  52E6               	movf	postinc1,f,c
 18489  0162B6  52E6               	movf	postinc1,f,c
 18490  0162B8  52E6               	movf	postinc1,f,c
 18491                           
 18492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18493                           
 18494                           ;incstack = 0
 18495  0162BA  A022               	btfss	_flags^0,0,c
 18496  0162BC  D010               	goto	l8879
 18497                           
 18498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18499                           ;stkvar	_fp @ sp[(-4)+-2]
 18500  0162BE  0EFA               	movlw	-6
 18501  0162C0  006F FF8F FFE6     	movff	plusw1,postinc1
 18502  0162C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18503                           
 18504                           ;stkvar	_buf @ sp[(-6)+-4]
 18505  0162CC  0EF6               	movlw	-10
 18506  0162CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18507  0162D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18508  0162DA  EC3F  F0B6         	call	_fputs	;wreg free
 18509  0162DE                     l8879:
 18510                           
 18511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18512                           ;stkvar	_p @ sp[(-4)+-6]
 18513  0162DE  0EF7               	movlw	-9
 18514  0162E0  BEE3               	btfsc	plusw1,7,c
 18515  0162E2  D011               	goto	l8883
 18516                           
 18517                           ;stkvar	_p @ sp[(-4)+-6]
 18518                           ;stkvar	_w @ sp[(-4)+0]
 18519  0162E4  0EF6               	movlw	-10
 18520  0162E6  006F FF8C  F035    	movff	plusw1,btemp
 18521  0162EC  0EFC               	movlw	-4
 18522  0162EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18523  0162F4  0EF7               	movlw	-9
 18524  0162F6  006F FF8C  F035    	movff	plusw1,btemp
 18525  0162FC  0EFD               	movlw	-3
 18526  0162FE  0060  F0D7  FFE3   	movff	btemp,plusw1
 18527  016304  D004               	goto	l1729
 18528  016306                     l8883:
 18529                           
 18530                           ;stkvar	_w @ sp[(-4)+0]
 18531  016306  0EFC               	movlw	-4
 18532  016308  6AE3               	clrf	plusw1,c
 18533  01630A  0EFD               	movlw	-3
 18534  01630C  6AE3               	clrf	plusw1,c
 18535  01630E                     l1729:
 18536                           
 18537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18538                           ;stkvar	_i @ sp[(-4)+2]
 18539  01630E  0EFE               	movlw	-2
 18540  016310  6AE3               	clrf	plusw1,c
 18541  016312  0EFF               	movlw	-1
 18542  016314  6AE3               	clrf	plusw1,c
 18543                           
 18544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18545  016316  D01E               	goto	l8889
 18546  016318                     l8885:
 18547                           
 18548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18549                           ;stkvar	_fp @ sp[(-4)+-2]
 18550  016318  0EFA               	movlw	-6
 18551  01631A  006F FF8F FFE6     	movff	plusw1,postinc1
 18552  016320  006F FF8F FFE6     	movff	plusw1,postinc1
 18553  016326  0E20               	movlw	32
 18554  016328  6EE6               	movwf	postinc1,c
 18555  01632A  0E00               	movlw	0
 18556  01632C  6EE6               	movwf	postinc1,c
 18557  01632E  EC3B  F0B0         	call	_fputc	;wreg free
 18558                           
 18559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18560                           ;stkvar	_i @ sp[(-4)+2]
 18561  016332  0EFE               	movlw	-2
 18562  016334  50E3               	movf	plusw1,w,c
 18563  016336  0F01               	addlw	1
 18564  016338  6E35               	movwf	btemp^0,c
 18565  01633A  0EFE               	movlw	-2
 18566  01633C  0060  F0D7  FFE3   	movff	btemp,plusw1
 18567  016342  6A35               	clrf	btemp^0,c
 18568  016344  0EFF               	movlw	-1
 18569  016346  50E3               	movf	plusw1,w,c
 18570  016348  2035               	addwfc	btemp^0,w,c
 18571  01634A  6E35               	movwf	btemp^0,c
 18572  01634C  0EFF               	movlw	-1
 18573  01634E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18574  016354                     l8889:
 18575                           
 18576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18577                           ;stkvar	_w @ sp[(-4)+0]
 18578                           ;stkvar	_i @ sp[(-4)+2]
 18579  016354  50E1               	movf	fsr1l,w,c
 18580  016356  0FFE               	addlw	-2
 18581  016358  6ED9               	movwf	fsr2l,c
 18582  01635A  50E2               	movf	fsr1h,w,c
 18583  01635C  6EDA               	movwf	fsr2h,c
 18584  01635E  0EFF               	movlw	255
 18585  016360  22DA               	addwfc	fsr2h,f,c
 18586  016362  0EFC               	movlw	-4
 18587  016364  50E3               	movf	plusw1,w,c
 18588  016366  5CDE               	subwf	postinc2,w,c
 18589  016368  50DE               	movf	postinc2,w,c
 18590  01636A  0A80               	xorlw	128
 18591  01636C  6E35               	movwf	btemp^0,c
 18592  01636E  0EFD               	movlw	-3
 18593  016370  50E3               	movf	plusw1,w,c
 18594  016372  0A80               	xorlw	128
 18595  016374  5835               	subwfb	btemp^0,w,c
 18596  016376  A0D8               	btfss	status,0,c
 18597  016378  D7CF               	goto	l8885
 18598                           
 18599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18600  01637A  B022               	btfsc	_flags^0,0,c
 18601  01637C  D010               	goto	l8893
 18602                           
 18603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18604                           ;stkvar	_fp @ sp[(-4)+-2]
 18605  01637E  0EFA               	movlw	-6
 18606  016380  006F FF8F FFE6     	movff	plusw1,postinc1
 18607  016386  006F FF8F FFE6     	movff	plusw1,postinc1
 18608                           
 18609                           ;stkvar	_buf @ sp[(-6)+-4]
 18610  01638C  0EF6               	movlw	-10
 18611  01638E  006F FF8F FFE6     	movff	plusw1,postinc1
 18612  016394  006F FF8F FFE6     	movff	plusw1,postinc1
 18613  01639A  EC3F  F0B6         	call	_fputs	;wreg free
 18614  01639E                     l8893:
 18615                           
 18616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18617                           ;stkvar	_w @ sp[(-4)+0]
 18618                           ;stkvar	_buf @ sp[(-4)+-4]
 18619  01639E  0EF8               	movlw	-8
 18620  0163A0  006F FF8F FFE6     	movff	plusw1,postinc1
 18621  0163A6  006F FF8F FFE6     	movff	plusw1,postinc1
 18622  0163AC  ECEE  F0B5         	call	_strlen	;wreg free
 18623  0163B0  0EFC               	movlw	-4
 18624  0163B2  50E3               	movf	plusw1,w,c
 18625  0163B4  2635               	addwf	btemp^0,f,c
 18626  0163B6  0EFD               	movlw	-3
 18627  0163B8  50E3               	movf	plusw1,w,c
 18628  0163BA  2236               	addwfc	(btemp+1)^0,f,c
 18629                           
 18630                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18631  0163BC  0EF6               	movlw	246
 18632  0163BE  26E1               	addwf	fsr1l,f,c
 18633  0163C0  0EFF               	movlw	255
 18634  0163C2  22E2               	addwfc	fsr1h,f,c
 18635  0163C4  0012               	return		;funcret
 18636  0163C6                     __end_of_pad:
 18637                           	opt callstack 0
 18638                           
 18639 ;; *************** function _strlen *****************
 18640 ;; Defined at:
 18641 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18642 ;; Parameters:    Size  Location     Type
 18643 ;;  s               2  [STACK] PTR const unsigned char 
 18644 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18645 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18646 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  a               2  [STACK] PTR const unsigned char 
 18649 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18650 ;;		 -> STR_15(9), STR_14(12), D.lcd(216), D(218), 
 18651 ;;		 -> T(144), STR_7(4), STR_3(4), V(189), 
 18652 ;; Return value:  Size  Location     Type
 18653 ;;                  2  [STACK] unsigned int 
 18654 ;; Registers used:
 18655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18656 ;; Tracked objects:
 18657 ;;		On entry : 0/0
 18658 ;;		On exit  : 0/0
 18659 ;;		Unchanged: 0/0
 18660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18665 ;;Total ram usage:        0 bytes
 18666 ;; Hardware stack levels used:    1
 18667 ;; Hardware stack levels required when called:    6
 18668 ;; This function calls:
 18669 ;;		Nothing
 18670 ;; This function is called by:
 18671 ;;		_eaDogM_WriteString
 18672 ;;		_pad
 18673 ;;		_stoa
 18674 ;; This function uses a reentrant model
 18675 ;;
 18676                           
 18677                           	psect	text61
 18678  016BDC                     __ptext61:
 18679                           	opt callstack 0
 18680  016BDC                     _strlen:
 18681                           	opt callstack 0
 18682                           
 18683                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18684  016BDC  52E6               	movf	postinc1,f,c
 18685  016BDE  52E6               	movf	postinc1,f,c
 18686                           
 18687                           ;stkvar	_s @ sp[(-2)+-2]
 18688                           
 18689                           ;incstack = 0
 18690  016BE0  0EFC               	movlw	-4
 18691  016BE2  006F FF8C  F03F    	movff	plusw1,btemp+10
 18692  016BE8  0EFD               	movlw	-3
 18693  016BEA  006F FF8C  F040    	movff	plusw1,btemp+11
 18694                           
 18695                           ;stkvar	_a @ sp[(-2)+0]
 18696  016BF0  0EFF               	movlw	-1
 18697  016BF2  0060  F103  FFE3   	movff	btemp+11,plusw1
 18698  016BF8  0EFE               	movlw	-2
 18699  016BFA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18700  016C00  D011               	goto	l5891
 18701  016C02                     l5889:
 18702                           
 18703                           ;stkvar	_s @ sp[(-2)+-2]
 18704  016C02  0EFC               	movlw	-4
 18705  016C04  50E3               	movf	plusw1,w,c
 18706  016C06  0F01               	addlw	1
 18707  016C08  6E35               	movwf	btemp^0,c
 18708  016C0A  0EFC               	movlw	-4
 18709  016C0C  0060  F0D7  FFE3   	movff	btemp,plusw1
 18710  016C12  6A35               	clrf	btemp^0,c
 18711  016C14  0EFD               	movlw	-3
 18712  016C16  50E3               	movf	plusw1,w,c
 18713  016C18  2035               	addwfc	btemp^0,w,c
 18714  016C1A  6E35               	movwf	btemp^0,c
 18715  016C1C  0EFD               	movlw	-3
 18716  016C1E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18717  016C24                     l5891:
 18718                           
 18719                           ;stkvar	_s @ sp[(-2)+-2]
 18720  016C24  0EFC               	movlw	-4
 18721  016C26  006F FF8F FFF6     	movff	plusw1,tblptrl
 18722  016C2C  0EFD               	movlw	-3
 18723  016C2E  006F FF8F FFF7     	movff	plusw1,tblptrh
 18724  016C34  0E00               	movlw	low (__mediumconst shr (0+16))
 18725  016C36  6EF8               	movwf	tblptru,c
 18726  016C38  0E1F               	movlw	(high __ramtop+-1)
 18727  016C3A  64F7               	cpfsgt	tblptrh,c
 18728  016C3C  D003               	bra	u4237
 18729  016C3E  0008               	tblrd		*
 18730  016C40  50F5               	movf	tablat,w,c
 18731  016C42  D007               	bra	u4230
 18732  016C44                     u4237:
 18733  016C44  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18734  016C4A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18735  016C50  50EF               	movf	indf0,w,c
 18736  016C52                     u4230:
 18737  016C52  0900               	iorlw	0
 18738  016C54  A4D8               	btfss	status,2,c
 18739  016C56  D7D5               	goto	l5889
 18740                           
 18741                           ;stkvar	_a @ sp[(-2)+0]
 18742                           ;stkvar	_s @ sp[(-2)+-2]
 18743  016C58  0EFC               	movlw	-4
 18744  016C5A  006F FF8C  F035    	movff	plusw1,btemp
 18745  016C60  0EFD               	movlw	-3
 18746  016C62  006F FF8C  F036    	movff	plusw1,btemp+1
 18747  016C68  0EFE               	movlw	-2
 18748  016C6A  50E3               	movf	plusw1,w,c
 18749  016C6C  5E35               	subwf	btemp^0,f,c
 18750  016C6E  0EFF               	movlw	-1
 18751  016C70  50E3               	movf	plusw1,w,c
 18752  016C72  5A36               	subwfb	(btemp+1)^0,f,c
 18753                           
 18754                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18755  016C74  52E5               	movf	postdec1,f,c
 18756  016C76  52E5               	movf	postdec1,f,c
 18757  016C78  52E5               	movf	postdec1,f,c
 18758  016C7A  52E5               	movf	postdec1,f,c
 18759  016C7C  0012               	return		;funcret
 18760  016C7E                     __end_of_strlen:
 18761                           	opt callstack 0
 18762                           
 18763 ;; *************** function _fputs *****************
 18764 ;; Defined at:
 18765 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18766 ;; Parameters:    Size  Location     Type
 18767 ;;  s               2  [STACK] PTR const unsigned char 
 18768 ;;		 -> dbuf(80), 
 18769 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18770 ;;		 -> f(6), NULL(0), 
 18771 ;; Auto vars:     Size  Location     Type
 18772 ;;  i               2  [STACK] int 
 18773 ;;  c               1  [STACK] unsigned char 
 18774 ;; Return value:  Size  Location     Type
 18775 ;;                  2  [STACK] int 
 18776 ;; Registers used:
 18777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18778 ;; Tracked objects:
 18779 ;;		On entry : 0/1
 18780 ;;		On exit  : 0/0
 18781 ;;		Unchanged: 0/0
 18782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;Total ram usage:        0 bytes
 18788 ;; Hardware stack levels used:    1
 18789 ;; Hardware stack levels required when called:    9
 18790 ;; This function calls:
 18791 ;;		_fputc
 18792 ;; This function is called by:
 18793 ;;		_pad
 18794 ;; This function uses a reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text62
 18798  016C7E                     __ptext62:
 18799                           	opt callstack 0
 18800  016C7E                     _fputs:
 18801                           	opt callstack 0
 18802                           
 18803                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18804  016C7E  52E6               	movf	postinc1,f,c
 18805  016C80  52E6               	movf	postinc1,f,c
 18806  016C82  52E6               	movf	postinc1,f,c
 18807                           
 18808                           ;stkvar	_i @ sp[(-3)+0]
 18809                           
 18810                           ;incstack = 0
 18811  016C84  0EFD               	movlw	-3
 18812  016C86  6AE3               	clrf	plusw1,c
 18813  016C88  0EFE               	movlw	-2
 18814  016C8A  6AE3               	clrf	plusw1,c
 18815  016C8C  D01F               	goto	l8873
 18816  016C8E                     l8869:
 18817                           
 18818                           ;stkvar	_fp @ sp[(-3)+-4]
 18819  016C8E  0EF9               	movlw	-7
 18820  016C90  006F FF8F FFE6     	movff	plusw1,postinc1
 18821  016C96  006F FF8F FFE6     	movff	plusw1,postinc1
 18822                           
 18823                           ;stkvar	_c @ sp[(-5)+2]
 18824  016C9C  0EFD               	movlw	-3
 18825  016C9E  50E3               	movf	plusw1,w,c
 18826  016CA0  6EE6               	movwf	postinc1,c
 18827  016CA2  0E00               	movlw	0
 18828  016CA4  6EE6               	movwf	postinc1,c
 18829  016CA6  EC3B  F0B0         	call	_fputc	;wreg free
 18830                           
 18831                           ;stkvar	_i @ sp[(-3)+0]
 18832  016CAA  0EFD               	movlw	-3
 18833  016CAC  50E3               	movf	plusw1,w,c
 18834  016CAE  0F01               	addlw	1
 18835  016CB0  6E35               	movwf	btemp^0,c
 18836  016CB2  0EFD               	movlw	-3
 18837  016CB4  0060  F0D7  FFE3   	movff	btemp,plusw1
 18838  016CBA  6A35               	clrf	btemp^0,c
 18839  016CBC  0EFE               	movlw	-2
 18840  016CBE  50E3               	movf	plusw1,w,c
 18841  016CC0  2035               	addwfc	btemp^0,w,c
 18842  016CC2  6E35               	movwf	btemp^0,c
 18843  016CC4  0EFE               	movlw	-2
 18844  016CC6  0060  F0D7  FFE3   	movff	btemp,plusw1
 18845  016CCC                     l8873:
 18846                           
 18847                           ;stkvar	_i @ sp[(-3)+0]
 18848  016CCC  0EFD               	movlw	-3
 18849  016CCE  006F FF8C  F03F    	movff	plusw1,btemp+10
 18850  016CD4  0EFE               	movlw	-2
 18851  016CD6  006F FF8C  F040    	movff	plusw1,btemp+11
 18852                           
 18853                           ;stkvar	_s @ sp[(-3)+-2]
 18854  016CDC  0EFB               	movlw	-5
 18855  016CDE  006F FF8C  F03D    	movff	plusw1,btemp+8
 18856  016CE4  0EFC               	movlw	-4
 18857  016CE6  006F FF8C  F03E    	movff	plusw1,btemp+9
 18858  016CEC  503F               	movf	(btemp+10)^0,w,c
 18859  016CEE  243D               	addwf	(btemp+8)^0,w,c
 18860  016CF0  6ED9               	movwf	fsr2l,c
 18861  016CF2  5040               	movf	(btemp+11)^0,w,c
 18862  016CF4  203E               	addwfc	(btemp+9)^0,w,c
 18863  016CF6  6EDA               	movwf	fsr2h,c
 18864  016CF8  50DF               	movf	indf2,w,c
 18865  016CFA  6E40               	movwf	(btemp+11)^0,c
 18866                           
 18867                           ;stkvar	_c @ sp[(-3)+2]
 18868  016CFC  0EFF               	movlw	-1
 18869  016CFE  0060  F103  FFE3   	movff	btemp+11,plusw1
 18870  016D04  0EFF               	movlw	-1
 18871  016D06  50E3               	movf	plusw1,w,c
 18872  016D08  A4D8               	btfss	status,2,c
 18873  016D0A  D7C1               	goto	l8869
 18874                           
 18875                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18876  016D0C  0EF9               	movlw	249
 18877  016D0E  26E1               	addwf	fsr1l,f,c
 18878  016D10  0EFF               	movlw	255
 18879  016D12  22E2               	addwfc	fsr1h,f,c
 18880  016D14  0012               	return		;funcret
 18881  016D16                     __end_of_fputs:
 18882                           	opt callstack 0
 18883                           
 18884 ;; *************** function _fputc *****************
 18885 ;; Defined at:
 18886 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18887 ;; Parameters:    Size  Location     Type
 18888 ;;  c               2  [STACK] int 
 18889 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18890 ;;		 -> f(6), NULL(0), 
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;		None
 18893 ;; Return value:  Size  Location     Type
 18894 ;;                  2  [STACK] int 
 18895 ;; Registers used:
 18896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18897 ;; Tracked objects:
 18898 ;;		On entry : 0/4
 18899 ;;		On exit  : 0/0
 18900 ;;		Unchanged: 0/0
 18901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18906 ;;Total ram usage:        0 bytes
 18907 ;; Hardware stack levels used:    1
 18908 ;; Hardware stack levels required when called:    8
 18909 ;; This function calls:
 18910 ;;		_putch
 18911 ;; This function is called by:
 18912 ;;		_pad
 18913 ;;		_stoa
 18914 ;;		_vfpfcnvrt
 18915 ;;		_fputs
 18916 ;; This function uses a reentrant model
 18917 ;;
 18918                           
 18919                           	psect	text63
 18920  016076                     __ptext63:
 18921                           	opt callstack 0
 18922  016076                     _fputc:
 18923                           	opt callstack 13
 18924                           
 18925                           ;stkvar	_fp @ sp[(0)+-4]
 18926                           
 18927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18928                           ;incstack = 0
 18929  016076  0EFC               	movlw	-4
 18930  016078  006F FF8C  F035    	movff	plusw1,btemp
 18931  01607E  0EFD               	movlw	-3
 18932  016080  50E3               	movf	plusw1,w,c
 18933  016082  1035               	iorwf	btemp^0,w,c
 18934  016084  B4D8               	btfsc	status,2,c
 18935  016086  D009               	goto	u8300
 18936                           
 18937                           ;stkvar	_fp @ sp[(0)+-4]
 18938  016088  0EFC               	movlw	-4
 18939  01608A  006F FF8C  F035    	movff	plusw1,btemp
 18940  016090  0EFD               	movlw	-3
 18941  016092  50E3               	movf	plusw1,w,c
 18942  016094  1035               	iorwf	btemp^0,w,c
 18943  016096  A4D8               	btfss	status,2,c
 18944  016098  D006               	goto	l8857
 18945  01609A                     u8300:
 18946                           
 18947                           ;stkvar	_c @ sp[(0)+-2]
 18948  01609A  0EFE               	movlw	-2
 18949  01609C  50E3               	movf	plusw1,w,c
 18950  01609E  6EE6               	movwf	postinc1,c
 18951  0160A0  EC54  F0BF         	call	_putch	;wreg free
 18952  0160A4  D075               	goto	l2744
 18953  0160A6                     l8857:
 18954                           
 18955                           ;stkvar	_fp @ sp[(0)+-4]
 18956  0160A6  0EFC               	movlw	-4
 18957  0160A8  006F FF8C  F03F    	movff	plusw1,btemp+10
 18958  0160AE  0EFD               	movlw	-3
 18959  0160B0  006F FF8C  F040    	movff	plusw1,btemp+11
 18960  0160B6  0E04               	movlw	4
 18961  0160B8  243F               	addwf	(btemp+10)^0,w,c
 18962  0160BA  6ED9               	movwf	fsr2l,c
 18963  0160BC  0E00               	movlw	0
 18964  0160BE  2040               	addwfc	(btemp+11)^0,w,c
 18965  0160C0  6EDA               	movwf	fsr2h,c
 18966  0160C2  50DE               	movf	postinc2,w,c
 18967  0160C4  10DE               	iorwf	postinc2,w,c
 18968  0160C6  B4D8               	btfsc	status,2,c
 18969  0160C8  D026               	goto	u8320
 18970                           
 18971                           ;stkvar	_fp @ sp[(0)+-4]
 18972  0160CA  0EFC               	movlw	-4
 18973  0160CC  006F FF8C  F03F    	movff	plusw1,btemp+10
 18974  0160D2  0EFD               	movlw	-3
 18975  0160D4  006F FF8C  F040    	movff	plusw1,btemp+11
 18976  0160DA  0E04               	movlw	4
 18977  0160DC  243F               	addwf	(btemp+10)^0,w,c
 18978  0160DE  6ED9               	movwf	fsr2l,c
 18979  0160E0  0E00               	movlw	0
 18980  0160E2  2040               	addwfc	(btemp+11)^0,w,c
 18981  0160E4  6EDA               	movwf	fsr2h,c
 18982                           
 18983                           ;stkvar	_fp @ sp[(0)+-4]
 18984  0160E6  0EFC               	movlw	-4
 18985  0160E8  006F FF8C  F03F    	movff	plusw1,btemp+10
 18986  0160EE  0EFD               	movlw	-3
 18987  0160F0  006F FF8C  F040    	movff	plusw1,btemp+11
 18988  0160F6  0E02               	movlw	2
 18989  0160F8  243F               	addwf	(btemp+10)^0,w,c
 18990  0160FA  6EE9               	movwf	fsr0l,c
 18991  0160FC  0E00               	movlw	0
 18992  0160FE  2040               	addwfc	(btemp+11)^0,w,c
 18993  016100  6EEA               	movwf	fsr0h,c
 18994  016102  50DE               	movf	postinc2,w,c
 18995  016104  5CEE               	subwf	postinc0,w,c
 18996  016106  50EE               	movf	postinc0,w,c
 18997  016108  0A80               	xorlw	128
 18998  01610A  6E35               	movwf	btemp^0,c
 18999  01610C  50DE               	movf	postinc2,w,c
 19000  01610E  0A80               	xorlw	128
 19001  016110  5835               	subwfb	btemp^0,w,c
 19002  016112  B0D8               	btfsc	status,0,c
 19003  016114  D03D               	goto	l2744
 19004  016116                     u8320:
 19005                           
 19006                           ;stkvar	_c @ sp[(0)+-2]
 19007                           ;stkvar	_fp @ sp[(0)+-4]
 19008  016116  0EFC               	movlw	-4
 19009  016118  006F FF8C  F03F    	movff	plusw1,btemp+10
 19010  01611E  0EFD               	movlw	-3
 19011  016120  006F FF8C  F040    	movff	plusw1,btemp+11
 19012  016126  0E02               	movlw	2
 19013  016128  243F               	addwf	(btemp+10)^0,w,c
 19014  01612A  6ED9               	movwf	fsr2l,c
 19015  01612C  0E00               	movlw	0
 19016  01612E  2040               	addwfc	(btemp+11)^0,w,c
 19017  016130  6EDA               	movwf	fsr2h,c
 19018  016132  006F FF78  F03F    	movff	postinc2,btemp+10
 19019  016138  006F FF74  F040    	movff	postdec2,btemp+11
 19020                           
 19021                           ;stkvar	_fp @ sp[(0)+-4]
 19022  01613E  0EFC               	movlw	-4
 19023  016140  006F FF8F FFD9     	movff	plusw1,fsr2l
 19024  016146  0EFD               	movlw	-3
 19025  016148  006F FF8F FFDA     	movff	plusw1,fsr2h
 19026  01614E  006F FF78  F03D    	movff	postinc2,btemp+8
 19027  016154  006F FF74  F03E    	movff	postdec2,btemp+9
 19028  01615A  503F               	movf	(btemp+10)^0,w,c
 19029  01615C  243D               	addwf	(btemp+8)^0,w,c
 19030  01615E  6ED9               	movwf	fsr2l,c
 19031  016160  5040               	movf	(btemp+11)^0,w,c
 19032  016162  203E               	addwfc	(btemp+9)^0,w,c
 19033  016164  6EDA               	movwf	fsr2h,c
 19034  016166  0EFE               	movlw	-2
 19035  016168  006F FF8F FFDF     	movff	plusw1,indf2
 19036                           
 19037                           ;stkvar	_fp @ sp[(0)+-4]
 19038  01616E  0EFC               	movlw	-4
 19039  016170  006F FF8C  F03F    	movff	plusw1,btemp+10
 19040  016176  0EFD               	movlw	-3
 19041  016178  006F FF8C  F040    	movff	plusw1,btemp+11
 19042  01617E  0E02               	movlw	2
 19043  016180  243F               	addwf	(btemp+10)^0,w,c
 19044  016182  6ED9               	movwf	fsr2l,c
 19045  016184  0E00               	movlw	0
 19046  016186  2040               	addwfc	(btemp+11)^0,w,c
 19047  016188  6EDA               	movwf	fsr2h,c
 19048  01618A  2ADE               	incf	postinc2,f,c
 19049  01618C  0E00               	movlw	0
 19050  01618E  22DD               	addwfc	postdec2,f,c
 19051  016190                     l2744:
 19052                           
 19053                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19054  016190  52E5               	movf	postdec1,f,c
 19055  016192  52E5               	movf	postdec1,f,c
 19056  016194  52E5               	movf	postdec1,f,c
 19057  016196  52E5               	movf	postdec1,f,c
 19058  016198  0012               	return		;funcret
 19059  01619A                     __end_of_fputc:
 19060                           	opt callstack 0
 19061                           
 19062 ;; *************** function _putch *****************
 19063 ;; Defined at:
 19064 ;;		line 155 in file "eadog.c"
 19065 ;; Parameters:    Size  Location     Type
 19066 ;;  c               1  [STACK] unsigned char 
 19067 ;; Auto vars:     Size  Location     Type
 19068 ;;		None
 19069 ;; Return value:  Size  Location     Type
 19070 ;;                  1  [STACK] void 
 19071 ;; Registers used:
 19072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19073 ;; Tracked objects:
 19074 ;;		On entry : 0/4
 19075 ;;		On exit  : 0/0
 19076 ;;		Unchanged: 0/0
 19077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19082 ;;Total ram usage:        0 bytes
 19083 ;; Hardware stack levels used:    1
 19084 ;; Hardware stack levels required when called:    7
 19085 ;; This function calls:
 19086 ;;		_ringBufS_put_dma
 19087 ;; This function is called by:
 19088 ;;		_fputc
 19089 ;; This function uses a reentrant model
 19090 ;;
 19091                           
 19092                           	psect	text64
 19093  017EA8                     __ptext64:
 19094                           	opt callstack 0
 19095  017EA8                     _putch:
 19096                           	opt callstack 13
 19097                           
 19098                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19099                           ;stkvar	_c @ sp[(0)+-1]
 19100                           
 19101                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19102                           ;incstack = 0
 19103  017EA8  0EFF               	movlw	-1
 19104  017EAA  50E3               	movf	plusw1,w,c
 19105  017EAC  6EE6               	movwf	postinc1,c
 19106  017EAE  0060  F283  FFE6   	movff	_spi_link+6,postinc1
 19107  017EB4  0060  F287  FFE6   	movff	_spi_link+7,postinc1
 19108  017EBA  ECF2  F0B4         	call	_ringBufS_put_dma	;wreg free
 19109                           
 19110                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19111  017EBE  52E5               	movf	postdec1,f,c
 19112  017EC0  0012               	return		;funcret
 19113  017EC2                     __end_of_putch:
 19114                           	opt callstack 0
 19115                           
 19116 ;; *************** function _ringBufS_put_dma *****************
 19117 ;; Defined at:
 19118 ;;		line 67 in file "ringbufs.c"
 19119 ;; Parameters:    Size  Location     Type
 19120 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19121 ;;		 -> ring_buf1(67), 
 19122 ;;  c               1  [STACK] const unsigned char 
 19123 ;; Auto vars:     Size  Location     Type
 19124 ;;		None
 19125 ;; Return value:  Size  Location     Type
 19126 ;;                  1  [STACK] void 
 19127 ;; Registers used:
 19128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19129 ;; Tracked objects:
 19130 ;;		On entry : 0/4
 19131 ;;		On exit  : 0/0
 19132 ;;		Unchanged: 0/0
 19133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19138 ;;Total ram usage:        0 bytes
 19139 ;; Hardware stack levels used:    1
 19140 ;; Hardware stack levels required when called:    6
 19141 ;; This function calls:
 19142 ;;		Nothing
 19143 ;; This function is called by:
 19144 ;;		_putch
 19145 ;; This function uses a reentrant model
 19146 ;;
 19147                           
 19148                           	psect	text65
 19149  0169E4                     __ptext65:
 19150                           	opt callstack 0
 19151  0169E4                     _ringBufS_put_dma:
 19152                           	opt callstack 13
 19153                           
 19154                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19155                           ;stkvar	__this @ sp[(0)+-2]
 19156                           
 19157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19158                           ;incstack = 0
 19159  0169E4  0EFE               	movlw	-2
 19160  0169E6  006F FF8C  F03F    	movff	plusw1,btemp+10
 19161  0169EC  0EFF               	movlw	-1
 19162  0169EE  006F FF8C  F040    	movff	plusw1,btemp+11
 19163  0169F4  0E42               	movlw	66
 19164  0169F6  243F               	addwf	(btemp+10)^0,w,c
 19165  0169F8  6ED9               	movwf	fsr2l,c
 19166  0169FA  0E00               	movlw	0
 19167  0169FC  2040               	addwfc	(btemp+11)^0,w,c
 19168  0169FE  6EDA               	movwf	fsr2h,c
 19169  016A00  0E40               	movlw	64
 19170  016A02  60DF               	cpfslt	indf2,c
 19171  016A04  D040               	goto	l1464
 19172                           
 19173                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19174                           ;stkvar	_c @ sp[(0)+-3]
 19175                           ;stkvar	__this @ sp[(0)+-2]
 19176  016A06  0EFE               	movlw	-2
 19177  016A08  006F FF8C  F03F    	movff	plusw1,btemp+10
 19178  016A0E  0EFF               	movlw	-1
 19179  016A10  006F FF8C  F040    	movff	plusw1,btemp+11
 19180  016A16  0E40               	movlw	64
 19181  016A18  243F               	addwf	(btemp+10)^0,w,c
 19182  016A1A  6ED9               	movwf	fsr2l,c
 19183  016A1C  0E00               	movlw	0
 19184  016A1E  2040               	addwfc	(btemp+11)^0,w,c
 19185  016A20  6EDA               	movwf	fsr2h,c
 19186  016A22  50DF               	movf	indf2,w,c
 19187  016A24  6E40               	movwf	(btemp+11)^0,c
 19188                           
 19189                           ;stkvar	__this @ sp[(0)+-2]
 19190  016A26  0EFE               	movlw	-2
 19191  016A28  006F FF8C  F03D    	movff	plusw1,btemp+8
 19192  016A2E  0EFF               	movlw	-1
 19193  016A30  006F FF8C  F03E    	movff	plusw1,btemp+9
 19194  016A36  5040               	movf	(btemp+11)^0,w,c
 19195  016A38  243D               	addwf	(btemp+8)^0,w,c
 19196  016A3A  6ED9               	movwf	fsr2l,c
 19197  016A3C  0E00               	movlw	0
 19198  016A3E  203E               	addwfc	(btemp+9)^0,w,c
 19199  016A40  6EDA               	movwf	fsr2h,c
 19200  016A42  0EFD               	movlw	-3
 19201  016A44  006F FF8F FFDF     	movff	plusw1,indf2
 19202                           
 19203                           ;ringbufs.c: 71:   ++_this->head;
 19204                           ;stkvar	__this @ sp[(0)+-2]
 19205  016A4A  0EFE               	movlw	-2
 19206  016A4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 19207  016A52  0EFF               	movlw	-1
 19208  016A54  006F FF8C  F040    	movff	plusw1,btemp+11
 19209  016A5A  0E40               	movlw	64
 19210  016A5C  243F               	addwf	(btemp+10)^0,w,c
 19211  016A5E  6ED9               	movwf	fsr2l,c
 19212  016A60  0E00               	movlw	0
 19213  016A62  2040               	addwfc	(btemp+11)^0,w,c
 19214  016A64  6EDA               	movwf	fsr2h,c
 19215  016A66  2ADF               	incf	indf2,f,c
 19216                           
 19217                           ;ringbufs.c: 72:   ++_this->count;
 19218                           ;stkvar	__this @ sp[(0)+-2]
 19219  016A68  0EFE               	movlw	-2
 19220  016A6A  006F FF8C  F03F    	movff	plusw1,btemp+10
 19221  016A70  0EFF               	movlw	-1
 19222  016A72  006F FF8C  F040    	movff	plusw1,btemp+11
 19223  016A78  0E42               	movlw	66
 19224  016A7A  243F               	addwf	(btemp+10)^0,w,c
 19225  016A7C  6ED9               	movwf	fsr2l,c
 19226  016A7E  0E00               	movlw	0
 19227  016A80  2040               	addwfc	(btemp+11)^0,w,c
 19228  016A82  6EDA               	movwf	fsr2h,c
 19229  016A84  2ADF               	incf	indf2,f,c
 19230  016A86                     l1464:
 19231                           
 19232                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19233  016A86  52E5               	movf	postdec1,f,c
 19234  016A88  52E5               	movf	postdec1,f,c
 19235  016A8A  52E5               	movf	postdec1,f,c
 19236  016A8C  0012               	return		;funcret
 19237  016A8E                     __end_of_ringBufS_put_dma:
 19238                           	opt callstack 0
 19239                           
 19240 ;; *************** function _atoi *****************
 19241 ;; Defined at:
 19242 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19243 ;; Parameters:    Size  Location     Type
 19244 ;;  s               2  [STACK] PTR const unsigned char 
 19245 ;;		 -> STR_31(3), STR_30(3), STR_29(19), STR_28(19), 
 19246 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 19247 ;;		 -> STR_23(24), STR_22(15), STR_21(15), STR_20(15), 
 19248 ;;		 -> STR_19(10), STR_18(10), STR_17(19), STR_16(19), 
 19249 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(13), 
 19250 ;;		 -> STR_9(13), STR_8(17), STR_6(15), STR_5(17), 
 19251 ;;		 -> STR_4(17), STR_2(15), STR_1(17), 
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;  n               2  [STACK] int 
 19254 ;;  neg             2  [STACK] int 
 19255 ;; Return value:  Size  Location     Type
 19256 ;;                  2  [STACK] int 
 19257 ;; Registers used:
 19258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19259 ;; Tracked objects:
 19260 ;;		On entry : 0/4
 19261 ;;		On exit  : 0/0
 19262 ;;		Unchanged: 0/0
 19263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;Total ram usage:        0 bytes
 19269 ;; Hardware stack levels used:    1
 19270 ;; Hardware stack levels required when called:    7
 19271 ;; This function calls:
 19272 ;;		_isdigit
 19273 ;;		_isspace
 19274 ;; This function is called by:
 19275 ;;		_vfpfcnvrt
 19276 ;; This function uses a reentrant model
 19277 ;;
 19278                           
 19279                           	psect	text66
 19280  014AB8                     __ptext66:
 19281                           	opt callstack 0
 19282  014AB8                     _atoi:
 19283                           	opt callstack 0
 19284                           
 19285                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19286  014AB8  0E09               	movlw	9
 19287  014ABA  26E1               	addwf	fsr1l,f,c
 19288  014ABC  0E00               	movlw	0
 19289  014ABE  22E2               	addwfc	fsr1h,f,c
 19290                           
 19291                           ;stkvar	_n @ sp[(-9)+5]
 19292                           
 19293                           ;incstack = 0
 19294  014AC0  0EFC               	movlw	-4
 19295  014AC2  6AE3               	clrf	plusw1,c
 19296  014AC4  0EFD               	movlw	-3
 19297  014AC6  6AE3               	clrf	plusw1,c
 19298                           
 19299                           ;stkvar	_neg @ sp[(-9)+7]
 19300  014AC8  0EFE               	movlw	-2
 19301  014ACA  6AE3               	clrf	plusw1,c
 19302  014ACC  0EFF               	movlw	-1
 19303  014ACE  6AE3               	clrf	plusw1,c
 19304  014AD0  D011               	goto	l7363
 19305  014AD2                     l7361:
 19306                           
 19307                           ;stkvar	_s @ sp[(-9)+-2]
 19308  014AD2  0EF5               	movlw	-11
 19309  014AD4  50E3               	movf	plusw1,w,c
 19310  014AD6  0F01               	addlw	1
 19311  014AD8  6E35               	movwf	btemp^0,c
 19312  014ADA  0EF5               	movlw	-11
 19313  014ADC  0060  F0D7  FFE3   	movff	btemp,plusw1
 19314  014AE2  6A35               	clrf	btemp^0,c
 19315  014AE4  0EF6               	movlw	-10
 19316  014AE6  50E3               	movf	plusw1,w,c
 19317  014AE8  2035               	addwfc	btemp^0,w,c
 19318  014AEA  6E35               	movwf	btemp^0,c
 19319  014AEC  0EF6               	movlw	-10
 19320  014AEE  0060  F0D7  FFE3   	movff	btemp,plusw1
 19321  014AF4                     l7363:
 19322                           
 19323                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19324  014AF4  0EFB               	movlw	-5
 19325  014AF6  6AE3               	clrf	plusw1,c
 19326  014AF8  2AE3               	incf	plusw1,f,c
 19327                           
 19328                           ;stkvar	_s @ sp[(-9)+-2]
 19329  014AFA  50E1               	movf	fsr1l,w,c
 19330  014AFC  0FF5               	addlw	-11
 19331  014AFE  6ED9               	movwf	fsr2l,c
 19332  014B00  50E2               	movf	fsr1h,w,c
 19333  014B02  6EDA               	movwf	fsr2h,c
 19334  014B04  0EFF               	movlw	255
 19335  014B06  22DA               	addwfc	fsr2h,f,c
 19336  014B08  006F FF7B FFF6     	movff	postinc2,tblptrl
 19337  014B0E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19338  014B14                     	if	0	;tblptru may be non-zero
 19339  014B14                     	endif
 19340  014B14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19341  014B14  0E00               	movlw	low (__mediumconst shr (0+16))
 19342  014B16  6EF8               	movwf	tblptru,c
 19343  014B18                     	endif
 19344  014B18  0008               	tblrd		*
 19345  014B1A  50F5               	movf	tablat,w,c
 19346  014B1C  0A20               	xorlw	32
 19347  014B1E  B4D8               	btfsc	status,2,c
 19348  014B20  D023               	goto	l7371
 19349  014B22  0EF7               	movlw	247
 19350  014B24  6E3F               	movwf	(btemp+10)^0,c
 19351  014B26  0EFF               	movlw	255
 19352  014B28  6E40               	movwf	(btemp+11)^0,c
 19353                           
 19354                           ;stkvar	_s @ sp[(-9)+-2]
 19355  014B2A  50E1               	movf	fsr1l,w,c
 19356  014B2C  0FF5               	addlw	-11
 19357  014B2E  6ED9               	movwf	fsr2l,c
 19358  014B30  50E2               	movf	fsr1h,w,c
 19359  014B32  6EDA               	movwf	fsr2h,c
 19360  014B34  0EFF               	movlw	255
 19361  014B36  22DA               	addwfc	fsr2h,f,c
 19362  014B38  006F FF7B FFF6     	movff	postinc2,tblptrl
 19363  014B3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19364  014B44                     	if	0	;tblptru may be non-zero
 19365  014B44                     	endif
 19366  014B44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19367  014B44  0E00               	movlw	low (__mediumconst shr (0+16))
 19368  014B46  6EF8               	movwf	tblptru,c
 19369  014B48                     	endif
 19370  014B48  0008               	tblrd		*
 19371  014B4A  50F5               	movf	tablat,w,c
 19372  014B4C  6E3D               	movwf	(btemp+8)^0,c
 19373  014B4E  6A3E               	clrf	(btemp+9)^0,c
 19374  014B50  503F               	movf	(btemp+10)^0,w,c
 19375  014B52  263D               	addwf	(btemp+8)^0,f,c
 19376  014B54  5040               	movf	(btemp+11)^0,w,c
 19377  014B56  223E               	addwfc	(btemp+9)^0,f,c
 19378  014B58  503E               	movf	(btemp+9)^0,w,c
 19379  014B5A  E104               	bnz	u7090
 19380  014B5C  0E05               	movlw	5
 19381  014B5E  5C3D               	subwf	(btemp+8)^0,w,c
 19382  014B60  A0D8               	btfss	status,0,c
 19383  014B62  D002               	goto	l7371
 19384  014B64                     u7090:
 19385                           
 19386                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19387  014B64  0EFB               	movlw	-5
 19388  014B66  6AE3               	clrf	plusw1,c
 19389  014B68                     l7371:
 19390                           
 19391                           ;stkvar	_atoi$4632 @ sp[(-9)+4]
 19392  014B68  0EFB               	movlw	-5
 19393  014B6A  50E3               	movf	plusw1,w,c
 19394  014B6C  6E3F               	movwf	(btemp+10)^0,c
 19395  014B6E  6A40               	clrf	(btemp+11)^0,c
 19396                           
 19397                           ;stkvar	_atoi$4631 @ sp[(-9)+2]
 19398  014B70  0EF9               	movlw	-7
 19399  014B72  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19400  014B78  0EFA               	movlw	-6
 19401  014B7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 19402                           
 19403                           ;stkvar	_atoi$4631 @ sp[(-9)+2]
 19404  014B80  0EF9               	movlw	-7
 19405  014B82  006F FF8C  F035    	movff	plusw1,btemp
 19406  014B88  0EFA               	movlw	-6
 19407  014B8A  50E3               	movf	plusw1,w,c
 19408  014B8C  1035               	iorwf	btemp^0,w,c
 19409  014B8E  B4D8               	btfsc	status,2,c
 19410  014B90  D01F               	goto	l7381
 19411  014B92  D79F               	goto	l7361
 19412  014B94                     l7377:
 19413  014B94  0E01               	movlw	1
 19414  014B96  6E3F               	movwf	(btemp+10)^0,c
 19415  014B98  0E00               	movlw	0
 19416  014B9A  6E40               	movwf	(btemp+11)^0,c
 19417                           
 19418                           ;stkvar	_neg @ sp[(-9)+7]
 19419  014B9C  0EFE               	movlw	-2
 19420  014B9E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19421  014BA4  0EFF               	movlw	-1
 19422  014BA6  0060  F103  FFE3   	movff	btemp+11,plusw1
 19423  014BAC                     l7379:
 19424                           
 19425                           ;stkvar	_s @ sp[(-9)+-2]
 19426  014BAC  0EF5               	movlw	-11
 19427  014BAE  50E3               	movf	plusw1,w,c
 19428  014BB0  0F01               	addlw	1
 19429  014BB2  6E35               	movwf	btemp^0,c
 19430  014BB4  0EF5               	movlw	-11
 19431  014BB6  0060  F0D7  FFE3   	movff	btemp,plusw1
 19432  014BBC  6A35               	clrf	btemp^0,c
 19433  014BBE  0EF6               	movlw	-10
 19434  014BC0  50E3               	movf	plusw1,w,c
 19435  014BC2  2035               	addwfc	btemp^0,w,c
 19436  014BC4  6E35               	movwf	btemp^0,c
 19437  014BC6  0EF6               	movlw	-10
 19438  014BC8  0060  F0D7  FFE3   	movff	btemp,plusw1
 19439  014BCE  D053               	goto	l7387
 19440  014BD0                     l7381:
 19441                           
 19442                           ;stkvar	_s @ sp[(-9)+-2]
 19443  014BD0  50E1               	movf	fsr1l,w,c
 19444  014BD2  0FF5               	addlw	-11
 19445  014BD4  6ED9               	movwf	fsr2l,c
 19446  014BD6  50E2               	movf	fsr1h,w,c
 19447  014BD8  6EDA               	movwf	fsr2h,c
 19448  014BDA  0EFF               	movlw	255
 19449  014BDC  22DA               	addwfc	fsr2h,f,c
 19450  014BDE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19451  014BE4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19452  014BEA                     	if	0	;tblptru may be non-zero
 19453  014BEA                     	endif
 19454  014BEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19455  014BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 19456  014BEC  6EF8               	movwf	tblptru,c
 19457  014BEE                     	endif
 19458  014BEE  0008               	tblrd		*
 19459  014BF0  50F5               	movf	tablat,w,c
 19460  014BF2  6E3F               	movwf	(btemp+10)^0,c
 19461  014BF4  6A40               	clrf	(btemp+11)^0,c
 19462                           
 19463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19464                           ; Switch size 1, requested type "simple"
 19465                           ; Number of cases is 1, Range of values is 0 to 0
 19466                           ; switch strategies available:
 19467                           ; Name         Instructions Cycles
 19468                           ; simple_byte            4     3 (average)
 19469                           ;	Chosen strategy is simple_byte
 19470  014BF6  5040               	movf	(btemp+11)^0,w,c
 19471  014BF8  0A00               	xorlw	0	; case 0
 19472  014BFA  A4D8               	btfss	status,2,c
 19473  014BFC  D03C               	goto	l7387
 19474                           
 19475                           ; Switch size 1, requested type "simple"
 19476                           ; Number of cases is 2, Range of values is 43 to 45
 19477                           ; switch strategies available:
 19478                           ; Name         Instructions Cycles
 19479                           ; simple_byte            7     4 (average)
 19480                           ;	Chosen strategy is simple_byte
 19481  014BFE  503F               	movf	(btemp+10)^0,w,c
 19482  014C00  0A2B               	xorlw	43	; case 43
 19483  014C02  B4D8               	btfsc	status,2,c
 19484  014C04  D7D3               	goto	l7379
 19485  014C06  0A06               	xorlw	6	; case 45
 19486  014C08  B4D8               	btfsc	status,2,c
 19487  014C0A  D7C4               	goto	l7377
 19488  014C0C  D034               	goto	l7387
 19489  014C0E                     l7383:
 19490                           
 19491                           ;stkvar	_n @ sp[(-9)+5]
 19492  014C0E  0EFC               	movlw	-4
 19493  014C10  006F FF8C  F03F    	movff	plusw1,btemp+10
 19494  014C16  0EFD               	movlw	-3
 19495  014C18  006F FF8C  F040    	movff	plusw1,btemp+11
 19496  014C1E  0E0A               	movlw	10
 19497  014C20  023F               	mulwf	(btemp+10)^0,c
 19498  014C22  006F FFCC  F03D    	movff	prodl,btemp+8
 19499  014C28  006F FFD0  F03E    	movff	prodh,btemp+9
 19500  014C2E  0240               	mulwf	(btemp+11)^0,c
 19501  014C30  50F3               	movf	prodl,w,c
 19502  014C32  263E               	addwf	(btemp+9)^0,f,c
 19503                           
 19504                           ;stkvar	_s @ sp[(-9)+-2]
 19505  014C34  50E1               	movf	fsr1l,w,c
 19506  014C36  0FF5               	addlw	-11
 19507  014C38  6ED9               	movwf	fsr2l,c
 19508  014C3A  50E2               	movf	fsr1h,w,c
 19509  014C3C  6EDA               	movwf	fsr2h,c
 19510  014C3E  0EFF               	movlw	255
 19511  014C40  22DA               	addwfc	fsr2h,f,c
 19512  014C42  006F FF7B FFF6     	movff	postinc2,tblptrl
 19513  014C48  006F FF77 FFF7     	movff	postdec2,tblptrh
 19514  014C4E                     	if	0	;tblptru may be non-zero
 19515  014C4E                     	endif
 19516  014C4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19517  014C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 19518  014C50  6EF8               	movwf	tblptru,c
 19519  014C52                     	endif
 19520  014C52  0008               	tblrd		*
 19521  014C54  50F5               	movf	tablat,w,c
 19522  014C56  5E3D               	subwf	(btemp+8)^0,f,c
 19523  014C58  0E00               	movlw	0
 19524  014C5A  5A3E               	subwfb	(btemp+9)^0,f,c
 19525  014C5C  0E30               	movlw	48
 19526  014C5E  263D               	addwf	(btemp+8)^0,f,c
 19527  014C60  0E00               	movlw	0
 19528  014C62  223E               	addwfc	(btemp+9)^0,f,c
 19529                           
 19530                           ;stkvar	_n @ sp[(-9)+5]
 19531  014C64  0EFC               	movlw	-4
 19532  014C66  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 19533  014C6C  0EFD               	movlw	-3
 19534  014C6E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 19535  014C74  D79B               	goto	l7379
 19536  014C76                     l7387:
 19537  014C76  0ED0               	movlw	208
 19538  014C78  6E3F               	movwf	(btemp+10)^0,c
 19539  014C7A  0EFF               	movlw	255
 19540  014C7C  6E40               	movwf	(btemp+11)^0,c
 19541                           
 19542                           ;stkvar	_s @ sp[(-9)+-2]
 19543  014C7E  50E1               	movf	fsr1l,w,c
 19544  014C80  0FF5               	addlw	-11
 19545  014C82  6ED9               	movwf	fsr2l,c
 19546  014C84  50E2               	movf	fsr1h,w,c
 19547  014C86  6EDA               	movwf	fsr2h,c
 19548  014C88  0EFF               	movlw	255
 19549  014C8A  22DA               	addwfc	fsr2h,f,c
 19550  014C8C  006F FF7B FFF6     	movff	postinc2,tblptrl
 19551  014C92  006F FF77 FFF7     	movff	postdec2,tblptrh
 19552  014C98                     	if	0	;tblptru may be non-zero
 19553  014C98                     	endif
 19554  014C98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19555  014C98  0E00               	movlw	low (__mediumconst shr (0+16))
 19556  014C9A  6EF8               	movwf	tblptru,c
 19557  014C9C                     	endif
 19558  014C9C  0008               	tblrd		*
 19559  014C9E  50F5               	movf	tablat,w,c
 19560  014CA0  6E3D               	movwf	(btemp+8)^0,c
 19561  014CA2  6A3E               	clrf	(btemp+9)^0,c
 19562  014CA4  503F               	movf	(btemp+10)^0,w,c
 19563  014CA6  263D               	addwf	(btemp+8)^0,f,c
 19564  014CA8  5040               	movf	(btemp+11)^0,w,c
 19565  014CAA  223E               	addwfc	(btemp+9)^0,f,c
 19566  014CAC  503E               	movf	(btemp+9)^0,w,c
 19567  014CAE  E106               	bnz	u7110
 19568  014CB0  0E0A               	movlw	10
 19569  014CB2  5C3D               	subwf	(btemp+8)^0,w,c
 19570  014CB4  B0D8               	btfsc	status,0,c
 19571  014CB6  D002               	goto	u7110
 19572  014CB8  0E01               	movlw	1
 19573  014CBA  D001               	goto	u7120
 19574  014CBC                     u7110:
 19575  014CBC  0E00               	movlw	0
 19576  014CBE                     u7120:
 19577  014CBE  6E3F               	movwf	(btemp+10)^0,c
 19578  014CC0  6A40               	clrf	(btemp+11)^0,c
 19579                           
 19580                           ;stkvar	_atoi$4633 @ sp[(-9)+0]
 19581  014CC2  0EF7               	movlw	-9
 19582  014CC4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19583  014CCA  0EF8               	movlw	-8
 19584  014CCC  0060  F103  FFE3   	movff	btemp+11,plusw1
 19585                           
 19586                           ;stkvar	_atoi$4633 @ sp[(-9)+0]
 19587  014CD2  0EF7               	movlw	-9
 19588  014CD4  006F FF8C  F035    	movff	plusw1,btemp
 19589  014CDA  0EF8               	movlw	-8
 19590  014CDC  50E3               	movf	plusw1,w,c
 19591  014CDE  1035               	iorwf	btemp^0,w,c
 19592  014CE0  A4D8               	btfss	status,2,c
 19593  014CE2  D795               	goto	l7383
 19594                           
 19595                           ;stkvar	_neg @ sp[(-9)+7]
 19596  014CE4  0EFE               	movlw	-2
 19597  014CE6  006F FF8C  F035    	movff	plusw1,btemp
 19598  014CEC  0EFF               	movlw	-1
 19599  014CEE  50E3               	movf	plusw1,w,c
 19600  014CF0  1035               	iorwf	btemp^0,w,c
 19601  014CF2  A4D8               	btfss	status,2,c
 19602  014CF4  D00E               	goto	l7397
 19603                           
 19604                           ;stkvar	_n @ sp[(-9)+5]
 19605  014CF6  0EFC               	movlw	-4
 19606  014CF8  006F FF8C  F035    	movff	plusw1,btemp
 19607  014CFE  1E35               	comf	btemp^0,f,c
 19608  014D00  0EFD               	movlw	-3
 19609  014D02  006F FF8C  F036    	movff	plusw1,btemp+1
 19610  014D08  1E36               	comf	(btemp+1)^0,f,c
 19611  014D0A  2A35               	incf	btemp^0,f,c
 19612  014D0C  B4D8               	btfsc	status,2,c
 19613  014D0E  2A36               	incf	(btemp+1)^0,f,c
 19614  014D10  D008               	goto	l2683
 19615  014D12                     l7397:
 19616                           
 19617                           ;stkvar	_n @ sp[(-9)+5]
 19618  014D12  0EFC               	movlw	-4
 19619  014D14  006F FF8C  F035    	movff	plusw1,btemp
 19620  014D1A  0EFD               	movlw	-3
 19621  014D1C  006F FF8C  F036    	movff	plusw1,btemp+1
 19622  014D22                     l2683:
 19623                           
 19624                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19625  014D22  0EF5               	movlw	245
 19626  014D24  26E1               	addwf	fsr1l,f,c
 19627  014D26  0EFF               	movlw	255
 19628  014D28  22E2               	addwfc	fsr1h,f,c
 19629  014D2A  0012               	return		;funcret
 19630  014D2C                     __end_of_atoi:
 19631                           	opt callstack 0
 19632                           
 19633 ;; *************** function _isspace *****************
 19634 ;; Defined at:
 19635 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19636 ;; Parameters:    Size  Location     Type
 19637 ;;  c               2  [STACK] int 
 19638 ;; Auto vars:     Size  Location     Type
 19639 ;;		None
 19640 ;; Return value:  Size  Location     Type
 19641 ;;                  2  [STACK] int 
 19642 ;; Registers used:
 19643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19644 ;; Tracked objects:
 19645 ;;		On entry : 0/0
 19646 ;;		On exit  : 0/0
 19647 ;;		Unchanged: 0/0
 19648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19653 ;;Total ram usage:        0 bytes
 19654 ;; Hardware stack levels used:    1
 19655 ;; Hardware stack levels required when called:    6
 19656 ;; This function calls:
 19657 ;;		Nothing
 19658 ;; This function is called by:
 19659 ;;		_atoi
 19660 ;; This function uses a reentrant model
 19661 ;;
 19662                           
 19663                           	psect	text67
 19664  0174EA                     __ptext67:
 19665                           	opt callstack 0
 19666  0174EA                     _isspace:
 19667                           	opt callstack 0
 19668                           
 19669                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19670  0174EA  52E6               	movf	postinc1,f,c
 19671                           
 19672                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19673                           
 19674                           ;incstack = 0
 19675  0174EC  0EFF               	movlw	-1
 19676  0174EE  6AE3               	clrf	plusw1,c
 19677  0174F0  2AE3               	incf	plusw1,f,c
 19678                           
 19679                           ;stkvar	_c @ sp[(-1)+-2]
 19680  0174F2  0EFD               	movlw	-3
 19681  0174F4  006F FF8C  F035    	movff	plusw1,btemp
 19682  0174FA  0E20               	movlw	32
 19683  0174FC  1835               	xorwf	btemp^0,w,c
 19684  0174FE  E104               	bnz	u6080
 19685  017500  0EFE               	movlw	-2
 19686  017502  50E3               	movf	plusw1,w,c
 19687  017504  B4D8               	btfsc	status,2,c
 19688  017506  D012               	goto	l6847
 19689  017508                     u6080:
 19690                           
 19691                           ;stkvar	_c @ sp[(-1)+-2]
 19692  017508  0EFD               	movlw	-3
 19693  01750A  50E3               	movf	plusw1,w,c
 19694  01750C  0FF7               	addlw	247
 19695  01750E  6E3F               	movwf	(btemp+10)^0,c
 19696  017510  0EFE               	movlw	-2
 19697  017512  006F FF8C  F040    	movff	plusw1,btemp+11
 19698  017518  0EFF               	movlw	255
 19699  01751A  2240               	addwfc	(btemp+11)^0,f,c
 19700  01751C  5040               	movf	(btemp+11)^0,w,c
 19701  01751E  E104               	bnz	u6090
 19702  017520  0E05               	movlw	5
 19703  017522  5C3F               	subwf	(btemp+10)^0,w,c
 19704  017524  A0D8               	btfss	status,0,c
 19705  017526  D002               	goto	l6847
 19706  017528                     u6090:
 19707                           
 19708                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19709  017528  0EFF               	movlw	-1
 19710  01752A  6AE3               	clrf	plusw1,c
 19711  01752C                     l6847:
 19712                           
 19713                           ;stkvar	_isspace$4671 @ sp[(-1)+0]
 19714  01752C  0EFF               	movlw	-1
 19715  01752E  50E3               	movf	plusw1,w,c
 19716  017530  6E35               	movwf	btemp^0,c
 19717  017532  6A36               	clrf	(btemp+1)^0,c
 19718                           
 19719                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19720  017534  52E5               	movf	postdec1,f,c
 19721  017536  52E5               	movf	postdec1,f,c
 19722  017538  52E5               	movf	postdec1,f,c
 19723  01753A  0012               	return		;funcret
 19724  01753C                     __end_of_isspace:
 19725                           	opt callstack 0
 19726                           
 19727 ;; *************** function _isdigit *****************
 19728 ;; Defined at:
 19729 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19730 ;; Parameters:    Size  Location     Type
 19731 ;;  c               2  [STACK] int 
 19732 ;; Auto vars:     Size  Location     Type
 19733 ;;		None
 19734 ;; Return value:  Size  Location     Type
 19735 ;;                  2  [STACK] int 
 19736 ;; Registers used:
 19737 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19738 ;; Tracked objects:
 19739 ;;		On entry : 0/0
 19740 ;;		On exit  : 0/0
 19741 ;;		Unchanged: 0/0
 19742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19747 ;;Total ram usage:        0 bytes
 19748 ;; Hardware stack levels used:    1
 19749 ;; Hardware stack levels required when called:    6
 19750 ;; This function calls:
 19751 ;;		Nothing
 19752 ;; This function is called by:
 19753 ;;		_vfpfcnvrt
 19754 ;;		_atoi
 19755 ;; This function uses a reentrant model
 19756 ;;
 19757                           
 19758                           	psect	text68
 19759  017988                     __ptext68:
 19760                           	opt callstack 0
 19761  017988                     _isdigit:
 19762                           	opt callstack 18
 19763                           
 19764                           ;stkvar	_c @ sp[(0)+-2]
 19765                           
 19766                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19767                           ;incstack = 0
 19768  017988  0EFE               	movlw	-2
 19769  01798A  50E3               	movf	plusw1,w,c
 19770  01798C  0FD0               	addlw	208
 19771  01798E  6E3F               	movwf	(btemp+10)^0,c
 19772  017990  0EFF               	movlw	-1
 19773  017992  006F FF8C  F040    	movff	plusw1,btemp+11
 19774  017998  0EFF               	movlw	255
 19775  01799A  2240               	addwfc	(btemp+11)^0,f,c
 19776  01799C  5040               	movf	(btemp+11)^0,w,c
 19777  01799E  E106               	bnz	u5040
 19778  0179A0  0E0A               	movlw	10
 19779  0179A2  5C3F               	subwf	(btemp+10)^0,w,c
 19780  0179A4  B0D8               	btfsc	status,0,c
 19781  0179A6  D002               	goto	u5040
 19782  0179A8  0E01               	movlw	1
 19783  0179AA  D001               	goto	u5050
 19784  0179AC                     u5040:
 19785  0179AC  0E00               	movlw	0
 19786  0179AE                     u5050:
 19787  0179AE  6E35               	movwf	btemp^0,c
 19788  0179B0  6A36               	clrf	(btemp+1)^0,c
 19789                           
 19790                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19791  0179B2  52E5               	movf	postdec1,f,c
 19792  0179B4  52E5               	movf	postdec1,f,c
 19793  0179B6  0012               	return		;funcret
 19794  0179B8                     __end_of_isdigit:
 19795                           	opt callstack 0
 19796                           
 19797 ;; *************** function _set_vterm *****************
 19798 ;; Defined at:
 19799 ;;		line 104 in file "mconfig.c"
 19800 ;; Parameters:    Size  Location     Type
 19801 ;;  vterm           1  [STACK] unsigned char 
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;		None
 19804 ;; Return value:  Size  Location     Type
 19805 ;;                  1  [STACK] unsigned char 
 19806 ;; Registers used:
 19807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 3F/4
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19817 ;;Total ram usage:        0 bytes
 19818 ;; Hardware stack levels used:    1
 19819 ;; Hardware stack levels required when called:    6
 19820 ;; This function calls:
 19821 ;;		Nothing
 19822 ;; This function is called by:
 19823 ;;		_main
 19824 ;;		_check_help
 19825 ;; This function uses a reentrant model
 19826 ;;
 19827                           
 19828                           	psect	text69
 19829  017E8C                     __ptext69:
 19830                           	opt callstack 0
 19831  017E8C                     _set_vterm:
 19832                           	opt callstack 24
 19833                           
 19834                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 19835                           ;stkvar	_vterm @ sp[(0)+-1]
 19836                           
 19837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19838                           ;incstack = 0
 19839  017E8C  0EFF               	movlw	-1
 19840  017E8E  006F FF8C  F040    	movff	plusw1,btemp+11
 19841  017E94  0E03               	movlw	3
 19842  017E96  1640               	andwf	(btemp+11)^0,f,c
 19843  017E98  0104               	movlb	4	; () banked
 19844  017E9A  51D8               	movf	(_D+216)& (0+255),w,b
 19845  017E9C  1840               	xorwf	(btemp+11)^0,w,c
 19846  017E9E  0BFE               	andlw	-2
 19847  017EA0  1840               	xorwf	(btemp+11)^0,w,c
 19848  017EA2  6FD8               	movwf	(_D+216)& (0+255),b
 19849                           
 19850                           ; BSR set to: 4
 19851                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19852  017EA4  52E5               	movf	postdec1,f,c
 19853  017EA6  0012               	return		;funcret
 19854  017EA8                     __end_of_set_vterm:
 19855                           	opt callstack 0
 19856                           
 19857 ;; *************** function _set_temp_display_help *****************
 19858 ;; Defined at:
 19859 ;;		line 208 in file "mconfig.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;  new_response    1  [STACK] const enum E16501
 19862 ;; Auto vars:     Size  Location     Type
 19863 ;;		None
 19864 ;; Return value:  Size  Location     Type
 19865 ;;                  1  [STACK] enum E16501
 19866 ;; Registers used:
 19867 ;;		wreg, fsr1l, fsr1h
 19868 ;; Tracked objects:
 19869 ;;		On entry : 0/4
 19870 ;;		On exit  : 3F/2
 19871 ;;		Unchanged: 0/0
 19872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19877 ;;Total ram usage:        0 bytes
 19878 ;; Hardware stack levels used:    1
 19879 ;; Hardware stack levels required when called:    6
 19880 ;; This function calls:
 19881 ;;		Nothing
 19882 ;; This function is called by:
 19883 ;;		_check_help
 19884 ;; This function uses a reentrant model
 19885 ;;
 19886                           
 19887                           	psect	text70
 19888  017FA6                     __ptext70:
 19889                           	opt callstack 0
 19890  017FA6                     _set_temp_display_help:
 19891                           	opt callstack 23
 19892                           
 19893                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 19894                           
 19895                           ; BSR set to: 4
 19896                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19897                           ;incstack = 0
 19898  017FA6  0102               	movlb	2	; () banked
 19899  017FA8  51B2               	movf	(_V+178)& (0+255),w,b	;volatile
 19900                           
 19901                           ; BSR set to: 2
 19902                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 19903                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19904  017FAA  0EFF               	movlw	-1
 19905  017FAC  006F FF8C  F2B2    	movff	plusw1,_V+178	;volatile
 19906                           
 19907                           ; BSR set to: 2
 19908                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19909  017FB2  52E5               	movf	postdec1,f,c
 19910  017FB4  0012               	return		;funcret
 19911  017FB6                     __end_of_set_temp_display_help:
 19912                           	opt callstack 0
 19913                           
 19914 ;; *************** function _set_display_info *****************
 19915 ;; Defined at:
 19916 ;;		line 197 in file "mconfig.c"
 19917 ;; Parameters:    Size  Location     Type
 19918 ;;  new_response    1  [STACK] const enum E16501
 19919 ;; Auto vars:     Size  Location     Type
 19920 ;;		None
 19921 ;; Return value:  Size  Location     Type
 19922 ;;                  1  [STACK] enum E16986
 19923 ;; Registers used:
 19924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19925 ;; Tracked objects:
 19926 ;;		On entry : 0/4
 19927 ;;		On exit  : 0/0
 19928 ;;		Unchanged: 0/0
 19929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19934 ;;Total ram usage:        0 bytes
 19935 ;; Hardware stack levels used:    1
 19936 ;; Hardware stack levels required when called:    7
 19937 ;; This function calls:
 19938 ;;		_TimerDone
 19939 ;; This function is called by:
 19940 ;;		_main
 19941 ;;		_check_help
 19942 ;; This function uses a reentrant model
 19943 ;;
 19944                           
 19945                           	psect	text71
 19946  017DF8                     __ptext71:
 19947                           	opt callstack 0
 19948  017DF8                     _set_display_info:
 19949                           	opt callstack 23
 19950                           
 19951                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 19952                           
 19953                           ; BSR set to: 2
 19954                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19955                           ;incstack = 0
 19956  017DF8  0E07               	movlw	7
 19957  017DFA  6EE6               	movwf	postinc1,c
 19958  017DFC  EC87  F0BE         	call	_TimerDone	;wreg free
 19959  017E00  5035               	movf	btemp^0,w,c
 19960  017E02  B4D8               	btfsc	status,2,c
 19961  017E04  D006               	goto	l1601
 19962                           
 19963                           ;mconfig.c: 202:   old_info = V.response.info;
 19964  017E06  0102               	movlb	2	; () banked
 19965  017E08  51B1               	movf	(_V+177)& (0+255),w,b	;volatile
 19966                           
 19967                           ; BSR set to: 2
 19968                           ;mconfig.c: 203:   V.response.info = new_response_info;
 19969                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19970  017E0A  0EFF               	movlw	-1
 19971  017E0C  006F FF8C  F2B1    	movff	plusw1,_V+177	;volatile
 19972  017E12                     l1601:
 19973                           
 19974                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19975  017E12  52E5               	movf	postdec1,f,c
 19976  017E14  0012               	return		;funcret
 19977  017E16                     __end_of_set_display_info:
 19978                           	opt callstack 0
 19979                           
 19980 ;; *************** function _mode_lamp_dim *****************
 19981 ;; Defined at:
 19982 ;;		line 13 in file "mconfig.c"
 19983 ;; Parameters:    Size  Location     Type
 19984 ;;  level           2  [STACK] const unsigned short 
 19985 ;; Auto vars:     Size  Location     Type
 19986 ;;		None
 19987 ;; Return value:  Size  Location     Type
 19988 ;;                  1  [STACK] void 
 19989 ;; Registers used:
 19990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19991 ;; Tracked objects:
 19992 ;;		On entry : 0/2
 19993 ;;		On exit  : 0/0
 19994 ;;		Unchanged: 0/0
 19995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20000 ;;Total ram usage:        0 bytes
 20001 ;; Hardware stack levels used:    1
 20002 ;; Hardware stack levels required when called:    7
 20003 ;; This function calls:
 20004 ;;		_PWM8_LoadDutyValue
 20005 ;; This function is called by:
 20006 ;;		_main
 20007 ;;		_check_help
 20008 ;; This function uses a reentrant model
 20009 ;;
 20010                           
 20011                           	psect	text72
 20012  017EF6                     __ptext72:
 20013                           	opt callstack 0
 20014  017EF6                     _mode_lamp_dim:
 20015                           	opt callstack 23
 20016                           
 20017                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20018                           ;stkvar	_level @ sp[(0)+-2]
 20019                           
 20020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20021                           ;incstack = 0
 20022  017EF6  0EFE               	movlw	-2
 20023  017EF8  006F FF8F FFE6     	movff	plusw1,postinc1
 20024  017EFE  006F FF8F FFE6     	movff	plusw1,postinc1
 20025  017F04  EC93  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 20026                           
 20027                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20028  017F08  52E5               	movf	postdec1,f,c
 20029  017F0A  52E5               	movf	postdec1,f,c
 20030  017F0C  0012               	return		;funcret
 20031  017F0E                     __end_of_mode_lamp_dim:
 20032                           	opt callstack 0
 20033                           
 20034 ;; *************** function _mode_lamp_bright *****************
 20035 ;; Defined at:
 20036 ;;		line 18 in file "mconfig.c"
 20037 ;; Parameters:    Size  Location     Type
 20038 ;;		None
 20039 ;; Auto vars:     Size  Location     Type
 20040 ;;		None
 20041 ;; Return value:  Size  Location     Type
 20042 ;;                  1  [STACK] void 
 20043 ;; Registers used:
 20044 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20045 ;; Tracked objects:
 20046 ;;		On entry : 0/2
 20047 ;;		On exit  : 0/0
 20048 ;;		Unchanged: 0/0
 20049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20054 ;;Total ram usage:        0 bytes
 20055 ;; Hardware stack levels used:    1
 20056 ;; Hardware stack levels required when called:    7
 20057 ;; This function calls:
 20058 ;;		_PWM8_LoadDutyValue
 20059 ;; This function is called by:
 20060 ;;		_check_help
 20061 ;; This function uses a reentrant model
 20062 ;;
 20063                           
 20064                           	psect	text73
 20065  017FC4                     __ptext73:
 20066                           	opt callstack 0
 20067  017FC4                     _mode_lamp_bright:
 20068                           	opt callstack 22
 20069                           
 20070                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20071                           
 20072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20073                           ;incstack = 0
 20074  017FC4  0E2C               	movlw	44
 20075  017FC6  6EE6               	movwf	postinc1,c
 20076  017FC8  0E01               	movlw	1
 20077  017FCA  6EE6               	movwf	postinc1,c
 20078  017FCC  EC93  F0BB         	call	_PWM8_LoadDutyValue	;wreg free
 20079                           
 20080                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20081  017FD0  0012               	return		;funcret
 20082  017FD2                     __end_of_mode_lamp_bright:
 20083                           	opt callstack 0
 20084                           
 20085 ;; *************** function _PWM8_LoadDutyValue *****************
 20086 ;; Defined at:
 20087 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20088 ;; Parameters:    Size  Location     Type
 20089 ;;  dutyValue       2  [STACK] unsigned short 
 20090 ;; Auto vars:     Size  Location     Type
 20091 ;;		None
 20092 ;; Return value:  Size  Location     Type
 20093 ;;                  1  [STACK] void 
 20094 ;; Registers used:
 20095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20096 ;; Tracked objects:
 20097 ;;		On entry : 0/2
 20098 ;;		On exit  : 0/0
 20099 ;;		Unchanged: 0/0
 20100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20105 ;;Total ram usage:        0 bytes
 20106 ;; Hardware stack levels used:    1
 20107 ;; Hardware stack levels required when called:    6
 20108 ;; This function calls:
 20109 ;;		Nothing
 20110 ;; This function is called by:
 20111 ;;		_mode_lamp_dim
 20112 ;;		_mode_lamp_bright
 20113 ;; This function uses a reentrant model
 20114 ;;
 20115                           
 20116                           	psect	text74
 20117  017726                     __ptext74:
 20118                           	opt callstack 0
 20119  017726                     _PWM8_LoadDutyValue:
 20120                           	opt callstack 23
 20121                           
 20122                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20123                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20124                           
 20125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20126                           ;incstack = 0
 20127  017726  0EFE               	movlw	-2
 20128  017728  006F FF8C  F03F    	movff	plusw1,btemp+10
 20129  01772E  0EFF               	movlw	-1
 20130  017730  006F FF8C  F040    	movff	plusw1,btemp+11
 20131  017736  90D8               	bcf	status,0,c
 20132  017738  3240               	rrcf	(btemp+11)^0,f,c
 20133  01773A  323F               	rrcf	(btemp+10)^0,f,c
 20134  01773C  90D8               	bcf	status,0,c
 20135  01773E  3240               	rrcf	(btemp+11)^0,f,c
 20136  017740  323F               	rrcf	(btemp+10)^0,f,c
 20137  017742  503F               	movf	(btemp+10)^0,w,c
 20138  017744  6E61               	movwf	97,c	;volatile
 20139                           
 20140                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20141                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20142  017746  0EFE               	movlw	-2
 20143  017748  006F FF8C  F040    	movff	plusw1,btemp+11
 20144  01774E  0E03               	movlw	3
 20145  017750  1640               	andwf	(btemp+11)^0,f,c
 20146  017752  0E06               	movlw	6
 20147  017754  6E35               	movwf	btemp^0,c
 20148  017756                     u7575:
 20149  017756  90D8               	bcf	status,0,c
 20150  017758  3640               	rlcf	(btemp+11)^0,f,c
 20151  01775A  2E35               	decfsz	btemp^0,f,c
 20152  01775C  D7FC               	goto	u7575
 20153  01775E  5040               	movf	(btemp+11)^0,w,c
 20154  017760  6E60               	movwf	96,c	;volatile
 20155                           
 20156                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20157  017762  52E5               	movf	postdec1,f,c
 20158  017764  52E5               	movf	postdec1,f,c
 20159  017766  0012               	return		;funcret
 20160  017768                     __end_of_PWM8_LoadDutyValue:
 20161                           	opt callstack 0
 20162                           
 20163 ;; *************** function _help_button *****************
 20164 ;; Defined at:
 20165 ;;		line 26 in file "mconfig.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;		None
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;		None
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  1  [STACK] _Bool 
 20172 ;; Registers used:
 20173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/2
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20183 ;;Total ram usage:        0 bytes
 20184 ;; Hardware stack levels used:    1
 20185 ;; Hardware stack levels required when called:    7
 20186 ;; This function calls:
 20187 ;;		_StartTimer
 20188 ;;		_TimerDone
 20189 ;; This function is called by:
 20190 ;;		_check_help
 20191 ;; This function uses a reentrant model
 20192 ;;
 20193                           
 20194                           	psect	text75
 20195  0177E4                     __ptext75:
 20196                           	opt callstack 0
 20197  0177E4                     _help_button:
 20198                           	opt callstack 22
 20199                           
 20200                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20201                           
 20202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20203                           ;incstack = 0
 20204  0177E4  B0CB               	btfsc	203,0,c	;volatile
 20205  0177E6  D00C               	goto	l1544
 20206                           
 20207                           ;mconfig.c: 29:   V.help = 1;
 20208  0177E8  0102               	movlb	2	; () banked
 20209  0177EA  8DA8               	bsf	(_V+168)& (0+255),6,b	;volatile
 20210                           
 20211                           ; BSR set to: 2
 20212                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20213  0177EC  0E08               	movlw	8
 20214  0177EE  6EE6               	movwf	postinc1,c
 20215  0177F0  EC87  F0BE         	call	_TimerDone	;wreg free
 20216  0177F4  5035               	movf	btemp^0,w,c
 20217  0177F6  B4D8               	btfsc	status,2,c
 20218  0177F8  D003               	goto	l1544
 20219                           
 20220                           ;mconfig.c: 31:    return 1;
 20221  0177FA  0E01               	movlw	1
 20222  0177FC  6E35               	movwf	btemp^0,c
 20223  0177FE  0012               	return	
 20224  017800                     l1544:
 20225                           
 20226                           ;mconfig.c: 34:  if (!V.help)
 20227  017800  0102               	movlb	2	; () banked
 20228  017802  BDA8               	btfsc	(_V+168)& (0+255),6,b	;volatile
 20229  017804  D008               	goto	l8229
 20230                           
 20231                           ; BSR set to: 2
 20232                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20233  017806  0E2C               	movlw	44
 20234  017808  6EE6               	movwf	postinc1,c
 20235  01780A  0E01               	movlw	1
 20236  01780C  6EE6               	movwf	postinc1,c
 20237  01780E  0E08               	movlw	8
 20238  017810  6EE6               	movwf	postinc1,c
 20239  017812  ECD4  F0BB         	call	_StartTimer	;wreg free
 20240  017816                     l8229:
 20241                           
 20242                           ;mconfig.c: 37:  return 0;
 20243  017816  0E00               	movlw	0
 20244  017818  6E35               	movwf	btemp^0,c
 20245                           
 20246                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20247  01781A  0012               	return		;funcret
 20248  01781C                     __end_of_help_button:
 20249                           	opt callstack 0
 20250                           
 20251 ;; *************** function _TimerDone *****************
 20252 ;; Defined at:
 20253 ;;		line 20 in file "timers.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;  timer           1  [STACK] const unsigned char 
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;		None
 20258 ;; Return value:  Size  Location     Type
 20259 ;;                  1  [STACK] _Bool 
 20260 ;; Registers used:
 20261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20262 ;; Tracked objects:
 20263 ;;		On entry : 0/4
 20264 ;;		On exit  : 0/0
 20265 ;;		Unchanged: 0/0
 20266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20271 ;;Total ram usage:        0 bytes
 20272 ;; Hardware stack levels used:    1
 20273 ;; Hardware stack levels required when called:    6
 20274 ;; This function calls:
 20275 ;;		Nothing
 20276 ;; This function is called by:
 20277 ;;		_main
 20278 ;;		_WaitMs
 20279 ;;		_help_button
 20280 ;;		_check_help
 20281 ;;		_set_display_info
 20282 ;; This function uses a reentrant model
 20283 ;;
 20284                           
 20285                           	psect	text76
 20286  017D0E                     __ptext76:
 20287                           	opt callstack 0
 20288  017D0E                     _TimerDone:
 20289                           	opt callstack 23
 20290                           
 20291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20292                           ;incstack = 0
 20293  017D0E  0004               	clrwdt		;# 
 20294                           
 20295                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20296                           ;stkvar	_timer @ sp[(0)+-1]
 20297  017D10  0EFF               	movlw	-1
 20298  017D12  50E3               	movf	plusw1,w,c
 20299  017D14  0D02               	mullw	2
 20300  017D16  50F3               	movf	243,w,c
 20301  017D18  0F82               	addlw	low _tickCount
 20302  017D1A  6ED9               	movwf	fsr2l,c
 20303  017D1C  6ADA               	clrf	fsr2h,c
 20304  017D1E  50DE               	movf	postinc2,w,c
 20305  017D20  10DE               	iorwf	postinc2,w,c
 20306  017D22  A4D8               	btfss	status,2,c
 20307  017D24  D002               	goto	l7683
 20308                           
 20309                           ;timers.c: 24:   return 1;
 20310  017D26  0E01               	movlw	1
 20311  017D28  D001               	goto	L18
 20312  017D2A                     l7683:
 20313                           
 20314                           ;timers.c: 26:  return 0;
 20315  017D2A  0E00               	movlw	0
 20316  017D2C                     L18:
 20317  017D2C  6E35               	movwf	btemp^0,c
 20318                           
 20319                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20320  017D2E  52E5               	movf	postdec1,f,c
 20321  017D30  0012               	return		;funcret
 20322  017D32                     __end_of_TimerDone:
 20323                           	opt callstack 0
 20324                           
 20325 ;; *************** function _StartTimer *****************
 20326 ;; Defined at:
 20327 ;;		line 12 in file "timers.c"
 20328 ;; Parameters:    Size  Location     Type
 20329 ;;  timer           1  [STACK] const unsigned char 
 20330 ;;  count           2  [STACK] const unsigned short 
 20331 ;; Auto vars:     Size  Location     Type
 20332 ;;		None
 20333 ;; Return value:  Size  Location     Type
 20334 ;;                  1  [STACK] void 
 20335 ;; Registers used:
 20336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20337 ;; Tracked objects:
 20338 ;;		On entry : 0/4
 20339 ;;		On exit  : 0/0
 20340 ;;		Unchanged: 0/0
 20341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20346 ;;Total ram usage:        0 bytes
 20347 ;; Hardware stack levels used:    1
 20348 ;; Hardware stack levels required when called:    6
 20349 ;; This function calls:
 20350 ;;		Nothing
 20351 ;; This function is called by:
 20352 ;;		_main
 20353 ;;		_WaitMs
 20354 ;;		_help_button
 20355 ;;		_check_help
 20356 ;; This function uses a reentrant model
 20357 ;;
 20358                           
 20359                           	psect	text77
 20360  0177A8                     __ptext77:
 20361                           	opt callstack 0
 20362  0177A8                     _StartTimer:
 20363                           	opt callstack 21
 20364                           
 20365                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 20366                           ;stkvar	_count @ sp[(0)+-3]
 20367                           
 20368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20369                           ;incstack = 0
 20370  0177A8  0EFD               	movlw	-3
 20371  0177AA  006F FF8C  F03F    	movff	plusw1,btemp+10
 20372  0177B0  0EFE               	movlw	-2
 20373  0177B2  006F FF8C  F040    	movff	plusw1,btemp+11
 20374  0177B8  90D8               	bcf	status,0,c
 20375  0177BA  343F               	rlcf	(btemp+10)^0,w,c
 20376  0177BC  6E3D               	movwf	(btemp+8)^0,c
 20377  0177BE  3440               	rlcf	(btemp+11)^0,w,c
 20378  0177C0  6E3E               	movwf	(btemp+9)^0,c
 20379                           
 20380                           ;stkvar	_timer @ sp[(0)+-1]
 20381  0177C2  0EFF               	movlw	-1
 20382  0177C4  50E3               	movf	plusw1,w,c
 20383  0177C6  0D02               	mullw	2
 20384  0177C8  50F3               	movf	243,w,c
 20385  0177CA  0F82               	addlw	low _tickCount
 20386  0177CC  6ED9               	movwf	fsr2l,c
 20387  0177CE  6ADA               	clrf	fsr2h,c
 20388  0177D0  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 20389  0177D6  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 20390                           
 20391                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20392  0177DC  52E5               	movf	postdec1,f,c
 20393  0177DE  52E5               	movf	postdec1,f,c
 20394  0177E0  52E5               	movf	postdec1,f,c
 20395  0177E2  0012               	return		;funcret
 20396  0177E4                     __end_of_StartTimer:
 20397                           	opt callstack 0
 20398                           
 20399 ;; *************** function _display_info *****************
 20400 ;; Defined at:
 20401 ;;		line 187 in file "mconfig.c"
 20402 ;; Parameters:    Size  Location     Type
 20403 ;;		None
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1  [STACK] enum E16501
 20408 ;; Registers used:
 20409 ;;		btemp
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/2
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20419 ;;Total ram usage:        0 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:    6
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;;		_check_help
 20426 ;; This function uses a reentrant model
 20427 ;;
 20428                           
 20429                           	psect	text78
 20430  01802E                     __ptext78:
 20431                           	opt callstack 0
 20432  01802E                     _display_info:
 20433                           	opt callstack 23
 20434                           
 20435                           ;mconfig.c: 189:  return V.response.info;
 20436                           
 20437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20438                           ;incstack = 0
 20439  01802E  0060  FAC4  F035   	movff	_V+177,btemp	;volatile
 20440                           
 20441                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20442  018034  0012               	return		;funcret
 20443  018036                     __end_of_display_info:
 20444                           	opt callstack 0
 20445                           
 20446 ;; *************** function _display_help *****************
 20447 ;; Defined at:
 20448 ;;		line 192 in file "mconfig.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;		None
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  1  [STACK] enum E16501
 20455 ;; Registers used:
 20456 ;;		btemp
 20457 ;; Tracked objects:
 20458 ;;		On entry : 3F/2
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    6
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_check_help
 20473 ;; This function uses a reentrant model
 20474 ;;
 20475                           
 20476                           	psect	text79
 20477  018036                     __ptext79:
 20478                           	opt callstack 0
 20479  018036                     _display_help:
 20480                           	opt callstack 23
 20481                           
 20482                           ;mconfig.c: 194:  return V.response.help_temp;
 20483                           
 20484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20485                           ;incstack = 0
 20486  018036  0060  FAC8  F035   	movff	_V+178,btemp	;volatile
 20487                           
 20488                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20489  01803C  0012               	return		;funcret
 20490  01803E                     __end_of_display_help:
 20491                           	opt callstack 0
 20492                           
 20493 ;; *************** function _check_adc_scan *****************
 20494 ;; Defined at:
 20495 ;;		line 47 in file "daq.c"
 20496 ;; Parameters:    Size  Location     Type
 20497 ;;		None
 20498 ;; Auto vars:     Size  Location     Type
 20499 ;;		None
 20500 ;; Return value:  Size  Location     Type
 20501 ;;                  1  [STACK] _Bool 
 20502 ;; Registers used:
 20503 ;;		btemp
 20504 ;; Tracked objects:
 20505 ;;		On entry : 0/4
 20506 ;;		On exit  : 0/0
 20507 ;;		Unchanged: 0/0
 20508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20513 ;;Total ram usage:        0 bytes
 20514 ;; Hardware stack levels used:    1
 20515 ;; Hardware stack levels required when called:    6
 20516 ;; This function calls:
 20517 ;;		Nothing
 20518 ;; This function is called by:
 20519 ;;		_main
 20520 ;; This function uses a reentrant model
 20521 ;;
 20522                           
 20523                           	psect	text80
 20524  01803E                     __ptext80:
 20525                           	opt callstack 0
 20526  01803E                     _check_adc_scan:
 20527                           	opt callstack 24
 20528                           
 20529                           ;daq.c: 49:  return R.done;
 20530                           
 20531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20532                           ;incstack = 0
 20533  01803E  0060  F204  F035   	movff	_R+33,btemp	;volatile
 20534                           
 20535                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20536  018044  0012               	return		;funcret
 20537  018046                     __end_of_check_adc_scan:
 20538                           	opt callstack 0
 20539                           
 20540 ;; *************** function _SYSTEM_Initialize *****************
 20541 ;; Defined at:
 20542 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20543 ;; Parameters:    Size  Location     Type
 20544 ;;		None
 20545 ;; Auto vars:     Size  Location     Type
 20546 ;;		None
 20547 ;; Return value:  Size  Location     Type
 20548 ;;                  1  [STACK] void 
 20549 ;; Registers used:
 20550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 20551 ;; Tracked objects:
 20552 ;;		On entry : 0/0
 20553 ;;		On exit  : 3F/3C
 20554 ;;		Unchanged: 0/0
 20555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20560 ;;Total ram usage:        0 bytes
 20561 ;; Hardware stack levels used:    1
 20562 ;; Hardware stack levels required when called:    8
 20563 ;; This function calls:
 20564 ;;		_ADCC_Initialize
 20565 ;;		_CLKREF_Initialize
 20566 ;;		_DMA1_Initialize
 20567 ;;		_DMA2_Initialize
 20568 ;;		_EXT_INT_Initialize
 20569 ;;		_FVR_Initialize
 20570 ;;		_INTERRUPT_Initialize
 20571 ;;		_OSCILLATOR_Initialize
 20572 ;;		_PIN_MANAGER_Initialize
 20573 ;;		_PMD_Initialize
 20574 ;;		_PWM8_Initialize
 20575 ;;		_SPI1_Initialize
 20576 ;;		_TMR2_Initialize
 20577 ;;		_TMR5_Initialize
 20578 ;;		_TMR6_Initialize
 20579 ;;		_UART1_Initialize
 20580 ;;		_UART2_Initialize
 20581 ;; This function is called by:
 20582 ;;		_main
 20583 ;; This function uses a reentrant model
 20584 ;;
 20585                           
 20586                           	psect	text81
 20587  017610                     __ptext81:
 20588                           	opt callstack 0
 20589  017610                     _SYSTEM_Initialize:
 20590                           	opt callstack 22
 20591                           
 20592                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 20593                           
 20594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20595                           ;incstack = 0
 20596  017610  ECCC  F0B8         	call	_INTERRUPT_Initialize	;wreg free
 20597                           
 20598                           ; BSR set to: 57
 20599                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 20600  017614  ECC0  F0BF         	call	_PMD_Initialize	;wreg free
 20601                           
 20602                           ; BSR set to: 57
 20603                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20604  017618  EC1F  F0B7         	call	_PIN_MANAGER_Initialize	;wreg free
 20605                           
 20606                           ; BSR set to: 58
 20607                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20608  01761C  ECB5  F0BF         	call	_OSCILLATOR_Initialize	;wreg free
 20609                           
 20610                           ; BSR set to: 57
 20611                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 20612  017620  EC23  F0C0         	call	_FVR_Initialize	;wreg free
 20613                           
 20614                           ; BSR set to: 62
 20615                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 20616  017624  EC64  F0B8         	call	_ADCC_Initialize	;wreg free
 20617                           
 20618                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 20619  017628  ECAA  F0BF         	call	_PWM8_Initialize	;wreg free
 20620                           
 20621                           ; BSR set to: 63
 20622                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 20623  01762C  EC87  F0BF         	call	_TMR2_Initialize	;wreg free
 20624                           
 20625                           ; BSR set to: 57
 20626                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 20627  017630  EC7A  F0BC         	call	_EXT_INT_Initialize	;wreg free
 20628                           
 20629                           ; BSR set to: 57
 20630                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 20631  017634  EC1F  F0BD         	call	_TMR6_Initialize	;wreg free
 20632                           
 20633                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 20634  017638  EC2B  F0BB         	call	_TMR5_Initialize	;wreg free
 20635                           
 20636                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 20637  01763C  EC31  F0B9         	call	_UART1_Initialize	;wreg free
 20638                           
 20639                           ; BSR set to: 57
 20640                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 20641  017640  EC94  F0B9         	call	_UART2_Initialize	;wreg free
 20642                           
 20643                           ; BSR set to: 57
 20644                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 20645  017644  EC9F  F0BF         	call	_SPI1_Initialize	;wreg free
 20646                           
 20647                           ; BSR set to: 61
 20648                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 20649  017648  EC1F  F0BA         	call	_DMA2_Initialize	;wreg free
 20650                           
 20651                           ; BSR set to: 59
 20652                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 20653  01764C  EC2F  F0B8         	call	_DMA1_Initialize	;wreg free
 20654                           
 20655                           ; BSR set to: 59
 20656                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 20657  017650  EC01  F0C0         	call	_CLKREF_Initialize	;wreg free
 20658                           
 20659                           ; BSR set to: 60
 20660                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20661  017654  0012               	return		;funcret
 20662  017656                     __end_of_SYSTEM_Initialize:
 20663                           	opt callstack 0
 20664                           
 20665 ;; *************** function _UART2_Initialize *****************
 20666 ;; Defined at:
 20667 ;;		line 78 in file "mcc_generated_files/uart2.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;		None
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;		None
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  1  [STACK] void 
 20674 ;; Registers used:
 20675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20676 ;; Tracked objects:
 20677 ;;		On entry : 3F/39
 20678 ;;		On exit  : 3F/39
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20685 ;;Total ram usage:        0 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    7
 20688 ;; This function calls:
 20689 ;;		_UART2_SetRxInterruptHandler
 20690 ;;		_UART2_SetTxInterruptHandler
 20691 ;; This function is called by:
 20692 ;;		_SYSTEM_Initialize
 20693 ;; This function uses a reentrant model
 20694 ;;
 20695                           
 20696                           	psect	text82
 20697  017328                     __ptext82:
 20698                           	opt callstack 0
 20699  017328                     _UART2_Initialize:
 20700                           	opt callstack 22
 20701                           
 20702                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 20703                           
 20704                           ; BSR set to: 60
 20705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20706                           ;incstack = 0
 20707  017328  0139               	movlb	57	; () banked
 20708  01732A  9596               	bcf	150,2,b	;volatile
 20709                           
 20710                           ; BSR set to: 57
 20711                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 20712  01732C  0E52               	movlw	low _UART2_Receive_ISR
 20713  01732E  6EE6               	movwf	postinc1,c
 20714  017330  0E7E               	movlw	high _UART2_Receive_ISR
 20715  017332  6EE6               	movwf	postinc1,c
 20716  017334  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 20717  017336  6EE6               	movwf	postinc1,c
 20718  017338  EC84  F0BD         	call	_UART2_SetRxInterruptHandler	;wreg free
 20719                           
 20720                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 20721  01733C  0139               	movlb	57	; () banked
 20722  01733E  9796               	bcf	150,3,b	;volatile
 20723                           
 20724                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 20725  017340  0E12               	movlw	low _UART2_Transmit_ISR
 20726  017342  6EE6               	movwf	postinc1,c
 20727  017344  0E7A               	movlw	high _UART2_Transmit_ISR
 20728  017346  6EE6               	movwf	postinc1,c
 20729  017348  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 20730  01734A  6EE6               	movwf	postinc1,c
 20731  01734C  EC70  F0BD         	call	_UART2_SetTxInterruptHandler	;wreg free
 20732                           
 20733                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 20734  017350  013D               	movlb	61	; () banked
 20735  017352  6BD4               	clrf	212,b	;volatile
 20736                           
 20737                           ; BSR set to: 61
 20738                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 20739  017354  6BD6               	clrf	214,b	;volatile
 20740                           
 20741                           ; BSR set to: 61
 20742                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 20743  017356  6BD8               	clrf	216,b	;volatile
 20744                           
 20745                           ; BSR set to: 61
 20746                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 20747  017358  0EB0               	movlw	176
 20748  01735A  6FDA               	movwf	218,b	;volatile
 20749                           
 20750                           ; BSR set to: 61
 20751                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 20752  01735C  0E80               	movlw	128
 20753  01735E  6FDB               	movwf	219,b	;volatile
 20754                           
 20755                           ; BSR set to: 61
 20756                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 20757  017360  6BDC               	clrf	220,b	;volatile
 20758                           
 20759                           ; BSR set to: 61
 20760                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 20761  017362  0E82               	movlw	130
 20762  017364  6FDD               	movwf	221,b	;volatile
 20763                           
 20764                           ; BSR set to: 61
 20765                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 20766  017366  0E06               	movlw	6
 20767  017368  6FDE               	movwf	222,b	;volatile
 20768                           
 20769                           ; BSR set to: 61
 20770                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 20771  01736A  6BDF               	clrf	223,b	;volatile
 20772                           
 20773                           ; BSR set to: 61
 20774                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 20775  01736C  6BE0               	clrf	224,b	;volatile
 20776                           
 20777                           ; BSR set to: 61
 20778                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 20779  01736E  6BE1               	clrf	225,b	;volatile
 20780                           
 20781                           ; BSR set to: 61
 20782                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 20783  017370  6BE2               	clrf	226,b	;volatile
 20784                           
 20785                           ; BSR set to: 61
 20786                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 20787  017372  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 20788                           
 20789                           ; BSR set to: 61
 20790                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 20791  017374  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 20792                           
 20793                           ; BSR set to: 61
 20794                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 20795  017376  0E40               	movlw	64
 20796  017378  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 20797                           
 20798                           ; BSR set to: 61
 20799                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 20800  01737A  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 20801                           
 20802                           ; BSR set to: 61
 20803                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 20804  01737C  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 20805                           
 20806                           ; BSR set to: 61
 20807                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 20808  01737E  6A29               	clrf	_uart2RxCount^0,c	;volatile
 20809                           
 20810                           ; BSR set to: 61
 20811                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 20812  017380  0139               	movlb	57	; () banked
 20813  017382  8596               	bsf	150,2,b	;volatile
 20814                           
 20815                           ; BSR set to: 57
 20816                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20817  017384  0012               	return		;funcret
 20818  017386                     __end_of_UART2_Initialize:
 20819                           	opt callstack 0
 20820                           
 20821 ;; *************** function _UART2_SetTxInterruptHandler *****************
 20822 ;; Defined at:
 20823 ;;		line 252 in file "mcc_generated_files/uart2.c"
 20824 ;; Parameters:    Size  Location     Type
 20825 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20826 ;;		 -> UART2_Transmit_ISR(1), 
 20827 ;; Auto vars:     Size  Location     Type
 20828 ;;		None
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  1  [STACK] void 
 20831 ;; Registers used:
 20832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20833 ;; Tracked objects:
 20834 ;;		On entry : 3F/39
 20835 ;;		On exit  : 0/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20842 ;;Total ram usage:        0 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; Hardware stack levels required when called:    6
 20845 ;; This function calls:
 20846 ;;		Nothing
 20847 ;; This function is called by:
 20848 ;;		_UART2_Initialize
 20849 ;; This function uses a reentrant model
 20850 ;;
 20851                           
 20852                           	psect	text83
 20853  017AE0                     __ptext83:
 20854                           	opt callstack 0
 20855  017AE0                     _UART2_SetTxInterruptHandler:
 20856                           	opt callstack 22
 20857                           
 20858                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 20859                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20860                           
 20861                           ; BSR set to: 57
 20862                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20863                           ;incstack = 0
 20864  017AE0  50E1               	movf	fsr1l,w,c
 20865  017AE2  0FFD               	addlw	-3
 20866  017AE4  6ED9               	movwf	fsr2l,c
 20867  017AE6  50E2               	movf	fsr1h,w,c
 20868  017AE8  6EDA               	movwf	fsr2h,c
 20869  017AEA  0EFF               	movlw	255
 20870  017AEC  22DA               	addwfc	fsr2h,f,c
 20871  017AEE  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 20872  017AF4  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 20873  017AFA  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 20874                           
 20875                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20876  017B00  52E5               	movf	postdec1,f,c
 20877  017B02  52E5               	movf	postdec1,f,c
 20878  017B04  52E5               	movf	postdec1,f,c
 20879  017B06  0012               	return		;funcret
 20880  017B08                     __end_of_UART2_SetTxInterruptHandler:
 20881                           	opt callstack 0
 20882                           
 20883 ;; *************** function _UART2_SetRxInterruptHandler *****************
 20884 ;; Defined at:
 20885 ;;		line 248 in file "mcc_generated_files/uart2.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 20888 ;;		 -> UART2_Receive_ISR(1), 
 20889 ;; Auto vars:     Size  Location     Type
 20890 ;;		None
 20891 ;; Return value:  Size  Location     Type
 20892 ;;                  1  [STACK] void 
 20893 ;; Registers used:
 20894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 20895 ;; Tracked objects:
 20896 ;;		On entry : 3F/39
 20897 ;;		On exit  : 0/0
 20898 ;;		Unchanged: 0/0
 20899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20904 ;;Total ram usage:        0 bytes
 20905 ;; Hardware stack levels used:    1
 20906 ;; Hardware stack levels required when called:    6
 20907 ;; This function calls:
 20908 ;;		Nothing
 20909 ;; This function is called by:
 20910 ;;		_UART2_Initialize
 20911 ;; This function uses a reentrant model
 20912 ;;
 20913                           
 20914                           	psect	text84
 20915  017B08                     __ptext84:
 20916                           	opt callstack 0
 20917  017B08                     _UART2_SetRxInterruptHandler:
 20918                           	opt callstack 22
 20919                           
 20920                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 20921                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 20922                           
 20923                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20924                           ;incstack = 0
 20925  017B08  50E1               	movf	fsr1l,w,c
 20926  017B0A  0FFD               	addlw	-3
 20927  017B0C  6ED9               	movwf	fsr2l,c
 20928  017B0E  50E2               	movf	fsr1h,w,c
 20929  017B10  6EDA               	movwf	fsr2h,c
 20930  017B12  0EFF               	movlw	255
 20931  017B14  22DA               	addwfc	fsr2h,f,c
 20932  017B16  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 20933  017B1C  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 20934  017B22  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 20935                           
 20936                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 20937  017B28  52E5               	movf	postdec1,f,c
 20938  017B2A  52E5               	movf	postdec1,f,c
 20939  017B2C  52E5               	movf	postdec1,f,c
 20940  017B2E  0012               	return		;funcret
 20941  017B30                     __end_of_UART2_SetRxInterruptHandler:
 20942                           	opt callstack 0
 20943                           
 20944 ;; *************** function _UART1_Initialize *****************
 20945 ;; Defined at:
 20946 ;;		line 79 in file "mcc_generated_files/uart1.c"
 20947 ;; Parameters:    Size  Location     Type
 20948 ;;		None
 20949 ;; Auto vars:     Size  Location     Type
 20950 ;;		None
 20951 ;; Return value:  Size  Location     Type
 20952 ;;                  1  [STACK] void 
 20953 ;; Registers used:
 20954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 20955 ;; Tracked objects:
 20956 ;;		On entry : 0/39
 20957 ;;		On exit  : 3F/39
 20958 ;;		Unchanged: 0/0
 20959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20964 ;;Total ram usage:        0 bytes
 20965 ;; Hardware stack levels used:    1
 20966 ;; Hardware stack levels required when called:    7
 20967 ;; This function calls:
 20968 ;;		_UART1_SetRxInterruptHandler
 20969 ;;		_UART1_SetTxInterruptHandler
 20970 ;; This function is called by:
 20971 ;;		_SYSTEM_Initialize
 20972 ;; This function uses a reentrant model
 20973 ;;
 20974                           
 20975                           	psect	text85
 20976  017262                     __ptext85:
 20977                           	opt callstack 0
 20978  017262                     _UART1_Initialize:
 20979                           	opt callstack 22
 20980                           
 20981                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 20982                           
 20983                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20984                           ;incstack = 0
 20985  017262  0139               	movlb	57	; () banked
 20986  017264  9793               	bcf	147,3,b	;volatile
 20987                           
 20988                           ; BSR set to: 57
 20989                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 20990  017266  0E34               	movlw	low _UART1_Receive_ISR
 20991  017268  6EE6               	movwf	postinc1,c
 20992  01726A  0E7E               	movlw	high _UART1_Receive_ISR
 20993  01726C  6EE6               	movwf	postinc1,c
 20994  01726E  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 20995  017270  6EE6               	movwf	postinc1,c
 20996  017272  ECAC  F0BD         	call	_UART1_SetRxInterruptHandler	;wreg free
 20997                           
 20998                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 20999  017276  0139               	movlb	57	; () banked
 21000  017278  9993               	bcf	147,4,b	;volatile
 21001                           
 21002                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21003  01727A  0EE6               	movlw	low _UART1_Transmit_ISR
 21004  01727C  6EE6               	movwf	postinc1,c
 21005  01727E  0E79               	movlw	high _UART1_Transmit_ISR
 21006  017280  6EE6               	movwf	postinc1,c
 21007  017282  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21008  017284  6EE6               	movwf	postinc1,c
 21009  017286  EC98  F0BD         	call	_UART1_SetTxInterruptHandler	;wreg free
 21010                           
 21011                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21012  01728A  013D               	movlb	61	; () banked
 21013  01728C  6BEC               	clrf	236,b	;volatile
 21014                           
 21015                           ; BSR set to: 61
 21016                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 21017  01728E  6BED               	clrf	237,b	;volatile
 21018                           
 21019                           ; BSR set to: 61
 21020                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 21021  017290  6BEE               	clrf	238,b	;volatile
 21022                           
 21023                           ; BSR set to: 61
 21024                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 21025  017292  6BEF               	clrf	239,b	;volatile
 21026                           
 21027                           ; BSR set to: 61
 21028                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 21029  017294  6BF0               	clrf	240,b	;volatile
 21030                           
 21031                           ; BSR set to: 61
 21032                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 21033  017296  6BF1               	clrf	241,b	;volatile
 21034                           
 21035                           ; BSR set to: 61
 21036                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 21037  017298  0EB0               	movlw	176
 21038  01729A  6FF2               	movwf	242,b	;volatile
 21039                           
 21040                           ; BSR set to: 61
 21041                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 21042  01729C  0E80               	movlw	128
 21043  01729E  6FF3               	movwf	243,b	;volatile
 21044                           
 21045                           ; BSR set to: 61
 21046                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 21047  0172A0  6BF4               	clrf	244,b	;volatile
 21048                           
 21049                           ; BSR set to: 61
 21050                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 21051  0172A2  0E82               	movlw	130
 21052  0172A4  6FF5               	movwf	245,b	;volatile
 21053                           
 21054                           ; BSR set to: 61
 21055                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 21056  0172A6  0E06               	movlw	6
 21057  0172A8  6FF6               	movwf	246,b	;volatile
 21058                           
 21059                           ; BSR set to: 61
 21060                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 21061  0172AA  6BF7               	clrf	247,b	;volatile
 21062                           
 21063                           ; BSR set to: 61
 21064                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 21065  0172AC  6BF8               	clrf	248,b	;volatile
 21066                           
 21067                           ; BSR set to: 61
 21068                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 21069  0172AE  6BF9               	clrf	249,b	;volatile
 21070                           
 21071                           ; BSR set to: 61
 21072                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 21073  0172B0  6BFA               	clrf	250,b	;volatile
 21074                           
 21075                           ; BSR set to: 61
 21076                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 21077  0172B2  6A34               	clrf	_uart1TxHead^0,c	;volatile
 21078                           
 21079                           ; BSR set to: 61
 21080                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 21081  0172B4  6A33               	clrf	_uart1TxTail^0,c	;volatile
 21082                           
 21083                           ; BSR set to: 61
 21084                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 21085  0172B6  0E40               	movlw	64
 21086  0172B8  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 21087                           
 21088                           ; BSR set to: 61
 21089                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 21090  0172BA  6A31               	clrf	_uart1RxHead^0,c	;volatile
 21091                           
 21092                           ; BSR set to: 61
 21093                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 21094  0172BC  6A30               	clrf	_uart1RxTail^0,c	;volatile
 21095                           
 21096                           ; BSR set to: 61
 21097                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 21098  0172BE  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 21099                           
 21100                           ; BSR set to: 61
 21101                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 21102  0172C0  0139               	movlb	57	; () banked
 21103  0172C2  8793               	bsf	147,3,b	;volatile
 21104                           
 21105                           ; BSR set to: 57
 21106                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21107  0172C4  0012               	return		;funcret
 21108  0172C6                     __end_of_UART1_Initialize:
 21109                           	opt callstack 0
 21110                           
 21111 ;; *************** function _UART1_SetTxInterruptHandler *****************
 21112 ;; Defined at:
 21113 ;;		line 246 in file "mcc_generated_files/uart1.c"
 21114 ;; Parameters:    Size  Location     Type
 21115 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21116 ;;		 -> UART1_Transmit_ISR(1), 
 21117 ;; Auto vars:     Size  Location     Type
 21118 ;;		None
 21119 ;; Return value:  Size  Location     Type
 21120 ;;                  1  [STACK] void 
 21121 ;; Registers used:
 21122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21123 ;; Tracked objects:
 21124 ;;		On entry : 3F/39
 21125 ;;		On exit  : 0/0
 21126 ;;		Unchanged: 0/0
 21127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21132 ;;Total ram usage:        0 bytes
 21133 ;; Hardware stack levels used:    1
 21134 ;; Hardware stack levels required when called:    6
 21135 ;; This function calls:
 21136 ;;		Nothing
 21137 ;; This function is called by:
 21138 ;;		_UART1_Initialize
 21139 ;; This function uses a reentrant model
 21140 ;;
 21141                           
 21142                           	psect	text86
 21143  017B30                     __ptext86:
 21144                           	opt callstack 0
 21145  017B30                     _UART1_SetTxInterruptHandler:
 21146                           	opt callstack 22
 21147                           
 21148                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 21149                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21150                           
 21151                           ; BSR set to: 57
 21152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21153                           ;incstack = 0
 21154  017B30  50E1               	movf	fsr1l,w,c
 21155  017B32  0FFD               	addlw	-3
 21156  017B34  6ED9               	movwf	fsr2l,c
 21157  017B36  50E2               	movf	fsr1h,w,c
 21158  017B38  6EDA               	movwf	fsr2h,c
 21159  017B3A  0EFF               	movlw	255
 21160  017B3C  22DA               	addwfc	fsr2h,f,c
 21161  017B3E  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 21162  017B44  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 21163  017B4A  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 21164                           
 21165                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21166  017B50  52E5               	movf	postdec1,f,c
 21167  017B52  52E5               	movf	postdec1,f,c
 21168  017B54  52E5               	movf	postdec1,f,c
 21169  017B56  0012               	return		;funcret
 21170  017B58                     __end_of_UART1_SetTxInterruptHandler:
 21171                           	opt callstack 0
 21172                           
 21173 ;; *************** function _UART1_SetRxInterruptHandler *****************
 21174 ;; Defined at:
 21175 ;;		line 241 in file "mcc_generated_files/uart1.c"
 21176 ;; Parameters:    Size  Location     Type
 21177 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21178 ;;		 -> UART1_Receive_ISR(1), 
 21179 ;; Auto vars:     Size  Location     Type
 21180 ;;		None
 21181 ;; Return value:  Size  Location     Type
 21182 ;;                  1  [STACK] void 
 21183 ;; Registers used:
 21184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21185 ;; Tracked objects:
 21186 ;;		On entry : 3F/39
 21187 ;;		On exit  : 0/0
 21188 ;;		Unchanged: 0/0
 21189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21194 ;;Total ram usage:        0 bytes
 21195 ;; Hardware stack levels used:    1
 21196 ;; Hardware stack levels required when called:    6
 21197 ;; This function calls:
 21198 ;;		Nothing
 21199 ;; This function is called by:
 21200 ;;		_UART1_Initialize
 21201 ;; This function uses a reentrant model
 21202 ;;
 21203                           
 21204                           	psect	text87
 21205  017B58                     __ptext87:
 21206                           	opt callstack 0
 21207  017B58                     _UART1_SetRxInterruptHandler:
 21208                           	opt callstack 22
 21209                           
 21210                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 21211                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21212                           
 21213                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21214                           ;incstack = 0
 21215  017B58  50E1               	movf	fsr1l,w,c
 21216  017B5A  0FFD               	addlw	-3
 21217  017B5C  6ED9               	movwf	fsr2l,c
 21218  017B5E  50E2               	movf	fsr1h,w,c
 21219  017B60  6EDA               	movwf	fsr2h,c
 21220  017B62  0EFF               	movlw	255
 21221  017B64  22DA               	addwfc	fsr2h,f,c
 21222  017B66  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 21223  017B6C  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 21224  017B72  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 21225                           
 21226                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21227  017B78  52E5               	movf	postdec1,f,c
 21228  017B7A  52E5               	movf	postdec1,f,c
 21229  017B7C  52E5               	movf	postdec1,f,c
 21230  017B7E  0012               	return		;funcret
 21231  017B80                     __end_of_UART1_SetRxInterruptHandler:
 21232                           	opt callstack 0
 21233                           
 21234 ;; *************** function _TMR6_Initialize *****************
 21235 ;; Defined at:
 21236 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;		None
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;		None
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  1  [STACK] void 
 21243 ;; Registers used:
 21244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21245 ;; Tracked objects:
 21246 ;;		On entry : 3F/39
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;Total ram usage:        0 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:    7
 21257 ;; This function calls:
 21258 ;;		_TMR6_SetInterruptHandler
 21259 ;; This function is called by:
 21260 ;;		_SYSTEM_Initialize
 21261 ;; This function uses a reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text88
 21265  017A3E                     __ptext88:
 21266                           	opt callstack 0
 21267  017A3E                     _TMR6_Initialize:
 21268                           	opt callstack 22
 21269                           
 21270                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 21271                           
 21272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21273                           ;incstack = 0
 21274  017A3E  0E01               	movlw	1
 21275  017A40  6E96               	movwf	150,c	;volatile
 21276                           
 21277                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 21278  017A42  6A95               	clrf	149,c	;volatile
 21279                           
 21280                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 21281  017A44  6A97               	clrf	151,c	;volatile
 21282                           
 21283                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 21284  017A46  0E7C               	movlw	124
 21285  017A48  6E93               	movwf	147,c	;volatile
 21286                           
 21287                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 21288  017A4A  6A92               	clrf	146,c	;volatile
 21289                           
 21290                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 21291  017A4C  0139               	movlb	57	; () banked
 21292  017A4E  91A9               	bcf	169,0,b	;volatile
 21293                           
 21294                           ; BSR set to: 57
 21295                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 21296  017A50  8199               	bsf	153,0,b	;volatile
 21297                           
 21298                           ; BSR set to: 57
 21299                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 21300  017A52  0E9C               	movlw	low _TMR6_DefaultInterruptHandler
 21301  017A54  6EE6               	movwf	postinc1,c
 21302  017A56  0E76               	movlw	high _TMR6_DefaultInterruptHandler
 21303  017A58  6EE6               	movwf	postinc1,c
 21304  017A5A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 21305  017A5C  6EE6               	movwf	postinc1,c
 21306  017A5E  ECC0  F0BD         	call	_TMR6_SetInterruptHandler	;wreg free
 21307                           
 21308                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 21309  017A62  0EE0               	movlw	224
 21310  017A64  6E94               	movwf	148,c	;volatile
 21311                           
 21312                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21313  017A66  0012               	return		;funcret
 21314  017A68                     __end_of_TMR6_Initialize:
 21315                           	opt callstack 0
 21316                           
 21317 ;; *************** function _TMR6_SetInterruptHandler *****************
 21318 ;; Defined at:
 21319 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 21320 ;; Parameters:    Size  Location     Type
 21321 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21322 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  1  [STACK] void 
 21327 ;; Registers used:
 21328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21329 ;; Tracked objects:
 21330 ;;		On entry : 3F/39
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21338 ;;Total ram usage:        0 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:    6
 21341 ;; This function calls:
 21342 ;;		Nothing
 21343 ;; This function is called by:
 21344 ;;		_TMR6_Initialize
 21345 ;; This function uses a reentrant model
 21346 ;;
 21347                           
 21348                           	psect	text89
 21349  017B80                     __ptext89:
 21350                           	opt callstack 0
 21351  017B80                     _TMR6_SetInterruptHandler:
 21352                           	opt callstack 22
 21353                           
 21354                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 21355                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21356                           
 21357                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21358                           ;incstack = 0
 21359  017B80  50E1               	movf	fsr1l,w,c
 21360  017B82  0FFD               	addlw	-3
 21361  017B84  6ED9               	movwf	fsr2l,c
 21362  017B86  50E2               	movf	fsr1h,w,c
 21363  017B88  6EDA               	movwf	fsr2h,c
 21364  017B8A  0EFF               	movlw	255
 21365  017B8C  22DA               	addwfc	fsr2h,f,c
 21366  017B8E  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 21367  017B94  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 21368  017B9A  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 21369                           
 21370                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21371  017BA0  52E5               	movf	postdec1,f,c
 21372  017BA2  52E5               	movf	postdec1,f,c
 21373  017BA4  52E5               	movf	postdec1,f,c
 21374  017BA6  0012               	return		;funcret
 21375  017BA8                     __end_of_TMR6_SetInterruptHandler:
 21376                           	opt callstack 0
 21377                           
 21378 ;; *************** function _TMR5_Initialize *****************
 21379 ;; Defined at:
 21380 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 21381 ;; Parameters:    Size  Location     Type
 21382 ;;		None
 21383 ;; Auto vars:     Size  Location     Type
 21384 ;;		None
 21385 ;; Return value:  Size  Location     Type
 21386 ;;                  1  [STACK] void 
 21387 ;; Registers used:
 21388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21389 ;; Tracked objects:
 21390 ;;		On entry : 0/39
 21391 ;;		On exit  : 0/0
 21392 ;;		Unchanged: 0/0
 21393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21398 ;;Total ram usage:        0 bytes
 21399 ;; Hardware stack levels used:    1
 21400 ;; Hardware stack levels required when called:    7
 21401 ;; This function calls:
 21402 ;;		_TMR5_SetInterruptHandler
 21403 ;; This function is called by:
 21404 ;;		_SYSTEM_Initialize
 21405 ;; This function uses a reentrant model
 21406 ;;
 21407                           
 21408                           	psect	text90
 21409  017656                     __ptext90:
 21410                           	opt callstack 0
 21411  017656                     _TMR5_Initialize:
 21412                           	opt callstack 22
 21413                           
 21414                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 21415                           
 21416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21417                           ;incstack = 0
 21418  017656  6A9B               	clrf	155,c	;volatile
 21419                           
 21420                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 21421  017658  6A9C               	clrf	156,c	;volatile
 21422                           
 21423                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 21424  01765A  0E01               	movlw	1
 21425  01765C  6E9D               	movwf	157,c	;volatile
 21426                           
 21427                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 21428  01765E  0E63               	movlw	99
 21429  017660  6E99               	movwf	153,c	;volatile
 21430                           
 21431                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 21432  017662  0EC0               	movlw	192
 21433  017664  6E98               	movwf	152,c	;volatile
 21434                           
 21435                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 21436  017666  5098               	movf	152,w,c	;volatile
 21437  017668  006F FE64  F035    	movff	16281,btemp	;volatile
 21438  01766E  6A36               	clrf	(btemp+1)^0,c
 21439  017670  0060  F0D4  F036   	movff	btemp,btemp+1
 21440  017676  6A35               	clrf	btemp^0,c
 21441  017678  1035               	iorwf	btemp^0,w,c
 21442  01767A  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 21443  01767C  5036               	movf	(btemp+1)^0,w,c
 21444  01767E  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 21445                           
 21446                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 21447  017680  0139               	movlb	57	; () banked
 21448  017682  9DA8               	bcf	168,6,b	;volatile
 21449                           
 21450                           ; BSR set to: 57
 21451                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 21452  017684  8D98               	bsf	152,6,b	;volatile
 21453                           
 21454                           ; BSR set to: 57
 21455                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 21456  017686  0EC2               	movlw	low _TMR5_DefaultInterruptHandler
 21457  017688  6EE6               	movwf	postinc1,c
 21458  01768A  0E7E               	movlw	high _TMR5_DefaultInterruptHandler
 21459  01768C  6EE6               	movwf	postinc1,c
 21460  01768E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 21461  017690  6EE6               	movwf	postinc1,c
 21462  017692  ECD4  F0BD         	call	_TMR5_SetInterruptHandler	;wreg free
 21463                           
 21464                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 21465  017696  0E31               	movlw	49
 21466  017698  6E9A               	movwf	154,c	;volatile
 21467                           
 21468                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21469  01769A  0012               	return		;funcret
 21470  01769C                     __end_of_TMR5_Initialize:
 21471                           	opt callstack 0
 21472                           
 21473 ;; *************** function _TMR5_SetInterruptHandler *****************
 21474 ;; Defined at:
 21475 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 21476 ;; Parameters:    Size  Location     Type
 21477 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21478 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 21479 ;; Auto vars:     Size  Location     Type
 21480 ;;		None
 21481 ;; Return value:  Size  Location     Type
 21482 ;;                  1  [STACK] void 
 21483 ;; Registers used:
 21484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21485 ;; Tracked objects:
 21486 ;;		On entry : 3F/39
 21487 ;;		On exit  : 0/0
 21488 ;;		Unchanged: 0/0
 21489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21494 ;;Total ram usage:        0 bytes
 21495 ;; Hardware stack levels used:    1
 21496 ;; Hardware stack levels required when called:    6
 21497 ;; This function calls:
 21498 ;;		Nothing
 21499 ;; This function is called by:
 21500 ;;		_TMR5_Initialize
 21501 ;; This function uses a reentrant model
 21502 ;;
 21503                           
 21504                           	psect	text91
 21505  017BA8                     __ptext91:
 21506                           	opt callstack 0
 21507  017BA8                     _TMR5_SetInterruptHandler:
 21508                           	opt callstack 22
 21509                           
 21510                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 21511                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21512                           
 21513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21514                           ;incstack = 0
 21515  017BA8  50E1               	movf	fsr1l,w,c
 21516  017BAA  0FFD               	addlw	-3
 21517  017BAC  6ED9               	movwf	fsr2l,c
 21518  017BAE  50E2               	movf	fsr1h,w,c
 21519  017BB0  6EDA               	movwf	fsr2h,c
 21520  017BB2  0EFF               	movlw	255
 21521  017BB4  22DA               	addwfc	fsr2h,f,c
 21522  017BB6  006F FF78  F0BA    	movff	postinc2,_TMR5_InterruptHandler
 21523  017BBC  006F FF78  F0BB    	movff	postinc2,_TMR5_InterruptHandler+1
 21524  017BC2  006F FF74  F0BC    	movff	postdec2,_TMR5_InterruptHandler+2
 21525                           
 21526                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 21527  017BC8  52E5               	movf	postdec1,f,c
 21528  017BCA  52E5               	movf	postdec1,f,c
 21529  017BCC  52E5               	movf	postdec1,f,c
 21530  017BCE  0012               	return		;funcret
 21531  017BD0                     __end_of_TMR5_SetInterruptHandler:
 21532                           	opt callstack 0
 21533                           
 21534 ;; *************** function _TMR2_Initialize *****************
 21535 ;; Defined at:
 21536 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 21537 ;; Parameters:    Size  Location     Type
 21538 ;;		None
 21539 ;; Auto vars:     Size  Location     Type
 21540 ;;		None
 21541 ;; Return value:  Size  Location     Type
 21542 ;;                  1  [STACK] void 
 21543 ;; Registers used:
 21544 ;;		wreg, status,2
 21545 ;; Tracked objects:
 21546 ;;		On entry : 3F/3F
 21547 ;;		On exit  : 3F/39
 21548 ;;		Unchanged: 0/0
 21549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21554 ;;Total ram usage:        0 bytes
 21555 ;; Hardware stack levels used:    1
 21556 ;; Hardware stack levels required when called:    6
 21557 ;; This function calls:
 21558 ;;		Nothing
 21559 ;; This function is called by:
 21560 ;;		_SYSTEM_Initialize
 21561 ;; This function uses a reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text92
 21565  017F0E                     __ptext92:
 21566                           	opt callstack 0
 21567  017F0E                     _TMR2_Initialize:
 21568                           	opt callstack 23
 21569                           
 21570                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 21571                           
 21572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21573                           ;incstack = 0
 21574  017F0E  0E01               	movlw	1
 21575  017F10  6EAE               	movwf	174,c	;volatile
 21576                           
 21577                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 21578  017F12  6AAD               	clrf	173,c	;volatile
 21579                           
 21580                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 21581  017F14  6AAF               	clrf	175,c	;volatile
 21582                           
 21583                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 21584  017F16  0E63               	movlw	99
 21585  017F18  6EAB               	movwf	171,c	;volatile
 21586                           
 21587                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 21588  017F1A  6AAA               	clrf	170,c	;volatile
 21589                           
 21590                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 21591  017F1C  0139               	movlb	57	; () banked
 21592  017F1E  95A4               	bcf	164,2,b	;volatile
 21593                           
 21594                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 21595  017F20  0EC0               	movlw	192
 21596  017F22  6EAC               	movwf	172,c	;volatile
 21597                           
 21598                           ; BSR set to: 57
 21599                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21600  017F24  0012               	return		;funcret
 21601  017F26                     __end_of_TMR2_Initialize:
 21602                           	opt callstack 0
 21603                           
 21604 ;; *************** function _SPI1_Initialize *****************
 21605 ;; Defined at:
 21606 ;;		line 64 in file "mcc_generated_files/spi1.c"
 21607 ;; Parameters:    Size  Location     Type
 21608 ;;		None
 21609 ;; Auto vars:     Size  Location     Type
 21610 ;;		None
 21611 ;; Return value:  Size  Location     Type
 21612 ;;                  1  [STACK] void 
 21613 ;; Registers used:
 21614 ;;		wreg, status,2
 21615 ;; Tracked objects:
 21616 ;;		On entry : 3F/39
 21617 ;;		On exit  : 3F/3D
 21618 ;;		Unchanged: 0/0
 21619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21624 ;;Total ram usage:        0 bytes
 21625 ;; Hardware stack levels used:    1
 21626 ;; Hardware stack levels required when called:    6
 21627 ;; This function calls:
 21628 ;;		Nothing
 21629 ;; This function is called by:
 21630 ;;		_SYSTEM_Initialize
 21631 ;; This function uses a reentrant model
 21632 ;;
 21633                           
 21634                           	psect	text93
 21635  017F3E                     __ptext93:
 21636                           	opt callstack 0
 21637  017F3E                     _SPI1_Initialize:
 21638                           	opt callstack 23
 21639                           
 21640                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 21641                           
 21642                           ; BSR set to: 57
 21643                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21644                           ;incstack = 0
 21645  017F3E  0E40               	movlw	64
 21646  017F40  013D               	movlb	61	; () banked
 21647  017F42  6F15               	movwf	21,b	;volatile
 21648                           
 21649                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 21650  017F44  0E03               	movlw	3
 21651  017F46  6F16               	movwf	22,b	;volatile
 21652                           
 21653                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 21654  017F48  0E4F               	movlw	79
 21655  017F4A  6F19               	movwf	25,b	;volatile
 21656                           
 21657                           ; BSR set to: 61
 21658                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 21659  017F4C  6B1C               	clrf	28,b	;volatile
 21660                           
 21661                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 21662  017F4E  0E83               	movlw	131
 21663  017F50  6F14               	movwf	20,b	;volatile
 21664                           
 21665                           ; BSR set to: 61
 21666                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21667  017F52  0012               	return		;funcret
 21668  017F54                     __end_of_SPI1_Initialize:
 21669                           	opt callstack 0
 21670                           
 21671 ;; *************** function _PWM8_Initialize *****************
 21672 ;; Defined at:
 21673 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 21674 ;; Parameters:    Size  Location     Type
 21675 ;;		None
 21676 ;; Auto vars:     Size  Location     Type
 21677 ;;		None
 21678 ;; Return value:  Size  Location     Type
 21679 ;;                  1  [STACK] void 
 21680 ;; Registers used:
 21681 ;;		wreg, status,2
 21682 ;; Tracked objects:
 21683 ;;		On entry : 0/3E
 21684 ;;		On exit  : 3F/3F
 21685 ;;		Unchanged: 0/0
 21686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21691 ;;Total ram usage:        0 bytes
 21692 ;; Hardware stack levels used:    1
 21693 ;; Hardware stack levels required when called:    6
 21694 ;; This function calls:
 21695 ;;		Nothing
 21696 ;; This function is called by:
 21697 ;;		_SYSTEM_Initialize
 21698 ;; This function uses a reentrant model
 21699 ;;
 21700                           
 21701                           	psect	text94
 21702  017F54                     __ptext94:
 21703                           	opt callstack 0
 21704  017F54                     _PWM8_Initialize:
 21705                           	opt callstack 23
 21706                           
 21707                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 21708                           
 21709                           ; BSR set to: 61
 21710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21711                           ;incstack = 0
 21712  017F54  0E80               	movlw	128
 21713  017F56  6E62               	movwf	98,c	;volatile
 21714                           
 21715                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 21716  017F58  6A61               	clrf	97,c	;volatile
 21717                           
 21718                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 21719  017F5A  0E40               	movlw	64
 21720  017F5C  6E60               	movwf	96,c	;volatile
 21721                           
 21722                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 21723  017F5E  013F               	movlb	63	; () banked
 21724  017F60  515F               	movf	95,w,b	;volatile
 21725  017F62  0B3F               	andlw	-193
 21726  017F64  0940               	iorlw	64
 21727  017F66  6F5F               	movwf	95,b	;volatile
 21728                           
 21729                           ; BSR set to: 63
 21730                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 21731  017F68  0012               	return		;funcret
 21732  017F6A                     __end_of_PWM8_Initialize:
 21733                           	opt callstack 0
 21734                           
 21735 ;; *************** function _PMD_Initialize *****************
 21736 ;; Defined at:
 21737 ;;		line 89 in file "mcc_generated_files/mcc.c"
 21738 ;; Parameters:    Size  Location     Type
 21739 ;;		None
 21740 ;; Auto vars:     Size  Location     Type
 21741 ;;		None
 21742 ;; Return value:  Size  Location     Type
 21743 ;;                  1  [STACK] void 
 21744 ;; Registers used:
 21745 ;;		None
 21746 ;; Tracked objects:
 21747 ;;		On entry : 3F/39
 21748 ;;		On exit  : 3F/39
 21749 ;;		Unchanged: 0/0
 21750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21755 ;;Total ram usage:        0 bytes
 21756 ;; Hardware stack levels used:    1
 21757 ;; Hardware stack levels required when called:    6
 21758 ;; This function calls:
 21759 ;;		Nothing
 21760 ;; This function is called by:
 21761 ;;		_SYSTEM_Initialize
 21762 ;; This function uses a reentrant model
 21763 ;;
 21764                           
 21765                           	psect	text95
 21766  017F80                     __ptext95:
 21767                           	opt callstack 0
 21768  017F80                     _PMD_Initialize:
 21769                           	opt callstack 23
 21770                           
 21771                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 21772                           
 21773                           ; BSR set to: 63
 21774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21775                           ;incstack = 0
 21776  017F80  0139               	movlb	57	; () banked
 21777  017F82  6BC0               	clrf	192,b	;volatile
 21778                           
 21779                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 21780  017F84  6BC1               	clrf	193,b	;volatile
 21781                           
 21782                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 21783  017F86  6BC2               	clrf	194,b	;volatile
 21784                           
 21785                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 21786  017F88  6BC3               	clrf	195,b	;volatile
 21787                           
 21788                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 21789  017F8A  6BC4               	clrf	196,b	;volatile
 21790                           
 21791                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 21792  017F8C  6BC5               	clrf	197,b	;volatile
 21793                           
 21794                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 21795  017F8E  6BC6               	clrf	198,b	;volatile
 21796                           
 21797                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 21798  017F90  6BC7               	clrf	199,b	;volatile
 21799                           
 21800                           ; BSR set to: 57
 21801                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21802  017F92  0012               	return		;funcret
 21803  017F94                     __end_of_PMD_Initialize:
 21804                           	opt callstack 0
 21805                           
 21806 ;; *************** function _PIN_MANAGER_Initialize *****************
 21807 ;; Defined at:
 21808 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 21809 ;; Parameters:    Size  Location     Type
 21810 ;;		None
 21811 ;; Auto vars:     Size  Location     Type
 21812 ;;		None
 21813 ;; Return value:  Size  Location     Type
 21814 ;;                  1  [STACK] void 
 21815 ;; Registers used:
 21816 ;;		wreg, status,2
 21817 ;; Tracked objects:
 21818 ;;		On entry : 3F/39
 21819 ;;		On exit  : 3F/3A
 21820 ;;		Unchanged: 0/0
 21821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21826 ;;Total ram usage:        0 bytes
 21827 ;; Hardware stack levels used:    1
 21828 ;; Hardware stack levels required when called:    6
 21829 ;; This function calls:
 21830 ;;		Nothing
 21831 ;; This function is called by:
 21832 ;;		_SYSTEM_Initialize
 21833 ;; This function uses a reentrant model
 21834 ;;
 21835                           
 21836                           	psect	text96
 21837  016E3E                     __ptext96:
 21838                           	opt callstack 0
 21839  016E3E                     _PIN_MANAGER_Initialize:
 21840                           	opt callstack 23
 21841                           
 21842                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 21843                           
 21844                           ; BSR set to: 57
 21845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21846                           ;incstack = 0
 21847  016E3E  0E07               	movlw	7
 21848  016E40  6EBE               	movwf	190,c	;volatile
 21849                           
 21850                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 21851  016E42  6ABD               	clrf	189,c	;volatile
 21852                           
 21853                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 21854  016E44  6ABA               	clrf	186,c	;volatile
 21855                           
 21856                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 21857  016E46  6ABF               	clrf	191,c	;volatile
 21858                           
 21859                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 21860  016E48  6ABB               	clrf	187,c	;volatile
 21861                           
 21862                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 21863  016E4A  0E07               	movlw	7
 21864  016E4C  6EBC               	movwf	188,c	;volatile
 21865                           
 21866                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 21867  016E4E  6AC6               	clrf	198,c	;volatile
 21868                           
 21869                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 21870  016E50  0E0F               	movlw	15
 21871  016E52  6EC7               	movwf	199,c	;volatile
 21872                           
 21873                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 21874  016E54  68C2               	setf	194,c	;volatile
 21875                           
 21876                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 21877  016E56  0EBF               	movlw	191
 21878  016E58  6EC3               	movwf	195,c	;volatile
 21879                           
 21880                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 21881  016E5A  0E90               	movlw	144
 21882  016E5C  6EC4               	movwf	196,c	;volatile
 21883                           
 21884                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 21885  016E5E  0E0C               	movlw	12
 21886  016E60  6EC5               	movwf	197,c	;volatile
 21887                           
 21888                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 21889  016E62  013A               	movlb	58	; () banked
 21890  016E64  6B70               	clrf	112,b	;volatile
 21891                           
 21892                           ; BSR set to: 58
 21893                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 21894  016E66  6B60               	clrf	96,b	;volatile
 21895                           
 21896                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 21897  016E68  0E3C               	movlw	60
 21898  016E6A  6F50               	movwf	80,b	;volatile
 21899                           
 21900                           ; BSR set to: 58
 21901                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 21902  016E6C  6B80               	clrf	128,b	;volatile
 21903                           
 21904                           ; BSR set to: 58
 21905                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 21906  016E6E  6B90               	clrf	144,b	;volatile
 21907                           
 21908                           ; BSR set to: 58
 21909                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 21910  016E70  6940               	setf	64,b	;volatile
 21911                           
 21912                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 21913  016E72  0E0C               	movlw	12
 21914  016E74  6F71               	movwf	113,b	;volatile
 21915                           
 21916                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 21917  016E76  0E0F               	movlw	15
 21918  016E78  6F91               	movwf	145,b	;volatile
 21919                           
 21920                           ; BSR set to: 58
 21921                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 21922  016E7A  6B81               	clrf	129,b	;volatile
 21923                           
 21924                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 21925  016E7C  0E87               	movlw	135
 21926  016E7E  6F51               	movwf	81,b	;volatile
 21927                           
 21928                           ; BSR set to: 58
 21929                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 21930  016E80  6B41               	clrf	65,b	;volatile
 21931                           
 21932                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 21933  016E82  0E97               	movlw	151
 21934  016E84  6F61               	movwf	97,b	;volatile
 21935                           
 21936                           ; BSR set to: 58
 21937                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 21938  016E86  6B82               	clrf	130,b	;volatile
 21939                           
 21940                           ; BSR set to: 58
 21941                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 21942  016E88  6B92               	clrf	146,b	;volatile
 21943                           
 21944                           ; BSR set to: 58
 21945                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 21946  016E8A  6B42               	clrf	66,b	;volatile
 21947                           
 21948                           ; BSR set to: 58
 21949                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 21950  016E8C  6B52               	clrf	82,b	;volatile
 21951                           
 21952                           ; BSR set to: 58
 21953                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 21954  016E8E  6B62               	clrf	98,b	;volatile
 21955                           
 21956                           ; BSR set to: 58
 21957                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 21958  016E90  6B72               	clrf	114,b	;volatile
 21959                           
 21960                           ; BSR set to: 58
 21961                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 21962  016E92  6943               	setf	67,b	;volatile
 21963                           
 21964                           ; BSR set to: 58
 21965                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 21966  016E94  6953               	setf	83,b	;volatile
 21967                           
 21968                           ; BSR set to: 58
 21969                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 21970  016E96  6963               	setf	99,b	;volatile
 21971                           
 21972                           ; BSR set to: 58
 21973                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 21974  016E98  6973               	setf	115,b	;volatile
 21975                           
 21976                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 21977  016E9A  0E07               	movlw	7
 21978  016E9C  6F83               	movwf	131,b	;volatile
 21979                           
 21980                           ; BSR set to: 58
 21981                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 21982  016E9E  6993               	setf	147,b	;volatile
 21983                           
 21984                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 21985  016EA0  0E0F               	movlw	15
 21986  016EA2  6FE8               	movwf	232,b	;volatile
 21987                           
 21988                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 21989  016EA4  0E13               	movlw	19
 21990  016EA6  6FDE               	movwf	222,b	;volatile
 21991                           
 21992                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 21993  016EA8  0E16               	movlw	22
 21994  016EAA  6F0E               	movwf	14,b	;volatile
 21995                           
 21996                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 21997  016EAC  0E1E               	movlw	30
 21998  016EAE  6F13               	movwf	19,b	;volatile
 21999                           
 22000                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22001  016EB0  0E08               	movlw	8
 22002  016EB2  6FC0               	movwf	192,b	;volatile
 22003                           
 22004                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22005  016EB4  0E10               	movlw	16
 22006  016EB6  6F19               	movwf	25,b	;volatile
 22007                           
 22008                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22009  016EB8  0E09               	movlw	9
 22010  016EBA  6FC1               	movwf	193,b	;volatile
 22011                           
 22012                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22013  016EBC  0E1F               	movlw	31
 22014  016EBE  6F15               	movwf	21,b	;volatile
 22015                           
 22016                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 22017  016EC0  0E13               	movlw	19
 22018  016EC2  6F16               	movwf	22,b	;volatile
 22019                           
 22020                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 22021  016EC4  0E17               	movlw	23
 22022  016EC6  6FE5               	movwf	229,b	;volatile
 22023                           
 22024                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 22025  016EC8  0E14               	movlw	20
 22026  016ECA  6FDF               	movwf	223,b	;volatile
 22027                           
 22028                           ; BSR set to: 58
 22029                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 22030  016ECC  0012               	return		;funcret
 22031  016ECE                     __end_of_PIN_MANAGER_Initialize:
 22032                           	opt callstack 0
 22033                           
 22034 ;; *************** function _OSCILLATOR_Initialize *****************
 22035 ;; Defined at:
 22036 ;;		line 71 in file "mcc_generated_files/mcc.c"
 22037 ;; Parameters:    Size  Location     Type
 22038 ;;		None
 22039 ;; Auto vars:     Size  Location     Type
 22040 ;;		None
 22041 ;; Return value:  Size  Location     Type
 22042 ;;                  1  [STACK] void 
 22043 ;; Registers used:
 22044 ;;		wreg, status,2
 22045 ;; Tracked objects:
 22046 ;;		On entry : 3F/3A
 22047 ;;		On exit  : 3F/39
 22048 ;;		Unchanged: 0/0
 22049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22054 ;;Total ram usage:        0 bytes
 22055 ;; Hardware stack levels used:    1
 22056 ;; Hardware stack levels required when called:    6
 22057 ;; This function calls:
 22058 ;;		Nothing
 22059 ;; This function is called by:
 22060 ;;		_SYSTEM_Initialize
 22061 ;; This function uses a reentrant model
 22062 ;;
 22063                           
 22064                           	psect	text97
 22065  017F6A                     __ptext97:
 22066                           	opt callstack 0
 22067  017F6A                     _OSCILLATOR_Initialize:
 22068                           	opt callstack 23
 22069                           
 22070                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 22071                           
 22072                           ; BSR set to: 58
 22073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22074                           ;incstack = 0
 22075  017F6A  0E20               	movlw	32
 22076  017F6C  0139               	movlb	57	; () banked
 22077  017F6E  6FD9               	movwf	217,b	;volatile
 22078                           
 22079                           ; BSR set to: 57
 22080                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 22081  017F70  6BDB               	clrf	219,b	;volatile
 22082                           
 22083                           ; BSR set to: 57
 22084                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 22085  017F72  6BDD               	clrf	221,b	;volatile
 22086                           
 22087                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 22088  017F74  0E02               	movlw	2
 22089  017F76  6FDF               	movwf	223,b	;volatile
 22090                           
 22091                           ; BSR set to: 57
 22092                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 22093  017F78  6BDE               	clrf	222,b	;volatile
 22094  017F7A                     l171:
 22095                           
 22096                           ; BSR set to: 57
 22097                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 22098  017F7A  B1DC               	btfsc	220,0,b	;volatile
 22099  017F7C  0012               	return	
 22100  017F7E  D7FD               	goto	l171
 22101  017F80                     __end_of_OSCILLATOR_Initialize:
 22102                           	opt callstack 0
 22103                           
 22104 ;; *************** function _INTERRUPT_Initialize *****************
 22105 ;; Defined at:
 22106 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22107 ;; Parameters:    Size  Location     Type
 22108 ;;		None
 22109 ;; Auto vars:     Size  Location     Type
 22110 ;;  state           1  [STACK] _Bool 
 22111 ;; Return value:  Size  Location     Type
 22112 ;;                  1  [STACK] void 
 22113 ;; Registers used:
 22114 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 22115 ;; Tracked objects:
 22116 ;;		On entry : 0/0
 22117 ;;		On exit  : 3F/39
 22118 ;;		Unchanged: 0/0
 22119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22124 ;;Total ram usage:        0 bytes
 22125 ;; Hardware stack levels used:    1
 22126 ;; Hardware stack levels required when called:    6
 22127 ;; This function calls:
 22128 ;;		Nothing
 22129 ;; This function is called by:
 22130 ;;		_SYSTEM_Initialize
 22131 ;; This function uses a reentrant model
 22132 ;;
 22133                           
 22134                           	psect	text98
 22135  017198                     __ptext98:
 22136                           	opt callstack 0
 22137  017198                     _INTERRUPT_Initialize:
 22138                           	opt callstack 0
 22139                           
 22140                           ; BSR set to: 57
 22141                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22142  017198  52E6               	movf	postinc1,f,c
 22143                           
 22144                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 22145                           
 22146                           ;incstack = 0
 22147  01719A  8AD2               	bsf	210,5,c	;volatile
 22148                           
 22149                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 22150  01719C  AED2               	btfss	16338,7,c	;volatile
 22151  01719E  D003               	goto	u7590
 22152  0171A0  6A40               	clrf	(btemp+11)^0,c
 22153  0171A2  2A40               	incf	(btemp+11)^0,f,c
 22154  0171A4  D001               	goto	u7608
 22155  0171A6                     u7590:
 22156  0171A6  6A40               	clrf	(btemp+11)^0,c
 22157  0171A8                     u7608:
 22158                           
 22159                           ;stkvar	_state @ sp[(-1)+0]
 22160  0171A8  0EFF               	movlw	-1
 22161  0171AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 22162                           
 22163                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 22164  0171B0  9ED2               	bcf	16338,7,c	;volatile
 22165                           
 22166                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 22167  0171B2  0E55               	movlw	85
 22168  0171B4  6ED4               	movwf	212,c	;volatile
 22169                           
 22170                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 22171  0171B6  0EAA               	movlw	170
 22172  0171B8  6ED4               	movwf	212,c	;volatile
 22173                           
 22174                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 22175  0171BA  90D4               	bcf	212,0,c	;volatile
 22176                           
 22177                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 22178  0171BC  0138               	movlb	56	; () banked
 22179  0171BE  6B9F               	clrf	159,b	;volatile
 22180                           
 22181                           ; BSR set to: 56
 22182                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 22183  0171C0  6B9E               	clrf	158,b	;volatile
 22184                           
 22185                           ; BSR set to: 56
 22186                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 22187  0171C2  0E08               	movlw	8
 22188  0171C4  6F9D               	movwf	157,b	;volatile
 22189                           
 22190                           ; BSR set to: 56
 22191                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 22192  0171C6  0E55               	movlw	85
 22193  0171C8  6ED4               	movwf	212,c	;volatile
 22194                           
 22195                           ; BSR set to: 56
 22196                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 22197  0171CA  0EAA               	movlw	170
 22198  0171CC  6ED4               	movwf	212,c	;volatile
 22199                           
 22200                           ; BSR set to: 56
 22201                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 22202  0171CE  80D4               	bsf	212,0,c	;volatile
 22203                           
 22204                           ; BSR set to: 56
 22205                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 22206                           ;stkvar	_state @ sp[(-1)+0]
 22207  0171D0  0EFF               	movlw	-1
 22208  0171D2  B0E3               	btfsc	plusw1,0,c
 22209  0171D4  D002               	bra	u7615
 22210  0171D6  9ED2               	bcf	16338,7,c	;volatile
 22211  0171D8  D001               	bra	u7616
 22212  0171DA                     u7615:
 22213  0171DA  8ED2               	bsf	16338,7,c	;volatile
 22214  0171DC                     u7616:
 22215                           
 22216                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 22217  0171DC  0139               	movlb	57	; () banked
 22218  0171DE  8782               	bsf	130,3,b	;volatile
 22219                           
 22220                           ; BSR set to: 57
 22221                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 22222  0171E0  8382               	bsf	130,1,b	;volatile
 22223                           
 22224                           ; BSR set to: 57
 22225                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 22226  0171E2  8182               	bsf	130,0,b	;volatile
 22227                           
 22228                           ; BSR set to: 57
 22229                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 22230  0171E4  8582               	bsf	130,2,b	;volatile
 22231                           
 22232                           ; BSR set to: 57
 22233                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 22234  0171E6  8786               	bsf	134,3,b	;volatile
 22235                           
 22236                           ; BSR set to: 57
 22237                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 22238  0171E8  8586               	bsf	134,2,b	;volatile
 22239                           
 22240                           ; BSR set to: 57
 22241                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 22242  0171EA  8983               	bsf	131,4,b	;volatile
 22243                           
 22244                           ; BSR set to: 57
 22245                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 22246  0171EC  8783               	bsf	131,3,b	;volatile
 22247                           
 22248                           ; BSR set to: 57
 22249                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 22250  0171EE  8181               	bsf	129,0,b	;volatile
 22251                           
 22252                           ; BSR set to: 57
 22253                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 22254  0171F0  8185               	bsf	133,0,b	;volatile
 22255                           
 22256                           ; BSR set to: 57
 22257                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 22258  0171F2  8189               	bsf	137,0,b	;volatile
 22259                           
 22260                           ; BSR set to: 57
 22261                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 22262  0171F4  9D88               	bcf	136,6,b	;volatile
 22263                           
 22264                           ; BSR set to: 57
 22265                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 22266  0171F6  8581               	bsf	129,2,b	;volatile
 22267                           
 22268                           ; BSR set to: 57
 22269                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 22270  0171F8  8781               	bsf	129,3,b	;volatile
 22271                           
 22272                           ; BSR set to: 57
 22273                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 22274  0171FA  52E5               	movf	postdec1,f,c
 22275  0171FC  0012               	return		;funcret
 22276  0171FE                     __end_of_INTERRUPT_Initialize:
 22277                           	opt callstack 0
 22278                           
 22279 ;; *************** function _FVR_Initialize *****************
 22280 ;; Defined at:
 22281 ;;		line 58 in file "mcc_generated_files/fvr.c"
 22282 ;; Parameters:    Size  Location     Type
 22283 ;;		None
 22284 ;; Auto vars:     Size  Location     Type
 22285 ;;		None
 22286 ;; Return value:  Size  Location     Type
 22287 ;;                  1  [STACK] void 
 22288 ;; Registers used:
 22289 ;;		wreg, status,2
 22290 ;; Tracked objects:
 22291 ;;		On entry : 3F/39
 22292 ;;		On exit  : 3F/3E
 22293 ;;		Unchanged: 0/0
 22294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22299 ;;Total ram usage:        0 bytes
 22300 ;; Hardware stack levels used:    1
 22301 ;; Hardware stack levels required when called:    6
 22302 ;; This function calls:
 22303 ;;		Nothing
 22304 ;; This function is called by:
 22305 ;;		_SYSTEM_Initialize
 22306 ;; This function uses a reentrant model
 22307 ;;
 22308                           
 22309                           	psect	text99
 22310  018046                     __ptext99:
 22311                           	opt callstack 0
 22312  018046                     _FVR_Initialize:
 22313                           	opt callstack 23
 22314                           
 22315                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 22316                           
 22317                           ; BSR set to: 57
 22318                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22319                           ;incstack = 0
 22320  018046  0EAF               	movlw	175
 22321  018048  013E               	movlb	62	; () banked
 22322  01804A  6FC1               	movwf	193,b	;volatile
 22323                           
 22324                           ; BSR set to: 62
 22325                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22326  01804C  0012               	return		;funcret
 22327  01804E                     __end_of_FVR_Initialize:
 22328                           	opt callstack 0
 22329                           
 22330 ;; *************** function _EXT_INT_Initialize *****************
 22331 ;; Defined at:
 22332 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 22333 ;; Parameters:    Size  Location     Type
 22334 ;;		None
 22335 ;; Auto vars:     Size  Location     Type
 22336 ;;		None
 22337 ;; Return value:  Size  Location     Type
 22338 ;;                  1  [STACK] void 
 22339 ;; Registers used:
 22340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22341 ;; Tracked objects:
 22342 ;;		On entry : 3F/39
 22343 ;;		On exit  : 3F/39
 22344 ;;		Unchanged: 0/0
 22345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22350 ;;Total ram usage:        0 bytes
 22351 ;; Hardware stack levels used:    1
 22352 ;; Hardware stack levels required when called:    7
 22353 ;; This function calls:
 22354 ;;		_INT0_SetInterruptHandler
 22355 ;;		_INT1_SetInterruptHandler
 22356 ;; This function is called by:
 22357 ;;		_SYSTEM_Initialize
 22358 ;; This function uses a reentrant model
 22359 ;;
 22360                           
 22361                           	psect	text100
 22362  0178F4                     __ptext100:
 22363                           	opt callstack 0
 22364  0178F4                     _EXT_INT_Initialize:
 22365                           	opt callstack 22
 22366                           
 22367                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 22368                           
 22369                           ; BSR set to: 62
 22370                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22371                           ;incstack = 0
 22372  0178F4  0139               	movlb	57	; () banked
 22373  0178F6  91A1               	bcf	161,0,b	;volatile
 22374                           
 22375                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 22376  0178F8  90D2               	bcf	210,0,c	;volatile
 22377                           
 22378                           ; BSR set to: 57
 22379                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 22380  0178FA  0E66               	movlw	low _INT0_DefaultInterruptHandler
 22381  0178FC  6EE6               	movwf	postinc1,c
 22382  0178FE  0E80               	movlw	high _INT0_DefaultInterruptHandler
 22383  017900  6EE6               	movwf	postinc1,c
 22384  017902  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 22385  017904  6EE6               	movwf	postinc1,c
 22386  017906  ECFC  F0BD         	call	_INT0_SetInterruptHandler	;wreg free
 22387                           
 22388                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 22389  01790A  0139               	movlb	57	; () banked
 22390  01790C  8191               	bsf	145,0,b	;volatile
 22391                           
 22392                           ; BSR set to: 57
 22393                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 22394  01790E  91A5               	bcf	165,0,b	;volatile
 22395                           
 22396                           ; BSR set to: 57
 22397                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 22398  017910  92D2               	bcf	210,1,c	;volatile
 22399                           
 22400                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 22401  017912  0E68               	movlw	low _INT1_DefaultInterruptHandler
 22402  017914  6EE6               	movwf	postinc1,c
 22403  017916  0E80               	movlw	high _INT1_DefaultInterruptHandler
 22404  017918  6EE6               	movwf	postinc1,c
 22405  01791A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 22406  01791C  6EE6               	movwf	postinc1,c
 22407  01791E  ECE8  F0BD         	call	_INT1_SetInterruptHandler	;wreg free
 22408                           
 22409                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 22410  017922  0139               	movlb	57	; () banked
 22411  017924  8195               	bsf	149,0,b	;volatile
 22412                           
 22413                           ; BSR set to: 57
 22414                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 22415  017926  0012               	return		;funcret
 22416  017928                     __end_of_EXT_INT_Initialize:
 22417                           	opt callstack 0
 22418                           
 22419 ;; *************** function _INT1_SetInterruptHandler *****************
 22420 ;; Defined at:
 22421 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 22422 ;; Parameters:    Size  Location     Type
 22423 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22424 ;;		 -> INT1_DefaultInterruptHandler(1), 
 22425 ;; Auto vars:     Size  Location     Type
 22426 ;;		None
 22427 ;; Return value:  Size  Location     Type
 22428 ;;                  1  [STACK] void 
 22429 ;; Registers used:
 22430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22431 ;; Tracked objects:
 22432 ;;		On entry : 3F/39
 22433 ;;		On exit  : 0/0
 22434 ;;		Unchanged: 0/0
 22435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;Total ram usage:        0 bytes
 22441 ;; Hardware stack levels used:    1
 22442 ;; Hardware stack levels required when called:    6
 22443 ;; This function calls:
 22444 ;;		Nothing
 22445 ;; This function is called by:
 22446 ;;		_EXT_INT_Initialize
 22447 ;; This function uses a reentrant model
 22448 ;;
 22449                           
 22450                           	psect	text101
 22451  017BD0                     __ptext101:
 22452                           	opt callstack 0
 22453  017BD0                     _INT1_SetInterruptHandler:
 22454                           	opt callstack 22
 22455                           
 22456                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 22457                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22458                           
 22459                           ; BSR set to: 57
 22460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22461                           ;incstack = 0
 22462  017BD0  50E1               	movf	fsr1l,w,c
 22463  017BD2  0FFD               	addlw	-3
 22464  017BD4  6ED9               	movwf	fsr2l,c
 22465  017BD6  50E2               	movf	fsr1h,w,c
 22466  017BD8  6EDA               	movwf	fsr2h,c
 22467  017BDA  0EFF               	movlw	255
 22468  017BDC  22DA               	addwfc	fsr2h,f,c
 22469  017BDE  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 22470  017BE4  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 22471  017BEA  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 22472                           
 22473                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22474  017BF0  52E5               	movf	postdec1,f,c
 22475  017BF2  52E5               	movf	postdec1,f,c
 22476  017BF4  52E5               	movf	postdec1,f,c
 22477  017BF6  0012               	return		;funcret
 22478  017BF8                     __end_of_INT1_SetInterruptHandler:
 22479                           	opt callstack 0
 22480                           
 22481 ;; *************** function _INT0_SetInterruptHandler *****************
 22482 ;; Defined at:
 22483 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 22484 ;; Parameters:    Size  Location     Type
 22485 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22486 ;;		 -> INT0_DefaultInterruptHandler(1), 
 22487 ;; Auto vars:     Size  Location     Type
 22488 ;;		None
 22489 ;; Return value:  Size  Location     Type
 22490 ;;                  1  [STACK] void 
 22491 ;; Registers used:
 22492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22493 ;; Tracked objects:
 22494 ;;		On entry : 3F/39
 22495 ;;		On exit  : 0/0
 22496 ;;		Unchanged: 0/0
 22497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;Total ram usage:        0 bytes
 22503 ;; Hardware stack levels used:    1
 22504 ;; Hardware stack levels required when called:    6
 22505 ;; This function calls:
 22506 ;;		Nothing
 22507 ;; This function is called by:
 22508 ;;		_EXT_INT_Initialize
 22509 ;; This function uses a reentrant model
 22510 ;;
 22511                           
 22512                           	psect	text102
 22513  017BF8                     __ptext102:
 22514                           	opt callstack 0
 22515  017BF8                     _INT0_SetInterruptHandler:
 22516                           	opt callstack 22
 22517                           
 22518                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 22519                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22520                           
 22521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22522                           ;incstack = 0
 22523  017BF8  50E1               	movf	fsr1l,w,c
 22524  017BFA  0FFD               	addlw	-3
 22525  017BFC  6ED9               	movwf	fsr2l,c
 22526  017BFE  50E2               	movf	fsr1h,w,c
 22527  017C00  6EDA               	movwf	fsr2h,c
 22528  017C02  0EFF               	movlw	255
 22529  017C04  22DA               	addwfc	fsr2h,f,c
 22530  017C06  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 22531  017C0C  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 22532  017C12  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 22533                           
 22534                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22535  017C18  52E5               	movf	postdec1,f,c
 22536  017C1A  52E5               	movf	postdec1,f,c
 22537  017C1C  52E5               	movf	postdec1,f,c
 22538  017C1E  0012               	return		;funcret
 22539  017C20                     __end_of_INT0_SetInterruptHandler:
 22540                           	opt callstack 0
 22541                           
 22542 ;; *************** function _DMA2_Initialize *****************
 22543 ;; Defined at:
 22544 ;;		line 61 in file "mcc_generated_files/dma2.c"
 22545 ;; Parameters:    Size  Location     Type
 22546 ;;		None
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;		None
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  1  [STACK] void 
 22551 ;; Registers used:
 22552 ;;		wreg, status,2
 22553 ;; Tracked objects:
 22554 ;;		On entry : 3F/3D
 22555 ;;		On exit  : 3F/3B
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22562 ;;Total ram usage:        0 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:    6
 22565 ;; This function calls:
 22566 ;;		Nothing
 22567 ;; This function is called by:
 22568 ;;		_SYSTEM_Initialize
 22569 ;; This function uses a reentrant model
 22570 ;;
 22571                           
 22572                           	psect	text103
 22573  01743E                     __ptext103:
 22574                           	opt callstack 0
 22575  01743E                     _DMA2_Initialize:
 22576                           	opt callstack 23
 22577                           
 22578                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 22579                           
 22580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22581                           ;incstack = 0
 22582  01743E  0E00               	movlw	0
 22583  017440  013B               	movlb	59	; () banked
 22584  017442  6FD9               	movwf	217,b	;volatile
 22585  017444  0E10               	movlw	16
 22586  017446  6FDA               	movwf	218,b	;volatile
 22587  017448  0E00               	movlw	0
 22588  01744A  6FDB               	movwf	219,b	;volatile
 22589                           
 22590                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 22591  01744C  0E3F               	movlw	63
 22592  01744E  6FD1               	movwf	209,b	;volatile
 22593  017450  0EBB               	movlw	187
 22594  017452  6FD0               	movwf	208,b	;volatile
 22595                           
 22596                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 22597  017454  0E03               	movlw	3
 22598  017456  6FDD               	movwf	221,b	;volatile
 22599                           
 22600                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 22601  017458  0E00               	movlw	0
 22602  01745A  6FD8               	movwf	216,b	;volatile
 22603  01745C  0E01               	movlw	1
 22604  01745E  6FD7               	movwf	215,b	;volatile
 22605                           
 22606                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 22607  017460  0E00               	movlw	0
 22608  017462  6FCF               	movwf	207,b	;volatile
 22609  017464  0E01               	movlw	1
 22610  017466  6FCE               	movwf	206,b	;volatile
 22611                           
 22612                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 22613  017468  0E46               	movlw	70
 22614  01746A  6FDF               	movwf	223,b	;volatile
 22615                           
 22616                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 22617  01746C  0E3D               	movlw	61
 22618  01746E  6FDE               	movwf	222,b	;volatile
 22619                           
 22620                           ; BSR set to: 59
 22621                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 22622  017470  0139               	movlb	57	; () banked
 22623  017472  97A5               	bcf	165,3,b	;volatile
 22624                           
 22625                           ; BSR set to: 57
 22626                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 22627  017474  95A5               	bcf	165,2,b	;volatile
 22628                           
 22629                           ; BSR set to: 57
 22630                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 22631  017476  9BA5               	bcf	165,5,b	;volatile
 22632                           
 22633                           ; BSR set to: 57
 22634                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 22635  017478  99A5               	bcf	165,4,b	;volatile
 22636                           
 22637                           ; BSR set to: 57
 22638                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 22639  01747A  9795               	bcf	149,3,b	;volatile
 22640                           
 22641                           ; BSR set to: 57
 22642                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 22643  01747C  9595               	bcf	149,2,b	;volatile
 22644                           
 22645                           ; BSR set to: 57
 22646                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 22647  01747E  9B95               	bcf	149,5,b	;volatile
 22648                           
 22649                           ; BSR set to: 57
 22650                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 22651  017480  9995               	bcf	149,4,b	;volatile
 22652  017482  9ED2               	bcf	16338,7,c	;# 
 22653  017484  0139               	banksel	14831	;# 
 22654  017486  0E55               	movlw	85	;# 
 22655  017488  6FEF               	movwf	14831,b	;# 
 22656  01748A  0EAA               	movlw	170	;# 
 22657  01748C  6FEF               	movwf	14831,b	;# 
 22658  01748E  81EF               	bsf	14831,0,b	;# 
 22659  017490  8ED2               	bsf	16338,7,c	;# 
 22660                           
 22661                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 22662  017492  013B               	movlb	59	; () banked
 22663  017494  6BDC               	clrf	220,b	;volatile
 22664                           
 22665                           ; BSR set to: 59
 22666                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22667  017496  0012               	return		;funcret
 22668  017498                     __end_of_DMA2_Initialize:
 22669                           	opt callstack 0
 22670                           
 22671 ;; *************** function _DMA1_Initialize *****************
 22672 ;; Defined at:
 22673 ;;		line 86 in file "mcc_generated_files/dma1.c"
 22674 ;; Parameters:    Size  Location     Type
 22675 ;;		None
 22676 ;; Auto vars:     Size  Location     Type
 22677 ;;		None
 22678 ;; Return value:  Size  Location     Type
 22679 ;;                  1  [STACK] void 
 22680 ;; Registers used:
 22681 ;;		wreg, status,2
 22682 ;; Tracked objects:
 22683 ;;		On entry : 3F/3B
 22684 ;;		On exit  : 3F/3B
 22685 ;;		Unchanged: 0/0
 22686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22691 ;;Total ram usage:        0 bytes
 22692 ;; Hardware stack levels used:    1
 22693 ;; Hardware stack levels required when called:    6
 22694 ;; This function calls:
 22695 ;;		Nothing
 22696 ;; This function is called by:
 22697 ;;		_SYSTEM_Initialize
 22698 ;; This function uses a reentrant model
 22699 ;;
 22700                           
 22701                           	psect	text104
 22702  01705E                     __ptext104:
 22703                           	opt callstack 0
 22704  01705E                     _DMA1_Initialize:
 22705                           	opt callstack 23
 22706                           
 22707                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 22708                           
 22709                           ; BSR set to: 59
 22710                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22711                           ;incstack = 0
 22712  01705E  0E00               	movlw	0
 22713  017060  013B               	movlb	59	; () banked
 22714  017062  6FF9               	movwf	249,b	;volatile
 22715  017064  0E10               	movlw	16
 22716  017066  6FFA               	movwf	250,b	;volatile
 22717  017068  0E00               	movlw	0
 22718  01706A  6FFB               	movwf	251,b	;volatile
 22719                           
 22720                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 22721  01706C  0E3D               	movlw	61
 22722  01706E  6FF1               	movwf	241,b	;volatile
 22723  017070  0E11               	movlw	17
 22724  017072  6FF0               	movwf	240,b	;volatile
 22725                           
 22726                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 22727  017074  0E03               	movlw	3
 22728  017076  6FFD               	movwf	253,b	;volatile
 22729                           
 22730                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 22731  017078  0E00               	movlw	0
 22732  01707A  6FF8               	movwf	248,b	;volatile
 22733  01707C  0E01               	movlw	1
 22734  01707E  6FF7               	movwf	247,b	;volatile
 22735                           
 22736                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 22737  017080  0E00               	movlw	0
 22738  017082  6FEF               	movwf	239,b	;volatile
 22739  017084  0E01               	movlw	1
 22740  017086  6FEE               	movwf	238,b	;volatile
 22741                           
 22742                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 22743  017088  0E15               	movlw	21
 22744  01708A  6FFF               	movwf	255,b	;volatile
 22745                           
 22746                           ; BSR set to: 59
 22747                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 22748  01708C  6BFE               	clrf	254,b	;volatile
 22749                           
 22750                           ; BSR set to: 59
 22751                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 22752  01708E  0139               	movlb	57	; () banked
 22753  017090  93A2               	bcf	162,1,b	;volatile
 22754                           
 22755                           ; BSR set to: 57
 22756                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 22757  017092  91A2               	bcf	162,0,b	;volatile
 22758                           
 22759                           ; BSR set to: 57
 22760                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 22761  017094  97A2               	bcf	162,3,b	;volatile
 22762                           
 22763                           ; BSR set to: 57
 22764                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 22765  017096  95A2               	bcf	162,2,b	;volatile
 22766                           
 22767                           ; BSR set to: 57
 22768                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 22769  017098  8392               	bsf	146,1,b	;volatile
 22770                           
 22771                           ; BSR set to: 57
 22772                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 22773  01709A  8192               	bsf	146,0,b	;volatile
 22774                           
 22775                           ; BSR set to: 57
 22776                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 22777  01709C  8792               	bsf	146,3,b	;volatile
 22778                           
 22779                           ; BSR set to: 57
 22780                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 22781  01709E  8592               	bsf	146,2,b	;volatile
 22782                           
 22783                           ; BSR set to: 57
 22784                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 22785  0170A0  6BF1               	clrf	241,b	;volatile
 22786                           
 22787                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 22788  0170A2  0E01               	movlw	1
 22789  0170A4  6FF2               	movwf	242,b	;volatile
 22790                           
 22791                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 22792  0170A6  0E04               	movlw	4
 22793  0170A8  6FF3               	movwf	243,b	;volatile
 22794                           
 22795                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 22796  0170AA  0E02               	movlw	2
 22797  0170AC  6FF4               	movwf	244,b	;volatile
 22798                           
 22799                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 22800  0170AE  0E03               	movlw	3
 22801  0170B0  6FF7               	movwf	247,b	;volatile
 22802  0170B2  9ED2               	bcf	16338,7,c	;# 
 22803  0170B4  0139               	banksel	14831	;# 
 22804  0170B6  0E55               	movlw	85	;# 
 22805  0170B8  6FEF               	movwf	14831,b	;# 
 22806  0170BA  0EAA               	movlw	170	;# 
 22807  0170BC  6FEF               	movwf	14831,b	;# 
 22808  0170BE  81EF               	bsf	14831,0,b	;# 
 22809  0170C0  8ED2               	bsf	16338,7,c	;# 
 22810                           
 22811                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 22812  0170C2  013B               	movlb	59	; () banked
 22813  0170C4  6BFC               	clrf	252,b	;volatile
 22814                           
 22815                           ; BSR set to: 59
 22816                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22817  0170C6  0012               	return		;funcret
 22818  0170C8                     __end_of_DMA1_Initialize:
 22819                           	opt callstack 0
 22820                           
 22821 ;; *************** function _CLKREF_Initialize *****************
 22822 ;; Defined at:
 22823 ;;		line 58 in file "mcc_generated_files/clkref.c"
 22824 ;; Parameters:    Size  Location     Type
 22825 ;;		None
 22826 ;; Auto vars:     Size  Location     Type
 22827 ;;		None
 22828 ;; Return value:  Size  Location     Type
 22829 ;;                  1  [STACK] void 
 22830 ;; Registers used:
 22831 ;;		wreg, status,2
 22832 ;; Tracked objects:
 22833 ;;		On entry : 3F/3B
 22834 ;;		On exit  : 3F/3C
 22835 ;;		Unchanged: 0/0
 22836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22841 ;;Total ram usage:        0 bytes
 22842 ;; Hardware stack levels used:    1
 22843 ;; Hardware stack levels required when called:    6
 22844 ;; This function calls:
 22845 ;;		Nothing
 22846 ;; This function is called by:
 22847 ;;		_SYSTEM_Initialize
 22848 ;; This function uses a reentrant model
 22849 ;;
 22850                           
 22851                           	psect	text105
 22852  018002                     __ptext105:
 22853                           	opt callstack 0
 22854  018002                     _CLKREF_Initialize:
 22855                           	opt callstack 23
 22856                           
 22857                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 22858                           
 22859                           ; BSR set to: 59
 22860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22861                           ;incstack = 0
 22862  018002  013C               	movlb	60	; () banked
 22863  018004  6BE6               	clrf	230,b	;volatile
 22864                           
 22865                           ; BSR set to: 60
 22866                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 22867  018006  0E94               	movlw	148
 22868  018008  6FE5               	movwf	229,b	;volatile
 22869                           
 22870                           ; BSR set to: 60
 22871                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22872  01800A  0012               	return		;funcret
 22873  01800C                     __end_of_CLKREF_Initialize:
 22874                           	opt callstack 0
 22875                           
 22876 ;; *************** function _ADCC_Initialize *****************
 22877 ;; Defined at:
 22878 ;;		line 65 in file "mcc_generated_files/adcc.c"
 22879 ;; Parameters:    Size  Location     Type
 22880 ;;		None
 22881 ;; Auto vars:     Size  Location     Type
 22882 ;;		None
 22883 ;; Return value:  Size  Location     Type
 22884 ;;                  1  [STACK] void 
 22885 ;; Registers used:
 22886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22887 ;; Tracked objects:
 22888 ;;		On entry : 3F/3E
 22889 ;;		On exit  : 0/0
 22890 ;;		Unchanged: 0/0
 22891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22896 ;;Total ram usage:        0 bytes
 22897 ;; Hardware stack levels used:    1
 22898 ;; Hardware stack levels required when called:    7
 22899 ;; This function calls:
 22900 ;;		_ADCC_SetADIInterruptHandler
 22901 ;;		_ADCC_SetADTIInterruptHandler
 22902 ;; This function is called by:
 22903 ;;		_SYSTEM_Initialize
 22904 ;; This function uses a reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text106
 22908  0170C8                     __ptext106:
 22909                           	opt callstack 0
 22910  0170C8                     _ADCC_Initialize:
 22911                           	opt callstack 22
 22912                           
 22913                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 22914                           
 22915                           ; BSR set to: 60
 22916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22917                           ;incstack = 0
 22918  0170C8  013E               	movlb	62	; () banked
 22919  0170CA  6BDE               	clrf	222,b	;volatile
 22920                           
 22921                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 22922  0170CC  6BDF               	clrf	223,b	;volatile
 22923                           
 22924                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 22925  0170CE  6BE0               	clrf	224,b	;volatile
 22926                           
 22927                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 22928  0170D0  6BE1               	clrf	225,b	;volatile
 22929                           
 22930                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 22931  0170D2  6BE4               	clrf	228,b	;volatile
 22932                           
 22933                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 22934  0170D4  6BE5               	clrf	229,b	;volatile
 22935                           
 22936                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 22937  0170D6  6BEA               	clrf	234,b	;volatile
 22938                           
 22939                           ; BSR set to: 62
 22940                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 22941  0170D8  0E40               	movlw	64
 22942  0170DA  6FEC               	movwf	236,b	;volatile
 22943                           
 22944                           ; BSR set to: 62
 22945                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 22946  0170DC  6BF1               	clrf	241,b	;volatile
 22947                           
 22948                           ; BSR set to: 62
 22949                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 22950  0170DE  6BF3               	clrf	243,b	;volatile
 22951                           
 22952                           ; BSR set to: 62
 22953                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 22954  0170E0  6BF4               	clrf	244,b	;volatile
 22955                           
 22956                           ; BSR set to: 62
 22957                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 22958  0170E2  6BF5               	clrf	245,b	;volatile
 22959                           
 22960                           ; BSR set to: 62
 22961                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 22962  0170E4  6BF6               	clrf	246,b	;volatile
 22963                           
 22964                           ; BSR set to: 62
 22965                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 22966  0170E6  6BF7               	clrf	247,b	;volatile
 22967                           
 22968                           ; BSR set to: 62
 22969                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 22970  0170E8  6BF9               	clrf	249,b	;volatile
 22971                           
 22972                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x6B;
 22973  0170EA  0E6B               	movlw	107
 22974  0170EC  6FFA               	movwf	250,b	;volatile
 22975                           
 22976                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 22977  0170EE  0E27               	movlw	39
 22978  0170F0  6FFB               	movwf	251,b	;volatile
 22979                           
 22980                           ; BSR set to: 62
 22981                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 22982  0170F2  6BFC               	clrf	252,b	;volatile
 22983                           
 22984                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 22985  0170F4  0E02               	movlw	2
 22986  0170F6  6FFD               	movwf	253,b	;volatile
 22987                           
 22988                           ; BSR set to: 62
 22989                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 22990  0170F8  6BFE               	clrf	254,b	;volatile
 22991                           
 22992                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 22993  0170FA  0E02               	movlw	2
 22994  0170FC  6FFF               	movwf	255,b	;volatile
 22995                           
 22996                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 22997  0170FE  0E94               	movlw	148
 22998  017100  6FF8               	movwf	248,b	;volatile
 22999                           
 23000                           ; BSR set to: 62
 23001                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23002  017102  0139               	movlb	57	; () banked
 23003  017104  95A1               	bcf	161,2,b	;volatile
 23004                           
 23005                           ; BSR set to: 57
 23006                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23007  017106  8591               	bsf	145,2,b	;volatile
 23008                           
 23009                           ; BSR set to: 57
 23010                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23011  017108  0E6A               	movlw	low _ADCC_DefaultInterruptHandler
 23012  01710A  6EE6               	movwf	postinc1,c
 23013  01710C  0E80               	movlw	high _ADCC_DefaultInterruptHandler
 23014  01710E  6EE6               	movwf	postinc1,c
 23015  017110  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23016  017112  6EE6               	movwf	postinc1,c
 23017  017114  EC24  F0BE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 23018                           
 23019                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 23020  017118  0139               	movlb	57	; () banked
 23021  01711A  97A1               	bcf	161,3,b	;volatile
 23022                           
 23023                           ; BSR set to: 57
 23024                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 23025  01711C  8791               	bsf	145,3,b	;volatile
 23026                           
 23027                           ; BSR set to: 57
 23028                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 23029  01711E  0E6A               	movlw	low _ADCC_DefaultInterruptHandler
 23030  017120  6EE6               	movwf	postinc1,c
 23031  017122  0E80               	movlw	high _ADCC_DefaultInterruptHandler
 23032  017124  6EE6               	movwf	postinc1,c
 23033  017126  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 23034  017128  6EE6               	movwf	postinc1,c
 23035  01712A  EC10  F0BE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 23036                           
 23037                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23038  01712E  0012               	return		;funcret
 23039  017130                     __end_of_ADCC_Initialize:
 23040                           	opt callstack 0
 23041                           
 23042 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 23043 ;; Defined at:
 23044 ;;		line 336 in file "mcc_generated_files/adcc.c"
 23045 ;; Parameters:    Size  Location     Type
 23046 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23047 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 23048 ;; Auto vars:     Size  Location     Type
 23049 ;;		None
 23050 ;; Return value:  Size  Location     Type
 23051 ;;                  1  [STACK] void 
 23052 ;; Registers used:
 23053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23054 ;; Tracked objects:
 23055 ;;		On entry : 0/0
 23056 ;;		On exit  : 0/0
 23057 ;;		Unchanged: 0/0
 23058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23063 ;;Total ram usage:        0 bytes
 23064 ;; Hardware stack levels used:    1
 23065 ;; Hardware stack levels required when called:    6
 23066 ;; This function calls:
 23067 ;;		Nothing
 23068 ;; This function is called by:
 23069 ;;		_ADCC_Initialize
 23070 ;;		_start_adc_scan
 23071 ;; This function uses a reentrant model
 23072 ;;
 23073                           
 23074                           	psect	text107
 23075  017C20                     __ptext107:
 23076                           	opt callstack 0
 23077  017C20                     _ADCC_SetADTIInterruptHandler:
 23078                           	opt callstack 23
 23079                           
 23080                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 23081                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23082                           
 23083                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23084                           ;incstack = 0
 23085  017C20  50E1               	movf	fsr1l,w,c
 23086  017C22  0FFD               	addlw	-3
 23087  017C24  6ED9               	movwf	fsr2l,c
 23088  017C26  50E2               	movf	fsr1h,w,c
 23089  017C28  6EDA               	movwf	fsr2h,c
 23090  017C2A  0EFF               	movlw	255
 23091  017C2C  22DA               	addwfc	fsr2h,f,c
 23092  017C2E  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 23093  017C34  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 23094  017C3A  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 23095                           
 23096                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 23097  017C40  52E5               	movf	postdec1,f,c
 23098  017C42  52E5               	movf	postdec1,f,c
 23099  017C44  52E5               	movf	postdec1,f,c
 23100  017C46  0012               	return		;funcret
 23101  017C48                     __end_of_ADCC_SetADTIInterruptHandler:
 23102                           	opt callstack 0
 23103                           
 23104 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 23105 ;; Defined at:
 23106 ;;		line 323 in file "mcc_generated_files/adcc.c"
 23107 ;; Parameters:    Size  Location     Type
 23108 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23109 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 23110 ;; Auto vars:     Size  Location     Type
 23111 ;;		None
 23112 ;; Return value:  Size  Location     Type
 23113 ;;                  1  [STACK] void 
 23114 ;; Registers used:
 23115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23116 ;; Tracked objects:
 23117 ;;		On entry : 6/0
 23118 ;;		On exit  : 0/0
 23119 ;;		Unchanged: 0/0
 23120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23125 ;;Total ram usage:        0 bytes
 23126 ;; Hardware stack levels used:    1
 23127 ;; Hardware stack levels required when called:    6
 23128 ;; This function calls:
 23129 ;;		Nothing
 23130 ;; This function is called by:
 23131 ;;		_ADCC_Initialize
 23132 ;;		_start_adc_scan
 23133 ;; This function uses a reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text108
 23137  017C48                     __ptext108:
 23138                           	opt callstack 0
 23139  017C48                     _ADCC_SetADIInterruptHandler:
 23140                           	opt callstack 23
 23141                           
 23142                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 23143                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23144                           
 23145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23146                           ;incstack = 0
 23147  017C48  50E1               	movf	fsr1l,w,c
 23148  017C4A  0FFD               	addlw	-3
 23149  017C4C  6ED9               	movwf	fsr2l,c
 23150  017C4E  50E2               	movf	fsr1h,w,c
 23151  017C50  6EDA               	movwf	fsr2h,c
 23152  017C52  0EFF               	movlw	255
 23153  017C54  22DA               	addwfc	fsr2h,f,c
 23154  017C56  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 23155  017C5C  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 23156  017C62  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 23157                           
 23158                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23159  017C68  52E5               	movf	postdec1,f,c
 23160  017C6A  52E5               	movf	postdec1,f,c
 23161  017C6C  52E5               	movf	postdec1,f,c
 23162  017C6E  0012               	return		;funcret
 23163  017C70                     __end_of_ADCC_SetADIInterruptHandler:
 23164                           	opt callstack 0
 23165                           
 23166 ;; *************** function _TMR5_ISR *****************
 23167 ;; Defined at:
 23168 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23169 ;; Parameters:    Size  Location     Type
 23170 ;;		None
 23171 ;; Auto vars:     Size  Location     Type
 23172 ;;		None
 23173 ;; Return value:  Size  Location     Type
 23174 ;;                  1    wreg      void 
 23175 ;; Registers used:
 23176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 23177 ;; Tracked objects:
 23178 ;;		On entry : 0/0
 23179 ;;		On exit  : 0/0
 23180 ;;		Unchanged: 0/0
 23181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23186 ;;Total ram usage:        4 bytes
 23187 ;; Hardware stack levels used:    1
 23188 ;; Hardware stack levels required when called:    5
 23189 ;; This function calls:
 23190 ;;		_TMR5_CallBack
 23191 ;;		_TMR5_WriteTimer
 23192 ;; This function is called by:
 23193 ;;		Interrupt level 1
 23194 ;; This function uses a non-reentrant model
 23195 ;;
 23196                           
 23197                           	psect	text109
 23198  017388                     __ptext109:
 23199                           	opt callstack 0
 23200  017388                     _TMR5_ISR:
 23201                           	opt callstack 12
 23202                           
 23203                           ;incstack = 0
 23204  017388  006F FF60  F0DF    	movff	status,??_TMR5_ISR+2
 23205  01738E  0060  F100  F0E0   	movff	btemp+11,??_TMR5_ISR+3
 23206  017394  EE15  F3AB         	lfsr	1,___intlo_sp
 23207                           
 23208                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 23209  017398  0139               	movlb	57	; () banked
 23210  01739A  9DA8               	bcf	168,6,b	;volatile
 23211                           
 23212                           ; BSR set to: 57
 23213                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 23214  01739C  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 23215  0173A2  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 23216  0173A8  ECB4  F0BB         	call	_TMR5_WriteTimer	;wreg free
 23217                           
 23218                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 23219  0173AC  0102               	movlb	2	; () banked
 23220  0173AE  51BB               	movf	(_V+187)& (0+255),w,b	;volatile
 23221  0173B0  0100               	movlb	0	; () banked
 23222  0173B2  6FDD               	movwf	??_TMR5_ISR& (0+255),b
 23223  0173B4  6BDE               	clrf	(??_TMR5_ISR+1)& (0+255),b
 23224  0173B6  0E05               	movlw	5
 23225  0173B8  27DD               	addwf	??_TMR5_ISR& (0+255),f,b
 23226  0173BA  0E00               	movlw	0
 23227  0173BC  23DE               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 23228  0173BE  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 23229  0173C0  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 23230  0173C2  51DD               	movf	??_TMR5_ISR& (0+255),w,b
 23231  0173C4  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 23232  0173C6  51DE               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 23233  0173C8  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 23234  0173CA  A0D8               	btfss	status,0,c
 23235  0173CC  D004               	goto	i1l1045
 23236                           
 23237                           ; BSR set to: 0
 23238                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 23239  0173CE  EC99  F0BE         	call	_TMR5_CallBack	;wreg free
 23240                           
 23241                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 23242  0173D2  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 23243  0173D4  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 23244  0173D6                     i1l1045:
 23245  0173D6  0060  F380  F040   	movff	??_TMR5_ISR+3,btemp+11
 23246  0173DC  0060  F37F  FFD8   	movff	??_TMR5_ISR+2,status
 23247  0173E2  0011               	retfie		f
 23248  0173E4                     __end_of_TMR5_ISR:
 23249                           	opt callstack 0
 23250                           
 23251 ;; *************** function _TMR5_WriteTimer *****************
 23252 ;; Defined at:
 23253 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 23254 ;; Parameters:    Size  Location     Type
 23255 ;;  timerVal        2  [STACK] unsigned short 
 23256 ;; Auto vars:     Size  Location     Type
 23257 ;;		None
 23258 ;; Return value:  Size  Location     Type
 23259 ;;                  1  [STACK] void 
 23260 ;; Registers used:
 23261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23262 ;; Tracked objects:
 23263 ;;		On entry : 3F/39
 23264 ;;		On exit  : 0/0
 23265 ;;		Unchanged: 0/0
 23266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23271 ;;Total ram usage:        0 bytes
 23272 ;; Hardware stack levels used:    1
 23273 ;; Hardware stack levels required when called:    3
 23274 ;; This function calls:
 23275 ;;		Nothing
 23276 ;; This function is called by:
 23277 ;;		_TMR5_ISR
 23278 ;; This function uses a reentrant model
 23279 ;;
 23280                           
 23281                           	psect	text110
 23282  017768                     __ptext110:
 23283                           	opt callstack 0
 23284  017768                     _TMR5_WriteTimer:
 23285                           	opt callstack 13
 23286                           
 23287                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 23288                           
 23289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23290                           ;incstack = 0
 23291  017768  A49A               	btfss	154,2,c	;volatile
 23292  01776A  D00F               	goto	l8407
 23293                           
 23294                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 23295  01776C  909A               	bcf	154,0,c	;volatile
 23296                           
 23297                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 23298                           ;stkvar	_timerVal @ sp[(0)+-2]
 23299  01776E  0EFF               	movlw	255
 23300  017770  24E1               	addwf	fsr1l,w,c
 23301  017772  6ED9               	movwf	fsr2l,c
 23302  017774  0EFF               	movlw	255
 23303  017776  20E2               	addwfc	fsr1h,w,c
 23304  017778  6EDA               	movwf	fsr2h,c
 23305  01777A  50DF               	movf	indf2,w,c
 23306  01777C  6E99               	movwf	153,c	;volatile
 23307                           
 23308                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 23309                           ;stkvar	_timerVal @ sp[(0)+-2]
 23310  01777E  0EFE               	movlw	-2
 23311  017780  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23312                           
 23313                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 23314  017786  809A               	bsf	154,0,c	;volatile
 23315                           
 23316                           ;mcc_generated_files/tmr5.c: 142:  } else {
 23317  017788  D00C               	goto	l1028
 23318  01778A                     l8407:
 23319                           
 23320                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 23321                           ;stkvar	_timerVal @ sp[(0)+-2]
 23322  01778A  0EFF               	movlw	255
 23323  01778C  24E1               	addwf	fsr1l,w,c
 23324  01778E  6ED9               	movwf	fsr2l,c
 23325  017790  0EFF               	movlw	255
 23326  017792  20E2               	addwfc	fsr1h,w,c
 23327  017794  6EDA               	movwf	fsr2h,c
 23328  017796  50DF               	movf	indf2,w,c
 23329  017798  6E99               	movwf	153,c	;volatile
 23330                           
 23331                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 23332                           ;stkvar	_timerVal @ sp[(0)+-2]
 23333  01779A  0EFE               	movlw	-2
 23334  01779C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 23335  0177A2                     l1028:
 23336                           
 23337                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23338  0177A2  52E5               	movf	postdec1,f,c
 23339  0177A4  52E5               	movf	postdec1,f,c
 23340  0177A6  0012               	return		;funcret
 23341  0177A8                     __end_of_TMR5_WriteTimer:
 23342                           	opt callstack 0
 23343                           
 23344 ;; *************** function _TMR5_CallBack *****************
 23345 ;; Defined at:
 23346 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23347 ;; Parameters:    Size  Location     Type
 23348 ;;		None
 23349 ;; Auto vars:     Size  Location     Type
 23350 ;;		None
 23351 ;; Return value:  Size  Location     Type
 23352 ;;                  1  [STACK] void 
 23353 ;; Registers used:
 23354 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23355 ;; Tracked objects:
 23356 ;;		On entry : 3F/0
 23357 ;;		On exit  : 0/0
 23358 ;;		Unchanged: 0/0
 23359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23364 ;;Total ram usage:        0 bytes
 23365 ;; Hardware stack levels used:    1
 23366 ;; Hardware stack levels required when called:    4
 23367 ;; This function calls:
 23368 ;;		Absolute function
 23369 ;;		_TMR5_DefaultInterruptHandler
 23370 ;; This function is called by:
 23371 ;;		_TMR5_ISR
 23372 ;; This function uses a reentrant model
 23373 ;;
 23374                           
 23375                           	psect	text111
 23376  017D32                     __ptext111:
 23377                           	opt callstack 0
 23378  017D32                     _TMR5_CallBack:
 23379                           	opt callstack 12
 23380                           
 23381                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 23382                           
 23383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23384                           ;incstack = 0
 23385  017D32  0100               	movlb	0	; () banked
 23386  017D34  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23387  017D36  11BB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23388  017D38  11BC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23389  017D3A  B4D8               	btfsc	status,2,c
 23390  017D3C  0012               	return	
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 23394  017D3E  D801               	call	u792_28
 23395  017D40  0012               	return	
 23396  017D42                     u792_28:
 23397  017D42  0005               	push	
 23398  017D44  6EFA               	movwf	pclath,c
 23399  017D46  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23400  017D48  6EFD               	movwf	tosl,c
 23401  017D4A  51BB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23402  017D4C  6EFE               	movwf	tosh,c
 23403  017D4E  51BC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23404  017D50  6EFF               	movwf	tosu,c
 23405  017D52  50FA               	movf	pclath,w,c
 23406  017D54  0012               	return		;indir
 23407  017D56                     __end_of_TMR5_CallBack:
 23408                           	opt callstack 0
 23409                           
 23410 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23411 ;; Defined at:
 23412 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 23413 ;; Parameters:    Size  Location     Type
 23414 ;;		None
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;		None
 23417 ;; Return value:  Size  Location     Type
 23418 ;;                  1  [STACK] void 
 23419 ;; Registers used:
 23420 ;;		wreg, status,2, status,0, btemp+11
 23421 ;; Tracked objects:
 23422 ;;		On entry : 3F/0
 23423 ;;		On exit  : 0/0
 23424 ;;		Unchanged: 0/0
 23425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23430 ;;Total ram usage:        0 bytes
 23431 ;; Hardware stack levels used:    1
 23432 ;; Hardware stack levels required when called:    3
 23433 ;; This function calls:
 23434 ;;		Nothing
 23435 ;; This function is called by:
 23436 ;;		_TMR5_Initialize
 23437 ;;		_TMR5_CallBack
 23438 ;; This function uses a reentrant model
 23439 ;;
 23440                           
 23441                           	psect	text112
 23442  017EC2                     __ptext112:
 23443                           	opt callstack 0
 23444  017EC2                     _TMR5_DefaultInterruptHandler:
 23445                           	opt callstack 12
 23446                           
 23447                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 23448                           
 23449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23450                           ;incstack = 0
 23451  017EC2  A0BE               	btfss	190,0,c	;volatile
 23452  017EC4  D002               	goto	u765_20
 23453  017EC6  0E01               	movlw	1
 23454  017EC8  D001               	goto	u765_26
 23455  017ECA                     u765_20:
 23456  017ECA  0E00               	movlw	0
 23457  017ECC                     u765_26:
 23458  017ECC  0AFF               	xorlw	255
 23459  017ECE  6E40               	movwf	(btemp+11)^0,c
 23460  017ED0  50BE               	movf	190,w,c	;volatile
 23461  017ED2  1840               	xorwf	(btemp+11)^0,w,c
 23462  017ED4  0BFE               	andlw	-2
 23463  017ED6  1840               	xorwf	(btemp+11)^0,w,c
 23464  017ED8  6EBE               	movwf	190,c	;volatile
 23465                           
 23466                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23467  017EDA  0012               	return		;funcret
 23468  017EDC                     __end_of_TMR5_DefaultInterruptHandler:
 23469                           	opt callstack 0
 23470                           
 23471 ;; *************** function _INT0_ISR *****************
 23472 ;; Defined at:
 23473 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 23474 ;; Parameters:    Size  Location     Type
 23475 ;;		None
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;		None
 23478 ;; Return value:  Size  Location     Type
 23479 ;;                  1    wreg      void 
 23480 ;; Registers used:
 23481 ;;		wreg, status,2, status,0, pclath, tosl
 23482 ;; Tracked objects:
 23483 ;;		On entry : 0/0
 23484 ;;		On exit  : 0/0
 23485 ;;		Unchanged: 0/0
 23486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23491 ;;Total ram usage:        0 bytes
 23492 ;; Hardware stack levels used:    1
 23493 ;; Hardware stack levels required when called:    2
 23494 ;; This function calls:
 23495 ;;		_INT0_CallBack
 23496 ;; This function is called by:
 23497 ;;		Interrupt level 2
 23498 ;; This function uses a non-reentrant model
 23499 ;;
 23500                           
 23501                           	psect	text113
 23502  017FD4                     __ptext113:
 23503                           	opt callstack 0
 23504  017FD4                     _INT0_ISR:
 23505                           	opt callstack 12
 23506                           
 23507                           ;incstack = 0
 23508  017FD4  EE13  F356         	lfsr	1,___inthi_sp
 23509                           
 23510                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 23511  017FD8  0139               	movlb	57	; () banked
 23512  017FDA  91A1               	bcf	161,0,b	;volatile
 23513                           
 23514                           ; BSR set to: 57
 23515                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 23516  017FDC  ECAB  F0BE         	call	_INT0_CallBack	;wreg free
 23517  017FE0  0011               	retfie		f
 23518  017FE2                     __end_of_INT0_ISR:
 23519                           	opt callstack 0
 23520                           
 23521 ;; *************** function _INT0_CallBack *****************
 23522 ;; Defined at:
 23523 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 23524 ;; Parameters:    Size  Location     Type
 23525 ;;		None
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;		None
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1  [STACK] void 
 23530 ;; Registers used:
 23531 ;;		wreg, status,2, status,0, pclath, tosl
 23532 ;; Tracked objects:
 23533 ;;		On entry : 3F/39
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23541 ;;Total ram usage:        0 bytes
 23542 ;; Hardware stack levels used:    1
 23543 ;; Hardware stack levels required when called:    1
 23544 ;; This function calls:
 23545 ;;		Absolute function
 23546 ;;		_INT0_DefaultInterruptHandler
 23547 ;; This function is called by:
 23548 ;;		_INT0_ISR
 23549 ;; This function uses a reentrant model
 23550 ;;
 23551                           
 23552                           	psect	text114
 23553  017D56                     __ptext114:
 23554                           	opt callstack 0
 23555  017D56                     _INT0_CallBack:
 23556                           	opt callstack 12
 23557                           
 23558                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 23559                           
 23560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23561                           ;incstack = 0
 23562  017D56  5019               	movf	_INT0_InterruptHandler^0,w,c
 23563  017D58  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 23564  017D5A  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 23565  017D5C  B4D8               	btfsc	status,2,c
 23566  017D5E  0012               	return	
 23567                           
 23568                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 23569  017D60  D801               	call	u366_48
 23570  017D62  0012               	return	
 23571  017D64                     u366_48:
 23572  017D64  0005               	push	
 23573  017D66  6EFA               	movwf	pclath,c
 23574  017D68  5019               	movf	_INT0_InterruptHandler^0,w,c
 23575  017D6A  6EFD               	movwf	tosl,c
 23576  017D6C  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 23577  017D6E  6EFE               	movwf	tosh,c
 23578  017D70  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 23579  017D72  6EFF               	movwf	tosu,c
 23580  017D74  50FA               	movf	pclath,w,c
 23581  017D76  0012               	return		;indir
 23582  017D78                     __end_of_INT0_CallBack:
 23583                           	opt callstack 0
 23584                           
 23585 ;; *************** function _INT0_DefaultInterruptHandler *****************
 23586 ;; Defined at:
 23587 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 23588 ;; Parameters:    Size  Location     Type
 23589 ;;		None
 23590 ;; Auto vars:     Size  Location     Type
 23591 ;;		None
 23592 ;; Return value:  Size  Location     Type
 23593 ;;                  1  [STACK] void 
 23594 ;; Registers used:
 23595 ;;		None
 23596 ;; Tracked objects:
 23597 ;;		On entry : 0/39
 23598 ;;		On exit  : 0/0
 23599 ;;		Unchanged: 0/0
 23600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23605 ;;Total ram usage:        0 bytes
 23606 ;; Hardware stack levels used:    1
 23607 ;; This function calls:
 23608 ;;		Nothing
 23609 ;; This function is called by:
 23610 ;;		_EXT_INT_Initialize
 23611 ;;		_INT0_CallBack
 23612 ;; This function uses a reentrant model
 23613 ;;
 23614                           
 23615                           	psect	text115
 23616  018066                     __ptext115:
 23617                           	opt callstack 0
 23618  018066                     _INT0_DefaultInterruptHandler:
 23619                           	opt callstack 12
 23620                           
 23621                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23622                           
 23623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23624                           ;incstack = 0
 23625  018066  0012               	return		;funcret
 23626  018068                     __end_of_INT0_DefaultInterruptHandler:
 23627                           	opt callstack 0
 23628                           
 23629 ;; *************** function _INT1_ISR *****************
 23630 ;; Defined at:
 23631 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 23632 ;; Parameters:    Size  Location     Type
 23633 ;;		None
 23634 ;; Auto vars:     Size  Location     Type
 23635 ;;		None
 23636 ;; Return value:  Size  Location     Type
 23637 ;;                  1    wreg      void 
 23638 ;; Registers used:
 23639 ;;		wreg, status,2, status,0, pclath, tosl
 23640 ;; Tracked objects:
 23641 ;;		On entry : 0/0
 23642 ;;		On exit  : 0/0
 23643 ;;		Unchanged: 0/0
 23644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23649 ;;Total ram usage:        0 bytes
 23650 ;; Hardware stack levels used:    1
 23651 ;; Hardware stack levels required when called:    2
 23652 ;; This function calls:
 23653 ;;		_INT1_CallBack
 23654 ;; This function is called by:
 23655 ;;		Interrupt level 2
 23656 ;; This function uses a non-reentrant model
 23657 ;;
 23658                           
 23659                           	psect	text116
 23660  017FE4                     __ptext116:
 23661                           	opt callstack 0
 23662  017FE4                     _INT1_ISR:
 23663                           	opt callstack 12
 23664                           
 23665                           ;incstack = 0
 23666  017FE4  EE13  F356         	lfsr	1,___inthi_sp
 23667                           
 23668                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 23669  017FE8  0139               	movlb	57	; () banked
 23670  017FEA  91A5               	bcf	165,0,b	;volatile
 23671                           
 23672                           ; BSR set to: 57
 23673                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 23674  017FEC  ECBC  F0BE         	call	_INT1_CallBack	;wreg free
 23675  017FF0  0011               	retfie		f
 23676  017FF2                     __end_of_INT1_ISR:
 23677                           	opt callstack 0
 23678                           
 23679 ;; *************** function _INT1_CallBack *****************
 23680 ;; Defined at:
 23681 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;		None
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;		None
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1  [STACK] void 
 23688 ;; Registers used:
 23689 ;;		wreg, status,2, status,0, pclath, tosl
 23690 ;; Tracked objects:
 23691 ;;		On entry : 3F/39
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23699 ;;Total ram usage:        0 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:    1
 23702 ;; This function calls:
 23703 ;;		Absolute function
 23704 ;;		_INT1_DefaultInterruptHandler
 23705 ;; This function is called by:
 23706 ;;		_INT1_ISR
 23707 ;; This function uses a reentrant model
 23708 ;;
 23709                           
 23710                           	psect	text117
 23711  017D78                     __ptext117:
 23712                           	opt callstack 0
 23713  017D78                     _INT1_CallBack:
 23714                           	opt callstack 12
 23715                           
 23716                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 23717                           
 23718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23719                           ;incstack = 0
 23720  017D78  5016               	movf	_INT1_InterruptHandler^0,w,c
 23721  017D7A  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 23722  017D7C  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 23723  017D7E  B4D8               	btfsc	status,2,c
 23724  017D80  0012               	return	
 23725                           
 23726                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 23727  017D82  D801               	call	u368_48
 23728  017D84  0012               	return	
 23729  017D86                     u368_48:
 23730  017D86  0005               	push	
 23731  017D88  6EFA               	movwf	pclath,c
 23732  017D8A  5016               	movf	_INT1_InterruptHandler^0,w,c
 23733  017D8C  6EFD               	movwf	tosl,c
 23734  017D8E  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 23735  017D90  6EFE               	movwf	tosh,c
 23736  017D92  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 23737  017D94  6EFF               	movwf	tosu,c
 23738  017D96  50FA               	movf	pclath,w,c
 23739  017D98  0012               	return		;indir
 23740  017D9A                     __end_of_INT1_CallBack:
 23741                           	opt callstack 0
 23742                           
 23743 ;; *************** function _INT1_DefaultInterruptHandler *****************
 23744 ;; Defined at:
 23745 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 23746 ;; Parameters:    Size  Location     Type
 23747 ;;		None
 23748 ;; Auto vars:     Size  Location     Type
 23749 ;;		None
 23750 ;; Return value:  Size  Location     Type
 23751 ;;                  1  [STACK] void 
 23752 ;; Registers used:
 23753 ;;		None
 23754 ;; Tracked objects:
 23755 ;;		On entry : 0/39
 23756 ;;		On exit  : 0/0
 23757 ;;		Unchanged: 0/0
 23758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23763 ;;Total ram usage:        0 bytes
 23764 ;; Hardware stack levels used:    1
 23765 ;; This function calls:
 23766 ;;		Nothing
 23767 ;; This function is called by:
 23768 ;;		_EXT_INT_Initialize
 23769 ;;		_INT1_CallBack
 23770 ;; This function uses a reentrant model
 23771 ;;
 23772                           
 23773                           	psect	text118
 23774  018068                     __ptext118:
 23775                           	opt callstack 0
 23776  018068                     _INT1_DefaultInterruptHandler:
 23777                           	opt callstack 12
 23778                           
 23779                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 23780                           
 23781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23782                           ;incstack = 0
 23783  018068  0012               	return		;funcret
 23784  01806A                     __end_of_INT1_DefaultInterruptHandler:
 23785                           	opt callstack 0
 23786                           
 23787 ;; *************** function _Default_ISR *****************
 23788 ;; Defined at:
 23789 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 23790 ;; Parameters:    Size  Location     Type
 23791 ;;		None
 23792 ;; Auto vars:     Size  Location     Type
 23793 ;;		None
 23794 ;; Return value:  Size  Location     Type
 23795 ;;                  1    wreg      void 
 23796 ;; Registers used:
 23797 ;;		None
 23798 ;; Tracked objects:
 23799 ;;		On entry : 0/0
 23800 ;;		On exit  : 0/0
 23801 ;;		Unchanged: 0/0
 23802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23807 ;;Total ram usage:        0 bytes
 23808 ;; Hardware stack levels used:    1
 23809 ;; This function calls:
 23810 ;;		Nothing
 23811 ;; This function is called by:
 23812 ;;		Interrupt level 2
 23813 ;; This function uses a non-reentrant model
 23814 ;;
 23815                           
 23816                           	psect	text119
 23817  018060                     __ptext119:
 23818                           	opt callstack 0
 23819  018060                     _Default_ISR:
 23820                           	opt callstack 14
 23821                           
 23822                           ;incstack = 0
 23823  018060  EE13  F356         	lfsr	1,___inthi_sp
 23824  018064  0011               	retfie		f
 23825  018066                     __end_of_Default_ISR:
 23826                           	opt callstack 0
 23827                           
 23828 ;; *************** function _ADCC_ISR *****************
 23829 ;; Defined at:
 23830 ;;		line 314 in file "mcc_generated_files/adcc.c"
 23831 ;; Parameters:    Size  Location     Type
 23832 ;;		None
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;		None
 23835 ;; Return value:  Size  Location     Type
 23836 ;;                  1    wreg      void 
 23837 ;; Registers used:
 23838 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 23839 ;; Tracked objects:
 23840 ;;		On entry : 0/0
 23841 ;;		On exit  : 0/0
 23842 ;;		Unchanged: 0/0
 23843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23848 ;;Total ram usage:        1 bytes
 23849 ;; Hardware stack levels used:    1
 23850 ;; Hardware stack levels required when called:    1
 23851 ;; This function calls:
 23852 ;;		Absolute function
 23853 ;;		_ADCC_DefaultInterruptHandler
 23854 ;;		_adc_int_handler
 23855 ;; This function is called by:
 23856 ;;		Interrupt level 2
 23857 ;; This function uses a non-reentrant model
 23858 ;;
 23859                           
 23860                           	psect	text120
 23861  01781C                     __ptext120:
 23862                           	opt callstack 0
 23863  01781C                     _ADCC_ISR:
 23864                           	opt callstack 13
 23865                           
 23866                           ;incstack = 0
 23867  01781C  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 23868  017822  EE13  F356         	lfsr	1,___inthi_sp
 23869                           
 23870                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 23871  017826  0139               	movlb	57	; () banked
 23872  017828  95A1               	bcf	161,2,b	;volatile
 23873                           
 23874                           ; BSR set to: 57
 23875                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 23876  01782A  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23877  01782C  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23878  01782E  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23879  017830  B4D8               	btfsc	status,2,c
 23880  017832  D00C               	goto	i2u398_49
 23881                           
 23882                           ; BSR set to: 57
 23883                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 23884  017834  D801               	call	i2u398_48
 23885  017836  D00A               	goto	i2u398_49
 23886  017838                     i2u398_48:
 23887  017838  0005               	push	
 23888  01783A  6EFA               	movwf	pclath,c
 23889  01783C  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 23890  01783E  6EFD               	movwf	tosl,c
 23891  017840  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 23892  017842  6EFE               	movwf	tosh,c
 23893  017844  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 23894  017846  6EFF               	movwf	tosu,c
 23895  017848  50FA               	movf	pclath,w,c
 23896  01784A  0012               	return		;indir
 23897  01784C                     i2u398_49:
 23898  01784C  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 23899  017852  0011               	retfie		f
 23900  017854                     __end_of_ADCC_ISR:
 23901                           	opt callstack 0
 23902                           
 23903 ;; *************** function _adc_int_t_handler *****************
 23904 ;; Defined at:
 23905 ;;		line 101 in file "daq.c"
 23906 ;; Parameters:    Size  Location     Type
 23907 ;;		None
 23908 ;; Auto vars:     Size  Location     Type
 23909 ;;		None
 23910 ;; Return value:  Size  Location     Type
 23911 ;;                  1  [STACK] void 
 23912 ;; Registers used:
 23913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 23914 ;; Tracked objects:
 23915 ;;		On entry : 3F/39
 23916 ;;		On exit  : 1/0
 23917 ;;		Unchanged: 0/0
 23918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23923 ;;Total ram usage:        0 bytes
 23924 ;; Hardware stack levels used:    1
 23925 ;; Hardware stack levels required when called:    1
 23926 ;; This function calls:
 23927 ;;		_ADCC_StartConversion
 23928 ;; This function is called by:
 23929 ;;		_start_adc_scan
 23930 ;;		_ADCC_ThresholdISR
 23931 ;; This function uses a reentrant model
 23932 ;;
 23933                           
 23934                           	psect	text121
 23935  016D16                     __ptext121:
 23936                           	opt callstack 0
 23937  016D16                     _adc_int_t_handler:
 23938                           	opt callstack 12
 23939                           
 23940                           ;daq.c: 106:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 23941                           
 23942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23943                           ;incstack = 0
 23944  016D16  013E               	movlb	62	; () banked
 23945  016D18  51E6               	movf	230,w,b	;volatile
 23946  016D1A  006F FB9C  F035    	movff	16103,btemp	;volatile
 23947  016D20  6A36               	clrf	(btemp+1)^0,c
 23948  016D22  0060  F0D4  F036   	movff	btemp,btemp+1
 23949  016D28  6A35               	clrf	btemp^0,c
 23950  016D2A  2635               	addwf	btemp^0,f,c
 23951  016D2C  0E00               	movlw	0
 23952  016D2E  2236               	addwfc	(btemp+1)^0,f,c
 23953  016D30  0100               	movlb	0	; () banked
 23954  016D32  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 23955  016D34  0D02               	mullw	2
 23956  016D36  50F3               	movf	243,w,c
 23957  016D38  0F60               	addlw	low _R
 23958  016D3A  6ED9               	movwf	fsr2l,c
 23959  016D3C  6ADA               	clrf	fsr2h,c
 23960  016D3E  0060  F0D7  FFDE   	movff	btemp,postinc2
 23961  016D44  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 23962  016D4A                     l8617:
 23963                           
 23964                           ;daq.c: 108:   if (++R.scan_index > 0XD) {
 23965  016D4A  0100               	movlb	0	; () banked
 23966  016D4C  2B7E               	incf	(_R+30)& (0+255),f,b	;volatile
 23967  016D4E  0E0D               	movlw	13
 23968  016D50  657E               	cpfsgt	(_R+30)& (0+255),b	;volatile
 23969  016D52  D004               	goto	l8625
 23970                           
 23971                           ; BSR set to: 0
 23972                           ;daq.c: 109:    R.done = 1;
 23973  016D54  0E01               	movlw	1
 23974  016D56  6F81               	movwf	(_R+33)& (0+255),b	;volatile
 23975                           
 23976                           ; BSR set to: 0
 23977  016D58  92BE               	bcf	190,1,c	;volatile
 23978  016D5A  0012               	return	
 23979  016D5C                     l8625:
 23980                           
 23981                           ; BSR set to: 0
 23982                           ;daq.c: 113:  } while (!((R.scan_select >> R.scan_index) &0x01));
 23983  016D5C  0060  F1F8  F040   	movff	_R+30,btemp+11	;volatile
 23984  016D62  EE20  F07F         	lfsr	2,_R+31	;volatile
 23985  016D66  006F FF78  F03D    	movff	postinc2,btemp+8
 23986  016D6C  006F FF74  F03E    	movff	postdec2,btemp+9
 23987  016D72  2A40               	incf	(btemp+11)^0,f,c
 23988  016D74  D003               	goto	u806_44
 23989  016D76                     u806_45:
 23990  016D76  90D8               	bcf	status,0,c
 23991  016D78  323E               	rrcf	(btemp+9)^0,f,c
 23992  016D7A  323D               	rrcf	(btemp+8)^0,f,c
 23993  016D7C                     u806_44:
 23994  016D7C  2E40               	decfsz	(btemp+11)^0,f,c
 23995  016D7E  D7FB               	goto	u806_45
 23996  016D80  A03D               	btfss	(btemp+8)^0,0,c
 23997  016D82  D7E3               	goto	l8617
 23998                           
 23999                           ;daq.c: 114:  ADCC_StartConversion(R.scan_index & 0xf);
 24000  016D84  0100               	movlb	0	; () banked
 24001  016D86  517E               	movf	(_R+30)& (0+255),w,b	;volatile
 24002  016D88  0B0F               	andlw	15
 24003  016D8A  6EE6               	movwf	postinc1,c
 24004  016D8C  ECCA  F0BF         	call	_ADCC_StartConversion	;wreg free
 24005                           
 24006                           ; BSR set to: 62
 24007  016D90  A2BE               	btfss	190,1,c	;volatile
 24008  016D92  D002               	goto	u808_40
 24009  016D94  0E01               	movlw	1
 24010  016D96  D001               	goto	u808_46
 24011  016D98                     u808_40:
 24012  016D98  0E00               	movlw	0
 24013  016D9A                     u808_46:
 24014  016D9A  0AFF               	xorlw	255
 24015  016D9C  6E40               	movwf	(btemp+11)^0,c
 24016  016D9E  4640               	rlncf	(btemp+11)^0,f,c
 24017  016DA0  50BE               	movf	190,w,c	;volatile
 24018  016DA2  1840               	xorwf	(btemp+11)^0,w,c
 24019  016DA4  0BFD               	andlw	-3
 24020  016DA6  1840               	xorwf	(btemp+11)^0,w,c
 24021  016DA8  6EBE               	movwf	190,c	;volatile
 24022                           
 24023                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24024  016DAA  0012               	return		;funcret
 24025  016DAC                     __end_of_adc_int_t_handler:
 24026                           	opt callstack 0
 24027                           
 24028 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 24029 ;; Defined at:
 24030 ;;		line 339 in file "mcc_generated_files/adcc.c"
 24031 ;; Parameters:    Size  Location     Type
 24032 ;;		None
 24033 ;; Auto vars:     Size  Location     Type
 24034 ;;		None
 24035 ;; Return value:  Size  Location     Type
 24036 ;;                  1  [STACK] void 
 24037 ;; Registers used:
 24038 ;;		None
 24039 ;; Tracked objects:
 24040 ;;		On entry : 3F/39
 24041 ;;		On exit  : 0/0
 24042 ;;		Unchanged: 0/0
 24043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24048 ;;Total ram usage:        0 bytes
 24049 ;; Hardware stack levels used:    1
 24050 ;; This function calls:
 24051 ;;		Nothing
 24052 ;; This function is called by:
 24053 ;;		_ADCC_Initialize
 24054 ;;		_ADCC_ISR
 24055 ;;		_ADCC_ThresholdISR
 24056 ;; This function uses a reentrant model
 24057 ;;
 24058                           
 24059                           	psect	text122
 24060  01806A                     __ptext122:
 24061                           	opt callstack 0
 24062  01806A                     _ADCC_DefaultInterruptHandler:
 24063                           	opt callstack 13
 24064                           
 24065                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24066                           
 24067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24068                           ;incstack = 0
 24069  01806A  0012               	return		;funcret
 24070  01806C                     __end_of_ADCC_DefaultInterruptHandler:
 24071                           	opt callstack 0
 24072                           
 24073 ;; *************** function _adc_int_handler *****************
 24074 ;; Defined at:
 24075 ;;		line 93 in file "daq.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;		None
 24078 ;; Auto vars:     Size  Location     Type
 24079 ;;		None
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1  [STACK] void 
 24082 ;; Registers used:
 24083 ;;		wreg, status,2, status,0, btemp+11
 24084 ;; Tracked objects:
 24085 ;;		On entry : 3F/39
 24086 ;;		On exit  : 0/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24093 ;;Total ram usage:        0 bytes
 24094 ;; Hardware stack levels used:    1
 24095 ;; This function calls:
 24096 ;;		Nothing
 24097 ;; This function is called by:
 24098 ;;		_start_adc_scan
 24099 ;;		_ADCC_ISR
 24100 ;; This function uses a reentrant model
 24101 ;;
 24102                           
 24103                           	psect	text123
 24104  017E16                     __ptext123:
 24105                           	opt callstack 0
 24106  017E16                     _adc_int_handler:
 24107                           	opt callstack 13
 24108                           
 24109                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24110                           ;incstack = 0
 24111                           ;daq.c: 95:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 24112  017E16  A4BE               	btfss	190,2,c	;volatile
 24113  017E18  D002               	goto	u392_40
 24114  017E1A  0E01               	movlw	1
 24115  017E1C  D001               	goto	u392_46
 24116  017E1E                     u392_40:
 24117  017E1E  0E00               	movlw	0
 24118  017E20                     u392_46:
 24119  017E20  0AFF               	xorlw	255
 24120  017E22  6E40               	movwf	(btemp+11)^0,c
 24121  017E24  4640               	rlncf	(btemp+11)^0,f,c
 24122  017E26  4640               	rlncf	(btemp+11)^0,f,c
 24123  017E28  50BE               	movf	190,w,c	;volatile
 24124  017E2A  1840               	xorwf	(btemp+11)^0,w,c
 24125  017E2C  0BFB               	andlw	-5
 24126  017E2E  1840               	xorwf	(btemp+11)^0,w,c
 24127  017E30  6EBE               	movwf	190,c	;volatile
 24128                           
 24129                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24130  017E32  0012               	return		;funcret
 24131  017E34                     __end_of_adc_int_handler:
 24132                           	opt callstack 0
 24133                           
 24134 ;; *************** function _ADCC_ThresholdISR *****************
 24135 ;; Defined at:
 24136 ;;		line 327 in file "mcc_generated_files/adcc.c"
 24137 ;; Parameters:    Size  Location     Type
 24138 ;;		None
 24139 ;; Auto vars:     Size  Location     Type
 24140 ;;		None
 24141 ;; Return value:  Size  Location     Type
 24142 ;;                  1    wreg      void 
 24143 ;; Registers used:
 24144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 24145 ;; Tracked objects:
 24146 ;;		On entry : 0/0
 24147 ;;		On exit  : 0/0
 24148 ;;		Unchanged: 0/0
 24149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24152 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24153 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24154 ;;Total ram usage:        5 bytes
 24155 ;; Hardware stack levels used:    1
 24156 ;; Hardware stack levels required when called:    2
 24157 ;; This function calls:
 24158 ;;		Absolute function
 24159 ;;		_ADCC_DefaultInterruptHandler
 24160 ;;		_adc_int_t_handler
 24161 ;; This function is called by:
 24162 ;;		Interrupt level 2
 24163 ;; This function uses a non-reentrant model
 24164 ;;
 24165                           
 24166                           	psect	text124
 24167  017130                     __ptext124:
 24168                           	opt callstack 0
 24169  017130                     _ADCC_ThresholdISR:
 24170                           	opt callstack 12
 24171                           
 24172                           ;incstack = 0
 24173  017130  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 24174  017136  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 24175  01713C  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 24176  017142  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 24177  017148  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 24178  01714E  EE13  F356         	lfsr	1,___inthi_sp
 24179                           
 24180                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 24181  017152  0139               	movlb	57	; () banked
 24182  017154  97A1               	bcf	161,3,b	;volatile
 24183                           
 24184                           ; BSR set to: 57
 24185                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 24186  017156  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24187  017158  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24188  01715A  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24189  01715C  B4D8               	btfsc	status,2,c
 24190  01715E  D00C               	goto	i2u810_49
 24191                           
 24192                           ; BSR set to: 57
 24193                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 24194  017160  D801               	call	i2u810_48
 24195  017162  D00A               	goto	i2u810_49
 24196  017164                     i2u810_48:
 24197  017164  0005               	push	
 24198  017166  6EFA               	movwf	pclath,c
 24199  017168  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 24200  01716A  6EFD               	movwf	tosl,c
 24201  01716C  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 24202  01716E  6EFE               	movwf	tosh,c
 24203  017170  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 24204  017172  6EFF               	movwf	tosu,c
 24205  017174  50FA               	movf	pclath,w,c
 24206  017176  0012               	return		;indir
 24207  017178                     i2u810_49:
 24208  017178  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 24209  01717E  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 24210  017184  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 24211  01718A  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 24212  017190  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 24213  017196  0011               	retfie		f
 24214  017198                     __end_of_ADCC_ThresholdISR:
 24215                           	opt callstack 0
 24216                           
 24217 ;; *************** function _UART1_tx_vect_isr *****************
 24218 ;; Defined at:
 24219 ;;		line 199 in file "mcc_generated_files/uart1.c"
 24220 ;; Parameters:    Size  Location     Type
 24221 ;;		None
 24222 ;; Auto vars:     Size  Location     Type
 24223 ;;		None
 24224 ;; Return value:  Size  Location     Type
 24225 ;;                  1    wreg      void 
 24226 ;; Registers used:
 24227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24228 ;; Tracked objects:
 24229 ;;		On entry : 0/0
 24230 ;;		On exit  : 0/0
 24231 ;;		Unchanged: 0/0
 24232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24237 ;;Total ram usage:        0 bytes
 24238 ;; Hardware stack levels used:    1
 24239 ;; Hardware stack levels required when called:    1
 24240 ;; This function calls:
 24241 ;;		Absolute function
 24242 ;;		_UART1_Transmit_ISR
 24243 ;; This function is called by:
 24244 ;;		Interrupt level 2
 24245 ;; This function uses a non-reentrant model
 24246 ;;
 24247                           
 24248                           	psect	text125
 24249  017C70                     __ptext125:
 24250                           	opt callstack 0
 24251  017C70                     _UART1_tx_vect_isr:
 24252                           	opt callstack 13
 24253                           
 24254                           ;incstack = 0
 24255  017C70  EE13  F356         	lfsr	1,___inthi_sp
 24256                           
 24257                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 24258  017C74  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24259  017C76  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 24260  017C78  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 24261  017C7A  B4D8               	btfsc	status,2,c
 24262  017C7C  0011               	retfie		f
 24263                           
 24264                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 24265  017C7E  D801               	call	i2u982_48
 24266  017C80  0011               	retfie		f
 24267  017C82                     i2u982_48:
 24268  017C82  0005               	push	
 24269  017C84  6EFA               	movwf	pclath,c
 24270  017C86  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 24271  017C88  6EFD               	movwf	tosl,c
 24272  017C8A  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 24273  017C8C  6EFE               	movwf	tosh,c
 24274  017C8E  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 24275  017C90  6EFF               	movwf	tosu,c
 24276  017C92  50FA               	movf	pclath,w,c
 24277  017C94  0012               	return		;indir
 24278  017C96                     __end_of_UART1_tx_vect_isr:
 24279                           	opt callstack 0
 24280                           
 24281 ;; *************** function _UART1_Transmit_ISR *****************
 24282 ;; Defined at:
 24283 ;;		line 213 in file "mcc_generated_files/uart1.c"
 24284 ;; Parameters:    Size  Location     Type
 24285 ;;		None
 24286 ;; Auto vars:     Size  Location     Type
 24287 ;;		None
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  1  [STACK] void 
 24290 ;; Registers used:
 24291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/0
 24294 ;;		On exit  : 3B/39
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; This function calls:
 24304 ;;		Nothing
 24305 ;; This function is called by:
 24306 ;;		_UART1_Initialize
 24307 ;;		_UART1_tx_vect_isr
 24308 ;; This function uses a reentrant model
 24309 ;;
 24310                           
 24311                           	psect	text126
 24312  0179E6                     __ptext126:
 24313                           	opt callstack 0
 24314  0179E6                     _UART1_Transmit_ISR:
 24315                           	opt callstack 13
 24316                           
 24317                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 24318                           
 24319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24320                           ;incstack = 0
 24321  0179E6  0E40               	movlw	64
 24322  0179E8  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 24323  0179EA  D010               	goto	l581
 24324                           
 24325                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 24326  0179EC  0EBD               	movlw	low _uart1TxBuffer
 24327  0179EE  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 24328  0179F0  6ED9               	movwf	fsr2l,c
 24329  0179F2  6ADA               	clrf	fsr2h,c
 24330  0179F4  0E02               	movlw	high _uart1TxBuffer
 24331  0179F6  22DA               	addwfc	fsr2h,f,c
 24332  0179F8  50DF               	movf	indf2,w,c
 24333  0179FA  013D               	movlb	61	; () banked
 24334  0179FC  6FEA               	movwf	234,b	;volatile
 24335                           
 24336                           ; BSR set to: 61
 24337  0179FE  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 24338                           
 24339                           ; BSR set to: 61
 24340                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 24341  017A00  0E3F               	movlw	63
 24342  017A02  6433               	cpfsgt	_uart1TxTail^0,c
 24343  017A04  D001               	goto	l8359
 24344                           
 24345                           ; BSR set to: 61
 24346                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 24347  017A06  6A33               	clrf	_uart1TxTail^0,c	;volatile
 24348  017A08                     l8359:
 24349                           
 24350                           ; BSR set to: 61
 24351                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 24352  017A08  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 24353                           
 24354                           ;mcc_generated_files/uart1.c: 222:  } else {
 24355  017A0A  0012               	return	
 24356  017A0C                     l581:
 24357                           
 24358                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 24359  017A0C  0139               	movlb	57	; () banked
 24360  017A0E  9993               	bcf	147,4,b	;volatile
 24361                           
 24362                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24363  017A10  0012               	return		;funcret
 24364  017A12                     __end_of_UART1_Transmit_ISR:
 24365                           	opt callstack 0
 24366                           
 24367 ;; *************** function _UART1_rx_vect_isr *****************
 24368 ;; Defined at:
 24369 ;;		line 206 in file "mcc_generated_files/uart1.c"
 24370 ;; Parameters:    Size  Location     Type
 24371 ;;		None
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;		None
 24374 ;; Return value:  Size  Location     Type
 24375 ;;                  1    wreg      void 
 24376 ;; Registers used:
 24377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24378 ;; Tracked objects:
 24379 ;;		On entry : 0/0
 24380 ;;		On exit  : 0/0
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;Total ram usage:        0 bytes
 24388 ;; Hardware stack levels used:    1
 24389 ;; Hardware stack levels required when called:    1
 24390 ;; This function calls:
 24391 ;;		Absolute function
 24392 ;;		_UART1_Receive_ISR
 24393 ;; This function is called by:
 24394 ;;		Interrupt level 2
 24395 ;; This function uses a non-reentrant model
 24396 ;;
 24397                           
 24398                           	psect	text127
 24399  017C98                     __ptext127:
 24400                           	opt callstack 0
 24401  017C98                     _UART1_rx_vect_isr:
 24402                           	opt callstack 13
 24403                           
 24404                           ;incstack = 0
 24405  017C98  EE13  F356         	lfsr	1,___inthi_sp
 24406                           
 24407                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 24408  017C9C  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24409  017C9E  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 24410  017CA0  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 24411  017CA2  B4D8               	btfsc	status,2,c
 24412  017CA4  0011               	retfie		f
 24413                           
 24414                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 24415  017CA6  D801               	call	i2u984_48
 24416  017CA8  0011               	retfie		f
 24417  017CAA                     i2u984_48:
 24418  017CAA  0005               	push	
 24419  017CAC  6EFA               	movwf	pclath,c
 24420  017CAE  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 24421  017CB0  6EFD               	movwf	tosl,c
 24422  017CB2  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 24423  017CB4  6EFE               	movwf	tosh,c
 24424  017CB6  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 24425  017CB8  6EFF               	movwf	tosu,c
 24426  017CBA  50FA               	movf	pclath,w,c
 24427  017CBC  0012               	return		;indir
 24428  017CBE                     __end_of_UART1_rx_vect_isr:
 24429                           	opt callstack 0
 24430                           
 24431 ;; *************** function _UART1_Receive_ISR *****************
 24432 ;; Defined at:
 24433 ;;		line 229 in file "mcc_generated_files/uart1.c"
 24434 ;; Parameters:    Size  Location     Type
 24435 ;;		None
 24436 ;; Auto vars:     Size  Location     Type
 24437 ;;		None
 24438 ;; Return value:  Size  Location     Type
 24439 ;;                  1  [STACK] void 
 24440 ;; Registers used:
 24441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24442 ;; Tracked objects:
 24443 ;;		On entry : 0/0
 24444 ;;		On exit  : 0/0
 24445 ;;		Unchanged: 0/0
 24446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24451 ;;Total ram usage:        0 bytes
 24452 ;; Hardware stack levels used:    1
 24453 ;; This function calls:
 24454 ;;		Nothing
 24455 ;; This function is called by:
 24456 ;;		_UART1_Initialize
 24457 ;;		_UART1_rx_vect_isr
 24458 ;; This function uses a reentrant model
 24459 ;;
 24460                           
 24461                           	psect	text128
 24462  017E34                     __ptext128:
 24463                           	opt callstack 0
 24464  017E34                     _UART1_Receive_ISR:
 24465                           	opt callstack 13
 24466                           
 24467                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 24468                           
 24469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24470                           ;incstack = 0
 24471  017E34  0E00               	movlw	low _uart1RxBuffer
 24472  017E36  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 24473  017E38  6ED9               	movwf	fsr2l,c
 24474  017E3A  6ADA               	clrf	fsr2h,c
 24475  017E3C  0E05               	movlw	high _uart1RxBuffer
 24476  017E3E  22DA               	addwfc	fsr2h,f,c
 24477  017E40  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 24478  017E46  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 24479                           
 24480                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 24481  017E48  2831               	incf	_uart1RxHead^0,w,c
 24482  017E4A  B4D8               	btfsc	status,2,c
 24483                           
 24484                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 24485  017E4C  6A31               	clrf	_uart1RxHead^0,c	;volatile
 24486                           
 24487                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 24488  017E4E  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 24489                           
 24490                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24491  017E50  0012               	return		;funcret
 24492  017E52                     __end_of_UART1_Receive_ISR:
 24493                           	opt callstack 0
 24494                           
 24495 ;; *************** function _UART2_tx_vect_isr *****************
 24496 ;; Defined at:
 24497 ;;		line 195 in file "mcc_generated_files/uart2.c"
 24498 ;; Parameters:    Size  Location     Type
 24499 ;;		None
 24500 ;; Auto vars:     Size  Location     Type
 24501 ;;		None
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  1    wreg      void 
 24504 ;; Registers used:
 24505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24515 ;;Total ram usage:        0 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:    1
 24518 ;; This function calls:
 24519 ;;		Absolute function
 24520 ;;		_UART2_Transmit_ISR
 24521 ;; This function is called by:
 24522 ;;		Interrupt level 2
 24523 ;; This function uses a non-reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text129
 24527  017CC0                     __ptext129:
 24528                           	opt callstack 0
 24529  017CC0                     _UART2_tx_vect_isr:
 24530                           	opt callstack 13
 24531                           
 24532                           ;incstack = 0
 24533  017CC0  EE13  F356         	lfsr	1,___inthi_sp
 24534                           
 24535                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 24536  017CC4  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24537  017CC6  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 24538  017CC8  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 24539  017CCA  B4D8               	btfsc	status,2,c
 24540  017CCC  0011               	retfie		f
 24541                           
 24542                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 24543  017CCE  D801               	call	i2u986_48
 24544  017CD0  0011               	retfie		f
 24545  017CD2                     i2u986_48:
 24546  017CD2  0005               	push	
 24547  017CD4  6EFA               	movwf	pclath,c
 24548  017CD6  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 24549  017CD8  6EFD               	movwf	tosl,c
 24550  017CDA  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 24551  017CDC  6EFE               	movwf	tosh,c
 24552  017CDE  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 24553  017CE0  6EFF               	movwf	tosu,c
 24554  017CE2  50FA               	movf	pclath,w,c
 24555  017CE4  0012               	return		;indir
 24556  017CE6                     __end_of_UART2_tx_vect_isr:
 24557                           	opt callstack 0
 24558                           
 24559 ;; *************** function _UART2_Transmit_ISR *****************
 24560 ;; Defined at:
 24561 ;;		line 213 in file "mcc_generated_files/uart2.c"
 24562 ;; Parameters:    Size  Location     Type
 24563 ;;		None
 24564 ;; Auto vars:     Size  Location     Type
 24565 ;;		None
 24566 ;; Return value:  Size  Location     Type
 24567 ;;                  1  [STACK] void 
 24568 ;; Registers used:
 24569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24570 ;; Tracked objects:
 24571 ;;		On entry : 0/0
 24572 ;;		On exit  : 3B/39
 24573 ;;		Unchanged: 0/0
 24574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24579 ;;Total ram usage:        0 bytes
 24580 ;; Hardware stack levels used:    1
 24581 ;; This function calls:
 24582 ;;		Nothing
 24583 ;; This function is called by:
 24584 ;;		_UART2_Initialize
 24585 ;;		_UART2_tx_vect_isr
 24586 ;; This function uses a reentrant model
 24587 ;;
 24588                           
 24589                           	psect	text130
 24590  017A12                     __ptext130:
 24591                           	opt callstack 0
 24592  017A12                     _UART2_Transmit_ISR:
 24593                           	opt callstack 13
 24594                           
 24595                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 24596                           
 24597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24598                           ;incstack = 0
 24599  017A12  0E40               	movlw	64
 24600  017A14  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 24601  017A16  D010               	goto	l701
 24602                           
 24603                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 24604  017A18  0E00               	movlw	low _uart2TxBuffer
 24605  017A1A  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 24606  017A1C  6ED9               	movwf	fsr2l,c
 24607  017A1E  6ADA               	clrf	fsr2h,c
 24608  017A20  0E03               	movlw	high _uart2TxBuffer
 24609  017A22  22DA               	addwfc	fsr2h,f,c
 24610  017A24  50DF               	movf	indf2,w,c
 24611  017A26  013D               	movlb	61	; () banked
 24612  017A28  6FD2               	movwf	210,b	;volatile
 24613                           
 24614                           ; BSR set to: 61
 24615  017A2A  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 24616                           
 24617                           ; BSR set to: 61
 24618                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 24619  017A2C  0E3F               	movlw	63
 24620  017A2E  642D               	cpfsgt	_uart2TxTail^0,c
 24621  017A30  D001               	goto	l8381
 24622                           
 24623                           ; BSR set to: 61
 24624                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 24625  017A32  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 24626  017A34                     l8381:
 24627                           
 24628                           ; BSR set to: 61
 24629                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 24630  017A34  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 24631                           
 24632                           ;mcc_generated_files/uart2.c: 224:     }
 24633  017A36  0012               	return	
 24634  017A38                     l701:
 24635                           
 24636                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 24637  017A38  0139               	movlb	57	; () banked
 24638  017A3A  9796               	bcf	150,3,b	;volatile
 24639                           
 24640                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24641  017A3C  0012               	return		;funcret
 24642  017A3E                     __end_of_UART2_Transmit_ISR:
 24643                           	opt callstack 0
 24644                           
 24645 ;; *************** function _UART2_rx_vect_isr *****************
 24646 ;; Defined at:
 24647 ;;		line 203 in file "mcc_generated_files/uart2.c"
 24648 ;; Parameters:    Size  Location     Type
 24649 ;;		None
 24650 ;; Auto vars:     Size  Location     Type
 24651 ;;		None
 24652 ;; Return value:  Size  Location     Type
 24653 ;;                  1    wreg      void 
 24654 ;; Registers used:
 24655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 24656 ;; Tracked objects:
 24657 ;;		On entry : 0/0
 24658 ;;		On exit  : 0/0
 24659 ;;		Unchanged: 0/0
 24660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24665 ;;Total ram usage:        0 bytes
 24666 ;; Hardware stack levels used:    1
 24667 ;; Hardware stack levels required when called:    1
 24668 ;; This function calls:
 24669 ;;		Absolute function
 24670 ;;		_UART2_Receive_ISR
 24671 ;; This function is called by:
 24672 ;;		Interrupt level 2
 24673 ;; This function uses a non-reentrant model
 24674 ;;
 24675                           
 24676                           	psect	text131
 24677  017CE8                     __ptext131:
 24678                           	opt callstack 0
 24679  017CE8                     _UART2_rx_vect_isr:
 24680                           	opt callstack 13
 24681                           
 24682                           ;incstack = 0
 24683  017CE8  EE13  F356         	lfsr	1,___inthi_sp
 24684                           
 24685                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 24686  017CEC  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24687  017CEE  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 24688  017CF0  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 24689  017CF2  B4D8               	btfsc	status,2,c
 24690  017CF4  0011               	retfie		f
 24691                           
 24692                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 24693  017CF6  D801               	call	i2u988_48
 24694  017CF8  0011               	retfie		f
 24695  017CFA                     i2u988_48:
 24696  017CFA  0005               	push	
 24697  017CFC  6EFA               	movwf	pclath,c
 24698  017CFE  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 24699  017D00  6EFD               	movwf	tosl,c
 24700  017D02  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 24701  017D04  6EFE               	movwf	tosh,c
 24702  017D06  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 24703  017D08  6EFF               	movwf	tosu,c
 24704  017D0A  50FA               	movf	pclath,w,c
 24705  017D0C  0012               	return		;indir
 24706  017D0E                     __end_of_UART2_rx_vect_isr:
 24707                           	opt callstack 0
 24708                           
 24709 ;; *************** function _UART2_Receive_ISR *****************
 24710 ;; Defined at:
 24711 ;;		line 233 in file "mcc_generated_files/uart2.c"
 24712 ;; Parameters:    Size  Location     Type
 24713 ;;		None
 24714 ;; Auto vars:     Size  Location     Type
 24715 ;;		None
 24716 ;; Return value:  Size  Location     Type
 24717 ;;                  1  [STACK] void 
 24718 ;; Registers used:
 24719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24720 ;; Tracked objects:
 24721 ;;		On entry : 0/0
 24722 ;;		On exit  : 0/0
 24723 ;;		Unchanged: 0/0
 24724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24729 ;;Total ram usage:        0 bytes
 24730 ;; Hardware stack levels used:    1
 24731 ;; This function calls:
 24732 ;;		Nothing
 24733 ;; This function is called by:
 24734 ;;		_UART2_Initialize
 24735 ;;		_UART2_rx_vect_isr
 24736 ;; This function uses a reentrant model
 24737 ;;
 24738                           
 24739                           	psect	text132
 24740  017E52                     __ptext132:
 24741                           	opt callstack 0
 24742  017E52                     _UART2_Receive_ISR:
 24743                           	opt callstack 13
 24744                           
 24745                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 24746                           
 24747                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24748                           ;incstack = 0
 24749  017E52  0E00               	movlw	low _uart2RxBuffer
 24750  017E54  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 24751  017E56  6ED9               	movwf	fsr2l,c
 24752  017E58  6ADA               	clrf	fsr2h,c
 24753  017E5A  0E06               	movlw	high _uart2RxBuffer
 24754  017E5C  22DA               	addwfc	fsr2h,f,c
 24755  017E5E  006F F743 FFDF     	movff	15824,indf2	;volatile
 24756  017E64  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 24757                           
 24758                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 24759  017E66  282B               	incf	_uart2RxHead^0,w,c
 24760  017E68  B4D8               	btfsc	status,2,c
 24761                           
 24762                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 24763  017E6A  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 24764                           
 24765                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 24766  017E6C  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 24767                           
 24768                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24769  017E6E  0012               	return		;funcret
 24770  017E70                     __end_of_UART2_Receive_ISR:
 24771                           	opt callstack 0
 24772                           
 24773 ;; *************** function _TMR6_ISR *****************
 24774 ;; Defined at:
 24775 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;		None
 24778 ;; Auto vars:     Size  Location     Type
 24779 ;;		None
 24780 ;; Return value:  Size  Location     Type
 24781 ;;                  1    wreg      void 
 24782 ;; Registers used:
 24783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24784 ;; Tracked objects:
 24785 ;;		On entry : 0/0
 24786 ;;		On exit  : 0/0
 24787 ;;		Unchanged: 0/0
 24788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24792 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24793 ;;Total ram usage:        1 bytes
 24794 ;; Hardware stack levels used:    1
 24795 ;; Hardware stack levels required when called:    2
 24796 ;; This function calls:
 24797 ;;		_TMR6_CallBack
 24798 ;; This function is called by:
 24799 ;;		Interrupt level 2
 24800 ;; This function uses a non-reentrant model
 24801 ;;
 24802                           
 24803                           	psect	text133
 24804  017EDC                     __ptext133:
 24805                           	opt callstack 0
 24806  017EDC                     _TMR6_ISR:
 24807                           	opt callstack 12
 24808                           
 24809                           ;incstack = 0
 24810  017EDC  0060  F0D4  F0DC   	movff	btemp,??_TMR6_ISR
 24811  017EE2  EE13  F356         	lfsr	1,___inthi_sp
 24812                           
 24813                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 24814  017EE6  0139               	movlb	57	; () banked
 24815  017EE8  91A9               	bcf	169,0,b	;volatile
 24816                           
 24817                           ; BSR set to: 57
 24818                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 24819  017EEA  ECCD  F0BE         	call	_TMR6_CallBack	;wreg free
 24820  017EEE  0060  F370  F035   	movff	??_TMR6_ISR,btemp
 24821  017EF4  0011               	retfie		f
 24822  017EF6                     __end_of_TMR6_ISR:
 24823                           	opt callstack 0
 24824                           
 24825 ;; *************** function _TMR6_CallBack *****************
 24826 ;; Defined at:
 24827 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 24828 ;; Parameters:    Size  Location     Type
 24829 ;;		None
 24830 ;; Auto vars:     Size  Location     Type
 24831 ;;		None
 24832 ;; Return value:  Size  Location     Type
 24833 ;;                  1  [STACK] void 
 24834 ;; Registers used:
 24835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 24836 ;; Tracked objects:
 24837 ;;		On entry : 3F/39
 24838 ;;		On exit  : 0/0
 24839 ;;		Unchanged: 0/0
 24840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24845 ;;Total ram usage:        0 bytes
 24846 ;; Hardware stack levels used:    1
 24847 ;; Hardware stack levels required when called:    1
 24848 ;; This function calls:
 24849 ;;		Absolute function
 24850 ;;		_TMR6_DefaultInterruptHandler
 24851 ;; This function is called by:
 24852 ;;		_TMR6_ISR
 24853 ;; This function uses a reentrant model
 24854 ;;
 24855                           
 24856                           	psect	text134
 24857  017D9A                     __ptext134:
 24858                           	opt callstack 0
 24859  017D9A                     _TMR6_CallBack:
 24860                           	opt callstack 12
 24861                           
 24862                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 24863                           
 24864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24865                           ;incstack = 0
 24866  017D9A  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24867  017D9C  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 24868  017D9E  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 24869  017DA0  B4D8               	btfsc	status,2,c
 24870  017DA2  0012               	return	
 24871                           
 24872                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 24873  017DA4  D801               	call	u789_48
 24874  017DA6  0012               	return	
 24875  017DA8                     u789_48:
 24876  017DA8  0005               	push	
 24877  017DAA  6EFA               	movwf	pclath,c
 24878  017DAC  5001               	movf	_TMR6_InterruptHandler^0,w,c
 24879  017DAE  6EFD               	movwf	tosl,c
 24880  017DB0  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 24881  017DB2  6EFE               	movwf	tosh,c
 24882  017DB4  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 24883  017DB6  6EFF               	movwf	tosu,c
 24884  017DB8  50FA               	movf	pclath,w,c
 24885  017DBA  0012               	return		;indir
 24886  017DBC                     __end_of_TMR6_CallBack:
 24887                           	opt callstack 0
 24888                           
 24889 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 24890 ;; Defined at:
 24891 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 24892 ;; Parameters:    Size  Location     Type
 24893 ;;		None
 24894 ;; Auto vars:     Size  Location     Type
 24895 ;;  i               1  [STACK] unsigned char 
 24896 ;; Return value:  Size  Location     Type
 24897 ;;                  1  [STACK] void 
 24898 ;; Registers used:
 24899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 24900 ;; Tracked objects:
 24901 ;;		On entry : 0/39
 24902 ;;		On exit  : 0/0
 24903 ;;		Unchanged: 0/0
 24904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;Total ram usage:        0 bytes
 24910 ;; Hardware stack levels used:    1
 24911 ;; This function calls:
 24912 ;;		Nothing
 24913 ;; This function is called by:
 24914 ;;		_TMR6_Initialize
 24915 ;;		_TMR6_CallBack
 24916 ;; This function uses a reentrant model
 24917 ;;
 24918                           
 24919                           	psect	text135
 24920  01769C                     __ptext135:
 24921                           	opt callstack 0
 24922  01769C                     _TMR6_DefaultInterruptHandler:
 24923                           	opt callstack 0
 24924                           
 24925                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24926  01769C  52E6               	movf	postinc1,f,c
 24927                           
 24928                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 24929                           ;stkvar	_i @ sp[(-1)+0]
 24930                           
 24931                           ;incstack = 0
 24932  01769E  0EFF               	movlw	-1
 24933  0176A0  6AE3               	clrf	plusw1,c
 24934  0176A2                     l8149:
 24935                           
 24936                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 24937                           ;stkvar	_i @ sp[(-1)+0]
 24938  0176A2  0EFF               	movlw	-1
 24939  0176A4  50E3               	movf	plusw1,w,c
 24940  0176A6  0D02               	mullw	2
 24941  0176A8  50F3               	movf	243,w,c
 24942  0176AA  0F82               	addlw	low _tickCount
 24943  0176AC  6ED9               	movwf	fsr2l,c
 24944  0176AE  6ADA               	clrf	fsr2h,c
 24945  0176B0  50DE               	movf	postinc2,w,c
 24946  0176B2  10DE               	iorwf	postinc2,w,c
 24947  0176B4  B4D8               	btfsc	status,2,c
 24948  0176B6  D00A               	goto	l8153
 24949                           
 24950                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 24951                           ;stkvar	_i @ sp[(-1)+0]
 24952  0176B8  0EFF               	movlw	-1
 24953  0176BA  50E3               	movf	plusw1,w,c
 24954  0176BC  0D02               	mullw	2
 24955  0176BE  50F3               	movf	243,w,c
 24956  0176C0  0F82               	addlw	low _tickCount
 24957  0176C2  6ED9               	movwf	fsr2l,c
 24958  0176C4  6ADA               	clrf	fsr2h,c
 24959  0176C6  06DE               	decf	postinc2,f,c
 24960  0176C8  0E00               	movlw	0
 24961  0176CA  5ADD               	subwfb	postdec2,f,c
 24962  0176CC                     l8153:
 24963                           
 24964                           ;mcc_generated_files/tmr6.c: 207:  }
 24965                           ;stkvar	_i @ sp[(-1)+0]
 24966  0176CC  0EFF               	movlw	-1
 24967  0176CE  2AE3               	incf	plusw1,f,c
 24968                           
 24969                           ;stkvar	_i @ sp[(-1)+0]
 24970  0176D0  0EFF               	movlw	-1
 24971  0176D2  006F FF8C  F035    	movff	plusw1,btemp
 24972  0176D8  0E0B               	movlw	11
 24973  0176DA  6435               	cpfsgt	btemp^0,c
 24974  0176DC  D7E2               	goto	l8149
 24975                           
 24976                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24977  0176DE  52E5               	movf	postdec1,f,c
 24978  0176E0  0012               	return		;funcret
 24979  0176E2                     __end_of_TMR6_DefaultInterruptHandler:
 24980                           	opt callstack 0
 24981                           
 24982 ;; *************** function _DMA1_DMASCNT_ISR *****************
 24983 ;; Defined at:
 24984 ;;		line 126 in file "mcc_generated_files/dma1.c"
 24985 ;; Parameters:    Size  Location     Type
 24986 ;;		None
 24987 ;; Auto vars:     Size  Location     Type
 24988 ;;		None
 24989 ;; Return value:  Size  Location     Type
 24990 ;;                  1    wreg      void 
 24991 ;; Registers used:
 24992 ;;		None
 24993 ;; Tracked objects:
 24994 ;;		On entry : 0/0
 24995 ;;		On exit  : 3F/0
 24996 ;;		Unchanged: 0/0
 24997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25002 ;;Total ram usage:        0 bytes
 25003 ;; Hardware stack levels used:    1
 25004 ;; This function calls:
 25005 ;;		Nothing
 25006 ;; This function is called by:
 25007 ;;		Interrupt level 2
 25008 ;; This function uses a non-reentrant model
 25009 ;;
 25010                           
 25011                           	psect	text136
 25012  017FF4                     __ptext136:
 25013                           	opt callstack 0
 25014  017FF4                     _DMA1_DMASCNT_ISR:
 25015                           	opt callstack 14
 25016                           
 25017                           ;incstack = 0
 25018  017FF4  EE13  F356         	lfsr	1,___inthi_sp
 25019                           
 25020                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 25021  017FF8  0139               	movlb	57	; () banked
 25022  017FFA  91A2               	bcf	162,0,b	;volatile
 25023                           
 25024                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 25025  017FFC  0100               	movlb	0	; () banked
 25026  017FFE  979A               	bcf	_spi_link& (0+255),3,b	;volatile
 25027                           
 25028                           ; BSR set to: 0
 25029  018000  0011               	retfie		f
 25030  018002                     __end_of_DMA1_DMASCNT_ISR:
 25031                           	opt callstack 0
 25032                           
 25033 ;; *************** function _DMA1_DMADCNT_ISR *****************
 25034 ;; Defined at:
 25035 ;;		line 134 in file "mcc_generated_files/dma1.c"
 25036 ;; Parameters:    Size  Location     Type
 25037 ;;		None
 25038 ;; Auto vars:     Size  Location     Type
 25039 ;;		None
 25040 ;; Return value:  Size  Location     Type
 25041 ;;                  1    wreg      void 
 25042 ;; Registers used:
 25043 ;;		None
 25044 ;; Tracked objects:
 25045 ;;		On entry : 0/0
 25046 ;;		On exit  : 3F/39
 25047 ;;		Unchanged: 0/0
 25048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25053 ;;Total ram usage:        0 bytes
 25054 ;; Hardware stack levels used:    1
 25055 ;; This function calls:
 25056 ;;		Nothing
 25057 ;; This function is called by:
 25058 ;;		Interrupt level 2
 25059 ;; This function uses a non-reentrant model
 25060 ;;
 25061                           
 25062                           	psect	text137
 25063  01800C                     __ptext137:
 25064                           	opt callstack 0
 25065  01800C                     _DMA1_DMADCNT_ISR:
 25066                           	opt callstack 14
 25067                           
 25068                           ; BSR set to: 0
 25069                           ;incstack = 0
 25070  01800C  EE13  F356         	lfsr	1,___inthi_sp
 25071                           
 25072                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 25073  018010  0139               	movlb	57	; () banked
 25074  018012  93A2               	bcf	162,1,b	;volatile
 25075                           
 25076                           ; BSR set to: 57
 25077  018014  0011               	retfie		f
 25078  018016                     __end_of_DMA1_DMADCNT_ISR:
 25079                           	opt callstack 0
 25080                           
 25081 ;; *************** function _DMA1_DMAA_ISR *****************
 25082 ;; Defined at:
 25083 ;;		line 144 in file "mcc_generated_files/dma1.c"
 25084 ;; Parameters:    Size  Location     Type
 25085 ;;		None
 25086 ;; Auto vars:     Size  Location     Type
 25087 ;;		None
 25088 ;; Return value:  Size  Location     Type
 25089 ;;                  1    wreg      void 
 25090 ;; Registers used:
 25091 ;;		None
 25092 ;; Tracked objects:
 25093 ;;		On entry : 0/0
 25094 ;;		On exit  : 3F/39
 25095 ;;		Unchanged: 0/0
 25096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25101 ;;Total ram usage:        0 bytes
 25102 ;; Hardware stack levels used:    1
 25103 ;; This function calls:
 25104 ;;		Nothing
 25105 ;; This function is called by:
 25106 ;;		Interrupt level 2
 25107 ;; This function uses a non-reentrant model
 25108 ;;
 25109                           
 25110                           	psect	text138
 25111  018018                     __ptext138:
 25112                           	opt callstack 0
 25113  018018                     _DMA1_DMAA_ISR:
 25114                           	opt callstack 14
 25115                           
 25116                           ; BSR set to: 57
 25117                           ;incstack = 0
 25118  018018  EE13  F356         	lfsr	1,___inthi_sp
 25119                           
 25120                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 25121  01801C  0139               	movlb	57	; () banked
 25122  01801E  97A2               	bcf	162,3,b	;volatile
 25123                           
 25124                           ; BSR set to: 57
 25125  018020  0011               	retfie		f
 25126  018022                     __end_of_DMA1_DMAA_ISR:
 25127                           	opt callstack 0
 25128                           
 25129 ;; *************** function _DMA1_DMAOR_ISR *****************
 25130 ;; Defined at:
 25131 ;;		line 155 in file "mcc_generated_files/dma1.c"
 25132 ;; Parameters:    Size  Location     Type
 25133 ;;		None
 25134 ;; Auto vars:     Size  Location     Type
 25135 ;;		None
 25136 ;; Return value:  Size  Location     Type
 25137 ;;                  1    wreg      void 
 25138 ;; Registers used:
 25139 ;;		None
 25140 ;; Tracked objects:
 25141 ;;		On entry : 0/0
 25142 ;;		On exit  : 3F/39
 25143 ;;		Unchanged: 0/0
 25144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25149 ;;Total ram usage:        0 bytes
 25150 ;; Hardware stack levels used:    1
 25151 ;; This function calls:
 25152 ;;		Nothing
 25153 ;; This function is called by:
 25154 ;;		Interrupt level 2
 25155 ;; This function uses a non-reentrant model
 25156 ;;
 25157                           
 25158                           	psect	text139
 25159  018024                     __ptext139:
 25160                           	opt callstack 0
 25161  018024                     _DMA1_DMAOR_ISR:
 25162                           	opt callstack 14
 25163                           
 25164                           ; BSR set to: 57
 25165                           ;incstack = 0
 25166  018024  EE13  F356         	lfsr	1,___inthi_sp
 25167                           
 25168                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 25169  018028  0139               	movlb	57	; () banked
 25170  01802A  95A2               	bcf	162,2,b	;volatile
 25171                           
 25172                           ; BSR set to: 57
 25173  01802C  0011               	retfie		f
 25174  01802E                     __end_of_DMA1_DMAOR_ISR:
 25175                           	opt callstack 0
 25176                           
 25177                           ;
 25178                           ; Interrupt Vector Table @ 0x8
 25179                           ;
 25180                           
 25181                           	psect	ivt0x8
 25182  000008                     __pivt0x8:
 25183                           	opt callstack 0
 25184  000008                     ivt0x8_base:
 25185                           	opt callstack 0
 25186                           
 25187                           ; Vector 0 : SWINT
 25188  000008  6018               	dw	_Default_ISR shr (0+2)
 25189                           
 25190                           ; Vector 1 : HLVD
 25191  00000A  6018               	dw	_Default_ISR shr (0+2)
 25192                           
 25193                           ; Vector 2 : OSF
 25194  00000C  6018               	dw	_Default_ISR shr (0+2)
 25195                           
 25196                           ; Vector 3 : CSW
 25197  00000E  6018               	dw	_Default_ISR shr (0+2)
 25198                           
 25199                           ; Vector 4 : NVM
 25200  000010  6018               	dw	_Default_ISR shr (0+2)
 25201                           
 25202                           ; Vector 5 : SCAN
 25203  000012  6018               	dw	_Default_ISR shr (0+2)
 25204                           
 25205                           ; Vector 6 : CRC
 25206  000014  6018               	dw	_Default_ISR shr (0+2)
 25207                           
 25208                           ; Vector 7 : IOC
 25209  000016  6018               	dw	_Default_ISR shr (0+2)
 25210                           
 25211                           ; Vector 8 : INT0
 25212  000018  5FF5               	dw	_INT0_ISR shr (0+2)
 25213                           
 25214                           ; Vector 9 : ZCD
 25215  00001A  6018               	dw	_Default_ISR shr (0+2)
 25216                           
 25217                           ; Vector 10 : AD
 25218  00001C  5E07               	dw	_ADCC_ISR shr (0+2)
 25219                           
 25220                           ; Vector 11 : ADT
 25221  00001E  5C4C               	dw	_ADCC_ThresholdISR shr (0+2)
 25222                           
 25223                           ; Vector 12 : CMP1
 25224  000020  6018               	dw	_Default_ISR shr (0+2)
 25225                           
 25226                           ; Vector 13 : SMT1
 25227  000022  6018               	dw	_Default_ISR shr (0+2)
 25228                           
 25229                           ; Vector 14 : SMT1PRA
 25230  000024  6018               	dw	_Default_ISR shr (0+2)
 25231                           
 25232                           ; Vector 15 : SMT1PRW
 25233  000026  6018               	dw	_Default_ISR shr (0+2)
 25234                           
 25235                           ; Vector 16 : DMA1SCNT
 25236  000028  5FFD               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 25237                           
 25238                           ; Vector 17 : DMA1DCNT
 25239  00002A  6003               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 25240                           
 25241                           ; Vector 18 : DMA1OR
 25242  00002C  6009               	dw	_DMA1_DMAOR_ISR shr (0+2)
 25243                           
 25244                           ; Vector 19 : DMA1A
 25245  00002E  6006               	dw	_DMA1_DMAA_ISR shr (0+2)
 25246                           
 25247                           ; Vector 20 : SPI1RX
 25248  000030  6018               	dw	_Default_ISR shr (0+2)
 25249                           
 25250                           ; Vector 21 : SPI1TX
 25251  000032  6018               	dw	_Default_ISR shr (0+2)
 25252                           
 25253                           ; Vector 22 : SPI1
 25254  000034  6018               	dw	_Default_ISR shr (0+2)
 25255                           
 25256                           ; Vector 23 : I2C1RX
 25257  000036  6018               	dw	_Default_ISR shr (0+2)
 25258                           
 25259                           ; Vector 24 : I2C1TX
 25260  000038  6018               	dw	_Default_ISR shr (0+2)
 25261                           
 25262                           ; Vector 25 : I2C1
 25263  00003A  6018               	dw	_Default_ISR shr (0+2)
 25264                           
 25265                           ; Vector 26 : I2C1E
 25266  00003C  6018               	dw	_Default_ISR shr (0+2)
 25267                           
 25268                           ; Vector 27 : U1RX
 25269  00003E  5F26               	dw	_UART1_rx_vect_isr shr (0+2)
 25270                           
 25271                           ; Vector 28 : U1TX
 25272  000040  5F1C               	dw	_UART1_tx_vect_isr shr (0+2)
 25273                           
 25274                           ; Vector 29 : U1E
 25275  000042  6018               	dw	_Default_ISR shr (0+2)
 25276                           
 25277                           ; Vector 30 : U1
 25278  000044  6018               	dw	_Default_ISR shr (0+2)
 25279                           
 25280                           ; Vector 31 : TMR0
 25281  000046  6018               	dw	_Default_ISR shr (0+2)
 25282                           
 25283                           ; Vector 32 : TMR1
 25284  000048  6018               	dw	_Default_ISR shr (0+2)
 25285                           
 25286                           ; Vector 33 : TMR1G
 25287  00004A  6018               	dw	_Default_ISR shr (0+2)
 25288                           
 25289                           ; Vector 34 : TMR2
 25290  00004C  6018               	dw	_Default_ISR shr (0+2)
 25291                           
 25292                           ; Vector 35 : CCP1
 25293  00004E  6018               	dw	_Default_ISR shr (0+2)
 25294                           
 25295                           ; Vector 36 : Undefined
 25296  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 25297                           
 25298                           ; Vector 37 : NCO1
 25299  000052  6018               	dw	_Default_ISR shr (0+2)
 25300                           
 25301                           ; Vector 38 : CWG1
 25302  000054  6018               	dw	_Default_ISR shr (0+2)
 25303                           
 25304                           ; Vector 39 : CLC1
 25305  000056  6018               	dw	_Default_ISR shr (0+2)
 25306                           
 25307                           ; Vector 40 : INT1
 25308  000058  5FF9               	dw	_INT1_ISR shr (0+2)
 25309                           
 25310                           ; Vector 41 : CMP2
 25311  00005A  6018               	dw	_Default_ISR shr (0+2)
 25312                           
 25313                           ; Vector 42 : DMA2SCNT
 25314  00005C  6018               	dw	_Default_ISR shr (0+2)
 25315                           
 25316                           ; Vector 43 : DMA2DCNT
 25317  00005E  6018               	dw	_Default_ISR shr (0+2)
 25318                           
 25319                           ; Vector 44 : DMA2OR
 25320  000060  6018               	dw	_Default_ISR shr (0+2)
 25321                           
 25322                           ; Vector 45 : DMA2A
 25323  000062  6018               	dw	_Default_ISR shr (0+2)
 25324                           
 25325                           ; Vector 46 : I2C2RX
 25326  000064  6018               	dw	_Default_ISR shr (0+2)
 25327                           
 25328                           ; Vector 47 : I2C2TX
 25329  000066  6018               	dw	_Default_ISR shr (0+2)
 25330                           
 25331                           ; Vector 48 : I2C2
 25332  000068  6018               	dw	_Default_ISR shr (0+2)
 25333                           
 25334                           ; Vector 49 : I2C2E
 25335  00006A  6018               	dw	_Default_ISR shr (0+2)
 25336                           
 25337                           ; Vector 50 : U2RX
 25338  00006C  5F3A               	dw	_UART2_rx_vect_isr shr (0+2)
 25339                           
 25340                           ; Vector 51 : U2TX
 25341  00006E  5F30               	dw	_UART2_tx_vect_isr shr (0+2)
 25342                           
 25343                           ; Vector 52 : U2E
 25344  000070  6018               	dw	_Default_ISR shr (0+2)
 25345                           
 25346                           ; Vector 53 : U2
 25347  000072  6018               	dw	_Default_ISR shr (0+2)
 25348                           
 25349                           ; Vector 54 : TMR3
 25350  000074  6018               	dw	_Default_ISR shr (0+2)
 25351                           
 25352                           ; Vector 55 : TMR3G
 25353  000076  6018               	dw	_Default_ISR shr (0+2)
 25354                           
 25355                           ; Vector 56 : TMR4
 25356  000078  6018               	dw	_Default_ISR shr (0+2)
 25357                           
 25358                           ; Vector 57 : CCP2
 25359  00007A  6018               	dw	_Default_ISR shr (0+2)
 25360                           
 25361                           ; Vector 58 : Undefined
 25362  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 25363                           
 25364                           ; Vector 59 : CWG2
 25365  00007E  6018               	dw	_Default_ISR shr (0+2)
 25366                           
 25367                           ; Vector 60 : CLC2
 25368  000080  6018               	dw	_Default_ISR shr (0+2)
 25369                           
 25370                           ; Vector 61 : INT2
 25371  000082  6018               	dw	_Default_ISR shr (0+2)
 25372                           
 25373                           ; Vector 62 : Undefined
 25374  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 25375                           
 25376                           ; Vector 63 : Undefined
 25377  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 25378                           
 25379                           ; Vector 64 : Undefined
 25380  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 25381                           
 25382                           ; Vector 65 : Undefined
 25383  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 25384                           
 25385                           ; Vector 66 : Undefined
 25386  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 25387                           
 25388                           ; Vector 67 : Undefined
 25389  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 25390                           
 25391                           ; Vector 68 : Undefined
 25392  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 25393                           
 25394                           ; Vector 69 : Undefined
 25395  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 25396                           
 25397                           ; Vector 70 : TMR5
 25398  000094  5CE2               	dw	_TMR5_ISR shr (0+2)
 25399                           
 25400                           ; Vector 71 : TMR5G
 25401  000096  6018               	dw	_Default_ISR shr (0+2)
 25402                           
 25403                           ; Vector 72 : TMR6
 25404  000098  5FB7               	dw	_TMR6_ISR shr (0+2)
 25405                           
 25406                           ; Vector 73 : CCP3
 25407  00009A  6018               	dw	_Default_ISR shr (0+2)
 25408                           
 25409                           ; Vector 74 : CWG3
 25410  00009C  6018               	dw	_Default_ISR shr (0+2)
 25411                           
 25412                           ; Vector 75 : CLC3
 25413  00009E  6018               	dw	_Default_ISR shr (0+2)
 25414                           
 25415                           ; Vector 76 : Undefined
 25416  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 25417                           
 25418                           ; Vector 77 : Undefined
 25419  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 25420                           
 25421                           ; Vector 78 : Undefined
 25422  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 25423                           
 25424                           ; Vector 79 : Undefined
 25425  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 25426                           
 25427                           ; Vector 80 : CCP4
 25428  0000A8  6018               	dw	_Default_ISR shr (0+2)
 25429                           
 25430                           ; Vector 81 : CLC4
 25431  0000AA  6018               	dw	_Default_ISR shr (0+2)
 25432  0000AC                     ivt0x8_undefint:
 25433                           	opt callstack 0
 25434  0000AC  00FF               	reset	
 25435                           
 25436                           	psect	text140
 25437  000000                     __ptext140:
 25438                           	opt callstack 0
 25439                           
 25440                           	psect	param0
 25441  0000                     
 25442                           	psect	temp
 25443  000035                     btemp:
 25444                           	opt callstack 0
 25445  000035                     	ds	32
 25446  0000                     wtemp0	set	btemp
 25447  0000                     wtemp1	set	btemp+2
 25448  0000                     wtemp2	set	btemp+4
 25449  0000                     wtemp3	set	btemp+6
 25450  0000                     wtemp4	set	btemp+8
 25451  0000                     wtemp5	set	btemp+10
 25452  0000                     wtemp8	set	btemp+1
 25453  0000                     ttemp0	set	btemp
 25454  0000                     ttemp1	set	btemp+3
 25455  0000                     ttemp2	set	btemp+6
 25456  0000                     ttemp3	set	btemp+9
 25457  0000                     ttemp5	set	btemp+1
 25458  0000                     ttemp6	set	btemp+4
 25459  0000                     ttemp7	set	btemp+8
 25460  0000                     ltemp0	set	btemp
 25461  0000                     ltemp1	set	btemp+4
 25462  0000                     ltemp2	set	btemp+8
 25463  0000                     lltemp0	set	btemp
 25464  0000                     lltemp1	set	btemp+8
 25465  0000                     lltemp2	set	btemp+16
 25466  0000                     lltemp3	set	btemp+24
 25467                           tosu	equ	0x3FFF
 25468                           tosh	equ	0x3FFE
 25469                           tosl	equ	0x3FFD
 25470                           stkptr	equ	0x3FFC
 25471                           pclatu	equ	0x3FFB
 25472                           pclath	equ	0x3FFA
 25473                           pcl	equ	0x3FF9
 25474                           tblptru	equ	0x3FF8
 25475                           tblptrh	equ	0x3FF7
 25476                           tblptrl	equ	0x3FF6
 25477                           tablat	equ	0x3FF5
 25478                           prodh	equ	0x3FF4
 25479                           prodl	equ	0x3FF3
 25480                           indf0	equ	0x3FEF
 25481                           postinc0	equ	0x3FEE
 25482                           postdec0	equ	0x3FED
 25483                           preinc0	equ	0x3FEC
 25484                           plusw0	equ	0x3FEB
 25485                           fsr0h	equ	0x3FEA
 25486                           fsr0l	equ	0x3FE9
 25487                           wreg	equ	0x3FE8
 25488                           indf1	equ	0x3FE7
 25489                           postinc1	equ	0x3FE6
 25490                           postdec1	equ	0x3FE5
 25491                           preinc1	equ	0x3FE4
 25492                           plusw1	equ	0x3FE3
 25493                           fsr1h	equ	0x3FE2
 25494                           fsr1l	equ	0x3FE1
 25495                           bsr	equ	0x3FE0
 25496                           indf2	equ	0x3FDF
 25497                           postinc2	equ	0x3FDE
 25498                           postdec2	equ	0x3FDD
 25499                           preinc2	equ	0x3FDC
 25500                           plusw2	equ	0x3FDB
 25501                           fsr2h	equ	0x3FDA
 25502                           fsr2l	equ	0x3FD9
 25503                           status	equ	0x3FD8


Data Sizes:
    Strings     252
    Constant    144
    Data        212
    BSS         1387
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     129
    BANK1           256      0     244
    BANK2           256      0     253
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[80]), 
		 -> STR_15(CODE[9]), STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_33(CODE[4]), STR_32(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4691_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[24]), STR_22(CODE[15]), STR_21(CODE[15]), STR_20(CODE[15]), 
		 -> STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[13]), 
		 -> STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_15(CODE[9]), STR_14(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[4]), 
		 -> STR_3(CODE[4]), V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_15(CODE[9]), 
		 -> STR_14(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[4]), STR_3(CODE[4]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_15(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK2[189]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  291866
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                    _conv_raw_result
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                            6     0      6    6711
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _conv_raw_result                                      2     0      2    4916
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                     _get_raw_result
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  166935
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _get_raw_result
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FD       9       98.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F4       7       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      81       5       80.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     64A      58        0.0%
DATA                 0      0     64A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov  5 03:12:53 2019

                    _SPI1_Exchange8bit 7DBC               __end_of_set_display_info 7E16  
                                    _C 0100                                      _D 0400  
                                    _R 0060                                      _T FE73  
                                    _V 0200       __end_of_TMR5_SetInterruptHandler 7BD0  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
               __end_of_FVR_Initialize 804E                            __CFG_LVP$ON 000000  
                                  l171 7F7A                                    l701 7A38  
                                  l581 7A0C                                    l835 7DCA  
                                  _GIE 01FE97                                    _abs 75CA  
                                  _pad 62B2                __size_of_PMD_Initialize 0014  
                      _TMR2_Initialize 7F0E                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 7D56                     _UART1_Transmit_ISR 79E6  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 7D78  
                         __CFG_ZCD$OFF 000000                                   l1028 77A2  
                                 l1242 37A6                                   l1251 3952  
                                 l2222 691C                                   l1328 73EE  
                                 l1601 7E12                                   l2233 5DF0  
                                 l2226 5D1C                                   l2500 2D5E  
                                 l2260 5C8E                                   l1544 7800  
                                 l1464 6A86                                   l2512 2BEE  
                                 l1561 64D0                                   l1553 5284  
                                 l1650 57C2                                   l1483 786C  
                                 l1468 6E36                                   l1557 53E0  
                                 l2621 55DE                                   l1814 066A  
                                 l1729 630E                                   l2545 32D8  
                                 l6003 296A                                   l2652 760A  
                                 l2644 5B1C                                   l1749 33C0  
                                 l2581 25A2                                   l6005 297C  
                                 l6013 29B6                                   l2805 7054  
                                 l1829 0B1A                   _ADCC_StartConversion 7F94  
                                 l6103 2CBA                                   l6031 2A52  
                                 l1679 4F88                                   l2744 6190  
                                 l6113 2CE6                                   l6033 2A64  
                                 l6041 2AA0                                   l6009 2986  
                                 l6201 7044                                   l1785 123A  
                                 l2818 6FD0                                   l1938 1D78  
                                 l2683 4D22                                   l1867 4664  
                                 l6125 2D3E                                   l6117 2CFE  
                                 l6053 2B78                                   l6037 2A6E  
                                 l2790 5986                                   l6119 2D0E  
                                 l6071 2C10                                   l6063 2BD2  
                                 l6055 2B9E                                   l6231 41AE  
                                 l6215 4040                                   l1888 3BAC  
                                 l6073 2C22                                   l6091 2C5C  
                                 l6235 41F6                                   l6333 5124  
                                 l6325 5078                                   l6317 4FF0  
                                 l6405 2FB4                                   l6077 2C2E  
                                 l6173 5ABA                                   l6229 415E  
                                 l6159 75FA                                   l6431 30E0  
                                 l6423 307A                                   l6415 3044  
                                 l6087 2C56                                   l6183 5B14  
                                 l6239 4264                                   l6273 489A  
                                 l6425 308C                                   l6433 30E4  
                                 l6353 2DBE                                   l6177 5ABE  
                                 l6257 6FC0                                   l6363 2E14  
                                 l6603 23B2                                   l6515 1E18  
                                 l9003 00F0                                   l9011 0146  
                                 l6285 4934                                   l6445 312E  
                                 l6373 2E9C                                   l6365 2E44  
                                 l6621 2428                                   l6533 1EE6  
                                 l6517 1E1E                                   l6509 1DD8  
                                 l9021 01EA                                   l7413 5850  
                                 l8301 555C                                   l6279 48EE  
                                 l6463 31A4                                   l6439 3112  
                                 l6391 2F60                                   l6383 2EF2  
                                 l6359 2DFE                                   l6631 249C  
                                 l6607 23D8                                   l6535 1EEC  
                                 l6527 1EA6                                   l6519 1E4E  
                                 l9023 0216                                   l7415 58BC  
                                 l8311 55BE                                   l8153 76CC  
                                 l7361 4AD2                                   l6297 4A06  
                                 l6705 5F2E                                   l6721 61CC  
                                 l6473 3218                                   l6449 3154  
                                 l6385 2F22                                   l6641 250C  
                                 l6617 2422                                   l6545 1F3E  
                                 l6537 1F1C                                   l9201 0D90  
                                 l9025 022C                                   l7371 4B68  
                                 l7363 4AF4                                   l6491 32AC  
                                 l6459 319E                                   l6379 2EDC  
                                 l6651 256A                                   l6635 24E2  
                                 l5923 2642                                   l6803 5B78  
                                 l9115 06B8                                   l8149 76A2  
                                 l8229 7816                                   l7381 4BD0  
                                 l6725 61E4                                   l6717 61BA  
                                 l6493 32BC                                   l6485 3284  
                                 l6397 2F9A                                   l5941 26F2  
                                 l5917 2602                                   l6821 5C16  
                                 l9221 0F3A                                   l9125 077A  
                                 l9061 0470                                   l9029 0258  
                                 l8407 778A                                   l7383 4C0E  
                                 l6671 5E1E                                   l6743 6298  
                                 l6735 6264                                   l6479 3254  
                                 l6751 68A4                                   l5951 2748  
                                 l5935 26C0                                   l5927 2658  
                                 l9135 0926                                   l9119 06F0  
                                 l9055 0396                                   l9039 02FC  
                                 l9047 032A                                   l8503 55EA  
                                 l7377 4B94                                   l6649 2550  
                                 l5953 2778                                   l5929 2688  
                                 l9209 0EA2                                   l9081 057C  
                                 l9065 04D2                                   l9313 46D6  
                                 l8281 54BE                                   l8521 578A  
                                 l7387 4C76                                   l7379 4BAC  
                                 l5891 6C24                                   l6683 5E54  
                                 l6755 68E6                                   l5947 2732  
                                 l6827 5C26                                   l6819 5BFA  
                                 l9235 0FD6                                   l9083 058E  
                                 l9059 0406                                   l9331 47F8  
                                 l9323 4790                                   l8291 5528  
                                 l8283 54DC                                   l8515 56EE  
                                 l8381 7A34                                   l7397 4D12  
                                 l6677 5E34                                   l6773 5D6A  
                                 l6597 2396                                   l6829 5C3C  
                                 l9237 0FF0                                   l9173 0C32  
                                 l9157 0B12                                   l9149 0A48  
                                 l9077 0554                                   l9317 4706  
                                 l9309 469A                                   l9405 3ED8  
                                 l8293 553E                                   l8277 549A  
                                 l8269 542E                                   l8509 55FA  
                                 l8359 7A08                                   l6847 752C  
                                 l6759 691A                                   l6767 5CDA  
                                 l5959 279A                                   l9247 1092  
                                 l9159 0B34                                   l9327 47BC  
                                 l9351 3BD6                                   l9503 191C  
                                 l9431 1376                                   l8279 54A8  
                                 l8625 6D5C                                   l8617 6D4A  
                                 l5889 6C02                                   l6697 5EFA  
                                 l6785 5DEE                                   l6777 5DB8  
                                 l6793 755A                                   l9273 119A  
                                 l9257 10E2                                   l9185 0CBA  
                                 l9193 0D24                                   l9097 05F6  
                                 l9089 0594                                   l9345 3B9C  
                                 l8289 550A                                   l8529 579C  
                                 l8561 4F70                                   l8545 4D5C  
                                 l7683 7D2A                                   l9099 0602  
                                 l9523 1A7C                                   l9451 14E2  
                                 l9427 1326                                   l7763 7876  
                                 l5989 28D8                                   l9293 45E6  
                                 l9381 3D68                                   l9365 3C72  
                                 l9357 3C12                                   l9533 1B2A  
                                 l9453 14F8                                   l9429 1360  
                                 l9605 44FC                                   l8549 4D76  
                                 l5999 294A                                   l9703 63E8  
                                 l8905 6EEC                                   l9553 1D00  
                                 l9449 14A8                                   l9617 6AB8  
                                 l8907 6F18                                   l8931 33B0  
                                 l9547 1CA6                                   l9491 1830  
                                 l9563 1D24                                   l9619 6AF8  
                                 l9389 3DEE                                   l9557 1D04  
                                 l9469 165C                                   l9901 3790  
                                 l8943 3418                                   l9479 16F2  
                                 l9591 43E4                                   l9831 537C  
                                 l8857 60A6                                   l8873 6CCC  
                                 l8953 362A                                   l9585 4326  
                                 l9905 37AE                                   l8883 6306  
                                 l8939 33FA                                   l9499 18E8  
                                 l9819 5254                                   l9907 37C0  
                                 l8869 6C8E                                   l8893 639E  
                                 l8885 6318                                   l8973 36DC  
                                 l9597 444E                                   l9669 6B8E  
                                 l8879 62DE                                   l8991 00AC  
                                 STR_1 FF76                                   STR_2 FFA7  
                                 l8889 6354                                   l8977 3718  
                                 l9961 3A3E                                   STR_3 FFF2  
                                 STR_4 FF65                                   l8899 6710  
                                 l9947 3956                                   STR_5 FF87  
                                 STR_6 FFA7                                   l9949 397E  
                                 STR_7 FFF2                                   STR_8 FF54  
                                 STR_9 FFB6                                   l9969 3A62  
                                 l9977 3B22                                   l9899 3788  
                                 l9989 3B56                                   _LATA 003FBA  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 _LATD 003FBD                                   _LATE 003FBE  
                                 _LATF 003FBF                                   u5000 771C  
                                 u5010 6F7E                                   _T2PR 003FAB  
                                 u5020 6F80                                   u5101 48F4  
                                 u4230 6C52                                   u5110 492E  
                                 u5040 79AC                                   u5120 4960  
                                 u6000 5BA6                                   u5050 79AE  
                                 u5210 5040                                   u5140 4A3E  
                                 u5220 5072                                   u4420 29AE  
                                 u4260 797C                                   u4237 6C44  
                                 u6005 5B9C                                   u5070 4894  
                                 u5230 50A4                                   u4430 29CE  
                                 u4270 797E                                   u5160 4A90  
                                 u4425 299E                                   u5090 48EA  
                                 u5250 515C                                   u5410 310C  
                                 u4530 2BC0                                   u4370 28FE  
                                 u6050 5C44                                   _T6PR 003F93  
                                 u5500 322C                                   u4380 291E  
                                 u4700 794C                                   _PMD0 0039C0  
                                 u4381 2918                                   _PMD1 0039C1  
                                 u7110 4CBC                                   u5270 51AE  
                                 u5190 4FEA                                   u5510 3268  
                                 u4630 2CAA                                   u6070 5C6E  
                                 u4710 794E                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   u6080 7508  
                                 u7120 4CBE                                   u5600 1F2C  
                                 _PMD4 0039C4                                   _PMD5 0039C5  
                                 u6090 7528                                   u5450 3196  
                                 u4570 2C34                                   u4490 2A96  
                                 _PMD6 0039C6                                   u4635 2C9A  
                                 _PMD7 0039C7                                   u4660 2CCA  
                                 u4820 5B0C                                   u4900 4024  
                                 u5710 2476                                   u4590 2C4E  
                                 u4398 2920                                   u4830 5B0E  
                                 u5615 20C0                                   u4495 2A86  
                                 u4815 5AEE                                   u4760 75DE  
                                 u5800 5F1A                                   u5720 24B0  
                                 u5625 2188                                   u7090 4B64  
                                 u5490 31F2                                   u5730 24F6  
                                 u4770 5A3E                                   u5715 2466  
                                 u5635 2350                                   u8300 609A  
                                 u4940 4104                                   u4860 7002  
                                 u4925 405E                                   u5910 6916  
                                 u5670 241A                                   u4926 4064  
                                 u4870 7004                                   u7190 5948  
                                 u5495 31E2                                   u4775 5A34  
                                 u4927 4072                                   u8320 6116  
                                 u4960 41DC                                   u4945 40FA  
                                 u5850 6210                                   u4890 3FD8  
                                 u9050 10B8                                   u9210 3B82  
                                 u8500 363E                                   u8420 3312  
                                 u5780 5E80                                   u4965 41D2  
                                 u8430 3314                                   u5870 6284  
                                 u9070 116E                                   u9150 46FC  
                                 u4990 771A                                   u9310 3DEA  
                                 u7615 71DA                                   u8511 366E  
                                 u4895 3FCE                                   u7616 71DC  
                                 u7608 71A8                                   u8520 3684  
                                 u9080 1170                                   u8600 00DA  
                                 u9160 4742                                   u9320 3E0A  
                                 u9240 3C6A                                   u8521 3682  
                                 u8530 3698                                   u8450 3384  
                                 u5970 7556                                   u9250 3CBE  
                                 u9410 13BE                                   u9331 3E3A  
                                 u9315 3DCC                                   u8540 369C  
                                 u5980 5B58                                   u8380 678A  
                                 u9340 3E50                                   u9260 3CC0  
                                 u9420 13C0                                   u9341 3E4E  
                                 u7590 71A6                                   u8470 3396  
                                 u5990 5B6C                                   u8630 0194  
                                 u9190 481E                                   u9350 3E64  
                                 u9430 13E6                                   u7575 7756  
                                 u9167 4734                                   u8560 36B2  
                                 u8720 050E                                   u8640 0196  
                                 u9360 3E68                                   u9280 3D1E  
                                 u5985 5B4E                                   u8490 33E6  
                                 u9290 3D20                                   u9610 1B7E  
                                 u9530 1746                                   u8387 677C  
                                 u8820 0648                                   u9460 1540  
                                 u9700 6B6E                                   u7780 5552  
                                 u8750 0562                                   u8670 02A6  
                                 u9470 1542                                   u8680 02A8  
                                 u9560 19D6                                   u9480 1568  
                                 u9800 53CE                                   u9570 19D8  
                                 _PLLR 01CEE0                                   u8780 05C6  
                                 u9670 4570                                   u8890 0A18  
                                 u8990 0EE4                                   u9790 53CC  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                     __end_of_ADCC_ISR 7854                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01A4                                   _atoi 4AB8  
                                 _ctoa 6ECE                                   _main 3762  
                                 _dtoa 32E2                                   _seed 00BD  
                                 _prec 0020                                   _nout 001C  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 457A  
                                 btemp 0035                                   _xtoa 3B68  
               __end_of_check_adc_scan 8046                          ___fpclassifyf 5990  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0026  
            __end_of_SPI1_Exchange8bit 7DDA                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 7C98                           ___param_bank 000000  
                   ?_UART1_rx_vect_isr 0055                       __end_of_INT0_ISR 7FE2  
                     __end_of_INT1_ISR 7FF2         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 6A8E          __end_of_OSCILLATOR_Initialize 7F80  
                                PRLOCK 0039EF                        __end_of___aodiv 4AB8  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                      __end_of___fladd 2D68                                  _ADCLK 003EFF  
                      __end_of___aomod 51D2                                  _ADPCH 003EF1  
                      __end_of___fldiv 32E2                                  _ADREF 003EFD  
                      __end_of___awdiv 5F48                        __end_of___flneg 7584  
                                STR_10 FFB6                                  STR_11 FFFC  
                                STR_12 FFF9                                  STR_20 FF98  
                                STR_21 FF98                                  STR_22 FF98  
                                STR_14 FFC3                                  STR_15 FFD9  
                                STR_23 FF03                                  STR_40 FFF6  
                                STR_32 FFE2                                  STR_16 FF2E  
                                STR_17 FF2E                                  STR_33 FFEA  
                                STR_25 FF41                          __CFG_WDTE$OFF 000000  
                                STR_42 FFF6                                  STR_18 FFCF  
                                STR_26 FF1B                                  STR_19 FFCF  
                                STR_36 FFE6                        __end_of___awmod 62B2  
                                STR_37 FFEE                                  _ADRPT 003EEC  
                      __end_of___flmul 25AC                        __end_of___flsub 75CA  
                      __end_of___fltol 5C98                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _T2CON 003FAC  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T2HLT 003FAD                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95             _ADCC_ADTI_InterruptHandler 0004  
                                _T2TMR 003FAA                                  _U1UIR 003DF8  
                                _T2RST 003FAF                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 00DC                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 8060  
              __size_of_clear_adc_scan 0006      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 7C70                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 73E4                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 7EF6                           _DMA1CON1bits 003BFD  
                                _flags 0022                                  _fputc 6076  
           __size_of_send_lcd_cmd_long 0028                        __end_of_isalpha 7726  
                                _fputs 6C7E                        __end_of_isdigit 79B8  
                   __CFG_MCLRE$EXTMCLR 000000                     ?_UART1_tx_vect_isr 0055  
                                _srand 78C0                                  _width 001E  
                                _putch 7EA8                        __end_of_islower 7958  
                      __end_of_isspace 753C               _INT1_SetInterruptHandler 7BD0  
                      __end_of_isupper 7988                                  pclath 003FFA  
                                tablat 003FF5                                  ltemp0 0035  
                                ltemp1 0039                                  ltemp2 003D  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 0035  
                                ttemp1 0038                                  ttemp2 003B  
                                ttemp3 003E                                  ttemp5 0036  
                                ttemp6 0039                                  ttemp7 003D  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 7B80  
          _UART1_SetRxInterruptHandler 7B58                                  wtemp0 0035  
                                wtemp1 0037                                  wtemp2 0039  
                                wtemp3 003B                                  wtemp4 003D  
                                wtemp5 003F                                  wtemp8 0036  
                      __end_of_sprintf 65DE                        __end_of_tolower 705E  
                      __end_of_strncmp 5990                        __end_of_toupper 6FDA  
                  ??_UART1_tx_vect_isr 00DC              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 7CBE               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 7656                  __end_of_ringBufS_init 7AE0  
                      __initialization 679C                      _UART2_rx_vect_isr 7CE8  
                         __end_of_atoi 4D2C                           __end_of_ctoa 6F56  
                         __end_of_main 3B68                           __end_of_dtoa 3762  
                         __end_of_stoa 4838                           __end_of_xtoa 3F22  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 0055  
              __end_of_TMR2_Initialize 7F26               __size_of_DMA2_Initialize 005A  
             _TMR5_SetInterruptHandler 7BA8                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 00DC              __end_of_UART1_tx_vect_isr 7C96  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 7A3E  
                      _PWM8_Initialize 7F54                       _UART1_Initialize 7262  
                    _UART2_tx_vect_isr 7CC0                     _UART2_Transmit_ISR 7A12  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                         _start_adc_scan 71FE  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                     _PWM8_LoadDutyValue 7726  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 0055                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RC3PPS 003A13                                 _RD1PPS 003A19  
                               _RB6PPS 003A0E                                 i1l1045 73D6  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                       __CFG_WDTCCS$SC 000000                                 _FVRCON 003EC1  
                     _mode_lamp_bright 7FC4                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 7D64  
                               u392_40 7E1E           __size_of_eaDogM_WriteCommand 000E  
                               u392_46 7E20                                 u368_48 7D86  
                               _OSCFRQ 0039DF                                 u806_44 6D7C  
                               u806_45 6D76                                 u808_40 6D98  
                               u808_46 6D9A                                 u765_20 7ECA  
                               u765_26 7ECC                                 u792_28 7D42  
                               u789_48 7DA8                       __end_of___xxtofl 55E8  
             __end_of_send_lcd_cmd_dma 74EA                    ??_UART2_tx_vect_isr 00DC  
            __end_of_UART2_rx_vect_isr 7D0E             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 8002                       _UART2_Initialize 7328  
                               _WaitMs 7854                        _conv_raw_result 55E8  
                         _CCPTMRS1bits 003F5F   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___flge 5C98                                 ___fleq 6862  
                    _ADCC_ThresholdISR 7130                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 6DAC                                 _efgtoa 0000  
                               _floorf 3F22                     ?_ADCC_ThresholdISR 0055  
                               _memset 428E                   __size_of_help_button 0038  
                               clear_0 67E8                                 clear_1 67FC  
                               clear_2 680E                                 clear_3 681A  
                               clear_4 6826                                 clear_5 6832  
                               clear_6 683E                                 clear_7 684A  
                               _printf 72C6                     _eaDogM_WriteString 6B36  
                               _strcpy 66C8                              ?_ADCC_ISR 0055  
                               _strlen 6BDC                     __size_of_TimerDone 0024  
                      _ADCC_Initialize 70C8                         _PMD_Initialize 7F80  
            __end_of_UART2_tx_vect_isr 7CE6                                 lltemp0 0035  
                               lltemp1 003D                                 lltemp2 0045  
                               lltemp3 004D                    ??_ADCC_ThresholdISR 0056  
               __end_of_start_adc_scan 7262                           __mediumconst FE72  
                               preinc2 003FDC                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 743E                       __end_of_vfprintf 6B36  
                           _StartTimer 77A8          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 769C                      _SYSTEM_Initialize 7610  
                           __accesstop 0060                __end_of__initialization 685C  
                            ?_INT0_ISR 0055                              ?_INT1_ISR 0055  
                 __end_of_display_help 803E                   __end_of_display_info 8036  
            __end_of_CLKREF_Initialize 800C                          ___rparam_used 000000  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 7768  
                _set_temp_display_help 7FA6              __end_of_ADCC_ThresholdISR 7198  
               __end_of_ringBufS_flush 6E3E                         __pcstackCOMRAM 0055  
                           ___inthi_sp 0F56                             ___intlo_sp 17AB  
                         __pidataBANK0 7F26                           __pidataBANK2 6926  
                            ?_TMR5_ISR 0055                              ?_TMR6_ISR 0055  
                       ivt0x8_undefint 00AC                          __end_of_fputc 619A  
                        __end_of_fputs 6D16                          __end_of_srand 78F4  
                __end_of_TMR5_CallBack 7D56                          __end_of_putch 7EC2  
              __end_of_PWM8_Initialize 7F6A                __end_of_TMR6_Initialize 7A68  
                    _adc_int_t_handler 6D16                 __end_of_PMD_Initialize 7F94  
                           ??_ADCC_ISR 0055                  __end_of_TMR6_CallBack 7DBC  
                    lp_filter@lp_speed 00B2            __size_of_EXT_INT_Initialize 0034  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 8018  
                       _clear_adc_scan 804E                 __size_of_mode_lamp_dim 0018  
             _UART2_RxInterruptHandler 0013              __end_of_SYSTEM_Initialize 7656  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
                           __pbssBANK2 02BD                             __pbssBANK3 0300  
                           __pbssBANK4 0400                             __pbssBANK5 0500  
                           __pbssBANK6 0600                             _check_help 51D2  
              __end_of_conv_raw_result 57C8                  _INT0_InterruptHandler 0019  
                           ??_INT0_ISR 0055                             ??_INT1_ISR 0055  
                    __end_of_TimerDone 7D32                       _DMA1_DMADCNT_ISR 800C  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                   __size_of_lp_filter 0266                  __end_of_wait_lcd_done 7E8C  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 7BA8  
              __end_of_ADCC_Initialize 7130                             ??_TMR5_ISR 00DD  
            __end_of_adc_int_t_handler 6DAC                             ??_TMR6_ISR 00DC  
                              _ADFLTRH 003EE7                                _ADFLTRL 003EE6  
                              _DMA1DSA 003BF0                                _DMA2DSA 003BD0  
                              _DMA1DSZ 003BEE                                _DMA2DSZ 003BCE  
                              _DMA1SSA 003BF9                                _DMA2SSA 003BD9  
 __end_of_ADCC_SetADTIInterruptHandler 7C48  __size_of_ADCC_SetADTIInterruptHandler 0028  
         _ADCC_SetADTIInterruptHandler 7C20                                _DMA1SSZ 003BF7  
                              _DMA2SSZ 003BD7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                      _UART1_Receive_ISR 7E34  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
               __end_of_clear_adc_scan 8054                         ?_DMA1_DMAA_ISR 0055  
                     _DMA1_DMASCNT_ISR 7FF4                                _U1ERRIE 003DFA  
                   __size_of_set_vterm 001C                                _U1ERRIR 003DF9  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                           ?_Default_ISR 0055  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 0B3E                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                                _PWM8DCH 003F61  
                              _PWM8DCL 003F60                                _PWM8CON 003F62  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 77A8  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
           __size_of_ADCC_ThresholdISR 0068                          _mode_lamp_dim 7EF6  
                              __Lparam 0000               __end_of_UART1_Initialize 72C6  
                      __size_of_WaitMs 0036                        __size_of___flge 0162  
                      __size_of___fleq 00C4                                ___aodiv 4838  
                              ___fladd 25AC                                ___aomod 4F92  
                              ___fldiv 2D68                                ___awdiv 5DFA  
                              ___flneg 753C                                ___awmod 619A  
                              ___flmul 1D82                                ___flsub 7584  
                              ___fltol 5B26              __end_of_UART1_Receive_ISR 7E52  
                      __size_of_efgtoa 1244                        __size_of_floorf 036C  
                 __end_of_init_display 66C8                                __pcinit 679C  
             __end_of_mode_lamp_bright 7FD2                        __size_of_memset 02EC  
             __size_of_adc_int_handler 001E                    _eaDogM_WriteCommand 7FB6  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
                              __ptext0 3762                                __ptext1 71FE  
                              __ptext2 7F94                                __ptext3 78C0  
                              __ptext4 4D2C                                __ptext5 65DE  
                              __ptext6 7A68                                __ptext7 7A90  
                              __ptext8 7DBC                                __ptext9 7AB8  
                    _UART2_Receive_ISR 7E52                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strcpy 00D4  
                      __size_of_strlen 00A2                  _OSCILLATOR_Initialize 7F6A  
                              us517999 4AA2                           __size_of_abs 0046  
                              us528999 51C0                           __size_of_pad 0114  
                              us910999 458C                                _isalpha 76E2  
                              _isdigit 7988                                us841999 32FC  
                              us923999 3BE8                                _mode_sw 0028  
                    __end_of_lp_filter 4F92                                _islower 7928  
                              _isspace 74EA                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 7386  
                              _isupper 7958             __size_of_SYSTEM_Initialize 0046  
                              _sprintf 64D4                                _tolower 6FDA  
                __size_of_display_help 0008                  __size_of_display_info 0008  
                              _strncmp 57C8                                _toupper 6F56  
                 end_of_initialization 685C    __end_of_UART1_SetTxInterruptHandler 7B58  
          _UART1_SetTxInterruptHandler 7B30    __end_of_UART2_SetRxInterruptHandler 7B30  
          _UART2_SetRxInterruptHandler 7B08                      __end_of_set_vterm 7EA8  
                    __end_of_vfpfcnvrt 1D82                              _SPI1TCNTL 003D12  
                              postdec0 003FED                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
           __size_of_adc_int_t_handler 0096                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 8060              __end_of_UART2_Receive_ISR 7E70  
                       wdtdelay@dcount 00B6                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 00DD                  _INT1_InterruptHandler 0016  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 7B80  
                         _display_help 8036                  _TMR5_InterruptHandler 00BA  
                         _display_info 802E   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 0038    __end_of_ADCC_SetADIInterruptHandler 7C70  
          _ADCC_SetADIInterruptHandler 7C48                             _update_lcd 63C6  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 705E                        _SPI1_Initialize 7F3E  
                __end_of_get_vterm_ptr 79E6                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                         __end_of_WaitMs 788A  
         __end_of_INTERRUPT_Initialize 71FE                             _vterm_dump 5F48  
                       __end_of___flge 5DFA                         __end_of___fleq 6926  
 __end_of_INT0_DefaultInterruptHandler 8068  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 8066             __size_of_UART1_Receive_ISR 001E  
                      _DMA2_Initialize 743E                         __end_of_efgtoa 1244  
                    __size_of_TMR5_ISR 005C                      __size_of_TMR6_ISR 001A  
                  __size_of_check_help 0212                         __end_of_floorf 428E  
          __size_of_UART2_Transmit_ISR 002C                             floorf@F524 00A6  
                       __end_of_memset 457A                         __end_of_printf 7328  
             __end_of_DMA1_DMADCNT_ISR 8016            __size_of_PWM8_LoadDutyValue 0042  
                __end_of_INT0_CallBack 7D78                         __end_of_strcpy 679C  
                       __end_of_strlen 6C7E                    start_initialization 679C  
 __end_of_TMR5_DefaultInterruptHandler 7EDC  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 7EC2        __size_of_PIN_MANAGER_Initialize 0090  
                          __end_of_abs 7610                  __end_of_INT1_CallBack 7D9A  
            __size_of_set_display_info 001E                            __end_of_pad 63C6  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 7AB8  
        __size_of_ADCC_StartConversion 0012                             ivt0x8_base 0008  
                        _uart1RxBuffer 0500                  __end_of___fpclassifyf 5B26  
                        _uart2RxBuffer 0600                          _uart1TxBuffer 02BD  
             __end_of_DMA1_DMASCNT_ISR 8002                          _uart2TxBuffer 0300  
                       _DMA1_DMAOR_ISR 8024                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 00A6  
                            _TimerDone 7D0E                          _ringBufS_init 7AB8  
                          __pdataBANK0 00C5                            __pdataBANK2 0200  
           __size_of_UART2_Receive_ISR 001E             __end_of_EXT_INT_Initialize 7928  
                  __end_of_help_button 781C        __end_of_eaDogM_WriteStringAtPos 78C0  
              __end_of_DMA1_Initialize 70C8                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 7C20                          __pcstackBANK0 00DC  
             __size_of_TMR2_Initialize 0018                      __size_of___xxtofl 0204  
              __end_of_SPI1_Initialize 7F54               _UART1_RxInterruptHandler 000D  
             _UART2_TxInterruptHandler 0010                              __end_of_T FF03  
            __size_of_ringBufS_put_dma 00AA                           _init_display 65DE  
               __end_of_DMA1_DMAOR_ISR 802E                 __size_of_TMR5_CallBack 0024  
                _TMR6_InterruptHandler 0001                 __size_of_TMR6_CallBack 0022  
              __end_of_DMA2_Initialize 7498                 _PIN_MANAGER_Initialize 6E3E  
                 __end_of_wait_lcd_set 805A                          __pmediumconst FE72  
                            __ptext100 78F4                              __ptext101 7BD0  
                            __ptext110 7768                              __ptext102 7BF8  
                            __ptext111 7D32                              __ptext103 743E  
                            __ptext120 781C                              __ptext112 7EC2  
                            __ptext104 705E                              __ptext121 6D16  
                            __ptext113 7FD4                              __ptext105 8002  
                            __ptext130 7A12                              __ptext122 806A  
                            __ptext114 7D56                              __ptext106 70C8  
                            __ptext131 7CE8                              __ptext123 7E16  
                            __ptext115 8066                              __ptext107 7C20  
                            __ptext140 0000                              __ptext132 7E52  
                            __ptext124 7130                              __ptext116 7FE4  
                            __ptext108 7C48                              __ptext133 7EDC  
                            __ptext125 7C70                              __ptext117 7D78  
                            __ptext109 7388                              __ptext134 7D9A  
                            __ptext126 79E6                              __ptext118 8068  
                            __ptext135 769C                              __ptext127 7C98  
                            __ptext119 8060                              __ptext136 7FF4  
                            __ptext128 7E34                              __ptext137 800C  
                            __ptext129 7CC0                              __ptext138 8018  
                            __ptext139 8024                     __end_of_StartTimer 77E4  
                    __size_of_wdtdelay 005A                      __size_of_vfprintf 00A8  
                             _ADCC_ISR 781C                 __CFG_BBSIZE$BBSIZE_512 000000  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA2CON0 003BDC  
                             _DMA2CON1 003BDD                               _DMA2AIRQ 003BDE  
                             _DMA1SIRQ 003BFF                               _DMA2SIRQ 003BDF  
              __size_of_get_raw_result 001E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 0124                               _T2CLKCON 003FAE  
                       __size_of_fputs 0098                              _lp_filter 4D2C  
                       __size_of_srand 0034                         __size_of_putch 001A  
                 _INTERRUPT_Initialize 7198                               _T6CLKCON 003F96  
                      ?_DMA1_DMAOR_ISR 0055                               _INT0_ISR 7FD4  
                             _INT1_ISR 7FE4                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0082                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR8bits 003988  
                             _PIE6bits 003996                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0383  
                            _ring_buf2 0340                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _PIR4bits 0039A4                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             _PIR5bits 0039A5                               i2u810_48 7164  
                             i2u810_49 7178                               i2u398_48 7838  
                             i2u398_49 784C                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
                             i2u982_48 7C82                               i2u984_48 7CAA  
                             i2u986_48 7CD2                               i2u988_48 7CFA  
                            _set_vterm 7E8C                    __size_of_update_lcd 010E  
                          _help_button 77E4             __end_of_UART1_Transmit_ISR 7A12  
                             _TMR5_ISR 7388                               _TMR6_ISR 7EDC  
                            _port_data 00CC                              _vfpfcnvrt 1244  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 7D32  
                           _ADCON0bits 003EF8                     __end_of_check_help 53E4  
                            _start_lcd 805A                __size_of_FVR_Initialize 0008  
            __size_of_send_lcd_cmd_dma 0052                          _TMR6_CallBack 7D9A  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                     _set_display_info 7DF8               __size_of_PWM8_Initialize 0016  
             __size_of_TMR6_Initialize 002A                            _INTCON0bits 003FD2  
                            copy_data0 67B0                              copy_data1 67D2  
             _INT0_SetInterruptHandler 7BF8                    __size_of_vterm_dump 012E  
               _uart1TxBufferRemaining 0032    __end_of_UART2_SetTxInterruptHandler 7B08  
          _UART2_SetTxInterruptHandler 7AE0                               __Hparam0 0000  
                         _uart1RxCount 002F                           _uart2RxCount 0029  
                             __Lparam0 0000       __size_of_eaDogM_WriteStringAtPos 0036  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_check_adc_scan 0008  
                   __CFG_BOREN$SBORDIS 000000               __size_of_conv_raw_result 01E0  
                        _wait_lcd_done 7E70                           _send_lcd_cmd 7A90  
                     __size_of___aodiv 0280                       __size_of___fladd 07BC  
                     __size_of___aomod 0240                        _adc_int_handler 7E16  
                     __size_of___fldiv 057A                       __size_of___awdiv 014E  
                     __size_of___flneg 0048                       __size_of___awmod 0118  
                     __size_of___flmul 082A                       __size_of___flsub 0046  
                     __size_of___fltol 0172                  __end_of_DMA1_DMAA_ISR 8022  
                   ___fpclassifyf@F463 00AA   __size_of_UART1_SetRxInterruptHandler 0028  
                      lp_filter@smooth 0168                               ___xxtofl 53E4  
                    ?_DMA1_DMADCNT_ISR 0055               __size_of_ADCC_Initialize 0068  
          __end_of_eaDogM_WriteCommand 7FC4                       __size_of_isalpha 0044  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_islower 0030                       __size_of_isspace 0052  
                   ??_DMA1_DMADCNT_ISR 00DD                               __ptext10 7FB6  
                             __ptext11 55E8                               __ptext20 63C6  
                             __ptext12 7DDA                               __ptext21 788A  
                             __ptext13 53E4                               __ptext30 72C6  
                             __ptext22 7498                               __ptext14 804E  
                             __ptext31 6A8E                               __ptext23 7E70  
                             __ptext15 51D2                               __ptext40 6FDA  
                             __ptext32 1244                               __ptext24 73E4  
                             __ptext16 5F48                               __ptext41 7958  
                             __ptext33 3B68                               __ptext25 6B36  
                             __ptext17 64D4                               __ptext50 5C98  
                             __ptext42 66C8                               __ptext34 6F56  
                             __ptext26 8054                               __ptext18 79B8  
                             __ptext51 6862                               __ptext43 3F22  
                             __ptext35 7928                               __ptext27 805A  
                             __ptext19 7854                               __ptext60 62B2  
                             __ptext52 2D68                               __ptext44 5990  
                             __ptext36 76E2                               __ptext28 6DAC  
                             __ptext61 6BDC                               __ptext53 619A  
                             __ptext45 5B26                               __ptext37 57C8  
                             __ptext29 428E                               __ptext70 7FA6  
                             __ptext62 6C7E                               __ptext54 5DFA  
                             __ptext46 7584                               __ptext38 457A  
                             __ptext71 7DF8                               __ptext63 6076  
                             __ptext55 32E2                               __ptext47 25AC  
                             __ptext39 0000                               __ptext80 803E  
                             __ptext72 7EF6                               __ptext64 7EA8  
                             __ptext56 75CA                               __ptext48 753C  
                             __ptext81 7610                               __ptext73 7FC4  
                             __ptext65 69E4                               __ptext57 4F92  
                             __ptext49 1D82                               __ptext90 7656  
                             __ptext82 7328                               __ptext74 7726  
                             __ptext66 4AB8                               __ptext58 4838  
                             __ptext91 7BA8                               __ptext83 7AE0  
                             __ptext75 77E4                               __ptext67 74EA  
                             __ptext59 6ECE                               __ptext92 7F0E  
                             __ptext84 7B08                               __ptext76 7D0E  
                             __ptext68 7988                               __ptext93 7F3E  
                             __ptext85 7262                               __ptext77 77A8  
                             __ptext69 7E8C                               __ptext94 7F54  
                             __ptext86 7B30                               __ptext78 802E  
                             __ptext95 7F80                               __ptext87 7B58  
                             __ptext79 8036                               __ptext96 6E3E  
                             __ptext88 7A3E                               __ptext97 7F6A  
                             __ptext89 7B80                               __ptext98 7198  
                             __ptext99 8046                       __size_of_isupper 0030  
                     __size_of_sprintf 010A                       __size_of_tolower 0084  
                     __size_of_strncmp 01C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 69E4                          __size_of_atoi 0274  
                        __size_of_ctoa 0088                          __size_of_main 0406  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                          __size_of_xtoa 03BA  
                 __CFG_WDTCWS$WDTCWS_7 000000                      ?_DMA1_DMASCNT_ISR 0055  
                          _IVTLOCKbits 003FD4               __size_of_TMR5_WriteTimer 0040  
            _ADCC_ADI_InterruptHandler 0007                              stoa@F1166 00C5  
                   ??_DMA1_DMASCNT_ISR 00DD           __end_of_ADCC_StartConversion 7FA6  
                             _spi_link 009A                               _wdtdelay 73E4  
           __end_of_UART2_Transmit_ISR 7A3E                               _vfprintf 6A8E  
           __end_of_PWM8_LoadDutyValue 7768   __end_of_INT1_DefaultInterruptHandler 806A  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 8068  
                        ??_Default_ISR 0055                            _uart1RxHead 0031  
               __size_of_get_vterm_ptr 002E                            _uart1TxHead 0034  
                          _uart2RxHead 002B                            _uart1RxTail 0030  
                       _get_raw_result 7DDA                            _uart2TxHead 002E  
                          _uart1TxTail 0033                            _uart2RxTail 002A  
                          _uart2TxTail 002D                           _wait_lcd_set 8054  
                   _EXT_INT_Initialize 78F4   __end_of_TMR6_DefaultInterruptHandler 76E2  
__size_of_TMR6_DefaultInterruptHandler 0046           _TMR6_DefaultInterruptHandler 769C  
 __end_of_ADCC_DefaultInterruptHandler 806C  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 806A                               intlevel1 0000  
                             intlevel2 0000                      _send_lcd_cmd_long 7A68  
       __size_of_set_temp_display_help 0010          __end_of_set_temp_display_help 7FB6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 6BDC  
                __end_of_mode_lamp_dim 7F0E                __end_of_adc_int_handler 7E34  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF                 __size_of_INT1_CallBack 0022  
                   __end_of_update_lcd 64D4                 _uart2TxBufferRemaining 002C  
                       _FVR_Initialize 8046                          lp_filter@lp_x 00AE  
               __end_of_get_raw_result 7DF8                       _send_lcd_cmd_dma 7498  
               __size_of___fpclassifyf 0196                  TMR5_ISR@CountCallBack 0024  
     __end_of_INT1_SetInterruptHandler 7BF8              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 00DD               _UART1_TxInterruptHandler 000A  
            __end_of_send_lcd_cmd_long 7A90                __size_of_start_adc_scan 0064  
                  __end_of_Default_ISR 8066         __end_of_PIN_MANAGER_Initialize 6ECE  
            __size_of_mode_lamp_bright 000E                     __end_of_vterm_dump 6076  
              _eaDogM_WriteStringAtPos 788A                          _get_vterm_ptr 79B8  
                       _check_adc_scan 803E              __size_of_UART2_Initialize 005E  
